begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'Request'
op|','
name|'Response'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HealthCheckMiddleware
name|'class'
name|'HealthCheckMiddleware'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Healthcheck middleware used for monitoring.\n\n    If the path is /healthcheck, it will respond 200 with "OK" as the body.\n\n    If the optional config parameter "disable_path" is set, and a file is\n    present at that path, it will respond 503 with "DISABLED BY FILE" as the\n    body.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'app'
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'='
name|'conf'
newline|'\n'
name|'self'
op|'.'
name|'disable_path'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'disable_path'"
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|GET
dedent|''
name|'def'
name|'GET'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a 200 response with "OK" in the body."""'
newline|'\n'
name|'return'
name|'Response'
op|'('
name|'request'
op|'='
name|'req'
op|','
name|'body'
op|'='
string|'"OK"'
op|','
name|'content_type'
op|'='
string|'"text/plain"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|DISABLED
dedent|''
name|'def'
name|'DISABLED'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns a 503 response with "DISABLED BY FILE" in the body."""'
newline|'\n'
name|'return'
name|'Response'
op|'('
name|'request'
op|'='
name|'req'
op|','
name|'status'
op|'='
number|'503'
op|','
name|'body'
op|'='
string|'"DISABLED BY FILE"'
op|','
nl|'\n'
name|'content_type'
op|'='
string|'"text/plain"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'('
name|'env'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'req'
op|'.'
name|'path'
op|'=='
string|"'/healthcheck'"
op|':'
newline|'\n'
indent|'                '
name|'handler'
op|'='
name|'self'
op|'.'
name|'GET'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'disable_path'
name|'and'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'disable_path'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'handler'
op|'='
name|'self'
op|'.'
name|'DISABLED'
newline|'\n'
dedent|''
name|'return'
name|'handler'
op|'('
name|'req'
op|')'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'UnicodeError'
op|':'
newline|'\n'
comment|'# definitely, this is not /healthcheck'
nl|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'app'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|filter_factory
dedent|''
dedent|''
name|'def'
name|'filter_factory'
op|'('
name|'global_conf'
op|','
op|'**'
name|'local_conf'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'conf'
op|'='
name|'global_conf'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'update'
op|'('
name|'local_conf'
op|')'
newline|'\n'
nl|'\n'
DECL|function|healthcheck_filter
name|'def'
name|'healthcheck_filter'
op|'('
name|'app'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'HealthCheckMiddleware'
op|'('
name|'app'
op|','
name|'conf'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'healthcheck_filter'
newline|'\n'
dedent|''
endmarker|''
end_unit
