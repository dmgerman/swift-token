begin_unit
comment|'# Copyright (c) 2010-2013 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
string|'""" In-Memory Object Server for Swift """'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'from'
name|'swift'
name|'import'
name|'gettext_'
name|'as'
name|'_'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'Timeout'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'bufferedhttp'
name|'import'
name|'http_connect'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'ConnectionTimeout'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'http'
name|'import'
name|'is_success'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
op|'.'
name|'mem_diskfile'
name|'import'
name|'InMemoryFileSystem'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'server'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ObjectController
name|'class'
name|'ObjectController'
op|'('
name|'server'
op|'.'
name|'ObjectController'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Implements the WSGI application for the Swift In-Memory Object Server.\n    """'
newline|'\n'
nl|'\n'
DECL|member|setup
name|'def'
name|'setup'
op|'('
name|'self'
op|','
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Nothing specific to do for the in-memory version.\n\n        :param conf: WSGI configuration parameter\n        """'
newline|'\n'
name|'self'
op|'.'
name|'_filesystem'
op|'='
name|'InMemoryFileSystem'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_diskfile
dedent|''
name|'def'
name|'get_diskfile'
op|'('
name|'self'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Utility method for instantiating a DiskFile object supporting a given\n        REST API.\n\n        An implementation of the object server that wants to use a different\n        DiskFile class would simply over-ride this method to provide that\n        behavior.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_filesystem'
op|'.'
name|'get_diskfile'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|async_update
dedent|''
name|'def'
name|'async_update'
op|'('
name|'self'
op|','
name|'op'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'host'
op|','
name|'partition'
op|','
nl|'\n'
name|'contdevice'
op|','
name|'headers_out'
op|','
name|'objdevice'
op|','
name|'policy_idx'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sends or saves an async update.\n\n        :param op: operation performed (ex: \'PUT\', or \'DELETE\')\n        :param account: account name for the object\n        :param container: container name for the object\n        :param obj: object name\n        :param host: host that the container is on\n        :param partition: partition that the container is on\n        :param contdevice: device name that the container is on\n        :param headers_out: dictionary of headers to send in the container\n                            request\n        :param objdevice: device name that the object is in\n        :param policy_idx: the associated storage policy index\n        """'
newline|'\n'
name|'headers_out'
op|'['
string|"'user-agent'"
op|']'
op|'='
string|"'obj-server %s'"
op|'%'
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
newline|'\n'
name|'full_path'
op|'='
string|"'/%s/%s/%s'"
op|'%'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'if'
name|'all'
op|'('
op|'['
name|'host'
op|','
name|'partition'
op|','
name|'contdevice'
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'ConnectionTimeout'
op|'('
name|'self'
op|'.'
name|'conn_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'ip'
op|','
name|'port'
op|'='
name|'host'
op|'.'
name|'rsplit'
op|'('
string|"':'"
op|','
number|'1'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'http_connect'
op|'('
name|'ip'
op|','
name|'port'
op|','
name|'contdevice'
op|','
name|'partition'
op|','
name|'op'
op|','
nl|'\n'
name|'full_path'
op|','
name|'headers_out'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'response'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'is_success'
op|'('
name|'response'
op|'.'
name|'status'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'return'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'ERROR Container update failed: %(status)d '"
nl|'\n'
string|"'response from %(ip)s:%(port)s/%(dev)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'status'"
op|':'
name|'response'
op|'.'
name|'status'
op|','
string|"'ip'"
op|':'
name|'ip'
op|','
string|"'port'"
op|':'
name|'port'
op|','
nl|'\n'
string|"'dev'"
op|':'
name|'contdevice'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'ERROR container update failed with '"
nl|'\n'
string|"'%(ip)s:%(port)s/%(dev)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'ip'"
op|':'
name|'ip'
op|','
string|"'port'"
op|':'
name|'port'
op|','
string|"'dev'"
op|':'
name|'contdevice'
op|'}'
op|')'
newline|'\n'
comment|"# FIXME: For now don't handle async updates"
nl|'\n'
nl|'\n'
DECL|member|REPLICATE
dedent|''
dedent|''
dedent|''
name|'def'
name|'REPLICATE'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handle REPLICATE requests for the Swift Object Server.  This is used\n        by the object replicator to get hashes for directories.\n        """'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|app_factory
dedent|''
dedent|''
name|'def'
name|'app_factory'
op|'('
name|'global_conf'
op|','
op|'**'
name|'local_conf'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""paste.deploy app factory for creating WSGI object server apps"""'
newline|'\n'
name|'conf'
op|'='
name|'global_conf'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'update'
op|'('
name|'local_conf'
op|')'
newline|'\n'
name|'return'
name|'ObjectController'
op|'('
name|'conf'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
