begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'sleep'
op|','
name|'Timeout'
newline|'\n'
name|'import'
name|'json'
newline|'\n'
name|'from'
name|'paste'
op|'.'
name|'deploy'
name|'import'
name|'loadapp'
newline|'\n'
name|'import'
name|'struct'
newline|'\n'
name|'from'
name|'sys'
name|'import'
name|'exc_info'
newline|'\n'
name|'import'
name|'zlib'
newline|'\n'
name|'from'
name|'gettext'
name|'import'
name|'gettext'
name|'as'
name|'_'
newline|'\n'
name|'from'
name|'zlib'
name|'import'
name|'compressobj'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'quote'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'http'
name|'import'
name|'HTTP_NOT_FOUND'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'Request'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|UnexpectedResponse
name|'class'
name|'UnexpectedResponse'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Exception raised on invalid responses to InternalClient.make_request().\n\n    :param message: Exception message.\n    :param resp: The unexpected response.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'message'
op|','
name|'resp'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'UnexpectedResponse'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'message'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'resp'
op|'='
name|'resp'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|CompressingFileReader
dedent|''
dedent|''
name|'class'
name|'CompressingFileReader'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Wrapper for file object to compress object while reading.\n\n    Can be used to wrap file objects passed to InternalClient.upload_object().\n\n    Used in testing of InternalClient.\n\n    :param file_obj: File object to wrap.\n    :param compresslevel:  Compression level, defaults to 9.\n    :param chunk_size:  Size of chunks read when iterating using object,\n                        defaults to 4096.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'file_obj'
op|','
name|'compresslevel'
op|'='
number|'9'
op|','
name|'chunk_size'
op|'='
number|'4096'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_f'
op|'='
name|'file_obj'
newline|'\n'
name|'self'
op|'.'
name|'_compressor'
op|'='
name|'compressobj'
op|'('
nl|'\n'
name|'compresslevel'
op|','
name|'zlib'
op|'.'
name|'DEFLATED'
op|','
op|'-'
name|'zlib'
op|'.'
name|'MAX_WBITS'
op|','
name|'zlib'
op|'.'
name|'DEF_MEM_LEVEL'
op|','
nl|'\n'
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'done'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'first'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'crc32'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'total_size'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'chunk_size'
op|'='
name|'chunk_size'
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Reads a chunk from the file object.\n\n        Params are passed directly to the underlying file object\'s read().\n\n        :returns: Compressed chunk from file object.\n        """'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'done'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"''"
newline|'\n'
dedent|''
name|'x'
op|'='
name|'self'
op|'.'
name|'_f'
op|'.'
name|'read'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
name|'if'
name|'x'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'crc32'
op|'='
name|'zlib'
op|'.'
name|'crc32'
op|'('
name|'x'
op|','
name|'self'
op|'.'
name|'crc32'
op|')'
op|'&'
number|'0xffffffffL'
newline|'\n'
name|'self'
op|'.'
name|'total_size'
op|'+='
name|'len'
op|'('
name|'x'
op|')'
newline|'\n'
name|'compressed'
op|'='
name|'self'
op|'.'
name|'_compressor'
op|'.'
name|'compress'
op|'('
name|'x'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'compressed'
op|':'
newline|'\n'
indent|'                '
name|'compressed'
op|'='
name|'self'
op|'.'
name|'_compressor'
op|'.'
name|'flush'
op|'('
name|'zlib'
op|'.'
name|'Z_SYNC_FLUSH'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'compressed'
op|'='
name|'self'
op|'.'
name|'_compressor'
op|'.'
name|'flush'
op|'('
name|'zlib'
op|'.'
name|'Z_FINISH'
op|')'
newline|'\n'
name|'crc32'
op|'='
name|'struct'
op|'.'
name|'pack'
op|'('
string|'"<L"'
op|','
name|'self'
op|'.'
name|'crc32'
op|'&'
number|'0xffffffffL'
op|')'
newline|'\n'
name|'size'
op|'='
name|'struct'
op|'.'
name|'pack'
op|'('
string|'"<L"'
op|','
name|'self'
op|'.'
name|'total_size'
op|'&'
number|'0xffffffffL'
op|')'
newline|'\n'
name|'footer'
op|'='
name|'crc32'
op|'+'
name|'size'
newline|'\n'
name|'compressed'
op|'+='
name|'footer'
newline|'\n'
name|'self'
op|'.'
name|'done'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'first'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'first'
op|'='
name|'False'
newline|'\n'
name|'header'
op|'='
string|"'\\037\\213\\010\\000\\000\\000\\000\\000\\002\\377'"
newline|'\n'
name|'compressed'
op|'='
name|'header'
op|'+'
name|'compressed'
newline|'\n'
dedent|''
name|'return'
name|'compressed'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|next
dedent|''
name|'def'
name|'next'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'chunk'
op|'='
name|'self'
op|'.'
name|'read'
op|'('
name|'self'
op|'.'
name|'chunk_size'
op|')'
newline|'\n'
name|'if'
name|'chunk'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'chunk'
newline|'\n'
dedent|''
name|'raise'
name|'StopIteration'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InternalClient
dedent|''
dedent|''
name|'class'
name|'InternalClient'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    An internal client that uses a swift proxy app to make requests to Swift.\n\n    This client will exponentially slow down for retries.\n\n    :param conf_path: Full path to proxy config.\n    :param user_agent: User agent to be sent to requests to Swift.\n    :param request_tries: Number of tries before InternalClient.make_request()\n                          gives up.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'conf_path'
op|','
name|'user_agent'
op|','
name|'request_tries'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'loadapp'
op|'('
string|"'config:'"
op|'+'
name|'conf_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_agent'
op|'='
name|'user_agent'
newline|'\n'
name|'self'
op|'.'
name|'request_tries'
op|'='
name|'request_tries'
newline|'\n'
nl|'\n'
DECL|member|make_request
dedent|''
name|'def'
name|'make_request'
op|'('
nl|'\n'
name|'self'
op|','
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|','
name|'acceptable_statuses'
op|','
name|'body_file'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Makes a request to Swift with retries.\n\n        :param method: HTTP method of request.\n        :param path: Path of request.\n        :param headers: Headers to be sent with request.\n        :param acceptable_statuses: List of acceptable statuses for request.\n        :param body_file: Body file to be passed along with request,\n                          defaults to None.\n\n        :returns : Response object on success.\n\n        :raises UnexpectedResponse: Exception raised when make_request() fails\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
name|'dict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'user-agent'"
op|']'
op|'='
name|'self'
op|'.'
name|'user_agent'
newline|'\n'
name|'resp'
op|'='
name|'exc_type'
op|'='
name|'exc_value'
op|'='
name|'exc_traceback'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'attempt'
name|'in'
name|'xrange'
op|'('
name|'self'
op|'.'
name|'request_tries'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
name|'path'
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'if'
name|'body_file'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'hasattr'
op|'('
name|'body_file'
op|','
string|"'seek'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'body_file'
op|'.'
name|'seek'
op|'('
number|'0'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'.'
name|'body_file'
op|'='
name|'body_file'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
name|'in'
name|'acceptable_statuses'
name|'or'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
name|'in'
name|'acceptable_statuses'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'resp'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'exc_type'
op|','
name|'exc_value'
op|','
name|'exc_traceback'
op|'='
name|'exc_info'
op|'('
op|')'
newline|'\n'
dedent|''
name|'sleep'
op|'('
number|'2'
op|'**'
op|'('
name|'attempt'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'UnexpectedResponse'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Unexpected response: %s'"
op|')'
op|'%'
name|'resp'
op|'.'
name|'status'
op|','
name|'resp'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'exc_type'
op|':'
newline|'\n'
comment|'# To make pep8 tool happy, in place of raise t, v, tb:'
nl|'\n'
indent|'            '
name|'raise'
name|'exc_type'
op|'('
op|'*'
name|'exc_value'
op|'.'
name|'args'
op|')'
op|','
name|'None'
op|','
name|'exc_traceback'
newline|'\n'
nl|'\n'
DECL|member|_get_metadata
dedent|''
dedent|''
name|'def'
name|'_get_metadata'
op|'('
nl|'\n'
name|'self'
op|','
name|'path'
op|','
name|'metadata_prefix'
op|'='
string|"''"
op|','
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Gets metadata by doing a HEAD on a path and using the metadata_prefix\n        to get values from the headers returned.\n\n        :param path: Path to do HEAD on.\n        :param metadata_prefix: Used to filter values from the headers\n                                returned.  Will strip that prefix from the\n                                keys in the dict returned.  Defaults to \'\'.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2,).\n\n        :returns : A dict of metadata with metadata_prefix stripped from keys.\n                   Keys will be lowercase.\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'HEAD'"
op|','
name|'path'
op|','
op|'{'
op|'}'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'metadata_prefix'
op|'='
name|'metadata_prefix'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
name|'metadata_prefix'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'metadata'
op|'['
name|'k'
op|'['
name|'len'
op|'('
name|'metadata_prefix'
op|')'
op|':'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|']'
op|'='
name|'v'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'metadata'
newline|'\n'
nl|'\n'
DECL|member|_iter_items
dedent|''
name|'def'
name|'_iter_items'
op|'('
nl|'\n'
name|'self'
op|','
name|'path'
op|','
name|'marker'
op|'='
string|"''"
op|','
name|'end_marker'
op|'='
string|"''"
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
name|'HTTP_NOT_FOUND'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns an iterator of items from a json listing.  Assumes listing has\n        \'name\' key defined and uses markers.\n\n        :param path: Path to do GET on.\n        :param marker: Prefix of first desired item, defaults to \'\'.\n        :param end_marker: Last item returned will be \'less\' than this,\n                           defaults to \'\'.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2, HTTP_NOT_FOUND).\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'%s?format=json&marker=%s&end_marker=%s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'quote'
op|'('
name|'marker'
op|')'
op|','
name|'quote'
op|'('
name|'end_marker'
op|')'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'resp'
op|'.'
name|'status_int'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'data'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'data'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'for'
name|'item'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'                '
name|'yield'
name|'item'
newline|'\n'
dedent|''
name|'marker'
op|'='
name|'data'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'name'"
op|']'
op|'.'
name|'encode'
op|'('
string|"'utf8'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|make_path
dedent|''
dedent|''
name|'def'
name|'make_path'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|'='
name|'None'
op|','
name|'obj'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a swift path for a request quoting and utf-8 encoding the path\n        parts as need be.\n\n        :param account: swift account\n        :param container: container, defaults to None\n        :param obj: object, defaults to None\n\n        :raises ValueError: Is raised if obj is specified and container is\n                            not.\n        """'
newline|'\n'
nl|'\n'
name|'path'
op|'='
string|"'/v1/%s'"
op|'%'
name|'quote'
op|'('
name|'account'
op|')'
newline|'\n'
name|'if'
name|'container'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'+='
string|"'/%s'"
op|'%'
name|'quote'
op|'('
name|'container'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'obj'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'+='
string|"'/%s'"
op|'%'
name|'quote'
op|'('
name|'obj'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'obj'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|"'Object specified without container'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'path'
newline|'\n'
nl|'\n'
DECL|member|_set_metadata
dedent|''
name|'def'
name|'_set_metadata'
op|'('
nl|'\n'
name|'self'
op|','
name|'path'
op|','
name|'metadata'
op|','
name|'metadata_prefix'
op|'='
string|"''"
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sets metadata on path using metadata_prefix to set values in headers of\n        POST request.\n\n        :param path: Path to do POST on.\n        :param metadata: Dict of metadata to set.\n        :param metadata_prefix: Prefix used to set metadata values in headers\n                                of requests, used to prefix keys in metadata\n                                when setting metadata, defaults to \'\'.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2,).\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'metadata'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
name|'metadata_prefix'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'['
string|"'%s%s'"
op|'%'
op|'('
name|'metadata_prefix'
op|','
name|'k'
op|')'
op|']'
op|'='
name|'v'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'POST'"
op|','
name|'path'
op|','
name|'headers'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
nl|'\n'
comment|'# account methods'
nl|'\n'
nl|'\n'
DECL|member|iter_containers
dedent|''
name|'def'
name|'iter_containers'
op|'('
nl|'\n'
name|'self'
op|','
name|'account'
op|','
name|'marker'
op|'='
string|"''"
op|','
name|'end_marker'
op|'='
string|"''"
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
name|'HTTP_NOT_FOUND'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns an iterator of containers dicts from an account.\n\n        :param account: Account on which to do the container listing.\n        :param marker: Prefix of first desired item, defaults to \'\'.\n        :param end_marker: Last item returned will be \'less\' than this,\n                           defaults to \'\'.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2, HTTP_NOT_FOUND).\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_iter_items'
op|'('
name|'path'
op|','
name|'marker'
op|','
name|'end_marker'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_account_info
dedent|''
name|'def'
name|'get_account_info'
op|'('
nl|'\n'
name|'self'
op|','
name|'account'
op|','
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
name|'HTTP_NOT_FOUND'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns (container_count, object_count) for an account.\n\n        :param account: Account on which to get the information.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2, HTTP_NOT_FOUND).\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'HEAD'"
op|','
name|'path'
op|','
op|'{'
op|'}'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'('
name|'int'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-account-container-count'"
op|','
number|'0'
op|')'
op|')'
op|','
nl|'\n'
name|'int'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-account-object-count'"
op|','
number|'0'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_account_metadata
dedent|''
name|'def'
name|'get_account_metadata'
op|'('
nl|'\n'
name|'self'
op|','
name|'account'
op|','
name|'metadata_prefix'
op|'='
string|"''"
op|','
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Gets account metadata.\n\n        :param account: Account on which to get the metadata.\n        :param metadata_prefix: Used to filter values from the headers\n                                returned.  Will strip that prefix from the\n                                keys in the dict returned.  Defaults to \'\'.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2,).\n\n        :returns : Returns dict of account metadata.  Keys will be lowercase.\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_metadata'
op|'('
name|'path'
op|','
name|'metadata_prefix'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_account_metadata
dedent|''
name|'def'
name|'set_account_metadata'
op|'('
nl|'\n'
name|'self'
op|','
name|'account'
op|','
name|'metadata'
op|','
name|'metadata_prefix'
op|'='
string|"''"
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sets account metadata.  A call to this will add to the account\n        metadata and not overwrite all of it with values in the metadata dict.\n        To clear an account metadata value, pass an empty string as\n        the value for the key in the metadata dict.\n\n        :param account: Account on which to get the metadata.\n        :param metadata: Dict of metadata to set.\n        :param metadata_prefix: Prefix used to set metadata values in headers\n                                of requests, used to prefix keys in metadata\n                                when setting metadata, defaults to \'\'.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2,).\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_set_metadata'
op|'('
nl|'\n'
name|'path'
op|','
name|'metadata'
op|','
name|'metadata_prefix'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
nl|'\n'
comment|'# container methods'
nl|'\n'
nl|'\n'
DECL|member|container_exists
dedent|''
name|'def'
name|'container_exists'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Checks to see if a container exists.\n\n        :param account: The container\'s account.\n        :param container: Container to check.\n\n        :returns : True if container exists, false otherwise.\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'HEAD'"
op|','
name|'path'
op|','
op|'{'
op|'}'
op|','
op|'('
number|'2'
op|','
name|'HTTP_NOT_FOUND'
op|')'
op|')'
newline|'\n'
name|'return'
name|'not'
name|'resp'
op|'.'
name|'status_int'
op|'=='
name|'HTTP_NOT_FOUND'
newline|'\n'
nl|'\n'
DECL|member|create_container
dedent|''
name|'def'
name|'create_container'
op|'('
nl|'\n'
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Creates container.\n\n        :param account: The container\'s account.\n        :param container: Container to create.\n        :param headers: Defaults to empty dict.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2,).\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
name|'headers'
name|'or'
op|'{'
op|'}'
newline|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'PUT'"
op|','
name|'path'
op|','
name|'headers'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_container
dedent|''
name|'def'
name|'delete_container'
op|'('
nl|'\n'
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
name|'HTTP_NOT_FOUND'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Deletes a container.\n\n        :param account: The container\'s account.\n        :param container: Container to delete.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2, HTTP_NOT_FOUND).\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'DELETE'"
op|','
name|'path'
op|','
op|'{'
op|'}'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_container_metadata
dedent|''
name|'def'
name|'get_container_metadata'
op|'('
nl|'\n'
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'metadata_prefix'
op|'='
string|"''"
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Gets container metadata.\n\n        :param account: The container\'s account.\n        :param container: Container to get metadata on.\n        :param metadata_prefix: Used to filter values from the headers\n                                returned.  Will strip that prefix from the\n                                keys in the dict returned.  Defaults to \'\'.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2,).\n\n        :returns : Returns dict of container metadata.  Keys will be lowercase.\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_metadata'
op|'('
name|'path'
op|','
name|'metadata_prefix'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
nl|'\n'
DECL|member|iter_objects
dedent|''
name|'def'
name|'iter_objects'
op|'('
nl|'\n'
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'marker'
op|'='
string|"''"
op|','
name|'end_marker'
op|'='
string|"''"
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
name|'HTTP_NOT_FOUND'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns an iterator of object dicts from a container.\n\n        :param account: The container\'s account.\n        :param container: Container to iterate objects on.\n        :param marker: Prefix of first desired item, defaults to \'\'.\n        :param end_marker: Last item returned will be \'less\' than this,\n                           defaults to \'\'.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2, HTTP_NOT_FOUND).\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_iter_items'
op|'('
name|'path'
op|','
name|'marker'
op|','
name|'end_marker'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_container_metadata
dedent|''
name|'def'
name|'set_container_metadata'
op|'('
nl|'\n'
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'metadata'
op|','
name|'metadata_prefix'
op|'='
string|"''"
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sets container metadata.  A call to this will add to the container\n        metadata and not overwrite all of it with values in the metadata dict.\n        To clear a container metadata value, pass an empty string as the value\n        for the key in the metadata dict.\n\n        :param account: The container\'s account.\n        :param container: Container to set metadata on.\n        :param metadata: Dict of metadata to set.\n        :param metadata_prefix: Prefix used to set metadata values in headers\n                                of requests, used to prefix keys in metadata\n                                when setting metadata, defaults to \'\'.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2,).\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_set_metadata'
op|'('
nl|'\n'
name|'path'
op|','
name|'metadata'
op|','
name|'metadata_prefix'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
nl|'\n'
comment|'# object methods'
nl|'\n'
nl|'\n'
DECL|member|delete_object
dedent|''
name|'def'
name|'delete_object'
op|'('
nl|'\n'
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
name|'HTTP_NOT_FOUND'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Deletes an object.\n\n        :param account: The object\'s account.\n        :param container: The object\'s container.\n        :param obj: The object.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2, HTTP_NOT_FOUND).\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'DELETE'"
op|','
name|'path'
op|','
op|'{'
op|'}'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_object_metadata
dedent|''
name|'def'
name|'get_object_metadata'
op|'('
nl|'\n'
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'metadata_prefix'
op|'='
string|"''"
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Gets object metadata.\n\n        :param account: The object\'s account.\n        :param container: The object\'s container.\n        :param obj: The object.\n        :param metadata_prefix: Used to filter values from the headers\n                                returned.  Will strip that prefix from the\n                                keys in the dict returned.  Defaults to \'\'.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2,).\n\n        :returns : Dict of object metadata.\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_get_metadata'
op|'('
name|'path'
op|','
name|'metadata_prefix'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
nl|'\n'
DECL|member|iter_object_lines
dedent|''
name|'def'
name|'iter_object_lines'
op|'('
nl|'\n'
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'headers'
op|'='
name|'None'
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns an iterator of object lines from an uncompressed or compressed\n        text object.\n\n        Uncompress object as it is read if the object\'s name ends with \'.gz\'.\n\n        :param account: The object\'s account.\n        :param container: The object\'s container.\n        :param objec_namet: The object.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2,).\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
name|'headers'
name|'or'
op|'{'
op|'}'
newline|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'GET'"
op|','
name|'path'
op|','
name|'headers'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'last_part'
op|'='
string|"''"
newline|'\n'
name|'compressed'
op|'='
name|'obj'
op|'.'
name|'endswith'
op|'('
string|"'.gz'"
op|')'
newline|'\n'
comment|'# magic in the following zlib.decompressobj argument is courtesy of'
nl|'\n'
comment|'# Python decompressing gzip chunk-by-chunk'
nl|'\n'
comment|'# http://stackoverflow.com/questions/2423866'
nl|'\n'
name|'d'
op|'='
name|'zlib'
op|'.'
name|'decompressobj'
op|'('
number|'16'
op|'+'
name|'zlib'
op|'.'
name|'MAX_WBITS'
op|')'
newline|'\n'
name|'for'
name|'chunk'
name|'in'
name|'resp'
op|'.'
name|'app_iter'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'compressed'
op|':'
newline|'\n'
indent|'                '
name|'chunk'
op|'='
name|'d'
op|'.'
name|'decompress'
op|'('
name|'chunk'
op|')'
newline|'\n'
dedent|''
name|'parts'
op|'='
name|'chunk'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'parts'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'last_part'
op|'='
name|'last_part'
op|'+'
name|'parts'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'parts'
op|'['
number|'0'
op|']'
op|'='
name|'last_part'
op|'+'
name|'parts'
op|'['
number|'0'
op|']'
newline|'\n'
name|'for'
name|'part'
name|'in'
name|'parts'
op|'['
op|':'
op|'-'
number|'1'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'yield'
name|'part'
newline|'\n'
dedent|''
name|'last_part'
op|'='
name|'parts'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'last_part'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'last_part'
newline|'\n'
nl|'\n'
DECL|member|set_object_metadata
dedent|''
dedent|''
name|'def'
name|'set_object_metadata'
op|'('
nl|'\n'
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'metadata'
op|','
nl|'\n'
name|'metadata_prefix'
op|'='
string|"''"
op|','
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sets an object\'s metadata.  The object\'s metadata will be overwritten\n        by the values in the metadata dict.\n\n        :param account: The object\'s account.\n        :param container: The object\'s container.\n        :param obj: The object.\n        :param metadata: Dict of metadata to set.\n        :param metadata_prefix: Prefix used to set metadata values in headers\n                                of requests, used to prefix keys in metadata\n                                when setting metadata, defaults to \'\'.\n        :param acceptable_statuses: List of status for valid responses,\n                                    defaults to (2,).\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_set_metadata'
op|'('
nl|'\n'
name|'path'
op|','
name|'metadata'
op|','
name|'metadata_prefix'
op|','
name|'acceptable_statuses'
op|')'
newline|'\n'
nl|'\n'
DECL|member|upload_object
dedent|''
name|'def'
name|'upload_object'
op|'('
nl|'\n'
name|'self'
op|','
name|'fobj'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        :param fobj: File object to read object\'s content from.\n        :param account: The object\'s account.\n        :param container: The object\'s container.\n        :param obj: The object.\n        :param headers: Headers to send with request, defaults ot empty dict.\n\n        :raises UnexpectedResponse: Exception raised when requests fail\n                                    to get a response with an acceptable status\n        :raises Exception: Exception is raised when code fails in an\n                           unexpected way.\n        """'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
name|'dict'
op|'('
name|'headers'
name|'or'
op|'{'
op|'}'
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'Transfer-Encoding'"
op|']'
op|'='
string|"'chunked'"
newline|'\n'
name|'path'
op|'='
name|'self'
op|'.'
name|'make_path'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'make_request'
op|'('
string|"'PUT'"
op|','
name|'path'
op|','
name|'headers'
op|','
op|'('
number|'2'
op|','
op|')'
op|','
name|'fobj'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
