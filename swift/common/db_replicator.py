begin_unit
comment|'# Copyright (c) 2010 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'__future__'
name|'import'
name|'with_statement'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'math'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'GreenPool'
op|','
name|'sleep'
op|','
name|'Timeout'
newline|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'green'
name|'import'
name|'subprocess'
newline|'\n'
name|'import'
name|'simplejson'
newline|'\n'
name|'from'
name|'webob'
name|'import'
name|'Response'
newline|'\n'
name|'from'
name|'webob'
op|'.'
name|'exc'
name|'import'
name|'HTTPNotFound'
op|','
name|'HTTPNoContent'
op|','
name|'HTTPAccepted'
op|','
name|'HTTPInsufficientStorage'
op|','
name|'HTTPBadRequest'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'get_logger'
op|','
name|'whataremyips'
op|','
name|'storage_directory'
op|','
name|'renamer'
op|','
name|'mkdirs'
op|','
name|'lock_parent_directory'
op|','
name|'unlink_older_than'
op|','
name|'LoggerFileObject'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'ring'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'bufferedhttp'
name|'import'
name|'BufferedHTTPConnection'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'DriveNotMounted'
op|','
name|'ConnectionTimeout'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quarantine_db
name|'def'
name|'quarantine_db'
op|'('
name|'object_file'
op|','
name|'server_type'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    In the case that a corrupt file is found, move it to a quarantined area to\n    allow replication to fix it.\n\n    :param object_file: path to corrupt file\n    :param server_type: type of file that is corrupt\n                        (\'container\' or \'account\')\n    """'
newline|'\n'
name|'object_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'object_file'
op|')'
newline|'\n'
name|'quarantine_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'object_dir'
op|','
string|"'..'"
op|','
nl|'\n'
string|"'..'"
op|','
string|"'..'"
op|','
string|"'..'"
op|','
string|"'quarantined'"
op|','
name|'server_type'
op|'+'
string|"'s'"
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'object_dir'
op|')'
op|')'
op|')'
newline|'\n'
name|'renamer'
op|'('
name|'object_dir'
op|','
name|'quarantine_dir'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ReplConnection
dedent|''
name|'class'
name|'ReplConnection'
op|'('
name|'BufferedHTTPConnection'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Helper to simplify REPLICATEing to a remote server.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'partition'
op|','
name|'hash_'
op|','
name|'logger'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'logger'
newline|'\n'
name|'self'
op|'.'
name|'node'
op|'='
name|'node'
newline|'\n'
name|'BufferedHTTPConnection'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
string|"'%(ip)s:%(port)s'"
op|'%'
name|'node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'path'
op|'='
string|"'/%s/%s/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'partition'
op|','
name|'hash_'
op|')'
newline|'\n'
nl|'\n'
DECL|member|replicate
dedent|''
name|'def'
name|'replicate'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Make an HTTP REPLICATE request\n\n        :param args: list of json-encodable objects\n\n        :returns: httplib response object\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'body'
op|'='
name|'simplejson'
op|'.'
name|'dumps'
op|'('
name|'args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'request'
op|'('
string|"'REPLICATE'"
op|','
name|'self'
op|'.'
name|'path'
op|','
name|'body'
op|','
nl|'\n'
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/json'"
op|'}'
op|')'
newline|'\n'
name|'response'
op|'='
name|'self'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'response'
op|'.'
name|'data'
op|'='
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'response'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
nl|'\n'
string|"'ERROR reading HTTP response from %s'"
op|'%'
name|'self'
op|'.'
name|'node'
op|')'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Replicator
dedent|''
dedent|''
dedent|''
name|'class'
name|'Replicator'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Implements the logic for directing db replication.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'server_conf'
op|','
name|'replicator_conf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'logger'
op|'='
name|'get_logger'
op|'('
name|'replicator_conf'
op|','
string|"'%s-replicator'"
op|'%'
name|'self'
op|'.'
name|'server_type'
op|')'
newline|'\n'
comment|'# log uncaught exceptions'
nl|'\n'
name|'sys'
op|'.'
name|'excepthook'
op|'='
name|'lambda'
op|'*'
name|'exc_info'
op|':'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'critical'
op|'('
string|"'UNCAUGHT EXCEPTION'"
op|','
name|'exc_info'
op|'='
name|'exc_info'
op|')'
newline|'\n'
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'sys'
op|'.'
name|'stderr'
op|'='
name|'LoggerFileObject'
op|'('
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'root'
op|'='
name|'server_conf'
op|'.'
name|'get'
op|'('
string|"'devices'"
op|','
string|"'/srv/node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mount_check'
op|'='
name|'server_conf'
op|'.'
name|'get'
op|'('
string|"'mount_check'"
op|','
string|"'true'"
op|')'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
op|'('
string|"'true'"
op|','
string|"'t'"
op|','
string|"'1'"
op|','
string|"'on'"
op|','
string|"'yes'"
op|','
string|"'y'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'port'
op|'='
name|'int'
op|'('
name|'server_conf'
op|'.'
name|'get'
op|'('
string|"'bind_port'"
op|','
name|'self'
op|'.'
name|'default_port'
op|')'
op|')'
newline|'\n'
name|'concurrency'
op|'='
name|'int'
op|'('
name|'replicator_conf'
op|'.'
name|'get'
op|'('
string|"'concurrency'"
op|','
number|'8'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'cpool'
op|'='
name|'GreenPool'
op|'('
name|'size'
op|'='
name|'concurrency'
op|')'
newline|'\n'
name|'swift_dir'
op|'='
name|'server_conf'
op|'.'
name|'get'
op|'('
string|"'swift_dir'"
op|','
string|"'/etc/swift'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ring'
op|'='
name|'ring'
op|'.'
name|'Ring'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'swift_dir'
op|','
name|'self'
op|'.'
name|'ring_file'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'per_diff'
op|'='
name|'int'
op|'('
name|'replicator_conf'
op|'.'
name|'get'
op|'('
string|"'per_diff'"
op|','
number|'1000'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'run_pause'
op|'='
name|'int'
op|'('
name|'replicator_conf'
op|'.'
name|'get'
op|'('
string|"'run_pause'"
op|','
number|'30'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'vm_test_mode'
op|'='
name|'replicator_conf'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'vm_test_mode'"
op|','
string|"'no'"
op|')'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
op|'('
string|"'yes'"
op|','
string|"'true'"
op|','
string|"'on'"
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'node_timeout'
op|'='
name|'int'
op|'('
name|'replicator_conf'
op|'.'
name|'get'
op|'('
string|"'node_timeout'"
op|','
number|'10'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn_timeout'
op|'='
name|'float'
op|'('
name|'replicator_conf'
op|'.'
name|'get'
op|'('
string|"'conn_timeout'"
op|','
number|'0.5'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'reclaim_age'
op|'='
name|'float'
op|'('
name|'replicator_conf'
op|'.'
name|'get'
op|'('
string|"'reclaim_age'"
op|','
number|'86400'
op|'*'
number|'7'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_zero_stats'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_zero_stats
dedent|''
name|'def'
name|'_zero_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Zero out the stats."""'
newline|'\n'
name|'self'
op|'.'
name|'stats'
op|'='
op|'{'
string|"'attempted'"
op|':'
number|'0'
op|','
string|"'success'"
op|':'
number|'0'
op|','
string|"'failure'"
op|':'
number|'0'
op|','
string|"'ts_repl'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'no_change'"
op|':'
number|'0'
op|','
string|"'hashmatch'"
op|':'
number|'0'
op|','
string|"'rsync'"
op|':'
number|'0'
op|','
string|"'diff'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'remove'"
op|':'
number|'0'
op|','
string|"'empty'"
op|':'
number|'0'
op|','
string|"'remote_merge'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'start'"
op|':'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|_report_stats
dedent|''
name|'def'
name|'_report_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Report the current stats to the logs."""'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
nl|'\n'
string|"'Attempted to replicate %d dbs in %.5f seconds (%.5f/s)'"
nl|'\n'
op|'%'
op|'('
name|'self'
op|'.'
name|'stats'
op|'['
string|"'attempted'"
op|']'
op|','
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'stats'
op|'['
string|"'start'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'stats'
op|'['
string|"'attempted'"
op|']'
op|'/'
nl|'\n'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'stats'
op|'['
string|"'start'"
op|']'
op|'+'
number|'0.0000001'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
string|"'Removed %(remove)d dbs'"
op|'%'
name|'self'
op|'.'
name|'stats'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
string|"'%(success)s successes, %(failure)s failures'"
nl|'\n'
op|'%'
name|'self'
op|'.'
name|'stats'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
string|"' '"
op|'.'
name|'join'
op|'('
op|'['
string|"'%s:%s'"
op|'%'
name|'item'
name|'for'
name|'item'
name|'in'
nl|'\n'
name|'self'
op|'.'
name|'stats'
op|'.'
name|'items'
op|'('
op|')'
name|'if'
name|'item'
op|'['
number|'0'
op|']'
name|'in'
nl|'\n'
op|'('
string|"'no_change'"
op|','
string|"'hashmatch'"
op|','
string|"'rsync'"
op|','
string|"'diff'"
op|','
string|"'ts_repl'"
op|','
string|"'empty'"
op|')'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_rsync_file
dedent|''
name|'def'
name|'_rsync_file'
op|'('
name|'self'
op|','
name|'db_file'
op|','
name|'remote_file'
op|','
name|'whole_file'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sync a single file using rsync. Used by _rsync_db to handle syncing.\n\n        :param db_file: file to be synced\n        :param remote_file: remote location to sync the DB file to\n        :param whole-file: if True, uses rsync\'s --whole-file flag\n\n        :returns: True if the sync was successful, False otherwise\n        """'
newline|'\n'
name|'popen_args'
op|'='
op|'['
string|"'rsync'"
op|','
string|"'--quiet'"
op|','
string|"'--no-motd'"
op|','
nl|'\n'
string|"'--timeout=%s'"
op|'%'
name|'int'
op|'('
name|'math'
op|'.'
name|'ceil'
op|'('
name|'self'
op|'.'
name|'node_timeout'
op|')'
op|')'
op|','
nl|'\n'
string|"'--contimeout=%s'"
op|'%'
name|'int'
op|'('
name|'math'
op|'.'
name|'ceil'
op|'('
name|'self'
op|'.'
name|'conn_timeout'
op|')'
op|')'
op|']'
newline|'\n'
name|'if'
name|'whole_file'
op|':'
newline|'\n'
indent|'            '
name|'popen_args'
op|'.'
name|'append'
op|'('
string|"'--whole-file'"
op|')'
newline|'\n'
dedent|''
name|'popen_args'
op|'.'
name|'extend'
op|'('
op|'['
name|'db_file'
op|','
name|'remote_file'
op|']'
op|')'
newline|'\n'
name|'proc'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
name|'popen_args'
op|')'
newline|'\n'
name|'proc'
op|'.'
name|'communicate'
op|'('
op|')'
newline|'\n'
name|'if'
name|'proc'
op|'.'
name|'returncode'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
string|"'ERROR rsync failed with %s: %s'"
op|'%'
nl|'\n'
op|'('
name|'proc'
op|'.'
name|'returncode'
op|','
name|'popen_args'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'proc'
op|'.'
name|'returncode'
op|'=='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|_rsync_db
dedent|''
name|'def'
name|'_rsync_db'
op|'('
name|'self'
op|','
name|'broker'
op|','
name|'device'
op|','
name|'http'
op|','
name|'local_id'
op|','
nl|'\n'
name|'replicate_method'
op|'='
string|"'complete_rsync'"
op|','
name|'replicate_timeout'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sync a whole db using rsync.\n\n        :param broker: DB broker object of DB to be synced\n        :param device: device to sync to\n        :param http: ReplConnection object\n        :param local_id: unique ID of the local database replica\n        :param replicate_method: remote operation to perform after rsync\n        :param replicate_timeout: timeout to wait in seconds\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'vm_test_mode'
op|':'
newline|'\n'
indent|'            '
name|'remote_file'
op|'='
string|"'%s::%s%s/%s/tmp/%s'"
op|'%'
op|'('
name|'device'
op|'['
string|"'ip'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'server_type'
op|','
name|'device'
op|'['
string|"'port'"
op|']'
op|','
name|'device'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
name|'local_id'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'remote_file'
op|'='
string|"'%s::%s/%s/tmp/%s'"
op|'%'
op|'('
name|'device'
op|'['
string|"'ip'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'server_type'
op|','
name|'device'
op|'['
string|"'device'"
op|']'
op|','
name|'local_id'
op|')'
newline|'\n'
dedent|''
name|'mtime'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'getmtime'
op|'('
name|'broker'
op|'.'
name|'db_file'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'_rsync_file'
op|'('
name|'broker'
op|'.'
name|'db_file'
op|','
name|'remote_file'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
comment|'# perform block-level sync if the db was modified during the first sync'
nl|'\n'
dedent|''
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'broker'
op|'.'
name|'db_file'
op|'+'
string|"'-journal'"
op|')'
name|'or'
name|'os'
op|'.'
name|'path'
op|'.'
name|'getmtime'
op|'('
name|'broker'
op|'.'
name|'db_file'
op|')'
op|'>'
name|'mtime'
op|':'
newline|'\n'
comment|'# grab a lock so nobody else can modify it'
nl|'\n'
indent|'            '
name|'with'
name|'broker'
op|'.'
name|'lock'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'self'
op|'.'
name|'_rsync_file'
op|'('
name|'broker'
op|'.'
name|'db_file'
op|','
name|'remote_file'
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'False'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'with'
name|'Timeout'
op|'('
name|'replicate_timeout'
name|'or'
name|'self'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'='
name|'http'
op|'.'
name|'replicate'
op|'('
name|'replicate_method'
op|','
name|'local_id'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'response'
name|'and'
name|'response'
op|'.'
name|'status'
op|'>='
number|'200'
name|'and'
name|'response'
op|'.'
name|'status'
op|'<'
number|'300'
newline|'\n'
nl|'\n'
DECL|member|_usync_db
dedent|''
name|'def'
name|'_usync_db'
op|'('
name|'self'
op|','
name|'point'
op|','
name|'broker'
op|','
name|'http'
op|','
name|'remote_id'
op|','
name|'local_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sync a db by sending all records since the last sync.\n\n        :param point: synchronization high water mark between the replicas\n        :param broker: database broker object\n        :param http: ReplConnection object for the remote server\n        :param remote_id: database id for the remote replica\n        :param local_id: database id for the local replica\n\n        :returns: boolean indicating completion and success\n        """'
newline|'\n'
name|'self'
op|'.'
name|'stats'
op|'['
string|"'diff'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Syncing chunks with %s'"
op|','
name|'http'
op|'.'
name|'host'
op|')'
newline|'\n'
name|'sync_table'
op|'='
name|'broker'
op|'.'
name|'get_syncs'
op|'('
op|')'
newline|'\n'
name|'objects'
op|'='
name|'broker'
op|'.'
name|'get_items_since'
op|'('
name|'point'
op|','
name|'self'
op|'.'
name|'per_diff'
op|')'
newline|'\n'
name|'while'
name|'len'
op|'('
name|'objects'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'response'
op|'='
name|'http'
op|'.'
name|'replicate'
op|'('
string|"'merge_items'"
op|','
name|'objects'
op|','
name|'local_id'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'response'
name|'or'
name|'response'
op|'.'
name|'status'
op|'>='
number|'300'
name|'or'
name|'response'
op|'.'
name|'status'
op|'<'
number|'200'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'response'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
string|"'ERROR Bad response %s from %s'"
op|'%'
nl|'\n'
op|'('
name|'response'
op|'.'
name|'status'
op|','
name|'http'
op|'.'
name|'host'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'point'
op|'='
name|'objects'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'ROWID'"
op|']'
newline|'\n'
name|'objects'
op|'='
name|'broker'
op|'.'
name|'get_items_since'
op|'('
name|'point'
op|','
name|'self'
op|'.'
name|'per_diff'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'='
name|'http'
op|'.'
name|'replicate'
op|'('
string|"'merge_syncs'"
op|','
name|'sync_table'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'response'
name|'and'
name|'response'
op|'.'
name|'status'
op|'>='
number|'200'
name|'and'
name|'response'
op|'.'
name|'status'
op|'<'
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'broker'
op|'.'
name|'merge_syncs'
op|'('
op|'['
op|'{'
string|"'remote_id'"
op|':'
name|'remote_id'
op|','
nl|'\n'
string|"'sync_point'"
op|':'
name|'point'
op|'}'
op|']'
op|','
name|'incoming'
op|'='
name|'False'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|_in_sync
dedent|''
name|'def'
name|'_in_sync'
op|'('
name|'self'
op|','
name|'rinfo'
op|','
name|'info'
op|','
name|'broker'
op|','
name|'local_sync'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Determine whether or not two replicas of a databases are considered\n        to be in sync.\n\n        :param rinfo: remote database info\n        :param info: local database info\n        :param broker: database broker object\n        :param local_sync: cached last sync point between replicas\n\n        :returns: boolean indicating whether or not the replicas are in sync\n        """'
newline|'\n'
name|'if'
name|'max'
op|'('
name|'rinfo'
op|'['
string|"'point'"
op|']'
op|','
name|'local_sync'
op|')'
op|'>='
name|'info'
op|'['
string|"'max_row'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats'
op|'['
string|"'no_change'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'rinfo'
op|'['
string|"'hash'"
op|']'
op|'=='
name|'info'
op|'['
string|"'hash'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats'
op|'['
string|"'hashmatch'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'broker'
op|'.'
name|'merge_syncs'
op|'('
op|'['
op|'{'
string|"'remote_id'"
op|':'
name|'rinfo'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
string|"'sync_point'"
op|':'
name|'rinfo'
op|'['
string|"'point'"
op|']'
op|'}'
op|']'
op|','
name|'incoming'
op|'='
name|'False'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|_http_connect
dedent|''
dedent|''
name|'def'
name|'_http_connect'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'partition'
op|','
name|'db_file'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Make an http_connection using ReplConnection\n\n        :param node: node dictionary from the ring\n        :param partition: partition partition to send in the url\n        :param db_file: DB file\n\n        :returns: ReplConnection object\n        """'
newline|'\n'
name|'return'
name|'ReplConnection'
op|'('
name|'node'
op|','
name|'partition'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'db_file'
op|')'
op|'.'
name|'split'
op|'('
string|"'.'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
op|','
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_repl_to_node
dedent|''
name|'def'
name|'_repl_to_node'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'broker'
op|','
name|'partition'
op|','
name|'info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Replicate a database to a node.\n\n        :param node: node dictionary from the ring to be replicated to\n        :param broker: DB broker for the DB to be replication\n        :param partition: partition on the node to replicate to\n        :param info: DB info as a dictionary of {\'max_row\', \'hash\', \'id\',\n                     \'created_at\', \'put_timestamp\', \'delete_timestamp\',\n                     \'metadata\'}\n\n        :returns: True if successful, False otherwise\n        """'
newline|'\n'
name|'with'
name|'ConnectionTimeout'
op|'('
name|'self'
op|'.'
name|'conn_timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'http'
op|'='
name|'self'
op|'.'
name|'_http_connect'
op|'('
name|'node'
op|','
name|'partition'
op|','
name|'broker'
op|'.'
name|'db_file'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'http'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
nl|'\n'
string|"'ERROR Unable to connect to remote server: %s'"
op|'%'
name|'node'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'='
name|'http'
op|'.'
name|'replicate'
op|'('
string|"'sync'"
op|','
name|'info'
op|'['
string|"'max_row'"
op|']'
op|','
name|'info'
op|'['
string|"'hash'"
op|']'
op|','
nl|'\n'
name|'info'
op|'['
string|"'id'"
op|']'
op|','
name|'info'
op|'['
string|"'created_at'"
op|']'
op|','
name|'info'
op|'['
string|"'put_timestamp'"
op|']'
op|','
nl|'\n'
name|'info'
op|'['
string|"'delete_timestamp'"
op|']'
op|','
name|'info'
op|'['
string|"'metadata'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'response'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'elif'
name|'response'
op|'.'
name|'status'
op|'=='
name|'HTTPNotFound'
op|'.'
name|'code'
op|':'
comment|'# completely missing, rsync'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats'
op|'['
string|"'rsync'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_rsync_db'
op|'('
name|'broker'
op|','
name|'node'
op|','
name|'http'
op|','
name|'info'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'response'
op|'.'
name|'status'
op|'=='
name|'HTTPInsufficientStorage'
op|'.'
name|'code'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'DriveNotMounted'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'response'
op|'.'
name|'status'
op|'>='
number|'200'
name|'and'
name|'response'
op|'.'
name|'status'
op|'<'
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'rinfo'
op|'='
name|'simplejson'
op|'.'
name|'loads'
op|'('
name|'response'
op|'.'
name|'data'
op|')'
newline|'\n'
name|'local_sync'
op|'='
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'rinfo'
op|'['
string|"'id'"
op|']'
op|','
name|'incoming'
op|'='
name|'False'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_in_sync'
op|'('
name|'rinfo'
op|','
name|'info'
op|','
name|'broker'
op|','
name|'local_sync'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
comment|'# if the difference in rowids between the two differs by'
nl|'\n'
comment|'# more than 50%, rsync then do a remote merge.'
nl|'\n'
dedent|''
name|'if'
name|'rinfo'
op|'['
string|"'max_row'"
op|']'
op|'/'
name|'float'
op|'('
name|'info'
op|'['
string|"'max_row'"
op|']'
op|')'
op|'<'
number|'0.5'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'stats'
op|'['
string|"'remote_merge'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_rsync_db'
op|'('
name|'broker'
op|','
name|'node'
op|','
name|'http'
op|','
name|'info'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'replicate_method'
op|'='
string|"'rsync_then_merge'"
op|','
nl|'\n'
name|'replicate_timeout'
op|'='
op|'('
name|'info'
op|'['
string|"'count'"
op|']'
op|'/'
number|'2000'
op|')'
op|')'
newline|'\n'
comment|'# else send diffs over to the remote server'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_usync_db'
op|'('
name|'max'
op|'('
name|'rinfo'
op|'['
string|"'point'"
op|']'
op|','
name|'local_sync'
op|')'
op|','
nl|'\n'
name|'broker'
op|','
name|'http'
op|','
name|'rinfo'
op|'['
string|"'id'"
op|']'
op|','
name|'info'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_replicate_object
dedent|''
dedent|''
name|'def'
name|'_replicate_object'
op|'('
name|'self'
op|','
name|'partition'
op|','
name|'object_file'
op|','
name|'node_id'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Replicate the db, choosing method based on whether or not it\n        already exists on peers.\n\n        :param partition: partition to be replicated to\n        :param object_file: DB file name to be replicated\n        :param node_id: node id of the node to be replicated to\n        """'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Replicating db %s'"
op|'%'
name|'object_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats'
op|'['
string|"'attempted'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'broker'
op|'='
name|'self'
op|'.'
name|'brokerclass'
op|'('
name|'object_file'
op|','
name|'pending_timeout'
op|'='
number|'30'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'reclaim'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'reclaim_age'
op|','
nl|'\n'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
op|'('
name|'self'
op|'.'
name|'reclaim_age'
op|'*'
number|'2'
op|')'
op|')'
newline|'\n'
name|'info'
op|'='
name|'broker'
op|'.'
name|'get_replication_info'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'no such table'"
name|'in'
name|'str'
op|'('
name|'e'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
string|"'Quarantining DB %s'"
op|'%'
name|'object_file'
op|')'
newline|'\n'
name|'quarantine_db'
op|'('
name|'broker'
op|'.'
name|'db_file'
op|','
name|'broker'
op|'.'
name|'db_type'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
string|"'ERROR reading db %s'"
op|'%'
name|'object_file'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stats'
op|'['
string|"'failure'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'return'
newline|'\n'
comment|'# The db is considered deleted if the delete_timestamp value is greater'
nl|'\n'
comment|'# than the put_timestamp, and there are no objects.'
nl|'\n'
dedent|''
name|'delete_timestamp'
op|'='
number|'0'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'delete_timestamp'
op|'='
name|'float'
op|'('
name|'info'
op|'['
string|"'delete_timestamp'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'put_timestamp'
op|'='
number|'0'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'put_timestamp'
op|'='
name|'float'
op|'('
name|'info'
op|'['
string|"'put_timestamp'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'if'
name|'delete_timestamp'
op|'<'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'reclaim_age'
op|')'
name|'and'
name|'delete_timestamp'
op|'>'
name|'put_timestamp'
name|'and'
name|'info'
op|'['
string|"'count'"
op|']'
name|'in'
op|'('
name|'None'
op|','
string|"''"
op|','
number|'0'
op|','
string|"'0'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'lock_parent_directory'
op|'('
name|'object_file'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'object_file'
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats'
op|'['
string|"'remove'"
op|']'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'return'
newline|'\n'
dedent|''
name|'responses'
op|'='
op|'['
op|']'
newline|'\n'
name|'nodes'
op|'='
name|'self'
op|'.'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'int'
op|'('
name|'partition'
op|')'
op|')'
newline|'\n'
name|'shouldbehere'
op|'='
name|'bool'
op|'('
op|'['
name|'n'
name|'for'
name|'n'
name|'in'
name|'nodes'
name|'if'
name|'n'
op|'['
string|"'id'"
op|']'
op|'=='
name|'node_id'
op|']'
op|')'
newline|'\n'
name|'repl_nodes'
op|'='
op|'['
name|'n'
name|'for'
name|'n'
name|'in'
name|'nodes'
name|'if'
name|'n'
op|'['
string|"'id'"
op|']'
op|'!='
name|'node_id'
op|']'
newline|'\n'
name|'more_nodes'
op|'='
name|'self'
op|'.'
name|'ring'
op|'.'
name|'get_more_nodes'
op|'('
name|'int'
op|'('
name|'partition'
op|')'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'repl_nodes'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'success'
op|'='
name|'self'
op|'.'
name|'_repl_to_node'
op|'('
name|'node'
op|','
name|'broker'
op|','
name|'partition'
op|','
name|'info'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DriveNotMounted'
op|':'
newline|'\n'
indent|'                '
name|'repl_nodes'
op|'.'
name|'append'
op|'('
name|'more_nodes'
op|'.'
name|'next'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
string|"'ERROR Remote drive not mounted %s'"
op|'%'
name|'node'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
string|"'ERROR syncing %s with node %s'"
op|'%'
nl|'\n'
op|'('
name|'object_file'
op|','
name|'node'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stats'
op|'['
string|"'success'"
name|'if'
name|'success'
name|'else'
string|"'failure'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'responses'
op|'.'
name|'append'
op|'('
name|'success'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'shouldbehere'
name|'and'
name|'all'
op|'('
name|'responses'
op|')'
op|':'
newline|'\n'
comment|"# If the db shouldn't be on this node and has been successfully"
nl|'\n'
comment|'# synced to all of its peers, it can be removed.'
nl|'\n'
indent|'            '
name|'with'
name|'lock_parent_directory'
op|'('
name|'object_file'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'object_file'
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats'
op|'['
string|"'remove'"
op|']'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|roundrobin_datadirs
dedent|''
dedent|''
dedent|''
name|'def'
name|'roundrobin_datadirs'
op|'('
name|'self'
op|','
name|'datadirs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Generator to walk the data dirs in a round robin manner, evenly\n        hitting each device on the system.\n\n        :param datadirs: a list of paths to walk\n        """'
newline|'\n'
nl|'\n'
DECL|function|walk_datadir
name|'def'
name|'walk_datadir'
op|'('
name|'datadir'
op|','
name|'node_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'partitions'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'datadir'
op|')'
newline|'\n'
name|'random'
op|'.'
name|'shuffle'
op|'('
name|'partitions'
op|')'
newline|'\n'
name|'for'
name|'partition'
name|'in'
name|'partitions'
op|':'
newline|'\n'
indent|'                '
name|'part_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'datadir'
op|','
name|'partition'
op|')'
newline|'\n'
name|'for'
name|'root'
op|','
name|'dirs'
op|','
name|'files'
name|'in'
name|'os'
op|'.'
name|'walk'
op|'('
name|'part_dir'
op|','
name|'topdown'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'for'
name|'fname'
name|'in'
op|'('
name|'f'
name|'for'
name|'f'
name|'in'
name|'files'
name|'if'
name|'f'
op|'.'
name|'endswith'
op|'('
string|"'.db'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'object_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'root'
op|','
name|'fname'
op|')'
newline|'\n'
name|'yield'
op|'('
name|'partition'
op|','
name|'object_file'
op|','
name|'node_id'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'its'
op|'='
op|'['
name|'walk_datadir'
op|'('
name|'datadir'
op|','
name|'node_id'
op|')'
name|'for'
name|'datadir'
op|','
name|'node_id'
name|'in'
name|'datadirs'
op|']'
newline|'\n'
name|'while'
name|'its'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'it'
name|'in'
name|'its'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'yield'
name|'it'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                    '
name|'its'
op|'.'
name|'remove'
op|'('
name|'it'
op|')'
newline|'\n'
nl|'\n'
DECL|member|replicate_once
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'replicate_once'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Run a replication pass once."""'
newline|'\n'
name|'self'
op|'.'
name|'_zero_stats'
op|'('
op|')'
newline|'\n'
name|'dirs'
op|'='
op|'['
op|']'
newline|'\n'
name|'ips'
op|'='
name|'whataremyips'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'ips'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
string|"'ERROR Failed to get my own IPs?'"
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'for'
name|'node'
name|'in'
name|'self'
op|'.'
name|'ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'node'
name|'and'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'in'
name|'ips'
name|'and'
name|'node'
op|'['
string|"'port'"
op|']'
op|'=='
name|'self'
op|'.'
name|'port'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'mount_check'
name|'and'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'ismount'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'root'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'warn'
op|'('
nl|'\n'
string|"'Skipping %(device)s as it is not mounted'"
op|'%'
name|'node'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'unlink_older_than'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'root'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
string|"'tmp'"
op|')'
op|','
nl|'\n'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'reclaim_age'
op|')'
newline|'\n'
name|'datadir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'root'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'self'
op|'.'
name|'datadir'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'datadir'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'dirs'
op|'.'
name|'append'
op|'('
op|'('
name|'datadir'
op|','
name|'node'
op|'['
string|"'id'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
string|"'Beginning replication run'"
op|')'
newline|'\n'
name|'for'
name|'part'
op|','
name|'object_file'
op|','
name|'node_id'
name|'in'
name|'self'
op|'.'
name|'roundrobin_datadirs'
op|'('
name|'dirs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'cpool'
op|'.'
name|'spawn_n'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_replicate_object'
op|','
name|'part'
op|','
name|'object_file'
op|','
name|'node_id'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'cpool'
op|'.'
name|'waitall'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
string|"'Replication run OVER'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_report_stats'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|replicate_forever
dedent|''
name|'def'
name|'replicate_forever'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Replicate dbs under the given root in an infinite loop.\n        """'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicate_once'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
string|"'ERROR trying to replicate'"
op|')'
newline|'\n'
dedent|''
name|'sleep'
op|'('
name|'self'
op|'.'
name|'run_pause'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ReplicatorRpc
dedent|''
dedent|''
dedent|''
name|'class'
name|'ReplicatorRpc'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Handle Replication RPC calls.  TODO(redbo): document please :)"""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'root'
op|','
name|'datadir'
op|','
name|'broker_class'
op|','
name|'mount_check'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'root'
op|'='
name|'root'
newline|'\n'
name|'self'
op|'.'
name|'datadir'
op|'='
name|'datadir'
newline|'\n'
name|'self'
op|'.'
name|'broker_class'
op|'='
name|'broker_class'
newline|'\n'
name|'self'
op|'.'
name|'mount_check'
op|'='
name|'mount_check'
newline|'\n'
nl|'\n'
DECL|member|dispatch
dedent|''
name|'def'
name|'dispatch'
op|'('
name|'self'
op|','
name|'replicate_args'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'args'
op|','
string|"'pop'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
string|"'Invalid object type'"
op|')'
newline|'\n'
dedent|''
name|'op'
op|'='
name|'args'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'drive'
op|','
name|'partition'
op|','
name|'hsh'
op|'='
name|'replicate_args'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'mount_check'
name|'and'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'ismount'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'root'
op|','
name|'drive'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'Response'
op|'('
name|'status'
op|'='
string|"'507 %s is not mounted'"
op|'%'
name|'drive'
op|')'
newline|'\n'
dedent|''
name|'db_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'root'
op|','
name|'drive'
op|','
nl|'\n'
name|'storage_directory'
op|'('
name|'self'
op|'.'
name|'datadir'
op|','
name|'partition'
op|','
name|'hsh'
op|')'
op|','
name|'hsh'
op|'+'
string|"'.db'"
op|')'
newline|'\n'
name|'if'
name|'op'
op|'=='
string|"'rsync_then_merge'"
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'rsync_then_merge'
op|'('
name|'drive'
op|','
name|'db_file'
op|','
name|'args'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'op'
op|'=='
string|"'complete_rsync'"
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'complete_rsync'
op|'('
name|'drive'
op|','
name|'db_file'
op|','
name|'args'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# someone might be about to rsync a db to us,'
nl|'\n'
comment|"# make sure there's a tmp dir to receive it."
nl|'\n'
indent|'            '
name|'mkdirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'root'
op|','
name|'drive'
op|','
string|"'tmp'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'db_file'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'getattr'
op|'('
name|'self'
op|','
name|'op'
op|')'
op|'('
name|'self'
op|'.'
name|'broker_class'
op|'('
name|'db_file'
op|')'
op|','
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|sync
dedent|''
dedent|''
name|'def'
name|'sync'
op|'('
name|'self'
op|','
name|'broker'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'remote_sync'
op|','
name|'hash_'
op|','
name|'id_'
op|','
name|'created_at'
op|','
name|'put_timestamp'
op|','
nl|'\n'
name|'delete_timestamp'
op|','
name|'metadata'
op|')'
op|'='
name|'args'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'info'
op|'='
name|'broker'
op|'.'
name|'get_replication_info'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'no such table'"
name|'in'
name|'str'
op|'('
name|'e'
op|')'
op|':'
newline|'\n'
comment|'# TODO(unknown): find a real logger'
nl|'\n'
indent|'                '
name|'print'
string|'"Quarantining DB %s"'
op|'%'
name|'broker'
op|'.'
name|'db_file'
newline|'\n'
name|'quarantine_db'
op|'('
name|'broker'
op|'.'
name|'db_file'
op|','
name|'broker'
op|'.'
name|'db_type'
op|')'
newline|'\n'
name|'return'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
dedent|''
name|'raise'
newline|'\n'
dedent|''
name|'if'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'broker'
op|'.'
name|'update_metadata'
op|'('
name|'simplejson'
op|'.'
name|'loads'
op|'('
name|'metadata'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'info'
op|'['
string|"'put_timestamp'"
op|']'
op|'!='
name|'put_timestamp'
name|'or'
name|'info'
op|'['
string|"'created_at'"
op|']'
op|'!='
name|'created_at'
name|'or'
name|'info'
op|'['
string|"'delete_timestamp'"
op|']'
op|'!='
name|'delete_timestamp'
op|':'
newline|'\n'
indent|'            '
name|'broker'
op|'.'
name|'merge_timestamps'
op|'('
nl|'\n'
name|'created_at'
op|','
name|'put_timestamp'
op|','
name|'delete_timestamp'
op|')'
newline|'\n'
dedent|''
name|'info'
op|'['
string|"'point'"
op|']'
op|'='
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'id_'
op|')'
newline|'\n'
name|'if'
name|'hash_'
op|'=='
name|'info'
op|'['
string|"'hash'"
op|']'
name|'and'
name|'info'
op|'['
string|"'point'"
op|']'
op|'<'
name|'remote_sync'
op|':'
newline|'\n'
indent|'            '
name|'broker'
op|'.'
name|'merge_syncs'
op|'('
op|'['
op|'{'
string|"'remote_id'"
op|':'
name|'id_'
op|','
nl|'\n'
string|"'sync_point'"
op|':'
name|'remote_sync'
op|'}'
op|']'
op|')'
newline|'\n'
name|'info'
op|'['
string|"'point'"
op|']'
op|'='
name|'remote_sync'
newline|'\n'
dedent|''
name|'return'
name|'Response'
op|'('
name|'simplejson'
op|'.'
name|'dumps'
op|'('
name|'info'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|merge_syncs
dedent|''
name|'def'
name|'merge_syncs'
op|'('
name|'self'
op|','
name|'broker'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'.'
name|'merge_syncs'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'return'
name|'HTTPAccepted'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|merge_items
dedent|''
name|'def'
name|'merge_items'
op|'('
name|'self'
op|','
name|'broker'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'.'
name|'merge_items'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'args'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'return'
name|'HTTPAccepted'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|complete_rsync
dedent|''
name|'def'
name|'complete_rsync'
op|'('
name|'self'
op|','
name|'drive'
op|','
name|'db_file'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'old_filename'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'root'
op|','
name|'drive'
op|','
string|"'tmp'"
op|','
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'db_file'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'old_filename'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
dedent|''
name|'broker'
op|'='
name|'self'
op|'.'
name|'broker_class'
op|'('
name|'old_filename'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'newid'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'renamer'
op|'('
name|'old_filename'
op|','
name|'db_file'
op|')'
newline|'\n'
name|'return'
name|'HTTPNoContent'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|rsync_then_merge
dedent|''
name|'def'
name|'rsync_then_merge'
op|'('
name|'self'
op|','
name|'drive'
op|','
name|'db_file'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'old_filename'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'root'
op|','
name|'drive'
op|','
string|"'tmp'"
op|','
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'db_file'
op|')'
name|'or'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'old_filename'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
dedent|''
name|'new_broker'
op|'='
name|'self'
op|'.'
name|'broker_class'
op|'('
name|'old_filename'
op|')'
newline|'\n'
name|'existing_broker'
op|'='
name|'self'
op|'.'
name|'broker_class'
op|'('
name|'db_file'
op|')'
newline|'\n'
name|'point'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'objects'
op|'='
name|'existing_broker'
op|'.'
name|'get_items_since'
op|'('
name|'point'
op|','
number|'1000'
op|')'
newline|'\n'
name|'while'
name|'len'
op|'('
name|'objects'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'new_broker'
op|'.'
name|'merge_items'
op|'('
name|'objects'
op|')'
newline|'\n'
name|'point'
op|'='
name|'objects'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'ROWID'"
op|']'
newline|'\n'
name|'objects'
op|'='
name|'existing_broker'
op|'.'
name|'get_items_since'
op|'('
name|'point'
op|','
number|'1000'
op|')'
newline|'\n'
name|'sleep'
op|'('
op|')'
newline|'\n'
dedent|''
name|'new_broker'
op|'.'
name|'newid'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'renamer'
op|'('
name|'old_filename'
op|','
name|'db_file'
op|')'
newline|'\n'
name|'return'
name|'HTTPNoContent'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
