begin_unit
comment|'# Copyright (c) 2015 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
string|'"""\nServer side copy is a feature that enables users/clients to COPY objects\nbetween accounts and containers without the need to download and then\nre-upload objects, thus eliminating additional bandwidth consumption and\nalso saving time. This may be used when renaming/moving an object which\nin Swift is a (COPY + DELETE) operation.\n\nThe server side copy middleware should be inserted in the pipeline after auth\nand before the quotas and large object middlewares. If it is not present in the\npipeline in the proxy-server configuration file, it will be inserted\nautomatically. There is no configurable option provided to turn off server\nside copy.\n\n--------\nMetadata\n--------\n* All metadata of source object is preserved during object copy.\n* One can also provide additional metadata during PUT/COPY request. This will\n  over-write any existing conflicting keys.\n* Server side copy can also be used to change content-type of an existing\n  object.\n\n-----------\nObject Copy\n-----------\n* The destination container must exist before requesting copy of the object.\n* When several replicas exist, the system copies from the most recent replica.\n  That is, the copy operation behaves as though the X-Newest header is in the\n  request.\n* The request to copy an object should have no body (i.e. content-length of the\n  request must be zero).\n\nThere are two ways in which an object can be copied:\n\n1. Send a PUT request to the new object (destination/target) with an additional\n   header named ``X-Copy-From`` specifying the source object\n   (in \'/container/object\' format). Example::\n\n    curl -i -X PUT http://<storage_url>/container1/destination_obj\n     -H \'X-Auth-Token: <token>\'\n     -H \'X-Copy-From: /container2/source_obj\'\n     -H \'Content-Length: 0\'\n\n2. Send a COPY request with an existing object in URL with an additional header\n   named ``Destination`` specifying the destination/target object\n   (in \'/container/object\' format). Example::\n\n    curl -i -X COPY http://<storage_url>/container2/source_obj\n     -H \'X-Auth-Token: <token>\'\n     -H \'Destination: /container1/destination_obj\'\n     -H \'Content-Length: 0\'\n\nNote that if the incoming request has some conditional headers (e.g. ``Range``,\n``If-Match``), the *source* object will be evaluated for these headers (i.e. if\nPUT with both ``X-Copy-From`` and ``Range``, Swift will make a partial copy to\nthe destination object).\n\n-------------------------\nCross Account Object Copy\n-------------------------\nObjects can also be copied from one account to another account if the user\nhas the necessary permissions (i.e. permission to read from container\nin source account and permission to write to container in destination account).\n\nSimilar to examples mentioned above, there are two ways to copy objects across\naccounts:\n\n1. Like the example above, send PUT request to copy object but with an\n   additional header named ``X-Copy-From-Account`` specifying the source\n   account. Example::\n\n    curl -i -X PUT http://<host>:<port>/v1/AUTH_test1/container/destination_obj\n     -H \'X-Auth-Token: <token>\'\n     -H \'X-Copy-From: /container/source_obj\'\n     -H \'X-Copy-From-Account: AUTH_test2\'\n     -H \'Content-Length: 0\'\n\n2. Like the previous example, send a COPY request but with an additional header\n   named ``Destination-Account`` specifying the name of destination account.\n   Example::\n\n    curl -i -X COPY http://<host>:<port>/v1/AUTH_test2/container/source_obj\n     -H \'X-Auth-Token: <token>\'\n     -H \'Destination: /container/destination_obj\'\n     -H \'Destination-Account: AUTH_test1\'\n     -H \'Content-Length: 0\'\n\n-------------------\nLarge Object Copy\n-------------------\nThe best option to copy a large object is to copy segments individually.\nTo copy the manifest object of a large object, add the query parameter to\nthe copy request::\n\n    ?multipart-manifest=get\n\nIf a request is sent without the query parameter, an attempt will be made to\ncopy the whole object but will fail if the object size is\ngreater than 5GB.\n\n-------------------\nObject Post as Copy\n-------------------\nHistorically, this has been a feature (and a configurable option with default\nset to True) in proxy server configuration. This has been moved to server side\ncopy middleware.\n\nWhen ``object_post_as_copy`` is set to ``true`` (default value), an incoming\nPOST request is morphed into a COPY request where source and destination\nobjects are same.\n\nThis feature was necessary because of a previous behavior where POSTS would\nupdate the metadata on the object but not on the container. As a result,\nfeatures like container sync would not work correctly. This is no longer the\ncase and the plan is to deprecate this option. It is being kept now for\nbackwards compatibility. At first chance, set ``object_post_as_copy`` to\n``false``.\n"""'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'from'
name|'urllib'
name|'import'
name|'quote'
newline|'\n'
name|'from'
name|'ConfigParser'
name|'import'
name|'ConfigParser'
op|','
name|'NoSectionError'
op|','
name|'NoOptionError'
newline|'\n'
name|'from'
name|'six'
op|'.'
name|'moves'
op|'.'
name|'urllib'
op|'.'
name|'parse'
name|'import'
name|'unquote'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'get_logger'
op|','
name|'config_true_value'
op|','
name|'FileLikeIter'
op|','
name|'read_conf_dir'
op|','
name|'close_if_possible'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'Request'
op|','
name|'HTTPPreconditionFailed'
op|','
name|'HTTPRequestEntityTooLarge'
op|','
name|'HTTPBadRequest'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'http'
name|'import'
name|'HTTP_MULTIPLE_CHOICES'
op|','
name|'HTTP_CREATED'
op|','
name|'is_success'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'constraints'
name|'import'
name|'check_account_format'
op|','
name|'MAX_FILE_SIZE'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'request_helpers'
name|'import'
name|'copy_header_subset'
op|','
name|'remove_items'
op|','
name|'is_sys_meta'
op|','
name|'is_sys_or_user_meta'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'wsgi'
name|'import'
name|'WSGIContext'
op|','
name|'make_subrequest'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_check_path_header
name|'def'
name|'_check_path_header'
op|'('
name|'req'
op|','
name|'name'
op|','
name|'length'
op|','
name|'error_msg'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Validate that the value of path-like header is\n    well formatted. We assume the caller ensures that\n    specific header is present in req.headers.\n\n    :param req: HTTP request object\n    :param name: header name\n    :param length: length of path segment check\n    :param error_msg: error message for client\n    :returns: A tuple with path parts according to length\n    :raise: HTTPPreconditionFailed if header value\n            is not well formatted.\n    """'
newline|'\n'
name|'src_header'
op|'='
name|'unquote'
op|'('
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'src_header'
op|'.'
name|'startswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'src_header'
op|'='
string|"'/'"
op|'+'
name|'src_header'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'utils'
op|'.'
name|'split_path'
op|'('
name|'src_header'
op|','
name|'length'
op|','
name|'length'
op|','
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'HTTPPreconditionFailed'
op|'('
nl|'\n'
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'body'
op|'='
name|'error_msg'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_check_copy_from_header
dedent|''
dedent|''
name|'def'
name|'_check_copy_from_header'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Validate that the value from x-copy-from header is\n    well formatted. We assume the caller ensures that\n    x-copy-from header is present in req.headers.\n\n    :param req: HTTP request object\n    :returns: A tuple with container name and object name\n    :raise: HTTPPreconditionFailed if x-copy-from value\n            is not well formatted.\n    """'
newline|'\n'
name|'return'
name|'_check_path_header'
op|'('
name|'req'
op|','
string|"'X-Copy-From'"
op|','
number|'2'
op|','
nl|'\n'
string|"'X-Copy-From header must be of the form '"
nl|'\n'
string|"'<container name>/<object name>'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_check_destination_header
dedent|''
name|'def'
name|'_check_destination_header'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Validate that the value from destination header is\n    well formatted. We assume the caller ensures that\n    destination header is present in req.headers.\n\n    :param req: HTTP request object\n    :returns: A tuple with container name and object name\n    :raise: HTTPPreconditionFailed if destination value\n            is not well formatted.\n    """'
newline|'\n'
name|'return'
name|'_check_path_header'
op|'('
name|'req'
op|','
string|"'Destination'"
op|','
number|'2'
op|','
nl|'\n'
string|"'Destination header must be of the form '"
nl|'\n'
string|"'<container name>/<object name>'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_copy_headers_into
dedent|''
name|'def'
name|'_copy_headers_into'
op|'('
name|'from_r'
op|','
name|'to_r'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Will copy desired headers from from_r to to_r\n    :params from_r: a swob Request or Response\n    :params to_r: a swob Request or Response\n    """'
newline|'\n'
name|'pass_headers'
op|'='
op|'['
string|"'x-delete-at'"
op|']'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'from_r'
op|'.'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'is_sys_or_user_meta'
op|'('
string|"'object'"
op|','
name|'k'
op|')'
name|'or'
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
name|'pass_headers'
op|':'
newline|'\n'
indent|'            '
name|'to_r'
op|'.'
name|'headers'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerSideCopyWebContext
dedent|''
dedent|''
dedent|''
name|'class'
name|'ServerSideCopyWebContext'
op|'('
name|'WSGIContext'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'logger'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'ServerSideCopyWebContext'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'='
name|'app'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'logger'
newline|'\n'
nl|'\n'
DECL|member|get_source_resp
dedent|''
name|'def'
name|'get_source_resp'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sub_req'
op|'='
name|'make_subrequest'
op|'('
nl|'\n'
name|'req'
op|'.'
name|'environ'
op|','
name|'path'
op|'='
name|'req'
op|'.'
name|'path_info'
op|','
name|'headers'
op|'='
name|'req'
op|'.'
name|'headers'
op|','
nl|'\n'
name|'swift_source'
op|'='
string|"'SSC'"
op|')'
newline|'\n'
name|'return'
name|'sub_req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
nl|'\n'
DECL|member|send_put_req
dedent|''
name|'def'
name|'send_put_req'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'additional_resp_headers'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app_resp'
op|'='
name|'self'
op|'.'
name|'_app_call'
op|'('
name|'req'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_adjust_put_response'
op|'('
name|'req'
op|','
name|'additional_resp_headers'
op|')'
newline|'\n'
name|'start_response'
op|'('
name|'self'
op|'.'
name|'_response_status'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_response_headers'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_response_exc_info'
op|')'
newline|'\n'
name|'return'
name|'app_resp'
newline|'\n'
nl|'\n'
DECL|member|_adjust_put_response
dedent|''
name|'def'
name|'_adjust_put_response'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'additional_resp_headers'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'swift.post_as_copy'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
comment|"# Older editions returned 202 Accepted on object POSTs, so we'll"
nl|'\n'
comment|'# convert any 201 Created responses to that for compatibility with'
nl|'\n'
comment|'# picky clients.'
nl|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'_get_status_int'
op|'('
op|')'
op|'=='
name|'HTTP_CREATED'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_response_status'
op|'='
string|"'202 Accepted'"
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'is_success'
op|'('
name|'self'
op|'.'
name|'_get_status_int'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'header'
op|','
name|'value'
name|'in'
name|'additional_resp_headers'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_response_headers'
op|'.'
name|'append'
op|'('
op|'('
name|'header'
op|','
name|'value'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle_OPTIONS_request
dedent|''
dedent|''
dedent|''
name|'def'
name|'handle_OPTIONS_request'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app_resp'
op|'='
name|'self'
op|'.'
name|'_app_call'
op|'('
name|'req'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'if'
name|'is_success'
op|'('
name|'self'
op|'.'
name|'_get_status_int'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'i'
op|','
op|'('
name|'header'
op|','
name|'value'
op|')'
name|'in'
name|'enumerate'
op|'('
name|'self'
op|'.'
name|'_response_headers'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'header'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|"'allow'"
name|'and'
string|"'COPY'"
name|'not'
name|'in'
name|'value'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_response_headers'
op|'['
name|'i'
op|']'
op|'='
op|'('
string|"'Allow'"
op|','
name|'value'
op|'+'
string|"', COPY'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'header'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|"'access-control-allow-methods'"
name|'and'
string|"'COPY'"
name|'not'
name|'in'
name|'value'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_response_headers'
op|'['
name|'i'
op|']'
op|'='
op|'('
string|"'Access-Control-Allow-Methods'"
op|','
name|'value'
op|'+'
string|"', COPY'"
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'start_response'
op|'('
name|'self'
op|'.'
name|'_response_status'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_response_headers'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_response_exc_info'
op|')'
newline|'\n'
name|'return'
name|'app_resp'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ServerSideCopyMiddleware
dedent|''
dedent|''
name|'class'
name|'ServerSideCopyMiddleware'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'app'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'get_logger'
op|'('
name|'conf'
op|','
name|'log_route'
op|'='
string|'"copy"'
op|')'
newline|'\n'
comment|'# Read the old object_post_as_copy option from Proxy app just in case'
nl|'\n'
comment|"# someone has set it to false (non default). This wouldn't cause"
nl|'\n'
comment|'# problems during upgrade.'
nl|'\n'
name|'self'
op|'.'
name|'_load_object_post_as_copy_conf'
op|'('
name|'conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'object_post_as_copy'
op|'='
name|'config_true_value'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'object_post_as_copy'"
op|','
string|"'true'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_load_object_post_as_copy_conf
dedent|''
name|'def'
name|'_load_object_post_as_copy_conf'
op|'('
name|'self'
op|','
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
op|'('
string|"'object_post_as_copy'"
name|'in'
name|'conf'
name|'or'
string|"'__file__'"
name|'not'
name|'in'
name|'conf'
op|')'
op|':'
newline|'\n'
comment|'# Option is explicitly set in middleware conf. In that case,'
nl|'\n'
comment|"# we assume operator knows what he's doing."
nl|'\n'
comment|'# This takes preference over the one set in proxy app'
nl|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'cp'
op|'='
name|'ConfigParser'
op|'('
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'conf'
op|'['
string|"'__file__'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'read_conf_dir'
op|'('
name|'cp'
op|','
name|'conf'
op|'['
string|"'__file__'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'cp'
op|'.'
name|'read'
op|'('
name|'conf'
op|'['
string|"'__file__'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'pipe'
op|'='
name|'cp'
op|'.'
name|'get'
op|'('
string|'"pipeline:main"'
op|','
string|'"pipeline"'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'NoSectionError'
op|','
name|'NoOptionError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'proxy_name'
op|'='
name|'pipe'
op|'.'
name|'rsplit'
op|'('
name|'None'
op|','
number|'1'
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'proxy_section'
op|'='
string|'"app:"'
op|'+'
name|'proxy_name'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'conf'
op|'['
string|"'object_post_as_copy'"
op|']'
op|'='
name|'cp'
op|'.'
name|'get'
op|'('
name|'proxy_section'
op|','
nl|'\n'
string|"'object_post_as_copy'"
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'NoSectionError'
op|','
name|'NoOptionError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'('
name|'env'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
op|'('
name|'version'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
op|'='
name|'req'
op|'.'
name|'split_path'
op|'('
number|'4'
op|','
number|'4'
op|','
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
comment|'# If obj component is not present in req, do not proceed further.'
nl|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'app'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'account_name'
op|'='
name|'account'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'container'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'obj'
newline|'\n'
nl|'\n'
comment|'# Save off original request method (COPY/POST) in case it gets mutated'
nl|'\n'
comment|'# into PUT during handling. This way logging can display the method'
nl|'\n'
comment|'# the client actually sent.'
nl|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.orig_req_method'"
op|']'
op|'='
name|'req'
op|'.'
name|'method'
newline|'\n'
nl|'\n'
name|'if'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'PUT'"
name|'and'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Copy-From'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'handle_PUT'
op|'('
name|'req'
op|','
name|'start_response'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'COPY'"
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'handle_COPY'
op|'('
name|'req'
op|','
name|'start_response'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'POST'"
name|'and'
name|'self'
op|'.'
name|'object_post_as_copy'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'handle_object_post_as_copy'
op|'('
name|'req'
op|','
name|'start_response'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'OPTIONS'"
op|':'
newline|'\n'
comment|'# Does not interfere with OPTIONS response from (account,container)'
nl|'\n'
comment|'# servers and /info response.'
nl|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'handle_OPTIONS'
op|'('
name|'req'
op|','
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'app'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle_object_post_as_copy
dedent|''
name|'def'
name|'handle_object_post_as_copy'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'path_info'
op|'='
string|"'/v1/%s/%s/%s'"
op|'%'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'pop'
op|'('
string|"'Range'"
op|','
name|'None'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Copy-From'"
op|']'
op|'='
name|'quote'
op|'('
string|"'/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|')'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.post_as_copy'"
op|']'
op|'='
name|'True'
newline|'\n'
name|'params'
op|'='
name|'req'
op|'.'
name|'params'
newline|'\n'
comment|'# for post-as-copy always copy the manifest itself if source is *LO'
nl|'\n'
name|'params'
op|'['
string|"'multipart-manifest'"
op|']'
op|'='
string|"'get'"
newline|'\n'
name|'req'
op|'.'
name|'params'
op|'='
name|'params'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'handle_PUT'
op|'('
name|'req'
op|','
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle_COPY
dedent|''
name|'def'
name|'handle_COPY'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'Destination'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'body'
op|'='
string|"'Destination header required'"
nl|'\n'
op|')'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
dedent|''
name|'dest_account'
op|'='
name|'self'
op|'.'
name|'account_name'
newline|'\n'
name|'if'
string|"'Destination-Account'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'dest_account'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'Destination-Account'"
op|')'
newline|'\n'
name|'dest_account'
op|'='
name|'check_account_format'
op|'('
name|'req'
op|','
name|'dest_account'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Copy-From-Account'"
op|']'
op|'='
name|'self'
op|'.'
name|'account_name'
newline|'\n'
name|'self'
op|'.'
name|'account_name'
op|'='
name|'dest_account'
newline|'\n'
name|'del'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Destination-Account'"
op|']'
newline|'\n'
dedent|''
name|'dest_container'
op|','
name|'dest_object'
op|'='
name|'_check_destination_header'
op|'('
name|'req'
op|')'
newline|'\n'
name|'source'
op|'='
string|"'/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'dest_container'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'dest_object'
newline|'\n'
comment|'# re-write the existing request as a PUT instead of creating a new one'
nl|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
comment|'# As this the path info is updated with destination container,'
nl|'\n'
comment|'# the proxy server app will use the right object controller'
nl|'\n'
comment|"# implementation corresponding to the container's policy type."
nl|'\n'
name|'ver'
op|','
name|'_junk'
op|'='
name|'req'
op|'.'
name|'split_path'
op|'('
number|'1'
op|','
number|'2'
op|','
name|'rest_with_last'
op|'='
name|'True'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'path_info'
op|'='
string|"'/%s/%s/%s/%s'"
op|'%'
op|'('
name|'ver'
op|','
name|'dest_account'
op|','
name|'dest_container'
op|','
name|'dest_object'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Copy-From'"
op|']'
op|'='
name|'quote'
op|'('
name|'source'
op|')'
newline|'\n'
name|'del'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Destination'"
op|']'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'handle_PUT'
op|'('
name|'req'
op|','
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_source_object
dedent|''
name|'def'
name|'_get_source_object'
op|'('
name|'self'
op|','
name|'ssc_ctx'
op|','
name|'source_path'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'source_req'
op|'='
name|'req'
op|'.'
name|'copy_get'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# make sure the source request uses it's container_info"
nl|'\n'
name|'source_req'
op|'.'
name|'headers'
op|'.'
name|'pop'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
name|'None'
op|')'
newline|'\n'
name|'source_req'
op|'.'
name|'path_info'
op|'='
name|'quote'
op|'('
name|'source_path'
op|')'
newline|'\n'
name|'source_req'
op|'.'
name|'headers'
op|'['
string|"'X-Newest'"
op|']'
op|'='
string|"'true'"
newline|'\n'
name|'if'
string|"'swift.post_as_copy'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
comment|"# We're COPYing one object over itself because of a POST; rely on"
nl|'\n'
comment|"# the PUT for write authorization, don't require read authorization"
nl|'\n'
indent|'            '
name|'source_req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'lambda'
name|'req'
op|':'
name|'None'
newline|'\n'
name|'source_req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize_override'"
op|']'
op|'='
name|'True'
newline|'\n'
nl|'\n'
comment|'# in case we are copying an SLO manifest, set format=raw parameter'
nl|'\n'
dedent|''
name|'params'
op|'='
name|'source_req'
op|'.'
name|'params'
newline|'\n'
name|'if'
name|'params'
op|'.'
name|'get'
op|'('
string|"'multipart-manifest'"
op|')'
op|'=='
string|"'get'"
op|':'
newline|'\n'
indent|'            '
name|'params'
op|'['
string|"'format'"
op|']'
op|'='
string|"'raw'"
newline|'\n'
name|'source_req'
op|'.'
name|'params'
op|'='
name|'params'
newline|'\n'
nl|'\n'
dedent|''
name|'source_resp'
op|'='
name|'ssc_ctx'
op|'.'
name|'get_source_resp'
op|'('
name|'source_req'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'source_resp'
op|'.'
name|'content_length'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# This indicates a transfer-encoding: chunked source object,'
nl|'\n'
comment|'# which currently only happens because there are more than'
nl|'\n'
comment|'# CONTAINER_LISTING_LIMIT segments in a segmented object. In'
nl|'\n'
comment|"# this case, we're going to refuse to do the server-side copy."
nl|'\n'
indent|'            '
name|'return'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'source_resp'
op|'.'
name|'content_length'
op|'>'
name|'MAX_FILE_SIZE'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'source_resp'
newline|'\n'
nl|'\n'
DECL|member|_create_response_headers
dedent|''
name|'def'
name|'_create_response_headers'
op|'('
name|'self'
op|','
name|'source_path'
op|','
name|'source_resp'
op|','
name|'sink_req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp_headers'
op|'='
name|'dict'
op|'('
op|')'
newline|'\n'
name|'acct'
op|','
name|'path'
op|'='
name|'source_path'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'3'
op|')'
op|'['
number|'2'
op|':'
number|'4'
op|']'
newline|'\n'
name|'resp_headers'
op|'['
string|"'X-Copied-From-Account'"
op|']'
op|'='
name|'quote'
op|'('
name|'acct'
op|')'
newline|'\n'
name|'resp_headers'
op|'['
string|"'X-Copied-From'"
op|']'
op|'='
name|'quote'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
string|"'last-modified'"
name|'in'
name|'source_resp'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'resp_headers'
op|'['
string|"'X-Copied-From-Last-Modified'"
op|']'
op|'='
name|'source_resp'
op|'.'
name|'headers'
op|'['
string|"'last-modified'"
op|']'
newline|'\n'
comment|'# Existing sys and user meta of source object is added to response'
nl|'\n'
comment|'# headers in addition to the new ones.'
nl|'\n'
dedent|''
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'sink_req'
op|'.'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'is_sys_or_user_meta'
op|'('
string|"'object'"
op|','
name|'k'
op|')'
name|'or'
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|"'x-delete-at'"
op|':'
newline|'\n'
indent|'                '
name|'resp_headers'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'resp_headers'
newline|'\n'
nl|'\n'
DECL|member|handle_PUT
dedent|''
name|'def'
name|'handle_PUT'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'req'
op|'.'
name|'content_length'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
string|"'Copy requests require a zero byte '"
nl|'\n'
string|"'body'"
op|','
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
nl|'\n'
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
comment|'# Form the path of source object to be fetched'
nl|'\n'
dedent|''
name|'ver'
op|','
name|'acct'
op|','
name|'_rest'
op|'='
name|'req'
op|'.'
name|'split_path'
op|'('
number|'2'
op|','
number|'3'
op|','
name|'True'
op|')'
newline|'\n'
name|'src_account_name'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Copy-From-Account'"
op|')'
newline|'\n'
name|'if'
name|'src_account_name'
op|':'
newline|'\n'
indent|'            '
name|'src_account_name'
op|'='
name|'check_account_format'
op|'('
name|'req'
op|','
name|'src_account_name'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'src_account_name'
op|'='
name|'acct'
newline|'\n'
dedent|''
name|'src_container_name'
op|','
name|'src_obj_name'
op|'='
name|'_check_copy_from_header'
op|'('
name|'req'
op|')'
newline|'\n'
name|'source_path'
op|'='
string|"'/%s/%s/%s/%s'"
op|'%'
op|'('
name|'ver'
op|','
name|'src_account_name'
op|','
nl|'\n'
name|'src_container_name'
op|','
name|'src_obj_name'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'req'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'swift.orig_req_method'"
op|','
name|'req'
op|'.'
name|'method'
op|')'
op|'!='
string|"'POST'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
string|'"Copying object from %s to %s"'
op|'%'
nl|'\n'
op|'('
name|'source_path'
op|','
name|'req'
op|'.'
name|'path'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# GET the source object, bail out on error'
nl|'\n'
dedent|''
name|'ssc_ctx'
op|'='
name|'ServerSideCopyWebContext'
op|'('
name|'self'
op|'.'
name|'app'
op|','
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
name|'source_resp'
op|'='
name|'self'
op|'.'
name|'_get_source_object'
op|'('
name|'ssc_ctx'
op|','
name|'source_path'
op|','
name|'req'
op|')'
newline|'\n'
name|'if'
name|'source_resp'
op|'.'
name|'status_int'
op|'>='
name|'HTTP_MULTIPLE_CHOICES'
op|':'
newline|'\n'
indent|'            '
name|'close_if_possible'
op|'('
name|'source_resp'
op|'.'
name|'app_iter'
op|')'
newline|'\n'
name|'return'
name|'source_resp'
op|'('
name|'source_resp'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
comment|'# Create a new Request object based on the original req instance.'
nl|'\n'
comment|'# This will preserve env and headers.'
nl|'\n'
dedent|''
name|'sink_req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
nl|'\n'
name|'environ'
op|'='
name|'req'
op|'.'
name|'environ'
op|','
name|'headers'
op|'='
name|'req'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'params'
op|'='
name|'sink_req'
op|'.'
name|'params'
newline|'\n'
name|'if'
name|'params'
op|'.'
name|'get'
op|'('
string|"'multipart-manifest'"
op|')'
op|'=='
string|"'get'"
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'X-Static-Large-Object'"
name|'in'
name|'source_resp'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'params'
op|'['
string|"'multipart-manifest'"
op|']'
op|'='
string|"'put'"
newline|'\n'
dedent|''
name|'if'
string|"'X-Object-Manifest'"
name|'in'
name|'source_resp'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'params'
op|'['
string|"'multipart-manifest'"
op|']'
newline|'\n'
name|'sink_req'
op|'.'
name|'headers'
op|'['
string|"'X-Object-Manifest'"
op|']'
op|'='
name|'source_resp'
op|'.'
name|'headers'
op|'['
string|"'X-Object-Manifest'"
op|']'
newline|'\n'
dedent|''
name|'sink_req'
op|'.'
name|'params'
op|'='
name|'params'
newline|'\n'
nl|'\n'
comment|'# Set data source, content length and etag for the PUT request'
nl|'\n'
dedent|''
name|'sink_req'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'='
name|'FileLikeIter'
op|'('
name|'source_resp'
op|'.'
name|'app_iter'
op|')'
newline|'\n'
name|'sink_req'
op|'.'
name|'content_length'
op|'='
name|'source_resp'
op|'.'
name|'content_length'
newline|'\n'
name|'sink_req'
op|'.'
name|'etag'
op|'='
name|'source_resp'
op|'.'
name|'etag'
newline|'\n'
nl|'\n'
comment|'# We no longer need these headers'
nl|'\n'
name|'sink_req'
op|'.'
name|'headers'
op|'.'
name|'pop'
op|'('
string|"'X-Copy-From'"
op|','
name|'None'
op|')'
newline|'\n'
name|'sink_req'
op|'.'
name|'headers'
op|'.'
name|'pop'
op|'('
string|"'X-Copy-From-Account'"
op|','
name|'None'
op|')'
newline|'\n'
comment|'# If the copy request does not explicitly override content-type,'
nl|'\n'
comment|'# use the one present in the source object.'
nl|'\n'
name|'if'
name|'not'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'content-type'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sink_req'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
name|'source_resp'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'fresh_meta_flag'
op|'='
name|'config_true_value'
op|'('
nl|'\n'
name|'sink_req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-fresh-metadata'"
op|','
string|"'false'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'fresh_meta_flag'
name|'or'
string|"'swift.post_as_copy'"
name|'in'
name|'sink_req'
op|'.'
name|'environ'
op|':'
newline|'\n'
comment|'# Post-as-copy: ignore new sysmeta, copy existing sysmeta'
nl|'\n'
indent|'            '
name|'condition'
op|'='
name|'lambda'
name|'k'
op|':'
name|'is_sys_meta'
op|'('
string|"'object'"
op|','
name|'k'
op|')'
newline|'\n'
name|'remove_items'
op|'('
name|'sink_req'
op|'.'
name|'headers'
op|','
name|'condition'
op|')'
newline|'\n'
name|'copy_header_subset'
op|'('
name|'source_resp'
op|','
name|'sink_req'
op|','
name|'condition'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Copy/update existing sysmeta and user meta'
nl|'\n'
indent|'            '
name|'_copy_headers_into'
op|'('
name|'source_resp'
op|','
name|'sink_req'
op|')'
newline|'\n'
comment|'# Copy/update new metadata provided in request if any'
nl|'\n'
name|'_copy_headers_into'
op|'('
name|'req'
op|','
name|'sink_req'
op|')'
newline|'\n'
nl|'\n'
comment|'# Create response headers for PUT response'
nl|'\n'
dedent|''
name|'resp_headers'
op|'='
name|'self'
op|'.'
name|'_create_response_headers'
op|'('
name|'source_path'
op|','
nl|'\n'
name|'source_resp'
op|','
name|'sink_req'
op|')'
newline|'\n'
nl|'\n'
name|'put_resp'
op|'='
name|'ssc_ctx'
op|'.'
name|'send_put_req'
op|'('
name|'sink_req'
op|','
name|'resp_headers'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'close_if_possible'
op|'('
name|'source_resp'
op|'.'
name|'app_iter'
op|')'
newline|'\n'
name|'return'
name|'put_resp'
newline|'\n'
nl|'\n'
DECL|member|handle_OPTIONS
dedent|''
name|'def'
name|'handle_OPTIONS'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'ServerSideCopyWebContext'
op|'('
name|'self'
op|'.'
name|'app'
op|','
name|'self'
op|'.'
name|'logger'
op|')'
op|'.'
name|'handle_OPTIONS_request'
op|'('
name|'req'
op|','
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|filter_factory
dedent|''
dedent|''
name|'def'
name|'filter_factory'
op|'('
name|'global_conf'
op|','
op|'**'
name|'local_conf'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'conf'
op|'='
name|'global_conf'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'update'
op|'('
name|'local_conf'
op|')'
newline|'\n'
nl|'\n'
DECL|function|copy_filter
name|'def'
name|'copy_filter'
op|'('
name|'app'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'ServerSideCopyMiddleware'
op|'('
name|'app'
op|','
name|'conf'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'copy_filter'
newline|'\n'
dedent|''
endmarker|''
end_unit
