begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'errno'
newline|'\n'
name|'from'
name|'os'
op|'.'
name|'path'
name|'import'
name|'isdir'
op|','
name|'isfile'
op|','
name|'join'
op|','
name|'dirname'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'itertools'
newline|'\n'
name|'import'
name|'six'
op|'.'
name|'moves'
op|'.'
name|'cPickle'
name|'as'
name|'pickle'
newline|'\n'
name|'from'
name|'swift'
name|'import'
name|'gettext_'
name|'as'
name|'_'
newline|'\n'
nl|'\n'
name|'import'
name|'eventlet'
newline|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'GreenPool'
op|','
name|'tpool'
op|','
name|'Timeout'
op|','
name|'sleep'
op|','
name|'hubs'
newline|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'green'
name|'import'
name|'subprocess'
newline|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'support'
op|'.'
name|'greenlets'
name|'import'
name|'GreenletExit'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
op|'.'
name|'utils'
name|'import'
name|'is_local_device'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'whataremyips'
op|','
name|'unlink_older_than'
op|','
name|'compute_eta'
op|','
name|'get_logger'
op|','
name|'dump_recon_cache'
op|','
name|'ismount'
op|','
name|'rsync_ip'
op|','
name|'mkdirs'
op|','
name|'config_true_value'
op|','
name|'list_from_csv'
op|','
name|'get_hub'
op|','
name|'tpool_reraise'
op|','
name|'config_auto_int_value'
op|','
name|'storage_directory'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'bufferedhttp'
name|'import'
name|'http_connect'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'daemon'
name|'import'
name|'Daemon'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'http'
name|'import'
name|'HTTP_OK'
op|','
name|'HTTP_INSUFFICIENT_STORAGE'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'ssync_sender'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
op|'.'
name|'diskfile'
name|'import'
name|'DiskFileManager'
op|','
name|'get_data_dir'
op|','
name|'get_tmp_dir'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'POLICIES'
op|','
name|'REPL_POLICY'
newline|'\n'
nl|'\n'
nl|'\n'
name|'hubs'
op|'.'
name|'use_hub'
op|'('
name|'get_hub'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ObjectReplicator
name|'class'
name|'ObjectReplicator'
op|'('
name|'Daemon'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Replicate objects.\n\n    Encapsulates most logic and data needed by the object replication process.\n    Each call to .replicate() performs one replication pass.  It\'s up to the\n    caller to do this in a loop.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'conf'
op|','
name|'logger'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        :param conf: configuration object obtained from ConfigParser\n        :param logger: logging object\n        """'
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'='
name|'conf'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'logger'
name|'or'
name|'get_logger'
op|'('
name|'conf'
op|','
name|'log_route'
op|'='
string|"'object-replicator'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'devices_dir'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'devices'"
op|','
string|"'/srv/node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mount_check'
op|'='
name|'config_true_value'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'mount_check'"
op|','
string|"'true'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'vm_test_mode'
op|'='
name|'config_true_value'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'vm_test_mode'"
op|','
string|"'no'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'swift_dir'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'swift_dir'"
op|','
string|"'/etc/swift'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'bind_ip'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'bind_ip'"
op|','
string|"'0.0.0.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'servers_per_port'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'servers_per_port'"
op|','
string|"'0'"
op|')'
name|'or'
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'port'
op|'='
name|'None'
name|'if'
name|'self'
op|'.'
name|'servers_per_port'
name|'else'
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'bind_port'"
op|','
number|'6000'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'concurrency'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'concurrency'"
op|','
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats_interval'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'stats_interval'"
op|','
string|"'300'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ring_check_interval'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'ring_check_interval'"
op|','
number|'15'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'next_check'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
name|'self'
op|'.'
name|'ring_check_interval'
newline|'\n'
name|'self'
op|'.'
name|'reclaim_age'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'reclaim_age'"
op|','
number|'86400'
op|'*'
number|'7'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'partition_times'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'interval'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'interval'"
op|')'
name|'or'
nl|'\n'
name|'conf'
op|'.'
name|'get'
op|'('
string|"'run_pause'"
op|')'
name|'or'
number|'30'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rsync_timeout'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'rsync_timeout'"
op|','
number|'900'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rsync_io_timeout'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'rsync_io_timeout'"
op|','
string|"'30'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rsync_bwlimit'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'rsync_bwlimit'"
op|','
string|"'0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rsync_compress'
op|'='
name|'config_true_value'
op|'('
nl|'\n'
name|'conf'
op|'.'
name|'get'
op|'('
string|"'rsync_compress'"
op|','
string|"'no'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'http_timeout'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'http_timeout'"
op|','
number|'60'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lockup_timeout'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'lockup_timeout'"
op|','
number|'1800'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'recon_cache_path'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'recon_cache_path'"
op|','
nl|'\n'
string|"'/var/cache/swift'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rcache'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'recon_cache_path'
op|','
string|'"object.recon"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn_timeout'
op|'='
name|'float'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'conn_timeout'"
op|','
number|'0.5'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'node_timeout'
op|'='
name|'float'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'node_timeout'"
op|','
number|'10'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sync_method'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
name|'conf'
op|'.'
name|'get'
op|'('
string|"'sync_method'"
op|')'
name|'or'
string|"'rsync'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network_chunk_size'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'network_chunk_size'"
op|','
number|'65536'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'user-agent'"
op|':'
string|"'object-replicator %s'"
op|'%'
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'rsync_error_log_line_length'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'rsync_error_log_line_length'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'handoffs_first'
op|'='
name|'config_true_value'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'handoffs_first'"
op|','
nl|'\n'
name|'False'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'handoff_delete'
op|'='
name|'config_auto_int_value'
op|'('
nl|'\n'
name|'conf'
op|'.'
name|'get'
op|'('
string|"'handoff_delete'"
op|','
string|"'auto'"
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'if'
name|'any'
op|'('
op|'('
name|'self'
op|'.'
name|'handoff_delete'
op|','
name|'self'
op|'.'
name|'handoffs_first'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'warn'
op|'('
string|"'handoffs_first and handoff_delete should be'"
nl|'\n'
string|"' changed back to the default before the next'"
nl|'\n'
string|"' normal rebalance'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_diskfile_mgr'
op|'='
name|'DiskFileManager'
op|'('
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
nl|'\n'
comment|'# Just exists for doc anchor point'
nl|'\n'
DECL|member|sync
dedent|''
name|'def'
name|'sync'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Synchronize local suffix directories from a partition with a remote\n        node.\n\n        :param node: the "dev" entry for the remote node to sync with\n        :param job: information about the partition being synced\n        :param suffixes: a list of suffixes which need to be pushed\n\n        :returns: boolean indicating success or failure\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'sync_method'
op|'('
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|load_object_ring
dedent|''
name|'def'
name|'load_object_ring'
op|'('
name|'self'
op|','
name|'policy'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Make sure the policy\'s rings are loaded.\n\n        :param policy: the StoragePolicy instance\n        :returns: appropriate ring object\n        """'
newline|'\n'
name|'policy'
op|'.'
name|'load_ring'
op|'('
name|'self'
op|'.'
name|'swift_dir'
op|')'
newline|'\n'
name|'return'
name|'policy'
op|'.'
name|'object_ring'
newline|'\n'
nl|'\n'
DECL|member|_rsync
dedent|''
name|'def'
name|'_rsync'
op|'('
name|'self'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Execute the rsync binary to replicate a partition.\n\n        :returns: return code of rsync process. 0 is successful\n        """'
newline|'\n'
name|'start_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'ret_val'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'rsync_timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'proc'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
name|'args'
op|','
nl|'\n'
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|','
nl|'\n'
name|'stderr'
op|'='
name|'subprocess'
op|'.'
name|'STDOUT'
op|')'
newline|'\n'
name|'results'
op|'='
name|'proc'
op|'.'
name|'stdout'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'ret_val'
op|'='
name|'proc'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Timeout'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|'"Killing long-running rsync: %s"'
op|')'
op|','
name|'str'
op|'('
name|'args'
op|')'
op|')'
newline|'\n'
name|'proc'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'return'
number|'1'
comment|'# failure response code'
newline|'\n'
dedent|''
name|'total_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'start_time'
newline|'\n'
name|'for'
name|'result'
name|'in'
name|'results'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'result'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'result'
op|'.'
name|'startswith'
op|'('
string|"'cd+'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'ret_val'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
name|'result'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'result'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'ret_val'
op|':'
newline|'\n'
indent|'            '
name|'error_line'
op|'='
name|'_'
op|'('
string|"'Bad rsync return code: %(ret)d <- %(args)s'"
op|')'
op|'%'
op|'{'
string|"'args'"
op|':'
name|'str'
op|'('
name|'args'
op|')'
op|','
string|"'ret'"
op|':'
name|'ret_val'
op|'}'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'rsync_error_log_line_length'
op|':'
newline|'\n'
indent|'                '
name|'error_line'
op|'='
name|'error_line'
op|'['
op|':'
name|'self'
op|'.'
name|'rsync_error_log_line_length'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'error_line'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'results'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
nl|'\n'
name|'_'
op|'('
string|'"Successful rsync of %(src)s at %(dst)s (%(time).03f)"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'src'"
op|':'
name|'args'
op|'['
op|'-'
number|'2'
op|']'
op|','
string|"'dst'"
op|':'
name|'args'
op|'['
op|'-'
number|'1'
op|']'
op|','
string|"'time'"
op|':'
name|'total_time'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
nl|'\n'
name|'_'
op|'('
string|'"Successful rsync of %(src)s at %(dst)s (%(time).03f)"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'src'"
op|':'
name|'args'
op|'['
op|'-'
number|'2'
op|']'
op|','
string|"'dst'"
op|':'
name|'args'
op|'['
op|'-'
number|'1'
op|']'
op|','
string|"'time'"
op|':'
name|'total_time'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'ret_val'
newline|'\n'
nl|'\n'
DECL|member|rsync
dedent|''
name|'def'
name|'rsync'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Uses rsync to implement the sync method. This was the first\n        sync method in Swift.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'job'
op|'['
string|"'path'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
op|','
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'args'
op|'='
op|'['
nl|'\n'
string|"'rsync'"
op|','
nl|'\n'
string|"'--recursive'"
op|','
nl|'\n'
string|"'--whole-file'"
op|','
nl|'\n'
string|"'--human-readable'"
op|','
nl|'\n'
string|"'--xattrs'"
op|','
nl|'\n'
string|"'--itemize-changes'"
op|','
nl|'\n'
string|"'--ignore-existing'"
op|','
nl|'\n'
string|"'--timeout=%s'"
op|'%'
name|'self'
op|'.'
name|'rsync_io_timeout'
op|','
nl|'\n'
string|"'--contimeout=%s'"
op|'%'
name|'self'
op|'.'
name|'rsync_io_timeout'
op|','
nl|'\n'
string|"'--bwlimit=%s'"
op|'%'
name|'self'
op|'.'
name|'rsync_bwlimit'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'rsync_compress'
name|'and'
name|'job'
op|'['
string|"'region'"
op|']'
op|'!='
name|'node'
op|'['
string|"'region'"
op|']'
op|':'
newline|'\n'
comment|'# Allow for compression, but only if the remote node is in'
nl|'\n'
comment|'# a different region than the local one.'
nl|'\n'
indent|'            '
name|'args'
op|'.'
name|'append'
op|'('
string|"'--compress'"
op|')'
newline|'\n'
dedent|''
name|'node_ip'
op|'='
name|'rsync_ip'
op|'('
name|'node'
op|'['
string|"'replication_ip'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'vm_test_mode'
op|':'
newline|'\n'
indent|'            '
name|'rsync_module'
op|'='
string|"'%s::object%s'"
op|'%'
op|'('
name|'node_ip'
op|','
name|'node'
op|'['
string|"'replication_port'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'rsync_module'
op|'='
string|"'%s::object'"
op|'%'
name|'node_ip'
newline|'\n'
dedent|''
name|'had_any'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'suffix'
name|'in'
name|'suffixes'
op|':'
newline|'\n'
indent|'            '
name|'spath'
op|'='
name|'join'
op|'('
name|'job'
op|'['
string|"'path'"
op|']'
op|','
name|'suffix'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'spath'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'args'
op|'.'
name|'append'
op|'('
name|'spath'
op|')'
newline|'\n'
name|'had_any'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'had_any'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
op|','
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'data_dir'
op|'='
name|'get_data_dir'
op|'('
name|'job'
op|'['
string|"'policy'"
op|']'
op|')'
newline|'\n'
name|'args'
op|'.'
name|'append'
op|'('
name|'join'
op|'('
name|'rsync_module'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
name|'data_dir'
op|','
name|'job'
op|'['
string|"'partition'"
op|']'
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_rsync'
op|'('
name|'args'
op|')'
op|'=='
number|'0'
op|','
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|ssync
dedent|''
name|'def'
name|'ssync'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|','
name|'remote_check_objs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
nl|'\n'
name|'self'
op|','
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|','
name|'remote_check_objs'
op|')'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_ring
dedent|''
name|'def'
name|'check_ring'
op|'('
name|'self'
op|','
name|'object_ring'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check to see if the ring has been updated\n        :param object_ring: the ring to check\n\n        :returns: boolean indicating whether or not the ring has changed\n        """'
newline|'\n'
name|'if'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'>'
name|'self'
op|'.'
name|'next_check'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'next_check'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
name|'self'
op|'.'
name|'ring_check_interval'
newline|'\n'
name|'if'
name|'object_ring'
op|'.'
name|'has_changed'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|update_deleted
dedent|''
name|'def'
name|'update_deleted'
op|'('
name|'self'
op|','
name|'job'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        High-level method that replicates a single partition that doesn\'t\n        belong on this node.\n\n        :param job: a dict containing info about the partition to be replicated\n        """'
newline|'\n'
nl|'\n'
DECL|function|tpool_get_suffixes
name|'def'
name|'tpool_get_suffixes'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'suff'
name|'for'
name|'suff'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'path'
op|')'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'suff'
op|')'
op|'=='
number|'3'
name|'and'
name|'isdir'
op|'('
name|'join'
op|'('
name|'path'
op|','
name|'suff'
op|')'
op|')'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'replication_count'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'partition.delete.count.%s'"
op|'%'
op|'('
name|'job'
op|'['
string|"'device'"
op|']'
op|','
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|'='
name|'int'
op|'('
name|'job'
op|'['
string|"'policy'"
op|']'
op|')'
newline|'\n'
name|'begin'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'responses'
op|'='
op|'['
op|']'
newline|'\n'
name|'suffixes'
op|'='
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'tpool_get_suffixes'
op|','
name|'job'
op|'['
string|"'path'"
op|']'
op|')'
newline|'\n'
name|'synced_remote_regions'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'delete_objs'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'suffixes'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'node'
name|'in'
name|'job'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'node'
op|'['
string|"'region'"
op|']'
name|'in'
name|'synced_remote_regions'
name|'and'
name|'self'
op|'.'
name|'conf'
op|'.'
name|'get'
op|'('
string|"'sync_method'"
op|','
string|"'rsync'"
op|')'
op|'=='
string|"'ssync'"
op|':'
newline|'\n'
indent|'                        '
name|'kwargs'
op|'['
string|"'remote_check_objs'"
op|']'
op|'='
name|'synced_remote_regions'
op|'['
name|'node'
op|'['
string|"'region'"
op|']'
op|']'
newline|'\n'
comment|'# candidates is a dict(hash=>timestamp) of objects'
nl|'\n'
comment|'# for deletion'
nl|'\n'
dedent|''
name|'success'
op|','
name|'candidates'
op|'='
name|'self'
op|'.'
name|'sync'
op|'('
nl|'\n'
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'if'
name|'success'
op|':'
newline|'\n'
indent|'                        '
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'http_timeout'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'conn'
op|'='
name|'http_connect'
op|'('
nl|'\n'
name|'node'
op|'['
string|"'replication_ip'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'replication_port'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'job'
op|'['
string|"'partition'"
op|']'
op|','
string|"'REPLICATE'"
op|','
nl|'\n'
string|"'/'"
op|'+'
string|"'-'"
op|'.'
name|'join'
op|'('
name|'suffixes'
op|')'
op|','
name|'headers'
op|'='
name|'self'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'node'
op|'['
string|"'region'"
op|']'
op|'!='
name|'job'
op|'['
string|"'region'"
op|']'
op|':'
newline|'\n'
indent|'                            '
name|'synced_remote_regions'
op|'['
name|'node'
op|'['
string|"'region'"
op|']'
op|']'
op|'='
name|'candidates'
op|'.'
name|'keys'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'responses'
op|'.'
name|'append'
op|'('
name|'success'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'region'
op|','
name|'cand_objs'
name|'in'
name|'synced_remote_regions'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'delete_objs'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                        '
name|'delete_objs'
op|'='
name|'cand_objs'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'delete_objs'
op|'='
name|'delete_objs'
op|'.'
name|'intersection'
op|'('
name|'cand_objs'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'handoff_delete'
op|':'
newline|'\n'
comment|'# delete handoff if we have had handoff_delete successes'
nl|'\n'
indent|'                '
name|'delete_handoff'
op|'='
name|'len'
op|'('
op|'['
name|'resp'
name|'for'
name|'resp'
name|'in'
name|'responses'
name|'if'
name|'resp'
op|']'
op|')'
op|'>='
name|'self'
op|'.'
name|'handoff_delete'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# delete handoff if all syncs were successful'
nl|'\n'
indent|'                '
name|'delete_handoff'
op|'='
name|'len'
op|'('
name|'responses'
op|')'
op|'=='
name|'len'
op|'('
name|'job'
op|'['
string|"'nodes'"
op|']'
op|')'
name|'and'
name|'all'
op|'('
name|'responses'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'delete_handoff'
op|':'
newline|'\n'
indent|'                '
name|'if'
op|'('
name|'self'
op|'.'
name|'conf'
op|'.'
name|'get'
op|'('
string|"'sync_method'"
op|','
string|"'rsync'"
op|')'
op|'=='
string|"'ssync'"
name|'and'
nl|'\n'
name|'delete_objs'
name|'is'
name|'not'
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Removing %s objects"'
op|')'
op|','
nl|'\n'
name|'len'
op|'('
name|'delete_objs'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'delete_handoff_objs'
op|'('
name|'job'
op|','
name|'delete_objs'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'delete_partition'
op|'('
name|'job'
op|'['
string|"'path'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'not'
name|'suffixes'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'delete_partition'
op|'('
name|'job'
op|'['
string|"'path'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Error syncing handoff partition"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'partition_times'
op|'.'
name|'append'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'begin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'timing_since'
op|'('
string|"'partition.delete.timing'"
op|','
name|'begin'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_partition
dedent|''
dedent|''
name|'def'
name|'delete_partition'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Removing partition: %s"'
op|')'
op|','
name|'path'
op|')'
newline|'\n'
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'shutil'
op|'.'
name|'rmtree'
op|','
name|'path'
op|','
name|'ignore_errors'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_handoff_objs
dedent|''
name|'def'
name|'delete_handoff_objs'
op|'('
name|'self'
op|','
name|'job'
op|','
name|'delete_objs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'object_hash'
name|'in'
name|'delete_objs'
op|':'
newline|'\n'
indent|'            '
name|'object_path'
op|'='
name|'storage_directory'
op|'('
name|'job'
op|'['
string|"'obj_path'"
op|']'
op|','
name|'job'
op|'['
string|"'partition'"
op|']'
op|','
nl|'\n'
name|'object_hash'
op|')'
newline|'\n'
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'shutil'
op|'.'
name|'rmtree'
op|','
name|'object_path'
op|','
name|'ignore_errors'
op|'='
name|'True'
op|')'
newline|'\n'
name|'suffix_dir'
op|'='
name|'dirname'
op|'('
name|'object_path'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'rmdir'
op|'('
name|'suffix_dir'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'e'
op|'.'
name|'errno'
name|'not'
name|'in'
op|'('
name|'errno'
op|'.'
name|'ENOENT'
op|','
name|'errno'
op|'.'
name|'ENOTEMPTY'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
nl|'\n'
string|'"Unexpected error trying to cleanup suffix dir:%r"'
op|','
nl|'\n'
name|'suffix_dir'
op|')'
newline|'\n'
nl|'\n'
DECL|member|update
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'job'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        High-level method that replicates a single partition.\n\n        :param job: a dict containing info about the partition to be replicated\n        """'
newline|'\n'
name|'self'
op|'.'
name|'replication_count'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'partition.update.count.%s'"
op|'%'
op|'('
name|'job'
op|'['
string|"'device'"
op|']'
op|','
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|'='
name|'int'
op|'('
name|'job'
op|'['
string|"'policy'"
op|']'
op|')'
newline|'\n'
name|'begin'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'hashed'
op|','
name|'local_hash'
op|'='
name|'tpool_reraise'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'_get_hashes'
op|','
name|'job'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'do_listdir'
op|'='
op|'('
name|'self'
op|'.'
name|'replication_count'
op|'%'
number|'10'
op|')'
op|'=='
number|'0'
op|','
nl|'\n'
name|'reclaim_age'
op|'='
name|'self'
op|'.'
name|'reclaim_age'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'suffix_hash'
op|'+='
name|'hashed'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'update_stats'
op|'('
string|"'suffix.hashes'"
op|','
name|'hashed'
op|')'
newline|'\n'
name|'attempts_left'
op|'='
name|'len'
op|'('
name|'job'
op|'['
string|"'nodes'"
op|']'
op|')'
newline|'\n'
name|'synced_remote_regions'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'random'
op|'.'
name|'shuffle'
op|'('
name|'job'
op|'['
string|"'nodes'"
op|']'
op|')'
newline|'\n'
name|'nodes'
op|'='
name|'itertools'
op|'.'
name|'chain'
op|'('
nl|'\n'
name|'job'
op|'['
string|"'nodes'"
op|']'
op|','
nl|'\n'
name|'job'
op|'['
string|"'policy'"
op|']'
op|'.'
name|'object_ring'
op|'.'
name|'get_more_nodes'
op|'('
nl|'\n'
name|'int'
op|'('
name|'job'
op|'['
string|"'partition'"
op|']'
op|')'
op|')'
op|')'
newline|'\n'
name|'while'
name|'attempts_left'
op|'>'
number|'0'
op|':'
newline|'\n'
comment|'# If this throws StopIteration it will be caught way below'
nl|'\n'
indent|'                '
name|'node'
op|'='
name|'next'
op|'('
name|'nodes'
op|')'
newline|'\n'
name|'attempts_left'
op|'-='
number|'1'
newline|'\n'
comment|'# if we have already synced to this remote region,'
nl|'\n'
comment|"# don't sync again on this replication pass"
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'region'"
op|']'
name|'in'
name|'synced_remote_regions'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'http_timeout'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'resp'
op|'='
name|'http_connect'
op|'('
nl|'\n'
name|'node'
op|'['
string|"'replication_ip'"
op|']'
op|','
name|'node'
op|'['
string|"'replication_port'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'job'
op|'['
string|"'partition'"
op|']'
op|','
string|"'REPLICATE'"
op|','
nl|'\n'
string|"''"
op|','
name|'headers'
op|'='
name|'self'
op|'.'
name|'headers'
op|')'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'=='
name|'HTTP_INSUFFICIENT_STORAGE'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|"'%(ip)s/%(device)s responded'"
nl|'\n'
string|"' as unmounted'"
op|')'
op|','
name|'node'
op|')'
newline|'\n'
name|'attempts_left'
op|'+='
number|'1'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status'
op|'!='
name|'HTTP_OK'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|'"Invalid response %(resp)s "'
nl|'\n'
string|'"from %(ip)s"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'resp'"
op|':'
name|'resp'
op|'.'
name|'status'
op|','
nl|'\n'
string|"'ip'"
op|':'
name|'node'
op|'['
string|"'replication_ip'"
op|']'
op|'}'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'remote_hash'
op|'='
name|'pickle'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
name|'del'
name|'resp'
newline|'\n'
dedent|''
name|'suffixes'
op|'='
op|'['
name|'suffix'
name|'for'
name|'suffix'
name|'in'
name|'local_hash'
name|'if'
nl|'\n'
name|'local_hash'
op|'['
name|'suffix'
op|']'
op|'!='
nl|'\n'
name|'remote_hash'
op|'.'
name|'get'
op|'('
name|'suffix'
op|','
op|'-'
number|'1'
op|')'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'suffixes'
op|':'
newline|'\n'
indent|'                        '
name|'continue'
newline|'\n'
dedent|''
name|'hashed'
op|','
name|'recalc_hash'
op|'='
name|'tpool_reraise'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'_get_hashes'
op|','
nl|'\n'
name|'job'
op|'['
string|"'path'"
op|']'
op|','
name|'recalculate'
op|'='
name|'suffixes'
op|','
nl|'\n'
name|'reclaim_age'
op|'='
name|'self'
op|'.'
name|'reclaim_age'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'update_stats'
op|'('
string|"'suffix.hashes'"
op|','
name|'hashed'
op|')'
newline|'\n'
name|'local_hash'
op|'='
name|'recalc_hash'
newline|'\n'
name|'suffixes'
op|'='
op|'['
name|'suffix'
name|'for'
name|'suffix'
name|'in'
name|'local_hash'
name|'if'
nl|'\n'
name|'local_hash'
op|'['
name|'suffix'
op|']'
op|'!='
nl|'\n'
name|'remote_hash'
op|'.'
name|'get'
op|'('
name|'suffix'
op|','
op|'-'
number|'1'
op|')'
op|']'
newline|'\n'
name|'success'
op|','
name|'_junk'
op|'='
name|'self'
op|'.'
name|'sync'
op|'('
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|')'
newline|'\n'
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'http_timeout'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'conn'
op|'='
name|'http_connect'
op|'('
nl|'\n'
name|'node'
op|'['
string|"'replication_ip'"
op|']'
op|','
name|'node'
op|'['
string|"'replication_port'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'job'
op|'['
string|"'partition'"
op|']'
op|','
string|"'REPLICATE'"
op|','
nl|'\n'
string|"'/'"
op|'+'
string|"'-'"
op|'.'
name|'join'
op|'('
name|'suffixes'
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
name|'self'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
comment|'# add only remote region when replicate succeeded'
nl|'\n'
dedent|''
name|'if'
name|'success'
name|'and'
name|'node'
op|'['
string|"'region'"
op|']'
op|'!='
name|'job'
op|'['
string|"'region'"
op|']'
op|':'
newline|'\n'
indent|'                        '
name|'synced_remote_regions'
op|'.'
name|'add'
op|'('
name|'node'
op|'['
string|"'region'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'suffix_sync'
op|'+='
name|'len'
op|'('
name|'suffixes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'update_stats'
op|'('
string|"'suffix.syncs'"
op|','
name|'len'
op|'('
name|'suffixes'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Error syncing with node: %s"'
op|')'
op|'%'
nl|'\n'
name|'node'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'suffix_count'
op|'+='
name|'len'
op|'('
name|'local_hash'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Error syncing partition"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'partition_times'
op|'.'
name|'append'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'begin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'timing_since'
op|'('
string|"'partition.update.timing'"
op|','
name|'begin'
op|')'
newline|'\n'
nl|'\n'
DECL|member|stats_line
dedent|''
dedent|''
name|'def'
name|'stats_line'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Logs various stats for the currently running replication pass.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'replication_count'
op|':'
newline|'\n'
indent|'            '
name|'elapsed'
op|'='
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'start'
op|')'
name|'or'
number|'0.000001'
newline|'\n'
name|'rate'
op|'='
name|'self'
op|'.'
name|'replication_count'
op|'/'
name|'elapsed'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
nl|'\n'
name|'_'
op|'('
string|'"%(replicated)d/%(total)d (%(percentage).2f%%)"'
nl|'\n'
string|'" partitions replicated in %(time).2fs (%(rate).2f/sec, "'
nl|'\n'
string|'"%(remaining)s remaining)"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'replicated'"
op|':'
name|'self'
op|'.'
name|'replication_count'
op|','
string|"'total'"
op|':'
name|'self'
op|'.'
name|'job_count'
op|','
nl|'\n'
string|"'percentage'"
op|':'
name|'self'
op|'.'
name|'replication_count'
op|'*'
number|'100.0'
op|'/'
name|'self'
op|'.'
name|'job_count'
op|','
nl|'\n'
string|"'time'"
op|':'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'start'
op|','
string|"'rate'"
op|':'
name|'rate'
op|','
nl|'\n'
string|"'remaining'"
op|':'
string|"'%d%s'"
op|'%'
name|'compute_eta'
op|'('
name|'self'
op|'.'
name|'start'
op|','
nl|'\n'
name|'self'
op|'.'
name|'replication_count'
op|','
nl|'\n'
name|'self'
op|'.'
name|'job_count'
op|')'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'suffix_count'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
nl|'\n'
name|'_'
op|'('
string|'"%(checked)d suffixes checked - "'
nl|'\n'
string|'"%(hashed).2f%% hashed, %(synced).2f%% synced"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'checked'"
op|':'
name|'self'
op|'.'
name|'suffix_count'
op|','
nl|'\n'
string|"'hashed'"
op|':'
op|'('
name|'self'
op|'.'
name|'suffix_hash'
op|'*'
number|'100.0'
op|')'
op|'/'
name|'self'
op|'.'
name|'suffix_count'
op|','
nl|'\n'
string|"'synced'"
op|':'
op|'('
name|'self'
op|'.'
name|'suffix_sync'
op|'*'
number|'100.0'
op|')'
op|'/'
name|'self'
op|'.'
name|'suffix_count'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'partition_times'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
nl|'\n'
name|'_'
op|'('
string|'"Partition times: max %(max).4fs, "'
nl|'\n'
string|'"min %(min).4fs, med %(med).4fs"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'max'"
op|':'
name|'self'
op|'.'
name|'partition_times'
op|'['
op|'-'
number|'1'
op|']'
op|','
nl|'\n'
string|"'min'"
op|':'
name|'self'
op|'.'
name|'partition_times'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'med'"
op|':'
name|'self'
op|'.'
name|'partition_times'
op|'['
nl|'\n'
name|'len'
op|'('
name|'self'
op|'.'
name|'partition_times'
op|')'
op|'//'
number|'2'
op|']'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
nl|'\n'
name|'_'
op|'('
string|'"Nothing replicated for %s seconds."'
op|')'
op|','
nl|'\n'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'start'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|kill_coros
dedent|''
dedent|''
name|'def'
name|'kill_coros'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Utility function that kills all coroutines currently running."""'
newline|'\n'
name|'for'
name|'coro'
name|'in'
name|'list'
op|'('
name|'self'
op|'.'
name|'run_pool'
op|'.'
name|'coroutines_running'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'coro'
op|'.'
name|'kill'
op|'('
name|'GreenletExit'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'GreenletExit'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|heartbeat
dedent|''
dedent|''
dedent|''
name|'def'
name|'heartbeat'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Loop that runs in the background during replication.  It periodically\n        logs progress.\n        """'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'stats_interval'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats_line'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|detect_lockups
dedent|''
dedent|''
name|'def'
name|'detect_lockups'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        In testing, the pool.waitall() call very occasionally failed to return.\n        This is an attempt to make sure the replicator finishes its replication\n        pass in some eventuality.\n        """'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'lockup_timeout'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'replication_count'
op|'=='
name|'self'
op|'.'
name|'last_replication_count'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|'"Lockup detected.. killing live coros."'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'kill_coros'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'last_replication_count'
op|'='
name|'self'
op|'.'
name|'replication_count'
newline|'\n'
nl|'\n'
DECL|member|build_replication_jobs
dedent|''
dedent|''
name|'def'
name|'build_replication_jobs'
op|'('
name|'self'
op|','
name|'policy'
op|','
name|'ips'
op|','
name|'override_devices'
op|'='
name|'None'
op|','
nl|'\n'
name|'override_partitions'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Helper function for collect_jobs to build jobs for replication\n        using replication style storage policy\n        """'
newline|'\n'
name|'jobs'
op|'='
op|'['
op|']'
newline|'\n'
name|'data_dir'
op|'='
name|'get_data_dir'
op|'('
name|'policy'
op|')'
newline|'\n'
name|'for'
name|'local_dev'
name|'in'
op|'['
name|'dev'
name|'for'
name|'dev'
name|'in'
name|'policy'
op|'.'
name|'object_ring'
op|'.'
name|'devs'
nl|'\n'
name|'if'
op|'('
name|'dev'
nl|'\n'
name|'and'
name|'is_local_device'
op|'('
name|'ips'
op|','
nl|'\n'
name|'self'
op|'.'
name|'port'
op|','
nl|'\n'
name|'dev'
op|'['
string|"'replication_ip'"
op|']'
op|','
nl|'\n'
name|'dev'
op|'['
string|"'replication_port'"
op|']'
op|')'
nl|'\n'
name|'and'
op|'('
name|'override_devices'
name|'is'
name|'None'
nl|'\n'
name|'or'
name|'dev'
op|'['
string|"'device'"
op|']'
name|'in'
name|'override_devices'
op|')'
op|')'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'dev_path'
op|'='
name|'join'
op|'('
name|'self'
op|'.'
name|'devices_dir'
op|','
name|'local_dev'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
name|'obj_path'
op|'='
name|'join'
op|'('
name|'dev_path'
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'tmp_path'
op|'='
name|'join'
op|'('
name|'dev_path'
op|','
name|'get_tmp_dir'
op|'('
name|'policy'
op|')'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'mount_check'
name|'and'
name|'not'
name|'ismount'
op|'('
name|'dev_path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|"'%s is not mounted'"
op|')'
op|','
name|'local_dev'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'unlink_older_than'
op|'('
name|'tmp_path'
op|','
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'reclaim_age'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'obj_path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'mkdirs'
op|'('
name|'obj_path'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
string|"'ERROR creating %s'"
op|'%'
name|'obj_path'
op|')'
newline|'\n'
dedent|''
name|'continue'
newline|'\n'
dedent|''
name|'for'
name|'partition'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'obj_path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
op|'('
name|'override_partitions'
name|'is'
name|'not'
name|'None'
nl|'\n'
name|'and'
name|'partition'
name|'not'
name|'in'
name|'override_partitions'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'job_path'
op|'='
name|'join'
op|'('
name|'obj_path'
op|','
name|'partition'
op|')'
newline|'\n'
name|'part_nodes'
op|'='
name|'policy'
op|'.'
name|'object_ring'
op|'.'
name|'get_part_nodes'
op|'('
nl|'\n'
name|'int'
op|'('
name|'partition'
op|')'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
name|'part_nodes'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'id'"
op|']'
op|'!='
name|'local_dev'
op|'['
string|"'id'"
op|']'
op|']'
newline|'\n'
name|'jobs'
op|'.'
name|'append'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'path'
op|'='
name|'job_path'
op|','
nl|'\n'
name|'device'
op|'='
name|'local_dev'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
name|'obj_path'
op|'='
name|'obj_path'
op|','
nl|'\n'
name|'nodes'
op|'='
name|'nodes'
op|','
nl|'\n'
name|'delete'
op|'='
name|'len'
op|'('
name|'nodes'
op|')'
op|'>'
name|'len'
op|'('
name|'part_nodes'
op|')'
op|'-'
number|'1'
op|','
nl|'\n'
name|'policy'
op|'='
name|'policy'
op|','
nl|'\n'
name|'partition'
op|'='
name|'partition'
op|','
nl|'\n'
name|'region'
op|'='
name|'local_dev'
op|'['
string|"'region'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'jobs'
newline|'\n'
nl|'\n'
DECL|member|collect_jobs
dedent|''
name|'def'
name|'collect_jobs'
op|'('
name|'self'
op|','
name|'override_devices'
op|'='
name|'None'
op|','
name|'override_partitions'
op|'='
name|'None'
op|','
nl|'\n'
name|'override_policies'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a sorted list of jobs (dictionaries) that specify the\n        partitions, nodes, etc to be rsynced.\n\n        :param override_devices: if set, only jobs on these devices\n            will be returned\n        :param override_partitions: if set, only jobs on these partitions\n            will be returned\n        :param override_policies: if set, only jobs in these storage\n            policies will be returned\n        """'
newline|'\n'
name|'jobs'
op|'='
op|'['
op|']'
newline|'\n'
name|'ips'
op|'='
name|'whataremyips'
op|'('
name|'self'
op|'.'
name|'bind_ip'
op|')'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'policy'
op|'.'
name|'policy_type'
op|'=='
name|'REPL_POLICY'
op|':'
newline|'\n'
indent|'                '
name|'if'
op|'('
name|'override_policies'
name|'is'
name|'not'
name|'None'
name|'and'
nl|'\n'
name|'str'
op|'('
name|'policy'
op|'.'
name|'idx'
op|')'
name|'not'
name|'in'
name|'override_policies'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
comment|'# ensure rings are loaded for policy'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'load_object_ring'
op|'('
name|'policy'
op|')'
newline|'\n'
name|'jobs'
op|'+='
name|'self'
op|'.'
name|'build_replication_jobs'
op|'('
nl|'\n'
name|'policy'
op|','
name|'ips'
op|','
name|'override_devices'
op|'='
name|'override_devices'
op|','
nl|'\n'
name|'override_partitions'
op|'='
name|'override_partitions'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'random'
op|'.'
name|'shuffle'
op|'('
name|'jobs'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'handoffs_first'
op|':'
newline|'\n'
comment|'# Move the handoff parts to the front of the list'
nl|'\n'
indent|'            '
name|'jobs'
op|'.'
name|'sort'
op|'('
name|'key'
op|'='
name|'lambda'
name|'job'
op|':'
name|'not'
name|'job'
op|'['
string|"'delete'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'job_count'
op|'='
name|'len'
op|'('
name|'jobs'
op|')'
newline|'\n'
name|'return'
name|'jobs'
newline|'\n'
nl|'\n'
DECL|member|replicate
dedent|''
name|'def'
name|'replicate'
op|'('
name|'self'
op|','
name|'override_devices'
op|'='
name|'None'
op|','
name|'override_partitions'
op|'='
name|'None'
op|','
nl|'\n'
name|'override_policies'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Run a replication pass"""'
newline|'\n'
name|'self'
op|'.'
name|'start'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'suffix_count'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'suffix_sync'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'suffix_hash'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'replication_count'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'last_replication_count'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'partition_times'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'stats'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'heartbeat'
op|')'
newline|'\n'
name|'lockup_detector'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'detect_lockups'
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
op|')'
comment|'# Give spawns a cycle'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'run_pool'
op|'='
name|'GreenPool'
op|'('
name|'size'
op|'='
name|'self'
op|'.'
name|'concurrency'
op|')'
newline|'\n'
name|'jobs'
op|'='
name|'self'
op|'.'
name|'collect_jobs'
op|'('
name|'override_devices'
op|'='
name|'override_devices'
op|','
nl|'\n'
name|'override_partitions'
op|'='
name|'override_partitions'
op|','
nl|'\n'
name|'override_policies'
op|'='
name|'override_policies'
op|')'
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
indent|'                '
name|'dev_path'
op|'='
name|'join'
op|'('
name|'self'
op|'.'
name|'devices_dir'
op|','
name|'job'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'mount_check'
name|'and'
name|'not'
name|'ismount'
op|'('
name|'dev_path'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|"'%s is not mounted'"
op|')'
op|','
name|'job'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'check_ring'
op|'('
name|'job'
op|'['
string|"'policy'"
op|']'
op|'.'
name|'object_ring'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Ring change detected. Aborting "'
nl|'\n'
string|'"current replication pass."'
op|')'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'isfile'
op|'('
name|'job'
op|'['
string|"'path'"
op|']'
op|')'
op|':'
newline|'\n'
comment|'# Clean up any (probably zero-byte) files where a'
nl|'\n'
comment|'# partition should be.'
nl|'\n'
indent|'                        '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'warning'
op|'('
nl|'\n'
string|"'Removing partition directory '"
nl|'\n'
string|"'which was a file: %s'"
op|','
name|'job'
op|'['
string|"'path'"
op|']'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'remove'
op|'('
name|'job'
op|'['
string|"'path'"
op|']'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'job'
op|'['
string|"'delete'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'run_pool'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'update_deleted'
op|','
name|'job'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'run_pool'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'update'
op|','
name|'job'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'lockup_timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'run_pool'
op|'.'
name|'waitall'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Exception in top-level replication loop"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'kill_coros'
op|'('
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'stats'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'lockup_detector'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats_line'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|run_once
dedent|''
dedent|''
name|'def'
name|'run_once'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'start'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Running object replicator in script mode."'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'override_devices'
op|'='
name|'list_from_csv'
op|'('
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'devices'"
op|')'
op|')'
newline|'\n'
name|'override_partitions'
op|'='
name|'list_from_csv'
op|'('
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'partitions'"
op|')'
op|')'
newline|'\n'
name|'override_policies'
op|'='
name|'list_from_csv'
op|'('
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'policies'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'override_devices'
op|':'
newline|'\n'
indent|'            '
name|'override_devices'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'override_partitions'
op|':'
newline|'\n'
indent|'            '
name|'override_partitions'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'override_policies'
op|':'
newline|'\n'
indent|'            '
name|'override_policies'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'replicate'
op|'('
nl|'\n'
name|'override_devices'
op|'='
name|'override_devices'
op|','
nl|'\n'
name|'override_partitions'
op|'='
name|'override_partitions'
op|','
nl|'\n'
name|'override_policies'
op|'='
name|'override_policies'
op|')'
newline|'\n'
name|'total'
op|'='
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'start'
op|')'
op|'/'
number|'60'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
nl|'\n'
name|'_'
op|'('
string|'"Object replication complete (once). (%.02f minutes)"'
op|')'
op|','
name|'total'
op|')'
newline|'\n'
name|'if'
name|'not'
op|'('
name|'override_partitions'
name|'or'
name|'override_devices'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'dump_recon_cache'
op|'('
op|'{'
string|"'object_replication_time'"
op|':'
name|'total'
op|','
nl|'\n'
string|"'object_replication_last'"
op|':'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'}'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
nl|'\n'
DECL|member|run_forever
dedent|''
dedent|''
name|'def'
name|'run_forever'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Starting object replicator in daemon mode."'
op|')'
op|')'
newline|'\n'
comment|'# Run the replicator continually'
nl|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'start'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|'"Starting object replication pass."'
op|')'
op|')'
newline|'\n'
comment|'# Run the replicator'
nl|'\n'
name|'self'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
name|'total'
op|'='
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'start'
op|')'
op|'/'
number|'60'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
nl|'\n'
name|'_'
op|'('
string|'"Object replication complete. (%.02f minutes)"'
op|')'
op|','
name|'total'
op|')'
newline|'\n'
name|'dump_recon_cache'
op|'('
op|'{'
string|"'object_replication_time'"
op|':'
name|'total'
op|','
nl|'\n'
string|"'object_replication_last'"
op|':'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'}'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Replication sleeping for %s seconds.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'interval'
op|')'
newline|'\n'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'interval'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
