begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'contextmanager'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'errno'
newline|'\n'
name|'from'
name|'shutil'
name|'import'
name|'rmtree'
newline|'\n'
name|'from'
name|'tempfile'
name|'import'
name|'mkdtemp'
op|','
name|'NamedTemporaryFile'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'db_replicator'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'normalize_timestamp'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'container'
name|'import'
name|'server'
name|'as'
name|'container_server'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'FakeLogger'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|teardown_module
name|'def'
name|'teardown_module'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"clean up my monkey patching"'
newline|'\n'
name|'reload'
op|'('
name|'db_replicator'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|function|lock_parent_directory
name|'def'
name|'lock_parent_directory'
op|'('
name|'filename'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'yield'
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeRing
dedent|''
name|'class'
name|'FakeRing'
op|':'
newline|'\n'
DECL|class|Ring
indent|'    '
name|'class'
name|'Ring'
op|':'
newline|'\n'
DECL|variable|devs
indent|'        '
name|'devs'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'reload_time'
op|'='
number|'15'
op|','
name|'ring_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|get_part_nodes
dedent|''
name|'def'
name|'get_part_nodes'
op|'('
name|'self'
op|','
name|'part'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_more_nodes
dedent|''
name|'def'
name|'get_more_nodes'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeRingWithNodes
dedent|''
dedent|''
dedent|''
name|'class'
name|'FakeRingWithNodes'
op|':'
newline|'\n'
DECL|class|Ring
indent|'    '
name|'class'
name|'Ring'
op|':'
newline|'\n'
DECL|variable|devs
indent|'        '
name|'devs'
op|'='
op|'['
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
name|'weight'
op|'='
number|'10.0'
op|','
name|'zone'
op|'='
number|'1'
op|','
name|'ip'
op|'='
string|"'1.1.1.1'"
op|','
name|'port'
op|'='
number|'6000'
op|','
name|'device'
op|'='
string|"'sdb'"
op|','
nl|'\n'
DECL|variable|meta
name|'meta'
op|'='
string|"''"
nl|'\n'
op|')'
op|','
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
number|'2'
op|','
name|'weight'
op|'='
number|'10.0'
op|','
name|'zone'
op|'='
number|'2'
op|','
name|'ip'
op|'='
string|"'1.1.1.2'"
op|','
name|'port'
op|'='
number|'6000'
op|','
name|'device'
op|'='
string|"'sdb'"
op|','
nl|'\n'
DECL|variable|meta
name|'meta'
op|'='
string|"''"
nl|'\n'
op|')'
op|','
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
number|'3'
op|','
name|'weight'
op|'='
number|'10.0'
op|','
name|'zone'
op|'='
number|'3'
op|','
name|'ip'
op|'='
string|"'1.1.1.3'"
op|','
name|'port'
op|'='
number|'6000'
op|','
name|'device'
op|'='
string|"'sdb'"
op|','
nl|'\n'
DECL|variable|meta
name|'meta'
op|'='
string|"''"
nl|'\n'
op|')'
op|','
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
number|'4'
op|','
name|'weight'
op|'='
number|'10.0'
op|','
name|'zone'
op|'='
number|'4'
op|','
name|'ip'
op|'='
string|"'1.1.1.4'"
op|','
name|'port'
op|'='
number|'6000'
op|','
name|'device'
op|'='
string|"'sdb'"
op|','
nl|'\n'
DECL|variable|meta
name|'meta'
op|'='
string|"''"
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'reload_time'
op|'='
number|'15'
op|','
name|'ring_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|get_part_nodes
dedent|''
name|'def'
name|'get_part_nodes'
op|'('
name|'self'
op|','
name|'part'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'devs'
op|'['
op|':'
number|'3'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_more_nodes
dedent|''
name|'def'
name|'get_more_nodes'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
name|'d'
name|'for'
name|'d'
name|'in'
name|'self'
op|'.'
name|'devs'
op|'['
number|'3'
op|':'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeProcess
dedent|''
dedent|''
dedent|''
name|'class'
name|'FakeProcess'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'codes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'codes'
op|'='
name|'iter'
op|'('
name|'codes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
DECL|class|Failure
indent|'        '
name|'class'
name|'Failure'
op|':'
newline|'\n'
DECL|member|communicate
indent|'            '
name|'def'
name|'communicate'
op|'('
name|'innerself'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'next'
op|'='
name|'self'
op|'.'
name|'codes'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'next'
op|','
name|'int'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'innerself'
op|'.'
name|'returncode'
op|'='
name|'next'
newline|'\n'
name|'return'
name|'next'
newline|'\n'
dedent|''
name|'raise'
name|'next'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'Failure'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|function|_mock_process
name|'def'
name|'_mock_process'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'orig_process'
op|'='
name|'db_replicator'
op|'.'
name|'subprocess'
op|'.'
name|'Popen'
newline|'\n'
name|'db_replicator'
op|'.'
name|'subprocess'
op|'.'
name|'Popen'
op|'='
name|'FakeProcess'
op|'('
op|'*'
name|'args'
op|')'
newline|'\n'
name|'yield'
newline|'\n'
name|'db_replicator'
op|'.'
name|'subprocess'
op|'.'
name|'Popen'
op|'='
name|'orig_process'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ReplHttp
dedent|''
name|'class'
name|'ReplHttp'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'response'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'response'
op|'='
name|'response'
newline|'\n'
DECL|variable|replicated
dedent|''
name|'replicated'
op|'='
name|'False'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
string|"'localhost'"
newline|'\n'
nl|'\n'
DECL|member|replicate
name|'def'
name|'replicate'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'replicated'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|class|Response
name|'class'
name|'Response'
op|':'
newline|'\n'
DECL|variable|status
indent|'            '
name|'status'
op|'='
number|'200'
newline|'\n'
DECL|variable|data
name|'data'
op|'='
name|'self'
op|'.'
name|'response'
newline|'\n'
nl|'\n'
DECL|member|read
name|'def'
name|'read'
op|'('
name|'innerself'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'response'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'Response'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ChangingMtimesOs
dedent|''
dedent|''
name|'class'
name|'ChangingMtimesOs'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mtime'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'path'
op|'='
name|'self'
newline|'\n'
name|'self'
op|'.'
name|'basename'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
newline|'\n'
nl|'\n'
DECL|member|getmtime
dedent|''
name|'def'
name|'getmtime'
op|'('
name|'self'
op|','
name|'file'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mtime'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'mtime'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeBroker
dedent|''
dedent|''
name|'class'
name|'FakeBroker'
op|':'
newline|'\n'
DECL|variable|db_file
indent|'    '
name|'db_file'
op|'='
name|'__file__'
newline|'\n'
DECL|variable|get_repl_missing_table
name|'get_repl_missing_table'
op|'='
name|'False'
newline|'\n'
DECL|variable|stub_replication_info
name|'stub_replication_info'
op|'='
name|'None'
newline|'\n'
DECL|variable|db_type
name|'db_type'
op|'='
string|"'container'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|member|lock
name|'def'
name|'lock'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|get_sync
dedent|''
name|'def'
name|'get_sync'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
number|'5'
newline|'\n'
nl|'\n'
DECL|member|get_syncs
dedent|''
name|'def'
name|'get_syncs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_items_since
dedent|''
name|'def'
name|'get_items_since'
op|'('
name|'self'
op|','
name|'point'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'point'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'{'
string|"'ROWID'"
op|':'
number|'1'
op|'}'
op|']'
newline|'\n'
dedent|''
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|merge_syncs
dedent|''
name|'def'
name|'merge_syncs'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'args'
op|'='
name|'args'
newline|'\n'
nl|'\n'
DECL|member|merge_items
dedent|''
name|'def'
name|'merge_items'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'args'
op|'='
name|'args'
newline|'\n'
nl|'\n'
DECL|member|get_replication_info
dedent|''
name|'def'
name|'get_replication_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'get_repl_missing_table'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'no such table'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'stub_replication_info'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'stub_replication_info'
newline|'\n'
dedent|''
name|'return'
op|'{'
string|"'delete_timestamp'"
op|':'
number|'0'
op|','
string|"'put_timestamp'"
op|':'
number|'1'
op|','
string|"'count'"
op|':'
number|'0'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|reclaim
dedent|''
name|'def'
name|'reclaim'
op|'('
name|'self'
op|','
name|'item_timestamp'
op|','
name|'sync_timestamp'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|get_info
dedent|''
name|'def'
name|'get_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestReplicator
dedent|''
dedent|''
name|'class'
name|'TestReplicator'
op|'('
name|'db_replicator'
op|'.'
name|'Replicator'
op|')'
op|':'
newline|'\n'
DECL|variable|server_type
indent|'    '
name|'server_type'
op|'='
string|"'container'"
newline|'\n'
DECL|variable|ring_file
name|'ring_file'
op|'='
string|"'container.ring.gz'"
newline|'\n'
DECL|variable|brokerclass
name|'brokerclass'
op|'='
name|'FakeBroker'
newline|'\n'
DECL|variable|datadir
name|'datadir'
op|'='
name|'container_server'
op|'.'
name|'DATADIR'
newline|'\n'
DECL|variable|default_port
name|'default_port'
op|'='
number|'1000'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDBReplicator
dedent|''
name|'class'
name|'TestDBReplicator'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_replicator'
op|'.'
name|'ring'
op|'='
name|'FakeRing'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'delete_db_calls'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|stub_delete_db
dedent|''
name|'def'
name|'stub_delete_db'
op|'('
name|'self'
op|','
name|'object_file'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'delete_db_calls'
op|'.'
name|'append'
op|'('
name|'object_file'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_repl_connection
dedent|''
name|'def'
name|'test_repl_connection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'port'"
op|':'
number|'80'
op|','
string|"'device'"
op|':'
string|"'sdb1'"
op|'}'
newline|'\n'
name|'conn'
op|'='
name|'db_replicator'
op|'.'
name|'ReplConnection'
op|'('
name|'node'
op|','
string|"'1234567890'"
op|','
string|"'abcdefg'"
op|','
nl|'\n'
name|'logging'
op|'.'
name|'getLogger'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|req
name|'def'
name|'req'
op|'('
name|'method'
op|','
name|'path'
op|','
name|'body'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'method'
op|','
string|"'REPLICATE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
string|"'application/json'"
op|')'
newline|'\n'
nl|'\n'
DECL|class|Resp
dedent|''
name|'class'
name|'Resp'
op|':'
newline|'\n'
DECL|member|read
indent|'            '
name|'def'
name|'read'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'data'"
newline|'\n'
dedent|''
dedent|''
name|'resp'
op|'='
name|'Resp'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'request'
op|'='
name|'req'
newline|'\n'
name|'conn'
op|'.'
name|'getresponse'
op|'='
name|'lambda'
op|'*'
name|'args'
op|':'
name|'resp'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conn'
op|'.'
name|'replicate'
op|'('
number|'1'
op|','
number|'2'
op|','
number|'3'
op|')'
op|','
name|'resp'
op|')'
newline|'\n'
nl|'\n'
DECL|function|other_req
name|'def'
name|'other_req'
op|'('
name|'method'
op|','
name|'path'
op|','
name|'body'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'blah'"
op|')'
newline|'\n'
dedent|''
name|'conn'
op|'.'
name|'request'
op|'='
name|'other_req'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conn'
op|'.'
name|'replicate'
op|'('
number|'1'
op|','
number|'2'
op|','
number|'3'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rsync_file
dedent|''
name|'def'
name|'test_rsync_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'with'
name|'_mock_process'
op|'('
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'False'
op|','
nl|'\n'
name|'replicator'
op|'.'
name|'_rsync_file'
op|'('
string|"'/some/file'"
op|','
string|"'remote:/some/file'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
number|'0'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'True'
op|','
nl|'\n'
name|'replicator'
op|'.'
name|'_rsync_file'
op|'('
string|"'/some/file'"
op|','
string|"'remote:/some/file'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rsync_db
dedent|''
dedent|''
name|'def'
name|'test_rsync_db'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'_rsync_file'
op|'='
name|'lambda'
op|'*'
name|'args'
op|':'
name|'True'
newline|'\n'
name|'fake_device'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'device'"
op|':'
string|"'sda1'"
op|'}'
newline|'\n'
name|'replicator'
op|'.'
name|'_rsync_db'
op|'('
name|'FakeBroker'
op|'('
op|')'
op|','
name|'fake_device'
op|','
name|'ReplHttp'
op|'('
op|')'
op|','
string|"'abcd'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_in_sync
dedent|''
name|'def'
name|'test_in_sync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'replicator'
op|'.'
name|'_in_sync'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'point'"
op|':'
op|'-'
number|'1'
op|','
string|"'max_row'"
op|':'
number|'0'
op|','
string|"'hash'"
op|':'
string|"'b'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'point'"
op|':'
op|'-'
number|'1'
op|','
string|"'max_row'"
op|':'
number|'0'
op|','
string|"'hash'"
op|':'
string|"'b'"
op|'}'
op|','
nl|'\n'
name|'FakeBroker'
op|'('
op|')'
op|','
op|'-'
number|'1'
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'replicator'
op|'.'
name|'_in_sync'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'point'"
op|':'
op|'-'
number|'1'
op|','
string|"'max_row'"
op|':'
number|'0'
op|','
string|"'hash'"
op|':'
string|"'b'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'point'"
op|':'
op|'-'
number|'1'
op|','
string|"'max_row'"
op|':'
number|'10'
op|','
string|"'hash'"
op|':'
string|"'b'"
op|'}'
op|','
nl|'\n'
name|'FakeBroker'
op|'('
op|')'
op|','
op|'-'
number|'1'
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'bool'
op|'('
name|'replicator'
op|'.'
name|'_in_sync'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'point'"
op|':'
op|'-'
number|'1'
op|','
string|"'max_row'"
op|':'
number|'0'
op|','
string|"'hash'"
op|':'
string|"'c'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'point'"
op|':'
op|'-'
number|'1'
op|','
string|"'max_row'"
op|':'
number|'10'
op|','
string|"'hash'"
op|':'
string|"'d'"
op|'}'
op|','
nl|'\n'
name|'FakeBroker'
op|'('
op|')'
op|','
op|'-'
number|'1'
op|')'
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_once
dedent|''
name|'def'
name|'test_run_once'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_usync
dedent|''
name|'def'
name|'test_usync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_http'
op|'='
name|'ReplHttp'
op|'('
op|')'
newline|'\n'
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'_usync_db'
op|'('
number|'0'
op|','
name|'FakeBroker'
op|'('
op|')'
op|','
name|'fake_http'
op|','
string|"'12345'"
op|','
string|"'67890'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_repl_to_node
dedent|''
name|'def'
name|'test_repl_to_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'fake_node'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'device'"
op|':'
string|"'sda1'"
op|','
string|"'port'"
op|':'
number|'1000'
op|'}'
newline|'\n'
name|'fake_info'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'point'"
op|':'
op|'-'
number|'1'
op|','
string|"'max_row'"
op|':'
number|'0'
op|','
string|"'hash'"
op|':'
string|"'b'"
op|','
nl|'\n'
string|"'created_at'"
op|':'
number|'100'
op|','
string|"'put_timestamp'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'delete_timestamp'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
string|"'Test'"
op|':'
op|'('
string|"'Value'"
op|','
name|'normalize_timestamp'
op|'('
number|'1'
op|')'
op|')'
op|'}'
op|'}'
newline|'\n'
name|'replicator'
op|'.'
name|'_http_connect'
op|'='
name|'lambda'
op|'*'
name|'args'
op|':'
name|'ReplHttp'
op|'('
nl|'\n'
string|'\'{"id": 3, "point": -1}\''
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'replicator'
op|'.'
name|'_repl_to_node'
op|'('
nl|'\n'
name|'fake_node'
op|','
name|'FakeBroker'
op|'('
op|')'
op|','
string|"'0'"
op|','
name|'fake_info'
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stats
dedent|''
name|'def'
name|'test_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# I'm not sure how to test that this logs the right thing,"
nl|'\n'
comment|'# but we can at least make sure it gets covered.'
nl|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'_zero_stats'
op|'('
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'_report_stats'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_replicate_object
dedent|''
name|'def'
name|'test_replicate_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_replicator'
op|'.'
name|'ring'
op|'='
name|'FakeRingWithNodes'
op|'('
op|')'
newline|'\n'
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'delete_db'
op|'='
name|'self'
op|'.'
name|'stub_delete_db'
newline|'\n'
name|'replicator'
op|'.'
name|'_replicate_object'
op|'('
string|"'0'"
op|','
string|"'/path/to/file'"
op|','
string|"'node_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
op|']'
op|','
name|'self'
op|'.'
name|'delete_db_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_replicate_object_quarantine
dedent|''
name|'def'
name|'test_replicate_object_quarantine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'was_db_file'
op|'='
name|'replicator'
op|'.'
name|'brokerclass'
op|'.'
name|'db_file'
newline|'\n'
name|'try'
op|':'
newline|'\n'
nl|'\n'
DECL|function|mock_renamer
indent|'            '
name|'def'
name|'mock_renamer'
op|'('
name|'was'
op|','
name|'new'
op|','
name|'cause_colision'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'cause_colision'
name|'and'
string|"'-'"
name|'not'
name|'in'
name|'new'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'EEXIST'
op|','
string|'"File already exists"'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'/a/b/c/d/e'"
op|','
name|'was'
op|')'
newline|'\n'
name|'if'
string|"'-'"
name|'in'
name|'new'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assert_'
op|'('
nl|'\n'
name|'new'
op|'.'
name|'startswith'
op|'('
string|"'/a/quarantined/containers/e-'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'/a/quarantined/containers/e'"
op|','
name|'new'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_renamer_error
dedent|''
dedent|''
name|'def'
name|'mock_renamer_error'
op|'('
name|'was'
op|','
name|'new'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'mock_renamer'
op|'('
name|'was'
op|','
name|'new'
op|','
name|'cause_colision'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'was_renamer'
op|'='
name|'db_replicator'
op|'.'
name|'renamer'
newline|'\n'
name|'db_replicator'
op|'.'
name|'renamer'
op|'='
name|'mock_renamer'
newline|'\n'
name|'replicator'
op|'.'
name|'brokerclass'
op|'.'
name|'get_repl_missing_table'
op|'='
name|'True'
newline|'\n'
name|'replicator'
op|'.'
name|'brokerclass'
op|'.'
name|'db_file'
op|'='
string|"'/a/b/c/d/e/hey'"
newline|'\n'
name|'replicator'
op|'.'
name|'_replicate_object'
op|'('
string|"'0'"
op|','
string|"'file'"
op|','
string|"'node_id'"
op|')'
newline|'\n'
comment|'# try the double quarantine'
nl|'\n'
name|'db_replicator'
op|'.'
name|'renamer'
op|'='
name|'mock_renamer_error'
newline|'\n'
name|'replicator'
op|'.'
name|'_replicate_object'
op|'('
string|"'0'"
op|','
string|"'file'"
op|','
string|"'node_id'"
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'replicator'
op|'.'
name|'brokerclass'
op|'.'
name|'db_file'
op|'='
name|'was_db_file'
newline|'\n'
name|'db_replicator'
op|'.'
name|'renamer'
op|'='
name|'was_renamer'
newline|'\n'
nl|'\n'
DECL|member|test_replicate_object_delete_because_deleted
dedent|''
dedent|''
name|'def'
name|'test_replicate_object_delete_because_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'replicator'
op|'.'
name|'delete_db'
op|'='
name|'self'
op|'.'
name|'stub_delete_db'
newline|'\n'
name|'replicator'
op|'.'
name|'brokerclass'
op|'.'
name|'stub_replication_info'
op|'='
op|'{'
nl|'\n'
string|"'delete_timestamp'"
op|':'
number|'2'
op|','
string|"'put_timestamp'"
op|':'
number|'1'
op|','
string|"'count'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'replicator'
op|'.'
name|'_replicate_object'
op|'('
string|"'0'"
op|','
string|"'/path/to/file'"
op|','
string|"'node_id'"
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'replicator'
op|'.'
name|'brokerclass'
op|'.'
name|'stub_replication_info'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
string|"'/path/to/file'"
op|']'
op|','
name|'self'
op|'.'
name|'delete_db_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_replicate_object_delete_because_not_shouldbehere
dedent|''
name|'def'
name|'test_replicate_object_delete_because_not_shouldbehere'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'delete_db'
op|'='
name|'self'
op|'.'
name|'stub_delete_db'
newline|'\n'
name|'replicator'
op|'.'
name|'_replicate_object'
op|'('
string|"'0'"
op|','
string|"'/path/to/file'"
op|','
string|"'node_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
string|"'/path/to/file'"
op|']'
op|','
name|'self'
op|'.'
name|'delete_db_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_db
dedent|''
name|'def'
name|'test_delete_db'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_replicator'
op|'.'
name|'lock_parent_directory'
op|'='
name|'lock_parent_directory'
newline|'\n'
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'_zero_stats'
op|'('
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'extract_device'
op|'='
name|'lambda'
name|'_'
op|':'
string|"'some_device'"
newline|'\n'
name|'replicator'
op|'.'
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'temp_dir'
op|'='
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'temp_suf_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'temp_dir'
op|','
string|"'16e'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'temp_suf_dir'
op|')'
newline|'\n'
name|'temp_hash_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'temp_suf_dir'
op|','
nl|'\n'
string|"'166e33924a08ede4204871468c11e16e'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'temp_hash_dir'
op|')'
newline|'\n'
name|'temp_file'
op|'='
name|'NamedTemporaryFile'
op|'('
name|'dir'
op|'='
name|'temp_hash_dir'
op|','
name|'delete'
op|'='
name|'False'
op|')'
newline|'\n'
name|'temp_hash_dir2'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'temp_suf_dir'
op|','
nl|'\n'
string|"'266e33924a08ede4204871468c11e16e'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'temp_hash_dir2'
op|')'
newline|'\n'
name|'temp_file2'
op|'='
name|'NamedTemporaryFile'
op|'('
name|'dir'
op|'='
name|'temp_hash_dir2'
op|','
name|'delete'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# sanity-checks'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_suf_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_hash_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_file'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_hash_dir2'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_file2'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'replicator'
op|'.'
name|'stats'
op|'['
string|"'remove'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'replicator'
op|'.'
name|'delete_db'
op|'('
name|'temp_file'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_suf_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_hash_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_file'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_hash_dir2'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_file2'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
op|'('
string|"'removes.some_device'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|','
nl|'\n'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'increment'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'replicator'
op|'.'
name|'stats'
op|'['
string|"'remove'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'replicator'
op|'.'
name|'delete_db'
op|'('
name|'temp_file2'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_suf_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_hash_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_file'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_hash_dir2'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_file2'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
op|'('
string|"'removes.some_device'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|'*'
number|'2'
op|','
nl|'\n'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'increment'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'replicator'
op|'.'
name|'stats'
op|'['
string|"'remove'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'rmtree'
op|'('
name|'temp_dir'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_extract_device
dedent|''
dedent|''
name|'def'
name|'test_extract_device'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
string|"'devices'"
op|':'
string|"'/some/root'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'some_device'"
op|','
name|'replicator'
op|'.'
name|'extract_device'
op|'('
nl|'\n'
string|"'/some/root/some_device/deeper/and/deeper'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'#    def test_dispatch(self):'
nl|'\n'
comment|"#        rpc = db_replicator.ReplicatorRpc('/', '/', FakeBroker, False)"
nl|'\n'
comment|'#        no_op = lambda *args, **kwargs: True'
nl|'\n'
comment|"#        self.assertEquals(rpc.dispatch(('drv', 'part', 'hash'), ('op',)"
nl|'\n'
comment|'#                ).status_int, 400)'
nl|'\n'
comment|'#        rpc.mount_check = True'
nl|'\n'
comment|"#        self.assertEquals(rpc.dispatch(('drv', 'part', 'hash'), ['op',]"
nl|'\n'
comment|'#                ).status_int, 507)'
nl|'\n'
comment|'#        rpc.mount_check = False'
nl|'\n'
comment|'#        rpc.rsync_then_merge = lambda drive, db_file,'
nl|'\n'
comment|"#                                      args: self.assertEquals(args, ['test1'])"
nl|'\n'
comment|'#        rpc.complete_rsync = lambda drive, db_file,'
nl|'\n'
comment|"#                                      args: self.assertEquals(args, ['test2'])"
nl|'\n'
comment|"#        rpc.dispatch(('drv', 'part', 'hash'), ['rsync_then_merge','test1'])"
nl|'\n'
comment|"#        rpc.dispatch(('drv', 'part', 'hash'), ['complete_rsync','test2'])"
nl|'\n'
comment|"#        rpc.dispatch(('drv', 'part', 'hash'), ['other_op',])"
nl|'\n'
nl|'\n'
DECL|member|test_rsync_then_merge
dedent|''
name|'def'
name|'test_rsync_then_merge'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'rsync_then_merge'
op|'('
string|"'sda1'"
op|','
string|"'/srv/swift/blah'"
op|','
op|'('
string|"'a'"
op|','
string|"'b'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_merge_items
dedent|''
name|'def'
name|'test_merge_items'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
name|'fake_broker'
op|'='
name|'FakeBroker'
op|'('
op|')'
newline|'\n'
name|'args'
op|'='
op|'('
string|"'a'"
op|','
string|"'b'"
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'merge_items'
op|'('
name|'fake_broker'
op|','
name|'args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'fake_broker'
op|'.'
name|'args'
op|','
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_merge_syncs
dedent|''
name|'def'
name|'test_merge_syncs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
name|'fake_broker'
op|'='
name|'FakeBroker'
op|'('
op|')'
newline|'\n'
name|'args'
op|'='
op|'('
string|"'a'"
op|','
string|"'b'"
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'merge_syncs'
op|'('
name|'fake_broker'
op|','
name|'args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'fake_broker'
op|'.'
name|'args'
op|','
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_roundrobin_datadirs
dedent|''
name|'def'
name|'test_roundrobin_datadirs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'listdir_calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'isdir_calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'exists_calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'shuffle_calls'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|_listdir
name|'def'
name|'_listdir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'listdir_calls'
op|'.'
name|'append'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'path'
op|'.'
name|'startswith'
op|'('
string|"'/srv/node/sda/containers'"
op|')'
name|'and'
name|'not'
name|'path'
op|'.'
name|'startswith'
op|'('
string|"'/srv/node/sdb/containers'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'path'
op|'='
name|'path'
op|'['
name|'len'
op|'('
string|"'/srv/node/sdx/containers'"
op|')'
op|':'
op|']'
newline|'\n'
name|'if'
name|'path'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
string|"'123'"
op|','
string|"'456'"
op|','
string|"'789'"
op|']'
comment|'# 456 will pretend to be a file'
newline|'\n'
dedent|''
name|'elif'
name|'path'
op|'=='
string|"'/123'"
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
string|"'abc'"
op|','
string|"'def.db'"
op|']'
comment|'# def.db will pretend to be a file'
newline|'\n'
dedent|''
name|'elif'
name|'path'
op|'=='
string|"'/123/abc'"
op|':'
newline|'\n'
comment|'# 11111111111111111111111111111abc will pretend to be a file'
nl|'\n'
indent|'                '
name|'return'
op|'['
string|"'00000000000000000000000000000abc'"
op|','
nl|'\n'
string|"'11111111111111111111111111111abc'"
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'path'
op|'=='
string|"'/123/abc/00000000000000000000000000000abc'"
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
string|"'00000000000000000000000000000abc.db'"
op|','
nl|'\n'
comment|"# This other.db isn't in the right place, so should be"
nl|'\n'
comment|'# ignored later.'
nl|'\n'
string|"'000000000000000000000000000other.db'"
op|','
nl|'\n'
string|"'weird1'"
op|']'
comment|'# weird1 will pretend to be a dir, if asked'
newline|'\n'
dedent|''
name|'elif'
name|'path'
op|'=='
string|"'/789'"
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
string|"'ghi'"
op|','
string|"'jkl'"
op|']'
comment|'# jkl will pretend to be a file'
newline|'\n'
dedent|''
name|'elif'
name|'path'
op|'=='
string|"'/789/ghi'"
op|':'
newline|'\n'
comment|'# 33333333333333333333333333333ghi will pretend to be a file'
nl|'\n'
indent|'                '
name|'return'
op|'['
string|"'22222222222222222222222222222ghi'"
op|','
nl|'\n'
string|"'33333333333333333333333333333ghi'"
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'path'
op|'=='
string|"'/789/ghi/22222222222222222222222222222ghi'"
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
string|"'22222222222222222222222222222ghi.db'"
op|','
nl|'\n'
string|"'weird2'"
op|']'
comment|'# weird2 will pretend to be a dir, if asked'
newline|'\n'
dedent|''
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|_isdir
dedent|''
name|'def'
name|'_isdir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'isdir_calls'
op|'.'
name|'append'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'path'
op|'.'
name|'startswith'
op|'('
string|"'/srv/node/sda/containers'"
op|')'
name|'and'
name|'not'
name|'path'
op|'.'
name|'startswith'
op|'('
string|"'/srv/node/sdb/containers'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'path'
op|'='
name|'path'
op|'['
name|'len'
op|'('
string|"'/srv/node/sdx/containers'"
op|')'
op|':'
op|']'
newline|'\n'
name|'if'
name|'path'
name|'in'
op|'('
string|"'/123'"
op|','
string|"'/123/abc'"
op|','
nl|'\n'
string|"'/123/abc/00000000000000000000000000000abc'"
op|','
nl|'\n'
string|"'/123/abc/00000000000000000000000000000abc/weird1'"
op|','
nl|'\n'
string|"'/789'"
op|','
string|"'/789/ghi'"
op|','
nl|'\n'
string|"'/789/ghi/22222222222222222222222222222ghi'"
op|','
nl|'\n'
string|"'/789/ghi/22222222222222222222222222222ghi/weird2'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|function|_exists
dedent|''
name|'def'
name|'_exists'
op|'('
name|'arg'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'exists_calls'
op|'.'
name|'append'
op|'('
name|'arg'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|function|_shuffle
dedent|''
name|'def'
name|'_shuffle'
op|'('
name|'arg'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'shuffle_calls'
op|'.'
name|'append'
op|'('
name|'arg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'orig_listdir'
op|'='
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'listdir'
newline|'\n'
name|'orig_isdir'
op|'='
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
newline|'\n'
name|'orig_exists'
op|'='
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
newline|'\n'
name|'orig_shuffle'
op|'='
name|'db_replicator'
op|'.'
name|'random'
op|'.'
name|'shuffle'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'listdir'
op|'='
name|'_listdir'
newline|'\n'
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'='
name|'_isdir'
newline|'\n'
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'='
name|'_exists'
newline|'\n'
name|'db_replicator'
op|'.'
name|'random'
op|'.'
name|'shuffle'
op|'='
name|'_shuffle'
newline|'\n'
name|'datadirs'
op|'='
op|'['
op|'('
string|"'/srv/node/sda/containers'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'/srv/node/sdb/containers'"
op|','
number|'2'
op|')'
op|']'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'db_replicator'
op|'.'
name|'roundrobin_datadirs'
op|'('
name|'datadirs'
op|')'
op|')'
newline|'\n'
comment|'# The results show that the .db files are returned, the devices'
nl|'\n'
comment|'# interleaved.'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'results'
op|','
op|'['
nl|'\n'
op|'('
string|"'123'"
op|','
string|"'/srv/node/sda/containers/123/abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc.db'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'123'"
op|','
string|"'/srv/node/sdb/containers/123/abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc.db'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'789'"
op|','
string|"'/srv/node/sda/containers/789/ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi.db'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'789'"
op|','
string|"'/srv/node/sdb/containers/789/ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi.db'"
op|','
number|'2'
op|')'
op|']'
op|')'
newline|'\n'
comment|'# The listdir calls show that we only listdir the dirs'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'listdir_calls'
op|','
op|'['
nl|'\n'
string|"'/srv/node/sda/containers'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/123'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/123/abc'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/123'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/123/abc'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/789'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/789/ghi'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/789'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/789/ghi'"
op|']'
op|')'
newline|'\n'
comment|'# The isdir calls show that we did ask about the things pretending'
nl|'\n'
comment|'# to be files at various levels.'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'isdir_calls'
op|','
op|'['
nl|'\n'
string|"'/srv/node/sda/containers/123'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/123/abc'"
op|','
nl|'\n'
op|'('
string|"'/srv/node/sda/containers/123/abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc'"
op|')'
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/123'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/123/abc'"
op|','
nl|'\n'
op|'('
string|"'/srv/node/sdb/containers/123/abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc'"
op|')'
op|','
nl|'\n'
op|'('
string|"'/srv/node/sda/containers/123/abc/'"
nl|'\n'
string|"'11111111111111111111111111111abc'"
op|')'
op|','
nl|'\n'
string|"'/srv/node/sda/containers/123/def.db'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/456'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/789'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/789/ghi'"
op|','
nl|'\n'
op|'('
string|"'/srv/node/sda/containers/789/ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi'"
op|')'
op|','
nl|'\n'
op|'('
string|"'/srv/node/sdb/containers/123/abc/'"
nl|'\n'
string|"'11111111111111111111111111111abc'"
op|')'
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/123/def.db'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/456'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/789'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/789/ghi'"
op|','
nl|'\n'
op|'('
string|"'/srv/node/sdb/containers/789/ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi'"
op|')'
op|','
nl|'\n'
op|'('
string|"'/srv/node/sda/containers/789/ghi/'"
nl|'\n'
string|"'33333333333333333333333333333ghi'"
op|')'
op|','
nl|'\n'
string|"'/srv/node/sda/containers/789/jkl'"
op|','
nl|'\n'
op|'('
string|"'/srv/node/sdb/containers/789/ghi/'"
nl|'\n'
string|"'33333333333333333333333333333ghi'"
op|')'
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/789/jkl'"
op|']'
op|')'
newline|'\n'
comment|'# The exists calls are the .db files we looked for as we walked the'
nl|'\n'
comment|'# structure.'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exists_calls'
op|','
op|'['
nl|'\n'
op|'('
string|"'/srv/node/sda/containers/123/abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc.db'"
op|')'
op|','
nl|'\n'
op|'('
string|"'/srv/node/sdb/containers/123/abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc.db'"
op|')'
op|','
nl|'\n'
op|'('
string|"'/srv/node/sda/containers/789/ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi.db'"
op|')'
op|','
nl|'\n'
op|'('
string|"'/srv/node/sdb/containers/789/ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi.db'"
op|')'
op|']'
op|')'
newline|'\n'
comment|'# Shows that we called shuffle twice, once for each device.'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'shuffle_calls'
op|','
op|'['
op|'['
string|"'123'"
op|','
string|"'456'"
op|','
string|"'789'"
op|']'
op|','
op|'['
string|"'123'"
op|','
string|"'456'"
op|','
string|"'789'"
op|']'
op|']'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'listdir'
op|'='
name|'orig_listdir'
newline|'\n'
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'='
name|'orig_isdir'
newline|'\n'
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'='
name|'orig_exists'
newline|'\n'
name|'db_replicator'
op|'.'
name|'random'
op|'.'
name|'shuffle'
op|'='
name|'orig_shuffle'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
