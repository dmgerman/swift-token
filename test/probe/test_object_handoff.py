begin_unit
comment|'#!/usr/bin/python -u'
nl|'\n'
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'unittest'
name|'import'
name|'main'
newline|'\n'
name|'from'
name|'uuid'
name|'import'
name|'uuid4'
newline|'\n'
nl|'\n'
name|'from'
name|'swiftclient'
name|'import'
name|'client'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'direct_client'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'ClientException'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'manager'
name|'import'
name|'Manager'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'probe'
op|'.'
name|'common'
name|'import'
name|'kill_server'
op|','
name|'ReplProbeTest'
op|','
name|'start_server'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestObjectHandoff
name|'class'
name|'TestObjectHandoff'
op|'('
name|'ReplProbeTest'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_main
indent|'    '
name|'def'
name|'test_main'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Create container'
nl|'\n'
indent|'        '
name|'container'
op|'='
string|"'container-%s'"
op|'%'
name|'uuid4'
op|'('
op|')'
newline|'\n'
name|'client'
op|'.'
name|'put_container'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'container'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Storage-Policy'"
op|':'
nl|'\n'
name|'self'
op|'.'
name|'policy'
op|'.'
name|'name'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Kill one container/obj primary server'
nl|'\n'
name|'cpart'
op|','
name|'cnodes'
op|'='
name|'self'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
name|'self'
op|'.'
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'cnode'
op|'='
name|'cnodes'
op|'['
number|'0'
op|']'
newline|'\n'
name|'obj'
op|'='
string|"'object-%s'"
op|'%'
name|'uuid4'
op|'('
op|')'
newline|'\n'
name|'opart'
op|','
name|'onodes'
op|'='
name|'self'
op|'.'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'onode'
op|'='
name|'onodes'
op|'['
number|'0'
op|']'
newline|'\n'
name|'kill_server'
op|'('
name|'onode'
op|'['
string|"'port'"
op|']'
op|','
name|'self'
op|'.'
name|'port2server'
op|','
name|'self'
op|'.'
name|'pids'
op|')'
newline|'\n'
nl|'\n'
comment|'# Create container/obj (goes to two primary servers and one handoff)'
nl|'\n'
name|'client'
op|'.'
name|'put_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'container'
op|','
name|'obj'
op|','
string|"'VERIFY'"
op|')'
newline|'\n'
name|'odata'
op|'='
name|'client'
op|'.'
name|'get_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'container'
op|','
name|'obj'
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'if'
name|'odata'
op|'!='
string|"'VERIFY'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Object GET did not return VERIFY, instead it '"
nl|'\n'
string|"'returned: %s'"
op|'%'
name|'repr'
op|'('
name|'odata'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Kill other two container/obj primary servers'
nl|'\n'
comment|'#   to ensure GET handoff works'
nl|'\n'
dedent|''
name|'for'
name|'node'
name|'in'
name|'onodes'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'kill_server'
op|'('
name|'node'
op|'['
string|"'port'"
op|']'
op|','
name|'self'
op|'.'
name|'port2server'
op|','
name|'self'
op|'.'
name|'pids'
op|')'
newline|'\n'
nl|'\n'
comment|'# Indirectly through proxy assert we can get container/obj'
nl|'\n'
dedent|''
name|'odata'
op|'='
name|'client'
op|'.'
name|'get_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'container'
op|','
name|'obj'
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'if'
name|'odata'
op|'!='
string|"'VERIFY'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Object GET did not return VERIFY, instead it '"
nl|'\n'
string|"'returned: %s'"
op|'%'
name|'repr'
op|'('
name|'odata'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Restart those other two container/obj primary servers'
nl|'\n'
dedent|''
name|'for'
name|'node'
name|'in'
name|'onodes'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'start_server'
op|'('
name|'node'
op|'['
string|"'port'"
op|']'
op|','
name|'self'
op|'.'
name|'port2server'
op|','
name|'self'
op|'.'
name|'pids'
op|')'
newline|'\n'
nl|'\n'
comment|"# We've indirectly verified the handoff node has the container/object,"
nl|'\n'
comment|"#   but let's directly verify it."
nl|'\n'
dedent|''
name|'another_onode'
op|'='
name|'self'
op|'.'
name|'object_ring'
op|'.'
name|'get_more_nodes'
op|'('
name|'opart'
op|')'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'odata'
op|'='
name|'direct_client'
op|'.'
name|'direct_get_object'
op|'('
nl|'\n'
name|'another_onode'
op|','
name|'opart'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'self'
op|'.'
name|'policy'
op|'.'
name|'idx'
op|'}'
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'if'
name|'odata'
op|'!='
string|"'VERIFY'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Direct object GET did not return VERIFY, instead '"
nl|'\n'
string|"'it returned: %s'"
op|'%'
name|'repr'
op|'('
name|'odata'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Assert container listing (via proxy and directly) has container/obj'
nl|'\n'
dedent|''
name|'objs'
op|'='
op|'['
name|'o'
op|'['
string|"'name'"
op|']'
name|'for'
name|'o'
name|'in'
nl|'\n'
name|'client'
op|'.'
name|'get_container'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'container'
op|')'
op|'['
number|'1'
op|']'
op|']'
newline|'\n'
name|'if'
name|'obj'
name|'not'
name|'in'
name|'objs'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Container listing did not know about object'"
op|')'
newline|'\n'
dedent|''
name|'for'
name|'cnode'
name|'in'
name|'cnodes'
op|':'
newline|'\n'
indent|'            '
name|'objs'
op|'='
op|'['
name|'o'
op|'['
string|"'name'"
op|']'
name|'for'
name|'o'
name|'in'
nl|'\n'
name|'direct_client'
op|'.'
name|'direct_get_container'
op|'('
nl|'\n'
name|'cnode'
op|','
name|'cpart'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'container'
op|')'
op|'['
number|'1'
op|']'
op|']'
newline|'\n'
name|'if'
name|'obj'
name|'not'
name|'in'
name|'objs'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'Container server %s:%s did not know about object'"
op|'%'
nl|'\n'
op|'('
name|'cnode'
op|'['
string|"'ip'"
op|']'
op|','
name|'cnode'
op|'['
string|"'port'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Bring the first container/obj primary server back up'
nl|'\n'
dedent|''
dedent|''
name|'start_server'
op|'('
name|'onode'
op|'['
string|"'port'"
op|']'
op|','
name|'self'
op|'.'
name|'port2server'
op|','
name|'self'
op|'.'
name|'pids'
op|')'
newline|'\n'
nl|'\n'
comment|"# Assert that it doesn't have container/obj yet"
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'direct_client'
op|'.'
name|'direct_get_object'
op|'('
nl|'\n'
name|'onode'
op|','
name|'opart'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'self'
op|'.'
name|'policy'
op|'.'
name|'idx'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'404'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Expected ClientException but didn\'t get it"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Run object replication, ensuring we run the handoff node last so it'
nl|'\n'
comment|'#   will remove its extra handoff partition'
nl|'\n'
dedent|''
name|'for'
name|'node'
name|'in'
name|'onodes'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'port_num'
op|'='
name|'node'
op|'['
string|"'replication_port'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'port_num'
op|'='
name|'node'
op|'['
string|"'port'"
op|']'
newline|'\n'
dedent|''
name|'node_id'
op|'='
op|'('
name|'port_num'
op|'-'
number|'6000'
op|')'
op|'/'
number|'10'
newline|'\n'
name|'Manager'
op|'('
op|'['
string|"'object-replicator'"
op|']'
op|')'
op|'.'
name|'once'
op|'('
name|'number'
op|'='
name|'node_id'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'another_port_num'
op|'='
name|'another_onode'
op|'['
string|"'replication_port'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'another_port_num'
op|'='
name|'another_onode'
op|'['
string|"'port'"
op|']'
newline|'\n'
dedent|''
name|'another_num'
op|'='
op|'('
name|'another_port_num'
op|'-'
number|'6000'
op|')'
op|'/'
number|'10'
newline|'\n'
name|'Manager'
op|'('
op|'['
string|"'object-replicator'"
op|']'
op|')'
op|'.'
name|'once'
op|'('
name|'number'
op|'='
name|'another_num'
op|')'
newline|'\n'
nl|'\n'
comment|'# Assert the first container/obj primary server now has container/obj'
nl|'\n'
name|'odata'
op|'='
name|'direct_client'
op|'.'
name|'direct_get_object'
op|'('
nl|'\n'
name|'onode'
op|','
name|'opart'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'self'
op|'.'
name|'policy'
op|'.'
name|'idx'
op|'}'
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'if'
name|'odata'
op|'!='
string|"'VERIFY'"
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Direct object GET did not return VERIFY, instead '"
nl|'\n'
string|"'it returned: %s'"
op|'%'
name|'repr'
op|'('
name|'odata'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Assert the handoff server no longer has container/obj'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'direct_client'
op|'.'
name|'direct_get_object'
op|'('
nl|'\n'
name|'another_onode'
op|','
name|'opart'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'self'
op|'.'
name|'policy'
op|'.'
name|'idx'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'404'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Expected ClientException but didn\'t get it"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Kill the first container/obj primary server again (we have two'
nl|'\n'
comment|'#   primaries and the handoff up now)'
nl|'\n'
dedent|''
name|'kill_server'
op|'('
name|'onode'
op|'['
string|"'port'"
op|']'
op|','
name|'self'
op|'.'
name|'port2server'
op|','
name|'self'
op|'.'
name|'pids'
op|')'
newline|'\n'
nl|'\n'
comment|'# Delete container/obj'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'client'
op|'.'
name|'delete_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'client'
op|'.'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'object_ring'
op|'.'
name|'replica_count'
op|'>'
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
comment|'# Object DELETE returning 503 for (404, 204)'
nl|'\n'
comment|'# remove this with fix for'
nl|'\n'
comment|'# https://bugs.launchpad.net/swift/+bug/1318375'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'503'
op|','
name|'err'
op|'.'
name|'http_status'
op|')'
newline|'\n'
nl|'\n'
comment|"# Assert we can't head container/obj"
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'client'
op|'.'
name|'head_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'client'
op|'.'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'404'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Expected ClientException but didn\'t get it"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Assert container/obj is not in the container listing, both indirectly'
nl|'\n'
comment|'#   and directly'
nl|'\n'
dedent|''
name|'objs'
op|'='
op|'['
name|'o'
op|'['
string|"'name'"
op|']'
name|'for'
name|'o'
name|'in'
nl|'\n'
name|'client'
op|'.'
name|'get_container'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'container'
op|')'
op|'['
number|'1'
op|']'
op|']'
newline|'\n'
name|'if'
name|'obj'
name|'in'
name|'objs'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Container listing still knew about object'"
op|')'
newline|'\n'
dedent|''
name|'for'
name|'cnode'
name|'in'
name|'cnodes'
op|':'
newline|'\n'
indent|'            '
name|'objs'
op|'='
op|'['
name|'o'
op|'['
string|"'name'"
op|']'
name|'for'
name|'o'
name|'in'
nl|'\n'
name|'direct_client'
op|'.'
name|'direct_get_container'
op|'('
nl|'\n'
name|'cnode'
op|','
name|'cpart'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'container'
op|')'
op|'['
number|'1'
op|']'
op|']'
newline|'\n'
name|'if'
name|'obj'
name|'in'
name|'objs'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'Container server %s:%s still knew about object'"
op|'%'
nl|'\n'
op|'('
name|'cnode'
op|'['
string|"'ip'"
op|']'
op|','
name|'cnode'
op|'['
string|"'port'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Restart the first container/obj primary server again'
nl|'\n'
dedent|''
dedent|''
name|'start_server'
op|'('
name|'onode'
op|'['
string|"'port'"
op|']'
op|','
name|'self'
op|'.'
name|'port2server'
op|','
name|'self'
op|'.'
name|'pids'
op|')'
newline|'\n'
nl|'\n'
comment|'# Assert it still has container/obj'
nl|'\n'
name|'direct_client'
op|'.'
name|'direct_get_object'
op|'('
nl|'\n'
name|'onode'
op|','
name|'opart'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'self'
op|'.'
name|'policy'
op|'.'
name|'idx'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# Run object replication, ensuring we run the handoff node last so it'
nl|'\n'
comment|'#   will remove its extra handoff partition'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'onodes'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'port_num'
op|'='
name|'node'
op|'['
string|"'replication_port'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'port_num'
op|'='
name|'node'
op|'['
string|"'port'"
op|']'
newline|'\n'
dedent|''
name|'node_id'
op|'='
op|'('
name|'port_num'
op|'-'
number|'6000'
op|')'
op|'/'
number|'10'
newline|'\n'
name|'Manager'
op|'('
op|'['
string|"'object-replicator'"
op|']'
op|')'
op|'.'
name|'once'
op|'('
name|'number'
op|'='
name|'node_id'
op|')'
newline|'\n'
dedent|''
name|'another_node_id'
op|'='
op|'('
name|'another_port_num'
op|'-'
number|'6000'
op|')'
op|'/'
number|'10'
newline|'\n'
name|'Manager'
op|'('
op|'['
string|"'object-replicator'"
op|']'
op|')'
op|'.'
name|'once'
op|'('
name|'number'
op|'='
name|'another_node_id'
op|')'
newline|'\n'
nl|'\n'
comment|'# Assert primary node no longer has container/obj'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'direct_client'
op|'.'
name|'direct_get_object'
op|'('
nl|'\n'
name|'another_onode'
op|','
name|'opart'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'self'
op|'.'
name|'policy'
op|'.'
name|'idx'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'404'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Expected ClientException but didn\'t get it"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
