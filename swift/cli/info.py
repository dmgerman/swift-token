begin_unit
comment|'# Licensed under the Apache License, Version 2.0 (the "License"); you may not'
nl|'\n'
comment|'# use this file except in compliance with the License. You may obtain a copy'
nl|'\n'
comment|'# of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#     http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT'
nl|'\n'
comment|'# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the'
nl|'\n'
comment|'# License for the specific language governing permissions and limitations'
nl|'\n'
comment|'# under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'itertools'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'sqlite3'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
name|'from'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'hash_path'
op|','
name|'storage_directory'
op|','
name|'Timestamp'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
name|'import'
name|'Ring'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'request_helpers'
name|'import'
name|'is_sys_meta'
op|','
name|'is_user_meta'
op|','
name|'strip_sys_meta_prefix'
op|','
name|'strip_user_meta_prefix'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'account'
op|'.'
name|'backend'
name|'import'
name|'AccountBroker'
op|','
name|'DATADIR'
name|'as'
name|'ABDATADIR'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'container'
op|'.'
name|'backend'
name|'import'
name|'ContainerBroker'
op|','
name|'DATADIR'
name|'as'
name|'CBDATADIR'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
op|'.'
name|'diskfile'
name|'import'
name|'get_data_dir'
op|','
name|'read_metadata'
op|','
name|'DATADIR_BASE'
op|','
name|'extract_policy_index'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'POLICIES'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InfoSystemExit
name|'class'
name|'InfoSystemExit'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Indicates to the caller that a sys.exit(1) should be performed.\n    """'
newline|'\n'
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|print_ring_locations
dedent|''
name|'def'
name|'print_ring_locations'
op|'('
name|'ring'
op|','
name|'datadir'
op|','
name|'account'
op|','
name|'container'
op|'='
name|'None'
op|','
name|'obj'
op|'='
name|'None'
op|','
nl|'\n'
name|'tpart'
op|'='
name|'None'
op|','
name|'all_nodes'
op|'='
name|'False'
op|','
name|'policy_index'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    print out ring locations of specified type\n\n    :param ring: ring instance\n    :param datadir: name of directory where things are stored. Usually one of\n                    "accounts", "containers", "objects", or "objects-N".\n    :param account: account name\n    :param container: container name\n    :param obj: object name\n    :param tpart: target partition in ring\n    :param all_nodes: include all handoff nodes. If false, only the N primary\n                      nodes and first N handoffs will be printed.\n    :param policy_index: include policy_index in curl headers\n    """'
newline|'\n'
name|'if'
name|'not'
name|'ring'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|'"No ring specified"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'datadir'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|'"No datadir specified"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'tpart'
name|'is'
name|'None'
name|'and'
name|'not'
name|'account'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|'"No partition or account/container/object specified"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'account'
name|'and'
op|'('
name|'container'
name|'or'
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|'"Container/object specified without account"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'obj'
name|'and'
name|'not'
name|'container'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|"'Object specified without container'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'obj'
op|':'
newline|'\n'
indent|'        '
name|'target'
op|'='
string|"'%s/%s/%s'"
op|'%'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'container'
op|':'
newline|'\n'
indent|'        '
name|'target'
op|'='
string|"'%s/%s'"
op|'%'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'target'
op|'='
string|"'%s'"
op|'%'
op|'('
name|'account'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'tpart'
op|':'
newline|'\n'
indent|'        '
name|'part'
op|'='
name|'int'
op|'('
name|'tpart'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'part'
op|'='
name|'ring'
op|'.'
name|'get_part'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'primary_nodes'
op|'='
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'part'
op|')'
newline|'\n'
name|'handoff_nodes'
op|'='
name|'ring'
op|'.'
name|'get_more_nodes'
op|'('
name|'part'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'all_nodes'
op|':'
newline|'\n'
indent|'        '
name|'handoff_nodes'
op|'='
name|'itertools'
op|'.'
name|'islice'
op|'('
name|'handoff_nodes'
op|','
name|'len'
op|'('
name|'primary_nodes'
op|')'
op|')'
newline|'\n'
dedent|''
name|'handoff_nodes'
op|'='
name|'list'
op|'('
name|'handoff_nodes'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'account'
name|'and'
name|'not'
name|'tpart'
op|':'
newline|'\n'
indent|'        '
name|'path_hash'
op|'='
name|'hash_path'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'path_hash'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'print'
string|"'Partition\\t%s'"
op|'%'
name|'part'
newline|'\n'
name|'print'
string|"'Hash     \\t%s\\n'"
op|'%'
name|'path_hash'
newline|'\n'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'primary_nodes'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'Server:Port Device\\t%s:%s %s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'node'
name|'in'
name|'handoff_nodes'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'Server:Port Device\\t%s:%s %s\\t [Handoff]'"
op|'%'
op|'('
nl|'\n'
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
string|'"\\n"'
newline|'\n'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'primary_nodes'
op|':'
newline|'\n'
indent|'        '
name|'cmd'
op|'='
string|'\'curl -I -XHEAD "http://%s:%s/%s/%s/%s"\''
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'part'
op|','
nl|'\n'
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'target'
op|')'
op|')'
newline|'\n'
name|'if'
name|'policy_index'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'cmd'
op|'+='
string|'\' -H "%s: %s"\''
op|'%'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
nl|'\n'
name|'policy_index'
op|')'
newline|'\n'
dedent|''
name|'print'
name|'cmd'
newline|'\n'
dedent|''
name|'for'
name|'node'
name|'in'
name|'handoff_nodes'
op|':'
newline|'\n'
indent|'        '
name|'cmd'
op|'='
string|'\'curl -I -XHEAD "http://%s:%s/%s/%s/%s"\''
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'part'
op|','
nl|'\n'
name|'urllib'
op|'.'
name|'quote'
op|'('
name|'target'
op|')'
op|')'
newline|'\n'
name|'if'
name|'policy_index'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'cmd'
op|'+='
string|'\' -H "%s: %s"\''
op|'%'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
nl|'\n'
name|'policy_index'
op|')'
newline|'\n'
dedent|''
name|'cmd'
op|'+='
string|"' # [Handoff]'"
newline|'\n'
name|'print'
name|'cmd'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
string|'"\\n\\nUse your own device location of servers:"'
newline|'\n'
name|'print'
string|'"such as \\"export DEVICE=/srv/node\\""'
newline|'\n'
name|'if'
name|'path_hash'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'node'
name|'in'
name|'primary_nodes'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|'\'ssh %s "ls -lah ${DEVICE:-/srv/node*}/%s/%s"\''
op|'%'
nl|'\n'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
name|'storage_directory'
op|'('
name|'datadir'
op|','
name|'part'
op|','
name|'path_hash'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'node'
name|'in'
name|'handoff_nodes'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|'\'ssh %s "ls -lah ${DEVICE:-/srv/node*}/%s/%s" # [Handoff]\''
op|'%'
nl|'\n'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
name|'storage_directory'
op|'('
name|'datadir'
op|','
name|'part'
op|','
name|'path_hash'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'node'
name|'in'
name|'primary_nodes'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|'\'ssh %s "ls -lah ${DEVICE:-/srv/node*}/%s/%s/%d"\''
op|'%'
nl|'\n'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'datadir'
op|','
name|'part'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'node'
name|'in'
name|'handoff_nodes'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|'\'ssh %s "ls -lah ${DEVICE:-/srv/node*}/%s/%s/%d"\''
nl|'\n'
string|"' # [Handoff]'"
op|'%'
nl|'\n'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'datadir'
op|','
name|'part'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'print'
string|"'\\nnote: `/srv/node*` is used as default value of `devices`, the '"
string|"'real value is set in the config file on each storage node.'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|print_db_info_metadata
dedent|''
name|'def'
name|'print_db_info_metadata'
op|'('
name|'db_type'
op|','
name|'info'
op|','
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    print out data base info/metadata based on its type\n\n    :param db_type: database type, account or container\n    :param info: dict of data base info\n    :param metadata: dict of data base metadata\n    """'
newline|'\n'
name|'if'
name|'info'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|"'DB info is None'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'db_type'
name|'not'
name|'in'
op|'['
string|"'container'"
op|','
string|"'account'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|"'Wrong DB type'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'account'
op|'='
name|'info'
op|'['
string|"'account'"
op|']'
newline|'\n'
name|'container'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'if'
name|'db_type'
op|'=='
string|"'container'"
op|':'
newline|'\n'
indent|'            '
name|'container'
op|'='
name|'info'
op|'['
string|"'container'"
op|']'
newline|'\n'
name|'path'
op|'='
string|"'/%s/%s'"
op|'%'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
string|"'/%s'"
op|'%'
name|'account'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
string|"'Path: %s'"
op|'%'
name|'path'
newline|'\n'
name|'print'
string|"'  Account: %s'"
op|'%'
name|'account'
newline|'\n'
nl|'\n'
name|'if'
name|'db_type'
op|'=='
string|"'container'"
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'  Container: %s'"
op|'%'
name|'container'
newline|'\n'
nl|'\n'
dedent|''
name|'path_hash'
op|'='
name|'hash_path'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'if'
name|'db_type'
op|'=='
string|"'container'"
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'  Container Hash: %s'"
op|'%'
name|'path_hash'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'  Account Hash: %s'"
op|'%'
name|'path_hash'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
string|"'Metadata:'"
newline|'\n'
name|'print'
op|'('
string|"'  Created at: %s (%s)'"
op|'%'
nl|'\n'
op|'('
name|'Timestamp'
op|'('
name|'info'
op|'['
string|"'created_at'"
op|']'
op|')'
op|'.'
name|'isoformat'
op|','
nl|'\n'
name|'info'
op|'['
string|"'created_at'"
op|']'
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'  Put Timestamp: %s (%s)'"
op|'%'
nl|'\n'
op|'('
name|'Timestamp'
op|'('
name|'info'
op|'['
string|"'put_timestamp'"
op|']'
op|')'
op|'.'
name|'isoformat'
op|','
nl|'\n'
name|'info'
op|'['
string|"'put_timestamp'"
op|']'
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'  Delete Timestamp: %s (%s)'"
op|'%'
nl|'\n'
op|'('
name|'Timestamp'
op|'('
name|'info'
op|'['
string|"'delete_timestamp'"
op|']'
op|')'
op|'.'
name|'isoformat'
op|','
nl|'\n'
name|'info'
op|'['
string|"'delete_timestamp'"
op|']'
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'  Status Timestamp: %s (%s)'"
op|'%'
nl|'\n'
op|'('
name|'Timestamp'
op|'('
name|'info'
op|'['
string|"'status_changed_at'"
op|']'
op|')'
op|'.'
name|'isoformat'
op|','
nl|'\n'
name|'info'
op|'['
string|"'status_changed_at'"
op|']'
op|')'
op|')'
newline|'\n'
name|'if'
name|'db_type'
op|'=='
string|"'account'"
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'  Container Count: %s'"
op|'%'
name|'info'
op|'['
string|"'container_count'"
op|']'
newline|'\n'
dedent|''
name|'print'
string|"'  Object Count: %s'"
op|'%'
name|'info'
op|'['
string|"'object_count'"
op|']'
newline|'\n'
name|'print'
string|"'  Bytes Used: %s'"
op|'%'
name|'info'
op|'['
string|"'bytes_used'"
op|']'
newline|'\n'
name|'if'
name|'db_type'
op|'=='
string|"'container'"
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'policy_name'
op|'='
name|'POLICIES'
op|'['
name|'info'
op|'['
string|"'storage_policy_index'"
op|']'
op|']'
op|'.'
name|'name'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'policy_name'
op|'='
string|"'Unknown'"
newline|'\n'
dedent|''
name|'print'
op|'('
string|"'  Storage Policy: %s (%s)'"
op|'%'
op|'('
nl|'\n'
name|'policy_name'
op|','
name|'info'
op|'['
string|"'storage_policy_index'"
op|']'
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'  Reported Put Timestamp: %s (%s)'"
op|'%'
nl|'\n'
op|'('
name|'Timestamp'
op|'('
name|'info'
op|'['
string|"'reported_put_timestamp'"
op|']'
op|')'
op|'.'
name|'isoformat'
op|','
nl|'\n'
name|'info'
op|'['
string|"'reported_put_timestamp'"
op|']'
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'  Reported Delete Timestamp: %s (%s)'"
op|'%'
nl|'\n'
op|'('
name|'Timestamp'
op|'('
name|'info'
op|'['
string|"'reported_delete_timestamp'"
op|']'
op|')'
op|'.'
name|'isoformat'
op|','
nl|'\n'
name|'info'
op|'['
string|"'reported_delete_timestamp'"
op|']'
op|')'
op|')'
newline|'\n'
name|'print'
string|"'  Reported Object Count: %s'"
op|'%'
name|'info'
op|'['
string|"'reported_object_count'"
op|']'
newline|'\n'
name|'print'
string|"'  Reported Bytes Used: %s'"
op|'%'
name|'info'
op|'['
string|"'reported_bytes_used'"
op|']'
newline|'\n'
dedent|''
name|'print'
string|"'  Chexor: %s'"
op|'%'
name|'info'
op|'['
string|"'hash'"
op|']'
newline|'\n'
name|'print'
string|"'  UUID: %s'"
op|'%'
name|'info'
op|'['
string|"'id'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|"'Info is incomplete: %s'"
op|'%'
name|'e'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'meta_prefix'
op|'='
string|"'x_'"
op|'+'
name|'db_type'
op|'+'
string|"'_'"
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'info'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
name|'meta_prefix'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'title'
op|'='
name|'key'
op|'.'
name|'replace'
op|'('
string|"'_'"
op|','
string|"'-'"
op|')'
op|'.'
name|'title'
op|'('
op|')'
newline|'\n'
name|'print'
string|"'  %s: %s'"
op|'%'
op|'('
name|'title'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'user_metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'sys_metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'key'
op|','
op|'('
name|'value'
op|','
name|'timestamp'
op|')'
name|'in'
name|'metadata'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'is_user_meta'
op|'('
name|'db_type'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'user_metadata'
op|'['
name|'strip_user_meta_prefix'
op|'('
name|'db_type'
op|','
name|'key'
op|')'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'elif'
name|'is_sys_meta'
op|'('
name|'db_type'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sys_metadata'
op|'['
name|'strip_sys_meta_prefix'
op|'('
name|'db_type'
op|','
name|'key'
op|')'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'title'
op|'='
name|'key'
op|'.'
name|'replace'
op|'('
string|"'_'"
op|','
string|"'-'"
op|')'
op|'.'
name|'title'
op|'('
op|')'
newline|'\n'
name|'print'
string|"'  %s: %s'"
op|'%'
op|'('
name|'title'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'sys_metadata'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'  System Metadata: %s'"
op|'%'
name|'sys_metadata'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'No system metadata found in db file'"
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'user_metadata'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'  User Metadata: %s'"
op|'%'
name|'user_metadata'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'No user metadata found in db file'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|print_obj_metadata
dedent|''
dedent|''
name|'def'
name|'print_obj_metadata'
op|'('
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Print out basic info and metadata from object, as returned from\n    :func:`swift.obj.diskfile.read_metadata`.\n\n    Metadata should include the keys: name, Content-Type, and\n    X-Timestamp.\n\n    Additional metadata is displayed unmodified.\n\n    :param metadata: dict of object metadata\n\n    :raises: ValueError\n    """'
newline|'\n'
name|'if'
name|'not'
name|'metadata'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|"'Metadata is None'"
op|')'
newline|'\n'
dedent|''
name|'path'
op|'='
name|'metadata'
op|'.'
name|'pop'
op|'('
string|"'name'"
op|','
string|"''"
op|')'
newline|'\n'
name|'content_type'
op|'='
name|'metadata'
op|'.'
name|'pop'
op|'('
string|"'Content-Type'"
op|','
string|"''"
op|')'
newline|'\n'
name|'ts'
op|'='
name|'Timestamp'
op|'('
name|'metadata'
op|'.'
name|'pop'
op|'('
string|"'X-Timestamp'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'account'
op|'='
name|'container'
op|'='
name|'obj'
op|'='
name|'obj_hash'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'path'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|'='
name|'path'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'3'
op|')'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|"'Path is invalid for object %r'"
op|'%'
name|'path'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'obj_hash'
op|'='
name|'hash_path'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'print'
string|"'Path: %s'"
op|'%'
name|'path'
newline|'\n'
name|'print'
string|"'  Account: %s'"
op|'%'
name|'account'
newline|'\n'
name|'print'
string|"'  Container: %s'"
op|'%'
name|'container'
newline|'\n'
name|'print'
string|"'  Object: %s'"
op|'%'
name|'obj'
newline|'\n'
name|'print'
string|"'  Object hash: %s'"
op|'%'
name|'obj_hash'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'Path: Not found in metadata'"
newline|'\n'
dedent|''
name|'if'
name|'content_type'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'Content-Type: %s'"
op|'%'
name|'content_type'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'Content-Type: Not found in metadata'"
newline|'\n'
dedent|''
name|'if'
name|'ts'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
string|"'Timestamp: %s (%s)'"
op|'%'
op|'('
name|'ts'
op|'.'
name|'isoformat'
op|','
name|'ts'
op|'.'
name|'internal'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'Timestamp: Not found in metadata'"
newline|'\n'
nl|'\n'
dedent|''
name|'print'
string|"'User Metadata: %s'"
op|'%'
name|'metadata'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|print_info
dedent|''
name|'def'
name|'print_info'
op|'('
name|'db_type'
op|','
name|'db_file'
op|','
name|'swift_dir'
op|'='
string|"'/etc/swift'"
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'db_type'
name|'not'
name|'in'
op|'('
string|"'account'"
op|','
string|"'container'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|'"Unrecognized DB type: internal error"'
newline|'\n'
name|'raise'
name|'InfoSystemExit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'db_file'
op|')'
name|'or'
name|'not'
name|'db_file'
op|'.'
name|'endswith'
op|'('
string|"'.db'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|'"DB file doesn\'t exist"'
newline|'\n'
name|'raise'
name|'InfoSystemExit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'db_file'
op|'.'
name|'startswith'
op|'('
op|'('
string|"'/'"
op|','
string|"'./'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_file'
op|'='
string|"'./'"
op|'+'
name|'db_file'
comment|"# don't break if the bare db file is given"
newline|'\n'
dedent|''
name|'if'
name|'db_type'
op|'=='
string|"'account'"
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'AccountBroker'
op|'('
name|'db_file'
op|')'
newline|'\n'
name|'datadir'
op|'='
name|'ABDATADIR'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'ContainerBroker'
op|'('
name|'db_file'
op|')'
newline|'\n'
name|'datadir'
op|'='
name|'CBDATADIR'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'info'
op|'='
name|'broker'
op|'.'
name|'get_info'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'sqlite3'
op|'.'
name|'OperationalError'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'no such table'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"Does not appear to be a DB of type \\"%s\\": %s"'
op|'%'
op|'('
nl|'\n'
name|'db_type'
op|','
name|'db_file'
op|')'
newline|'\n'
name|'raise'
name|'InfoSystemExit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'raise'
newline|'\n'
dedent|''
name|'account'
op|'='
name|'info'
op|'['
string|"'account'"
op|']'
newline|'\n'
name|'container'
op|'='
name|'info'
op|'['
string|"'container'"
op|']'
name|'if'
name|'db_type'
op|'=='
string|"'container'"
name|'else'
name|'None'
newline|'\n'
name|'print_db_info_metadata'
op|'('
name|'db_type'
op|','
name|'info'
op|','
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'ring'
op|'='
name|'Ring'
op|'('
name|'swift_dir'
op|','
name|'ring_name'
op|'='
name|'db_type'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'        '
name|'ring'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'print_ring_locations'
op|'('
name|'ring'
op|','
name|'datadir'
op|','
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|print_obj
dedent|''
dedent|''
name|'def'
name|'print_obj'
op|'('
name|'datafile'
op|','
name|'check_etag'
op|'='
name|'True'
op|','
name|'swift_dir'
op|'='
string|"'/etc/swift'"
op|','
nl|'\n'
name|'policy_name'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Display information about an object read from the datafile.\n    Optionally verify the datafile content matches the ETag metadata.\n\n    :param datafile: path on disk to object file\n    :param check_etag: boolean, will read datafile content and verify\n                       computed checksum matches value stored in\n                       metadata.\n    :param swift_dir: the path on disk to rings\n    :param policy_name: optionally the name to use when finding the ring\n    """'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'datafile'
op|')'
name|'or'
name|'not'
name|'datafile'
op|'.'
name|'endswith'
op|'('
string|"'.data'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|'"Data file doesn\'t exist"'
newline|'\n'
name|'raise'
name|'InfoSystemExit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'datafile'
op|'.'
name|'startswith'
op|'('
op|'('
string|"'/'"
op|','
string|"'./'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'datafile'
op|'='
string|"'./'"
op|'+'
name|'datafile'
newline|'\n'
nl|'\n'
dedent|''
name|'policy_index'
op|'='
name|'None'
newline|'\n'
name|'ring'
op|'='
name|'None'
newline|'\n'
name|'datadir'
op|'='
name|'DATADIR_BASE'
newline|'\n'
nl|'\n'
comment|'# try to extract policy index from datafile disk path'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'policy_index'
op|'='
name|'extract_policy_index'
op|'('
name|'datafile'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'policy_index'
op|':'
newline|'\n'
indent|'            '
name|'datadir'
op|'+='
string|"'-'"
op|'+'
name|'str'
op|'('
name|'policy_index'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'Ring'
op|'('
name|'swift_dir'
op|','
name|'ring_name'
op|'='
string|"'object-'"
op|'+'
name|'str'
op|'('
name|'policy_index'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'policy_index'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'ring'
op|'='
name|'Ring'
op|'('
name|'swift_dir'
op|','
name|'ring_name'
op|'='
string|"'object'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'IOError'
op|':'
newline|'\n'
comment|'# no such ring'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'policy_name'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'get_by_name'
op|'('
name|'policy_name'
op|')'
newline|'\n'
name|'if'
name|'policy'
op|':'
newline|'\n'
indent|'            '
name|'policy_index_for_name'
op|'='
name|'policy'
op|'.'
name|'idx'
newline|'\n'
name|'if'
op|'('
name|'policy_index'
name|'is'
name|'not'
name|'None'
name|'and'
nl|'\n'
name|'policy_index_for_name'
name|'is'
name|'not'
name|'None'
name|'and'
nl|'\n'
name|'policy_index'
op|'!='
name|'policy_index_for_name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'Attention: Ring does not match policy!'"
newline|'\n'
name|'print'
string|"'Double check your policy name!'"
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'ring'
name|'and'
name|'policy_index_for_name'
op|':'
newline|'\n'
indent|'                '
name|'ring'
op|'='
name|'POLICIES'
op|'.'
name|'get_object_ring'
op|'('
name|'policy_index_for_name'
op|','
nl|'\n'
name|'swift_dir'
op|')'
newline|'\n'
name|'datadir'
op|'='
name|'get_data_dir'
op|'('
name|'policy_index_for_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'with'
name|'open'
op|'('
name|'datafile'
op|','
string|"'rb'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
name|'read_metadata'
op|'('
name|'fp'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'EOFError'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"Invalid metadata"'
newline|'\n'
name|'raise'
name|'InfoSystemExit'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'etag'
op|'='
name|'metadata'
op|'.'
name|'pop'
op|'('
string|"'ETag'"
op|','
string|"''"
op|')'
newline|'\n'
name|'length'
op|'='
name|'metadata'
op|'.'
name|'pop'
op|'('
string|"'Content-Length'"
op|','
string|"''"
op|')'
newline|'\n'
name|'path'
op|'='
name|'metadata'
op|'.'
name|'get'
op|'('
string|"'name'"
op|','
string|"''"
op|')'
newline|'\n'
name|'print_obj_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
comment|"# Optional integrity check; it's useful, but slow."
nl|'\n'
name|'file_len'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'check_etag'
op|':'
newline|'\n'
indent|'            '
name|'h'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'file_len'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'data'
op|'='
name|'fp'
op|'.'
name|'read'
op|'('
number|'64'
op|'*'
number|'1024'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'data'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'h'
op|'.'
name|'update'
op|'('
name|'data'
op|')'
newline|'\n'
name|'file_len'
op|'+='
name|'len'
op|'('
name|'data'
op|')'
newline|'\n'
dedent|''
name|'h'
op|'='
name|'h'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'if'
name|'etag'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'h'
op|'=='
name|'etag'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|"'ETag: %s (valid)'"
op|'%'
name|'etag'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'print'
op|'('
string|'"ETag: %s doesn\'t match file hash of %s!"'
op|'%'
nl|'\n'
op|'('
name|'etag'
op|','
name|'h'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'ETag: Not found in metadata'"
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'ETag: %s (not checked)'"
op|'%'
name|'etag'
newline|'\n'
name|'file_len'
op|'='
name|'os'
op|'.'
name|'fstat'
op|'('
name|'fp'
op|'.'
name|'fileno'
op|'('
op|')'
op|')'
op|'.'
name|'st_size'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'length'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'file_len'
op|'=='
name|'int'
op|'('
name|'length'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'Content-Length: %s (valid)'"
op|'%'
name|'length'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'('
string|'"Content-Length: %s doesn\'t match file length of %s"'
nl|'\n'
op|'%'
op|'('
name|'length'
op|','
name|'file_len'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'Content-Length: Not found in metadata'"
newline|'\n'
nl|'\n'
dedent|''
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|'='
name|'path'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'3'
op|')'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'if'
name|'ring'
op|':'
newline|'\n'
indent|'            '
name|'print_ring_locations'
op|'('
name|'ring'
op|','
name|'datadir'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'policy_index'
op|'='
name|'policy_index'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|print_item_locations
dedent|''
dedent|''
dedent|''
name|'def'
name|'print_item_locations'
op|'('
name|'ring'
op|','
name|'ring_name'
op|'='
name|'None'
op|','
name|'account'
op|'='
name|'None'
op|','
name|'container'
op|'='
name|'None'
op|','
nl|'\n'
name|'obj'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Display placement information for an item based on ring lookup.\n\n    If a ring is provided it always takes precedence, but warnings will be\n    emitted if it doesn\'t match other optional arguments like the policy_name\n    or ring_name.\n\n    If no ring is provided the ring_name and/or policy_name will be used to\n    lookup the ring.\n\n    :param ring: a ring instance\n    :param ring_name: server type, or storage policy ring name if object ring\n    :param account: account name\n    :param container: container name\n    :param obj: object name\n    :param partition: part number for non path lookups\n    :param policy_name: name of storage policy to use to lookup the ring\n    :param all_nodes: include all handoff nodes. If false, only the N primary\n                      nodes and first N handoffs will be printed.\n    """'
newline|'\n'
nl|'\n'
name|'policy_name'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'policy_name'"
op|','
name|'None'
op|')'
newline|'\n'
name|'part'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'partition'"
op|','
name|'None'
op|')'
newline|'\n'
name|'all_nodes'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'all'"
op|','
name|'False'
op|')'
newline|'\n'
name|'swift_dir'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'swift_dir'"
op|','
string|"'/etc/swift'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'ring'
name|'and'
name|'policy_name'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'get_by_name'
op|'('
name|'policy_name'
op|')'
newline|'\n'
name|'if'
name|'policy'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'ring_name'
op|'!='
name|'policy'
op|'.'
name|'ring_name'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'Attention! mismatch between ring and policy detected!'"
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'Attention! Policy %s is not valid'"
op|'%'
name|'policy_name'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'policy_index'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'ring'
name|'is'
name|'None'
name|'and'
op|'('
name|'obj'
name|'or'
name|'part'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'policy_name'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'Need a ring or policy'"
newline|'\n'
name|'raise'
name|'InfoSystemExit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'get_by_name'
op|'('
name|'policy_name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'policy'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'No policy named %r'"
op|'%'
name|'policy_name'
newline|'\n'
name|'raise'
name|'InfoSystemExit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'policy_index'
op|'='
name|'int'
op|'('
name|'policy'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'POLICIES'
op|'.'
name|'get_object_ring'
op|'('
name|'policy_index'
op|','
name|'swift_dir'
op|')'
newline|'\n'
name|'ring_name'
op|'='
op|'('
name|'POLICIES'
op|'.'
name|'get_by_name'
op|'('
name|'policy_name'
op|')'
op|')'
op|'.'
name|'ring_name'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'account'
name|'is'
name|'None'
name|'and'
op|'('
name|'container'
name|'is'
name|'not'
name|'None'
name|'or'
name|'obj'
name|'is'
name|'not'
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'No account specified'"
newline|'\n'
name|'raise'
name|'InfoSystemExit'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'container'
name|'is'
name|'None'
name|'and'
name|'obj'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'No container specified'"
newline|'\n'
name|'raise'
name|'InfoSystemExit'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'account'
name|'is'
name|'None'
name|'and'
name|'part'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'No target specified'"
newline|'\n'
name|'raise'
name|'InfoSystemExit'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'loc'
op|'='
string|"'<type>'"
newline|'\n'
name|'if'
name|'part'
name|'and'
name|'ring_name'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'-'"
name|'in'
name|'ring_name'
name|'and'
name|'ring_name'
op|'.'
name|'startswith'
op|'('
string|"'object'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'loc'
op|'='
string|"'objects-'"
op|'+'
name|'ring_name'
op|'.'
name|'split'
op|'('
string|"'-'"
op|','
number|'1'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'loc'
op|'='
name|'ring_name'
op|'+'
string|"'s'"
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'account'
name|'and'
name|'container'
name|'and'
name|'obj'
op|':'
newline|'\n'
indent|'        '
name|'loc'
op|'='
string|"'objects'"
newline|'\n'
name|'if'
string|"'-'"
name|'in'
name|'ring_name'
name|'and'
name|'ring_name'
op|'.'
name|'startswith'
op|'('
string|"'object'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'policy_index'
op|'='
name|'int'
op|'('
name|'ring_name'
op|'.'
name|'rsplit'
op|'('
string|"'-'"
op|','
number|'1'
op|')'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'loc'
op|'='
string|"'objects-%d'"
op|'%'
name|'policy_index'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'account'
name|'and'
name|'container'
name|'and'
name|'not'
name|'obj'
op|':'
newline|'\n'
indent|'        '
name|'loc'
op|'='
string|"'containers'"
newline|'\n'
name|'if'
name|'not'
name|'any'
op|'('
op|'['
name|'ring'
op|','
name|'ring_name'
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ring'
op|'='
name|'Ring'
op|'('
name|'swift_dir'
op|','
name|'ring_name'
op|'='
string|"'container'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'ring_name'
op|'!='
string|"'container'"
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'Attention! mismatch between ring and item detected!'"
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'account'
name|'and'
name|'not'
name|'container'
name|'and'
name|'not'
name|'obj'
op|':'
newline|'\n'
indent|'        '
name|'loc'
op|'='
string|"'accounts'"
newline|'\n'
name|'if'
name|'not'
name|'any'
op|'('
op|'['
name|'ring'
op|','
name|'ring_name'
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ring'
op|'='
name|'Ring'
op|'('
name|'swift_dir'
op|','
name|'ring_name'
op|'='
string|"'account'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'ring_name'
op|'!='
string|"'account'"
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'Attention! mismatch between ring and item detected!'"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'print'
string|"'\\nAccount  \\t%s'"
op|'%'
name|'account'
newline|'\n'
name|'print'
string|"'Container\\t%s'"
op|'%'
name|'container'
newline|'\n'
name|'print'
string|"'Object   \\t%s\\n\\n'"
op|'%'
name|'obj'
newline|'\n'
name|'print_ring_locations'
op|'('
name|'ring'
op|','
name|'loc'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'part'
op|','
name|'all_nodes'
op|','
nl|'\n'
name|'policy_index'
op|'='
name|'policy_index'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
