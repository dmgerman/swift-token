begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'test'
name|'import'
name|'unit'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'string'
newline|'\n'
name|'from'
name|'shutil'
name|'import'
name|'rmtree'
newline|'\n'
name|'from'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
name|'from'
name|'tempfile'
name|'import'
name|'mkdtemp'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'FakeLogger'
op|','
name|'patch_policies'
op|','
name|'make_timestamp_iter'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'auditor'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
op|'.'
name|'diskfile'
name|'import'
name|'DiskFile'
op|','
name|'write_metadata'
op|','
name|'invalidate_hash'
op|','
name|'get_data_dir'
op|','
name|'DiskFileManager'
op|','
name|'AuditLocation'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'mkdirs'
op|','
name|'normalize_timestamp'
op|','
name|'Timestamp'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'StoragePolicy'
op|','
name|'POLICIES'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|_mocked_policies
name|'_mocked_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'True'
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|works_only_once
name|'def'
name|'works_only_once'
op|'('
name|'callable_thing'
op|','
name|'exception'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'called'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|only_once
name|'def'
name|'only_once'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'called'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exception'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'callable_thing'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'only_once'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'patch_policies'
op|'('
name|'_mocked_policies'
op|')'
newline|'\n'
DECL|class|TestAuditor
name|'class'
name|'TestAuditor'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'testdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mkdtemp'
op|'('
op|')'
op|','
string|"'tmp_test_object_auditor'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'devices'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rcache'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'object.recon'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
name|'ignore_errors'
op|'='
number|'1'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
string|"'sda'"
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
string|"'sdb'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# policy 0'
nl|'\n'
name|'self'
op|'.'
name|'objects'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
string|"'sda'"
op|','
nl|'\n'
name|'get_data_dir'
op|'('
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'objects_2'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
string|"'sdb'"
op|','
nl|'\n'
name|'get_data_dir'
op|'('
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'self'
op|'.'
name|'objects'
op|')'
newline|'\n'
comment|'# policy 1'
nl|'\n'
name|'self'
op|'.'
name|'objects_p1'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
string|"'sda'"
op|','
nl|'\n'
name|'get_data_dir'
op|'('
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'objects_2_p1'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
string|"'sdb'"
op|','
nl|'\n'
name|'get_data_dir'
op|'('
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'self'
op|'.'
name|'objects_p1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'parts'
op|'='
name|'self'
op|'.'
name|'parts_p1'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'part'
name|'in'
op|'['
string|"'0'"
op|','
string|"'1'"
op|','
string|"'2'"
op|','
string|"'3'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'parts'
op|'['
name|'part'
op|']'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'part'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'parts_p1'
op|'['
name|'part'
op|']'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects_p1'
op|','
name|'part'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'part'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects_p1'
op|','
name|'part'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'conf'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
name|'mount_check'
op|'='
string|"'false'"
op|','
nl|'\n'
name|'object_size_stats'
op|'='
string|"'10,100,1024,10240'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'df_mgr'
op|'='
name|'DiskFileManager'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
nl|'\n'
comment|'# diskfiles for policy 0, 1'
nl|'\n'
name|'self'
op|'.'
name|'disk_file'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'0'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'disk_file_p1'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'0'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
nl|'\n'
string|"'o'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rmtree'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'self'
op|'.'
name|'testdir'
op|')'
op|','
name|'ignore_errors'
op|'='
number|'1'
op|')'
newline|'\n'
name|'unit'
op|'.'
name|'xattr_data'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_worker_conf_parms
dedent|''
name|'def'
name|'test_worker_conf_parms'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|check_common_defaults
indent|'        '
name|'def'
name|'check_common_defaults'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'max_bytes_per_second'
op|','
number|'10000000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'log_time'
op|','
number|'3600'
op|')'
newline|'\n'
nl|'\n'
comment|'# test default values'
nl|'\n'
dedent|''
name|'conf'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
name|'mount_check'
op|'='
string|"'false'"
op|','
nl|'\n'
name|'object_size_stats'
op|'='
string|"'10,100,1024,10240'"
op|')'
newline|'\n'
name|'auditor_worker'
op|'='
name|'auditor'
op|'.'
name|'AuditorWorker'
op|'('
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'devices'
op|')'
newline|'\n'
name|'check_common_defaults'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'diskfile_mgr'
op|'.'
name|'disk_chunk_size'
op|','
number|'65536'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'max_files_per_second'
op|','
number|'20'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'zero_byte_only_at_fps'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# test specified audit value overrides'
nl|'\n'
name|'conf'
op|'.'
name|'update'
op|'('
op|'{'
string|"'disk_chunk_size'"
op|':'
number|'4096'
op|'}'
op|')'
newline|'\n'
name|'auditor_worker'
op|'='
name|'auditor'
op|'.'
name|'AuditorWorker'
op|'('
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
name|'zero_byte_only_at_fps'
op|'='
number|'50'
op|')'
newline|'\n'
name|'check_common_defaults'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'diskfile_mgr'
op|'.'
name|'disk_chunk_size'
op|','
number|'4096'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'max_files_per_second'
op|','
number|'50'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'zero_byte_only_at_fps'
op|','
number|'50'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_audit_extra_data
dedent|''
name|'def'
name|'test_object_audit_extra_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|run_tests
indent|'        '
name|'def'
name|'run_tests'
op|'('
name|'disk_file'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'auditor_worker'
op|'='
name|'auditor'
op|'.'
name|'AuditorWorker'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'devices'
op|')'
newline|'\n'
name|'data'
op|'='
string|"'0'"
op|'*'
number|'1024'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'with'
name|'disk_file'
op|'.'
name|'create'
op|'('
op|')'
name|'as'
name|'writer'
op|':'
newline|'\n'
indent|'                '
name|'writer'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'.'
name|'update'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'timestamp'
op|'='
name|'str'
op|'('
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
nl|'\n'
string|"'ETag'"
op|':'
name|'etag'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'timestamp'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
name|'str'
op|'('
name|'os'
op|'.'
name|'fstat'
op|'('
name|'writer'
op|'.'
name|'_fd'
op|')'
op|'.'
name|'st_size'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'writer'
op|'.'
name|'put'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'pre_quarantines'
op|'='
name|'auditor_worker'
op|'.'
name|'quarantines'
newline|'\n'
nl|'\n'
name|'auditor_worker'
op|'.'
name|'object_audit'
op|'('
nl|'\n'
name|'AuditLocation'
op|'('
name|'disk_file'
op|'.'
name|'_datadir'
op|','
string|"'sda'"
op|','
string|"'0'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'quarantines'
op|','
name|'pre_quarantines'
op|')'
newline|'\n'
nl|'\n'
name|'os'
op|'.'
name|'write'
op|'('
name|'writer'
op|'.'
name|'_fd'
op|','
string|"'extra_data'"
op|')'
newline|'\n'
nl|'\n'
name|'auditor_worker'
op|'.'
name|'object_audit'
op|'('
nl|'\n'
name|'AuditLocation'
op|'('
name|'disk_file'
op|'.'
name|'_datadir'
op|','
string|"'sda'"
op|','
string|"'0'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'quarantines'
op|','
nl|'\n'
name|'pre_quarantines'
op|'+'
number|'1'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'run_tests'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|')'
newline|'\n'
name|'run_tests'
op|'('
name|'self'
op|'.'
name|'disk_file_p1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_audit_diff_data
dedent|''
name|'def'
name|'test_object_audit_diff_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'auditor_worker'
op|'='
name|'auditor'
op|'.'
name|'AuditorWorker'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'devices'
op|')'
newline|'\n'
name|'data'
op|'='
string|"'0'"
op|'*'
number|'1024'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'timestamp'
op|'='
name|'str'
op|'('
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'create'
op|'('
op|')'
name|'as'
name|'writer'
op|':'
newline|'\n'
indent|'            '
name|'writer'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'.'
name|'update'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
nl|'\n'
string|"'ETag'"
op|':'
name|'etag'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'timestamp'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
name|'str'
op|'('
name|'os'
op|'.'
name|'fstat'
op|'('
name|'writer'
op|'.'
name|'_fd'
op|')'
op|'.'
name|'st_size'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'writer'
op|'.'
name|'put'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'pre_quarantines'
op|'='
name|'auditor_worker'
op|'.'
name|'quarantines'
newline|'\n'
nl|'\n'
comment|'# remake so it will have metadata'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'disk_file'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'0'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
nl|'\n'
name|'auditor_worker'
op|'.'
name|'object_audit'
op|'('
nl|'\n'
name|'AuditLocation'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|','
string|"'sda'"
op|','
string|"'0'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'quarantines'
op|','
name|'pre_quarantines'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'etag'
op|'.'
name|'update'
op|'('
string|"'1'"
op|'+'
string|"'0'"
op|'*'
number|'1023'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'['
string|"'ETag'"
op|']'
op|'='
name|'etag'
newline|'\n'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'create'
op|'('
op|')'
name|'as'
name|'writer'
op|':'
newline|'\n'
indent|'            '
name|'writer'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
name|'writer'
op|'.'
name|'put'
op|'('
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'auditor_worker'
op|'.'
name|'object_audit'
op|'('
nl|'\n'
name|'AuditLocation'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|','
string|"'sda'"
op|','
string|"'0'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'quarantines'
op|','
name|'pre_quarantines'
op|'+'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_audit_no_meta
dedent|''
name|'def'
name|'test_object_audit_no_meta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'timestamp'
op|'='
name|'str'
op|'('
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|','
name|'timestamp'
op|'+'
string|"'.data'"
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'fp'
op|'='
name|'open'
op|'('
name|'path'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'write'
op|'('
string|"'0'"
op|'*'
number|'1024'
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'invalidate_hash'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|')'
op|')'
newline|'\n'
name|'auditor_worker'
op|'='
name|'auditor'
op|'.'
name|'AuditorWorker'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'devices'
op|')'
newline|'\n'
name|'pre_quarantines'
op|'='
name|'auditor_worker'
op|'.'
name|'quarantines'
newline|'\n'
name|'auditor_worker'
op|'.'
name|'object_audit'
op|'('
nl|'\n'
name|'AuditLocation'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|','
string|"'sda'"
op|','
string|"'0'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'quarantines'
op|','
name|'pre_quarantines'
op|'+'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_audit_will_not_swallow_errors_in_tests
dedent|''
name|'def'
name|'test_object_audit_will_not_swallow_errors_in_tests'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'timestamp'
op|'='
name|'str'
op|'('
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|','
name|'timestamp'
op|'+'
string|"'.data'"
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'path'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'write_metadata'
op|'('
name|'f'
op|','
op|'{'
string|"'name'"
op|':'
string|"'/a/c/o'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'auditor_worker'
op|'='
name|'auditor'
op|'.'
name|'AuditorWorker'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'devices'
op|')'
newline|'\n'
nl|'\n'
DECL|function|blowup
name|'def'
name|'blowup'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'NameError'
op|'('
string|"'tpyo'"
op|')'
newline|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'DiskFileManager'
op|','
nl|'\n'
string|"'get_diskfile_from_audit_location'"
op|','
name|'blowup'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'NameError'
op|','
name|'auditor_worker'
op|'.'
name|'object_audit'
op|','
nl|'\n'
name|'AuditLocation'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'path'
op|')'
op|','
string|"'sda'"
op|','
string|"'0'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_failsafe_object_audit_will_swallow_errors_in_tests
dedent|''
dedent|''
name|'def'
name|'test_failsafe_object_audit_will_swallow_errors_in_tests'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'timestamp'
op|'='
name|'str'
op|'('
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|','
name|'timestamp'
op|'+'
string|"'.data'"
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'path'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'write_metadata'
op|'('
name|'f'
op|','
op|'{'
string|"'name'"
op|':'
string|"'/a/c/o'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'auditor_worker'
op|'='
name|'auditor'
op|'.'
name|'AuditorWorker'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'devices'
op|')'
newline|'\n'
nl|'\n'
DECL|function|blowup
name|'def'
name|'blowup'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'NameError'
op|'('
string|"'tpyo'"
op|')'
newline|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.diskfile.DiskFileManager.diskfile_cls'"
op|','
nl|'\n'
name|'blowup'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'auditor_worker'
op|'.'
name|'failsafe_object_audit'
op|'('
nl|'\n'
name|'AuditLocation'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'path'
op|')'
op|','
string|"'sda'"
op|','
string|"'0'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'errors'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_generic_exception_handling
dedent|''
name|'def'
name|'test_generic_exception_handling'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'auditor_worker'
op|'='
name|'auditor'
op|'.'
name|'AuditorWorker'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'devices'
op|')'
newline|'\n'
comment|'# pretend that we logged (and reset counters) just now'
nl|'\n'
name|'auditor_worker'
op|'.'
name|'last_logged'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'timestamp'
op|'='
name|'str'
op|'('
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'pre_errors'
op|'='
name|'auditor_worker'
op|'.'
name|'errors'
newline|'\n'
name|'data'
op|'='
string|"'0'"
op|'*'
number|'1024'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'create'
op|'('
op|')'
name|'as'
name|'writer'
op|':'
newline|'\n'
indent|'            '
name|'writer'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'.'
name|'update'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
nl|'\n'
string|"'ETag'"
op|':'
name|'etag'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'timestamp'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
name|'str'
op|'('
name|'os'
op|'.'
name|'fstat'
op|'('
name|'writer'
op|'.'
name|'_fd'
op|')'
op|'.'
name|'st_size'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'writer'
op|'.'
name|'put'
op|'('
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.diskfile.DiskFileManager.diskfile_cls'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'_'
op|':'
number|'1'
op|'/'
number|'0'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'auditor_worker'
op|'.'
name|'audit_all_objects'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'errors'
op|','
name|'pre_errors'
op|'+'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_run_once_pass
dedent|''
name|'def'
name|'test_object_run_once_pass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'auditor_worker'
op|'='
name|'auditor'
op|'.'
name|'AuditorWorker'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'devices'
op|')'
newline|'\n'
name|'auditor_worker'
op|'.'
name|'log_time'
op|'='
number|'0'
newline|'\n'
name|'timestamp'
op|'='
name|'str'
op|'('
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'pre_quarantines'
op|'='
name|'auditor_worker'
op|'.'
name|'quarantines'
newline|'\n'
name|'data'
op|'='
string|"'0'"
op|'*'
number|'1024'
newline|'\n'
nl|'\n'
DECL|function|write_file
name|'def'
name|'write_file'
op|'('
name|'df'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'with'
name|'df'
op|'.'
name|'create'
op|'('
op|')'
name|'as'
name|'writer'
op|':'
newline|'\n'
indent|'                '
name|'writer'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'.'
name|'update'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
nl|'\n'
string|"'ETag'"
op|':'
name|'etag'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'timestamp'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
name|'str'
op|'('
name|'os'
op|'.'
name|'fstat'
op|'('
name|'writer'
op|'.'
name|'_fd'
op|')'
op|'.'
name|'st_size'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'writer'
op|'.'
name|'put'
op|'('
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
comment|'# policy 0'
nl|'\n'
dedent|''
dedent|''
name|'write_file'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|')'
newline|'\n'
comment|'# policy 1'
nl|'\n'
name|'write_file'
op|'('
name|'self'
op|'.'
name|'disk_file_p1'
op|')'
newline|'\n'
nl|'\n'
name|'auditor_worker'
op|'.'
name|'audit_all_objects'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'quarantines'
op|','
name|'pre_quarantines'
op|')'
newline|'\n'
comment|'# 1 object per policy falls into 1024 bucket'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'stats_buckets'
op|'['
number|'1024'
op|']'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'stats_buckets'
op|'['
number|'10240'
op|']'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# pick up some additional code coverage, large file'
nl|'\n'
name|'data'
op|'='
string|"'0'"
op|'*'
number|'1024'
op|'*'
number|'1024'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'create'
op|'('
op|')'
name|'as'
name|'writer'
op|':'
newline|'\n'
indent|'            '
name|'writer'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'.'
name|'update'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
nl|'\n'
string|"'ETag'"
op|':'
name|'etag'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'timestamp'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
name|'str'
op|'('
name|'os'
op|'.'
name|'fstat'
op|'('
name|'writer'
op|'.'
name|'_fd'
op|')'
op|'.'
name|'st_size'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'writer'
op|'.'
name|'put'
op|'('
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'auditor_worker'
op|'.'
name|'audit_all_objects'
op|'('
name|'device_dirs'
op|'='
op|'['
string|"'sda'"
op|','
string|"'sdb'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'quarantines'
op|','
name|'pre_quarantines'
op|')'
newline|'\n'
comment|'# still have the 1024 byte object left in policy-1 (plus the'
nl|'\n'
comment|'# stats from the original 2)'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'stats_buckets'
op|'['
number|'1024'
op|']'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'stats_buckets'
op|'['
number|'10240'
op|']'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# and then policy-0 disk_file was re-written as a larger object'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'stats_buckets'
op|'['
string|"'OVER'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
comment|'# pick up even more additional code coverage, misc paths'
nl|'\n'
name|'auditor_worker'
op|'.'
name|'log_time'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'auditor_worker'
op|'.'
name|'stats_sizes'
op|'='
op|'['
op|']'
newline|'\n'
name|'auditor_worker'
op|'.'
name|'audit_all_objects'
op|'('
name|'device_dirs'
op|'='
op|'['
string|"'sda'"
op|','
string|"'sdb'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'quarantines'
op|','
name|'pre_quarantines'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'stats_buckets'
op|'['
number|'1024'
op|']'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'stats_buckets'
op|'['
number|'10240'
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'stats_buckets'
op|'['
string|"'OVER'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_run_logging
dedent|''
name|'def'
name|'test_object_run_logging'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'auditor_worker'
op|'='
name|'auditor'
op|'.'
name|'AuditorWorker'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'devices'
op|')'
newline|'\n'
name|'auditor_worker'
op|'.'
name|'audit_all_objects'
op|'('
name|'device_dirs'
op|'='
op|'['
string|"'sda'"
op|']'
op|')'
newline|'\n'
name|'log_lines'
op|'='
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'log_lines'
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'log_lines'
op|'['
number|'0'
op|']'
op|'.'
name|'index'
op|'('
string|"'ALL - parallel, sda'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'auditor_worker'
op|'='
name|'auditor'
op|'.'
name|'AuditorWorker'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
name|'zero_byte_only_at_fps'
op|'='
number|'50'
op|')'
newline|'\n'
name|'auditor_worker'
op|'.'
name|'audit_all_objects'
op|'('
name|'device_dirs'
op|'='
op|'['
string|"'sda'"
op|']'
op|')'
newline|'\n'
name|'log_lines'
op|'='
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'info'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'log_lines'
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'log_lines'
op|'['
number|'0'
op|']'
op|'.'
name|'index'
op|'('
string|"'ZBF - sda'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_run_once_no_sda
dedent|''
name|'def'
name|'test_object_run_once_no_sda'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'auditor_worker'
op|'='
name|'auditor'
op|'.'
name|'AuditorWorker'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'devices'
op|')'
newline|'\n'
name|'timestamp'
op|'='
name|'str'
op|'('
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'pre_quarantines'
op|'='
name|'auditor_worker'
op|'.'
name|'quarantines'
newline|'\n'
comment|'# pretend that we logged (and reset counters) just now'
nl|'\n'
name|'auditor_worker'
op|'.'
name|'last_logged'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'data'
op|'='
string|"'0'"
op|'*'
number|'1024'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'create'
op|'('
op|')'
name|'as'
name|'writer'
op|':'
newline|'\n'
indent|'            '
name|'writer'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'.'
name|'update'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
nl|'\n'
string|"'ETag'"
op|':'
name|'etag'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'timestamp'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
name|'str'
op|'('
name|'os'
op|'.'
name|'fstat'
op|'('
name|'writer'
op|'.'
name|'_fd'
op|')'
op|'.'
name|'st_size'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'writer'
op|'.'
name|'put'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'write'
op|'('
name|'writer'
op|'.'
name|'_fd'
op|','
string|"'extra_data'"
op|')'
newline|'\n'
dedent|''
name|'auditor_worker'
op|'.'
name|'audit_all_objects'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'quarantines'
op|','
name|'pre_quarantines'
op|'+'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_run_once_multi_devices
dedent|''
name|'def'
name|'test_object_run_once_multi_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'auditor_worker'
op|'='
name|'auditor'
op|'.'
name|'AuditorWorker'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'rcache'
op|','
name|'self'
op|'.'
name|'devices'
op|')'
newline|'\n'
comment|'# pretend that we logged (and reset counters) just now'
nl|'\n'
name|'auditor_worker'
op|'.'
name|'last_logged'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'timestamp'
op|'='
name|'str'
op|'('
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'pre_quarantines'
op|'='
name|'auditor_worker'
op|'.'
name|'quarantines'
newline|'\n'
name|'data'
op|'='
string|"'0'"
op|'*'
number|'10'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'create'
op|'('
op|')'
name|'as'
name|'writer'
op|':'
newline|'\n'
indent|'            '
name|'writer'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'.'
name|'update'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
nl|'\n'
string|"'ETag'"
op|':'
name|'etag'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'timestamp'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
name|'str'
op|'('
name|'os'
op|'.'
name|'fstat'
op|'('
name|'writer'
op|'.'
name|'_fd'
op|')'
op|'.'
name|'st_size'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'writer'
op|'.'
name|'put'
op|'('
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'auditor_worker'
op|'.'
name|'audit_all_objects'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'disk_file'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'0'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'ob'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'data'
op|'='
string|"'1'"
op|'*'
number|'10'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'create'
op|'('
op|')'
name|'as'
name|'writer'
op|':'
newline|'\n'
indent|'            '
name|'writer'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'.'
name|'update'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
nl|'\n'
string|"'ETag'"
op|':'
name|'etag'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'timestamp'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
name|'str'
op|'('
name|'os'
op|'.'
name|'fstat'
op|'('
name|'writer'
op|'.'
name|'_fd'
op|')'
op|'.'
name|'st_size'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'writer'
op|'.'
name|'put'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'write'
op|'('
name|'writer'
op|'.'
name|'_fd'
op|','
string|"'extra_data'"
op|')'
newline|'\n'
dedent|''
name|'auditor_worker'
op|'.'
name|'audit_all_objects'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'auditor_worker'
op|'.'
name|'quarantines'
op|','
name|'pre_quarantines'
op|'+'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_run_fast_track_non_zero
dedent|''
name|'def'
name|'test_object_run_fast_track_non_zero'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'auditor'
op|'='
name|'auditor'
op|'.'
name|'ObjectAuditor'
op|'('
name|'self'
op|'.'
name|'conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auditor'
op|'.'
name|'log_time'
op|'='
number|'0'
newline|'\n'
name|'data'
op|'='
string|"'0'"
op|'*'
number|'1024'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'create'
op|'('
op|')'
name|'as'
name|'writer'
op|':'
newline|'\n'
indent|'            '
name|'writer'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'.'
name|'update'
op|'('
name|'data'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
nl|'\n'
string|"'ETag'"
op|':'
name|'etag'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'str'
op|'('
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
name|'str'
op|'('
name|'os'
op|'.'
name|'fstat'
op|'('
name|'writer'
op|'.'
name|'_fd'
op|')'
op|'.'
name|'st_size'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'writer'
op|'.'
name|'put'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'etag'
op|'.'
name|'update'
op|'('
string|"'1'"
op|'+'
string|"'0'"
op|'*'
number|'1023'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'['
string|"'ETag'"
op|']'
op|'='
name|'etag'
newline|'\n'
name|'write_metadata'
op|'('
name|'writer'
op|'.'
name|'_fd'
op|','
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'quarantine_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
string|"'sda'"
op|','
string|"'quarantined'"
op|','
string|"'objects'"
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'mode'"
op|':'
string|"'once'"
op|'}'
newline|'\n'
name|'kwargs'
op|'['
string|"'zero_byte_fps'"
op|']'
op|'='
number|'50'
newline|'\n'
name|'self'
op|'.'
name|'auditor'
op|'.'
name|'run_audit'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'quarantine_path'
op|')'
op|')'
newline|'\n'
name|'del'
op|'('
name|'kwargs'
op|'['
string|"'zero_byte_fps'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auditor'
op|'.'
name|'run_audit'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'quarantine_path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setup_bad_zero_byte
dedent|''
name|'def'
name|'setup_bad_zero_byte'
op|'('
name|'self'
op|','
name|'timestamp'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'timestamp'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'timestamp'
op|'='
name|'Timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'auditor'
op|'='
name|'auditor'
op|'.'
name|'ObjectAuditor'
op|'('
name|'self'
op|'.'
name|'conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'auditor'
op|'.'
name|'log_time'
op|'='
number|'0'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'create'
op|'('
op|')'
name|'as'
name|'writer'
op|':'
newline|'\n'
indent|'            '
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
nl|'\n'
string|"'ETag'"
op|':'
name|'etag'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'timestamp'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
number|'10'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'writer'
op|'.'
name|'put'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'['
string|"'ETag'"
op|']'
op|'='
name|'etag'
newline|'\n'
name|'write_metadata'
op|'('
name|'writer'
op|'.'
name|'_fd'
op|','
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_run_fast_track_all
dedent|''
dedent|''
name|'def'
name|'test_object_run_fast_track_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'setup_bad_zero_byte'
op|'('
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'mode'"
op|':'
string|"'once'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'auditor'
op|'.'
name|'run_audit'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'quarantine_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
string|"'sda'"
op|','
string|"'quarantined'"
op|','
string|"'objects'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'quarantine_path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_run_fast_track_zero
dedent|''
name|'def'
name|'test_object_run_fast_track_zero'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'setup_bad_zero_byte'
op|'('
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'mode'"
op|':'
string|"'once'"
op|'}'
newline|'\n'
name|'kwargs'
op|'['
string|"'zero_byte_fps'"
op|']'
op|'='
number|'50'
newline|'\n'
name|'self'
op|'.'
name|'auditor'
op|'.'
name|'run_audit'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'quarantine_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
string|"'sda'"
op|','
string|"'quarantined'"
op|','
string|"'objects'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'quarantine_path'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_run_fast_track_zero_check_closed
dedent|''
name|'def'
name|'test_object_run_fast_track_zero_check_closed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rat'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|class|FakeFile
name|'class'
name|'FakeFile'
op|'('
name|'DiskFile'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_quarantine
indent|'            '
name|'def'
name|'_quarantine'
op|'('
name|'self'
op|','
name|'data_file'
op|','
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'rat'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
name|'DiskFile'
op|'.'
name|'_quarantine'
op|'('
name|'self'
op|','
name|'data_file'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'setup_bad_zero_byte'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.diskfile.DiskFileManager.diskfile_cls'"
op|','
nl|'\n'
name|'FakeFile'
op|')'
op|':'
newline|'\n'
DECL|variable|kwargs
indent|'            '
name|'kwargs'
op|'='
op|'{'
string|"'mode'"
op|':'
string|"'once'"
op|'}'
newline|'\n'
name|'kwargs'
op|'['
string|"'zero_byte_fps'"
op|']'
op|'='
number|'50'
newline|'\n'
name|'self'
op|'.'
name|'auditor'
op|'.'
name|'run_audit'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
DECL|variable|quarantine_path
name|'quarantine_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
string|"'sda'"
op|','
string|"'quarantined'"
op|','
string|"'objects'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'quarantine_path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'rat'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'auditor'
op|'.'
name|'ObjectAuditor'
op|','
string|"'run_audit'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.fork'"
op|','
name|'return_value'
op|'='
number|'0'
op|')'
newline|'\n'
DECL|member|test_with_inaccessible_object_location
name|'def'
name|'test_with_inaccessible_object_location'
op|'('
name|'self'
op|','
name|'mock_os_fork'
op|','
nl|'\n'
name|'mock_run_audit'
op|')'
op|':'
newline|'\n'
comment|'# Need to ensure that any failures in run_audit do'
nl|'\n'
comment|'# not prevent sys.exit() from running.  Otherwise we get'
nl|'\n'
comment|'# zombie processes.'
nl|'\n'
indent|'        '
name|'e'
op|'='
name|'OSError'
op|'('
string|"'permission denied'"
op|')'
newline|'\n'
name|'mock_run_audit'
op|'.'
name|'side_effect'
op|'='
name|'e'
newline|'\n'
name|'self'
op|'.'
name|'auditor'
op|'='
name|'auditor'
op|'.'
name|'ObjectAuditor'
op|'('
name|'self'
op|'.'
name|'conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'SystemExit'
op|','
name|'self'
op|'.'
name|'auditor'
op|'.'
name|'fork_child'
op|','
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_with_only_tombstone
dedent|''
name|'def'
name|'test_with_only_tombstone'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# sanity check that auditor doesn't touch solitary tombstones"
nl|'\n'
indent|'        '
name|'ts_iter'
op|'='
name|'make_timestamp_iter'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'setup_bad_zero_byte'
op|'('
name|'timestamp'
op|'='
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'delete'
op|'('
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
op|')'
newline|'\n'
name|'files'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'files'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'files'
op|'['
number|'0'
op|']'
op|'.'
name|'endswith'
op|'('
string|"'ts'"
op|')'
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'mode'"
op|':'
string|"'once'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'auditor'
op|'.'
name|'run_audit'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'files_after'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'files'
op|','
name|'files_after'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_with_tombstone_and_data
dedent|''
name|'def'
name|'test_with_tombstone_and_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# rsync replication could leave a tombstone and data file in object'
nl|'\n'
comment|'# dir - verify they are both removed during audit'
nl|'\n'
indent|'        '
name|'ts_iter'
op|'='
name|'make_timestamp_iter'
op|'('
op|')'
newline|'\n'
name|'ts_tomb'
op|'='
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'ts_data'
op|'='
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'setup_bad_zero_byte'
op|'('
name|'timestamp'
op|'='
name|'ts_data'
op|')'
newline|'\n'
name|'tomb_file_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|','
nl|'\n'
string|"'%s.ts'"
op|'%'
name|'ts_tomb'
op|'.'
name|'internal'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'tomb_file_path'
op|','
string|"'wb'"
op|')'
name|'as'
name|'fd'
op|':'
newline|'\n'
indent|'            '
name|'write_metadata'
op|'('
name|'fd'
op|','
op|'{'
string|"'X-Timestamp'"
op|':'
name|'ts_tomb'
op|'.'
name|'internal'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'files'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'files'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'tomb_file_path'
op|')'
name|'in'
name|'files'
op|','
name|'files'
op|')'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'mode'"
op|':'
string|"'once'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'auditor'
op|'.'
name|'run_audit'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'disk_file'
op|'.'
name|'_datadir'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sleeper
dedent|''
name|'def'
name|'test_sleeper'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'time.sleep'"
op|','
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
op|')'
name|'as'
name|'mock_sleep'
op|':'
newline|'\n'
indent|'            '
name|'auditor'
op|'.'
name|'SLEEP_BETWEEN_AUDITS'
op|'='
number|'0.10'
newline|'\n'
name|'my_auditor'
op|'='
name|'auditor'
op|'.'
name|'ObjectAuditor'
op|'('
name|'self'
op|'.'
name|'conf'
op|')'
newline|'\n'
name|'my_auditor'
op|'.'
name|'_sleep'
op|'('
op|')'
newline|'\n'
name|'mock_sleep'
op|'.'
name|'assert_called_with'
op|'('
name|'auditor'
op|'.'
name|'SLEEP_BETWEEN_AUDITS'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_parallel_audit
dedent|''
dedent|''
name|'def'
name|'test_run_parallel_audit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|StopForever
indent|'        '
name|'class'
name|'StopForever'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|Bogus
dedent|''
name|'class'
name|'Bogus'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'loop_error'
op|'='
name|'Bogus'
op|'('
string|"'exception'"
op|')'
newline|'\n'
nl|'\n'
DECL|class|LetMeOut
name|'class'
name|'LetMeOut'
op|'('
name|'BaseException'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|ObjectAuditorMock
dedent|''
name|'class'
name|'ObjectAuditorMock'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|check_args
indent|'            '
name|'check_args'
op|'='
op|'('
op|')'
newline|'\n'
DECL|variable|check_kwargs
name|'check_kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
DECL|variable|check_device_dir
name|'check_device_dir'
op|'='
name|'None'
newline|'\n'
DECL|variable|fork_called
name|'fork_called'
op|'='
number|'0'
newline|'\n'
DECL|variable|master
name|'master'
op|'='
number|'0'
newline|'\n'
DECL|variable|wait_called
name|'wait_called'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|mock_run
name|'def'
name|'mock_run'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'check_args'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'check_kwargs'
op|'='
name|'kwargs'
newline|'\n'
name|'if'
string|"'zero_byte_fps'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'check_device_dir'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'device_dirs'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|mock_sleep_stop
dedent|''
dedent|''
name|'def'
name|'mock_sleep_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'StopForever'
op|'('
string|"'stop'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|mock_sleep_continue
dedent|''
name|'def'
name|'mock_sleep_continue'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
DECL|member|mock_audit_loop_error
dedent|''
name|'def'
name|'mock_audit_loop_error'
op|'('
name|'self'
op|','
name|'parent'
op|','
name|'zbo_fps'
op|','
nl|'\n'
name|'override_devices'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'loop_error'
newline|'\n'
nl|'\n'
DECL|member|mock_fork
dedent|''
name|'def'
name|'mock_fork'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fork_called'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'master'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'self'
op|'.'
name|'fork_called'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|mock_wait
dedent|''
dedent|''
name|'def'
name|'mock_wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'wait_called'
op|'+='
number|'1'
newline|'\n'
name|'return'
op|'('
name|'self'
op|'.'
name|'wait_called'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'i'
name|'in'
name|'string'
op|'.'
name|'ascii_letters'
op|'['
number|'2'
op|':'
number|'26'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'mkdirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
string|"'sd%s'"
op|'%'
name|'i'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'my_auditor'
op|'='
name|'auditor'
op|'.'
name|'ObjectAuditor'
op|'('
name|'dict'
op|'('
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
name|'mount_check'
op|'='
string|"'false'"
op|','
nl|'\n'
name|'zero_byte_files_per_second'
op|'='
number|'89'
op|','
nl|'\n'
name|'concurrency'
op|'='
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'mocker'
op|'='
name|'ObjectAuditorMock'
op|'('
op|')'
newline|'\n'
name|'my_auditor'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'real_audit_loop'
op|'='
name|'my_auditor'
op|'.'
name|'audit_loop'
newline|'\n'
name|'my_auditor'
op|'.'
name|'audit_loop'
op|'='
name|'mocker'
op|'.'
name|'mock_audit_loop_error'
newline|'\n'
name|'my_auditor'
op|'.'
name|'run_audit'
op|'='
name|'mocker'
op|'.'
name|'mock_run'
newline|'\n'
name|'was_fork'
op|'='
name|'os'
op|'.'
name|'fork'
newline|'\n'
name|'was_wait'
op|'='
name|'os'
op|'.'
name|'wait'
newline|'\n'
name|'os'
op|'.'
name|'fork'
op|'='
name|'mocker'
op|'.'
name|'mock_fork'
newline|'\n'
name|'os'
op|'.'
name|'wait'
op|'='
name|'mocker'
op|'.'
name|'mock_wait'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'my_auditor'
op|'.'
name|'_sleep'
op|'='
name|'mocker'
op|'.'
name|'mock_sleep_stop'
newline|'\n'
name|'my_auditor'
op|'.'
name|'run_once'
op|'('
name|'zero_byte_fps'
op|'='
number|'50'
op|')'
newline|'\n'
name|'my_auditor'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'ERROR auditing: %s'"
op|','
name|'loop_error'
op|')'
newline|'\n'
name|'my_auditor'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopForever'
op|','
name|'my_auditor'
op|'.'
name|'run_forever'
op|')'
newline|'\n'
name|'my_auditor'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'ERROR auditing: %s'"
op|','
name|'loop_error'
op|')'
newline|'\n'
name|'my_auditor'
op|'.'
name|'audit_loop'
op|'='
name|'real_audit_loop'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopForever'
op|','
nl|'\n'
name|'my_auditor'
op|'.'
name|'run_forever'
op|','
name|'zero_byte_fps'
op|'='
number|'50'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mocker'
op|'.'
name|'check_kwargs'
op|'['
string|"'zero_byte_fps'"
op|']'
op|','
number|'50'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mocker'
op|'.'
name|'fork_called'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'SystemExit'
op|','
name|'my_auditor'
op|'.'
name|'run_once'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mocker'
op|'.'
name|'fork_called'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mocker'
op|'.'
name|'check_kwargs'
op|'['
string|"'zero_byte_fps'"
op|']'
op|','
number|'89'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mocker'
op|'.'
name|'check_device_dir'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mocker'
op|'.'
name|'check_args'
op|','
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|device_list
name|'device_list'
op|'='
op|'['
string|"'sd%s'"
op|'%'
name|'i'
name|'for'
name|'i'
name|'in'
name|'string'
op|'.'
name|'ascii_letters'
op|'['
number|'2'
op|':'
number|'10'
op|']'
op|']'
newline|'\n'
DECL|variable|device_string
name|'device_string'
op|'='
string|"','"
op|'.'
name|'join'
op|'('
name|'device_list'
op|')'
newline|'\n'
DECL|variable|device_string_bogus
name|'device_string_bogus'
op|'='
name|'device_string'
op|'+'
string|"',bogus'"
newline|'\n'
nl|'\n'
name|'mocker'
op|'.'
name|'fork_called'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'SystemExit'
op|','
name|'my_auditor'
op|'.'
name|'run_once'
op|','
nl|'\n'
name|'devices'
op|'='
name|'device_string_bogus'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mocker'
op|'.'
name|'fork_called'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mocker'
op|'.'
name|'check_kwargs'
op|'['
string|"'zero_byte_fps'"
op|']'
op|','
number|'89'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
name|'mocker'
op|'.'
name|'check_device_dir'
op|')'
op|','
name|'device_list'
op|')'
newline|'\n'
nl|'\n'
name|'mocker'
op|'.'
name|'master'
op|'='
number|'1'
newline|'\n'
nl|'\n'
name|'mocker'
op|'.'
name|'fork_called'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopForever'
op|','
name|'my_auditor'
op|'.'
name|'run_forever'
op|')'
newline|'\n'
comment|'# Fork is called 2 times since the zbf process is forked just'
nl|'\n'
comment|'# once before self._sleep() is called and StopForever is raised'
nl|'\n'
comment|'# Also wait is called just once before StopForever is raised'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mocker'
op|'.'
name|'fork_called'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mocker'
op|'.'
name|'wait_called'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'my_auditor'
op|'.'
name|'_sleep'
op|'='
name|'mocker'
op|'.'
name|'mock_sleep_continue'
newline|'\n'
name|'my_auditor'
op|'.'
name|'audit_loop'
op|'='
name|'works_only_once'
op|'('
name|'my_auditor'
op|'.'
name|'audit_loop'
op|','
nl|'\n'
name|'LetMeOut'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'my_auditor'
op|'.'
name|'concurrency'
op|'='
number|'2'
newline|'\n'
name|'mocker'
op|'.'
name|'fork_called'
op|'='
number|'0'
newline|'\n'
name|'mocker'
op|'.'
name|'wait_called'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'LetMeOut'
op|','
name|'my_auditor'
op|'.'
name|'run_forever'
op|')'
newline|'\n'
comment|'# Fork is called no. of devices + (no. of devices)/2 + 1 times'
nl|'\n'
comment|'# since zbf process is forked (no.of devices)/2 + 1 times'
nl|'\n'
DECL|variable|no_devices
name|'no_devices'
op|'='
name|'len'
op|'('
name|'os'
op|'.'
name|'listdir'
op|'('
name|'self'
op|'.'
name|'devices'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mocker'
op|'.'
name|'fork_called'
op|','
name|'no_devices'
op|'+'
name|'no_devices'
op|'/'
number|'2'
nl|'\n'
op|'+'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mocker'
op|'.'
name|'wait_called'
op|','
name|'no_devices'
op|'+'
name|'no_devices'
op|'/'
number|'2'
nl|'\n'
op|'+'
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'fork'
op|'='
name|'was_fork'
newline|'\n'
name|'os'
op|'.'
name|'wait'
op|'='
name|'was_wait'
newline|'\n'
nl|'\n'
DECL|member|test_run_audit_once
dedent|''
dedent|''
name|'def'
name|'test_run_audit_once'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'my_auditor'
op|'='
name|'auditor'
op|'.'
name|'ObjectAuditor'
op|'('
name|'dict'
op|'('
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
name|'mount_check'
op|'='
string|"'false'"
op|','
nl|'\n'
name|'zero_byte_files_per_second'
op|'='
number|'89'
op|','
nl|'\n'
name|'concurrency'
op|'='
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'forked_pids'
op|'='
op|'['
op|']'
newline|'\n'
name|'next_zbf_pid'
op|'='
op|'['
number|'2'
op|']'
newline|'\n'
name|'next_normal_pid'
op|'='
op|'['
number|'1001'
op|']'
newline|'\n'
name|'outstanding_pids'
op|'='
op|'['
op|'['
op|']'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_fork_child
name|'def'
name|'fake_fork_child'
op|'('
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'forked_pids'
op|')'
op|'>'
number|'10'
op|':'
newline|'\n'
comment|"# something's gone horribly wrong"
nl|'\n'
indent|'                '
name|'raise'
name|'BaseException'
op|'('
string|'"forking too much"'
op|')'
newline|'\n'
nl|'\n'
comment|'# ZBF pids are all smaller than the normal-audit pids; this way'
nl|'\n'
comment|'# we can return them first.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Also, ZBF pids are even and normal-audit pids are odd; this is'
nl|'\n'
comment|"# so humans seeing this test fail can better tell what's happening."
nl|'\n'
dedent|''
name|'if'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'zero_byte_fps'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pid'
op|'='
name|'next_zbf_pid'
op|'['
number|'0'
op|']'
newline|'\n'
name|'next_zbf_pid'
op|'['
number|'0'
op|']'
op|'+='
number|'2'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'pid'
op|'='
name|'next_normal_pid'
op|'['
number|'0'
op|']'
newline|'\n'
name|'next_normal_pid'
op|'['
number|'0'
op|']'
op|'+='
number|'2'
newline|'\n'
dedent|''
name|'outstanding_pids'
op|'['
number|'0'
op|']'
op|'.'
name|'append'
op|'('
name|'pid'
op|')'
newline|'\n'
name|'forked_pids'
op|'.'
name|'append'
op|'('
name|'pid'
op|')'
newline|'\n'
name|'return'
name|'pid'
newline|'\n'
nl|'\n'
DECL|function|fake_os_wait
dedent|''
name|'def'
name|'fake_os_wait'
op|'('
op|')'
op|':'
newline|'\n'
comment|"# Smallest pid first; that's ZBF if we have one, else normal"
nl|'\n'
indent|'            '
name|'outstanding_pids'
op|'['
number|'0'
op|']'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'pid'
op|'='
name|'outstanding_pids'
op|'['
number|'0'
op|']'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'return'
op|'('
name|'pid'
op|','
number|'0'
op|')'
comment|'# (pid, status)'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|'"swift.obj.auditor.os.wait"'
op|','
name|'fake_os_wait'
op|')'
op|','
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'my_auditor'
op|','
string|"'fork_child'"
op|','
name|'fake_fork_child'
op|')'
op|','
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'my_auditor'
op|','
string|"'_sleep'"
op|','
name|'lambda'
op|'*'
name|'a'
op|':'
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'my_auditor'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
name|'forked_pids'
op|')'
op|','
op|'['
number|'2'
op|','
number|'1001'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_parallel_audit_once
dedent|''
name|'def'
name|'test_run_parallel_audit_once'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'my_auditor'
op|'='
name|'auditor'
op|'.'
name|'ObjectAuditor'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
op|','
name|'mount_check'
op|'='
string|"'false'"
op|','
nl|'\n'
name|'zero_byte_files_per_second'
op|'='
number|'89'
op|','
name|'concurrency'
op|'='
number|'2'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# ZBF pids are smaller than the normal-audit pids; this way we can'
nl|'\n'
comment|'# return them first from our mocked os.wait().'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Also, ZBF pids are even and normal-audit pids are odd; this is so'
nl|'\n'
comment|"# humans seeing this test fail can better tell what's happening."
nl|'\n'
name|'forked_pids'
op|'='
op|'['
op|']'
newline|'\n'
name|'next_zbf_pid'
op|'='
op|'['
number|'2'
op|']'
newline|'\n'
name|'next_normal_pid'
op|'='
op|'['
number|'1001'
op|']'
newline|'\n'
name|'outstanding_pids'
op|'='
op|'['
op|'['
op|']'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_fork_child
name|'def'
name|'fake_fork_child'
op|'('
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'forked_pids'
op|')'
op|'>'
number|'10'
op|':'
newline|'\n'
comment|"# something's gone horribly wrong; try not to hang the test"
nl|'\n'
comment|'# run because of it'
nl|'\n'
indent|'                '
name|'raise'
name|'BaseException'
op|'('
string|'"forking too much"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'zero_byte_fps'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pid'
op|'='
name|'next_zbf_pid'
op|'['
number|'0'
op|']'
newline|'\n'
name|'next_zbf_pid'
op|'['
number|'0'
op|']'
op|'+='
number|'2'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'pid'
op|'='
name|'next_normal_pid'
op|'['
number|'0'
op|']'
newline|'\n'
name|'next_normal_pid'
op|'['
number|'0'
op|']'
op|'+='
number|'2'
newline|'\n'
dedent|''
name|'outstanding_pids'
op|'['
number|'0'
op|']'
op|'.'
name|'append'
op|'('
name|'pid'
op|')'
newline|'\n'
name|'forked_pids'
op|'.'
name|'append'
op|'('
name|'pid'
op|')'
newline|'\n'
name|'return'
name|'pid'
newline|'\n'
nl|'\n'
DECL|function|fake_os_wait
dedent|''
name|'def'
name|'fake_os_wait'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'outstanding_pids'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'BaseException'
op|'('
string|'"nobody waiting"'
op|')'
newline|'\n'
nl|'\n'
comment|'# ZBF auditor finishes first'
nl|'\n'
dedent|''
name|'outstanding_pids'
op|'['
number|'0'
op|']'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'pid'
op|'='
name|'outstanding_pids'
op|'['
number|'0'
op|']'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'return'
op|'('
name|'pid'
op|','
number|'0'
op|')'
comment|'# (pid, status)'
newline|'\n'
nl|'\n'
comment|"# make sure we've got enough devs that the ZBF auditor can finish"
nl|'\n'
comment|'# before all the normal auditors have been started'
nl|'\n'
dedent|''
name|'mkdirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
string|"'sdc'"
op|')'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
string|"'sdd'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|'"swift.obj.auditor.os.wait"'
op|','
name|'fake_os_wait'
op|')'
op|','
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'my_auditor'
op|','
string|"'fork_child'"
op|','
name|'fake_fork_child'
op|')'
op|','
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'my_auditor'
op|','
string|"'_sleep'"
op|','
name|'lambda'
op|'*'
name|'a'
op|':'
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'my_auditor'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
name|'forked_pids'
op|')'
op|','
op|'['
number|'2'
op|','
number|'1001'
op|','
number|'1003'
op|','
number|'1005'
op|','
number|'1007'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
