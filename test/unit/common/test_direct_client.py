begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'json'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'contextmanager'
newline|'\n'
name|'from'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
name|'from'
name|'six'
op|'.'
name|'moves'
name|'import'
name|'urllib'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'direct_client'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'ClientException'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'header_key_dict'
name|'import'
name|'HeaderKeyDict'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'Timestamp'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'RESPONSE_REASONS'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'POLICIES'
newline|'\n'
name|'from'
name|'six'
op|'.'
name|'moves'
op|'.'
name|'http_client'
name|'import'
name|'HTTPException'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'patch_policies'
op|','
name|'debug_logger'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeConn
name|'class'
name|'FakeConn'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'status'
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'body'
op|'='
string|"''"
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'status'
op|'='
name|'status'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'reason'
op|'='
name|'RESPONSE_REASONS'
op|'['
name|'self'
op|'.'
name|'status'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'reason'
op|'='
string|"'Fake'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'body'
op|'='
name|'body'
newline|'\n'
name|'self'
op|'.'
name|'resp_headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
name|'if'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'resp_headers'
op|'.'
name|'update'
op|'('
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'etag'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_update_raw_call_args
dedent|''
name|'def'
name|'_update_raw_call_args'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'capture_attrs'
op|'='
op|'('
string|"'host'"
op|','
string|"'port'"
op|','
string|"'method'"
op|','
string|"'path'"
op|','
string|"'req_headers'"
op|','
nl|'\n'
string|"'query_string'"
op|')'
newline|'\n'
name|'for'
name|'attr'
op|','
name|'value'
name|'in'
name|'zip'
op|'('
name|'capture_attrs'
op|','
name|'args'
op|'['
op|':'
name|'len'
op|'('
name|'capture_attrs'
op|')'
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'attr'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|getresponse
dedent|''
name|'def'
name|'getresponse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'etag'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'resp_headers'
op|'['
string|"'etag'"
op|']'
op|'='
name|'str'
op|'('
name|'self'
op|'.'
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'self'
op|'.'
name|'status'
op|','
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'self'
op|'.'
name|'status'
newline|'\n'
dedent|''
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|getheader
dedent|''
name|'def'
name|'getheader'
op|'('
name|'self'
op|','
name|'header'
op|','
name|'default'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'resp_headers'
op|'.'
name|'get'
op|'('
name|'header'
op|','
name|'default'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getheaders
dedent|''
name|'def'
name|'getheaders'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'resp_headers'
op|'.'
name|'items'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|','
name|'amt'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'self'
op|'.'
name|'body'
op|','
name|'six'
op|'.'
name|'StringIO'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'body'
op|'.'
name|'read'
op|'('
name|'amt'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'amt'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'body'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'Exception'
op|'('
string|"'Not a StringIO entry'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|send
dedent|''
dedent|''
name|'def'
name|'send'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'etag'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'etag'
op|'.'
name|'update'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|function|mocked_http_conn
name|'def'
name|'mocked_http_conn'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'fake_conn'
op|'='
name|'FakeConn'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'mock_http_conn'
op|'='
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'fake_conn'
op|'.'
name|'_update_raw_call_args'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.bufferedhttp.http_connect_raw'"
op|','
nl|'\n'
name|'new'
op|'='
name|'mock_http_conn'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'fake_conn'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'patch_policies'
newline|'\n'
DECL|class|TestDirectClient
name|'class'
name|'TestDirectClient'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'node'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'1.2.3.4'"
op|','
string|"'port'"
op|':'
string|"'6000'"
op|','
string|"'device'"
op|':'
string|"'sda'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'part'
op|'='
string|"'0'"
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'account'
op|'='
string|"u'\\u062a account'"
newline|'\n'
name|'self'
op|'.'
name|'container'
op|'='
string|"u'\\u062a container'"
newline|'\n'
name|'self'
op|'.'
name|'obj'
op|'='
string|"u'\\u062a obj/name'"
newline|'\n'
name|'self'
op|'.'
name|'account_path'
op|'='
string|"'/sda/0/%s'"
op|'%'
name|'urllib'
op|'.'
name|'parse'
op|'.'
name|'quote'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_path'
op|'='
string|"'/sda/0/%s/%s'"
op|'%'
name|'tuple'
op|'('
nl|'\n'
name|'urllib'
op|'.'
name|'parse'
op|'.'
name|'quote'
op|'('
name|'p'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
op|')'
name|'for'
name|'p'
name|'in'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'obj_path'
op|'='
string|"'/sda/0/%s/%s/%s'"
op|'%'
name|'tuple'
op|'('
nl|'\n'
name|'urllib'
op|'.'
name|'parse'
op|'.'
name|'quote'
op|'('
name|'p'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
op|')'
name|'for'
name|'p'
name|'in'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'user_agent'
op|'='
string|"'direct-client %s'"
op|'%'
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_gen_headers
dedent|''
name|'def'
name|'test_gen_headers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stub_user_agent'
op|'='
string|"'direct-client %s'"
op|'%'
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
name|'direct_client'
op|'.'
name|'gen_headers'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'user-agent'"
op|']'
op|','
name|'stub_user_agent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'headers'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'now'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'direct_client'
op|'.'
name|'gen_headers'
op|'('
name|'add_ts'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'user-agent'"
op|']'
op|','
name|'stub_user_agent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'now'
op|'-'
number|'1'
op|'<'
name|'Timestamp'
op|'('
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
op|'<'
name|'now'
op|'+'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|','
nl|'\n'
name|'Timestamp'
op|'('
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
op|'.'
name|'internal'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'headers'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
name|'direct_client'
op|'.'
name|'gen_headers'
op|'('
name|'hdrs_in'
op|'='
op|'{'
string|"'foo-bar'"
op|':'
string|"'47'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'user-agent'"
op|']'
op|','
name|'stub_user_agent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'foo-bar'"
op|']'
op|','
string|"'47'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'headers'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
name|'direct_client'
op|'.'
name|'gen_headers'
op|'('
name|'hdrs_in'
op|'='
op|'{'
string|"'user-agent'"
op|':'
string|"'47'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'user-agent'"
op|']'
op|','
name|'stub_user_agent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'headers'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'add_ts'
name|'in'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'now'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'direct_client'
op|'.'
name|'gen_headers'
op|'('
nl|'\n'
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'policy'
op|'.'
name|'idx'
op|'}'
op|','
nl|'\n'
name|'add_ts'
op|'='
name|'add_ts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'user-agent'"
op|']'
op|','
name|'stub_user_agent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|','
nl|'\n'
name|'str'
op|'('
name|'policy'
op|'.'
name|'idx'
op|')'
op|')'
newline|'\n'
name|'expected_header_count'
op|'='
number|'2'
newline|'\n'
name|'if'
name|'add_ts'
op|':'
newline|'\n'
indent|'                    '
name|'expected_header_count'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|','
nl|'\n'
name|'Timestamp'
op|'('
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
op|'.'
name|'internal'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'now'
op|'-'
number|'1'
op|'<'
name|'Timestamp'
op|'('
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
op|'<'
name|'now'
op|'+'
number|'1'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_header_count'
op|','
name|'len'
op|'('
name|'headers'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_get_account
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_direct_get_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stub_headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|'{'
nl|'\n'
string|"'X-Account-Container-Count'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'X-Account-Object-Count'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'X-Account-Bytes-Used'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
string|"'1234567890'"
op|','
nl|'\n'
string|"'X-PUT-Timestamp'"
op|':'
string|"'1234567890'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'body'
op|'='
string|'\'[{"count": 1, "bytes": 20971520, "name": "c1"}]\''
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|','
name|'stub_headers'
op|','
name|'body'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'resp_headers'
op|','
name|'resp'
op|'='
name|'direct_client'
op|'.'
name|'direct_get_account'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'marker'
op|'='
string|"'marker'"
op|','
nl|'\n'
name|'prefix'
op|'='
string|"'prefix'"
op|','
name|'delimiter'
op|'='
string|"'delimiter'"
op|','
name|'limit'
op|'='
number|'1000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'account_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'user-agent'"
op|']'
op|','
name|'self'
op|'.'
name|'user_agent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp_headers'
op|','
name|'stub_headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
op|','
name|'resp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'marker=marker'"
name|'in'
name|'conn'
op|'.'
name|'query_string'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'delimiter=delimiter'"
name|'in'
name|'conn'
op|'.'
name|'query_string'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'limit=1000'"
name|'in'
name|'conn'
op|'.'
name|'query_string'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'prefix=prefix'"
name|'in'
name|'conn'
op|'.'
name|'query_string'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'format=json'"
name|'in'
name|'conn'
op|'.'
name|'query_string'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_client_exception
dedent|''
name|'def'
name|'test_direct_client_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stub_headers'
op|'='
op|'{'
string|"'X-Trans-Id'"
op|':'
string|"'txb5f59485c578460f8be9e-0053478d09'"
op|'}'
newline|'\n'
name|'body'
op|'='
string|"'a server error has occurred'"
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'500'
op|','
name|'stub_headers'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_get_account'
op|'('
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
nl|'\n'
name|'self'
op|'.'
name|'account'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'ClientException not raised'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'500'
op|')'
newline|'\n'
name|'expected_err_msg_parts'
op|'='
op|'('
nl|'\n'
string|"'Account server %s:%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'self'
op|'.'
name|'node'
op|'['
string|"'port'"
op|']'
op|')'
op|','
nl|'\n'
string|"'GET %r'"
op|'%'
name|'self'
op|'.'
name|'account_path'
op|','
nl|'\n'
string|"'status 500'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'for'
name|'item'
name|'in'
name|'expected_err_msg_parts'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'item'
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|','
string|'\'%r was not in "%s"\''
op|'%'
op|'('
name|'item'
op|','
name|'err'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_host'
op|','
name|'self'
op|'.'
name|'node'
op|'['
string|"'ip'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_port'
op|','
name|'self'
op|'.'
name|'node'
op|'['
string|"'port'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_device'
op|','
name|'self'
op|'.'
name|'node'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_reason'
op|','
string|"'Internal Error'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_headers'
op|','
name|'stub_headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_get_account_no_content_does_not_parse_body
dedent|''
name|'def'
name|'test_direct_get_account_no_content_does_not_parse_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Account-Container-Count'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'X-Account-Object-Count'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'X-Account-Bytes-Used'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
string|"'1234567890'"
op|','
nl|'\n'
string|"'X-PUT-Timestamp'"
op|':'
string|"'1234567890'"
op|'}'
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'204'
op|','
name|'headers'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'resp_headers'
op|','
name|'resp'
op|'='
name|'direct_client'
op|'.'
name|'direct_get_account'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'account_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'user-agent'"
op|']'
op|','
name|'self'
op|'.'
name|'user_agent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp_headers'
op|','
name|'resp_headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_get_account_error
dedent|''
name|'def'
name|'test_direct_get_account_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mocked_http_conn'
op|'('
number|'500'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_get_account'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'ClientException not raised'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'account_path'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'GET'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_delete_account
dedent|''
name|'def'
name|'test_direct_delete_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'1.2.3.4'"
op|','
string|"'port'"
op|':'
string|"'6000'"
op|','
string|"'device'"
op|':'
string|"'sda'"
op|'}'
newline|'\n'
name|'part'
op|'='
string|"'0'"
newline|'\n'
name|'account'
op|'='
string|"'a'"
newline|'\n'
nl|'\n'
name|'mock_path'
op|'='
string|"'swift.common.bufferedhttp.http_connect_raw'"
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
name|'mock_path'
op|')'
name|'as'
name|'fake_connect'
op|':'
newline|'\n'
indent|'            '
name|'fake_connect'
op|'.'
name|'return_value'
op|'.'
name|'getresponse'
op|'.'
name|'return_value'
op|'.'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'direct_client'
op|'.'
name|'direct_delete_account'
op|'('
name|'node'
op|','
name|'part'
op|','
name|'account'
op|')'
newline|'\n'
name|'args'
op|','
name|'kwargs'
op|'='
name|'fake_connect'
op|'.'
name|'call_args'
newline|'\n'
name|'method'
op|'='
name|'args'
op|'['
number|'2'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'DELETE'"
op|','
name|'method'
op|')'
newline|'\n'
name|'path'
op|'='
name|'args'
op|'['
number|'3'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/sda/0/a'"
op|','
name|'path'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'args'
op|'['
number|'4'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'X-Timestamp'"
name|'in'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_delete_account_failure
dedent|''
dedent|''
name|'def'
name|'test_direct_delete_account_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'1.2.3.4'"
op|','
string|"'port'"
op|':'
string|"'6000'"
op|','
string|"'device'"
op|':'
string|"'sda'"
op|'}'
newline|'\n'
name|'part'
op|'='
string|"'0'"
newline|'\n'
name|'account'
op|'='
string|"'a'"
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'500'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_delete_account'
op|'('
name|'node'
op|','
name|'part'
op|','
name|'account'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'DELETE'"
op|','
name|'conn'
op|'.'
name|'method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/sda/0/a'"
op|','
name|'conn'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_head_container
dedent|''
dedent|''
name|'def'
name|'test_direct_head_container'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'HeaderKeyDict'
op|'('
name|'key'
op|'='
string|"'value'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|','
name|'headers'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'direct_client'
op|'.'
name|'direct_head_container'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'HEAD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'container_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'user-agent'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'user_agent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|','
name|'resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_head_container_error
dedent|''
name|'def'
name|'test_direct_head_container_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'HeaderKeyDict'
op|'('
name|'key'
op|'='
string|"'value'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'503'
op|','
name|'headers'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_head_container'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'ClientException not raised'"
op|')'
newline|'\n'
comment|'# check request'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'HEAD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'container_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'user-agent'"
op|']'
op|','
name|'self'
op|'.'
name|'user_agent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'503'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_headers'
op|','
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'HEAD'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_head_container_deleted
dedent|''
name|'def'
name|'test_direct_head_container_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'important_timestamp'
op|'='
name|'Timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'.'
name|'internal'
newline|'\n'
name|'headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|'{'
string|"'X-Backend-Important-Timestamp'"
op|':'
nl|'\n'
name|'important_timestamp'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'404'
op|','
name|'headers'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_head_container'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'err'
op|','
name|'ClientException'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'ClientException not raised'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'HEAD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'container_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'user-agent'"
op|']'
op|','
name|'self'
op|'.'
name|'user_agent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'404'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_headers'
op|','
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_get_container
dedent|''
name|'def'
name|'test_direct_get_container'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|'{'
string|"'key'"
op|':'
string|"'value'"
op|'}'
op|')'
newline|'\n'
name|'body'
op|'='
string|'\'[{"hash": "8f4e3", "last_modified": "317260", "bytes": 209}]\''
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|','
name|'headers'
op|','
name|'body'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'resp_headers'
op|','
name|'resp'
op|'='
name|'direct_client'
op|'.'
name|'direct_get_container'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
nl|'\n'
name|'marker'
op|'='
string|"'marker'"
op|','
name|'prefix'
op|'='
string|"'prefix'"
op|','
name|'delimiter'
op|'='
string|"'delimiter'"
op|','
nl|'\n'
name|'limit'
op|'='
number|'1000'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'user-agent'"
op|']'
op|','
nl|'\n'
string|"'direct-client %s'"
op|'%'
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|','
name|'resp_headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
op|','
name|'resp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'marker=marker'"
name|'in'
name|'conn'
op|'.'
name|'query_string'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'delimiter=delimiter'"
name|'in'
name|'conn'
op|'.'
name|'query_string'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'limit=1000'"
name|'in'
name|'conn'
op|'.'
name|'query_string'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'prefix=prefix'"
name|'in'
name|'conn'
op|'.'
name|'query_string'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'format=json'"
name|'in'
name|'conn'
op|'.'
name|'query_string'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_get_container_no_content_does_not_decode_body
dedent|''
name|'def'
name|'test_direct_get_container_no_content_does_not_decode_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'body'
op|'='
string|"''"
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'204'
op|','
name|'headers'
op|','
name|'body'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'resp_headers'
op|','
name|'resp'
op|'='
name|'direct_client'
op|'.'
name|'direct_get_container'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'user-agent'"
op|']'
op|','
nl|'\n'
string|"'direct-client %s'"
op|'%'
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|','
name|'resp_headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_delete_container
dedent|''
name|'def'
name|'test_direct_delete_container'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'direct_client'
op|'.'
name|'direct_delete_container'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'DELETE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'container_path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_delete_container_with_timestamp
dedent|''
dedent|''
name|'def'
name|'test_direct_delete_container_with_timestamp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# ensure timestamp is different from any that might be auto-generated'
nl|'\n'
indent|'        '
name|'timestamp'
op|'='
name|'Timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
number|'100'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'timestamp'
op|'.'
name|'internal'
op|'}'
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'direct_client'
op|'.'
name|'direct_delete_container'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'DELETE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'container_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'X-Timestamp'"
name|'in'
name|'conn'
op|'.'
name|'req_headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'timestamp'
op|','
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_delete_container_error
dedent|''
dedent|''
name|'def'
name|'test_direct_delete_container_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mocked_http_conn'
op|'('
number|'500'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_delete_container'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'ClientException not raised'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'DELETE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'container_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'DELETE'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_put_container_object
dedent|''
name|'def'
name|'test_direct_put_container_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
op|'{'
string|"'x-foo'"
op|':'
string|"'bar'"
op|'}'
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'204'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'rv'
op|'='
name|'direct_client'
op|'.'
name|'direct_put_container_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'PUT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'x-timestamp'"
name|'in'
name|'conn'
op|'.'
name|'req_headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar'"
op|','
name|'conn'
op|'.'
name|'req_headers'
op|'.'
name|'get'
op|'('
string|"'x-foo'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rv'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_put_container_object_error
dedent|''
name|'def'
name|'test_direct_put_container_object_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mocked_http_conn'
op|'('
number|'500'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_put_container_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
nl|'\n'
name|'self'
op|'.'
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'ClientException not raised'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'PUT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'PUT'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_delete_container_object
dedent|''
name|'def'
name|'test_direct_delete_container_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mocked_http_conn'
op|'('
number|'204'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'rv'
op|'='
name|'direct_client'
op|'.'
name|'direct_delete_container_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'DELETE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rv'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_delete_container_obj_error
dedent|''
name|'def'
name|'test_direct_delete_container_obj_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mocked_http_conn'
op|'('
number|'500'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_delete_container_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
nl|'\n'
name|'self'
op|'.'
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'ClientException not raised'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'DELETE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'DELETE'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_head_object
dedent|''
name|'def'
name|'test_direct_head_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|'{'
string|"'x-foo'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|','
name|'headers'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'direct_client'
op|'.'
name|'direct_head_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
nl|'\n'
name|'self'
op|'.'
name|'obj'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'HEAD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'user-agent'"
op|']'
op|','
name|'self'
op|'.'
name|'user_agent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar'"
op|','
name|'conn'
op|'.'
name|'req_headers'
op|'.'
name|'get'
op|'('
string|"'x-foo'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'x-timestamp'"
name|'not'
name|'in'
name|'conn'
op|'.'
name|'req_headers'
op|','
nl|'\n'
string|"'x-timestamp was in HEAD request headers'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|','
name|'resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_head_object_error
dedent|''
name|'def'
name|'test_direct_head_object_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mocked_http_conn'
op|'('
number|'500'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_head_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
nl|'\n'
name|'self'
op|'.'
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'ClientException not raised'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'HEAD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'HEAD'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_head_object_not_found
dedent|''
name|'def'
name|'test_direct_head_object_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'important_timestamp'
op|'='
name|'Timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'.'
name|'internal'
newline|'\n'
name|'stub_headers'
op|'='
op|'{'
string|"'X-Backend-Important-Timestamp'"
op|':'
name|'important_timestamp'
op|'}'
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'404'
op|','
name|'headers'
op|'='
name|'stub_headers'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_head_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
nl|'\n'
name|'self'
op|'.'
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'ClientException not raised'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'HEAD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'404'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_headers'
op|'['
string|"'x-backend-important-timestamp'"
op|']'
op|','
nl|'\n'
name|'important_timestamp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_get_object
dedent|''
name|'def'
name|'test_direct_get_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'contents'
op|'='
name|'six'
op|'.'
name|'StringIO'
op|'('
string|"'123456'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|','
name|'body'
op|'='
name|'contents'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'resp_header'
op|','
name|'obj_body'
op|'='
name|'direct_client'
op|'.'
name|'direct_get_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'obj_body'
op|','
name|'contents'
op|'.'
name|'getvalue'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_get_object_error
dedent|''
name|'def'
name|'test_direct_get_object_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mocked_http_conn'
op|'('
number|'500'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_get_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'ClientException not raised'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'GET'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_get_object_chunks
dedent|''
name|'def'
name|'test_direct_get_object_chunks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'contents'
op|'='
name|'six'
op|'.'
name|'StringIO'
op|'('
string|"'123456'"
op|')'
newline|'\n'
name|'downloaded'
op|'='
string|"b''"
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|','
name|'body'
op|'='
name|'contents'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'resp_header'
op|','
name|'obj_body'
op|'='
name|'direct_client'
op|'.'
name|'direct_get_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|','
nl|'\n'
name|'resp_chunk_size'
op|'='
number|'2'
op|')'
newline|'\n'
name|'while'
name|'obj_body'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'chunk'
op|'='
name|'obj_body'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'downloaded'
op|'+='
name|'chunk'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'GET'"
op|','
name|'conn'
op|'.'
name|'method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'obj_path'
op|','
name|'conn'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'123456'"
op|','
name|'downloaded'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_post_object
dedent|''
name|'def'
name|'test_direct_post_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
op|'{'
string|"'Key'"
op|':'
string|"'value'"
op|'}'
newline|'\n'
nl|'\n'
name|'resp_headers'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|','
name|'resp_headers'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'direct_client'
op|'.'
name|'direct_post_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|','
nl|'\n'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'POST'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'header'
name|'in'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
name|'header'
op|']'
op|','
name|'headers'
op|'['
name|'header'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_post_object_error
dedent|''
dedent|''
name|'def'
name|'test_direct_post_object_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
op|'{'
string|"'Key'"
op|':'
string|"'value'"
op|'}'
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'500'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_post_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
nl|'\n'
name|'self'
op|'.'
name|'obj'
op|','
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'ClientException not raised'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'POST'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
name|'for'
name|'header'
name|'in'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
name|'header'
op|']'
op|','
name|'headers'
op|'['
name|'header'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'user-agent'"
op|']'
op|','
name|'self'
op|'.'
name|'user_agent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'x-timestamp'"
name|'in'
name|'conn'
op|'.'
name|'req_headers'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'POST'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_delete_object
dedent|''
name|'def'
name|'test_direct_delete_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'direct_client'
op|'.'
name|'direct_delete_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'DELETE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_delete_object_with_timestamp
dedent|''
name|'def'
name|'test_direct_delete_object_with_timestamp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# ensure timestamp is different from any that might be auto-generated'
nl|'\n'
indent|'        '
name|'timestamp'
op|'='
name|'Timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
number|'100'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'timestamp'
op|'.'
name|'internal'
op|'}'
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'direct_client'
op|'.'
name|'direct_delete_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'DELETE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'X-Timestamp'"
name|'in'
name|'conn'
op|'.'
name|'req_headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'timestamp'
op|','
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_delete_object_error
dedent|''
dedent|''
name|'def'
name|'test_direct_delete_object_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mocked_http_conn'
op|'('
number|'503'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_delete_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
nl|'\n'
name|'self'
op|'.'
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'ClientException not raised'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'DELETE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'503'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'DELETE'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_put_object_with_content_length
dedent|''
name|'def'
name|'test_direct_put_object_with_content_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'contents'
op|'='
name|'six'
op|'.'
name|'StringIO'
op|'('
string|"'123456'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'direct_client'
op|'.'
name|'direct_put_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|','
nl|'\n'
name|'contents'
op|','
number|'6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'PUT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'md5'
op|'('
string|"'123456'"
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
name|'resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_put_object_fail
dedent|''
name|'def'
name|'test_direct_put_object_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'contents'
op|'='
name|'six'
op|'.'
name|'StringIO'
op|'('
string|"'123456'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'500'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_put_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
nl|'\n'
name|'self'
op|'.'
name|'obj'
op|','
name|'contents'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'ClientException not raised'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'PUT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_put_object_chunked
dedent|''
name|'def'
name|'test_direct_put_object_chunked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'contents'
op|'='
name|'six'
op|'.'
name|'StringIO'
op|'('
string|"'123456'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'direct_client'
op|'.'
name|'direct_put_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|','
nl|'\n'
name|'contents'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'PUT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'md5'
op|'('
string|"'6\\r\\n123456\\r\\n0\\r\\n\\r\\n'"
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
name|'resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_put_object_args
dedent|''
name|'def'
name|'test_direct_put_object_args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# One test to cover all missing checks'
nl|'\n'
indent|'        '
name|'contents'
op|'='
string|'""'
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'direct_client'
op|'.'
name|'direct_put_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|','
nl|'\n'
name|'contents'
op|','
name|'etag'
op|'='
string|'"testing-etag"'
op|','
name|'content_type'
op|'='
string|"'Text'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'PUT'"
op|','
name|'conn'
op|'.'
name|'method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'obj_path'
op|','
name|'conn'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
string|"'Text'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'md5'
op|'('
string|"'0\\r\\n\\r\\n'"
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
name|'resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_direct_put_object_header_content_length
dedent|''
name|'def'
name|'test_direct_put_object_header_content_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'contents'
op|'='
name|'six'
op|'.'
name|'StringIO'
op|'('
string|"'123456'"
op|')'
newline|'\n'
name|'stub_headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|'{'
nl|'\n'
string|"'Content-Length'"
op|':'
string|"'6'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'direct_client'
op|'.'
name|'direct_put_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|','
nl|'\n'
name|'contents'
op|','
name|'headers'
op|'='
name|'stub_headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'PUT'"
op|','
name|'conn'
op|'.'
name|'method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'Content-length'"
op|']'
op|','
string|"'6'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'md5'
op|'('
string|"'123456'"
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
name|'resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry
dedent|''
name|'def'
name|'test_retry'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|'{'
string|"'key'"
op|':'
string|"'value'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
number|'200'
op|','
name|'headers'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'attempts'
op|','
name|'resp'
op|'='
name|'direct_client'
op|'.'
name|'retry'
op|'('
nl|'\n'
name|'direct_client'
op|'.'
name|'direct_head_object'
op|','
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'method'
op|','
string|"'HEAD'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'path'
op|','
name|'self'
op|'.'
name|'obj_path'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'conn'
op|'.'
name|'req_headers'
op|'['
string|"'user-agent'"
op|']'
op|','
name|'self'
op|'.'
name|'user_agent'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|','
name|'resp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'attempts'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_client_exception
dedent|''
name|'def'
name|'test_retry_client_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'direct-client-test'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.direct_client.sleep'"
op|')'
name|'as'
name|'mock_sleep'
op|','
name|'mocked_http_conn'
op|'('
number|'500'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'direct_client'
op|'.'
name|'ClientException'
op|')'
name|'as'
name|'err_ctx'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'retry'
op|'('
name|'direct_client'
op|'.'
name|'direct_delete_object'
op|','
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|','
nl|'\n'
name|'retries'
op|'='
number|'2'
op|','
name|'error_log'
op|'='
name|'logger'
op|'.'
name|'error'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'DELETE'"
op|','
name|'conn'
op|'.'
name|'method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err_ctx'
op|'.'
name|'exception'
op|'.'
name|'http_status'
op|','
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
number|'1'
op|')'
op|','
name|'mock'
op|'.'
name|'call'
op|'('
number|'2'
op|')'
op|']'
op|','
nl|'\n'
name|'mock_sleep'
op|'.'
name|'call_args_list'
op|')'
newline|'\n'
name|'error_lines'
op|'='
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'error_lines'
op|')'
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'error_lines'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'500 Internal Error'"
op|','
name|'line'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_retry_http_exception
dedent|''
dedent|''
name|'def'
name|'test_retry_http_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'direct-client-test'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.direct_client.sleep'"
op|')'
name|'as'
name|'mock_sleep'
op|','
name|'mocked_http_conn'
op|'('
name|'HTTPException'
op|'('
string|"'Kaboom!'"
op|')'
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'HTTPException'
op|')'
name|'as'
name|'err_ctx'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'retry'
op|'('
name|'direct_client'
op|'.'
name|'direct_delete_object'
op|','
nl|'\n'
name|'self'
op|'.'
name|'node'
op|','
name|'self'
op|'.'
name|'part'
op|','
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'obj'
op|','
nl|'\n'
name|'retries'
op|'='
number|'2'
op|','
name|'error_log'
op|'='
name|'logger'
op|'.'
name|'error'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'DELETE'"
op|','
name|'conn'
op|'.'
name|'method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'Kaboom!'"
op|','
name|'str'
op|'('
name|'err_ctx'
op|'.'
name|'exception'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
number|'1'
op|')'
op|','
name|'mock'
op|'.'
name|'call'
op|'('
number|'2'
op|')'
op|']'
op|','
nl|'\n'
name|'mock_sleep'
op|'.'
name|'call_args_list'
op|')'
newline|'\n'
name|'error_lines'
op|'='
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'error_lines'
op|')'
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'error_lines'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'Kaboom!'"
op|','
name|'line'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
