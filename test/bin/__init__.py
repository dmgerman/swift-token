begin_unit
string|'\'\'\'Tests for packaged "bin" scripts\n\'\'\''
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'imp'
comment|'# access the import internals'
newline|'\n'
nl|'\n'
DECL|variable|bin_test_dir
name|'bin_test_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|bin_dir
name|'bin_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'bin_test_dir'
op|','
string|"'../../bin'"
op|')'
newline|'\n'
nl|'\n'
comment|"# build up logical mapping of bin 'file-name' to (module, path)"
nl|'\n'
DECL|variable|modules
name|'modules'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'file_name'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'bin_dir'
op|')'
op|':'
newline|'\n'
DECL|variable|module
indent|'    '
name|'module'
op|'='
string|"'.'"
op|'.'
name|'join'
op|'('
op|'['
string|"'test'"
op|','
string|"'bin'"
op|','
name|'file_name'
op|'.'
name|'replace'
op|'('
string|"'-'"
op|','
string|"'_'"
op|')'
op|']'
op|')'
newline|'\n'
DECL|variable|path
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'bin_dir'
op|','
name|'file_name'
op|')'
newline|'\n'
name|'modules'
op|'['
name|'file_name'
op|']'
op|'='
op|'('
name|'module'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_bin_module
dedent|''
name|'def'
name|'get_bin_module'
op|'('
name|'bin_file_name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'name'
op|','
name|'path'
op|'='
name|'modules'
op|'['
name|'bin_file_name'
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'module'
op|'='
name|'imp'
op|'.'
name|'load_source'
op|'('
name|'name'
op|','
name|'path'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
comment|'# another option would be adding bin/*c to .bzrignore'
nl|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'path'
op|'+'
string|"'c'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'module'
newline|'\n'
nl|'\n'
comment|'# this might not be safe on source files that don\'t test __name__=="__main__"'
nl|'\n'
DECL|variable|swift_init
dedent|''
name|'swift_init'
op|'='
name|'get_bin_module'
op|'('
string|"'swift-init'"
op|')'
newline|'\n'
DECL|variable|st
name|'st'
op|'='
name|'get_bin_module'
op|'('
string|"'st'"
op|')'
newline|'\n'
endmarker|''
end_unit
