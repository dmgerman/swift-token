begin_unit
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'time'
newline|'\n'
name|'from'
name|'collections'
name|'import'
name|'defaultdict'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
name|'import'
name|'itertools'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'GreenPile'
op|','
name|'GreenPool'
op|','
name|'Timeout'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'constraints'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'daemon'
name|'import'
name|'Daemon'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'direct_client'
name|'import'
op|'('
nl|'\n'
name|'direct_head_container'
op|','
name|'direct_delete_container_object'
op|','
nl|'\n'
name|'direct_put_container_object'
op|','
name|'ClientException'
op|')'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'internal_client'
name|'import'
name|'InternalClient'
op|','
name|'UnexpectedResponse'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'get_logger'
op|','
name|'split_path'
op|','
name|'quorum_size'
op|','
name|'FileLikeIter'
op|','
name|'Timestamp'
op|','
name|'last_modified_date_to_timestamp'
op|','
name|'LRUCache'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|MISPLACED_OBJECTS_ACCOUNT
name|'MISPLACED_OBJECTS_ACCOUNT'
op|'='
string|"'.misplaced_objects'"
newline|'\n'
DECL|variable|MISPLACED_OBJECTS_CONTAINER_DIVISOR
name|'MISPLACED_OBJECTS_CONTAINER_DIVISOR'
op|'='
number|'3600'
comment|'# 1 hour'
newline|'\n'
DECL|variable|CONTAINER_POLICY_TTL
name|'CONTAINER_POLICY_TTL'
op|'='
number|'30'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|cmp_policy_info
name|'def'
name|'cmp_policy_info'
op|'('
name|'info'
op|','
name|'remote_info'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    You have to squint to see it, but the general strategy is just:\n\n    if either has been recreated:\n        return the newest (of the recreated)\n    else\n        return the oldest\n\n    I tried cleaning it up for awhile, but settled on just writing a bunch of\n    tests instead.  Once you get an intuitive sense for the nuance here you\n    can try and see there\'s a better way to spell the boolean logic but it all\n    ends up looking sorta hairy.\n\n    :returns: -1 if info is correct, 1 if remote_info is better\n    """'
newline|'\n'
DECL|function|is_deleted
name|'def'
name|'is_deleted'
op|'('
name|'info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'('
name|'info'
op|'['
string|"'delete_timestamp'"
op|']'
op|'>'
name|'info'
op|'['
string|"'put_timestamp'"
op|']'
name|'and'
nl|'\n'
name|'info'
op|'.'
name|'get'
op|'('
string|"'count'"
op|','
name|'info'
op|'.'
name|'get'
op|'('
string|"'object_count'"
op|','
number|'0'
op|')'
op|')'
op|'=='
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'deleted'
op|'='
name|'is_deleted'
op|'('
name|'info'
op|')'
newline|'\n'
name|'remote_deleted'
op|'='
name|'is_deleted'
op|'('
name|'remote_info'
op|')'
newline|'\n'
name|'if'
name|'any'
op|'('
op|'['
name|'deleted'
op|','
name|'remote_deleted'
op|']'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'deleted'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'-'
number|'1'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'remote_deleted'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'1'
newline|'\n'
dedent|''
name|'return'
name|'cmp'
op|'('
name|'remote_info'
op|'['
string|"'status_changed_at'"
op|']'
op|','
nl|'\n'
name|'info'
op|'['
string|"'status_changed_at'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|has_been_recreated
dedent|''
name|'def'
name|'has_been_recreated'
op|'('
name|'info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'('
name|'info'
op|'['
string|"'put_timestamp'"
op|']'
op|'>'
name|'info'
op|'['
string|"'delete_timestamp'"
op|']'
op|'>'
nl|'\n'
name|'Timestamp'
op|'('
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'remote_recreated'
op|'='
name|'has_been_recreated'
op|'('
name|'remote_info'
op|')'
newline|'\n'
name|'recreated'
op|'='
name|'has_been_recreated'
op|'('
name|'info'
op|')'
newline|'\n'
name|'if'
name|'any'
op|'('
op|'['
name|'remote_recreated'
op|','
name|'recreated'
op|']'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'recreated'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'1'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'remote_recreated'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'-'
number|'1'
newline|'\n'
dedent|''
name|'return'
name|'cmp'
op|'('
name|'remote_info'
op|'['
string|"'status_changed_at'"
op|']'
op|','
nl|'\n'
name|'info'
op|'['
string|"'status_changed_at'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'cmp'
op|'('
name|'info'
op|'['
string|"'status_changed_at'"
op|']'
op|','
name|'remote_info'
op|'['
string|"'status_changed_at'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|incorrect_policy_index
dedent|''
name|'def'
name|'incorrect_policy_index'
op|'('
name|'info'
op|','
name|'remote_info'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Compare remote_info to info and decide if the remote storage policy index\n    should be used instead of ours.\n    """'
newline|'\n'
name|'if'
string|"'storage_policy_index'"
name|'not'
name|'in'
name|'remote_info'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'if'
name|'remote_info'
op|'['
string|"'storage_policy_index'"
op|']'
op|'=='
name|'info'
op|'['
string|"'storage_policy_index'"
op|']'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'info'
op|'['
string|"'storage_policy_index'"
op|']'
op|'!='
name|'sorted'
op|'('
nl|'\n'
op|'['
name|'info'
op|','
name|'remote_info'
op|']'
op|','
name|'cmp'
op|'='
name|'cmp_policy_info'
op|')'
op|'['
number|'0'
op|']'
op|'['
string|"'storage_policy_index'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|translate_container_headers_to_info
dedent|''
name|'def'
name|'translate_container_headers_to_info'
op|'('
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'default_timestamp'
op|'='
name|'Timestamp'
op|'('
number|'0'
op|')'
op|'.'
name|'internal'
newline|'\n'
name|'return'
op|'{'
nl|'\n'
string|"'storage_policy_index'"
op|':'
name|'int'
op|'('
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|')'
op|','
nl|'\n'
string|"'put_timestamp'"
op|':'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-backend-put-timestamp'"
op|','
nl|'\n'
name|'default_timestamp'
op|')'
op|','
nl|'\n'
string|"'delete_timestamp'"
op|':'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-backend-delete-timestamp'"
op|','
nl|'\n'
name|'default_timestamp'
op|')'
op|','
nl|'\n'
string|"'status_changed_at'"
op|':'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-backend-status-changed-at'"
op|','
nl|'\n'
name|'default_timestamp'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|best_policy_index
dedent|''
name|'def'
name|'best_policy_index'
op|'('
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'container_info'
op|'='
name|'map'
op|'('
name|'translate_container_headers_to_info'
op|','
name|'headers'
op|')'
newline|'\n'
name|'container_info'
op|'.'
name|'sort'
op|'('
name|'cmp'
op|'='
name|'cmp_policy_info'
op|')'
newline|'\n'
name|'return'
name|'container_info'
op|'['
number|'0'
op|']'
op|'['
string|"'storage_policy_index'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_reconciler_container_name
dedent|''
name|'def'
name|'get_reconciler_container_name'
op|'('
name|'obj_timestamp'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'str'
op|'('
name|'int'
op|'('
name|'Timestamp'
op|'('
name|'obj_timestamp'
op|')'
op|')'
op|'//'
nl|'\n'
name|'MISPLACED_OBJECTS_CONTAINER_DIVISOR'
op|'*'
nl|'\n'
name|'MISPLACED_OBJECTS_CONTAINER_DIVISOR'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_reconciler_obj_name
dedent|''
name|'def'
name|'get_reconciler_obj_name'
op|'('
name|'policy_index'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
string|'"%(policy_index)d:/%(acc)s/%(con)s/%(obj)s"'
op|'%'
op|'{'
nl|'\n'
string|"'policy_index'"
op|':'
name|'policy_index'
op|','
string|"'acc'"
op|':'
name|'account'
op|','
nl|'\n'
string|"'con'"
op|':'
name|'container'
op|','
string|"'obj'"
op|':'
name|'obj'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_reconciler_content_type
dedent|''
name|'def'
name|'get_reconciler_content_type'
op|'('
name|'op'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
nl|'\n'
string|"'put'"
op|':'
string|"'application/x-put'"
op|','
nl|'\n'
string|"'delete'"
op|':'
string|"'application/x-delete'"
op|','
nl|'\n'
op|'}'
op|'['
name|'op'
op|'.'
name|'lower'
op|'('
op|')'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|"'invalid operation type %r'"
op|'%'
name|'op'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_row_to_q_entry_translater
dedent|''
dedent|''
name|'def'
name|'get_row_to_q_entry_translater'
op|'('
name|'broker'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'account'
op|'='
name|'broker'
op|'.'
name|'account'
newline|'\n'
name|'container'
op|'='
name|'broker'
op|'.'
name|'container'
newline|'\n'
name|'op_type'
op|'='
op|'{'
nl|'\n'
number|'0'
op|':'
name|'get_reconciler_content_type'
op|'('
string|"'put'"
op|')'
op|','
nl|'\n'
number|'1'
op|':'
name|'get_reconciler_content_type'
op|'('
string|"'delete'"
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|translater
name|'def'
name|'translater'
op|'('
name|'obj_info'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'name'
op|'='
name|'get_reconciler_obj_name'
op|'('
name|'obj_info'
op|'['
string|"'storage_policy_index'"
op|']'
op|','
nl|'\n'
name|'account'
op|','
name|'container'
op|','
nl|'\n'
name|'obj_info'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'return'
op|'{'
nl|'\n'
string|"'name'"
op|':'
name|'name'
op|','
nl|'\n'
string|"'deleted'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'obj_info'
op|'['
string|"'created_at'"
op|']'
op|','
nl|'\n'
string|"'etag'"
op|':'
name|'obj_info'
op|'['
string|"'created_at'"
op|']'
op|','
nl|'\n'
string|"'content_type'"
op|':'
name|'op_type'
op|'['
name|'obj_info'
op|'['
string|"'deleted'"
op|']'
op|']'
op|','
nl|'\n'
string|"'size'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'return'
name|'translater'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|add_to_reconciler_queue
dedent|''
name|'def'
name|'add_to_reconciler_queue'
op|'('
name|'container_ring'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'obj_policy_index'
op|','
name|'obj_timestamp'
op|','
name|'op'
op|','
nl|'\n'
name|'force'
op|'='
name|'False'
op|','
name|'conn_timeout'
op|'='
number|'5'
op|','
name|'response_timeout'
op|'='
number|'15'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Add an object to the container reconciler\'s queue. This will cause the\n    container reconciler to move it from its current storage policy index to\n    the correct storage policy index.\n\n    :param container_ring: container ring\n    :param account: the misplaced object\'s account\n    :param container: the misplaced object\'s container\n    :param obj: the misplaced object\n    :param obj_policy_index: the policy index where the misplaced object\n                             currently is\n    :param obj_timestamp: the misplaced object\'s X-Timestamp. We need this to\n                          ensure that the reconciler doesn\'t overwrite a newer\n                          object with an older one.\n    :param op: the method of the operation (DELETE or PUT)\n    :param force: over-write queue entries newer than obj_timestamp\n    :param conn_timeout: max time to wait for connection to container server\n    :param response_timeout: max time to wait for response from container\n                             server\n\n    :returns: .misplaced_object container name, False on failure. "Success"\n              means a quorum of containers got the update.\n    """'
newline|'\n'
name|'container_name'
op|'='
name|'get_reconciler_container_name'
op|'('
name|'obj_timestamp'
op|')'
newline|'\n'
name|'object_name'
op|'='
name|'get_reconciler_obj_name'
op|'('
name|'obj_policy_index'
op|','
name|'account'
op|','
nl|'\n'
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'if'
name|'force'
op|':'
newline|'\n'
comment|'# this allows an operator to re-enqueue an object that has'
nl|'\n'
comment|'# already been popped from the queue to be reprocessed, but'
nl|'\n'
comment|'# could potentially prevent out of order updates from making it'
nl|'\n'
comment|'# into the queue'
nl|'\n'
indent|'        '
name|'x_timestamp'
op|'='
name|'Timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'.'
name|'internal'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'x_timestamp'
op|'='
name|'obj_timestamp'
newline|'\n'
dedent|''
name|'q_op_type'
op|'='
name|'get_reconciler_content_type'
op|'('
name|'op'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Size'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'X-Etag'"
op|':'
name|'obj_timestamp'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'x_timestamp'
op|','
nl|'\n'
string|"'X-Content-Type'"
op|':'
name|'q_op_type'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|_check_success
name|'def'
name|'_check_success'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'direct_put_container_object'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'return'
number|'1'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'ClientException'
op|','
name|'Timeout'
op|','
name|'socket'
op|'.'
name|'error'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'pile'
op|'='
name|'GreenPile'
op|'('
op|')'
newline|'\n'
name|'part'
op|','
name|'nodes'
op|'='
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
name|'MISPLACED_OBJECTS_ACCOUNT'
op|','
nl|'\n'
name|'container_name'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'        '
name|'pile'
op|'.'
name|'spawn'
op|'('
name|'_check_success'
op|','
name|'node'
op|','
name|'part'
op|','
name|'MISPLACED_OBJECTS_ACCOUNT'
op|','
nl|'\n'
name|'container_name'
op|','
name|'object_name'
op|','
name|'headers'
op|'='
name|'headers'
op|','
nl|'\n'
name|'conn_timeout'
op|'='
name|'conn_timeout'
op|','
nl|'\n'
name|'response_timeout'
op|'='
name|'response_timeout'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'successes'
op|'='
name|'sum'
op|'('
name|'pile'
op|')'
newline|'\n'
name|'if'
name|'successes'
op|'>='
name|'quorum_size'
op|'('
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'container_name'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|slightly_later_timestamp
dedent|''
dedent|''
name|'def'
name|'slightly_later_timestamp'
op|'('
name|'ts'
op|','
name|'offset'
op|'='
number|'1'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'Timestamp'
op|'('
name|'ts'
op|','
name|'offset'
op|'='
name|'offset'
op|')'
op|'.'
name|'internal'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|parse_raw_obj
dedent|''
name|'def'
name|'parse_raw_obj'
op|'('
name|'obj_info'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Translate a reconciler container listing entry to a dictionary\n    containing the parts of the misplaced object queue entry.\n\n    :param obj_info: an entry in an a container listing with the\n                     required keys: name, content_type, and hash\n\n    :returns: a queue entry dict with the keys: q_policy_index, account,\n              container, obj, q_op, q_ts, q_record, and path\n    """'
newline|'\n'
name|'raw_obj_name'
op|'='
name|'obj_info'
op|'['
string|"'name'"
op|']'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
nl|'\n'
name|'policy_index'
op|','
name|'obj_name'
op|'='
name|'raw_obj_name'
op|'.'
name|'split'
op|'('
string|"':'"
op|','
number|'1'
op|')'
newline|'\n'
name|'q_policy_index'
op|'='
name|'int'
op|'('
name|'policy_index'
op|')'
newline|'\n'
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|'='
name|'split_path'
op|'('
name|'obj_name'
op|','
number|'3'
op|','
number|'3'
op|','
name|'rest_with_last'
op|'='
name|'True'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'q_op'
op|'='
op|'{'
nl|'\n'
string|"'application/x-put'"
op|':'
string|"'PUT'"
op|','
nl|'\n'
string|"'application/x-delete'"
op|':'
string|"'DELETE'"
op|','
nl|'\n'
op|'}'
op|'['
name|'obj_info'
op|'['
string|"'content_type'"
op|']'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|"'invalid operation type %r'"
op|'%'
nl|'\n'
name|'obj_info'
op|'.'
name|'get'
op|'('
string|"'content_type'"
op|','
name|'None'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'{'
nl|'\n'
string|"'q_policy_index'"
op|':'
name|'q_policy_index'
op|','
nl|'\n'
string|"'account'"
op|':'
name|'account'
op|','
nl|'\n'
string|"'container'"
op|':'
name|'container'
op|','
nl|'\n'
string|"'obj'"
op|':'
name|'obj'
op|','
nl|'\n'
string|"'q_op'"
op|':'
name|'q_op'
op|','
nl|'\n'
string|"'q_ts'"
op|':'
name|'Timestamp'
op|'('
name|'obj_info'
op|'['
string|"'hash'"
op|']'
op|')'
op|','
nl|'\n'
string|"'q_record'"
op|':'
name|'last_modified_date_to_timestamp'
op|'('
nl|'\n'
name|'obj_info'
op|'['
string|"'last_modified'"
op|']'
op|')'
op|','
nl|'\n'
string|"'path'"
op|':'
string|"'/%s/%s/%s'"
op|'%'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'LRUCache'
op|'('
name|'maxtime'
op|'='
name|'CONTAINER_POLICY_TTL'
op|')'
newline|'\n'
DECL|function|direct_get_container_policy_index
name|'def'
name|'direct_get_container_policy_index'
op|'('
name|'container_ring'
op|','
name|'account_name'
op|','
nl|'\n'
name|'container_name'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Talk directly to the primary container servers to figure out the storage\n    policy index for a given container.\n\n    :param container_ring: ring in which to look up the container locations\n    :param account_name: name of the container\'s account\n    :param container_name: name of the container\n    :returns: storage policy index, or None if it couldn\'t get a quorum\n    """'
newline|'\n'
DECL|function|_eat_client_exception
name|'def'
name|'_eat_client_exception'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'direct_head_container'
op|'('
op|'*'
name|'args'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'err'
op|'.'
name|'http_headers'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Timeout'
op|','
name|'socket'
op|'.'
name|'error'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'pile'
op|'='
name|'GreenPile'
op|'('
op|')'
newline|'\n'
name|'part'
op|','
name|'nodes'
op|'='
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
name|'account_name'
op|','
name|'container_name'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'        '
name|'pile'
op|'.'
name|'spawn'
op|'('
name|'_eat_client_exception'
op|','
name|'node'
op|','
name|'part'
op|','
name|'account_name'
op|','
nl|'\n'
name|'container_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'headers'
op|'='
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'pile'
name|'if'
name|'x'
name|'is'
name|'not'
name|'None'
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'headers'
op|')'
op|'<'
name|'quorum_size'
op|'('
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
newline|'\n'
dedent|''
name|'return'
name|'best_policy_index'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|direct_delete_container_entry
dedent|''
name|'def'
name|'direct_delete_container_entry'
op|'('
name|'container_ring'
op|','
name|'account_name'
op|','
name|'container_name'
op|','
nl|'\n'
name|'object_name'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Talk directly to the primary container servers to delete a particular\n    object listing. Does not talk to object servers; use this only when a\n    container entry does not actually have a corresponding object.\n    """'
newline|'\n'
name|'pool'
op|'='
name|'GreenPool'
op|'('
op|')'
newline|'\n'
name|'part'
op|','
name|'nodes'
op|'='
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
name|'account_name'
op|','
name|'container_name'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'        '
name|'pool'
op|'.'
name|'spawn_n'
op|'('
name|'direct_delete_container_object'
op|','
name|'node'
op|','
name|'part'
op|','
name|'account_name'
op|','
nl|'\n'
name|'container_name'
op|','
name|'object_name'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
nl|'\n'
comment|"# This either worked or it didn't; if it didn't, we'll retry on the next"
nl|'\n'
comment|'# reconciler loop when we see the queue entry again.'
nl|'\n'
dedent|''
name|'pool'
op|'.'
name|'waitall'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ContainerReconciler
dedent|''
name|'class'
name|'ContainerReconciler'
op|'('
name|'Daemon'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Move objects that are in the wrong storage policy.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'conf'
op|'='
name|'conf'
newline|'\n'
name|'self'
op|'.'
name|'reclaim_age'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'reclaim_age'"
op|','
number|'86400'
op|'*'
number|'7'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'interval'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'interval'"
op|','
number|'30'
op|')'
op|')'
newline|'\n'
name|'conf_path'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'__file__'"
op|')'
name|'or'
string|"'/etc/swift/container-reconciler.conf'"
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'get_logger'
op|'('
name|'conf'
op|','
name|'log_route'
op|'='
string|"'container-reconciler'"
op|')'
newline|'\n'
name|'request_tries'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'request_tries'"
op|')'
name|'or'
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'swift'
op|'='
name|'InternalClient'
op|'('
name|'conf_path'
op|','
nl|'\n'
string|"'Swift Container Reconciler'"
op|','
nl|'\n'
name|'request_tries'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats'
op|'='
name|'defaultdict'
op|'('
name|'int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'last_stat_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|stats_log
dedent|''
name|'def'
name|'stats_log'
op|'('
name|'self'
op|','
name|'metric'
op|','
name|'msg'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Update stats tracking for metric and emit log message.\n        """'
newline|'\n'
name|'level'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'level'"
op|','
name|'logging'
op|'.'
name|'DEBUG'
op|')'
newline|'\n'
name|'log_message'
op|'='
string|"'%s: '"
op|'%'
name|'metric'
op|'+'
name|'msg'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'log'
op|'('
name|'level'
op|','
name|'log_message'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats'
op|'['
name|'metric'
op|']'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|log_stats
dedent|''
name|'def'
name|'log_stats'
op|'('
name|'self'
op|','
name|'force'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Dump stats to logger, noop when stats have been already been\n        logged in the last minute.\n        """'
newline|'\n'
name|'now'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'should_log'
op|'='
name|'force'
name|'or'
op|'('
name|'now'
op|'-'
name|'self'
op|'.'
name|'last_stat_time'
op|'>'
number|'60'
op|')'
newline|'\n'
name|'if'
name|'should_log'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'last_stat_time'
op|'='
name|'now'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
string|"'Reconciler Stats: %r'"
op|','
name|'dict'
op|'('
op|'**'
name|'self'
op|'.'
name|'stats'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|pop_queue
dedent|''
dedent|''
name|'def'
name|'pop_queue'
op|'('
name|'self'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'q_ts'
op|','
name|'q_record'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Issue a delete object request to the container for the misplaced\n        object queue entry.\n\n        :param container: the misplaced objects container\n        :param q_ts: the timestamp of the misplaced object\n        :param q_record: the timestamp of the queue entry\n\n        N.B. q_ts will normally be the same time as q_record except when\n        an object was manually re-enqued.\n        """'
newline|'\n'
name|'q_path'
op|'='
string|"'/%s/%s/%s'"
op|'%'
op|'('
name|'MISPLACED_OBJECTS_ACCOUNT'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'x_timestamp'
op|'='
name|'slightly_later_timestamp'
op|'('
name|'q_record'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'pop_queue'"
op|','
string|"'remove %r (%f) from the queue (%s)'"
op|','
nl|'\n'
name|'q_path'
op|','
name|'q_ts'
op|','
name|'x_timestamp'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'x_timestamp'
op|'}'
newline|'\n'
name|'direct_delete_container_entry'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'swift'
op|'.'
name|'container_ring'
op|','
name|'MISPLACED_OBJECTS_ACCOUNT'
op|','
nl|'\n'
name|'container'
op|','
name|'obj'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|throw_tombstones
dedent|''
name|'def'
name|'throw_tombstones'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'timestamp'
op|','
nl|'\n'
name|'policy_index'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Issue a delete object request to the given storage_policy.\n\n        :param account: the account name\n        :param container: the container name\n        :param account: the object name\n        :param timestamp: the timestamp of the object to delete\n        :param policy_index: the policy index to direct the request\n        :param path: the path to be used for logging\n        """'
newline|'\n'
name|'x_timestamp'
op|'='
name|'slightly_later_timestamp'
op|'('
name|'timestamp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'cleanup_attempt'"
op|','
string|"'%r (%f) from policy_index '"
nl|'\n'
string|"'%s (%s) will be deleted'"
op|','
nl|'\n'
name|'path'
op|','
name|'timestamp'
op|','
name|'policy_index'
op|','
name|'x_timestamp'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'x_timestamp'
op|','
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'policy_index'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'success'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'swift'
op|'.'
name|'delete_object'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
number|'404'
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnexpectedResponse'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'cleanup_failed'"
op|','
string|"'%r (%f) was not cleaned up '"
nl|'\n'
string|"'in storage_policy %s (%s)'"
op|','
name|'path'
op|','
name|'timestamp'
op|','
nl|'\n'
name|'policy_index'
op|','
name|'err'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'cleanup_success'"
op|','
string|"'%r (%f) was successfully '"
nl|'\n'
string|"'removed from policy_index %s'"
op|','
name|'path'
op|','
name|'timestamp'
op|','
nl|'\n'
name|'policy_index'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'success'
newline|'\n'
nl|'\n'
DECL|member|_reconcile_object
dedent|''
name|'def'
name|'_reconcile_object'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'q_policy_index'
op|','
name|'q_ts'
op|','
nl|'\n'
name|'q_op'
op|','
name|'path'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Perform object reconciliation.\n\n        :param account: the account name of the misplaced object\n        :param container: the container name of the misplaced object\n        :param obj: the object name\n        :param q_policy_index: the policy index of the source indicated by the\n                               queue entry.\n        :param q_ts: the timestamp of the misplaced object\n        :param q_op: the operation of the misplaced request\n        :param path: the full path of the misplaced object for logging\n\n        :returns: True to indicate the request is fully processed\n                  successfully, otherwise False.\n        """'
newline|'\n'
name|'container_policy_index'
op|'='
name|'direct_get_container_policy_index'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'swift'
op|'.'
name|'container_ring'
op|','
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'if'
name|'container_policy_index'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'unavailable_container'"
op|','
string|"'%r (%f) unable to '"
nl|'\n'
string|"'determine the destination policy_index'"
op|','
nl|'\n'
name|'path'
op|','
name|'q_ts'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'if'
name|'container_policy_index'
op|'=='
name|'q_policy_index'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'noop_object'"
op|','
string|"'%r (%f) container policy_index '"
nl|'\n'
string|"'%s matches queue policy index %s'"
op|','
name|'path'
op|','
name|'q_ts'
op|','
nl|'\n'
name|'container_policy_index'
op|','
name|'q_policy_index'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
comment|'# check if object exists in the destination already'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'checking for %r (%f) in destination '"
nl|'\n'
string|"'policy_index %s'"
op|','
name|'path'
op|','
name|'q_ts'
op|','
nl|'\n'
name|'container_policy_index'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'container_policy_index'
op|'}'
newline|'\n'
name|'dest_obj'
op|'='
name|'self'
op|'.'
name|'swift'
op|'.'
name|'get_object_metadata'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
number|'4'
op|')'
op|')'
newline|'\n'
name|'dest_ts'
op|'='
name|'Timestamp'
op|'('
name|'dest_obj'
op|'.'
name|'get'
op|'('
string|"'x-backend-timestamp'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'if'
name|'dest_ts'
op|'>='
name|'q_ts'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'found_object'"
op|','
string|"'%r (%f) in policy_index %s '"
nl|'\n'
string|"'is newer than queue (%f)'"
op|','
name|'path'
op|','
name|'dest_ts'
op|','
nl|'\n'
name|'container_policy_index'
op|','
name|'q_ts'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'throw_tombstones'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'q_ts'
op|','
nl|'\n'
name|'q_policy_index'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
comment|'# object is misplaced'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'misplaced_object'"
op|','
string|"'%r (%f) in policy_index %s '"
nl|'\n'
string|"'should be in policy_index %s'"
op|','
name|'path'
op|','
name|'q_ts'
op|','
nl|'\n'
name|'q_policy_index'
op|','
name|'container_policy_index'
op|')'
newline|'\n'
nl|'\n'
comment|'# fetch object from the source location'
nl|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'fetching %r (%f) from storage policy %s'"
op|','
name|'path'
op|','
nl|'\n'
name|'q_ts'
op|','
name|'q_policy_index'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'q_policy_index'
op|'}'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'source_obj_status'
op|','
name|'source_obj_info'
op|','
name|'source_obj_iter'
op|'='
name|'self'
op|'.'
name|'swift'
op|'.'
name|'get_object'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
number|'4'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnexpectedResponse'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'source_obj_status'
op|'='
name|'err'
op|'.'
name|'resp'
op|'.'
name|'status_int'
newline|'\n'
name|'source_obj_info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'source_obj_iter'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'source_ts'
op|'='
name|'Timestamp'
op|'('
name|'source_obj_info'
op|'.'
name|'get'
op|'('
string|"'x-backend-timestamp'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'if'
name|'source_obj_status'
op|'=='
number|'404'
name|'and'
name|'q_op'
op|'=='
string|"'DELETE'"
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'ensure_tombstone_in_right_location'
op|'('
nl|'\n'
name|'q_policy_index'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'q_ts'
op|','
name|'path'
op|','
nl|'\n'
name|'container_policy_index'
op|','
name|'source_ts'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'ensure_object_in_right_location'
op|'('
nl|'\n'
name|'q_policy_index'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'q_ts'
op|','
name|'path'
op|','
nl|'\n'
name|'container_policy_index'
op|','
name|'source_ts'
op|','
name|'source_obj_status'
op|','
nl|'\n'
name|'source_obj_info'
op|','
name|'source_obj_iter'
op|')'
newline|'\n'
nl|'\n'
DECL|member|ensure_object_in_right_location
dedent|''
dedent|''
name|'def'
name|'ensure_object_in_right_location'
op|'('
name|'self'
op|','
name|'q_policy_index'
op|','
name|'account'
op|','
nl|'\n'
name|'container'
op|','
name|'obj'
op|','
name|'q_ts'
op|','
name|'path'
op|','
nl|'\n'
name|'container_policy_index'
op|','
name|'source_ts'
op|','
nl|'\n'
name|'source_obj_status'
op|','
name|'source_obj_info'
op|','
nl|'\n'
name|'source_obj_iter'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Validate source object will satisfy the misplaced object queue entry\n        and move to destination.\n\n        :param q_policy_index: the policy_index for the source object\n        :param account: the account name of the misplaced object\n        :param container: the container name of the misplaced object\n        :param obj: the name of the misplaced object\n        :param q_ts: the timestamp of the misplaced object\n        :param path: the full path of the misplaced object for logging\n        :param container_policy_index: the policy_index of the destination\n        :param source_ts: the timestamp of the source object\n        :param source_obj_status: the HTTP status source object request\n        :param source_obj_info: the HTTP headers of the source object request\n        :param source_obj_iter: the body iter of the source object request\n        """'
newline|'\n'
name|'if'
name|'source_obj_status'
op|'//'
number|'100'
op|'!='
number|'2'
name|'or'
name|'source_ts'
op|'<'
name|'q_ts'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'q_ts'
op|'<'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'reclaim_age'
op|':'
newline|'\n'
comment|"# it's old and there are no tombstones or anything; give up"
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'lost_source'"
op|','
string|"'%r (%s) was not available in '"
nl|'\n'
string|"'policy_index %s and has expired'"
op|','
name|'path'
op|','
nl|'\n'
name|'q_ts'
op|'.'
name|'internal'
op|','
name|'q_policy_index'
op|','
nl|'\n'
name|'level'
op|'='
name|'logging'
op|'.'
name|'CRITICAL'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
comment|'# the source object is unavailable or older than the queue'
nl|'\n'
comment|'# entry; a version that will satisfy the queue entry hopefully'
nl|'\n'
comment|'# exists somewhere in the cluster, so wait and try again'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'unavailable_source'"
op|','
string|"'%r (%s) in '"
nl|'\n'
string|"'policy_index %s responded %s (%s)'"
op|','
name|'path'
op|','
nl|'\n'
name|'q_ts'
op|'.'
name|'internal'
op|','
name|'q_policy_index'
op|','
name|'source_obj_status'
op|','
nl|'\n'
name|'source_ts'
op|'.'
name|'internal'
op|','
name|'level'
op|'='
name|'logging'
op|'.'
name|'WARNING'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
comment|'# optimistically move any source with a timestamp >= q_ts'
nl|'\n'
dedent|''
name|'ts'
op|'='
name|'max'
op|'('
name|'Timestamp'
op|'('
name|'source_ts'
op|')'
op|','
name|'q_ts'
op|')'
newline|'\n'
comment|'# move the object'
nl|'\n'
name|'put_timestamp'
op|'='
name|'slightly_later_timestamp'
op|'('
name|'ts'
op|','
name|'offset'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'copy_attempt'"
op|','
string|"'%r (%f) in policy_index %s will be '"
nl|'\n'
string|"'moved to policy_index %s (%s)'"
op|','
name|'path'
op|','
name|'source_ts'
op|','
nl|'\n'
name|'q_policy_index'
op|','
name|'container_policy_index'
op|','
name|'put_timestamp'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'source_obj_info'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|'='
name|'container_policy_index'
newline|'\n'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'put_timestamp'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'swift'
op|'.'
name|'upload_object'
op|'('
nl|'\n'
name|'FileLikeIter'
op|'('
name|'source_obj_iter'
op|')'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnexpectedResponse'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'copy_failed'"
op|','
string|"'upload %r (%f) from '"
nl|'\n'
string|"'policy_index %s to policy_index %s '"
nl|'\n'
string|"'returned %s'"
op|','
name|'path'
op|','
name|'source_ts'
op|','
name|'q_policy_index'
op|','
nl|'\n'
name|'container_policy_index'
op|','
name|'err'
op|','
name|'level'
op|'='
name|'logging'
op|'.'
name|'WARNING'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'except'
op|':'
comment|'# noqa'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'unhandled_error'"
op|','
string|"'unable to upload %r (%f) '"
nl|'\n'
string|"'from policy_index %s to policy_index %s '"
op|','
name|'path'
op|','
nl|'\n'
name|'source_ts'
op|','
name|'q_policy_index'
op|','
name|'container_policy_index'
op|','
nl|'\n'
name|'level'
op|'='
name|'logging'
op|'.'
name|'ERROR'
op|','
name|'exc_info'
op|'='
name|'True'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'copy_success'"
op|','
string|"'%r (%f) moved from policy_index %s '"
nl|'\n'
string|"'to policy_index %s (%s)'"
op|','
name|'path'
op|','
name|'source_ts'
op|','
nl|'\n'
name|'q_policy_index'
op|','
name|'container_policy_index'
op|','
name|'put_timestamp'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'throw_tombstones'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'q_ts'
op|','
nl|'\n'
name|'q_policy_index'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|ensure_tombstone_in_right_location
dedent|''
name|'def'
name|'ensure_tombstone_in_right_location'
op|'('
name|'self'
op|','
name|'q_policy_index'
op|','
name|'account'
op|','
nl|'\n'
name|'container'
op|','
name|'obj'
op|','
name|'q_ts'
op|','
name|'path'
op|','
nl|'\n'
name|'container_policy_index'
op|','
name|'source_ts'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Issue a DELETE request against the destination to match the\n        misplaced DELETE against the source.\n        """'
newline|'\n'
name|'delete_timestamp'
op|'='
name|'slightly_later_timestamp'
op|'('
name|'q_ts'
op|','
name|'offset'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'delete_attempt'"
op|','
string|"'%r (%f) in policy_index %s '"
nl|'\n'
string|"'will be deleted from policy_index %s (%s)'"
op|','
name|'path'
op|','
nl|'\n'
name|'source_ts'
op|','
name|'q_policy_index'
op|','
name|'container_policy_index'
op|','
nl|'\n'
name|'delete_timestamp'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'container_policy_index'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'delete_timestamp'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'swift'
op|'.'
name|'delete_object'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnexpectedResponse'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'delete_failed'"
op|','
string|"'delete %r (%f) from '"
nl|'\n'
string|"'policy_index %s (%s) returned %s'"
op|','
name|'path'
op|','
nl|'\n'
name|'source_ts'
op|','
name|'container_policy_index'
op|','
nl|'\n'
name|'delete_timestamp'
op|','
name|'err'
op|','
name|'level'
op|'='
name|'logging'
op|'.'
name|'WARNING'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'except'
op|':'
comment|'# noqa'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'unhandled_error'"
op|','
string|"'unable to delete %r (%f) '"
nl|'\n'
string|"'from policy_index %s (%s)'"
op|','
name|'path'
op|','
name|'source_ts'
op|','
nl|'\n'
name|'container_policy_index'
op|','
name|'delete_timestamp'
op|','
nl|'\n'
name|'level'
op|'='
name|'logging'
op|'.'
name|'ERROR'
op|','
name|'exc_info'
op|'='
name|'True'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'delete_success'"
op|','
string|"'%r (%f) deleted from '"
nl|'\n'
string|"'policy_index %s (%s)'"
op|','
name|'path'
op|','
name|'source_ts'
op|','
nl|'\n'
name|'container_policy_index'
op|','
name|'delete_timestamp'
op|','
nl|'\n'
name|'level'
op|'='
name|'logging'
op|'.'
name|'INFO'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'throw_tombstones'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'q_ts'
op|','
nl|'\n'
name|'q_policy_index'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reconcile_object
dedent|''
name|'def'
name|'reconcile_object'
op|'('
name|'self'
op|','
name|'info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Process a possibly misplaced object write request.  Determine correct\n        destination storage policy by checking with primary containers.  Check\n        source and destination, copying or deleting into destination and\n        cleaning up the source as needed.\n\n        This method wraps _reconcile_object for exception handling.\n\n        :param info: a queue entry dict\n\n        :returns: True to indicate the request is fully processed\n                  successfully, otherwise False.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'checking placement for %r (%f) '"
nl|'\n'
string|"'in policy_index %s'"
op|','
name|'info'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'info'
op|'['
string|"'q_ts'"
op|']'
op|','
name|'info'
op|'['
string|"'q_policy_index'"
op|']'
op|')'
newline|'\n'
name|'success'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|'='
name|'self'
op|'.'
name|'_reconcile_object'
op|'('
op|'**'
name|'info'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
comment|'# noqa'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
string|"'Unhandled Exception trying to '"
nl|'\n'
string|"'reconcile %r (%f) in policy_index %s'"
op|','
nl|'\n'
name|'info'
op|'['
string|"'path'"
op|']'
op|','
name|'info'
op|'['
string|"'q_ts'"
op|']'
op|','
nl|'\n'
name|'info'
op|'['
string|"'q_policy_index'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'success'
op|':'
newline|'\n'
indent|'            '
name|'metric'
op|'='
string|"'success'"
newline|'\n'
name|'msg'
op|'='
string|"'was handled successfully'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'metric'
op|'='
string|"'retry'"
newline|'\n'
name|'msg'
op|'='
string|"'must be retried'"
newline|'\n'
dedent|''
name|'msg'
op|'='
string|"'%(path)r (%(q_ts)f) in policy_index %(q_policy_index)s '"
op|'+'
name|'msg'
newline|'\n'
name|'self'
op|'.'
name|'stats_log'
op|'('
name|'metric'
op|','
name|'msg'
op|','
name|'info'
op|','
name|'level'
op|'='
name|'logging'
op|'.'
name|'INFO'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_stats'
op|'('
op|')'
newline|'\n'
name|'return'
name|'success'
newline|'\n'
nl|'\n'
DECL|member|_iter_containers
dedent|''
name|'def'
name|'_iter_containers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Generate a list of containers to process.\n        """'
newline|'\n'
comment|'# hit most recent container first instead of waiting on the updaters'
nl|'\n'
name|'current_container'
op|'='
name|'get_reconciler_container_name'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
name|'yield'
name|'current_container'
newline|'\n'
name|'container_gen'
op|'='
name|'self'
op|'.'
name|'swift'
op|'.'
name|'iter_containers'
op|'('
name|'MISPLACED_OBJECTS_ACCOUNT'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'looking for containers in %s'"
op|','
nl|'\n'
name|'MISPLACED_OBJECTS_ACCOUNT'
op|')'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'one_page'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'one_page'
op|'='
name|'list'
op|'('
name|'itertools'
op|'.'
name|'islice'
op|'('
nl|'\n'
name|'container_gen'
op|','
name|'constraints'
op|'.'
name|'CONTAINER_LISTING_LIMIT'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'UnexpectedResponse'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
string|"'Error listing containers in '"
nl|'\n'
string|"'account %s (%s)'"
op|','
nl|'\n'
name|'MISPLACED_OBJECTS_ACCOUNT'
op|','
name|'err'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'one_page'
op|':'
newline|'\n'
comment|"# don't generally expect more than one page"
nl|'\n'
indent|'                '
name|'break'
newline|'\n'
comment|'# reversed order since we expect older containers to be empty'
nl|'\n'
dedent|''
name|'for'
name|'c'
name|'in'
name|'reversed'
op|'('
name|'one_page'
op|')'
op|':'
newline|'\n'
comment|'# encoding here is defensive'
nl|'\n'
indent|'                '
name|'container'
op|'='
name|'c'
op|'['
string|"'name'"
op|']'
op|'.'
name|'encode'
op|'('
string|"'utf8'"
op|')'
newline|'\n'
name|'if'
name|'container'
op|'=='
name|'current_container'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
comment|"# we've already hit this one this pass"
newline|'\n'
dedent|''
name|'yield'
name|'container'
newline|'\n'
nl|'\n'
DECL|member|_iter_objects
dedent|''
dedent|''
dedent|''
name|'def'
name|'_iter_objects'
op|'('
name|'self'
op|','
name|'container'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Generate a list of objects to process.\n\n        :param container: the name of the container to process\n\n        If the given container is empty and older than reclaim_age this\n        processor will attempt to reap it.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'looking for objects in %s'"
op|','
name|'container'
op|')'
newline|'\n'
name|'found_obj'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'raw_obj'
name|'in'
name|'self'
op|'.'
name|'swift'
op|'.'
name|'iter_objects'
op|'('
nl|'\n'
name|'MISPLACED_OBJECTS_ACCOUNT'
op|','
name|'container'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'found_obj'
op|'='
name|'True'
newline|'\n'
name|'yield'
name|'raw_obj'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'UnexpectedResponse'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
string|"'Error listing objects in container %s (%s)'"
op|','
nl|'\n'
name|'container'
op|','
name|'err'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'float'
op|'('
name|'container'
op|')'
op|'<'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'reclaim_age'
name|'and'
name|'not'
name|'found_obj'
op|':'
newline|'\n'
comment|"# Try to delete old empty containers so the queue doesn't"
nl|'\n'
comment|"# grow without bound. It's ok if there's a conflict."
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'swift'
op|'.'
name|'delete_container'
op|'('
nl|'\n'
name|'MISPLACED_OBJECTS_ACCOUNT'
op|','
name|'container'
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'2'
op|','
number|'404'
op|','
number|'409'
op|','
number|'412'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reconcile
dedent|''
dedent|''
name|'def'
name|'reconcile'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Main entry point for processing misplaced objects.\n\n        Iterate over all queue entries and delegate to reconcile_object.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'pulling items from the queue'"
op|')'
newline|'\n'
name|'for'
name|'container'
name|'in'
name|'self'
op|'.'
name|'_iter_containers'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'raw_obj'
name|'in'
name|'self'
op|'.'
name|'_iter_objects'
op|'('
name|'container'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'obj_info'
op|'='
name|'parse_raw_obj'
op|'('
name|'raw_obj'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'stats_log'
op|'('
string|"'invalid_record'"
op|','
nl|'\n'
string|"'invalid queue record: %r'"
op|','
name|'raw_obj'
op|','
nl|'\n'
name|'level'
op|'='
name|'logging'
op|'.'
name|'ERROR'
op|','
name|'exc_info'
op|'='
name|'True'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'finished'
op|'='
name|'self'
op|'.'
name|'reconcile_object'
op|'('
name|'obj_info'
op|')'
newline|'\n'
name|'if'
name|'finished'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'pop_queue'
op|'('
name|'container'
op|','
name|'raw_obj'
op|'['
string|"'name'"
op|']'
op|','
nl|'\n'
name|'obj_info'
op|'['
string|"'q_ts'"
op|']'
op|','
nl|'\n'
name|'obj_info'
op|'['
string|"'q_record'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'log_stats'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'finished container %s'"
op|','
name|'container'
op|')'
newline|'\n'
nl|'\n'
DECL|member|run_once
dedent|''
dedent|''
name|'def'
name|'run_once'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Process every entry in the queue.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'reconcile'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
string|"'Unhandled Exception trying to reconcile'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'log_stats'
op|'('
name|'force'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|run_forever
dedent|''
name|'def'
name|'run_forever'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'run_once'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats'
op|'='
name|'defaultdict'
op|'('
name|'int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
string|"'sleeping between intervals (%ss)'"
op|','
name|'self'
op|'.'
name|'interval'
op|')'
newline|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'interval'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
