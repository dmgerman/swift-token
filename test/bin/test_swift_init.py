begin_unit
comment|'# Copyright (c) 2010 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'signal'
newline|'\n'
name|'from'
name|'shutil'
name|'import'
name|'rmtree'
newline|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'contextmanager'
newline|'\n'
name|'from'
name|'tempfile'
name|'import'
name|'mkdtemp'
newline|'\n'
name|'from'
name|'collections'
name|'import'
name|'defaultdict'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
name|'import'
name|'bin'
comment|'# for reloading...'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'bin'
name|'import'
name|'swift_init'
comment|'# for testing...'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|CONF_FILES
name|'CONF_FILES'
op|'='
op|'('
nl|'\n'
string|"'auth-server.conf'"
op|','
nl|'\n'
string|"'auth-server.pid'"
op|','
nl|'\n'
string|"'proxy-server/proxy-server.conf'"
op|','
nl|'\n'
string|"'proxy-server.conf'"
op|','
nl|'\n'
string|"'proxy.conf'"
op|','
nl|'\n'
string|"'object-server/1.conf'"
op|','
nl|'\n'
string|"'object-server/2.conf'"
op|','
nl|'\n'
string|"'object-server/3.conf'"
op|','
nl|'\n'
string|"'object-server/4.conf'"
op|','
nl|'\n'
string|"'account-server/a1.conf'"
op|','
nl|'\n'
string|"'account-server/a2.conf'"
op|','
nl|'\n'
string|"'account-server/a3.conf'"
op|','
nl|'\n'
string|"'container-server/1/container-server.conf'"
op|','
nl|'\n'
string|"'container-server/2/container-server.conf'"
op|','
nl|'\n'
string|"'container-server/3/container-server.conf'"
op|','
nl|'\n'
string|"'container-server/4/container-server.conf'"
op|','
nl|'\n'
string|"'container-server/5/container-server.conf'"
op|','
nl|'\n'
string|"'container-replicator/bogus.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|PID_FILES
name|'PID_FILES'
op|'='
op|'('
nl|'\n'
op|'('
string|"'auth-server.pid'"
op|','
number|'10'
op|')'
op|','
nl|'\n'
op|'('
string|"'proxy-server/proxy-server.pid'"
op|','
number|'21'
op|')'
op|','
nl|'\n'
op|'('
string|"'proxy-server.pid'"
op|','
number|'22'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-server/1.pid'"
op|','
number|'31'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-server/2.pid'"
op|','
number|'32'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-server/3.pid'"
op|','
number|'33'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-server/4.pid'"
op|','
number|'34'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-auditor/2.pid'"
op|','
number|'42'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-auditor/1.pid'"
op|','
number|'41'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-auditor/3.pid'"
op|','
number|'43'
op|')'
op|','
nl|'\n'
op|'('
string|"'container-replicator/1/container-server.pid'"
op|','
number|'51'
op|')'
op|','
nl|'\n'
op|'('
string|"'container-replicator/2/container-server.pid'"
op|','
number|'52'
op|')'
op|','
nl|'\n'
op|'('
string|"'container-replicator/3/container-server.pid'"
op|','
number|'53'
op|')'
op|','
nl|'\n'
op|'('
string|"'container-replicator/4/container-server.pid'"
op|','
number|'54'
op|')'
op|','
nl|'\n'
op|'('
string|"'container-replicator/5/container-server.pid'"
op|','
number|'55'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
comment|'# maps all servers to a list of running pids as defined in PID_FILES'
nl|'\n'
DECL|variable|PID_MAP
name|'PID_MAP'
op|'='
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'swift_init'
op|'.'
name|'ALL_SERVERS'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'pid_file'
op|','
name|'pid'
name|'in'
name|'PID_FILES'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'pid_file'
op|'.'
name|'startswith'
op|'('
name|'server'
op|')'
name|'and'
name|'pid_file'
op|'.'
name|'endswith'
op|'('
string|"'.pid'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'PID_MAP'
op|'['
name|'server'
op|']'
op|'.'
name|'append'
op|'('
name|'pid'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'PID_MAP'
op|'['
name|'server'
op|']'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
DECL|variable|ALL_PIDS
dedent|''
name|'ALL_PIDS'
op|'='
op|'['
name|'p'
name|'for'
name|'server'
op|','
name|'pids'
name|'in'
name|'PID_MAP'
op|'.'
name|'items'
op|'('
op|')'
name|'for'
name|'p'
name|'in'
name|'pids'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|DUMMY_SIG
name|'DUMMY_SIG'
op|'='
number|'1'
newline|'\n'
nl|'\n'
nl|'\n'
op|'@'
name|'contextmanager'
newline|'\n'
DECL|function|temptree
name|'def'
name|'temptree'
op|'('
name|'files'
op|','
name|'contents'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
comment|'# generate enough contents to fill the files'
nl|'\n'
indent|'    '
name|'c'
op|'='
name|'len'
op|'('
name|'files'
op|')'
newline|'\n'
name|'contents'
op|'='
op|'('
name|'list'
op|'('
name|'contents'
op|')'
op|'+'
op|'['
string|"''"
op|']'
op|'*'
name|'c'
op|')'
op|'['
op|':'
name|'c'
op|']'
newline|'\n'
name|'tempdir'
op|'='
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'for'
name|'path'
op|','
name|'content'
name|'in'
name|'zip'
op|'('
name|'files'
op|','
name|'contents'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isabs'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
string|"'.'"
op|'+'
name|'path'
newline|'\n'
dedent|''
name|'new_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
name|'path'
op|')'
newline|'\n'
name|'subdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'new_path'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'subdir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'subdir'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'open'
op|'('
name|'new_path'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
name|'str'
op|'('
name|'content'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'tempdir'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'        '
name|'rmtree'
op|'('
name|'tempdir'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MockOs
dedent|''
dedent|''
name|'class'
name|'MockOs'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pids'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'pid_sigs'
op|'='
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
name|'for'
name|'pid'
name|'in'
name|'pids'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'pid_sigs'
op|'['
name|'pid'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'closed_fds'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'child_pid'
op|'='
number|'9999'
comment|'# fork defaults to test parent process path'
newline|'\n'
name|'self'
op|'.'
name|'execlp_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|kill
dedent|''
name|'def'
name|'kill'
op|'('
name|'self'
op|','
name|'pid'
op|','
name|'sig'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'pid'
name|'not'
name|'in'
name|'self'
op|'.'
name|'pid_sigs'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'OSError'
op|'('
number|'3'
op|','
string|"'No such process'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'pid_sigs'
op|'['
name|'pid'
op|']'
op|'.'
name|'append'
op|'('
name|'sig'
op|')'
newline|'\n'
nl|'\n'
dedent|''
string|'"""\n    def pass_func(self, *args, **kwargs):\n        pass\n\n    chdir = setsid = umask = pass_func\n\n    def dup2(self, source, target):\n        self.closed_fds.append(target)\n\n    def fork(self):\n        return self.child_pid\n\n    def execlp(self, *args):\n        self.execlp_called = True\n\n    """'
newline|'\n'
nl|'\n'
DECL|member|__getattr__
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
comment|'# I only over-ride portions of the os module'
nl|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'object'
op|'.'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'getattr'
op|'('
name|'os'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSwiftInitModule
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestSwiftInitModule'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_servers
indent|'    '
name|'def'
name|'test_servers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'main_plus_rest'
op|'='
name|'set'
op|'('
name|'swift_init'
op|'.'
name|'MAIN_SERVERS'
op|'+'
name|'swift_init'
op|'.'
name|'REST_SERVERS'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'set'
op|'('
name|'swift_init'
op|'.'
name|'ALL_SERVERS'
op|')'
op|','
name|'main_plus_rest'
op|')'
newline|'\n'
comment|"# make sure there's no server listed in both"
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'main_plus_rest'
op|')'
op|','
name|'len'
op|'('
name|'swift_init'
op|'.'
name|'MAIN_SERVERS'
op|')'
op|'+'
nl|'\n'
name|'len'
op|'('
name|'swift_init'
op|'.'
name|'REST_SERVERS'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_search_tree
dedent|''
name|'def'
name|'test_search_tree'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'temptree'
op|'('
name|'CONF_FILES'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'auth_conf'
op|'='
name|'swift_init'
op|'.'
name|'search_tree'
op|'('
name|'t'
op|','
string|"'auth-server*'"
op|','
string|"'.conf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'auth_conf'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'auth_conf'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'auth-server.conf'"
op|')'
op|')'
newline|'\n'
name|'proxy_conf'
op|'='
name|'swift_init'
op|'.'
name|'search_tree'
op|'('
name|'t'
op|','
string|"'proxy*'"
op|','
string|"'conf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'proxy_conf'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proxy_conf'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'proxy-server.conf'"
op|')'
op|')'
newline|'\n'
name|'object_confs'
op|'='
name|'swift_init'
op|'.'
name|'search_tree'
op|'('
name|'t'
op|','
string|"'object-server*'"
op|','
string|"'.conf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'object_confs'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'conf'
name|'in'
name|'enumerate'
op|'('
name|'object_confs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'object-server/%d.conf'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conf'
op|','
name|'path'
op|')'
newline|'\n'
dedent|''
name|'account_confs'
op|'='
name|'swift_init'
op|'.'
name|'search_tree'
op|'('
name|'t'
op|','
string|"'account-server*'"
op|','
nl|'\n'
string|"'.conf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'account_confs'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'conf'
name|'in'
name|'enumerate'
op|'('
name|'account_confs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'account-server/a%d.conf'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conf'
op|','
name|'path'
op|')'
newline|'\n'
dedent|''
name|'container_confs'
op|'='
name|'swift_init'
op|'.'
name|'search_tree'
op|'('
name|'t'
op|','
string|"'container-server*'"
op|','
nl|'\n'
string|"'.conf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'container_confs'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'conf'
name|'in'
name|'enumerate'
op|'('
name|'container_confs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
nl|'\n'
string|"'container-server/%s/container-server.conf'"
op|'%'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conf'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_write_file
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_write_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'temptree'
op|'('
op|'['
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'file_name'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'test'"
op|')'
newline|'\n'
name|'swift_init'
op|'.'
name|'write_file'
op|'('
name|'file_name'
op|','
string|"'test'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'file_name'
op|','
string|"'r'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'contents'
op|'='
name|'f'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'contents'
op|','
string|"'test'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remove_file
dedent|''
dedent|''
name|'def'
name|'test_remove_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'temptree'
op|'('
op|'['
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'file_name'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'blah.pid'"
op|')'
newline|'\n'
comment|'# assert no raise'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'file_name'
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift_init'
op|'.'
name|'remove_file'
op|'('
name|'file_name'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'file_name'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
string|"'1'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'file_name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift_init'
op|'.'
name|'remove_file'
op|'('
name|'file_name'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'file_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_command_wrapper
dedent|''
dedent|''
name|'def'
name|'test_command_wrapper'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'@'
name|'swift_init'
op|'.'
name|'command'
newline|'\n'
DECL|function|myfunc
name|'def'
name|'myfunc'
op|'('
name|'arg1'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""test doc\n            """'
newline|'\n'
name|'return'
name|'arg1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|','
string|"'test doc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'('
number|'1'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'('
number|'0'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'('
name|'True'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'('
name|'False'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'hasattr'
op|'('
name|'myfunc'
op|','
string|"'publicly_accessible'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'myfunc'
op|'.'
name|'publicly_accessible'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_exc
dedent|''
name|'def'
name|'test_exc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'issubclass'
op|'('
name|'swift_init'
op|'.'
name|'UnknownCommand'
op|','
name|'Exception'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSwiftServerClass
dedent|''
dedent|''
name|'class'
name|'TestSwiftServerClass'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|tearDown
indent|'    '
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reload'
op|'('
name|'bin'
op|')'
newline|'\n'
nl|'\n'
DECL|member|join_swift_dir
dedent|''
name|'def'
name|'join_swift_dir'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'swift_init'
op|'.'
name|'SWIFT_DIR'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|join_run_dir
dedent|''
name|'def'
name|'join_run_dir'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_init
dedent|''
name|'def'
name|'test_server_init'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'server'
op|','
string|"'proxy-server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'type'
op|','
string|"'proxy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'cmd'
op|','
string|"'swift-proxy-server'"
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'server'
op|','
string|"'object-replicator'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'type'
op|','
string|"'object'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'cmd'
op|','
string|"'swift-object-replicator'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_pid_file_name
dedent|''
name|'def'
name|'test_get_pid_file_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'proxy-server.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'server'
op|'.'
name|'get_pid_file_name'
op|'('
name|'ini_file'
op|')'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/1.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-replicator/1.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'server'
op|'.'
name|'get_pid_file_name'
op|'('
name|'ini_file'
op|')'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'container-auditor'"
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
nl|'\n'
string|"'container-server/1/container-auditor.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
nl|'\n'
string|"'container-auditor/1/container-auditor.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'server'
op|'.'
name|'get_pid_file_name'
op|'('
name|'ini_file'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_ini_file_name
dedent|''
name|'def'
name|'test_get_ini_file_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'proxy-server.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ini_file'
op|','
name|'server'
op|'.'
name|'get_ini_file_name'
op|'('
name|'pid_file'
op|')'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/1.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-replicator/1.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ini_file'
op|','
name|'server'
op|'.'
name|'get_ini_file_name'
op|'('
name|'pid_file'
op|')'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'container-auditor'"
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
nl|'\n'
string|"'container-server/1/container-auditor.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
nl|'\n'
string|"'container-auditor/1/container-auditor.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ini_file'
op|','
name|'server'
op|'.'
name|'get_ini_file_name'
op|'('
name|'pid_file'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ini_files
dedent|''
name|'def'
name|'test_ini_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'temptree'
op|'('
name|'CONF_FILES'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'t'
newline|'\n'
name|'servers'
op|'='
string|"'auth object account-auditor container-replicator'"
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
name|'server'
op|')'
newline|'\n'
name|'ini_files'
op|'='
name|'server'
op|'.'
name|'ini_files'
op|'('
op|')'
newline|'\n'
name|'conf_files'
op|'='
op|'['
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
name|'x'
op|')'
name|'for'
name|'x'
name|'in'
name|'CONF_FILES'
name|'if'
nl|'\n'
name|'x'
op|'.'
name|'startswith'
op|'('
string|"'%s-server'"
op|'%'
name|'server'
op|'.'
name|'type'
op|')'
name|'and'
nl|'\n'
name|'x'
op|'.'
name|'endswith'
op|'('
string|"'.conf'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ini_files'
op|','
name|'conf_files'
op|')'
newline|'\n'
nl|'\n'
comment|'# test config number kwarg returns the correct single config'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'ini_files'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'ini_files'
op|'='
name|'server'
op|'.'
name|'ini_files'
op|'('
name|'number'
op|'='
name|'i'
op|'+'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'ini_files'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ini_files'
op|'['
number|'0'
op|']'
op|','
name|'conf_files'
op|'['
name|'i'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# and returns empty for missing config number'
nl|'\n'
dedent|''
name|'ini_files'
op|'='
name|'server'
op|'.'
name|'ini_files'
op|'('
name|'number'
op|'='
name|'i'
op|'+'
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ini_files'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_pid_files
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_pid_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'files'
op|','
name|'contents'
op|'='
name|'zip'
op|'('
op|'*'
name|'PID_FILES'
op|')'
newline|'\n'
comment|'# throw some garbage files in the mix too'
nl|'\n'
name|'files'
op|'+='
name|'CONF_FILES'
newline|'\n'
name|'files'
op|'+='
name|'tuple'
op|'('
op|'['
name|'f'
op|'.'
name|'replace'
op|'('
string|"'.conf'"
op|','
string|"'.bogus'"
op|')'
name|'for'
name|'f'
name|'in'
name|'CONF_FILES'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|assert_pid_files
name|'def'
name|'assert_pid_files'
op|'('
name|'server'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
name|'server'
op|')'
newline|'\n'
name|'pid_files'
op|'='
name|'server'
op|'.'
name|'pid_files'
op|'('
op|')'
newline|'\n'
comment|'# should only find pids files'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pid_files'
op|')'
op|','
name|'len'
op|'('
name|'PID_MAP'
op|'['
name|'server'
op|'.'
name|'server'
op|']'
op|')'
op|')'
newline|'\n'
name|'real_files'
op|'='
name|'sorted'
op|'('
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'files'
name|'if'
name|'x'
op|'.'
name|'startswith'
op|'('
name|'server'
op|'.'
name|'server'
op|')'
name|'and'
nl|'\n'
name|'x'
op|'.'
name|'endswith'
op|'('
string|"'.pid'"
op|')'
op|']'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'pid_file'
name|'in'
name|'enumerate'
op|'('
name|'pid_files'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'self'
op|'.'
name|'join_run_dir'
op|'('
name|'real_files'
op|'['
name|'i'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# test config number kwarg returns the correct single pid file'
nl|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'len'
op|'('
name|'pid_files'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'ini_files'
op|'='
name|'server'
op|'.'
name|'ini_files'
op|'('
name|'number'
op|'='
name|'i'
op|'+'
number|'1'
op|')'
newline|'\n'
name|'pid_files'
op|'='
name|'server'
op|'.'
name|'pid_files'
op|'('
name|'number'
op|'='
name|'i'
op|'+'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pid_files'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'pid_files'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'self'
op|'.'
name|'join_run_dir'
op|'('
name|'real_files'
op|'['
name|'i'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'contents'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'swift_init'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'t'
newline|'\n'
name|'servers'
op|'='
string|"'auth proxy object object-auditor container-replicator'"
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'assert_pid_files'
op|'('
name|'server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iter_pid_files
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_iter_pid_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'temptree'
op|'('
op|'*'
name|'zip'
op|'('
op|'*'
name|'PID_FILES'
op|')'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'servers'
op|'='
string|"'auth proxy object object-auditor container-replicator'"
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
comment|'# build up a mapping of pid_files to pids for these server types'
nl|'\n'
name|'pid_file_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'name'
op|','
name|'pid'
name|'in'
name|'PID_FILES'
op|':'
newline|'\n'
indent|'                '
name|'if'
op|'['
name|'server'
name|'for'
name|'server'
name|'in'
name|'servers'
name|'if'
name|'server'
name|'in'
name|'name'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'pid_file_map'
op|'['
name|'self'
op|'.'
name|'join_run_dir'
op|'('
name|'name'
op|')'
op|']'
op|'='
name|'pid'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'i'
op|','
name|'server'
name|'in'
name|'enumerate'
op|'('
name|'servers'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
name|'server'
op|')'
newline|'\n'
name|'for'
name|'pid_file'
op|','
name|'pid'
name|'in'
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid'
op|','
name|'pid_file_map'
op|'['
name|'pid_file'
op|']'
op|')'
newline|'\n'
name|'del'
name|'pid_file_map'
op|'['
name|'pid_file'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'pid_file_map'
op|'=='
op|'{'
op|'}'
op|')'
comment|'# all pid_files used up'
newline|'\n'
nl|'\n'
DECL|member|test_signal_pids
dedent|''
dedent|''
name|'def'
name|'test_signal_pids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# stale pid file cleanup is tested in get_running_pids'
nl|'\n'
DECL|function|assert_server_signaled_pids
indent|'        '
name|'def'
name|'assert_server_signaled_pids'
op|'('
name|'server'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
name|'server'
op|')'
newline|'\n'
name|'signaled_pids'
op|'='
name|'server'
op|'.'
name|'signal_pids'
op|'('
name|'DUMMY_SIG'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'sorted'
op|'('
name|'signaled_pids'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|','
name|'PID_MAP'
op|'['
name|'server'
op|'.'
name|'server'
op|']'
op|')'
newline|'\n'
name|'for'
name|'pid'
name|'in'
name|'signaled_pids'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift_init'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
name|'pid'
op|']'
op|','
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'temptree'
op|'('
op|'*'
name|'zip'
op|'('
op|'*'
name|'PID_FILES'
op|')'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'ALL_PIDS'
op|')'
newline|'\n'
name|'servers'
op|'='
string|"'auth proxy object object-auditor container-replicator'"
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'assert_server_signaled_pids'
op|'('
name|'server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_running_pids
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_running_pids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|assert_running_pids
indent|'        '
name|'def'
name|'assert_running_pids'
op|'('
name|'server'
op|')'
op|':'
newline|'\n'
comment|'# all pids running to start'
nl|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'ALL_PIDS'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
name|'server'
op|')'
newline|'\n'
name|'running_pids'
op|'='
name|'server'
op|'.'
name|'get_running_pids'
op|'('
op|')'
newline|'\n'
comment|'# make sure we only get pids for this server'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'sorted'
op|'('
name|'running_pids'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|','
name|'PID_MAP'
op|'['
name|'server'
op|'.'
name|'server'
op|']'
op|')'
newline|'\n'
name|'for'
name|'pid'
name|'in'
name|'running_pids'
op|':'
newline|'\n'
comment|'# verify the correct signal on the mock'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift_init'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
name|'pid'
op|']'
op|','
nl|'\n'
op|'['
name|'signal'
op|'.'
name|'SIG_DFL'
op|']'
op|')'
newline|'\n'
dedent|''
name|'current_pids'
op|'='
name|'list'
op|'('
name|'PID_MAP'
op|'['
name|'server'
op|'.'
name|'server'
op|']'
op|')'
newline|'\n'
comment|'# each pass will assert the pid from the previous run was removed'
nl|'\n'
name|'last_pid'
op|'='
op|'-'
number|'1'
comment|'# this pid is skipped on the first pass'
newline|'\n'
name|'for'
name|'pid'
name|'in'
name|'list'
op|'('
name|'current_pids'
op|')'
op|':'
newline|'\n'
comment|'# setup current running pids'
nl|'\n'
indent|'                '
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'current_pids'
op|')'
newline|'\n'
name|'if'
name|'not'
op|'('
name|'last_pid'
op|'=='
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
comment|'# any valid pid should show up in iter_pid_files'
nl|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'last_pid'
name|'in'
op|'['
nl|'\n'
name|'p'
name|'for'
name|'f'
op|','
name|'p'
name|'in'
name|'list'
op|'('
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
op|')'
op|')'
op|']'
op|')'
newline|'\n'
dedent|''
name|'running_pids'
op|'='
name|'server'
op|'.'
name|'get_running_pids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'pid'
name|'in'
name|'running_pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'last_pid'
name|'in'
name|'running_pids'
op|')'
newline|'\n'
comment|'# assert stale pid files were removed!'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'running_pids'
op|')'
op|','
name|'len'
op|'('
name|'server'
op|'.'
name|'pid_files'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'if'
name|'last_pid'
name|'in'
name|'ALL_PIDS'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'last_pid'
name|'in'
op|'['
nl|'\n'
name|'p'
name|'for'
name|'f'
op|','
name|'p'
name|'in'
name|'list'
op|'('
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
op|')'
op|')'
op|']'
op|')'
newline|'\n'
comment|'# get ready for next iter, simulate pid died (i.e. remove # pid)'
nl|'\n'
dedent|''
name|'last_pid'
op|'='
name|'pid'
newline|'\n'
name|'current_pids'
op|'.'
name|'remove'
op|'('
name|'pid'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'current_pids'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'current_pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'get_running_pids'
op|'('
op|')'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'temptree'
op|'('
op|'*'
name|'zip'
op|'('
op|'*'
name|'PID_FILES'
op|')'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'servers'
op|'='
string|"'auth proxy object object-auditor container-replicator'"
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'assert_running_pids'
op|'('
name|'server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_kill_running_pids
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_kill_running_pids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|assert_kill_running_pids
indent|'        '
name|'def'
name|'assert_kill_running_pids'
op|'('
name|'server'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
name|'server'
op|')'
newline|'\n'
comment|'# all pids running'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'ALL_PIDS'
op|')'
newline|'\n'
nl|'\n'
name|'pid_files'
op|'='
name|'server'
op|'.'
name|'pid_files'
op|'('
op|')'
newline|'\n'
name|'killed_pids'
op|'='
name|'server'
op|'.'
name|'kill_running_pids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'killed_pids'
op|')'
op|','
name|'len'
op|'('
name|'pid_files'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# reinit mock os'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'ALL_PIDS'
op|')'
newline|'\n'
comment|'# make sure graceful sends sighup on servers that support it'
nl|'\n'
name|'huped_pids'
op|'='
name|'server'
op|'.'
name|'kill_running_pids'
op|'('
name|'graceful'
op|'='
name|'True'
op|')'
newline|'\n'
name|'if'
name|'server'
op|'.'
name|'server'
name|'in'
name|'swift_init'
op|'.'
name|'GRACEFUL_SHUTDOWN_SERVERS'
op|':'
newline|'\n'
indent|'                '
name|'captured_sig'
op|'='
name|'signal'
op|'.'
name|'SIGHUP'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'captured_sig'
op|'='
name|'signal'
op|'.'
name|'SIGTERM'
newline|'\n'
dedent|''
name|'for'
name|'pid'
name|'in'
name|'huped_pids'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift_init'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
name|'pid'
op|']'
op|','
op|'['
name|'captured_sig'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'temptree'
op|'('
op|'*'
name|'zip'
op|'('
op|'*'
name|'PID_FILES'
op|')'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'servers'
op|'='
string|"'auth proxy object object-auditor container-replicator'"
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'assert_kill_running_pids'
op|'('
name|'server'
op|')'
newline|'\n'
nl|'\n'
comment|'#TODO: more tests'
nl|'\n'
DECL|member|test_status
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_spawn
dedent|''
name|'def'
name|'test_spawn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_wait
dedent|''
name|'def'
name|'test_wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_interact
dedent|''
name|'def'
name|'test_interact'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_launch
dedent|''
name|'def'
name|'test_launch'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_stop
dedent|''
name|'def'
name|'test_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'#TODO: test SwiftInit class'
nl|'\n'
DECL|class|TestSwiftInitClass
dedent|''
dedent|''
name|'class'
name|'TestSwiftInitClass'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_placeholder
indent|'    '
name|'def'
name|'test_placeholder'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'#TODO: test main'
nl|'\n'
DECL|class|TestMain
dedent|''
dedent|''
name|'class'
name|'TestMain'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_placeholder
indent|'    '
name|'def'
name|'test_placeholder'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
