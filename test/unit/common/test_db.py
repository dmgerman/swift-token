begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
string|'"""Tests for swift.common.db"""'
newline|'\n'
nl|'\n'
name|'from'
name|'__future__'
name|'import'
name|'with_statement'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'shutil'
name|'import'
name|'rmtree'
op|','
name|'copy'
newline|'\n'
name|'from'
name|'uuid'
name|'import'
name|'uuid4'
newline|'\n'
nl|'\n'
name|'import'
name|'simplejson'
newline|'\n'
name|'import'
name|'sqlite3'
newline|'\n'
name|'from'
name|'mock'
name|'import'
name|'patch'
newline|'\n'
nl|'\n'
name|'import'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'db'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'db'
name|'import'
name|'chexor'
op|','
name|'dict_factory'
op|','
name|'get_db_connection'
op|','
name|'DatabaseBroker'
op|','
name|'DatabaseConnectionError'
op|','
name|'DatabaseAlreadyExists'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'normalize_timestamp'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'LockTimeout'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDatabaseConnectionError
name|'class'
name|'TestDatabaseConnectionError'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_str
indent|'    '
name|'def'
name|'test_str'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'err'
op|'='
name|'DatabaseConnectionError'
op|'('
string|"':memory:'"
op|','
string|"'No valid database connection'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"':memory:'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'No valid database connection'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
name|'err'
op|'='
name|'DatabaseConnectionError'
op|'('
string|"':memory:'"
op|','
nl|'\n'
string|"'No valid database connection'"
op|','
nl|'\n'
name|'timeout'
op|'='
number|'1357'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"':memory:'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'No valid database connection'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'1357'"
name|'in'
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDictFactory
dedent|''
dedent|''
name|'class'
name|'TestDictFactory'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_normal_case
indent|'    '
name|'def'
name|'test_normal_case'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'sqlite3'
op|'.'
name|'connect'
op|'('
string|"':memory:'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'CREATE TABLE test (one TEXT, two INTEGER)'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|'\'INSERT INTO test (one, two) VALUES ("abc", 123)\''
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|'\'INSERT INTO test (one, two) VALUES ("def", 456)\''
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
name|'curs'
op|'='
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'SELECT one, two FROM test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dict_factory'
op|'('
name|'curs'
op|','
name|'curs'
op|'.'
name|'next'
op|'('
op|')'
op|')'
op|','
nl|'\n'
op|'{'
string|"'one'"
op|':'
string|"'abc'"
op|','
string|"'two'"
op|':'
number|'123'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dict_factory'
op|'('
name|'curs'
op|','
name|'curs'
op|'.'
name|'next'
op|'('
op|')'
op|')'
op|','
nl|'\n'
op|'{'
string|"'one'"
op|':'
string|"'def'"
op|','
string|"'two'"
op|':'
number|'456'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestChexor
dedent|''
dedent|''
name|'class'
name|'TestChexor'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_normal_case
indent|'    '
name|'def'
name|'test_normal_case'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'chexor'
op|'('
string|"'d41d8cd98f00b204e9800998ecf8427e'"
op|','
nl|'\n'
string|"'new name'"
op|','
name|'normalize_timestamp'
op|'('
number|'1'
op|')'
op|')'
op|','
nl|'\n'
string|"'4f2ea31ac14d4273fe32ba08062b21de'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_old_hash
dedent|''
name|'def'
name|'test_invalid_old_hash'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'chexor'
op|','
string|"'oldhash'"
op|','
string|"'name'"
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_name
dedent|''
name|'def'
name|'test_no_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'Exception'
op|','
name|'chexor'
op|','
nl|'\n'
string|"'d41d8cd98f00b204e9800998ecf8427e'"
op|','
name|'None'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestGetDBConnection
dedent|''
dedent|''
name|'class'
name|'TestGetDBConnection'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_normal_case
indent|'    '
name|'def'
name|'test_normal_case'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'get_db_connection'
op|'('
string|"':memory:'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'hasattr'
op|'('
name|'conn'
op|','
string|"'execute'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_path
dedent|''
name|'def'
name|'test_invalid_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'DatabaseConnectionError'
op|','
name|'get_db_connection'
op|','
nl|'\n'
string|"'invalid database path / name'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDatabaseBroker
dedent|''
dedent|''
name|'class'
name|'TestDatabaseBroker'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'testdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|','
string|"'db'"
op|')'
newline|'\n'
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
name|'ignore_errors'
op|'='
number|'1'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'self'
op|'.'
name|'testdir'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
name|'ignore_errors'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_DB_PREALLOCATION_setting
dedent|''
name|'def'
name|'test_DB_PREALLOCATION_setting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'u'
op|'='
name|'uuid4'
op|'('
op|')'
op|'.'
name|'hex'
newline|'\n'
name|'b'
op|'='
name|'DatabaseBroker'
op|'('
name|'u'
op|')'
newline|'\n'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'db'
op|'.'
name|'DB_PREALLOCATION'
op|'='
name|'False'
newline|'\n'
name|'b'
op|'.'
name|'_preallocate'
op|'('
op|')'
newline|'\n'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'db'
op|'.'
name|'DB_PREALLOCATION'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'OSError'
op|','
name|'b'
op|'.'
name|'_preallocate'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_memory_db_init
dedent|''
name|'def'
name|'test_memory_db_init'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
string|"':memory:'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'broker'
op|'.'
name|'db_file'
op|','
string|"':memory:'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
name|'broker'
op|'.'
name|'initialize'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
string|"'0'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disk_db_init
dedent|''
name|'def'
name|'test_disk_db_init'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'1.db'"
op|')'
newline|'\n'
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
name|'db_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'broker'
op|'.'
name|'db_file'
op|','
name|'db_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'broker'
op|'.'
name|'conn'
name|'is'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disk_preallocate
dedent|''
name|'def'
name|'test_disk_preallocate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_size'
op|'='
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fallocate_stub
name|'def'
name|'fallocate_stub'
op|'('
name|'fd'
op|','
name|'size'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'test_size'
op|'['
number|'0'
op|']'
op|'='
name|'size'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'patch'
op|'('
string|"'swift.common.db.fallocate'"
op|','
name|'fallocate_stub'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'db_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'pre.db'"
op|')'
newline|'\n'
comment|'# Write 1 byte and hope that the fs will allocate less than 1 MB.'
nl|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'db_file'
op|','
string|'"w"'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'@'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'b'
op|'='
name|'DatabaseBroker'
op|'('
name|'db_file'
op|')'
newline|'\n'
name|'b'
op|'.'
name|'_preallocate'
op|'('
op|')'
newline|'\n'
comment|'# We only wrote 1 byte, so we should end with the 1st step or 1 MB.'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'test_size'
op|'['
number|'0'
op|']'
op|','
number|'1024'
op|'*'
number|'1024'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_initialize
dedent|''
dedent|''
name|'def'
name|'test_initialize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
nl|'\n'
name|'DatabaseBroker'
op|'('
string|"':memory:'"
op|')'
op|'.'
name|'initialize'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
string|"'1'"
op|')'
op|')'
newline|'\n'
name|'stub_dict'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|stub
name|'def'
name|'stub'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
name|'in'
name|'stub_dict'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'stub_dict'
op|'['
name|'key'
op|']'
newline|'\n'
dedent|''
name|'stub_dict'
op|'['
string|"'args'"
op|']'
op|'='
name|'args'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'kwargs'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'stub_dict'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
string|"':memory:'"
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'_initialize'
op|'='
name|'stub'
newline|'\n'
name|'broker'
op|'.'
name|'initialize'
op|'('
name|'normalize_timestamp'
op|'('
string|"'1'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'hasattr'
op|'('
name|'stub_dict'
op|'['
string|"'args'"
op|']'
op|'['
number|'0'
op|']'
op|','
string|"'execute'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'stub_dict'
op|'['
string|"'args'"
op|']'
op|'['
number|'1'
op|']'
op|','
string|"'0000000001.00000'"
op|')'
newline|'\n'
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'SELECT * FROM outgoing_sync'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'SELECT * FROM incoming_sync'"
op|')'
newline|'\n'
dedent|''
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'1.db'"
op|')'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'_initialize'
op|'='
name|'stub'
newline|'\n'
name|'broker'
op|'.'
name|'initialize'
op|'('
name|'normalize_timestamp'
op|'('
string|"'1'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'hasattr'
op|'('
name|'stub_dict'
op|'['
string|"'args'"
op|']'
op|'['
number|'0'
op|']'
op|','
string|"'execute'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'stub_dict'
op|'['
string|"'args'"
op|']'
op|'['
number|'1'
op|']'
op|','
string|"'0000000001.00000'"
op|')'
newline|'\n'
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'SELECT * FROM outgoing_sync'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'SELECT * FROM incoming_sync'"
op|')'
newline|'\n'
dedent|''
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'1.db'"
op|')'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'_initialize'
op|'='
name|'stub'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'DatabaseAlreadyExists'
op|','
nl|'\n'
name|'broker'
op|'.'
name|'initialize'
op|','
name|'normalize_timestamp'
op|'('
string|"'1'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_db
dedent|''
name|'def'
name|'test_delete_db'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|init_stub
indent|'        '
name|'def'
name|'init_stub'
op|'('
name|'conn'
op|','
name|'put_timestamp'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'CREATE TABLE test (one TEXT)'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'CREATE TABLE test_stat (id TEXT)'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'INSERT INTO test_stat (id) VALUES (?)'"
op|','
nl|'\n'
op|'('
name|'str'
op|'('
name|'uuid4'
op|')'
op|','
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|'\'INSERT INTO test (one) VALUES ("1")\''
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'stub_called'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|delete_stub
name|'def'
name|'delete_stub'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'stub_called'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
string|"':memory:'"
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'db_type'
op|'='
string|"'test'"
newline|'\n'
name|'broker'
op|'.'
name|'_initialize'
op|'='
name|'init_stub'
newline|'\n'
comment|'# Initializes a good broker for us'
nl|'\n'
name|'broker'
op|'.'
name|'initialize'
op|'('
name|'normalize_timestamp'
op|'('
string|"'1'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'broker'
op|'.'
name|'conn'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'_delete_db'
op|'='
name|'delete_stub'
newline|'\n'
name|'stub_called'
op|'['
number|'0'
op|']'
op|'='
name|'False'
newline|'\n'
name|'broker'
op|'.'
name|'delete_db'
op|'('
string|"'2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'stub_called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'1.db'"
op|')'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'db_type'
op|'='
string|"'test'"
newline|'\n'
name|'broker'
op|'.'
name|'_initialize'
op|'='
name|'init_stub'
newline|'\n'
name|'broker'
op|'.'
name|'initialize'
op|'('
name|'normalize_timestamp'
op|'('
string|"'1'"
op|')'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'_delete_db'
op|'='
name|'delete_stub'
newline|'\n'
name|'stub_called'
op|'['
number|'0'
op|']'
op|'='
name|'False'
newline|'\n'
name|'broker'
op|'.'
name|'delete_db'
op|'('
string|"'2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'stub_called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
comment|'# ensure that metadata was cleared'
nl|'\n'
name|'m2'
op|'='
name|'broker'
op|'.'
name|'metadata'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'any'
op|'('
name|'v'
op|'['
number|'0'
op|']'
name|'for'
name|'v'
name|'in'
name|'m2'
op|'.'
name|'itervalues'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'all'
op|'('
name|'v'
op|'['
number|'1'
op|']'
op|'=='
name|'normalize_timestamp'
op|'('
string|"'2'"
op|')'
nl|'\n'
name|'for'
name|'v'
name|'in'
name|'m2'
op|'.'
name|'itervalues'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get
dedent|''
name|'def'
name|'test_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
string|"':memory:'"
op|')'
newline|'\n'
name|'got_exc'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'                '
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'SELECT 1'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'got_exc'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'1.db'"
op|')'
op|')'
newline|'\n'
name|'got_exc'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'                '
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'SELECT 1'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'got_exc'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'got_exc'
op|')'
newline|'\n'
nl|'\n'
DECL|function|stub
name|'def'
name|'stub'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'broker'
op|'.'
name|'_initialize'
op|'='
name|'stub'
newline|'\n'
name|'broker'
op|'.'
name|'initialize'
op|'('
name|'normalize_timestamp'
op|'('
string|"'1'"
op|')'
op|')'
newline|'\n'
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'CREATE TABLE test (one TEXT)'"
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'                '
name|'conn'
op|'.'
name|'execute'
op|'('
string|'\'INSERT INTO test (one) VALUES ("1")\''
op|')'
newline|'\n'
name|'raise'
name|'Exception'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'1.db'"
op|')'
op|')'
newline|'\n'
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
op|'['
name|'r'
op|'['
number|'0'
op|']'
name|'for'
name|'r'
name|'in'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'SELECT * FROM test'"
op|')'
op|']'
op|','
op|'['
op|']'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'execute'
op|'('
string|'\'INSERT INTO test (one) VALUES ("1")\''
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'1.db'"
op|')'
op|')'
newline|'\n'
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
op|'['
name|'r'
op|'['
number|'0'
op|']'
name|'for'
name|'r'
name|'in'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'SELECT * FROM test'"
op|')'
op|']'
op|','
op|'['
string|"'1'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'patch'
op|'('
string|"'swift.common.db.renamer'"
op|','
name|'lambda'
name|'a'
op|','
name|'b'
op|':'
name|'b'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'qpath'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'self'
op|'.'
name|'testdir'
op|')'
op|')'
op|')'
op|')'
newline|'\n'
name|'if'
name|'qpath'
op|':'
newline|'\n'
indent|'                '
name|'qpath'
op|'+='
string|"'/quarantined/tests/db'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'qpath'
op|'='
string|"'quarantined/tests/db'"
newline|'\n'
comment|'# Test malformed database'
nl|'\n'
dedent|''
name|'copy'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|','
nl|'\n'
string|"'malformed_example.db'"
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'1.db'"
op|')'
op|')'
newline|'\n'
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'1.db'"
op|')'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'db_type'
op|'='
string|"'test'"
newline|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'SELECT * FROM test'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'str'
op|'('
name|'exc'
op|')'
op|','
nl|'\n'
string|"'Quarantined %s to %s due to malformed database'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
name|'qpath'
op|')'
op|')'
newline|'\n'
comment|'# Test corrupted database'
nl|'\n'
name|'copy'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'__file__'
op|')'
op|','
nl|'\n'
string|"'corrupted_example.db'"
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'1.db'"
op|')'
op|')'
newline|'\n'
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'1.db'"
op|')'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'db_type'
op|'='
string|"'test'"
newline|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'SELECT * FROM test'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'str'
op|'('
name|'exc'
op|')'
op|','
nl|'\n'
string|"'Quarantined %s to %s due to corrupted database'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
name|'qpath'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_lock
dedent|''
dedent|''
name|'def'
name|'test_lock'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'1.db'"
op|')'
op|','
name|'timeout'
op|'='
number|'.1'
op|')'
newline|'\n'
name|'got_exc'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'broker'
op|'.'
name|'lock'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'got_exc'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'got_exc'
op|')'
newline|'\n'
nl|'\n'
DECL|function|stub
name|'def'
name|'stub'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'broker'
op|'.'
name|'_initialize'
op|'='
name|'stub'
newline|'\n'
name|'broker'
op|'.'
name|'initialize'
op|'('
name|'normalize_timestamp'
op|'('
string|"'1'"
op|')'
op|')'
newline|'\n'
name|'with'
name|'broker'
op|'.'
name|'lock'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'with'
name|'broker'
op|'.'
name|'lock'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'broker2'
op|'='
name|'DatabaseBroker'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'1.db'"
op|')'
op|','
nl|'\n'
name|'timeout'
op|'='
number|'.1'
op|')'
newline|'\n'
name|'broker2'
op|'.'
name|'_initialize'
op|'='
name|'stub'
newline|'\n'
name|'with'
name|'broker'
op|'.'
name|'lock'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'got_exc'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'broker2'
op|'.'
name|'lock'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'LockTimeout'
op|':'
newline|'\n'
indent|'                '
name|'got_exc'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'got_exc'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'broker'
op|'.'
name|'lock'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'test'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'with'
name|'broker'
op|'.'
name|'lock'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_newid
dedent|''
dedent|''
name|'def'
name|'test_newid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
string|"':memory:'"
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'db_type'
op|'='
string|"'test'"
newline|'\n'
name|'broker'
op|'.'
name|'db_contains_type'
op|'='
string|"'test'"
newline|'\n'
name|'uuid1'
op|'='
name|'str'
op|'('
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_initialize
name|'def'
name|'_initialize'
op|'('
name|'conn'
op|','
name|'timestamp'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'CREATE TABLE test (one TEXT)'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'CREATE TABLE test_stat (id TEXT)'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'INSERT INTO test_stat (id) VALUES (?)'"
op|','
op|'('
name|'uuid1'
op|','
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'broker'
op|'.'
name|'_initialize'
op|'='
name|'_initialize'
newline|'\n'
name|'broker'
op|'.'
name|'initialize'
op|'('
name|'normalize_timestamp'
op|'('
string|"'1'"
op|')'
op|')'
newline|'\n'
name|'uuid2'
op|'='
name|'str'
op|'('
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'newid'
op|'('
name|'uuid2'
op|')'
newline|'\n'
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'uuids'
op|'='
op|'['
name|'r'
op|'['
number|'0'
op|']'
name|'for'
name|'r'
name|'in'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'SELECT * FROM test_stat'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'uuids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'uuids'
op|'['
number|'0'
op|']'
op|','
name|'uuid1'
op|')'
newline|'\n'
name|'uuid1'
op|'='
name|'uuids'
op|'['
number|'0'
op|']'
newline|'\n'
name|'points'
op|'='
op|'['
op|'('
name|'r'
op|'['
number|'0'
op|']'
op|','
name|'r'
op|'['
number|'1'
op|']'
op|')'
name|'for'
name|'r'
name|'in'
name|'conn'
op|'.'
name|'execute'
op|'('
nl|'\n'
string|"'SELECT sync_point, '"
nl|'\n'
string|"'remote_id FROM incoming_sync WHERE remote_id = ?'"
op|','
op|'('
name|'uuid2'
op|','
op|')'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'points'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'points'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'points'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|','
name|'uuid2'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|'\'INSERT INTO test (one) VALUES ("1")\''
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'uuid3'
op|'='
name|'str'
op|'('
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'newid'
op|'('
name|'uuid3'
op|')'
newline|'\n'
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'uuids'
op|'='
op|'['
name|'r'
op|'['
number|'0'
op|']'
name|'for'
name|'r'
name|'in'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'SELECT * FROM test_stat'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'uuids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'uuids'
op|'['
number|'0'
op|']'
op|','
name|'uuid1'
op|')'
newline|'\n'
name|'uuid1'
op|'='
name|'uuids'
op|'['
number|'0'
op|']'
newline|'\n'
name|'points'
op|'='
op|'['
op|'('
name|'r'
op|'['
number|'0'
op|']'
op|','
name|'r'
op|'['
number|'1'
op|']'
op|')'
name|'for'
name|'r'
name|'in'
name|'conn'
op|'.'
name|'execute'
op|'('
nl|'\n'
string|"'SELECT sync_point, '"
nl|'\n'
string|"'remote_id FROM incoming_sync WHERE remote_id = ?'"
op|','
op|'('
name|'uuid3'
op|','
op|')'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'points'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'points'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|','
name|'uuid3'
op|')'
newline|'\n'
dedent|''
name|'broker'
op|'.'
name|'newid'
op|'('
name|'uuid2'
op|')'
newline|'\n'
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'uuids'
op|'='
op|'['
name|'r'
op|'['
number|'0'
op|']'
name|'for'
name|'r'
name|'in'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'SELECT * FROM test_stat'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'uuids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'uuids'
op|'['
number|'0'
op|']'
op|','
name|'uuid1'
op|')'
newline|'\n'
name|'points'
op|'='
op|'['
op|'('
name|'r'
op|'['
number|'0'
op|']'
op|','
name|'r'
op|'['
number|'1'
op|']'
op|')'
name|'for'
name|'r'
name|'in'
name|'conn'
op|'.'
name|'execute'
op|'('
nl|'\n'
string|"'SELECT sync_point, '"
nl|'\n'
string|"'remote_id FROM incoming_sync WHERE remote_id = ?'"
op|','
op|'('
name|'uuid2'
op|','
op|')'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'points'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'points'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|','
name|'uuid2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_items_since
dedent|''
dedent|''
name|'def'
name|'test_get_items_since'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
string|"':memory:'"
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'db_type'
op|'='
string|"'test'"
newline|'\n'
name|'broker'
op|'.'
name|'db_contains_type'
op|'='
string|"'test'"
newline|'\n'
nl|'\n'
DECL|function|_initialize
name|'def'
name|'_initialize'
op|'('
name|'conn'
op|','
name|'timestamp'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'CREATE TABLE test (one TEXT)'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|'\'INSERT INTO test (one) VALUES ("1")\''
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|'\'INSERT INTO test (one) VALUES ("2")\''
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|'\'INSERT INTO test (one) VALUES ("3")\''
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'broker'
op|'.'
name|'_initialize'
op|'='
name|'_initialize'
newline|'\n'
name|'broker'
op|'.'
name|'initialize'
op|'('
name|'normalize_timestamp'
op|'('
string|"'1'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_items_since'
op|'('
op|'-'
number|'1'
op|','
number|'10'
op|')'
op|','
nl|'\n'
op|'['
op|'{'
string|"'one'"
op|':'
string|"'1'"
op|'}'
op|','
op|'{'
string|"'one'"
op|':'
string|"'2'"
op|'}'
op|','
op|'{'
string|"'one'"
op|':'
string|"'3'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_items_since'
op|'('
op|'-'
number|'1'
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'['
op|'{'
string|"'one'"
op|':'
string|"'1'"
op|'}'
op|','
op|'{'
string|"'one'"
op|':'
string|"'2'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_items_since'
op|'('
number|'1'
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'['
op|'{'
string|"'one'"
op|':'
string|"'2'"
op|'}'
op|','
op|'{'
string|"'one'"
op|':'
string|"'3'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_items_since'
op|'('
number|'3'
op|','
number|'2'
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_items_since'
op|'('
number|'999'
op|','
number|'2'
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_sync
dedent|''
name|'def'
name|'test_get_sync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
string|"':memory:'"
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'db_type'
op|'='
string|"'test'"
newline|'\n'
name|'broker'
op|'.'
name|'db_contains_type'
op|'='
string|"'test'"
newline|'\n'
name|'uuid1'
op|'='
name|'str'
op|'('
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_initialize
name|'def'
name|'_initialize'
op|'('
name|'conn'
op|','
name|'timestamp'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'CREATE TABLE test (one TEXT)'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'CREATE TABLE test_stat (id TEXT)'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'INSERT INTO test_stat (id) VALUES (?)'"
op|','
op|'('
name|'uuid1'
op|','
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|'\'INSERT INTO test (one) VALUES ("1")\''
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
name|'pass'
newline|'\n'
dedent|''
name|'broker'
op|'.'
name|'_initialize'
op|'='
name|'_initialize'
newline|'\n'
name|'broker'
op|'.'
name|'initialize'
op|'('
name|'normalize_timestamp'
op|'('
string|"'1'"
op|')'
op|')'
newline|'\n'
name|'uuid2'
op|'='
name|'str'
op|'('
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid2'
op|')'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'newid'
op|'('
name|'uuid2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid2'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'uuid3'
op|'='
name|'str'
op|'('
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid3'
op|')'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'execute'
op|'('
string|'\'INSERT INTO test (one) VALUES ("2")\''
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'broker'
op|'.'
name|'newid'
op|'('
name|'uuid3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid2'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid3'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid2'
op|','
name|'incoming'
op|'='
name|'False'
op|')'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid3'
op|','
name|'incoming'
op|'='
name|'False'
op|')'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'merge_syncs'
op|'('
op|'['
op|'{'
string|"'sync_point'"
op|':'
number|'1'
op|','
string|"'remote_id'"
op|':'
name|'uuid2'
op|'}'
op|']'
op|','
nl|'\n'
name|'incoming'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid2'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid3'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid2'
op|','
name|'incoming'
op|'='
name|'False'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid3'
op|','
name|'incoming'
op|'='
name|'False'
op|')'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'merge_syncs'
op|'('
op|'['
op|'{'
string|"'sync_point'"
op|':'
number|'2'
op|','
string|"'remote_id'"
op|':'
name|'uuid3'
op|'}'
op|']'
op|','
nl|'\n'
name|'incoming'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid2'
op|','
name|'incoming'
op|'='
name|'False'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid3'
op|','
name|'incoming'
op|'='
name|'False'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_merge_syncs
dedent|''
name|'def'
name|'test_merge_syncs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
string|"':memory:'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|stub
name|'def'
name|'stub'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'broker'
op|'.'
name|'_initialize'
op|'='
name|'stub'
newline|'\n'
name|'broker'
op|'.'
name|'initialize'
op|'('
name|'normalize_timestamp'
op|'('
string|"'1'"
op|')'
op|')'
newline|'\n'
name|'uuid2'
op|'='
name|'str'
op|'('
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'merge_syncs'
op|'('
op|'['
op|'{'
string|"'sync_point'"
op|':'
number|'1'
op|','
string|"'remote_id'"
op|':'
name|'uuid2'
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid2'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'uuid3'
op|'='
name|'str'
op|'('
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'merge_syncs'
op|'('
op|'['
op|'{'
string|"'sync_point'"
op|':'
number|'2'
op|','
string|"'remote_id'"
op|':'
name|'uuid3'
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid2'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid3'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid2'
op|','
name|'incoming'
op|'='
name|'False'
op|')'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid3'
op|','
name|'incoming'
op|'='
name|'False'
op|')'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'merge_syncs'
op|'('
op|'['
op|'{'
string|"'sync_point'"
op|':'
number|'3'
op|','
string|"'remote_id'"
op|':'
name|'uuid2'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'sync_point'"
op|':'
number|'4'
op|','
string|"'remote_id'"
op|':'
name|'uuid3'
op|'}'
op|']'
op|','
nl|'\n'
name|'incoming'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid2'
op|','
name|'incoming'
op|'='
name|'False'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid3'
op|','
name|'incoming'
op|'='
name|'False'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid2'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid3'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'merge_syncs'
op|'('
op|'['
op|'{'
string|"'sync_point'"
op|':'
number|'5'
op|','
string|"'remote_id'"
op|':'
name|'uuid2'
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
name|'uuid2'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_replication_info
dedent|''
name|'def'
name|'test_get_replication_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'get_replication_info_tester'
op|'('
name|'metadata'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_replication_info_with_metadata
dedent|''
name|'def'
name|'test_get_replication_info_with_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'get_replication_info_tester'
op|'('
name|'metadata'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_replication_info_tester
dedent|''
name|'def'
name|'get_replication_info_tester'
op|'('
name|'self'
op|','
name|'metadata'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'DatabaseBroker'
op|'('
string|"':memory:'"
op|','
name|'account'
op|'='
string|"'a'"
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'db_type'
op|'='
string|"'test'"
newline|'\n'
name|'broker'
op|'.'
name|'db_contains_type'
op|'='
string|"'test'"
newline|'\n'
name|'broker_creation'
op|'='
name|'normalize_timestamp'
op|'('
number|'1'
op|')'
newline|'\n'
name|'broker_uuid'
op|'='
name|'str'
op|'('
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
name|'broker_metadata'
op|'='
name|'metadata'
name|'and'
name|'simplejson'
op|'.'
name|'dumps'
op|'('
nl|'\n'
op|'{'
string|"'Test'"
op|':'
op|'('
string|"'Value'"
op|','
name|'normalize_timestamp'
op|'('
number|'1'
op|')'
op|')'
op|'}'
op|')'
name|'or'
string|"''"
newline|'\n'
nl|'\n'
DECL|function|_initialize
name|'def'
name|'_initialize'
op|'('
name|'conn'
op|','
name|'put_timestamp'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'put_timestamp'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'put_timestamp'
op|'='
name|'normalize_timestamp'
op|'('
number|'0'
op|')'
newline|'\n'
dedent|''
name|'conn'
op|'.'
name|'executescript'
op|'('
string|"'''\n                CREATE TABLE test (\n                    ROWID INTEGER PRIMARY KEY AUTOINCREMENT,\n                    name TEXT UNIQUE,\n                    created_at TEXT\n                );\n                CREATE TRIGGER test_insert AFTER INSERT ON test\n                BEGIN\n                    UPDATE test_stat\n                    SET test_count = test_count + 1,\n                        hash = chexor(hash, new.name, new.created_at);\n                END;\n                CREATE TRIGGER test_update BEFORE UPDATE ON test\n                BEGIN\n                    SELECT RAISE(FAIL,\n                                 'UPDATE not allowed; DELETE and INSERT');\n                END;\n                CREATE TRIGGER test_delete AFTER DELETE ON test\n                BEGIN\n                    UPDATE test_stat\n                    SET test_count = test_count - 1,\n                        hash = chexor(hash, old.name, old.created_at);\n                END;\n                CREATE TABLE test_stat (\n                    account TEXT,\n                    created_at TEXT,\n                    put_timestamp TEXT DEFAULT '0',\n                    delete_timestamp TEXT DEFAULT '0',\n                    test_count INTEGER,\n                    hash TEXT default '00000000000000000000000000000000',\n                    id TEXT\n                    %s\n                );\n                INSERT INTO test_stat (test_count) VALUES (0);\n            '''"
op|'%'
op|'('
name|'metadata'
name|'and'
string|'", metadata TEXT DEFAULT \'\'"'
name|'or'
string|'""'
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'''\n                UPDATE test_stat\n                SET account = ?, created_at = ?,  id = ?, put_timestamp = ?\n            '''"
op|','
op|'('
name|'broker'
op|'.'
name|'account'
op|','
name|'broker_creation'
op|','
name|'broker_uuid'
op|','
name|'put_timestamp'
op|')'
op|')'
newline|'\n'
name|'if'
name|'metadata'
op|':'
newline|'\n'
indent|'                '
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'UPDATE test_stat SET metadata = ?'"
op|','
nl|'\n'
op|'('
name|'broker_metadata'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
name|'conn'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'broker'
op|'.'
name|'_initialize'
op|'='
name|'_initialize'
newline|'\n'
name|'put_timestamp'
op|'='
name|'normalize_timestamp'
op|'('
number|'2'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'initialize'
op|'('
name|'put_timestamp'
op|')'
newline|'\n'
name|'info'
op|'='
name|'broker'
op|'.'
name|'get_replication_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'info'
op|','
op|'{'
nl|'\n'
string|"'count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'hash'"
op|':'
string|"'00000000000000000000000000000000'"
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'broker_creation'
op|','
string|"'put_timestamp'"
op|':'
name|'put_timestamp'
op|','
nl|'\n'
string|"'delete_timestamp'"
op|':'
string|"'0'"
op|','
string|"'max_row'"
op|':'
op|'-'
number|'1'
op|','
string|"'id'"
op|':'
name|'broker_uuid'
op|','
nl|'\n'
string|"'metadata'"
op|':'
name|'broker_metadata'
op|'}'
op|')'
newline|'\n'
name|'insert_timestamp'
op|'='
name|'normalize_timestamp'
op|'('
number|'3'
op|')'
newline|'\n'
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'''\n                INSERT INTO test (name, created_at) VALUES ('test', ?)\n            '''"
op|','
op|'('
name|'insert_timestamp'
op|','
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'info'
op|'='
name|'broker'
op|'.'
name|'get_replication_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'info'
op|','
op|'{'
nl|'\n'
string|"'count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'hash'"
op|':'
string|"'bdc4c93f574b0d8c2911a27ce9dd38ba'"
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'broker_creation'
op|','
string|"'put_timestamp'"
op|':'
name|'put_timestamp'
op|','
nl|'\n'
string|"'delete_timestamp'"
op|':'
string|"'0'"
op|','
string|"'max_row'"
op|':'
number|'1'
op|','
string|"'id'"
op|':'
name|'broker_uuid'
op|','
nl|'\n'
string|"'metadata'"
op|':'
name|'broker_metadata'
op|'}'
op|')'
newline|'\n'
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'execute'
op|'('
string|"'DELETE FROM test'"
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
dedent|''
name|'info'
op|'='
name|'broker'
op|'.'
name|'get_replication_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'info'
op|','
op|'{'
nl|'\n'
string|"'count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'hash'"
op|':'
string|"'00000000000000000000000000000000'"
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'broker_creation'
op|','
string|"'put_timestamp'"
op|':'
name|'put_timestamp'
op|','
nl|'\n'
string|"'delete_timestamp'"
op|':'
string|"'0'"
op|','
string|"'max_row'"
op|':'
number|'1'
op|','
string|"'id'"
op|':'
name|'broker_uuid'
op|','
nl|'\n'
string|"'metadata'"
op|':'
name|'broker_metadata'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'broker'
newline|'\n'
nl|'\n'
DECL|member|test_metadata
dedent|''
name|'def'
name|'test_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|reclaim
indent|'        '
name|'def'
name|'reclaim'
op|'('
name|'broker'
op|','
name|'timestamp'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'broker'
op|'.'
name|'get'
op|'('
op|')'
name|'as'
name|'conn'
op|':'
newline|'\n'
indent|'                '
name|'broker'
op|'.'
name|'_reclaim'
op|'('
name|'conn'
op|','
name|'timestamp'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'commit'
op|'('
op|')'
newline|'\n'
comment|'# Initializes a good broker for us'
nl|'\n'
dedent|''
dedent|''
name|'broker'
op|'='
name|'self'
op|'.'
name|'get_replication_info_tester'
op|'('
name|'metadata'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'# Add our first item'
nl|'\n'
name|'first_timestamp'
op|'='
name|'normalize_timestamp'
op|'('
number|'1'
op|')'
newline|'\n'
name|'first_value'
op|'='
string|"'1'"
newline|'\n'
name|'broker'
op|'.'
name|'update_metadata'
op|'('
op|'{'
string|"'First'"
op|':'
op|'['
name|'first_value'
op|','
name|'first_timestamp'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'First'"
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'First'"
op|']'
op|','
nl|'\n'
op|'['
name|'first_value'
op|','
name|'first_timestamp'
op|']'
op|')'
newline|'\n'
comment|'# Add our second item'
nl|'\n'
name|'second_timestamp'
op|'='
name|'normalize_timestamp'
op|'('
number|'2'
op|')'
newline|'\n'
name|'second_value'
op|'='
string|"'2'"
newline|'\n'
name|'broker'
op|'.'
name|'update_metadata'
op|'('
op|'{'
string|"'Second'"
op|':'
op|'['
name|'second_value'
op|','
name|'second_timestamp'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'First'"
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'First'"
op|']'
op|','
nl|'\n'
op|'['
name|'first_value'
op|','
name|'first_timestamp'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Second'"
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'Second'"
op|']'
op|','
nl|'\n'
op|'['
name|'second_value'
op|','
name|'second_timestamp'
op|']'
op|')'
newline|'\n'
comment|'# Update our first item'
nl|'\n'
name|'first_timestamp'
op|'='
name|'normalize_timestamp'
op|'('
number|'3'
op|')'
newline|'\n'
name|'first_value'
op|'='
string|"'1b'"
newline|'\n'
name|'broker'
op|'.'
name|'update_metadata'
op|'('
op|'{'
string|"'First'"
op|':'
op|'['
name|'first_value'
op|','
name|'first_timestamp'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'First'"
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'First'"
op|']'
op|','
nl|'\n'
op|'['
name|'first_value'
op|','
name|'first_timestamp'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Second'"
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'Second'"
op|']'
op|','
nl|'\n'
op|'['
name|'second_value'
op|','
name|'second_timestamp'
op|']'
op|')'
newline|'\n'
comment|'# Delete our second item (by setting to empty string)'
nl|'\n'
name|'second_timestamp'
op|'='
name|'normalize_timestamp'
op|'('
number|'4'
op|')'
newline|'\n'
name|'second_value'
op|'='
string|"''"
newline|'\n'
name|'broker'
op|'.'
name|'update_metadata'
op|'('
op|'{'
string|"'Second'"
op|':'
op|'['
name|'second_value'
op|','
name|'second_timestamp'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'First'"
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'First'"
op|']'
op|','
nl|'\n'
op|'['
name|'first_value'
op|','
name|'first_timestamp'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Second'"
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'Second'"
op|']'
op|','
nl|'\n'
op|'['
name|'second_value'
op|','
name|'second_timestamp'
op|']'
op|')'
newline|'\n'
comment|'# Reclaim at point before second item was deleted'
nl|'\n'
name|'reclaim'
op|'('
name|'broker'
op|','
name|'normalize_timestamp'
op|'('
number|'3'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'First'"
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'First'"
op|']'
op|','
nl|'\n'
op|'['
name|'first_value'
op|','
name|'first_timestamp'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Second'"
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'Second'"
op|']'
op|','
nl|'\n'
op|'['
name|'second_value'
op|','
name|'second_timestamp'
op|']'
op|')'
newline|'\n'
comment|'# Reclaim at point second item was deleted'
nl|'\n'
name|'reclaim'
op|'('
name|'broker'
op|','
name|'normalize_timestamp'
op|'('
number|'4'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'First'"
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'First'"
op|']'
op|','
nl|'\n'
op|'['
name|'first_value'
op|','
name|'first_timestamp'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Second'"
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'Second'"
op|']'
op|','
nl|'\n'
op|'['
name|'second_value'
op|','
name|'second_timestamp'
op|']'
op|')'
newline|'\n'
comment|'# Reclaim after point second item was deleted'
nl|'\n'
name|'reclaim'
op|'('
name|'broker'
op|','
name|'normalize_timestamp'
op|'('
number|'5'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'First'"
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'First'"
op|']'
op|','
nl|'\n'
op|'['
name|'first_value'
op|','
name|'first_timestamp'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Second'"
name|'not'
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
