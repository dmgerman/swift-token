begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'from'
name|'textwrap'
name|'import'
name|'dedent'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'six'
op|'.'
name|'moves'
op|'.'
name|'configparser'
name|'import'
name|'NoSectionError'
op|','
name|'NoOptionError'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
name|'import'
name|'memcache'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'memcached'
name|'import'
name|'MemcacheRing'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'Request'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'wsgi'
name|'import'
name|'loadapp'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'with_tempdir'
op|','
name|'patch_policies'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeApp
name|'class'
name|'FakeApp'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__call__
indent|'    '
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'env'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExcConfigParser
dedent|''
dedent|''
name|'class'
name|'ExcConfigParser'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|read
indent|'    '
name|'def'
name|'read'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'Exception'
op|'('
string|"'read called with %r'"
op|'%'
name|'path'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|EmptyConfigParser
dedent|''
dedent|''
name|'class'
name|'EmptyConfigParser'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|read
indent|'    '
name|'def'
name|'read'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'False'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_config_parser
dedent|''
dedent|''
name|'def'
name|'get_config_parser'
op|'('
name|'memcache_servers'
op|'='
string|"'1.2.3.4:5'"
op|','
nl|'\n'
name|'memcache_serialization_support'
op|'='
string|"'1'"
op|','
nl|'\n'
name|'memcache_max_connections'
op|'='
string|"'4'"
op|','
nl|'\n'
name|'section'
op|'='
string|"'memcache'"
op|')'
op|':'
newline|'\n'
indent|'    '
name|'_srvs'
op|'='
name|'memcache_servers'
newline|'\n'
name|'_sers'
op|'='
name|'memcache_serialization_support'
newline|'\n'
name|'_maxc'
op|'='
name|'memcache_max_connections'
newline|'\n'
name|'_section'
op|'='
name|'section'
newline|'\n'
nl|'\n'
DECL|class|SetConfigParser
name|'class'
name|'SetConfigParser'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|items
indent|'        '
name|'def'
name|'items'
op|'('
name|'self'
op|','
name|'section_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'section_name'
op|'!='
name|'section'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'NoSectionError'
op|'('
name|'section_name'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'{'
nl|'\n'
string|"'memcache_servers'"
op|':'
name|'memcache_servers'
op|','
nl|'\n'
string|"'memcache_serialization_support'"
op|':'
nl|'\n'
name|'memcache_serialization_support'
op|','
nl|'\n'
string|"'memcache_max_connections'"
op|':'
name|'memcache_max_connections'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|get
dedent|''
name|'def'
name|'get'
op|'('
name|'self'
op|','
name|'section'
op|','
name|'option'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'_section'
op|'=='
name|'section'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'option'
op|'=='
string|"'memcache_servers'"
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'_srvs'
op|'=='
string|"'error'"
op|':'
newline|'\n'
indent|'                        '
name|'raise'
name|'NoOptionError'
op|'('
name|'option'
op|','
name|'section'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_srvs'
newline|'\n'
dedent|''
name|'elif'
name|'option'
op|'=='
string|"'memcache_serialization_support'"
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'_sers'
op|'=='
string|"'error'"
op|':'
newline|'\n'
indent|'                        '
name|'raise'
name|'NoOptionError'
op|'('
name|'option'
op|','
name|'section'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_sers'
newline|'\n'
dedent|''
name|'elif'
name|'option'
name|'in'
op|'('
string|"'memcache_max_connections'"
op|','
nl|'\n'
string|"'max_connections'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'_maxc'
op|'=='
string|"'error'"
op|':'
newline|'\n'
indent|'                        '
name|'raise'
name|'NoOptionError'
op|'('
name|'option'
op|','
name|'section'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_maxc'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'NoOptionError'
op|'('
name|'option'
op|','
name|'section'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'NoSectionError'
op|'('
name|'option'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'SetConfigParser'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|start_response
dedent|''
name|'def'
name|'start_response'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestCacheMiddleware
dedent|''
name|'class'
name|'TestCacheMiddleware'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'memcache'
op|'.'
name|'MemcacheMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_cache_middleware
dedent|''
name|'def'
name|'test_cache_middleware'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/something'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'swift.cache'"
name|'in'
name|'resp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'resp'
op|'['
string|"'swift.cache'"
op|']'
op|','
name|'MemcacheRing'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conf_default_read
dedent|''
name|'def'
name|'test_conf_default_read'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_parser'
op|'='
name|'memcache'
op|'.'
name|'ConfigParser'
newline|'\n'
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'ExcConfigParser'
newline|'\n'
name|'count'
op|'='
number|'0'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'d'
name|'in'
op|'('
op|'{'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'memcache_servers'"
op|':'
string|"'6.7.8.9:10'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'memcache_serialization_support'"
op|':'
string|"'0'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'memcache_max_connections'"
op|':'
string|"'30'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'memcache_servers'"
op|':'
string|"'6.7.8.9:10'"
op|','
nl|'\n'
string|"'memcache_serialization_support'"
op|':'
string|"'0'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'memcache_servers'"
op|':'
string|"'6.7.8.9:10'"
op|','
nl|'\n'
string|"'memcache_max_connections'"
op|':'
string|"'30'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'memcache_serialization_support'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'memcache_max_connections'"
op|':'
string|"'30'"
op|'}'
nl|'\n'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'memcache'
op|'.'
name|'MemcacheMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
name|'d'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'str'
op|'('
name|'err'
op|')'
op|','
nl|'\n'
string|'"read called with \'/etc/swift/memcache.conf\'"'
op|')'
newline|'\n'
name|'count'
op|'+='
number|'1'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'orig_parser'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count'
op|','
number|'7'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conf_set_no_read
dedent|''
name|'def'
name|'test_conf_set_no_read'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_parser'
op|'='
name|'memcache'
op|'.'
name|'ConfigParser'
newline|'\n'
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'ExcConfigParser'
newline|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'memcache'
op|'.'
name|'MemcacheMiddleware'
op|'('
nl|'\n'
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
string|"'memcache_servers'"
op|':'
string|"'1.2.3.4:5'"
op|','
nl|'\n'
string|"'memcache_serialization_support'"
op|':'
string|"'2'"
op|','
nl|'\n'
string|"'memcache_max_connections'"
op|':'
string|"'30'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'orig_parser'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exc'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conf_default
dedent|''
name|'def'
name|'test_conf_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_parser'
op|'='
name|'memcache'
op|'.'
name|'ConfigParser'
newline|'\n'
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'EmptyConfigParser'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'memcache'
op|'.'
name|'MemcacheMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'orig_parser'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache_servers'
op|','
string|"'127.0.0.1:11211'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_pickle'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_unpickle'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_client_cache'
op|'['
string|"'127.0.0.1:11211'"
op|']'
op|'.'
name|'max_size'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conf_inline
dedent|''
name|'def'
name|'test_conf_inline'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_parser'
op|'='
name|'memcache'
op|'.'
name|'ConfigParser'
newline|'\n'
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'get_config_parser'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'memcache'
op|'.'
name|'MemcacheMiddleware'
op|'('
nl|'\n'
name|'FakeApp'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'memcache_servers'"
op|':'
string|"'6.7.8.9:10'"
op|','
nl|'\n'
string|"'memcache_serialization_support'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'memcache_max_connections'"
op|':'
string|"'5'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'orig_parser'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache_servers'
op|','
string|"'6.7.8.9:10'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_pickle'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_unpickle'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_client_cache'
op|'['
string|"'6.7.8.9:10'"
op|']'
op|'.'
name|'max_size'
op|','
number|'5'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conf_extra_no_section
dedent|''
name|'def'
name|'test_conf_extra_no_section'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_parser'
op|'='
name|'memcache'
op|'.'
name|'ConfigParser'
newline|'\n'
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'get_config_parser'
op|'('
name|'section'
op|'='
string|"'foobar'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'memcache'
op|'.'
name|'MemcacheMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'orig_parser'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache_servers'
op|','
string|"'127.0.0.1:11211'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_pickle'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_unpickle'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_client_cache'
op|'['
string|"'127.0.0.1:11211'"
op|']'
op|'.'
name|'max_size'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conf_extra_no_option
dedent|''
name|'def'
name|'test_conf_extra_no_option'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_parser'
op|'='
name|'memcache'
op|'.'
name|'ConfigParser'
newline|'\n'
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'get_config_parser'
op|'('
nl|'\n'
name|'memcache_servers'
op|'='
string|"'error'"
op|','
name|'memcache_serialization_support'
op|'='
string|"'error'"
op|','
nl|'\n'
name|'memcache_max_connections'
op|'='
string|"'error'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'memcache'
op|'.'
name|'MemcacheMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'orig_parser'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache_servers'
op|','
string|"'127.0.0.1:11211'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_pickle'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_unpickle'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_client_cache'
op|'['
string|"'127.0.0.1:11211'"
op|']'
op|'.'
name|'max_size'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conf_inline_other_max_conn
dedent|''
name|'def'
name|'test_conf_inline_other_max_conn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_parser'
op|'='
name|'memcache'
op|'.'
name|'ConfigParser'
newline|'\n'
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'get_config_parser'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'memcache'
op|'.'
name|'MemcacheMiddleware'
op|'('
nl|'\n'
name|'FakeApp'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'memcache_servers'"
op|':'
string|"'6.7.8.9:10'"
op|','
nl|'\n'
string|"'memcache_serialization_support'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'max_connections'"
op|':'
string|"'5'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'orig_parser'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache_servers'
op|','
string|"'6.7.8.9:10'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_pickle'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_unpickle'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_client_cache'
op|'['
string|"'6.7.8.9:10'"
op|']'
op|'.'
name|'max_size'
op|','
number|'5'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conf_inline_bad_max_conn
dedent|''
name|'def'
name|'test_conf_inline_bad_max_conn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_parser'
op|'='
name|'memcache'
op|'.'
name|'ConfigParser'
newline|'\n'
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'get_config_parser'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'memcache'
op|'.'
name|'MemcacheMiddleware'
op|'('
nl|'\n'
name|'FakeApp'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'memcache_servers'"
op|':'
string|"'6.7.8.9:10'"
op|','
nl|'\n'
string|"'memcache_serialization_support'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'max_connections'"
op|':'
string|"'bad42'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'orig_parser'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache_servers'
op|','
string|"'6.7.8.9:10'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_pickle'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_unpickle'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_client_cache'
op|'['
string|"'6.7.8.9:10'"
op|']'
op|'.'
name|'max_size'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conf_from_extra_conf
dedent|''
name|'def'
name|'test_conf_from_extra_conf'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_parser'
op|'='
name|'memcache'
op|'.'
name|'ConfigParser'
newline|'\n'
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'get_config_parser'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'memcache'
op|'.'
name|'MemcacheMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'orig_parser'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache_servers'
op|','
string|"'1.2.3.4:5'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_pickle'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_unpickle'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_client_cache'
op|'['
string|"'1.2.3.4:5'"
op|']'
op|'.'
name|'max_size'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conf_from_extra_conf_bad_max_conn
dedent|''
name|'def'
name|'test_conf_from_extra_conf_bad_max_conn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_parser'
op|'='
name|'memcache'
op|'.'
name|'ConfigParser'
newline|'\n'
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'get_config_parser'
op|'('
nl|'\n'
name|'memcache_max_connections'
op|'='
string|"'bad42'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'memcache'
op|'.'
name|'MemcacheMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'orig_parser'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache_servers'
op|','
string|"'1.2.3.4:5'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_pickle'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_unpickle'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_client_cache'
op|'['
string|"'1.2.3.4:5'"
op|']'
op|'.'
name|'max_size'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conf_from_inline_and_maxc_from_extra_conf
dedent|''
name|'def'
name|'test_conf_from_inline_and_maxc_from_extra_conf'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_parser'
op|'='
name|'memcache'
op|'.'
name|'ConfigParser'
newline|'\n'
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'get_config_parser'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'memcache'
op|'.'
name|'MemcacheMiddleware'
op|'('
nl|'\n'
name|'FakeApp'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'memcache_servers'"
op|':'
string|"'6.7.8.9:10'"
op|','
nl|'\n'
string|"'memcache_serialization_support'"
op|':'
string|"'0'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'orig_parser'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache_servers'
op|','
string|"'6.7.8.9:10'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_pickle'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_unpickle'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_client_cache'
op|'['
string|"'6.7.8.9:10'"
op|']'
op|'.'
name|'max_size'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conf_from_inline_and_sers_from_extra_conf
dedent|''
name|'def'
name|'test_conf_from_inline_and_sers_from_extra_conf'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_parser'
op|'='
name|'memcache'
op|'.'
name|'ConfigParser'
newline|'\n'
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'get_config_parser'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'memcache'
op|'.'
name|'MemcacheMiddleware'
op|'('
nl|'\n'
name|'FakeApp'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'memcache_servers'"
op|':'
string|"'6.7.8.9:10'"
op|','
nl|'\n'
string|"'memcache_max_connections'"
op|':'
string|"'42'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'memcache'
op|'.'
name|'ConfigParser'
op|'='
name|'orig_parser'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache_servers'
op|','
string|"'6.7.8.9:10'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_pickle'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_allow_unpickle'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'_client_cache'
op|'['
string|"'6.7.8.9:10'"
op|']'
op|'.'
name|'max_size'
op|','
number|'42'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filter_factory
dedent|''
name|'def'
name|'test_filter_factory'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'factory'
op|'='
name|'memcache'
op|'.'
name|'filter_factory'
op|'('
op|'{'
string|"'max_connections'"
op|':'
string|"'3'"
op|'}'
op|','
nl|'\n'
name|'memcache_servers'
op|'='
string|"'10.10.10.10:10'"
op|','
nl|'\n'
name|'memcache_serialization_support'
op|'='
string|"'1'"
op|')'
newline|'\n'
name|'thefilter'
op|'='
name|'factory'
op|'('
string|"'myapp'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'thefilter'
op|'.'
name|'app'
op|','
string|"'myapp'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'thefilter'
op|'.'
name|'memcache_servers'
op|','
string|"'10.10.10.10:10'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'thefilter'
op|'.'
name|'memcache'
op|'.'
name|'_allow_pickle'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'thefilter'
op|'.'
name|'memcache'
op|'.'
name|'_allow_unpickle'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'thefilter'
op|'.'
name|'memcache'
op|'.'
name|'_client_cache'
op|'['
string|"'10.10.10.10:10'"
op|']'
op|'.'
name|'max_size'
op|','
number|'3'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'patch_policies'
newline|'\n'
DECL|member|_loadapp
name|'def'
name|'_loadapp'
op|'('
name|'self'
op|','
name|'proxy_config_path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Load a proxy from an app.conf to get the memcache_ring\n\n        :returns: the memcache_ring of the memcache middleware filter\n        """'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.proxy.server.Ring'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'loadapp'
op|'('
name|'proxy_config_path'
op|')'
newline|'\n'
dedent|''
name|'memcache_ring'
op|'='
name|'None'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'memcache_ring'
op|'='
name|'getattr'
op|'('
name|'app'
op|','
string|"'memcache'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'memcache_ring'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'app'
op|'='
name|'app'
op|'.'
name|'app'
newline|'\n'
dedent|''
name|'return'
name|'memcache_ring'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'with_tempdir'
newline|'\n'
DECL|member|test_real_config
name|'def'
name|'test_real_config'
op|'('
name|'self'
op|','
name|'tempdir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config'
op|'='
string|'"""\n        [pipeline:main]\n        pipeline = cache proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n\n        [filter:cache]\n        use = egg:swift#memcache\n        """'
newline|'\n'
name|'config_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
string|"'test.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'config_path'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
name|'dedent'
op|'('
name|'config'
op|')'
op|')'
newline|'\n'
dedent|''
name|'memcache_ring'
op|'='
name|'self'
op|'.'
name|'_loadapp'
op|'('
name|'config_path'
op|')'
newline|'\n'
comment|'# only one server by default'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'memcache_ring'
op|'.'
name|'_client_cache'
op|'.'
name|'keys'
op|'('
op|')'
op|','
nl|'\n'
op|'['
string|"'127.0.0.1:11211'"
op|']'
op|')'
newline|'\n'
comment|'# extra options'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'memcache_ring'
op|'.'
name|'_connect_timeout'
op|','
number|'0.3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'memcache_ring'
op|'.'
name|'_pool_timeout'
op|','
number|'1.0'
op|')'
newline|'\n'
comment|'# tries is limited to server count'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'memcache_ring'
op|'.'
name|'_tries'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'memcache_ring'
op|'.'
name|'_io_timeout'
op|','
number|'2.0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'with_tempdir'
newline|'\n'
DECL|member|test_real_config_with_options
name|'def'
name|'test_real_config_with_options'
op|'('
name|'self'
op|','
name|'tempdir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config'
op|'='
string|'"""\n        [pipeline:main]\n        pipeline = cache proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n\n        [filter:cache]\n        use = egg:swift#memcache\n        memcache_servers = 10.0.0.1:11211,10.0.0.2:11211,10.0.0.3:11211,\n            10.0.0.4:11211\n        connect_timeout = 1.0\n        pool_timeout = 0.5\n        tries = 4\n        io_timeout = 1.0\n        """'
newline|'\n'
name|'config_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
string|"'test.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'config_path'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
name|'dedent'
op|'('
name|'config'
op|')'
op|')'
newline|'\n'
dedent|''
name|'memcache_ring'
op|'='
name|'self'
op|'.'
name|'_loadapp'
op|'('
name|'config_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
name|'memcache_ring'
op|'.'
name|'_client_cache'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|','
nl|'\n'
op|'['
string|"'10.0.0.%d:11211'"
op|'%'
name|'i'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
number|'5'
op|')'
op|']'
op|')'
newline|'\n'
comment|'# extra options'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'memcache_ring'
op|'.'
name|'_connect_timeout'
op|','
number|'1.0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'memcache_ring'
op|'.'
name|'_pool_timeout'
op|','
number|'0.5'
op|')'
newline|'\n'
comment|'# tries is limited to server count'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'memcache_ring'
op|'.'
name|'_tries'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'memcache_ring'
op|'.'
name|'_io_timeout'
op|','
number|'1.0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'with_tempdir'
newline|'\n'
DECL|member|test_real_memcache_config
name|'def'
name|'test_real_memcache_config'
op|'('
name|'self'
op|','
name|'tempdir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proxy_config'
op|'='
string|'"""\n        [DEFAULT]\n        swift_dir = %s\n\n        [pipeline:main]\n        pipeline = cache proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n\n        [filter:cache]\n        use = egg:swift#memcache\n        connect_timeout = 1.0\n        """'
op|'%'
name|'tempdir'
newline|'\n'
name|'proxy_config_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
string|"'test.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'proxy_config_path'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
name|'dedent'
op|'('
name|'proxy_config'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'memcache_config'
op|'='
string|'"""\n        [memcache]\n        memcache_servers = 10.0.0.1:11211,10.0.0.2:11211,10.0.0.3:11211,\n            10.0.0.4:11211\n        connect_timeout = 0.5\n        io_timeout = 1.0\n        """'
newline|'\n'
name|'memcache_config_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
string|"'memcache.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'memcache_config_path'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
name|'dedent'
op|'('
name|'memcache_config'
op|')'
op|')'
newline|'\n'
dedent|''
name|'memcache_ring'
op|'='
name|'self'
op|'.'
name|'_loadapp'
op|'('
name|'proxy_config_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
name|'memcache_ring'
op|'.'
name|'_client_cache'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|','
nl|'\n'
op|'['
string|"'10.0.0.%d:11211'"
op|'%'
name|'i'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
number|'5'
op|')'
op|']'
op|')'
newline|'\n'
comment|'# proxy option takes precedence'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'memcache_ring'
op|'.'
name|'_connect_timeout'
op|','
number|'1.0'
op|')'
newline|'\n'
comment|'# default tries are not limited by servers'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'memcache_ring'
op|'.'
name|'_tries'
op|','
number|'3'
op|')'
newline|'\n'
comment|'# memcache conf options are defaults'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'memcache_ring'
op|'.'
name|'_io_timeout'
op|','
number|'1.0'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
