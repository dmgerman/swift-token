begin_unit
comment|'# Copyright (c) 2010-2011 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'tmpfile'
newline|'\n'
name|'import'
name|'Queue'
newline|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'hashlib'
newline|'\n'
name|'import'
name|'pickle'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'internal_proxy'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'stats'
name|'import'
name|'log_processor'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'ChunkReadTimeout'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeUploadApp
name|'class'
name|'FakeUploadApp'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|DumbLogger
dedent|''
dedent|''
name|'class'
name|'DumbLogger'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__getattr__
indent|'    '
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'n'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'foo'
newline|'\n'
nl|'\n'
DECL|member|foo
dedent|''
name|'def'
name|'foo'
op|'('
name|'self'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|DumbInternalProxy
dedent|''
dedent|''
name|'class'
name|'DumbInternalProxy'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'code'
op|'='
number|'200'
op|','
name|'timeout'
op|'='
name|'False'
op|','
name|'bad_compressed'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'code'
op|'='
name|'code'
newline|'\n'
name|'self'
op|'.'
name|'timeout'
op|'='
name|'timeout'
newline|'\n'
name|'self'
op|'.'
name|'bad_compressed'
op|'='
name|'bad_compressed'
newline|'\n'
nl|'\n'
DECL|member|get_container_list
dedent|''
name|'def'
name|'get_container_list'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'marker'
op|'='
name|'None'
op|','
nl|'\n'
name|'end_marker'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'n'
op|'='
string|"'2010/03/14/13/obj1'"
newline|'\n'
name|'if'
name|'marker'
name|'is'
name|'None'
name|'or'
name|'n'
op|'>'
name|'marker'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'end_marker'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'n'
op|'<='
name|'end_marker'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'['
op|'{'
string|"'name'"
op|':'
name|'n'
op|'}'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
dedent|''
name|'return'
op|'['
op|'{'
string|"'name'"
op|':'
name|'n'
op|'}'
op|']'
newline|'\n'
dedent|''
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_object
dedent|''
name|'def'
name|'get_object'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'object_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'object_name'
op|'.'
name|'endswith'
op|'('
string|"'.gz'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'bad_compressed'
op|':'
newline|'\n'
comment|'# invalid compressed data'
nl|'\n'
DECL|function|data
indent|'                '
name|'def'
name|'data'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'yield'
string|"'\\xff\\xff\\xff\\xff\\xff\\xff\\xff'"
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|"# 'obj\\ndata', compressed with gzip -9"
nl|'\n'
DECL|function|data
indent|'                '
name|'def'
name|'data'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'yield'
string|"'\\x1f\\x8b\\x08'"
newline|'\n'
name|'yield'
string|'\'\\x08"\\xd79L\''
newline|'\n'
name|'yield'
string|"'\\x02\\x03te'"
newline|'\n'
name|'yield'
string|"'st\\x00\\xcbO'"
newline|'\n'
name|'yield'
string|"'\\xca\\xe2JI,I'"
newline|'\n'
name|'yield'
string|"'\\xe4\\x02\\x00O\\xff'"
newline|'\n'
name|'yield'
string|"'\\xa3Y\\t\\x00\\x00\\x00'"
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
DECL|function|data
indent|'            '
name|'def'
name|'data'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'yield'
string|"'obj\\n'"
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'timeout'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'ChunkReadTimeout'
newline|'\n'
dedent|''
name|'yield'
string|"'data'"
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'self'
op|'.'
name|'code'
op|','
name|'data'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|TestLogProcessor
dedent|''
dedent|''
name|'class'
name|'TestLogProcessor'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'access_test_line'
op|'='
string|"'Jul  9 04:14:30 saio proxy-server 1.2.3.4 4.5.6.7 '"
string|"'09/Jul/2010/04/14/30 GET '"
string|"'/v1/acct/foo/bar?format=json&foo HTTP/1.0 200 - '"
string|"'curl tk4e350daf-9338-4cc6-aabb-090e49babfbd '"
string|"'6 95 - txfa431231-7f07-42fd-8fc7-7da9d8cc1f90 - 0.0262'"
newline|'\n'
DECL|variable|stats_test_line
name|'stats_test_line'
op|'='
string|"'account,1,2,3'"
newline|'\n'
DECL|variable|proxy_config
name|'proxy_config'
op|'='
op|'{'
string|"'log-processor'"
op|':'
op|'{'
nl|'\n'
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_lazy_load_internal_proxy
name|'def'
name|'test_lazy_load_internal_proxy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# stub out internal_proxy's upload_app"
nl|'\n'
indent|'        '
name|'internal_proxy'
op|'.'
name|'BaseApplication'
op|'='
name|'FakeUploadApp'
newline|'\n'
name|'dummy_proxy_config'
op|'='
string|'"""[app:proxy-server]\nuse = egg:swift#proxy\n"""'
newline|'\n'
name|'with'
name|'tmpfile'
op|'('
name|'dummy_proxy_config'
op|')'
name|'as'
name|'proxy_config_file'
op|':'
newline|'\n'
indent|'            '
name|'conf'
op|'='
op|'{'
string|"'log-processor'"
op|':'
op|'{'
nl|'\n'
string|"'proxy_server_conf'"
op|':'
name|'proxy_config_file'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'p'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'('
name|'conf'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'isinstance'
op|'('
name|'p'
op|'.'
name|'_internal_proxy'
op|','
nl|'\n'
name|'None'
op|'.'
name|'__class__'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'isinstance'
op|'('
name|'p'
op|'.'
name|'internal_proxy'
op|','
nl|'\n'
name|'log_processor'
op|'.'
name|'InternalProxy'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'p'
op|'.'
name|'internal_proxy'
op|','
name|'p'
op|'.'
name|'_internal_proxy'
op|')'
newline|'\n'
nl|'\n'
comment|'# reset FakeUploadApp'
nl|'\n'
dedent|''
name|'reload'
op|'('
name|'internal_proxy'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_access_log_line_parser
dedent|''
name|'def'
name|'test_access_log_line_parser'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'access_proxy_config'
op|'='
name|'self'
op|'.'
name|'proxy_config'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'access_proxy_config'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'log-processor-access'"
op|':'
op|'{'
nl|'\n'
string|"'source_filename_format'"
op|':'
string|"'%Y%m%d%H*'"
op|','
nl|'\n'
string|"'class_path'"
op|':'
nl|'\n'
string|"'swift.stats.access_processor.AccessLogProcessor'"
nl|'\n'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'p'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'('
name|'access_proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'p'
op|'.'
name|'plugins'
op|'['
string|"'access'"
op|']'
op|'['
string|"'instance'"
op|']'
op|'.'
name|'log_line_parser'
op|'('
name|'self'
op|'.'
name|'access_test_line'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
op|'{'
string|"'code'"
op|':'
number|'200'
op|','
nl|'\n'
string|"'processing_time'"
op|':'
string|"'0.0262'"
op|','
nl|'\n'
string|"'auth_token'"
op|':'
string|"'tk4e350daf-9338-4cc6-aabb-090e49babfbd'"
op|','
nl|'\n'
string|"'month'"
op|':'
string|"'07'"
op|','
nl|'\n'
string|"'second'"
op|':'
string|"'30'"
op|','
nl|'\n'
string|"'year'"
op|':'
string|"'2010'"
op|','
nl|'\n'
string|"'query'"
op|':'
string|"'format=json&foo'"
op|','
nl|'\n'
string|"'tz'"
op|':'
string|"'+0000'"
op|','
nl|'\n'
string|"'http_version'"
op|':'
string|"'HTTP/1.0'"
op|','
nl|'\n'
string|"'object_name'"
op|':'
string|"'bar'"
op|','
nl|'\n'
string|"'etag'"
op|':'
string|"'-'"
op|','
nl|'\n'
string|"'method'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'trans_id'"
op|':'
string|"'txfa431231-7f07-42fd-8fc7-7da9d8cc1f90'"
op|','
nl|'\n'
string|"'client_ip'"
op|':'
string|"'1.2.3.4'"
op|','
nl|'\n'
string|"'format'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'bytes_out'"
op|':'
number|'95'
op|','
nl|'\n'
string|"'container_name'"
op|':'
string|"'foo'"
op|','
nl|'\n'
string|"'day'"
op|':'
string|"'09'"
op|','
nl|'\n'
string|"'minute'"
op|':'
string|"'14'"
op|','
nl|'\n'
string|"'account'"
op|':'
string|"'acct'"
op|','
nl|'\n'
string|"'hour'"
op|':'
string|"'04'"
op|','
nl|'\n'
string|"'referrer'"
op|':'
string|"'-'"
op|','
nl|'\n'
string|"'request'"
op|':'
string|"'/v1/acct/foo/bar'"
op|','
nl|'\n'
string|"'user_agent'"
op|':'
string|"'curl'"
op|','
nl|'\n'
string|"'bytes_in'"
op|':'
number|'6'
op|','
nl|'\n'
string|"'lb_ip'"
op|':'
string|"'4.5.6.7'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_process_one_access_file
dedent|''
name|'def'
name|'test_process_one_access_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'access_proxy_config'
op|'='
name|'self'
op|'.'
name|'proxy_config'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'access_proxy_config'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'log-processor-access'"
op|':'
op|'{'
nl|'\n'
string|"'source_filename_format'"
op|':'
string|"'%Y%m%d%H*'"
op|','
nl|'\n'
string|"'class_path'"
op|':'
nl|'\n'
string|"'swift.stats.access_processor.AccessLogProcessor'"
nl|'\n'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'p'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'('
name|'access_proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
DECL|function|get_object_data
name|'def'
name|'get_object_data'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'self'
op|'.'
name|'access_test_line'
op|']'
newline|'\n'
dedent|''
name|'p'
op|'.'
name|'get_object_data'
op|'='
name|'get_object_data'
newline|'\n'
name|'result'
op|'='
name|'p'
op|'.'
name|'process_one_file'
op|'('
string|"'access'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
op|'('
string|"'acct'"
op|','
string|"'2010'"
op|','
string|"'07'"
op|','
string|"'09'"
op|','
string|"'04'"
op|')'
op|':'
nl|'\n'
op|'{'
op|'('
string|"'public'"
op|','
string|"'object'"
op|','
string|"'GET'"
op|','
string|"'2xx'"
op|')'
op|':'
number|'1'
op|','
nl|'\n'
op|'('
string|"'public'"
op|','
string|"'bytes_out'"
op|')'
op|':'
number|'95'
op|','
nl|'\n'
string|"'marker_query'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'format_query'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'delimiter_query'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'path_query'"
op|':'
number|'0'
op|','
nl|'\n'
op|'('
string|"'public'"
op|','
string|"'bytes_in'"
op|')'
op|':'
number|'6'
op|','
nl|'\n'
string|"'prefix_query'"
op|':'
number|'0'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_process_one_access_file_error
dedent|''
name|'def'
name|'test_process_one_access_file_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'access_proxy_config'
op|'='
name|'self'
op|'.'
name|'proxy_config'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'access_proxy_config'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'log-processor-access'"
op|':'
op|'{'
nl|'\n'
string|"'source_filename_format'"
op|':'
string|"'%Y%m%d%H*'"
op|','
nl|'\n'
string|"'class_path'"
op|':'
nl|'\n'
string|"'swift.stats.access_processor.AccessLogProcessor'"
nl|'\n'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'p'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'('
name|'access_proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'_internal_proxy'
op|'='
name|'DumbInternalProxy'
op|'('
name|'code'
op|'='
number|'500'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'log_processor'
op|'.'
name|'BadFileDownload'
op|','
name|'p'
op|'.'
name|'process_one_file'
op|','
nl|'\n'
string|"'access'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_get_container_listing
dedent|''
name|'def'
name|'test_get_container_listing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'('
name|'self'
op|'.'
name|'proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'_internal_proxy'
op|'='
name|'DumbInternalProxy'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'p'
op|'.'
name|'get_container_listing'
op|'('
string|"'a'"
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
string|"'2010/03/14/13/obj1'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
name|'result'
op|'='
name|'p'
op|'.'
name|'get_container_listing'
op|'('
string|"'a'"
op|','
string|"'foo'"
op|','
name|'listing_filter'
op|'='
name|'expected'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
name|'result'
op|'='
name|'p'
op|'.'
name|'get_container_listing'
op|'('
string|"'a'"
op|','
string|"'foo'"
op|','
name|'start_date'
op|'='
string|"'2010031412'"
op|','
nl|'\n'
name|'end_date'
op|'='
string|"'2010031414'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
string|"'2010/03/14/13/obj1'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
name|'result'
op|'='
name|'p'
op|'.'
name|'get_container_listing'
op|'('
string|"'a'"
op|','
string|"'foo'"
op|','
name|'start_date'
op|'='
string|"'2010031414'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
name|'result'
op|'='
name|'p'
op|'.'
name|'get_container_listing'
op|'('
string|"'a'"
op|','
string|"'foo'"
op|','
name|'start_date'
op|'='
string|"'2010031410'"
op|','
nl|'\n'
name|'end_date'
op|'='
string|"'2010031412'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
name|'result'
op|'='
name|'p'
op|'.'
name|'get_container_listing'
op|'('
string|"'a'"
op|','
string|"'foo'"
op|','
name|'start_date'
op|'='
string|"'2010031412'"
op|','
nl|'\n'
name|'end_date'
op|'='
string|"'2010031413'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
string|"'2010/03/14/13/obj1'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_get_object_data
dedent|''
name|'def'
name|'test_get_object_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'('
name|'self'
op|'.'
name|'proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'_internal_proxy'
op|'='
name|'DumbInternalProxy'
op|'('
op|')'
newline|'\n'
name|'result'
op|'='
name|'list'
op|'('
name|'p'
op|'.'
name|'get_object_data'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
name|'False'
op|')'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
string|"'obj'"
op|','
string|"'data'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
name|'result'
op|'='
name|'list'
op|'('
name|'p'
op|'.'
name|'get_object_data'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o.gz'"
op|','
name|'True'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_get_object_data_errors
dedent|''
name|'def'
name|'test_get_object_data_errors'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'('
name|'self'
op|'.'
name|'proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'_internal_proxy'
op|'='
name|'DumbInternalProxy'
op|'('
name|'code'
op|'='
number|'500'
op|')'
newline|'\n'
name|'result'
op|'='
name|'p'
op|'.'
name|'get_object_data'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'log_processor'
op|'.'
name|'BadFileDownload'
op|','
name|'list'
op|','
name|'result'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'_internal_proxy'
op|'='
name|'DumbInternalProxy'
op|'('
name|'bad_compressed'
op|'='
name|'True'
op|')'
newline|'\n'
name|'result'
op|'='
name|'p'
op|'.'
name|'get_object_data'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o.gz'"
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'log_processor'
op|'.'
name|'BadFileDownload'
op|','
name|'list'
op|','
name|'result'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'_internal_proxy'
op|'='
name|'DumbInternalProxy'
op|'('
name|'timeout'
op|'='
name|'True'
op|')'
newline|'\n'
name|'result'
op|'='
name|'p'
op|'.'
name|'get_object_data'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'log_processor'
op|'.'
name|'BadFileDownload'
op|','
name|'list'
op|','
name|'result'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_get_stat_totals
dedent|''
name|'def'
name|'test_get_stat_totals'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stats_proxy_config'
op|'='
name|'self'
op|'.'
name|'proxy_config'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'stats_proxy_config'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'log-processor-stats'"
op|':'
op|'{'
nl|'\n'
string|"'class_path'"
op|':'
nl|'\n'
string|"'swift.stats.stats_processor.StatsLogProcessor'"
nl|'\n'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'p'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'('
name|'stats_proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'_internal_proxy'
op|'='
name|'DumbInternalProxy'
op|'('
op|')'
newline|'\n'
DECL|function|get_object_data
name|'def'
name|'get_object_data'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'self'
op|'.'
name|'stats_test_line'
op|']'
newline|'\n'
dedent|''
name|'p'
op|'.'
name|'get_object_data'
op|'='
name|'get_object_data'
newline|'\n'
name|'result'
op|'='
name|'p'
op|'.'
name|'process_one_file'
op|'('
string|"'stats'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'y/m/d/h/o'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
op|'('
string|"'account'"
op|','
string|"'y'"
op|','
string|"'m'"
op|','
string|"'d'"
op|','
string|"'h'"
op|')'
op|':'
nl|'\n'
op|'{'
string|"'replica_count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'object_count'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'container_count'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'bytes_used'"
op|':'
number|'3'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_generate_keylist_mapping
dedent|''
name|'def'
name|'test_generate_keylist_mapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'p'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'('
name|'self'
op|'.'
name|'proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'result'
op|'='
name|'p'
op|'.'
name|'generate_keylist_mapping'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_generate_keylist_mapping_with_dummy_plugins
dedent|''
name|'def'
name|'test_generate_keylist_mapping_with_dummy_plugins'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|Plugin1
indent|'        '
name|'class'
name|'Plugin1'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|keylist_mapping
indent|'            '
name|'def'
name|'keylist_mapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|','
string|"'c'"
op|':'
string|"'d'"
op|','
string|"'e'"
op|':'
op|'['
string|"'f'"
op|','
string|"'g'"
op|']'
op|'}'
newline|'\n'
DECL|class|Plugin2
dedent|''
dedent|''
name|'class'
name|'Plugin2'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|keylist_mapping
indent|'            '
name|'def'
name|'keylist_mapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'a'"
op|':'
string|"'1'"
op|','
string|"'e'"
op|':'
string|"'2'"
op|','
string|"'h'"
op|':'
string|"'3'"
op|'}'
newline|'\n'
dedent|''
dedent|''
name|'p'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'('
name|'self'
op|'.'
name|'proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'p'
op|'.'
name|'plugins'
op|'['
string|"'plugin1'"
op|']'
op|'='
op|'{'
string|"'instance'"
op|':'
name|'Plugin1'
op|'('
op|')'
op|'}'
newline|'\n'
name|'p'
op|'.'
name|'plugins'
op|'['
string|"'plugin2'"
op|']'
op|'='
op|'{'
string|"'instance'"
op|':'
name|'Plugin2'
op|'('
op|')'
op|'}'
newline|'\n'
name|'result'
op|'='
name|'p'
op|'.'
name|'generate_keylist_mapping'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'a'"
op|':'
name|'set'
op|'('
op|'['
string|"'b'"
op|','
string|"'1'"
op|']'
op|')'
op|','
string|"'c'"
op|':'
string|"'d'"
op|','
string|"'e'"
op|':'
name|'set'
op|'('
op|'['
string|"'2'"
op|','
string|"'f'"
op|','
string|"'g'"
op|']'
op|')'
op|','
nl|'\n'
string|"'h'"
op|':'
string|"'3'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'result'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_access_keylist_mapping_format
dedent|''
name|'def'
name|'test_access_keylist_mapping_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proxy_config'
op|'='
name|'self'
op|'.'
name|'proxy_config'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'proxy_config'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'log-processor-access'"
op|':'
op|'{'
nl|'\n'
string|"'source_filename_format'"
op|':'
string|"'%Y%m%d%H*'"
op|','
nl|'\n'
string|"'class_path'"
op|':'
nl|'\n'
string|"'swift.stats.access_processor.AccessLogProcessor'"
nl|'\n'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'p'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'('
name|'proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'mapping'
op|'='
name|'p'
op|'.'
name|'generate_keylist_mapping'
op|'('
op|')'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'mapping'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# these only work for Py2.7+'
nl|'\n'
comment|'#self.assertIsInstance(k, str)'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'k'
op|','
name|'str'
op|')'
op|','
name|'type'
op|'('
name|'k'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_stats_keylist_mapping_format
dedent|''
dedent|''
name|'def'
name|'test_stats_keylist_mapping_format'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proxy_config'
op|'='
name|'self'
op|'.'
name|'proxy_config'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'proxy_config'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'log-processor-stats'"
op|':'
op|'{'
nl|'\n'
string|"'class_path'"
op|':'
nl|'\n'
string|"'swift.stats.stats_processor.StatsLogProcessor'"
nl|'\n'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'p'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'('
name|'proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'mapping'
op|'='
name|'p'
op|'.'
name|'generate_keylist_mapping'
op|'('
op|')'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'mapping'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# these only work for Py2.7+'
nl|'\n'
comment|'#self.assertIsInstance(k, str)'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'k'
op|','
name|'str'
op|')'
op|','
name|'type'
op|'('
name|'k'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_collate_worker
dedent|''
dedent|''
name|'def'
name|'test_collate_worker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'_internal_proxy'
op|'='
name|'DumbInternalProxy'
op|'('
op|')'
newline|'\n'
DECL|function|get_object_data
name|'def'
name|'get_object_data'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
name|'self'
op|'.'
name|'access_test_line'
op|']'
newline|'\n'
dedent|''
name|'orig_get_object_data'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'get_object_data'
newline|'\n'
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'get_object_data'
op|'='
name|'get_object_data'
newline|'\n'
name|'proxy_config'
op|'='
name|'self'
op|'.'
name|'proxy_config'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'proxy_config'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'log-processor-access'"
op|':'
op|'{'
nl|'\n'
string|"'source_filename_format'"
op|':'
string|"'%Y%m%d%H*'"
op|','
nl|'\n'
string|"'class_path'"
op|':'
nl|'\n'
string|"'swift.stats.access_processor.AccessLogProcessor'"
nl|'\n'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'processor_args'
op|'='
op|'('
name|'proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'q_in'
op|'='
name|'Queue'
op|'.'
name|'Queue'
op|'('
op|')'
newline|'\n'
name|'q_out'
op|'='
name|'Queue'
op|'.'
name|'Queue'
op|'('
op|')'
newline|'\n'
name|'work_request'
op|'='
op|'('
string|"'access'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'q_in'
op|'.'
name|'put'
op|'('
name|'work_request'
op|')'
newline|'\n'
name|'q_in'
op|'.'
name|'put'
op|'('
name|'None'
op|')'
newline|'\n'
name|'log_processor'
op|'.'
name|'collate_worker'
op|'('
name|'processor_args'
op|','
name|'q_in'
op|','
name|'q_out'
op|')'
newline|'\n'
name|'item'
op|','
name|'ret'
op|'='
name|'q_out'
op|'.'
name|'get'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'item'
op|','
name|'work_request'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
op|'('
string|"'acct'"
op|','
string|"'2010'"
op|','
string|"'07'"
op|','
string|"'09'"
op|','
string|"'04'"
op|')'
op|':'
nl|'\n'
op|'{'
op|'('
string|"'public'"
op|','
string|"'object'"
op|','
string|"'GET'"
op|','
string|"'2xx'"
op|')'
op|':'
number|'1'
op|','
nl|'\n'
op|'('
string|"'public'"
op|','
string|"'bytes_out'"
op|')'
op|':'
number|'95'
op|','
nl|'\n'
string|"'marker_query'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'format_query'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'delimiter_query'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'path_query'"
op|':'
number|'0'
op|','
nl|'\n'
op|'('
string|"'public'"
op|','
string|"'bytes_in'"
op|')'
op|':'
number|'6'
op|','
nl|'\n'
string|"'prefix_query'"
op|':'
number|'0'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ret'
op|','
name|'expected'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'_internal_proxy'
op|'='
name|'None'
newline|'\n'
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'get_object_data'
op|'='
name|'orig_get_object_data'
newline|'\n'
nl|'\n'
DECL|function|test_collate_worker_error
dedent|''
dedent|''
name|'def'
name|'test_collate_worker_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|get_object_data
indent|'        '
name|'def'
name|'get_object_data'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
op|')'
newline|'\n'
dedent|''
name|'orig_get_object_data'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'get_object_data'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'get_object_data'
op|'='
name|'get_object_data'
newline|'\n'
name|'proxy_config'
op|'='
name|'self'
op|'.'
name|'proxy_config'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'proxy_config'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'log-processor-access'"
op|':'
op|'{'
nl|'\n'
string|"'source_filename_format'"
op|':'
string|"'%Y%m%d%H*'"
op|','
nl|'\n'
string|"'class_path'"
op|':'
nl|'\n'
string|"'swift.stats.access_processor.AccessLogProcessor'"
nl|'\n'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'processor_args'
op|'='
op|'('
name|'proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'q_in'
op|'='
name|'Queue'
op|'.'
name|'Queue'
op|'('
op|')'
newline|'\n'
name|'q_out'
op|'='
name|'Queue'
op|'.'
name|'Queue'
op|'('
op|')'
newline|'\n'
name|'work_request'
op|'='
op|'('
string|"'access'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'q_in'
op|'.'
name|'put'
op|'('
name|'work_request'
op|')'
newline|'\n'
name|'q_in'
op|'.'
name|'put'
op|'('
name|'None'
op|')'
newline|'\n'
name|'log_processor'
op|'.'
name|'collate_worker'
op|'('
name|'processor_args'
op|','
name|'q_in'
op|','
name|'q_out'
op|')'
newline|'\n'
name|'item'
op|','
name|'ret'
op|'='
name|'q_out'
op|'.'
name|'get'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'item'
op|','
name|'work_request'
op|')'
newline|'\n'
comment|'# these only work for Py2.7+'
nl|'\n'
comment|'#self.assertIsInstance(ret, log_processor.BadFileDownload)'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'ret'
op|','
name|'Exception'
op|')'
op|','
name|'type'
op|'('
name|'ret'
op|')'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'get_object_data'
op|'='
name|'orig_get_object_data'
newline|'\n'
nl|'\n'
DECL|function|test_multiprocess_collate
dedent|''
dedent|''
name|'def'
name|'test_multiprocess_collate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'_internal_proxy'
op|'='
name|'DumbInternalProxy'
op|'('
op|')'
newline|'\n'
DECL|function|get_object_data
name|'def'
name|'get_object_data'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
name|'self'
op|'.'
name|'access_test_line'
op|']'
newline|'\n'
dedent|''
name|'orig_get_object_data'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'get_object_data'
newline|'\n'
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'get_object_data'
op|'='
name|'get_object_data'
newline|'\n'
name|'proxy_config'
op|'='
name|'self'
op|'.'
name|'proxy_config'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'proxy_config'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'log-processor-access'"
op|':'
op|'{'
nl|'\n'
string|"'source_filename_format'"
op|':'
string|"'%Y%m%d%H*'"
op|','
nl|'\n'
string|"'class_path'"
op|':'
nl|'\n'
string|"'swift.stats.access_processor.AccessLogProcessor'"
nl|'\n'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'processor_args'
op|'='
op|'('
name|'proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'item'
op|'='
op|'('
string|"'access'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'logs_to_process'
op|'='
op|'['
name|'item'
op|']'
newline|'\n'
name|'results'
op|'='
name|'log_processor'
op|'.'
name|'multiprocess_collate'
op|'('
name|'processor_args'
op|','
nl|'\n'
name|'logs_to_process'
op|','
nl|'\n'
number|'1'
op|')'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'results'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|'('
name|'item'
op|','
op|'{'
op|'('
string|"'acct'"
op|','
string|"'2010'"
op|','
string|"'07'"
op|','
string|"'09'"
op|','
string|"'04'"
op|')'
op|':'
nl|'\n'
op|'{'
op|'('
string|"'public'"
op|','
string|"'object'"
op|','
string|"'GET'"
op|','
string|"'2xx'"
op|')'
op|':'
number|'1'
op|','
nl|'\n'
op|'('
string|"'public'"
op|','
string|"'bytes_out'"
op|')'
op|':'
number|'95'
op|','
nl|'\n'
string|"'marker_query'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'format_query'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'delimiter_query'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'path_query'"
op|':'
number|'0'
op|','
nl|'\n'
op|'('
string|"'public'"
op|','
string|"'bytes_in'"
op|')'
op|':'
number|'6'
op|','
nl|'\n'
string|"'prefix_query'"
op|':'
number|'0'
op|'}'
op|'}'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'results'
op|','
name|'expected'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'_internal_proxy'
op|'='
name|'None'
newline|'\n'
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'get_object_data'
op|'='
name|'orig_get_object_data'
newline|'\n'
nl|'\n'
DECL|function|test_multiprocess_collate_errors
dedent|''
dedent|''
name|'def'
name|'test_multiprocess_collate_errors'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|get_object_data
indent|'        '
name|'def'
name|'get_object_data'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'log_processor'
op|'.'
name|'BadFileDownload'
op|'('
op|')'
newline|'\n'
dedent|''
name|'orig_get_object_data'
op|'='
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'get_object_data'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'get_object_data'
op|'='
name|'get_object_data'
newline|'\n'
name|'proxy_config'
op|'='
name|'self'
op|'.'
name|'proxy_config'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'proxy_config'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'log-processor-access'"
op|':'
op|'{'
nl|'\n'
string|"'source_filename_format'"
op|':'
string|"'%Y%m%d%H*'"
op|','
nl|'\n'
string|"'class_path'"
op|':'
nl|'\n'
string|"'swift.stats.access_processor.AccessLogProcessor'"
nl|'\n'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'processor_args'
op|'='
op|'('
name|'proxy_config'
op|','
name|'DumbLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'item'
op|'='
op|'('
string|"'access'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'logs_to_process'
op|'='
op|'['
name|'item'
op|']'
newline|'\n'
name|'results'
op|'='
name|'log_processor'
op|'.'
name|'multiprocess_collate'
op|'('
name|'processor_args'
op|','
nl|'\n'
name|'logs_to_process'
op|','
nl|'\n'
number|'1'
op|')'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'results'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'results'
op|','
name|'expected'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'_internal_proxy'
op|'='
name|'None'
newline|'\n'
name|'log_processor'
op|'.'
name|'LogProcessor'
op|'.'
name|'get_object_data'
op|'='
name|'orig_get_object_data'
newline|'\n'
nl|'\n'
DECL|class|TestLogProcessorDaemon
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestLogProcessorDaemon'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_get_lookback_interval
indent|'    '
name|'def'
name|'test_get_lookback_interval'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockLogProcessorDaemon
indent|'        '
name|'class'
name|'MockLogProcessorDaemon'
op|'('
name|'log_processor'
op|'.'
name|'LogProcessorDaemon'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'lookback_hours'
op|','
name|'lookback_window'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'lookback_hours'
op|'='
name|'lookback_hours'
newline|'\n'
name|'self'
op|'.'
name|'lookback_window'
op|'='
name|'lookback_window'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
DECL|variable|d
indent|'            '
name|'d'
op|'='
name|'datetime'
op|'.'
name|'datetime'
newline|'\n'
nl|'\n'
name|'for'
name|'x'
name|'in'
op|'['
nl|'\n'
op|'['
name|'d'
op|'('
number|'2011'
op|','
number|'1'
op|','
number|'1'
op|')'
op|','
number|'0'
op|','
number|'0'
op|','
name|'None'
op|','
name|'None'
op|']'
op|','
nl|'\n'
op|'['
name|'d'
op|'('
number|'2011'
op|','
number|'1'
op|','
number|'1'
op|')'
op|','
number|'120'
op|','
number|'0'
op|','
string|"'2010122700'"
op|','
name|'None'
op|']'
op|','
nl|'\n'
op|'['
name|'d'
op|'('
number|'2011'
op|','
number|'1'
op|','
number|'1'
op|')'
op|','
number|'120'
op|','
number|'24'
op|','
string|"'2010122700'"
op|','
string|"'2010122800'"
op|']'
op|','
nl|'\n'
op|'['
name|'d'
op|'('
number|'2010'
op|','
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'4'
op|')'
op|','
number|'120'
op|','
number|'48'
op|','
string|"'2009122803'"
op|','
string|"'2009123003'"
op|']'
op|','
nl|'\n'
op|'['
name|'d'
op|'('
number|'2009'
op|','
number|'5'
op|','
number|'6'
op|','
number|'7'
op|','
number|'8'
op|')'
op|','
number|'1200'
op|','
number|'100'
op|','
string|"'2009031707'"
op|','
string|"'2009032111'"
op|']'
op|','
nl|'\n'
op|'['
name|'d'
op|'('
number|'2008'
op|','
number|'9'
op|','
number|'10'
op|','
number|'11'
op|','
number|'12'
op|')'
op|','
number|'3000'
op|','
number|'1000'
op|','
string|"'2008050811'"
op|','
string|"'2008061903'"
op|']'
op|','
nl|'\n'
op|']'
op|':'
newline|'\n'
nl|'\n'
indent|'                '
name|'log_processor'
op|'.'
name|'now'
op|'='
name|'lambda'
op|':'
name|'x'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'d'
op|'='
name|'MockLogProcessorDaemon'
op|'('
name|'x'
op|'['
number|'1'
op|']'
op|','
name|'x'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'('
name|'x'
op|'['
number|'3'
op|']'
op|','
name|'x'
op|'['
number|'4'
op|']'
op|')'
op|','
name|'d'
op|'.'
name|'get_lookback_interval'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'log_processor'
op|'.'
name|'now'
op|'='
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'now'
newline|'\n'
nl|'\n'
DECL|member|test_get_processed_files_list
dedent|''
dedent|''
name|'def'
name|'test_get_processed_files_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockLogProcessor
indent|'        '
name|'class'
name|'MockLogProcessor'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'stream'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'stream'
op|'='
name|'stream'
newline|'\n'
nl|'\n'
DECL|member|get_object_data
dedent|''
name|'def'
name|'get_object_data'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'stream'
newline|'\n'
nl|'\n'
DECL|class|MockLogProcessorDaemon
dedent|''
dedent|''
name|'class'
name|'MockLogProcessorDaemon'
op|'('
name|'log_processor'
op|'.'
name|'LogProcessorDaemon'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'stream'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'log_processor'
op|'='
name|'MockLogProcessor'
op|'('
name|'stream'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_processor_account'
op|'='
string|"'account'"
newline|'\n'
name|'self'
op|'.'
name|'log_processor_container'
op|'='
string|"'container'"
newline|'\n'
name|'self'
op|'.'
name|'processed_files_filename'
op|'='
string|"'filename'"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'file_list'
op|'='
name|'set'
op|'('
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'s'
op|','
name|'l'
name|'in'
op|'['
op|'['
string|"''"
op|','
name|'None'
op|']'
op|','
nl|'\n'
op|'['
name|'pickle'
op|'.'
name|'dumps'
op|'('
name|'set'
op|'('
op|')'
op|')'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
op|','
name|'set'
op|'('
op|')'
op|']'
op|','
nl|'\n'
op|'['
name|'pickle'
op|'.'
name|'dumps'
op|'('
name|'file_list'
op|')'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
op|','
name|'file_list'
op|']'
op|','
nl|'\n'
op|']'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'l'
op|','
nl|'\n'
name|'MockLogProcessorDaemon'
op|'('
name|'s'
op|')'
op|'.'
name|'get_processed_files_list'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_processed_files_list_bad_file_downloads
dedent|''
dedent|''
name|'def'
name|'test_get_processed_files_list_bad_file_downloads'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockLogProcessor
indent|'        '
name|'class'
name|'MockLogProcessor'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'status_code'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'err'
op|'='
name|'log_processor'
op|'.'
name|'BadFileDownload'
op|'('
name|'status_code'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_object_data
dedent|''
name|'def'
name|'get_object_data'
op|'('
name|'self'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'k'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'self'
op|'.'
name|'err'
newline|'\n'
nl|'\n'
DECL|class|MockLogProcessorDaemon
dedent|''
dedent|''
name|'class'
name|'MockLogProcessorDaemon'
op|'('
name|'log_processor'
op|'.'
name|'LogProcessorDaemon'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'status_code'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'log_processor'
op|'='
name|'MockLogProcessor'
op|'('
name|'status_code'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_processor_account'
op|'='
string|"'account'"
newline|'\n'
name|'self'
op|'.'
name|'log_processor_container'
op|'='
string|"'container'"
newline|'\n'
name|'self'
op|'.'
name|'processed_files_filename'
op|'='
string|"'filename'"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'c'
op|','
name|'l'
name|'in'
op|'['
op|'['
number|'404'
op|','
name|'set'
op|'('
op|')'
op|']'
op|','
op|'['
number|'503'
op|','
name|'None'
op|']'
op|','
op|'['
name|'None'
op|','
name|'None'
op|']'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'l'
op|','
nl|'\n'
name|'MockLogProcessorDaemon'
op|'('
name|'c'
op|')'
op|'.'
name|'get_processed_files_list'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_aggregate_data
dedent|''
dedent|''
name|'def'
name|'test_get_aggregate_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# when run "for real"'
nl|'\n'
comment|'# the various keys/values in the input and output'
nl|'\n'
comment|'# dictionaries are often not simple strings'
nl|'\n'
comment|'# for testing we can use keys that are easier to work with'
nl|'\n'
nl|'\n'
indent|'        '
name|'processed_files'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'data_in'
op|'='
op|'['
nl|'\n'
op|'['
string|"'file1'"
op|','
op|'{'
nl|'\n'
string|"'acct1_time1'"
op|':'
op|'{'
string|"'field1'"
op|':'
number|'1'
op|','
string|"'field2'"
op|':'
number|'2'
op|','
string|"'field3'"
op|':'
number|'3'
op|'}'
op|','
nl|'\n'
string|"'acct1_time2'"
op|':'
op|'{'
string|"'field1'"
op|':'
number|'4'
op|','
string|"'field2'"
op|':'
number|'5'
op|'}'
op|','
nl|'\n'
string|"'acct2_time1'"
op|':'
op|'{'
string|"'field1'"
op|':'
number|'6'
op|','
string|"'field2'"
op|':'
number|'7'
op|'}'
op|','
nl|'\n'
string|"'acct3_time3'"
op|':'
op|'{'
string|"'field1'"
op|':'
number|'8'
op|','
string|"'field2'"
op|':'
number|'9'
op|'}'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|']'
op|','
nl|'\n'
op|'['
string|"'file2'"
op|','
op|'{'
string|"'acct1_time1'"
op|':'
op|'{'
string|"'field1'"
op|':'
number|'10'
op|'}'
op|'}'
op|']'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'expected_data_out'
op|'='
op|'{'
nl|'\n'
string|"'acct1_time1'"
op|':'
op|'{'
string|"'field1'"
op|':'
number|'11'
op|','
string|"'field2'"
op|':'
number|'2'
op|','
string|"'field3'"
op|':'
number|'3'
op|'}'
op|','
nl|'\n'
string|"'acct1_time2'"
op|':'
op|'{'
string|"'field1'"
op|':'
number|'4'
op|','
string|"'field2'"
op|':'
number|'5'
op|'}'
op|','
nl|'\n'
string|"'acct2_time1'"
op|':'
op|'{'
string|"'field1'"
op|':'
number|'6'
op|','
string|"'field2'"
op|':'
number|'7'
op|'}'
op|','
nl|'\n'
string|"'acct3_time3'"
op|':'
op|'{'
string|"'field1'"
op|':'
number|'8'
op|','
string|"'field2'"
op|':'
number|'9'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
DECL|class|MockLogProcessorDaemon
name|'class'
name|'MockLogProcessorDaemon'
op|'('
name|'log_processor'
op|'.'
name|'LogProcessorDaemon'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'d'
op|'='
name|'MockLogProcessorDaemon'
op|'('
op|')'
newline|'\n'
name|'data_out'
op|'='
name|'d'
op|'.'
name|'get_aggregate_data'
op|'('
name|'processed_files'
op|','
name|'data_in'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'expected_data_out'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'v'
op|','
name|'data_out'
op|'['
name|'k'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'set'
op|'('
op|'['
string|"'file1'"
op|','
string|"'file2'"
op|']'
op|')'
op|','
name|'processed_files'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_final_info
dedent|''
name|'def'
name|'test_get_final_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# when run "for real"'
nl|'\n'
comment|'# the various keys/values in the input and output'
nl|'\n'
comment|'# dictionaries are often not simple strings'
nl|'\n'
comment|'# for testing we can use keys/values that are easier to work with'
nl|'\n'
nl|'\n'
DECL|class|MockLogProcessorDaemon
indent|'        '
name|'class'
name|'MockLogProcessorDaemon'
op|'('
name|'log_processor'
op|'.'
name|'LogProcessorDaemon'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_keylist_mapping'
op|'='
op|'{'
nl|'\n'
string|"'out_field1'"
op|':'
op|'['
string|"'field1'"
op|','
string|"'field2'"
op|','
string|"'field3'"
op|']'
op|','
nl|'\n'
string|"'out_field2'"
op|':'
op|'['
string|"'field2'"
op|','
string|"'field3'"
op|']'
op|','
nl|'\n'
string|"'out_field3'"
op|':'
op|'['
string|"'field3'"
op|']'
op|','
nl|'\n'
string|"'out_field4'"
op|':'
string|"'field4'"
op|','
nl|'\n'
string|"'out_field5'"
op|':'
op|'['
string|"'field6'"
op|','
string|"'field7'"
op|','
string|"'field8'"
op|']'
op|','
nl|'\n'
string|"'out_field6'"
op|':'
op|'['
string|"'field6'"
op|']'
op|','
nl|'\n'
string|"'out_field7'"
op|':'
string|"'field7'"
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'data_in'
op|'='
op|'{'
nl|'\n'
string|"'acct1_time1'"
op|':'
op|'{'
string|"'field1'"
op|':'
number|'11'
op|','
string|"'field2'"
op|':'
number|'2'
op|','
string|"'field3'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'field4'"
op|':'
number|'8'
op|','
string|"'field5'"
op|':'
number|'11'
op|'}'
op|','
nl|'\n'
string|"'acct1_time2'"
op|':'
op|'{'
string|"'field1'"
op|':'
number|'4'
op|','
string|"'field2'"
op|':'
number|'5'
op|'}'
op|','
nl|'\n'
string|"'acct2_time1'"
op|':'
op|'{'
string|"'field1'"
op|':'
number|'6'
op|','
string|"'field2'"
op|':'
number|'7'
op|'}'
op|','
nl|'\n'
string|"'acct3_time3'"
op|':'
op|'{'
string|"'field1'"
op|':'
number|'8'
op|','
string|"'field2'"
op|':'
number|'9'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'expected_data_out'
op|'='
op|'{'
nl|'\n'
string|"'acct1_time1'"
op|':'
op|'{'
string|"'out_field1'"
op|':'
number|'16'
op|','
string|"'out_field2'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'out_field3'"
op|':'
number|'3'
op|','
string|"'out_field4'"
op|':'
number|'8'
op|','
string|"'out_field5'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'out_field6'"
op|':'
number|'0'
op|','
string|"'out_field7'"
op|':'
number|'0'
op|','
op|'}'
op|','
nl|'\n'
string|"'acct1_time2'"
op|':'
op|'{'
string|"'out_field1'"
op|':'
number|'9'
op|','
string|"'out_field2'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'out_field3'"
op|':'
number|'0'
op|','
string|"'out_field4'"
op|':'
number|'0'
op|','
string|"'out_field5'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'out_field6'"
op|':'
number|'0'
op|','
string|"'out_field7'"
op|':'
number|'0'
op|','
op|'}'
op|','
nl|'\n'
string|"'acct2_time1'"
op|':'
op|'{'
string|"'out_field1'"
op|':'
number|'13'
op|','
string|"'out_field2'"
op|':'
number|'7'
op|','
nl|'\n'
string|"'out_field3'"
op|':'
number|'0'
op|','
string|"'out_field4'"
op|':'
number|'0'
op|','
string|"'out_field5'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'out_field6'"
op|':'
number|'0'
op|','
string|"'out_field7'"
op|':'
number|'0'
op|','
op|'}'
op|','
nl|'\n'
string|"'acct3_time3'"
op|':'
op|'{'
string|"'out_field1'"
op|':'
number|'17'
op|','
string|"'out_field2'"
op|':'
number|'9'
op|','
nl|'\n'
string|"'out_field3'"
op|':'
number|'0'
op|','
string|"'out_field4'"
op|':'
number|'0'
op|','
string|"'out_field5'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'out_field6'"
op|':'
number|'0'
op|','
string|"'out_field7'"
op|':'
number|'0'
op|','
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'expected_data_out'
op|','
nl|'\n'
name|'MockLogProcessorDaemon'
op|'('
op|')'
op|'.'
name|'get_final_info'
op|'('
name|'data_in'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_store_processed_files_list
dedent|''
name|'def'
name|'test_store_processed_files_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockInternalProxy
indent|'        '
name|'class'
name|'MockInternalProxy'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'test'
op|','
name|'daemon'
op|','
name|'processed_files'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'test'
op|'='
name|'test'
newline|'\n'
name|'self'
op|'.'
name|'daemon'
op|'='
name|'daemon'
newline|'\n'
name|'self'
op|'.'
name|'processed_files'
op|'='
name|'processed_files'
newline|'\n'
nl|'\n'
DECL|member|upload_file
dedent|''
name|'def'
name|'upload_file'
op|'('
name|'self'
op|','
name|'f'
op|','
name|'account'
op|','
name|'container'
op|','
name|'filename'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'processed_files'
op|','
nl|'\n'
name|'pickle'
op|'.'
name|'loads'
op|'('
name|'f'
op|'.'
name|'getvalue'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'log_processor_account'
op|','
nl|'\n'
name|'account'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'log_processor_container'
op|','
nl|'\n'
name|'container'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'processed_files_filename'
op|','
nl|'\n'
name|'filename'
op|')'
newline|'\n'
nl|'\n'
DECL|class|MockLogProcessor
dedent|''
dedent|''
name|'class'
name|'MockLogProcessor'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'test'
op|','
name|'daemon'
op|','
name|'processed_files'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'internal_proxy'
op|'='
name|'MockInternalProxy'
op|'('
name|'test'
op|','
name|'daemon'
op|','
nl|'\n'
name|'processed_files'
op|')'
newline|'\n'
nl|'\n'
DECL|class|MockLogProcessorDaemon
dedent|''
dedent|''
name|'class'
name|'MockLogProcessorDaemon'
op|'('
name|'log_processor'
op|'.'
name|'LogProcessorDaemon'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'test'
op|','
name|'processed_files'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'log_processor'
op|'='
name|'MockLogProcessor'
op|'('
name|'test'
op|','
name|'self'
op|','
name|'processed_files'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_processor_account'
op|'='
string|"'account'"
newline|'\n'
name|'self'
op|'.'
name|'log_processor_container'
op|'='
string|"'container'"
newline|'\n'
name|'self'
op|'.'
name|'processed_files_filename'
op|'='
string|"'filename'"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'processed_files'
op|'='
name|'set'
op|'('
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|']'
op|')'
newline|'\n'
name|'MockLogProcessorDaemon'
op|'('
name|'self'
op|','
name|'processed_files'
op|')'
op|'.'
name|'store_processed_files_list'
op|'('
name|'processed_files'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_output
dedent|''
name|'def'
name|'test_get_output'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockLogProcessorDaemon
indent|'        '
name|'class'
name|'MockLogProcessorDaemon'
op|'('
name|'log_processor'
op|'.'
name|'LogProcessorDaemon'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_keylist_mapping'
op|'='
op|'{'
string|"'a'"
op|':'
name|'None'
op|','
string|"'b'"
op|':'
name|'None'
op|','
string|"'c'"
op|':'
name|'None'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'data_in'
op|'='
op|'{'
nl|'\n'
op|'('
string|"'acct1'"
op|','
number|'2010'
op|','
number|'1'
op|','
number|'1'
op|','
number|'0'
op|')'
op|':'
op|'{'
string|"'a'"
op|':'
number|'1'
op|','
string|"'b'"
op|':'
number|'2'
op|','
string|"'c'"
op|':'
number|'3'
op|'}'
op|','
nl|'\n'
op|'('
string|"'acct1'"
op|','
number|'2010'
op|','
number|'10'
op|','
number|'10'
op|','
number|'10'
op|')'
op|':'
op|'{'
string|"'a'"
op|':'
number|'10'
op|','
string|"'b'"
op|':'
number|'20'
op|','
string|"'c'"
op|':'
number|'30'
op|'}'
op|','
nl|'\n'
op|'('
string|"'acct2'"
op|','
number|'2008'
op|','
number|'3'
op|','
number|'6'
op|','
number|'9'
op|')'
op|':'
op|'{'
string|"'a'"
op|':'
number|'8'
op|','
string|"'b'"
op|':'
number|'9'
op|','
string|"'c'"
op|':'
number|'12'
op|'}'
op|','
nl|'\n'
op|'('
string|"'acct3'"
op|','
number|'2005'
op|','
number|'4'
op|','
number|'8'
op|','
number|'16'
op|')'
op|':'
op|'{'
string|"'a'"
op|':'
number|'1'
op|','
string|"'b'"
op|':'
number|'5'
op|','
string|"'c'"
op|':'
number|'25'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'expected_data_out'
op|'='
op|'['
nl|'\n'
op|'['
string|"'data_ts'"
op|','
string|"'account'"
op|','
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|']'
op|','
nl|'\n'
op|'['
string|"'2010/01/01 00:00:00'"
op|','
string|"'acct1'"
op|','
string|"'1'"
op|','
string|"'2'"
op|','
string|"'3'"
op|']'
op|','
nl|'\n'
op|'['
string|"'2010/10/10 10:00:00'"
op|','
string|"'acct1'"
op|','
string|"'10'"
op|','
string|"'20'"
op|','
string|"'30'"
op|']'
op|','
nl|'\n'
op|'['
string|"'2008/03/06 09:00:00'"
op|','
string|"'acct2'"
op|','
string|"'8'"
op|','
string|"'9'"
op|','
string|"'12'"
op|']'
op|','
nl|'\n'
op|'['
string|"'2005/04/08 16:00:00'"
op|','
string|"'acct3'"
op|','
string|"'1'"
op|','
string|"'5'"
op|','
string|"'25'"
op|']'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'data_out'
op|'='
name|'MockLogProcessorDaemon'
op|'('
op|')'
op|'.'
name|'get_output'
op|'('
name|'data_in'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'expected_data_out'
op|'['
number|'0'
op|']'
op|','
name|'data_out'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'row'
name|'in'
name|'data_out'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'row'
name|'in'
name|'expected_data_out'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'row'
name|'in'
name|'expected_data_out'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'row'
name|'in'
name|'data_out'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_store_output
dedent|''
dedent|''
name|'def'
name|'test_store_output'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'real_strftime'
op|'='
name|'time'
op|'.'
name|'strftime'
newline|'\n'
name|'mock_strftime_return'
op|'='
string|"'2010/03/02/01/'"
newline|'\n'
DECL|function|mock_strftime
name|'def'
name|'mock_strftime'
op|'('
name|'format'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'%Y/%m/%d/%H/'"
op|','
name|'format'
op|')'
newline|'\n'
name|'return'
name|'mock_strftime_return'
newline|'\n'
dedent|''
name|'log_processor'
op|'.'
name|'time'
op|'.'
name|'strftime'
op|'='
name|'mock_strftime'
newline|'\n'
nl|'\n'
name|'data_in'
op|'='
op|'['
nl|'\n'
op|'['
string|"'data_ts'"
op|','
string|"'account'"
op|','
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|']'
op|','
nl|'\n'
op|'['
string|"'2010/10/10 10:00:00'"
op|','
string|"'acct1'"
op|','
string|"'1'"
op|','
string|"'2'"
op|','
string|"'3'"
op|']'
op|','
nl|'\n'
op|'['
string|"'2010/10/10 10:00:00'"
op|','
string|"'acct1'"
op|','
string|"'10'"
op|','
string|"'20'"
op|','
string|"'30'"
op|']'
op|','
nl|'\n'
op|'['
string|"'2008/03/06 09:00:00'"
op|','
string|"'acct2'"
op|','
string|"'8'"
op|','
string|"'9'"
op|','
string|"'12'"
op|']'
op|','
nl|'\n'
op|'['
string|"'2005/04/08 16:00:00'"
op|','
string|"'acct3'"
op|','
string|"'1'"
op|','
string|"'5'"
op|','
string|"'25'"
op|']'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'expected_output'
op|'='
string|"'\\n'"
op|'.'
name|'join'
op|'('
op|'['
string|"','"
op|'.'
name|'join'
op|'('
name|'row'
op|')'
name|'for'
name|'row'
name|'in'
name|'data_in'
op|']'
op|')'
newline|'\n'
name|'h'
op|'='
name|'hashlib'
op|'.'
name|'md5'
op|'('
name|'expected_output'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'expected_filename'
op|'='
string|"'%s%s.csv.gz'"
op|'%'
op|'('
name|'mock_strftime_return'
op|','
name|'h'
op|')'
newline|'\n'
nl|'\n'
DECL|class|MockInternalProxy
name|'class'
name|'MockInternalProxy'
op|':'
newline|'\n'
DECL|member|__init__
indent|'                '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'test'
op|','
name|'daemon'
op|','
name|'expected_filename'
op|','
nl|'\n'
name|'expected_output'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'test'
op|'='
name|'test'
newline|'\n'
name|'self'
op|'.'
name|'daemon'
op|'='
name|'daemon'
newline|'\n'
name|'self'
op|'.'
name|'expected_filename'
op|'='
name|'expected_filename'
newline|'\n'
name|'self'
op|'.'
name|'expected_output'
op|'='
name|'expected_output'
newline|'\n'
nl|'\n'
DECL|member|upload_file
dedent|''
name|'def'
name|'upload_file'
op|'('
name|'self'
op|','
name|'f'
op|','
name|'account'
op|','
name|'container'
op|','
name|'filename'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'log_processor_account'
op|','
nl|'\n'
name|'account'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'log_processor_container'
op|','
nl|'\n'
name|'container'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'expected_filename'
op|','
name|'filename'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'expected_output'
op|','
name|'f'
op|'.'
name|'getvalue'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|MockLogProcessor
dedent|''
dedent|''
name|'class'
name|'MockLogProcessor'
op|':'
newline|'\n'
DECL|member|__init__
indent|'                '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'test'
op|','
name|'daemon'
op|','
name|'expected_filename'
op|','
nl|'\n'
name|'expected_output'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'internal_proxy'
op|'='
name|'MockInternalProxy'
op|'('
name|'test'
op|','
name|'daemon'
op|','
nl|'\n'
name|'expected_filename'
op|','
name|'expected_output'
op|')'
newline|'\n'
nl|'\n'
DECL|class|MockLogProcessorDaemon
dedent|''
dedent|''
name|'class'
name|'MockLogProcessorDaemon'
op|'('
name|'log_processor'
op|'.'
name|'LogProcessorDaemon'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'                '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'test'
op|','
name|'expected_filename'
op|','
name|'expected_output'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'log_processor'
op|'='
name|'MockLogProcessor'
op|'('
name|'test'
op|','
name|'self'
op|','
nl|'\n'
name|'expected_filename'
op|','
name|'expected_output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_processor_account'
op|'='
string|"'account'"
newline|'\n'
name|'self'
op|'.'
name|'log_processor_container'
op|'='
string|"'container'"
newline|'\n'
name|'self'
op|'.'
name|'processed_files_filename'
op|'='
string|"'filename'"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'MockLogProcessorDaemon'
op|'('
name|'self'
op|','
name|'expected_filename'
op|','
name|'expected_output'
op|')'
op|'.'
name|'store_output'
op|'('
name|'data_in'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'log_processor'
op|'.'
name|'time'
op|'.'
name|'strftime'
op|'='
name|'real_strftime'
newline|'\n'
nl|'\n'
DECL|member|test_keylist_mapping
dedent|''
dedent|''
name|'def'
name|'test_keylist_mapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Kind of lame test to see if the propery is both'
nl|'\n'
comment|'# generated by a particular method and cached properly.'
nl|'\n'
comment|'# The method that actually generates the mapping is'
nl|'\n'
comment|'# tested elsewhere.'
nl|'\n'
nl|'\n'
indent|'        '
name|'value_return'
op|'='
string|"'keylist_mapping'"
newline|'\n'
DECL|class|MockLogProcessor
name|'class'
name|'MockLogProcessor'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'call_count'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|generate_keylist_mapping
dedent|''
name|'def'
name|'generate_keylist_mapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'call_count'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'value_return'
newline|'\n'
nl|'\n'
DECL|class|MockLogProcessorDaemon
dedent|''
dedent|''
name|'class'
name|'MockLogProcessorDaemon'
op|'('
name|'log_processor'
op|'.'
name|'LogProcessorDaemon'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'log_processor'
op|'='
name|'MockLogProcessor'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_keylist_mapping'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'d'
op|'='
name|'MockLogProcessorDaemon'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'value_return'
op|','
name|'d'
op|'.'
name|'keylist_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'value_return'
op|','
name|'d'
op|'.'
name|'keylist_mapping'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'1'
op|','
name|'d'
op|'.'
name|'log_processor'
op|'.'
name|'call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_process_logs
dedent|''
name|'def'
name|'test_process_logs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'mock_logs_to_process'
op|'='
string|"'logs_to_process'"
newline|'\n'
name|'mock_processed_files'
op|'='
string|"'processed_files'"
newline|'\n'
nl|'\n'
name|'real_multiprocess_collate'
op|'='
name|'log_processor'
op|'.'
name|'multiprocess_collate'
newline|'\n'
name|'multiprocess_collate_return'
op|'='
string|"'multiprocess_collate_return'"
newline|'\n'
nl|'\n'
name|'get_aggregate_data_return'
op|'='
string|"'get_aggregate_data_return'"
newline|'\n'
name|'get_final_info_return'
op|'='
string|"'get_final_info_return'"
newline|'\n'
name|'get_output_return'
op|'='
string|"'get_output_return'"
newline|'\n'
nl|'\n'
DECL|class|MockLogProcessorDaemon
name|'class'
name|'MockLogProcessorDaemon'
op|'('
name|'log_processor'
op|'.'
name|'LogProcessorDaemon'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'                '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'test'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'test'
op|'='
name|'test'
newline|'\n'
name|'self'
op|'.'
name|'total_conf'
op|'='
string|"'total_conf'"
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
string|"'logger'"
newline|'\n'
name|'self'
op|'.'
name|'worker_count'
op|'='
string|"'worker_count'"
newline|'\n'
nl|'\n'
DECL|member|get_aggregate_data
dedent|''
name|'def'
name|'get_aggregate_data'
op|'('
name|'self'
op|','
name|'processed_files'
op|','
name|'results'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'mock_processed_files'
op|','
name|'processed_files'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'multiprocess_collate_return'
op|','
name|'results'
op|')'
newline|'\n'
name|'return'
name|'get_aggregate_data_return'
newline|'\n'
nl|'\n'
DECL|member|get_final_info
dedent|''
name|'def'
name|'get_final_info'
op|'('
name|'self'
op|','
name|'aggr_data'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'get_aggregate_data_return'
op|','
name|'aggr_data'
op|')'
newline|'\n'
name|'return'
name|'get_final_info_return'
newline|'\n'
nl|'\n'
DECL|member|get_output
dedent|''
name|'def'
name|'get_output'
op|'('
name|'self'
op|','
name|'final_info'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'get_final_info_return'
op|','
name|'final_info'
op|')'
newline|'\n'
name|'return'
name|'get_output_return'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'d'
op|'='
name|'MockLogProcessorDaemon'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_multiprocess_collate
name|'def'
name|'mock_multiprocess_collate'
op|'('
name|'processor_args'
op|','
name|'logs_to_process'
op|','
nl|'\n'
name|'worker_count'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'d'
op|'.'
name|'total_conf'
op|','
name|'processor_args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'d'
op|'.'
name|'logger'
op|','
name|'processor_args'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_logs_to_process'
op|','
name|'logs_to_process'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'d'
op|'.'
name|'worker_count'
op|','
name|'worker_count'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'multiprocess_collate_return'
newline|'\n'
nl|'\n'
dedent|''
name|'log_processor'
op|'.'
name|'multiprocess_collate'
op|'='
name|'mock_multiprocess_collate'
newline|'\n'
nl|'\n'
name|'output'
op|'='
name|'d'
op|'.'
name|'process_logs'
op|'('
name|'mock_logs_to_process'
op|','
name|'mock_processed_files'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'get_output_return'
op|','
name|'output'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'log_processor'
op|'.'
name|'multiprocess_collate'
op|'='
name|'real_multiprocess_collate'
newline|'\n'
nl|'\n'
DECL|member|test_run_once_get_processed_files_list_returns_none
dedent|''
dedent|''
name|'def'
name|'test_run_once_get_processed_files_list_returns_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockLogProcessor
indent|'        '
name|'class'
name|'MockLogProcessor'
op|':'
newline|'\n'
DECL|member|get_data_list
indent|'            '
name|'def'
name|'get_data_list'
op|'('
name|'self'
op|','
name|'lookback_start'
op|','
name|'lookback_end'
op|','
nl|'\n'
name|'processed_files'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'unittest'
op|'.'
name|'TestCase'
op|'.'
name|'failureException'
op|','
string|"'Method should not be called'"
newline|'\n'
nl|'\n'
DECL|class|MockLogProcessorDaemon
dedent|''
dedent|''
name|'class'
name|'MockLogProcessorDaemon'
op|'('
name|'log_processor'
op|'.'
name|'LogProcessorDaemon'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'='
name|'DumbLogger'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_processor'
op|'='
name|'MockLogProcessor'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_lookback_interval
dedent|''
name|'def'
name|'get_lookback_interval'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
nl|'\n'
DECL|member|get_processed_files_list
dedent|''
name|'def'
name|'get_processed_files_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'MockLogProcessorDaemon'
op|'('
op|')'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_once_no_logs_to_process
dedent|''
name|'def'
name|'test_run_once_no_logs_to_process'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockLogProcessor
indent|'        '
name|'class'
name|'MockLogProcessor'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'daemon'
op|','
name|'test'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'daemon'
op|'='
name|'daemon'
newline|'\n'
name|'self'
op|'.'
name|'test'
op|'='
name|'test'
newline|'\n'
nl|'\n'
DECL|member|get_data_list
dedent|''
name|'def'
name|'get_data_list'
op|'('
name|'self'
op|','
name|'lookback_start'
op|','
name|'lookback_end'
op|','
nl|'\n'
name|'processed_files'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'lookback_start'
op|','
nl|'\n'
name|'lookback_start'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'lookback_end'
op|','
nl|'\n'
name|'lookback_end'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'processed_files'
op|','
nl|'\n'
name|'processed_files'
op|')'
newline|'\n'
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|class|MockLogProcessorDaemon
dedent|''
dedent|''
name|'class'
name|'MockLogProcessorDaemon'
op|'('
name|'log_processor'
op|'.'
name|'LogProcessorDaemon'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'test'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'='
name|'DumbLogger'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_processor'
op|'='
name|'MockLogProcessor'
op|'('
name|'self'
op|','
name|'test'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'lookback_start'
op|'='
string|"'lookback_start'"
newline|'\n'
name|'self'
op|'.'
name|'lookback_end'
op|'='
string|"'lookback_end'"
newline|'\n'
name|'self'
op|'.'
name|'processed_files'
op|'='
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_lookback_interval
dedent|''
name|'def'
name|'get_lookback_interval'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'lookback_start'
op|','
name|'self'
op|'.'
name|'lookback_end'
newline|'\n'
nl|'\n'
DECL|member|get_processed_files_list
dedent|''
name|'def'
name|'get_processed_files_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'processed_files'
newline|'\n'
nl|'\n'
DECL|member|process_logs
dedent|''
name|'def'
name|'process_logs'
op|'('
name|'logs_to_process'
op|','
name|'processed_files'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'unittest'
op|'.'
name|'TestCase'
op|'.'
name|'failureException'
op|','
string|"'Method should not be called'"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'MockLogProcessorDaemon'
op|'('
name|'self'
op|')'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
