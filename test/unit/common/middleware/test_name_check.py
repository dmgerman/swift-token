begin_unit
comment|'# Copyright (c) 2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
string|"'''\nUnit tests for Name_check filter\n\nCreated on February 29, 2012\n\n@author: eamonn-otoole\n'''"
newline|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'Request'
op|','
name|'Response'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
name|'import'
name|'name_check'
newline|'\n'
nl|'\n'
DECL|variable|MAX_LENGTH
name|'MAX_LENGTH'
op|'='
number|'255'
newline|'\n'
DECL|variable|FORBIDDEN_CHARS
name|'FORBIDDEN_CHARS'
op|'='
string|'\'\\\'\\"<>`\''
newline|'\n'
DECL|variable|FORBIDDEN_REGEXP
name|'FORBIDDEN_REGEXP'
op|'='
string|'"/\\./|/\\.\\./|/\\.$|/\\.\\.$"'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeApp
name|'class'
name|'FakeApp'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__call__
indent|'    '
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'Response'
op|'('
name|'body'
op|'='
string|'"OK"'
op|')'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestNameCheckMiddleware
dedent|''
dedent|''
name|'class'
name|'TestNameCheckMiddleware'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'conf'
op|'='
op|'{'
string|"'maximum_length'"
op|':'
name|'MAX_LENGTH'
op|','
string|"'forbidden_chars'"
op|':'
nl|'\n'
name|'FORBIDDEN_CHARS'
op|','
string|"'forbidden_regexp'"
op|':'
name|'FORBIDDEN_REGEXP'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'test_check'
op|'='
name|'name_check'
op|'.'
name|'filter_factory'
op|'('
name|'self'
op|'.'
name|'conf'
op|')'
op|'('
name|'FakeApp'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_valid_length_and_character
dedent|''
name|'def'
name|'test_valid_length_and_character'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"'/V1.0/'"
op|'+'
string|"'c'"
op|'*'
op|'('
name|'MAX_LENGTH'
op|'-'
number|'6'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
nl|'\n'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'test_check'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
string|"'OK'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_character
dedent|''
name|'def'
name|'test_invalid_character'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'c'
name|'in'
name|'self'
op|'.'
name|'conf'
op|'['
string|"'forbidden_chars'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
string|"'/V1.0/1234'"
op|'+'
name|'c'
op|'+'
string|"'5'"
newline|'\n'
name|'resp'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
name|'path'
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|')'
op|'.'
name|'get_response'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'test_check'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'resp'
op|'.'
name|'body'
op|','
nl|'\n'
op|'('
string|'"Object/Container/Account name contains forbidden chars "'
nl|'\n'
string|'"from %s"'
op|'%'
name|'self'
op|'.'
name|'conf'
op|'['
string|"'forbidden_chars'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_maximum_length_from_config
dedent|''
dedent|''
name|'def'
name|'test_maximum_length_from_config'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test invalid length'
nl|'\n'
indent|'        '
name|'orig_test_check'
op|'='
name|'self'
op|'.'
name|'test_check'
newline|'\n'
name|'conf'
op|'='
op|'{'
string|"'maximum_length'"
op|':'
string|'"500"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'test_check'
op|'='
name|'name_check'
op|'.'
name|'filter_factory'
op|'('
name|'conf'
op|')'
op|'('
name|'FakeApp'
op|'('
op|')'
op|')'
newline|'\n'
name|'path'
op|'='
string|"'/V1.0/a/c'"
op|'+'
string|"'o'"
op|'*'
op|'('
number|'500'
op|'-'
number|'8'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
nl|'\n'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'test_check'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'resp'
op|'.'
name|'body'
op|','
nl|'\n'
op|'('
string|'"Object/Container/Account name longer than the allowed "'
nl|'\n'
string|'"maximum 500"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
comment|'# test valid length'
nl|'\n'
name|'path'
op|'='
string|"'/V1.0/a/c'"
op|'+'
string|"'o'"
op|'*'
op|'('
name|'MAX_LENGTH'
op|'-'
number|'10'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
nl|'\n'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'test_check'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
string|"'OK'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'test_check'
op|'='
name|'orig_test_check'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_length
dedent|''
name|'def'
name|'test_invalid_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'path'
op|'='
string|"'/V1.0/'"
op|'+'
string|"'c'"
op|'*'
op|'('
name|'MAX_LENGTH'
op|'-'
number|'5'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
nl|'\n'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'test_check'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'resp'
op|'.'
name|'body'
op|','
nl|'\n'
op|'('
string|'"Object/Container/Account name longer than the allowed maximum %s"'
nl|'\n'
op|'%'
name|'self'
op|'.'
name|'conf'
op|'['
string|"'maximum_length'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_regexp
dedent|''
name|'def'
name|'test_invalid_regexp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'s'
name|'in'
op|'['
string|"'/.'"
op|','
string|"'/..'"
op|','
string|"'/./foo'"
op|','
string|"'/../foo'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
string|"'/V1.0/'"
op|'+'
name|'s'
newline|'\n'
name|'resp'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
name|'path'
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|')'
op|'.'
name|'get_response'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'test_check'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'resp'
op|'.'
name|'body'
op|','
nl|'\n'
op|'('
string|'"Object/Container/Account name contains a forbidden "'
nl|'\n'
string|'"substring from regular expression %s"'
nl|'\n'
op|'%'
name|'self'
op|'.'
name|'conf'
op|'['
string|"'forbidden_regexp'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_valid_regexp
dedent|''
dedent|''
name|'def'
name|'test_valid_regexp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'s'
name|'in'
op|'['
string|"'/...'"
op|','
string|"'/.\\.'"
op|','
string|"'/foo'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
string|"'/V1.0/'"
op|'+'
name|'s'
newline|'\n'
name|'resp'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
name|'path'
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|')'
op|'.'
name|'get_response'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'test_check'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
string|"'OK'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
