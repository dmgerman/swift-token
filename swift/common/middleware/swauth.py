begin_unit
comment|'# Copyright (c) 2010 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'simplejson'
name|'as'
name|'json'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'json'
newline|'\n'
dedent|''
name|'from'
name|'httplib'
name|'import'
name|'HTTPConnection'
op|','
name|'HTTPSConnection'
newline|'\n'
name|'from'
name|'time'
name|'import'
name|'gmtime'
op|','
name|'strftime'
op|','
name|'time'
newline|'\n'
name|'from'
name|'traceback'
name|'import'
name|'format_exc'
newline|'\n'
name|'from'
name|'urllib'
name|'import'
name|'quote'
op|','
name|'unquote'
newline|'\n'
name|'from'
name|'urlparse'
name|'import'
name|'urlparse'
newline|'\n'
name|'from'
name|'uuid'
name|'import'
name|'uuid4'
newline|'\n'
name|'from'
name|'hashlib'
name|'import'
name|'md5'
op|','
name|'sha1'
newline|'\n'
name|'import'
name|'hmac'
newline|'\n'
name|'import'
name|'base64'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'timeout'
name|'import'
name|'Timeout'
newline|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'TimeoutError'
newline|'\n'
name|'from'
name|'webob'
name|'import'
name|'Response'
op|','
name|'Request'
newline|'\n'
name|'from'
name|'webob'
op|'.'
name|'exc'
name|'import'
name|'HTTPAccepted'
op|','
name|'HTTPBadRequest'
op|','
name|'HTTPConflict'
op|','
name|'HTTPCreated'
op|','
name|'HTTPForbidden'
op|','
name|'HTTPNoContent'
op|','
name|'HTTPNotFound'
op|','
name|'HTTPServiceUnavailable'
op|','
name|'HTTPUnauthorized'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'bufferedhttp'
name|'import'
name|'http_connect_raw'
name|'as'
name|'http_connect'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
op|'.'
name|'acl'
name|'import'
name|'clean_acl'
op|','
name|'parse_acl'
op|','
name|'referrer_allowed'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'cache_from_env'
op|','
name|'get_logger'
op|','
name|'split_path'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Swauth
name|'class'
name|'Swauth'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Scalable authentication and authorization system that uses Swift as its\n    backing store.\n\n    :param app: The next WSGI app in the pipeline\n    :param conf: The dict of configuration values\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'app'
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'='
name|'conf'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'get_logger'
op|'('
name|'conf'
op|','
name|'log_route'
op|'='
string|"'swauth'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_headers'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'log_headers'"
op|')'
op|'=='
string|"'True'"
newline|'\n'
name|'self'
op|'.'
name|'reseller_prefix'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'reseller_prefix'"
op|','
string|"'AUTH'"
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'reseller_prefix'
name|'and'
name|'self'
op|'.'
name|'reseller_prefix'
op|'['
op|'-'
number|'1'
op|']'
op|'!='
string|"'_'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'reseller_prefix'
op|'+='
string|"'_'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'auth_prefix'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'auth_prefix'"
op|','
string|"'/auth/'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'auth_prefix'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'auth_prefix'
op|'='
string|"'/auth/'"
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'auth_prefix'
op|'['
number|'0'
op|']'
op|'!='
string|"'/'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'auth_prefix'
op|'='
string|"'/'"
op|'+'
name|'self'
op|'.'
name|'auth_prefix'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'auth_prefix'
op|'['
op|'-'
number|'1'
op|']'
op|'!='
string|"'/'"
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'auth_prefix'
op|'+='
string|"'/'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'auth_account'
op|'='
string|"'%s.auth'"
op|'%'
name|'self'
op|'.'
name|'reseller_prefix'
newline|'\n'
name|'self'
op|'.'
name|'default_swift_cluster'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'default_swift_cluster'"
op|','
nl|'\n'
string|"'local#http://127.0.0.1:8080/v1'"
op|')'
newline|'\n'
comment|'# This setting is a little messy because of the options it has to'
nl|'\n'
comment|'# provide. The basic format is cluster_name#url, such as the default'
nl|'\n'
comment|'# value of local#http://127.0.0.1:8080/v1.'
nl|'\n'
comment|'# If the URL given to the user needs to differ from the url used by'
nl|'\n'
comment|"# Swauth to create/delete accounts, there's a more complex format:"
nl|'\n'
comment|'# cluster_name#url#url, such as'
nl|'\n'
comment|'# local#https://public.com:8080/v1#http://private.com:8080/v1.'
nl|'\n'
name|'cluster_parts'
op|'='
name|'self'
op|'.'
name|'default_swift_cluster'
op|'.'
name|'split'
op|'('
string|"'#'"
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dsc_name'
op|'='
name|'cluster_parts'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'cluster_parts'
op|')'
op|'=='
number|'3'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'dsc_url'
op|'='
name|'cluster_parts'
op|'['
number|'1'
op|']'
op|'.'
name|'rstrip'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dsc_url2'
op|'='
name|'cluster_parts'
op|'['
number|'2'
op|']'
op|'.'
name|'rstrip'
op|'('
string|"'/'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'len'
op|'('
name|'cluster_parts'
op|')'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'dsc_url'
op|'='
name|'self'
op|'.'
name|'dsc_url2'
op|'='
name|'cluster_parts'
op|'['
number|'1'
op|']'
op|'.'
name|'rstrip'
op|'('
string|"'/'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Invalid cluster format'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'dsc_parsed'
op|'='
name|'urlparse'
op|'('
name|'self'
op|'.'
name|'dsc_url'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'dsc_parsed'
op|'.'
name|'scheme'
name|'not'
name|'in'
op|'('
string|"'http'"
op|','
string|"'https'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Cannot handle protocol scheme %s for url %s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'dsc_parsed'
op|'.'
name|'scheme'
op|','
name|'repr'
op|'('
name|'self'
op|'.'
name|'dsc_url'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'dsc_parsed2'
op|'='
name|'urlparse'
op|'('
name|'self'
op|'.'
name|'dsc_url2'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'dsc_parsed2'
op|'.'
name|'scheme'
name|'not'
name|'in'
op|'('
string|"'http'"
op|','
string|"'https'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Cannot handle protocol scheme %s for url %s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'dsc_parsed2'
op|'.'
name|'scheme'
op|','
name|'repr'
op|'('
name|'self'
op|'.'
name|'dsc_url2'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'super_admin_key'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'super_admin_key'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'super_admin_key'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
name|'_'
op|'('
string|"'No super_admin_key set in conf file! Exiting.'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'critical'
op|'('
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'raise'
name|'ValueError'
op|'('
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'token_life'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'token_life'"
op|','
number|'86400'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'timeout'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'node_timeout'"
op|','
number|'10'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'itoken'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'itoken_expires'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Accepts a standard WSGI application call, authenticating the request\n        and installing callback hooks for authorization and ACL header\n        validation. For an authenticated request, REMOTE_USER will be set to a\n        comma separated list of the user\'s groups.\n\n        With a non-empty reseller prefix, acts as the definitive auth service\n        for just tokens and accounts that begin with that prefix, but will deny\n        requests outside this prefix if no other auth middleware overrides it.\n\n        With an empty reseller prefix, acts as the definitive auth service only\n        for tokens that validate to a non-empty set of groups. For all other\n        requests, acts as the fallback auth service when no other auth\n        middleware overrides it.\n\n        Alternatively, if the request matches the self.auth_prefix, the request\n        will be routed through the internal auth request handler (self.handle).\n        This is to handle creating users, accounts, granting tokens, etc.\n        """'
newline|'\n'
name|'if'
string|"'HTTP_X_CF_TRANS_ID'"
name|'not'
name|'in'
name|'env'
op|':'
newline|'\n'
indent|'            '
name|'env'
op|'['
string|"'HTTP_X_CF_TRANS_ID'"
op|']'
op|'='
string|"'tx'"
op|'+'
name|'str'
op|'('
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'env'
op|'.'
name|'get'
op|'('
string|"'PATH_INFO'"
op|','
string|"''"
op|')'
op|'.'
name|'startswith'
op|'('
name|'self'
op|'.'
name|'auth_prefix'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'handle'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
dedent|''
name|'s3'
op|'='
name|'env'
op|'.'
name|'get'
op|'('
string|"'HTTP_AUTHORIZATION'"
op|')'
newline|'\n'
name|'token'
op|'='
name|'env'
op|'.'
name|'get'
op|'('
string|"'HTTP_X_AUTH_TOKEN'"
op|','
name|'env'
op|'.'
name|'get'
op|'('
string|"'HTTP_X_STORAGE_TOKEN'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'s3'
name|'or'
op|'('
name|'token'
name|'and'
name|'token'
op|'.'
name|'startswith'
op|'('
name|'self'
op|'.'
name|'reseller_prefix'
op|')'
op|')'
op|':'
newline|'\n'
comment|'# Note: Empty reseller_prefix will match all tokens.'
nl|'\n'
indent|'            '
name|'groups'
op|'='
name|'self'
op|'.'
name|'get_groups'
op|'('
name|'env'
op|','
name|'token'
op|')'
newline|'\n'
name|'if'
name|'groups'
op|':'
newline|'\n'
indent|'                '
name|'env'
op|'['
string|"'REMOTE_USER'"
op|']'
op|'='
name|'groups'
newline|'\n'
name|'user'
op|'='
name|'groups'
name|'and'
name|'groups'
op|'.'
name|'split'
op|'('
string|"','"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
name|'or'
string|"''"
newline|'\n'
comment|'# We know the proxy logs the token, so we augment it just a bit'
nl|'\n'
comment|'# to also log the authenticated user.'
nl|'\n'
name|'env'
op|'['
string|"'HTTP_X_AUTH_TOKEN'"
op|']'
op|'='
string|"'%s,%s'"
op|'%'
op|'('
name|'user'
op|','
string|"'s3'"
name|'if'
name|'s3'
name|'else'
name|'token'
op|')'
newline|'\n'
name|'env'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'self'
op|'.'
name|'authorize'
newline|'\n'
name|'env'
op|'['
string|"'swift.clean_acl'"
op|']'
op|'='
name|'clean_acl'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Unauthorized token'
nl|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'reseller_prefix'
op|':'
newline|'\n'
comment|"# Because I know I'm the definitive auth for this token, I"
nl|'\n'
comment|'# can deny it outright.'
nl|'\n'
indent|'                    '
name|'return'
name|'HTTPUnauthorized'
op|'('
op|')'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
comment|"# Because I'm not certain if I'm the definitive auth for empty"
nl|'\n'
comment|"# reseller_prefixed tokens, I won't overwrite swift.authorize."
nl|'\n'
dedent|''
name|'elif'
string|"'swift.authorize'"
name|'not'
name|'in'
name|'env'
op|':'
newline|'\n'
indent|'                    '
name|'env'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'self'
op|'.'
name|'denied_response'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'reseller_prefix'
op|':'
newline|'\n'
comment|'# With a non-empty reseller_prefix, I would like to be called'
nl|'\n'
comment|"# back for anonymous access to accounts I know I'm the"
nl|'\n'
comment|'# definitive auth for.'
nl|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'version'
op|','
name|'rest'
op|'='
name|'split_path'
op|'('
name|'env'
op|'.'
name|'get'
op|'('
string|"'PATH_INFO'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
number|'1'
op|','
number|'2'
op|','
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPNotFound'
op|'('
op|')'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'rest'
name|'and'
name|'rest'
op|'.'
name|'startswith'
op|'('
name|'self'
op|'.'
name|'reseller_prefix'
op|')'
op|':'
newline|'\n'
comment|"# Handle anonymous access to accounts I'm the definitive"
nl|'\n'
comment|'# auth for.'
nl|'\n'
indent|'                    '
name|'env'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'self'
op|'.'
name|'authorize'
newline|'\n'
name|'env'
op|'['
string|"'swift.clean_acl'"
op|']'
op|'='
name|'clean_acl'
newline|'\n'
comment|"# Not my token, not my account, I can't authorize this request,"
nl|'\n'
comment|'# deny all is a good idea if not already set...'
nl|'\n'
dedent|''
name|'elif'
string|"'swift.authorize'"
name|'not'
name|'in'
name|'env'
op|':'
newline|'\n'
indent|'                    '
name|'env'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'self'
op|'.'
name|'denied_response'
newline|'\n'
comment|"# Because I'm not certain if I'm the definitive auth for empty"
nl|'\n'
comment|"# reseller_prefixed accounts, I won't overwrite swift.authorize."
nl|'\n'
dedent|''
dedent|''
name|'elif'
string|"'swift.authorize'"
name|'not'
name|'in'
name|'env'
op|':'
newline|'\n'
indent|'                '
name|'env'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'self'
op|'.'
name|'authorize'
newline|'\n'
name|'env'
op|'['
string|"'swift.clean_acl'"
op|']'
op|'='
name|'clean_acl'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'self'
op|'.'
name|'app'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_groups
dedent|''
name|'def'
name|'get_groups'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'token'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get groups for the given token.\n\n        :param env: The current WSGI environment dictionary.\n        :param token: Token to validate and return a group string for.\n\n        :returns: None if the token is invalid or a string containing a comma\n                  separated list of groups the authenticated user is a member\n                  of. The first group in the list is also considered a unique\n                  identifier for that user.\n        """'
newline|'\n'
name|'groups'
op|'='
name|'None'
newline|'\n'
name|'memcache_client'
op|'='
name|'cache_from_env'
op|'('
name|'env'
op|')'
newline|'\n'
name|'if'
name|'memcache_client'
op|':'
newline|'\n'
indent|'            '
name|'memcache_key'
op|'='
string|"'%s/auth/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'reseller_prefix'
op|','
name|'token'
op|')'
newline|'\n'
name|'cached_auth_data'
op|'='
name|'memcache_client'
op|'.'
name|'get'
op|'('
name|'memcache_key'
op|')'
newline|'\n'
name|'if'
name|'cached_auth_data'
op|':'
newline|'\n'
indent|'                '
name|'expires'
op|','
name|'groups'
op|'='
name|'cached_auth_data'
newline|'\n'
name|'if'
name|'expires'
op|'<'
name|'time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'groups'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'env'
op|'.'
name|'get'
op|'('
string|"'HTTP_AUTHORIZATION'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'account'
op|'='
name|'env'
op|'['
string|"'HTTP_AUTHORIZATION'"
op|']'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'account'
op|','
name|'user'
op|','
name|'sign'
op|'='
name|'account'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
newline|'\n'
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|','
name|'user'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'env'
op|','
string|"'GET'"
op|','
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'x-object-meta-account-id'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'account_id'
op|'='
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-object-meta-account-id'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
newline|'\n'
name|'resp2'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'env'
op|','
string|"'HEAD'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp2'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'account_id'
op|'='
name|'resp2'
op|'.'
name|'headers'
op|'['
string|"'x-container-meta-account-id'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'env'
op|'['
string|"'PATH_INFO'"
op|']'
newline|'\n'
name|'env'
op|'['
string|"'PATH_INFO'"
op|']'
op|'='
name|'path'
op|'.'
name|'replace'
op|'('
string|'"%s:%s"'
op|'%'
op|'('
name|'account'
op|','
name|'user'
op|')'
op|','
nl|'\n'
name|'account_id'
op|','
number|'1'
op|')'
newline|'\n'
name|'detail'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
name|'password'
op|'='
name|'detail'
op|'['
string|"'auth'"
op|']'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'msg'
op|'='
name|'base64'
op|'.'
name|'urlsafe_b64decode'
op|'('
name|'unquote'
op|'('
name|'token'
op|')'
op|')'
newline|'\n'
name|'s'
op|'='
name|'base64'
op|'.'
name|'encodestring'
op|'('
name|'hmac'
op|'.'
name|'new'
op|'('
name|'detail'
op|'['
string|"'auth'"
op|']'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
op|'['
op|'-'
number|'1'
op|']'
op|','
nl|'\n'
name|'msg'
op|','
name|'sha1'
op|')'
op|'.'
name|'digest'
op|'('
op|')'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'if'
name|'s'
op|'!='
name|'sign'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'groups'
op|'='
op|'['
name|'g'
op|'['
string|"'name'"
op|']'
name|'for'
name|'g'
name|'in'
name|'detail'
op|'['
string|"'groups'"
op|']'
op|']'
newline|'\n'
name|'if'
string|"'.admin'"
name|'in'
name|'groups'
op|':'
newline|'\n'
indent|'                '
name|'groups'
op|'.'
name|'remove'
op|'('
string|"'.admin'"
op|')'
newline|'\n'
name|'groups'
op|'.'
name|'append'
op|'('
name|'account_id'
op|')'
newline|'\n'
dedent|''
name|'groups'
op|'='
string|"','"
op|'.'
name|'join'
op|'('
name|'groups'
op|')'
newline|'\n'
name|'return'
name|'groups'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'groups'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/.token_%s/%s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'token'
op|'['
op|'-'
number|'1'
op|']'
op|','
name|'token'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'env'
op|','
string|"'GET'"
op|','
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'detail'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'if'
name|'detail'
op|'['
string|"'expires'"
op|']'
op|'<'
name|'time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'make_request'
op|'('
name|'env'
op|','
string|"'DELETE'"
op|','
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'groups'
op|'='
op|'['
name|'g'
op|'['
string|"'name'"
op|']'
name|'for'
name|'g'
name|'in'
name|'detail'
op|'['
string|"'groups'"
op|']'
op|']'
newline|'\n'
name|'if'
string|"'.admin'"
name|'in'
name|'groups'
op|':'
newline|'\n'
indent|'                '
name|'groups'
op|'.'
name|'remove'
op|'('
string|"'.admin'"
op|')'
newline|'\n'
name|'groups'
op|'.'
name|'append'
op|'('
name|'detail'
op|'['
string|"'account_id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'groups'
op|'='
string|"','"
op|'.'
name|'join'
op|'('
name|'groups'
op|')'
newline|'\n'
name|'if'
name|'memcache_client'
op|':'
newline|'\n'
indent|'                '
name|'memcache_client'
op|'.'
name|'set'
op|'('
name|'memcache_key'
op|','
op|'('
name|'detail'
op|'['
string|"'expires'"
op|']'
op|','
name|'groups'
op|')'
op|','
nl|'\n'
name|'timeout'
op|'='
name|'float'
op|'('
name|'detail'
op|'['
string|"'expires'"
op|']'
op|'-'
name|'time'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'groups'
newline|'\n'
nl|'\n'
DECL|member|authorize
dedent|''
name|'def'
name|'authorize'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns None if the request is authorized to continue or a standard\n        WSGI response callable if not.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'version'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|'='
name|'split_path'
op|'('
name|'req'
op|'.'
name|'path'
op|','
number|'1'
op|','
number|'4'
op|','
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'account'
name|'or'
name|'not'
name|'account'
op|'.'
name|'startswith'
op|'('
name|'self'
op|'.'
name|'reseller_prefix'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'denied_response'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'user_groups'
op|'='
op|'('
name|'req'
op|'.'
name|'remote_user'
name|'or'
string|"''"
op|')'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
newline|'\n'
name|'if'
string|"'.reseller_admin'"
name|'in'
name|'user_groups'
name|'and'
name|'account'
op|'!='
name|'self'
op|'.'
name|'reseller_prefix'
name|'and'
name|'account'
op|'['
name|'len'
op|'('
name|'self'
op|'.'
name|'reseller_prefix'
op|')'
op|']'
op|'.'
name|'isalnum'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'account'
name|'in'
name|'user_groups'
name|'and'
op|'('
name|'req'
op|'.'
name|'method'
name|'not'
name|'in'
op|'('
string|"'DELETE'"
op|','
string|"'PUT'"
op|')'
name|'or'
name|'container'
op|')'
op|':'
newline|'\n'
comment|'# If the user is admin for the account and is not trying to do an'
nl|'\n'
comment|'# account DELETE or PUT...'
nl|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'referrers'
op|','
name|'groups'
op|'='
name|'parse_acl'
op|'('
name|'getattr'
op|'('
name|'req'
op|','
string|"'acl'"
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'if'
name|'referrer_allowed'
op|'('
name|'req'
op|'.'
name|'referer'
op|','
name|'referrers'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'req'
op|'.'
name|'remote_user'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'denied_response'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'user_group'
name|'in'
name|'user_groups'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'user_group'
name|'in'
name|'groups'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'self'
op|'.'
name|'denied_response'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|denied_response
dedent|''
name|'def'
name|'denied_response'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a standard WSGI response callable with the status of 403 or 401\n        depending on whether the REMOTE_USER is set or not.\n        """'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'remote_user'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPForbidden'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle
dedent|''
dedent|''
name|'def'
name|'handle'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        WSGI entry point for auth requests (ones that match the\n        self.auth_prefix).\n        Wraps env in webob.Request object and passes it down.\n\n        :param env: WSGI environment dictionary\n        :param start_response: WSGI callable\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'('
name|'env'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'auth_prefix'
op|':'
newline|'\n'
indent|'                '
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
dedent|''
name|'req'
op|'.'
name|'bytes_transferred'
op|'='
string|"'-'"
newline|'\n'
name|'req'
op|'.'
name|'client_disconnect'
op|'='
name|'False'
newline|'\n'
name|'if'
string|"'x-storage-token'"
name|'in'
name|'req'
op|'.'
name|'headers'
name|'and'
string|"'x-auth-token'"
name|'not'
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-auth-token'"
op|']'
op|'='
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-storage-token'"
op|']'
newline|'\n'
dedent|''
name|'if'
string|"'eventlet.posthooks'"
name|'in'
name|'env'
op|':'
newline|'\n'
indent|'                '
name|'env'
op|'['
string|"'eventlet.posthooks'"
op|']'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
name|'self'
op|'.'
name|'posthooklogger'
op|','
op|'('
name|'req'
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Lack of posthook support means that we have to log on the'
nl|'\n'
comment|'# start of the response, rather than after all the data has'
nl|'\n'
comment|'# been sent. This prevents logging client disconnects'
nl|'\n'
comment|'# differently than full transmissions.'
nl|'\n'
indent|'                '
name|'response'
op|'='
name|'self'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'posthooklogger'
op|'('
name|'env'
op|','
name|'req'
op|')'
newline|'\n'
name|'return'
name|'response'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'TimeoutError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"EXCEPTION IN handle: %s: %s"'
op|'%'
op|'('
name|'format_exc'
op|'('
op|')'
op|','
name|'env'
op|')'
newline|'\n'
name|'start_response'
op|'('
string|"'500 Server Error'"
op|','
nl|'\n'
op|'['
op|'('
string|"'Content-Type'"
op|','
string|"'text/plain'"
op|')'
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'Internal server error.\\n'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|handle_request
dedent|''
dedent|''
name|'def'
name|'handle_request'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Entry point for auth requests (ones that match the self.auth_prefix).\n        Should return a WSGI-style callable (such as webob.Response).\n\n        :param req: webob.Request object\n        """'
newline|'\n'
name|'req'
op|'.'
name|'start_time'
op|'='
name|'time'
op|'('
op|')'
newline|'\n'
name|'handler'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'version'
op|','
name|'account'
op|','
name|'user'
op|','
name|'_junk'
op|'='
name|'split_path'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
nl|'\n'
name|'minsegs'
op|'='
number|'1'
op|','
name|'maxsegs'
op|'='
number|'4'
op|','
name|'rest_with_last'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'version'
name|'in'
op|'('
string|"'v1'"
op|','
string|"'v1.0'"
op|','
string|"'auth'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'GET'"
op|':'
newline|'\n'
indent|'                '
name|'handler'
op|'='
name|'self'
op|'.'
name|'handle_get_token'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'version'
op|'=='
string|"'v2'"
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'GET'"
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'account'
name|'and'
name|'not'
name|'user'
op|':'
newline|'\n'
indent|'                    '
name|'handler'
op|'='
name|'self'
op|'.'
name|'handle_get_reseller'
newline|'\n'
dedent|''
name|'elif'
name|'account'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'not'
name|'user'
op|':'
newline|'\n'
indent|'                        '
name|'handler'
op|'='
name|'self'
op|'.'
name|'handle_get_account'
newline|'\n'
dedent|''
name|'elif'
name|'account'
op|'=='
string|"'.token'"
op|':'
newline|'\n'
indent|'                        '
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
name|'handler'
op|'='
name|'self'
op|'.'
name|'handle_validate_token'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'handler'
op|'='
name|'self'
op|'.'
name|'handle_get_user'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'elif'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'PUT'"
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'user'
op|':'
newline|'\n'
indent|'                    '
name|'handler'
op|'='
name|'self'
op|'.'
name|'handle_put_account'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'handler'
op|'='
name|'self'
op|'.'
name|'handle_put_user'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'DELETE'"
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'user'
op|':'
newline|'\n'
indent|'                    '
name|'handler'
op|'='
name|'self'
op|'.'
name|'handle_delete_account'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'handler'
op|'='
name|'self'
op|'.'
name|'handle_delete_user'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'POST'"
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'account'
op|'=='
string|"'.prep'"
op|':'
newline|'\n'
indent|'                    '
name|'handler'
op|'='
name|'self'
op|'.'
name|'handle_prep'
newline|'\n'
dedent|''
name|'elif'
name|'user'
op|'=='
string|"'.services'"
op|':'
newline|'\n'
indent|'                    '
name|'handler'
op|'='
name|'self'
op|'.'
name|'handle_set_services'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'not'
name|'handler'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'response'
op|'='
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'response'
op|'='
name|'handler'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'req'
op|'.'
name|'response'
newline|'\n'
nl|'\n'
DECL|member|handle_prep
dedent|''
name|'def'
name|'handle_prep'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handles the POST v2/.prep call for preparing the backing store Swift\n        cluster for use with the auth subsystem. Can only be called by\n        .super_admin.\n\n        :param req: The webob.Request to process.\n        :returns: webob.Response, 204 on success\n        """'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_super_admin'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPForbidden'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s'"
op|'%'
name|'self'
op|'.'
name|'auth_account'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'PUT'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not create the main auth account: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/.account_id'"
op|'%'
name|'self'
op|'.'
name|'auth_account'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'PUT'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not create container: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'container'
name|'in'
name|'xrange'
op|'('
number|'16'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/.token_%x'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'container'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'PUT'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'Could not create container: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'HTTPNoContent'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle_get_reseller
dedent|''
name|'def'
name|'handle_get_reseller'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handles the GET v2 call for getting general reseller information\n        (currently just a list of accounts). Can only be called by a\n        .reseller_admin.\n\n        On success, a JSON dictionary will be returned with a single `accounts`\n        key whose value is list of dicts. Each dict represents an account and\n        currently only contains the single key `name`. For example::\n\n            {"accounts": [{"name": "reseller"}, {"name": "test"},\n                          {"name": "test2"}]}\n\n        :param req: The webob.Request to process.\n        :returns: webob.Response, 2xx on success with a JSON dictionary as\n                  explained above.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_reseller_admin'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPForbidden'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'listing'
op|'='
op|'['
op|']'
newline|'\n'
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
string|"'/v1/%s?format=json&marker=%s'"
op|'%'
op|'('
name|'quote'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|')'
op|','
nl|'\n'
name|'quote'
op|'('
name|'marker'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'GET'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'Could not list main auth account: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'sublisting'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'sublisting'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'for'
name|'container'
name|'in'
name|'sublisting'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'container'
op|'['
string|"'name'"
op|']'
op|'['
number|'0'
op|']'
op|'!='
string|"'.'"
op|':'
newline|'\n'
indent|'                    '
name|'listing'
op|'.'
name|'append'
op|'('
op|'{'
string|"'name'"
op|':'
name|'container'
op|'['
string|"'name'"
op|']'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'marker'
op|'='
name|'sublisting'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'name'"
op|']'
newline|'\n'
dedent|''
name|'return'
name|'Response'
op|'('
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
op|'{'
string|"'accounts'"
op|':'
name|'listing'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle_get_account
dedent|''
name|'def'
name|'handle_get_account'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handles the GET v2/<account> call for getting account information.\n        Can only be called by an account .admin.\n\n        On success, a JSON dictionary will be returned containing the keys\n        `account_id`, `services`, and `users`. The `account_id` is the value\n        used when creating service accounts. The `services` value is a dict as\n        described in the :func:`handle_get_token` call. The `users` value is a\n        list of dicts, each dict representing a user and currently only\n        containing the single key `name`. For example::\n\n             {"account_id": "AUTH_018c3946-23f8-4efb-a8fb-b67aae8e4162",\n              "services": {"storage": {"default": "local",\n                                       "local": "http://127.0.0.1:8080/v1/AUTH_018c3946-23f8-4efb-a8fb-b67aae8e4162"}},\n              "users": [{"name": "tester"}, {"name": "tester3"}]}\n\n        :param req: The webob.Request to process.\n        :returns: webob.Response, 2xx on success with a JSON dictionary as\n                  explained above.\n        """'
newline|'\n'
name|'account'
op|'='
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'path_info'
name|'or'
name|'not'
name|'account'
op|'.'
name|'isalnum'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_account_admin'
op|'('
name|'req'
op|','
name|'account'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPForbidden'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/.services'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'GET'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not obtain the .services object: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'services'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'listing'
op|'='
op|'['
op|']'
newline|'\n'
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
string|"'/v1/%s?format=json&marker=%s'"
op|'%'
op|'('
name|'quote'
op|'('
string|"'%s/%s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
op|','
name|'quote'
op|'('
name|'marker'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'GET'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'Could not list in main auth account: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'account_id'
op|'='
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'X-Container-Meta-Account-Id'"
op|']'
newline|'\n'
name|'sublisting'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'sublisting'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'for'
name|'obj'
name|'in'
name|'sublisting'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'obj'
op|'['
string|"'name'"
op|']'
op|'['
number|'0'
op|']'
op|'!='
string|"'.'"
op|':'
newline|'\n'
indent|'                    '
name|'listing'
op|'.'
name|'append'
op|'('
op|'{'
string|"'name'"
op|':'
name|'obj'
op|'['
string|"'name'"
op|']'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'marker'
op|'='
name|'sublisting'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'name'"
op|']'
newline|'\n'
dedent|''
name|'return'
name|'Response'
op|'('
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
op|'{'
string|"'account_id'"
op|':'
name|'account_id'
op|','
nl|'\n'
string|"'services'"
op|':'
name|'services'
op|','
string|"'users'"
op|':'
name|'listing'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle_set_services
dedent|''
name|'def'
name|'handle_set_services'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handles the POST v2/<account>/.services call for setting services\n        information. Can only be called by a reseller .admin.\n\n        In the :func:`handle_get_account` (GET v2/<account>) call, a section of\n        the returned JSON dict is `services`. This section looks something like\n        this::\n\n              "services": {"storage": {"default": "local",\n                                       "local": "http://127.0.0.1:8080/v1/AUTH_018c3946-23f8-4efb-a8fb-b67aae8e4162"}}\n\n        Making use of this section is described in :func:`handle_get_token`.\n\n        This function allows setting values within this section for the\n        <account>, allowing the addition of new service end points or updating\n        existing ones.\n\n        The body of the POST request should contain a JSON dict with the\n        following format::\n\n            {"service_name": {"end_point_name": "end_point_value"}}\n\n        There can be multiple services and multiple end points in the same\n        call.\n\n        Any new services or end points will be added to the existing set of\n        services and end points. Any existing services with the same service\n        name will be merged with the new end points. Any existing end points\n        with the same end point name will have their values updated.\n\n        The updated services dictionary will be returned on success.\n\n        :param req: The webob.Request to process.\n        :returns: webob.Response, 2xx on success with the udpated services JSON\n                  dict as described above\n        """'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_reseller_admin'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPForbidden'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'account'
op|'='
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'path_info'
op|'!='
string|"'/.services'"
name|'or'
name|'not'
name|'account'
op|'.'
name|'isalnum'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'new_services'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'req'
op|'.'
name|'body'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
comment|'# Get the current services information'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/.services'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'GET'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not obtain services info: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'services'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'for'
name|'new_service'
op|','
name|'value'
name|'in'
name|'new_services'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'new_service'
name|'in'
name|'services'
op|':'
newline|'\n'
indent|'                '
name|'services'
op|'['
name|'new_service'
op|']'
op|'.'
name|'update'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'services'
op|'['
name|'new_service'
op|']'
op|'='
name|'value'
newline|'\n'
comment|'# Save the new services information'
nl|'\n'
dedent|''
dedent|''
name|'services'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
name|'services'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'PUT'"
op|','
name|'path'
op|','
nl|'\n'
name|'services'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not save .services object: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'Response'
op|'('
name|'request'
op|'='
name|'req'
op|','
name|'body'
op|'='
name|'services'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle_put_account
dedent|''
name|'def'
name|'handle_put_account'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handles the PUT v2/<account> call for adding an account to the auth\n        system. Can only be called by a .reseller_admin.\n\n        By default, a newly created UUID4 will be used with the reseller prefix\n        as the account id used when creating corresponding service accounts.\n        However, you can provide an X-Account-Suffix header to replace the\n        UUID4 part.\n\n        :param req: The webob.Request to process.\n        :returns: webob.Response, 2xx on success.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_reseller_admin'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPForbidden'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'account'
op|'='
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'path_info'
name|'or'
name|'not'
name|'account'
op|'.'
name|'isalnum'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
comment|'# Ensure the container in the main auth account exists (this'
nl|'\n'
comment|'# container represents the new account)'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'HEAD'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'PUT'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'Could not create account within main auth '"
nl|'\n'
string|"'account: %s %s'"
op|'%'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'x-container-meta-account-id'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|':'
newline|'\n'
comment|'# Account was already created'
nl|'\n'
indent|'                '
name|'return'
name|'HTTPAccepted'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not verify account within main auth '"
nl|'\n'
string|"'account: %s %s'"
op|'%'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'account_suffix'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-account-suffix'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'account_suffix'
op|':'
newline|'\n'
indent|'            '
name|'account_suffix'
op|'='
name|'str'
op|'('
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# Create the new account in the Swift cluster'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'%s/%s%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'dsc_parsed2'
op|'.'
name|'path'
op|','
nl|'\n'
name|'self'
op|'.'
name|'reseller_prefix'
op|','
name|'account_suffix'
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_conn'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'request'
op|'('
string|"'PUT'"
op|','
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Auth-Token'"
op|':'
name|'self'
op|'.'
name|'get_itoken'
op|'('
name|'req'
op|'.'
name|'environ'
op|')'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'Could not create account on the Swift '"
nl|'\n'
string|"'cluster: %s %s %s'"
op|'%'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|','
name|'resp'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'TimeoutError'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|"'ERROR: Exception while trying to communicate '"
nl|'\n'
string|"'with %(scheme)s://%(host)s:%(port)s/%(path)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'scheme'"
op|':'
name|'self'
op|'.'
name|'dsc_parsed2'
op|'.'
name|'scheme'
op|','
nl|'\n'
string|"'host'"
op|':'
name|'self'
op|'.'
name|'dsc_parsed2'
op|'.'
name|'hostname'
op|','
nl|'\n'
string|"'port'"
op|':'
name|'self'
op|'.'
name|'dsc_parsed2'
op|'.'
name|'port'
op|','
string|"'path'"
op|':'
name|'path'
op|'}'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
comment|'# Record the mapping from account id back to account name'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/.account_id/%s%s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'self'
op|'.'
name|'reseller_prefix'
op|','
name|'account_suffix'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'PUT'"
op|','
name|'path'
op|','
nl|'\n'
name|'account'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not create account id mapping: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
comment|'# Record the cluster url(s) for the account'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/.services'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
newline|'\n'
name|'services'
op|'='
op|'{'
string|"'storage'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'services'
op|'['
string|"'storage'"
op|']'
op|'['
name|'self'
op|'.'
name|'dsc_name'
op|']'
op|'='
string|"'%s/%s%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'dsc_url'
op|','
nl|'\n'
name|'self'
op|'.'
name|'reseller_prefix'
op|','
name|'account_suffix'
op|')'
newline|'\n'
name|'services'
op|'['
string|"'storage'"
op|']'
op|'['
string|"'default'"
op|']'
op|'='
name|'self'
op|'.'
name|'dsc_name'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'PUT'"
op|','
name|'path'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
name|'services'
op|')'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not create .services object: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
comment|'# Record the mapping from account name to the account id'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'POST'"
op|','
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Container-Meta-Account-Id'"
op|':'
string|"'%s%s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'reseller_prefix'
op|','
name|'account_suffix'
op|')'
op|'}'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not record the account id on the account: '"
nl|'\n'
string|"'%s %s'"
op|'%'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'HTTPCreated'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle_delete_account
dedent|''
name|'def'
name|'handle_delete_account'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handles the DELETE v2/<account> call for removing an account from the\n        auth system. Can only be called by a .reseller_admin.\n\n        :param req: The webob.Request to process.\n        :returns: webob.Response, 2xx on success.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_reseller_admin'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPForbidden'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'account'
op|'='
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'path_info'
name|'or'
name|'not'
name|'account'
op|'.'
name|'isalnum'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
comment|'# Make sure the account has no users and get the account_id'
nl|'\n'
dedent|''
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
string|"'/v1/%s?format=json&marker=%s'"
op|'%'
op|'('
name|'quote'
op|'('
string|"'%s/%s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
op|','
name|'quote'
op|'('
name|'marker'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'GET'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'Could not list in main auth account: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'account_id'
op|'='
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-container-meta-account-id'"
op|']'
newline|'\n'
name|'sublisting'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'sublisting'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'for'
name|'obj'
name|'in'
name|'sublisting'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'obj'
op|'['
string|"'name'"
op|']'
op|'['
number|'0'
op|']'
op|'!='
string|"'.'"
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPConflict'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'marker'
op|'='
name|'sublisting'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'name'"
op|']'
newline|'\n'
comment|'# Obtain the listing of services the account is on.'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/.services'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'GET'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
name|'and'
name|'resp'
op|'.'
name|'status_int'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not obtain .services object: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'services'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
comment|'# Delete the account on each cluster it is on.'
nl|'\n'
name|'deleted_any'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'name'
op|','
name|'url'
name|'in'
name|'services'
op|'['
string|"'storage'"
op|']'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'name'
op|'!='
string|"'default'"
op|':'
newline|'\n'
indent|'                    '
name|'parsed'
op|'='
name|'urlparse'
op|'('
name|'url'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'self'
op|'.'
name|'get_conn'
op|'('
name|'parsed'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'request'
op|'('
string|"'DELETE'"
op|','
name|'parsed'
op|'.'
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Auth-Token'"
op|':'
name|'self'
op|'.'
name|'get_itoken'
op|'('
name|'req'
op|'.'
name|'environ'
op|')'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'=='
number|'409'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'deleted_any'
op|':'
newline|'\n'
indent|'                            '
name|'raise'
name|'Exception'
op|'('
string|"'Managed to delete one or more '"
nl|'\n'
string|"'service end points, but failed with: '"
nl|'\n'
string|"'%s %s %s'"
op|'%'
op|'('
name|'url'
op|','
name|'resp'
op|'.'
name|'status'
op|','
name|'resp'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                            '
name|'return'
name|'HTTPConflict'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status'
op|'//'
number|'100'
op|'!='
number|'2'
name|'and'
name|'resp'
op|'.'
name|'status'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
name|'Exception'
op|'('
string|"'Could not delete account on the '"
nl|'\n'
string|"'Swift cluster: %s %s %s'"
op|'%'
nl|'\n'
op|'('
name|'url'
op|','
name|'resp'
op|'.'
name|'status'
op|','
name|'resp'
op|'.'
name|'reason'
op|')'
op|')'
newline|'\n'
dedent|''
name|'deleted_any'
op|'='
name|'True'
newline|'\n'
comment|'# Delete the .services object itself.'
nl|'\n'
dedent|''
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/.services'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'DELETE'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
name|'and'
name|'resp'
op|'.'
name|'status_int'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'Could not delete .services object: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
comment|'# Delete the account id mapping for the account.'
nl|'\n'
dedent|''
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/.account_id/%s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account_id'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'DELETE'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
name|'and'
name|'resp'
op|'.'
name|'status_int'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not delete account id mapping: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
comment|'# Delete the account marker itself.'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'DELETE'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
name|'and'
name|'resp'
op|'.'
name|'status_int'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not delete account marked: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'HTTPNoContent'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle_get_user
dedent|''
name|'def'
name|'handle_get_user'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handles the GET v2/<account>/<user> call for getting user information.\n        Can only be called by an account .admin.\n\n        On success, a JSON dict will be returned as described::\n\n            {"groups": [  # List of groups the user is a member of\n                {"name": "<act>:<usr>"},\n                    # The first group is a unique user identifier\n                {"name": "<account>"},\n                    # The second group is the auth account name\n                {"name": "<additional-group>"}\n                    # There may be additional groups, .admin being a special\n                    # group indicating an account admin and .reseller_admin\n                    # indicating a reseller admin.\n             ],\n             "auth": "plaintext:<key>"\n             # The auth-type and key for the user; currently only plaintext is\n             # implemented.\n            }\n\n        For example::\n\n            {"groups": [{"name": "test:tester"}, {"name": "test"},\n                        {"name": ".admin"}],\n             "auth": "plaintext:testing"}\n\n        If the <user> in the request is the special user `.groups`, the JSON\n        dict will contain a single key of `groups` whose value is a list of\n        dicts representing the active groups within the account. Each dict\n        currently has the single key `name`. For example::\n\n            {"groups": [{"name": ".admin"}, {"name": "test"},\n                        {"name": "test:tester"}, {"name": "test:tester3"}]}\n\n        :param req: The webob.Request to process.\n        :returns: webob.Response, 2xx on success with a JSON dictionary as\n                  explained above.\n        """'
newline|'\n'
name|'account'
op|'='
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
name|'user'
op|'='
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'path_info'
name|'or'
name|'not'
name|'account'
op|'.'
name|'isalnum'
op|'('
op|')'
name|'or'
op|'('
name|'not'
name|'user'
op|'.'
name|'isalnum'
op|'('
op|')'
name|'and'
name|'user'
op|'!='
string|"'.groups'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_account_admin'
op|'('
name|'req'
op|','
name|'account'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPForbidden'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'user'
op|'=='
string|"'.groups'"
op|':'
newline|'\n'
comment|'# TODO: This could be very slow for accounts with a really large'
nl|'\n'
comment|'# number of users. Speed could be improved by concurrently'
nl|'\n'
comment|"# requesting user group information. Then again, I don't *know*"
nl|'\n'
comment|"# it's slow for `normal` use cases, so testing should be done."
nl|'\n'
indent|'            '
name|'groups'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
string|"'/v1/%s?format=json&marker=%s'"
op|'%'
op|'('
name|'quote'
op|'('
string|"'%s/%s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
op|','
name|'quote'
op|'('
name|'marker'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'GET'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'Exception'
op|'('
string|"'Could not list in main auth account: '"
nl|'\n'
string|"'%s %s'"
op|'%'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'sublisting'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'sublisting'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'for'
name|'obj'
name|'in'
name|'sublisting'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'obj'
op|'['
string|"'name'"
op|']'
op|'['
number|'0'
op|']'
op|'!='
string|"'.'"
op|':'
newline|'\n'
indent|'                        '
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
nl|'\n'
name|'account'
op|','
name|'obj'
op|'['
string|"'name'"
op|']'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'GET'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not retrieve user object: '"
nl|'\n'
string|"'%s %s'"
op|'%'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'groups'
op|'.'
name|'update'
op|'('
name|'g'
op|'['
string|"'name'"
op|']'
nl|'\n'
name|'for'
name|'g'
name|'in'
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|'['
string|"'groups'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'marker'
op|'='
name|'sublisting'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'name'"
op|']'
newline|'\n'
dedent|''
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
op|'{'
string|"'groups'"
op|':'
nl|'\n'
op|'['
op|'{'
string|"'name'"
op|':'
name|'g'
op|'}'
name|'for'
name|'g'
name|'in'
name|'sorted'
op|'('
name|'groups'
op|')'
op|']'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|','
name|'user'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'GET'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'Could not retrieve user object: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'body'
op|'='
name|'resp'
op|'.'
name|'body'
newline|'\n'
dedent|''
name|'return'
name|'Response'
op|'('
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle_put_user
dedent|''
name|'def'
name|'handle_put_user'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handles the PUT v2/<account>/<user> call for adding a user to an\n        account.\n\n        X-Auth-User-Key represents the user\'s key, X-Auth-User-Admin may be set\n        to `true` to create an account .admin, and X-Auth-User-Reseller-Admin\n        may be set to `true` to create a .reseller_admin.\n\n        Can only be called by an account .admin unless the user is to be a\n        .reseller_admin, in which case the request must be by .super_admin.\n\n        :param req: The webob.Request to process.\n        :returns: webob.Response, 2xx on success.\n        """'
newline|'\n'
comment|'# Validate path info'
nl|'\n'
name|'account'
op|'='
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
name|'user'
op|'='
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
name|'key'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-user-key'"
op|')'
newline|'\n'
name|'admin'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-user-admin'"
op|')'
op|'=='
string|"'true'"
newline|'\n'
name|'reseller_admin'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-user-reseller-admin'"
op|')'
op|'=='
string|"'true'"
newline|'\n'
name|'if'
name|'reseller_admin'
op|':'
newline|'\n'
indent|'            '
name|'admin'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'req'
op|'.'
name|'path_info'
name|'or'
name|'not'
name|'account'
op|'.'
name|'isalnum'
op|'('
op|')'
name|'or'
name|'not'
name|'user'
op|'.'
name|'isalnum'
op|'('
op|')'
name|'or'
name|'not'
name|'key'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'reseller_admin'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_super_admin'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPForbidden'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'not'
name|'self'
op|'.'
name|'is_account_admin'
op|'('
name|'req'
op|','
name|'account'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPForbidden'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'HEAD'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not retrieve account id value: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'headers'
op|'='
op|'{'
string|"'X-Object-Meta-Account-Id'"
op|':'
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-container-meta-account-id'"
op|']'
op|'}'
newline|'\n'
comment|'# Create the object in the main auth account (this object represents'
nl|'\n'
comment|'# the user)'
nl|'\n'
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|','
name|'user'
op|')'
op|')'
newline|'\n'
name|'groups'
op|'='
op|'['
string|"'%s:%s'"
op|'%'
op|'('
name|'account'
op|','
name|'user'
op|')'
op|','
name|'account'
op|']'
newline|'\n'
name|'if'
name|'admin'
op|':'
newline|'\n'
indent|'            '
name|'groups'
op|'.'
name|'append'
op|'('
string|"'.admin'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'reseller_admin'
op|':'
newline|'\n'
indent|'            '
name|'groups'
op|'.'
name|'append'
op|'('
string|"'.reseller_admin'"
op|')'
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'PUT'"
op|','
name|'path'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
op|'{'
string|"'auth'"
op|':'
string|"'plaintext:%s'"
op|'%'
name|'key'
op|','
nl|'\n'
string|"'groups'"
op|':'
op|'['
op|'{'
string|"'name'"
op|':'
name|'g'
op|'}'
name|'for'
name|'g'
name|'in'
name|'groups'
op|']'
op|'}'
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not create user object: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'HTTPCreated'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle_delete_user
dedent|''
name|'def'
name|'handle_delete_user'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handles the DELETE v2/<account>/<user> call for deleting a user from an\n        account.\n\n        Can only be called by an account .admin.\n\n        :param req: The webob.Request to process.\n        :returns: webob.Response, 2xx on success.\n        """'
newline|'\n'
comment|'# Validate path info'
nl|'\n'
name|'account'
op|'='
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
name|'user'
op|'='
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'path_info'
name|'or'
name|'not'
name|'account'
op|'.'
name|'isalnum'
op|'('
op|')'
name|'or'
name|'not'
name|'user'
op|'.'
name|'isalnum'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_account_admin'
op|'('
name|'req'
op|','
name|'account'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPForbidden'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
comment|"# Delete the user's existing token, if any."
nl|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|','
name|'user'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'HEAD'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not obtain user details: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'candidate_token'
op|'='
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-object-meta-auth-token'"
op|')'
newline|'\n'
name|'if'
name|'candidate_token'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/.token_%s/%s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'candidate_token'
op|'['
op|'-'
number|'1'
op|']'
op|','
name|'candidate_token'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'DELETE'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
name|'and'
name|'resp'
op|'.'
name|'status_int'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'Could not delete possibly existing token: '"
nl|'\n'
string|"'%s %s'"
op|'%'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
comment|'# Delete the user entry itself.'
nl|'\n'
dedent|''
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|','
name|'user'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'DELETE'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
name|'and'
name|'resp'
op|'.'
name|'status_int'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not delete the user object: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'HTTPNoContent'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle_get_token
dedent|''
name|'def'
name|'handle_get_token'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handles the various `request for token and service end point(s)` calls.\n        There are various formats to support the various auth servers in the\n        past. Examples::\n\n            GET <auth-prefix>/v1/<act>/auth\n                X-Auth-User: <act>:<usr>  or  X-Storage-User: <usr>\n                X-Auth-Key: <key>         or  X-Storage-Pass: <key>\n            GET <auth-prefix>/auth\n                X-Auth-User: <act>:<usr>  or  X-Storage-User: <act>:<usr>\n                X-Auth-Key: <key>         or  X-Storage-Pass: <key>\n            GET <auth-prefix>/v1.0\n                X-Auth-User: <act>:<usr>  or  X-Storage-User: <act>:<usr>\n                X-Auth-Key: <key>         or  X-Storage-Pass: <key>\n\n        On successful authentication, the response will have X-Auth-Token and\n        X-Storage-Token set to the token to use with Swift and X-Storage-URL\n        set to the URL to the default Swift cluster to use.\n\n        The response body will be set to the account\'s services JSON object as\n        described here::\n\n            {"storage": {     # Represents the Swift storage service end points\n                "default": "cluster1", # Indicates which cluster is the default\n                "cluster1": "<URL to use with Swift>",\n                    # A Swift cluster that can be used with this account,\n                    # "cluster1" is the name of the cluster which is usually a\n                    # location indicator (like "dfw" for a datacenter region).\n                "cluster2": "<URL to use with Swift>"\n                    # Another Swift cluster that can be used with this account,\n                    # there will always be at least one Swift cluster to use or\n                    # this whole "storage" dict won\'t be included at all.\n             },\n             "servers": {       # Represents the Nova server service end points\n                # Expected to be similar to the "storage" dict, but not\n                # implemented yet.\n             },\n             # Possibly other service dicts, not implemented yet.\n            }\n\n        :param req: The webob.Request to process.\n        :returns: webob.Response, 2xx on success with data set as explained\n                  above.\n        """'
newline|'\n'
comment|'# Validate the request info'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'pathsegs'
op|'='
name|'split_path'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
name|'minsegs'
op|'='
number|'1'
op|','
name|'maxsegs'
op|'='
number|'3'
op|','
nl|'\n'
name|'rest_with_last'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'pathsegs'
op|'['
number|'0'
op|']'
op|'=='
string|"'v1'"
name|'and'
name|'pathsegs'
op|'['
number|'2'
op|']'
op|'=='
string|"'auth'"
op|':'
newline|'\n'
indent|'            '
name|'account'
op|'='
name|'pathsegs'
op|'['
number|'1'
op|']'
newline|'\n'
name|'user'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-storage-user'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'user'
op|':'
newline|'\n'
indent|'                '
name|'user'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-user'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'user'
name|'or'
string|"':'"
name|'not'
name|'in'
name|'user'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'account2'
op|','
name|'user'
op|'='
name|'user'
op|'.'
name|'split'
op|'('
string|"':'"
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'account'
op|'!='
name|'account2'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'key'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-storage-pass'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'key'
op|':'
newline|'\n'
indent|'                '
name|'key'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-key'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'pathsegs'
op|'['
number|'0'
op|']'
name|'in'
op|'('
string|"'auth'"
op|','
string|"'v1.0'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'user'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-user'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'user'
op|':'
newline|'\n'
indent|'                '
name|'user'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-storage-user'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'user'
name|'or'
string|"':'"
name|'not'
name|'in'
name|'user'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'account'
op|','
name|'user'
op|'='
name|'user'
op|'.'
name|'split'
op|'('
string|"':'"
op|','
number|'1'
op|')'
newline|'\n'
name|'key'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-key'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'key'
op|':'
newline|'\n'
indent|'                '
name|'key'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-storage-pass'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'all'
op|'('
op|'('
name|'account'
op|','
name|'user'
op|','
name|'key'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'user'
op|'=='
string|"'.super_admin'"
name|'and'
name|'key'
op|'=='
name|'self'
op|'.'
name|'super_admin_key'
op|':'
newline|'\n'
indent|'            '
name|'token'
op|'='
name|'self'
op|'.'
name|'get_itoken'
op|'('
name|'req'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'url'
op|'='
string|"'%s/%s.auth'"
op|'%'
op|'('
name|'self'
op|'.'
name|'dsc_url'
op|','
name|'self'
op|'.'
name|'reseller_prefix'
op|')'
newline|'\n'
name|'return'
name|'Response'
op|'('
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'body'
op|'='
name|'json'
op|'.'
name|'dumps'
op|'('
op|'{'
string|"'storage'"
op|':'
op|'{'
string|"'default'"
op|':'
string|"'local'"
op|','
string|"'local'"
op|':'
name|'url'
op|'}'
op|'}'
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'x-auth-token'"
op|':'
name|'token'
op|','
string|"'x-storage-token'"
op|':'
name|'token'
op|','
nl|'\n'
string|"'x-storage-url'"
op|':'
name|'url'
op|'}'
op|')'
newline|'\n'
comment|'# Authenticate user'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|','
name|'user'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'GET'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not obtain user details: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'user_detail'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'credentials_match'
op|'('
name|'user_detail'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
comment|"# See if a token already exists and hasn't expired"
nl|'\n'
dedent|''
name|'token'
op|'='
name|'None'
newline|'\n'
name|'candidate_token'
op|'='
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-object-meta-auth-token'"
op|')'
newline|'\n'
name|'if'
name|'candidate_token'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/.token_%s/%s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'candidate_token'
op|'['
op|'-'
number|'1'
op|']'
op|','
name|'candidate_token'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'GET'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'token_detail'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'if'
name|'token_detail'
op|'['
string|"'expires'"
op|']'
op|'>'
name|'time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'token'
op|'='
name|'candidate_token'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'DELETE'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'resp'
op|'.'
name|'status_int'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'Could not detect whether a token already '"
nl|'\n'
string|"'exists: %s %s'"
op|'%'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
comment|"# Create a new token if one didn't exist"
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'token'
op|':'
newline|'\n'
comment|"# Retrieve account id, we'll save this in the token"
nl|'\n'
indent|'            '
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'HEAD'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'Could not retrieve account id value: '"
nl|'\n'
string|"'%s %s'"
op|'%'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'account_id'
op|'='
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-container-meta-account-id'"
op|']'
newline|'\n'
comment|'# Generate new token'
nl|'\n'
name|'token'
op|'='
string|"'%stk%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'reseller_prefix'
op|','
name|'uuid4'
op|'('
op|')'
op|'.'
name|'hex'
op|')'
newline|'\n'
comment|'# Save token info'
nl|'\n'
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/.token_%s/%s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'token'
op|'['
op|'-'
number|'1'
op|']'
op|','
name|'token'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'PUT'"
op|','
name|'path'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
op|'{'
string|"'account'"
op|':'
name|'account'
op|','
string|"'user'"
op|':'
name|'user'
op|','
nl|'\n'
string|"'account_id'"
op|':'
name|'account_id'
op|','
nl|'\n'
string|"'groups'"
op|':'
name|'user_detail'
op|'['
string|"'groups'"
op|']'
op|','
nl|'\n'
string|"'expires'"
op|':'
name|'time'
op|'('
op|')'
op|'+'
name|'self'
op|'.'
name|'token_life'
op|'}'
op|')'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'Could not create new token: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
comment|'# Record the token with the user info for future use.'
nl|'\n'
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|','
name|'user'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'POST'"
op|','
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Object-Meta-Auth-Token'"
op|':'
name|'token'
op|'}'
nl|'\n'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'Could not save new token: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
comment|'# Get the services information'
nl|'\n'
dedent|''
dedent|''
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/.services'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'account'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'GET'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not obtain services info: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'detail'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'url'
op|'='
name|'detail'
op|'['
string|"'storage'"
op|']'
op|'['
name|'detail'
op|'['
string|"'storage'"
op|']'
op|'['
string|"'default'"
op|']'
op|']'
newline|'\n'
name|'return'
name|'Response'
op|'('
name|'request'
op|'='
name|'req'
op|','
name|'body'
op|'='
name|'resp'
op|'.'
name|'body'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'x-auth-token'"
op|':'
name|'token'
op|','
string|"'x-storage-token'"
op|':'
name|'token'
op|','
nl|'\n'
string|"'x-storage-url'"
op|':'
name|'url'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|handle_validate_token
dedent|''
name|'def'
name|'handle_validate_token'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handles the GET v2/.token/<token> call for validating a token, usually\n        called by a service like Swift.\n\n        On a successful validation, X-Auth-TTL will be set for how much longer\n        this token is valid and X-Auth-Groups will contain a comma separated\n        list of groups the user belongs to.\n\n        The first group listed will be a unique identifier for the user the\n        token represents.\n\n        .reseller_admin is a special group that indicates the user should be\n        allowed to do anything on any account.\n\n        :param req: The webob.Request to process.\n        :returns: webob.Response, 2xx on success with data set as explained\n                  above.\n        """'
newline|'\n'
name|'token'
op|'='
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'path_info'
name|'or'
name|'not'
name|'token'
op|'.'
name|'startswith'
op|'('
name|'self'
op|'.'
name|'reseller_prefix'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'expires'
op|'='
name|'groups'
op|'='
name|'None'
newline|'\n'
name|'memcache_client'
op|'='
name|'cache_from_env'
op|'('
name|'req'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'if'
name|'memcache_client'
op|':'
newline|'\n'
indent|'            '
name|'memcache_key'
op|'='
string|"'%s/auth/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'reseller_prefix'
op|','
name|'token'
op|')'
newline|'\n'
name|'cached_auth_data'
op|'='
name|'memcache_client'
op|'.'
name|'get'
op|'('
name|'memcache_key'
op|')'
newline|'\n'
name|'if'
name|'cached_auth_data'
op|':'
newline|'\n'
indent|'                '
name|'expires'
op|','
name|'groups'
op|'='
name|'cached_auth_data'
newline|'\n'
name|'if'
name|'expires'
op|'<'
name|'time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'groups'
op|'='
name|'None'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'not'
name|'groups'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/.token_%s/%s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'token'
op|'['
op|'-'
number|'1'
op|']'
op|','
name|'token'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'GET'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'detail'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'expires'
op|'='
name|'detail'
op|'['
string|"'expires'"
op|']'
newline|'\n'
name|'if'
name|'expires'
op|'<'
name|'time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'DELETE'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'groups'
op|'='
op|'['
name|'g'
op|'['
string|"'name'"
op|']'
name|'for'
name|'g'
name|'in'
name|'detail'
op|'['
string|"'groups'"
op|']'
op|']'
newline|'\n'
name|'if'
string|"'.admin'"
name|'in'
name|'groups'
op|':'
newline|'\n'
indent|'                '
name|'groups'
op|'.'
name|'remove'
op|'('
string|"'.admin'"
op|')'
newline|'\n'
name|'groups'
op|'.'
name|'append'
op|'('
name|'detail'
op|'['
string|"'account_id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'groups'
op|'='
string|"','"
op|'.'
name|'join'
op|'('
name|'groups'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'HTTPNoContent'
op|'('
name|'headers'
op|'='
op|'{'
string|"'X-Auth-TTL'"
op|':'
name|'expires'
op|'-'
name|'time'
op|'('
op|')'
op|','
nl|'\n'
string|"'X-Auth-Groups'"
op|':'
name|'groups'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|make_request
dedent|''
name|'def'
name|'make_request'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'method'
op|','
name|'path'
op|','
name|'body'
op|'='
name|'None'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Makes a new webob.Request based on the current env but with the\n        parameters specified.\n\n        :param env: Current WSGI environment dictionary\n        :param method: HTTP method of new request\n        :param path: HTTP path of new request\n        :param body: HTTP body of new request; None by default\n        :param headers: Extra HTTP headers of new request; None by default\n\n        :returns: webob.Request object\n        """'
newline|'\n'
name|'newenv'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
newline|'\n'
name|'for'
name|'name'
name|'in'
op|'('
string|"'swift.cache'"
op|','
string|"'HTTP_X_CF_TRANS_ID'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'name'
name|'in'
name|'env'
op|':'
newline|'\n'
indent|'                '
name|'newenv'
op|'['
name|'name'
op|']'
op|'='
name|'env'
op|'['
name|'name'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'if'
name|'body'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|','
name|'environ'
op|'='
name|'newenv'
op|','
name|'body'
op|'='
name|'body'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|','
name|'environ'
op|'='
name|'newenv'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_conn
dedent|''
dedent|''
name|'def'
name|'get_conn'
op|'('
name|'self'
op|','
name|'urlparsed'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns an HTTPConnection based on the urlparse result given or the\n        default Swift cluster (internal url) urlparse result.\n\n        :param urlparsed: The result from urlparse.urlparse or None to use the\n                          default Swift cluster\'s value\n        """'
newline|'\n'
name|'if'
name|'not'
name|'urlparsed'
op|':'
newline|'\n'
indent|'            '
name|'urlparsed'
op|'='
name|'self'
op|'.'
name|'dsc_parsed2'
newline|'\n'
dedent|''
name|'if'
name|'urlparsed'
op|'.'
name|'scheme'
op|'=='
string|"'http'"
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPConnection'
op|'('
name|'urlparsed'
op|'.'
name|'netloc'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPSConnection'
op|'('
name|'urlparsed'
op|'.'
name|'netloc'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_itoken
dedent|''
dedent|''
name|'def'
name|'get_itoken'
op|'('
name|'self'
op|','
name|'env'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns the current internal token to use for the auth system\'s own\n        actions with other services. Each process will create its own\n        itoken and the token will be deleted and recreated based on the\n        token_life configuration value. The itoken information is stored in\n        memcache because the auth process that is asked by Swift to validate\n        the token may not be the same as the auth process that created the\n        token.\n        """'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'itoken'
name|'or'
name|'self'
op|'.'
name|'itoken_expires'
op|'<'
name|'time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'itoken'
op|'='
string|"'%sitk%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'reseller_prefix'
op|','
name|'uuid4'
op|'('
op|')'
op|'.'
name|'hex'
op|')'
newline|'\n'
name|'memcache_key'
op|'='
string|"'%s/auth/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'reseller_prefix'
op|','
name|'self'
op|'.'
name|'itoken'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'itoken_expires'
op|'='
name|'time'
op|'('
op|')'
op|'+'
name|'self'
op|'.'
name|'token_life'
op|'-'
number|'60'
newline|'\n'
name|'memcache_client'
op|'='
name|'cache_from_env'
op|'('
name|'env'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'memcache_client'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'No memcache set up; required for Swauth middleware'"
op|')'
newline|'\n'
dedent|''
name|'memcache_client'
op|'.'
name|'set'
op|'('
name|'memcache_key'
op|','
op|'('
name|'self'
op|'.'
name|'itoken_expires'
op|','
nl|'\n'
string|"'.auth,.reseller_admin,%s.auth'"
op|'%'
name|'self'
op|'.'
name|'reseller_prefix'
op|')'
op|','
nl|'\n'
name|'timeout'
op|'='
name|'self'
op|'.'
name|'token_life'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'itoken'
newline|'\n'
nl|'\n'
DECL|member|get_admin_detail
dedent|''
name|'def'
name|'get_admin_detail'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns the dict for the user specified as the admin in the request\n        with the addition of an `account` key set to the admin user\'s account.\n\n        :param req: The webob request to retrieve X-Auth-Admin-User and\n                    X-Auth-Admin-Key from.\n        :returns: The dict for the admin user with the addition of the\n                  `account` key.\n        """'
newline|'\n'
name|'if'
string|"':'"
name|'not'
name|'in'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-admin-user'"
op|','
string|"''"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'admin_account'
op|','
name|'admin_user'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-admin-user'"
op|')'
op|'.'
name|'split'
op|'('
string|"':'"
op|','
number|'1'
op|')'
newline|'\n'
name|'path'
op|'='
name|'quote'
op|'('
string|"'/v1/%s/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'auth_account'
op|','
name|'admin_account'
op|','
nl|'\n'
name|'admin_user'
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_request'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
string|"'GET'"
op|','
nl|'\n'
name|'path'
op|')'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'Could not get admin user object: %s %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'resp'
op|'.'
name|'status'
op|')'
op|')'
newline|'\n'
dedent|''
name|'admin_detail'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'admin_detail'
op|'['
string|"'account'"
op|']'
op|'='
name|'admin_account'
newline|'\n'
name|'return'
name|'admin_detail'
newline|'\n'
nl|'\n'
DECL|member|credentials_match
dedent|''
name|'def'
name|'credentials_match'
op|'('
name|'self'
op|','
name|'user_detail'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns True if the key is valid for the user_detail. Currently, this\n        only supports plaintext key matching.\n\n        :param user_detail: The dict for the user.\n        :param key: The key to validate for the user.\n        :returns: True if the key is valid for the user, False if not.\n        """'
newline|'\n'
name|'return'
name|'user_detail'
name|'and'
name|'user_detail'
op|'.'
name|'get'
op|'('
string|"'auth'"
op|')'
op|'=='
string|"'plaintext:%s'"
op|'%'
name|'key'
newline|'\n'
nl|'\n'
DECL|member|is_super_admin
dedent|''
name|'def'
name|'is_super_admin'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns True if the admin specified in the request represents the\n        .super_admin.\n\n        :param req: The webob.Request to check.\n        :param returns: True if .super_admin.\n        """'
newline|'\n'
name|'return'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-admin-user'"
op|')'
op|'=='
string|"'.super_admin'"
name|'and'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-admin-key'"
op|')'
op|'=='
name|'self'
op|'.'
name|'super_admin_key'
newline|'\n'
nl|'\n'
DECL|member|is_reseller_admin
dedent|''
name|'def'
name|'is_reseller_admin'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'admin_detail'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns True if the admin specified in the request represents a\n        .reseller_admin.\n\n        :param req: The webob.Request to check.\n        :param admin_detail: The previously retrieved dict from\n                             :func:`get_admin_detail` or None for this function\n                             to retrieve the admin_detail itself.\n        :param returns: True if .reseller_admin.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'is_super_admin'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'admin_detail'
op|':'
newline|'\n'
indent|'            '
name|'admin_detail'
op|'='
name|'self'
op|'.'
name|'get_admin_detail'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'credentials_match'
op|'('
name|'admin_detail'
op|','
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-admin-key'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'return'
string|"'.reseller_admin'"
name|'in'
op|'('
name|'g'
op|'['
string|"'name'"
op|']'
name|'for'
name|'g'
name|'in'
name|'admin_detail'
op|'['
string|"'groups'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|is_account_admin
dedent|''
name|'def'
name|'is_account_admin'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'account'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns True if the admin specified in the request represents a .admin\n        for the account specified.\n\n        :param req: The webob.Request to check.\n        :param account: The account to check for .admin against.\n        :param returns: True if .admin.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'is_super_admin'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'admin_detail'
op|'='
name|'self'
op|'.'
name|'get_admin_detail'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'admin_detail'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'is_reseller_admin'
op|'('
name|'req'
op|','
name|'admin_detail'
op|'='
name|'admin_detail'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'credentials_match'
op|'('
name|'admin_detail'
op|','
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-admin-key'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'return'
name|'admin_detail'
name|'and'
name|'admin_detail'
op|'['
string|"'account'"
op|']'
op|'=='
name|'account'
name|'and'
string|"'.admin'"
name|'in'
op|'('
name|'g'
op|'['
string|"'name'"
op|']'
name|'for'
name|'g'
name|'in'
name|'admin_detail'
op|'['
string|"'groups'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|member|posthooklogger
dedent|''
name|'def'
name|'posthooklogger'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'req'
op|'.'
name|'path'
op|'.'
name|'startswith'
op|'('
name|'self'
op|'.'
name|'auth_prefix'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'getattr'
op|'('
name|'req'
op|','
string|"'response'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'response'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'trans_time'
op|'='
string|"'%.4f'"
op|'%'
op|'('
name|'time'
op|'('
op|')'
op|'-'
name|'req'
op|'.'
name|'start_time'
op|')'
newline|'\n'
name|'the_request'
op|'='
name|'quote'
op|'('
name|'unquote'
op|'('
name|'req'
op|'.'
name|'path'
op|')'
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'query_string'
op|':'
newline|'\n'
indent|'            '
name|'the_request'
op|'='
name|'the_request'
op|'+'
string|"'?'"
op|'+'
name|'req'
op|'.'
name|'query_string'
newline|'\n'
comment|'# remote user for zeus'
nl|'\n'
dedent|''
name|'client'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-cluster-client-ip'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'client'
name|'and'
string|"'x-forwarded-for'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
comment|'# remote user for other lbs'
nl|'\n'
indent|'            '
name|'client'
op|'='
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-forwarded-for'"
op|']'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
dedent|''
name|'logged_headers'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'log_headers'
op|':'
newline|'\n'
indent|'            '
name|'logged_headers'
op|'='
string|"'\\n'"
op|'.'
name|'join'
op|'('
string|"'%s: %s'"
op|'%'
op|'('
name|'k'
op|','
name|'v'
op|')'
nl|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'status_int'
op|'='
name|'response'
op|'.'
name|'status_int'
newline|'\n'
name|'if'
name|'getattr'
op|'('
name|'req'
op|','
string|"'client_disconnect'"
op|','
name|'False'
op|')'
name|'or'
name|'getattr'
op|'('
name|'response'
op|','
string|"'client_disconnect'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'status_int'
op|'='
number|'499'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
string|"' '"
op|'.'
name|'join'
op|'('
name|'quote'
op|'('
name|'str'
op|'('
name|'x'
op|')'
op|')'
name|'for'
name|'x'
name|'in'
op|'('
name|'client'
name|'or'
string|"'-'"
op|','
nl|'\n'
name|'req'
op|'.'
name|'remote_addr'
name|'or'
string|"'-'"
op|','
name|'strftime'
op|'('
string|"'%d/%b/%Y/%H/%M/%S'"
op|','
name|'gmtime'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'req'
op|'.'
name|'method'
op|','
name|'the_request'
op|','
name|'req'
op|'.'
name|'environ'
op|'['
string|"'SERVER_PROTOCOL'"
op|']'
op|','
nl|'\n'
name|'status_int'
op|','
name|'req'
op|'.'
name|'referer'
name|'or'
string|"'-'"
op|','
name|'req'
op|'.'
name|'user_agent'
name|'or'
string|"'-'"
op|','
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-token'"
op|','
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-admin-user'"
op|','
string|"'-'"
op|')'
op|')'
op|','
nl|'\n'
name|'getattr'
op|'('
name|'req'
op|','
string|"'bytes_transferred'"
op|','
number|'0'
op|')'
name|'or'
string|"'-'"
op|','
nl|'\n'
name|'getattr'
op|'('
name|'response'
op|','
string|"'bytes_transferred'"
op|','
number|'0'
op|')'
name|'or'
string|"'-'"
op|','
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'etag'"
op|','
string|"'-'"
op|')'
op|','
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-cf-trans-id'"
op|','
string|"'-'"
op|')'
op|','
name|'logged_headers'
name|'or'
string|"'-'"
op|','
nl|'\n'
name|'trans_time'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|filter_factory
dedent|''
dedent|''
name|'def'
name|'filter_factory'
op|'('
name|'global_conf'
op|','
op|'**'
name|'local_conf'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Returns a WSGI filter app for use with paste.deploy."""'
newline|'\n'
name|'conf'
op|'='
name|'global_conf'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'update'
op|'('
name|'local_conf'
op|')'
newline|'\n'
nl|'\n'
DECL|function|auth_filter
name|'def'
name|'auth_filter'
op|'('
name|'app'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'Swauth'
op|'('
name|'app'
op|','
name|'conf'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'auth_filter'
newline|'\n'
dedent|''
endmarker|''
end_unit
