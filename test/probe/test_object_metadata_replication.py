begin_unit
comment|'#!/usr/bin/python -u'
nl|'\n'
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
name|'from'
name|'io'
name|'import'
name|'StringIO'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'direct_client'
name|'import'
name|'direct_get_suffix_hashes'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'DiskFileDeleted'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'internal_client'
name|'import'
name|'UnexpectedResponse'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'container'
op|'.'
name|'backend'
name|'import'
name|'ContainerBroker'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'swiftclient'
name|'import'
name|'client'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
name|'import'
name|'Ring'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'Timestamp'
op|','
name|'get_logger'
op|','
name|'hash_path'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
op|'.'
name|'diskfile'
name|'import'
name|'DiskFileManager'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'POLICIES'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'probe'
op|'.'
name|'brain'
name|'import'
name|'BrainSplitter'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'probe'
op|'.'
name|'common'
name|'import'
name|'ReplProbeTest'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Test
name|'class'
name|'Test'
op|'('
name|'ReplProbeTest'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Reset all environment and start all servers.\n        """'
newline|'\n'
name|'super'
op|'('
name|'Test'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
string|"'container-%s'"
op|'%'
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
string|"'object-%s'"
op|'%'
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'='
name|'BrainSplitter'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
string|"'object'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'self'
op|'.'
name|'policy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'='
name|'BrainSplitter'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'int_client'
op|'='
name|'self'
op|'.'
name|'make_internal_client'
op|'('
name|'object_post_as_copy'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'Test'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_object_info
dedent|''
name|'def'
name|'_get_object_info'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'number'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj_conf'
op|'='
name|'self'
op|'.'
name|'configs'
op|'['
string|"'object-server'"
op|']'
newline|'\n'
name|'config_path'
op|'='
name|'obj_conf'
op|'['
name|'number'
op|']'
newline|'\n'
name|'options'
op|'='
name|'utils'
op|'.'
name|'readconf'
op|'('
name|'config_path'
op|','
string|"'app:object-server'"
op|')'
newline|'\n'
name|'swift_dir'
op|'='
name|'options'
op|'.'
name|'get'
op|'('
string|"'swift_dir'"
op|','
string|"'/etc/swift'"
op|')'
newline|'\n'
name|'ring'
op|'='
name|'POLICIES'
op|'.'
name|'get_object_ring'
op|'('
name|'int'
op|'('
name|'self'
op|'.'
name|'policy'
op|')'
op|','
name|'swift_dir'
op|')'
newline|'\n'
name|'part'
op|','
name|'nodes'
op|'='
name|'ring'
op|'.'
name|'get_nodes'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
comment|'# assumes one to one mapping'
nl|'\n'
indent|'            '
name|'if'
name|'node'
op|'['
string|"'port'"
op|']'
op|'=='
name|'int'
op|'('
name|'options'
op|'.'
name|'get'
op|'('
string|"'bind_port'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'device'
op|'='
name|'node'
op|'['
string|"'device'"
op|']'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'mgr'
op|'='
name|'DiskFileManager'
op|'('
name|'options'
op|','
name|'get_logger'
op|'('
name|'options'
op|')'
op|')'
newline|'\n'
name|'disk_file'
op|'='
name|'mgr'
op|'.'
name|'get_diskfile'
op|'('
name|'device'
op|','
name|'part'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'self'
op|'.'
name|'policy'
op|')'
newline|'\n'
name|'info'
op|'='
name|'disk_file'
op|'.'
name|'read_metadata'
op|'('
op|')'
newline|'\n'
name|'return'
name|'info'
newline|'\n'
nl|'\n'
DECL|member|_assert_consistent_object_metadata
dedent|''
name|'def'
name|'_assert_consistent_object_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj_info'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
number|'5'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'info_i'
op|'='
name|'self'
op|'.'
name|'_get_object_info'
op|'('
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
name|'i'
op|')'
newline|'\n'
name|'if'
name|'info_i'
op|':'
newline|'\n'
indent|'                '
name|'obj_info'
op|'.'
name|'append'
op|'('
name|'info_i'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'obj_info'
op|')'
op|'>'
number|'1'
op|')'
newline|'\n'
name|'for'
name|'other'
name|'in'
name|'obj_info'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertDictEqual'
op|'('
name|'obj_info'
op|'['
number|'0'
op|']'
op|','
name|'other'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_consistent_deleted_object
dedent|''
dedent|''
name|'def'
name|'_assert_consistent_deleted_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
number|'5'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'info'
op|'='
name|'self'
op|'.'
name|'_get_object_info'
op|'('
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
name|'i'
op|')'
newline|'\n'
name|'if'
name|'info'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Expected no disk file info but found %s'"
op|'%'
name|'info'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'DiskFileDeleted'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|_get_db_info
dedent|''
dedent|''
dedent|''
name|'def'
name|'_get_db_info'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'number'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server_type'
op|'='
string|"'container'"
newline|'\n'
name|'obj_conf'
op|'='
name|'self'
op|'.'
name|'configs'
op|'['
string|"'%s-server'"
op|'%'
name|'server_type'
op|']'
newline|'\n'
name|'config_path'
op|'='
name|'obj_conf'
op|'['
name|'number'
op|']'
newline|'\n'
name|'options'
op|'='
name|'utils'
op|'.'
name|'readconf'
op|'('
name|'config_path'
op|','
string|"'app:container-server'"
op|')'
newline|'\n'
name|'root'
op|'='
name|'options'
op|'.'
name|'get'
op|'('
string|"'devices'"
op|')'
newline|'\n'
nl|'\n'
name|'swift_dir'
op|'='
name|'options'
op|'.'
name|'get'
op|'('
string|"'swift_dir'"
op|','
string|"'/etc/swift'"
op|')'
newline|'\n'
name|'ring'
op|'='
name|'Ring'
op|'('
name|'swift_dir'
op|','
name|'ring_name'
op|'='
name|'server_type'
op|')'
newline|'\n'
name|'part'
op|','
name|'nodes'
op|'='
name|'ring'
op|'.'
name|'get_nodes'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
comment|'# assumes one to one mapping'
nl|'\n'
indent|'            '
name|'if'
name|'node'
op|'['
string|"'port'"
op|']'
op|'=='
name|'int'
op|'('
name|'options'
op|'.'
name|'get'
op|'('
string|"'bind_port'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'device'
op|'='
name|'node'
op|'['
string|"'device'"
op|']'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'path_hash'
op|'='
name|'utils'
op|'.'
name|'hash_path'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'_dir'
op|'='
name|'utils'
op|'.'
name|'storage_directory'
op|'('
string|"'%ss'"
op|'%'
name|'server_type'
op|','
name|'part'
op|','
name|'path_hash'
op|')'
newline|'\n'
name|'db_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'root'
op|','
name|'device'
op|','
name|'_dir'
op|')'
newline|'\n'
name|'db_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'db_dir'
op|','
string|"'%s.db'"
op|'%'
name|'path_hash'
op|')'
newline|'\n'
name|'db'
op|'='
name|'ContainerBroker'
op|'('
name|'db_file'
op|')'
newline|'\n'
name|'return'
name|'db'
op|'.'
name|'get_info'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_consistent_container_dbs
dedent|''
name|'def'
name|'_assert_consistent_container_dbs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_info'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
number|'5'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'info_i'
op|'='
name|'self'
op|'.'
name|'_get_db_info'
op|'('
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'i'
op|')'
newline|'\n'
name|'if'
name|'info_i'
op|':'
newline|'\n'
indent|'                '
name|'db_info'
op|'.'
name|'append'
op|'('
name|'info_i'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'db_info'
op|')'
op|'>'
number|'1'
op|')'
newline|'\n'
name|'for'
name|'other'
name|'in'
name|'db_info'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'db_info'
op|'['
number|'0'
op|']'
op|'['
string|"'hash'"
op|']'
op|','
name|'other'
op|'['
string|"'hash'"
op|']'
op|','
nl|'\n'
string|"'Container db hash mismatch: %s != %s'"
nl|'\n'
op|'%'
op|'('
name|'db_info'
op|'['
number|'0'
op|']'
op|'['
string|"'hash'"
op|']'
op|','
name|'other'
op|'['
string|"'hash'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_object_metadata_matches_listing
dedent|''
dedent|''
name|'def'
name|'_assert_object_metadata_matches_listing'
op|'('
name|'self'
op|','
name|'listing'
op|','
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'listing'
op|'['
string|"'bytes'"
op|']'
op|','
name|'int'
op|'('
name|'metadata'
op|'['
string|"'content-length'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'listing'
op|'['
string|"'hash'"
op|']'
op|','
name|'metadata'
op|'['
string|"'etag'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'listing'
op|'['
string|"'content_type'"
op|']'
op|','
name|'metadata'
op|'['
string|"'content-type'"
op|']'
op|')'
newline|'\n'
name|'modified'
op|'='
name|'Timestamp'
op|'('
name|'metadata'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
op|'.'
name|'isoformat'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'listing'
op|'['
string|"'last_modified'"
op|']'
op|','
name|'modified'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_put_object
dedent|''
name|'def'
name|'_put_object'
op|'('
name|'self'
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'body'
op|'='
string|"u'stuff'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'headers'
name|'or'
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'int_client'
op|'.'
name|'upload_object'
op|'('
name|'StringIO'
op|'('
name|'body'
op|')'
op|','
name|'self'
op|'.'
name|'account'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_post_object
dedent|''
name|'def'
name|'_post_object'
op|'('
name|'self'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'int_client'
op|'.'
name|'set_object_metadata'
op|'('
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_delete_object
dedent|''
name|'def'
name|'_delete_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'int_client'
op|'.'
name|'delete_object'
op|'('
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_object
dedent|''
name|'def'
name|'_get_object'
op|'('
name|'self'
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'expect_statuses'
op|'='
op|'('
number|'2'
op|','
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'int_client'
op|'.'
name|'get_object'
op|'('
name|'self'
op|'.'
name|'account'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'headers'
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
name|'expect_statuses'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_object_metadata
dedent|''
name|'def'
name|'_get_object_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'int_client'
op|'.'
name|'get_object_metadata'
op|'('
name|'self'
op|'.'
name|'account'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_assert_consistent_suffix_hashes
dedent|''
name|'def'
name|'_assert_consistent_suffix_hashes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'opart'
op|','
name|'onodes'
op|'='
name|'self'
op|'.'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'name_hash'
op|'='
name|'hash_path'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'results'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'onodes'
op|':'
newline|'\n'
indent|'            '
name|'results'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
name|'node'
op|','
nl|'\n'
name|'direct_get_suffix_hashes'
op|'('
name|'node'
op|','
name|'opart'
op|','
op|'['
name|'name_hash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
op|'('
name|'node'
op|','
name|'hashes'
op|')'
name|'in'
name|'results'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'results'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|','
name|'hashes'
op|','
nl|'\n'
string|"'Inconsistent suffix hashes found: %s'"
op|'%'
name|'results'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_delete_is_replicated
dedent|''
dedent|''
name|'def'
name|'test_object_delete_is_replicated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy_index'
op|'='
name|'int'
op|'('
name|'self'
op|'.'
name|'policy'
op|')'
op|')'
newline|'\n'
comment|'# put object'
nl|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# put newer object with sysmeta to first server subset'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# delete object on second server subset'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_delete_object'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# run replicator'
nl|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check object deletion has been replicated on first server set'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_get_object'
op|'('
name|'expect_statuses'
op|'='
op|'('
number|'4'
op|','
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check object deletion persists on second server set'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_get_object'
op|'('
name|'expect_statuses'
op|'='
op|'('
number|'4'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# put newer object to second server set'
nl|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# run replicator'
nl|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check new object  has been replicated on first server set'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_get_object'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check new object persists on second server set'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_get_object'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_after_replication_with_subsequent_post
dedent|''
name|'def'
name|'test_object_after_replication_with_subsequent_post'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy_index'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# put object'
nl|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo'"
op|'}'
op|','
name|'body'
op|'='
string|"u'older'"
op|')'
newline|'\n'
nl|'\n'
comment|'# put newer object to first server subset'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'bar'"
op|'}'
op|','
name|'body'
op|'='
string|"u'newer'"
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'etag'
op|'='
name|'metadata'
op|'['
string|"'etag'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# post some user meta to all servers'
nl|'\n'
name|'self'
op|'.'
name|'_post_object'
op|'('
op|'{'
string|"'x-object-meta-bar'"
op|':'
string|"'meta-bar'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# run replicator'
nl|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check that newer data has been replicated to second server subset'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'etag'
op|','
name|'metadata'
op|'['
string|"'etag'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bar'"
op|','
name|'metadata'
op|'['
string|"'content-type'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'meta-bar'"
op|','
name|'metadata'
op|'['
string|"'x-object-meta-bar'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_consistent_object_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_container_dbs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_suffix_hashes'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sysmeta_after_replication_with_subsequent_put
dedent|''
name|'def'
name|'test_sysmeta_after_replication_with_subsequent_put'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sysmeta'
op|'='
op|'{'
string|"'x-object-sysmeta-foo'"
op|':'
string|"'older'"
op|'}'
newline|'\n'
name|'sysmeta2'
op|'='
op|'{'
string|"'x-object-sysmeta-foo'"
op|':'
string|"'newer'"
op|'}'
newline|'\n'
name|'usermeta'
op|'='
op|'{'
string|"'x-object-meta-bar'"
op|':'
string|"'meta-bar'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy_index'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# put object with sysmeta to first server subset'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
name|'sysmeta'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'sysmeta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'sysmeta'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# put object with updated sysmeta to second server subset'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
name|'sysmeta2'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'sysmeta2'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'sysmeta2'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_post_object'
op|'('
name|'usermeta'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'usermeta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'usermeta'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'key'
name|'in'
name|'sysmeta2'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'sysmeta2'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# run replicator'
nl|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check sysmeta has been replicated to first server subset'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'usermeta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'usermeta'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'key'
name|'in'
name|'sysmeta2'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|','
name|'key'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'sysmeta2'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check user sysmeta ok on second server subset'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'usermeta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'usermeta'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'key'
name|'in'
name|'sysmeta2'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|','
name|'key'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'sysmeta2'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_consistent_object_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_container_dbs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_suffix_hashes'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sysmeta_after_replication_with_subsequent_post
dedent|''
name|'def'
name|'test_sysmeta_after_replication_with_subsequent_post'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sysmeta'
op|'='
op|'{'
string|"'x-object-sysmeta-foo'"
op|':'
string|"'sysmeta-foo'"
op|'}'
newline|'\n'
name|'usermeta'
op|'='
op|'{'
string|"'x-object-meta-bar'"
op|':'
string|"'meta-bar'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy_index'
op|'='
name|'int'
op|'('
name|'self'
op|'.'
name|'policy'
op|')'
op|')'
newline|'\n'
comment|'# put object'
nl|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
op|')'
newline|'\n'
comment|'# put newer object with sysmeta to first server subset'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
name|'sysmeta'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'sysmeta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'sysmeta'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# post some user meta to second server subset'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_post_object'
op|'('
name|'usermeta'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'usermeta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'usermeta'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'key'
name|'in'
name|'sysmeta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# run replicator'
nl|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check user metadata has been replicated to first server subset'
nl|'\n'
comment|'# and sysmeta is unchanged'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
name|'dict'
op|'('
name|'sysmeta'
op|')'
newline|'\n'
name|'expected'
op|'.'
name|'update'
op|'('
name|'usermeta'
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'expected'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|','
name|'key'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'expected'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check user metadata and sysmeta both on second server subset'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'expected'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|','
name|'key'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'expected'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_consistent_object_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_container_dbs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_suffix_hashes'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sysmeta_after_replication_with_prior_post
dedent|''
name|'def'
name|'test_sysmeta_after_replication_with_prior_post'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sysmeta'
op|'='
op|'{'
string|"'x-object-sysmeta-foo'"
op|':'
string|"'sysmeta-foo'"
op|'}'
newline|'\n'
name|'usermeta'
op|'='
op|'{'
string|"'x-object-meta-bar'"
op|':'
string|"'meta-bar'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy_index'
op|'='
name|'int'
op|'('
name|'self'
op|'.'
name|'policy'
op|')'
op|')'
newline|'\n'
comment|'# put object'
nl|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# put user meta to first server subset'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_post_object'
op|'('
name|'headers'
op|'='
name|'usermeta'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'usermeta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'usermeta'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# put newer object with sysmeta to second server subset'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
name|'sysmeta'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'sysmeta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'sysmeta'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# run replicator'
nl|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check stale user metadata is not replicated to first server subset'
nl|'\n'
comment|'# and sysmeta is unchanged'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'sysmeta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'sysmeta'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'key'
name|'in'
name|'usermeta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check stale user metadata is removed from second server subset'
nl|'\n'
comment|'# and sysmeta is replicated'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'sysmeta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
name|'key'
op|']'
op|','
name|'sysmeta'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'key'
name|'in'
name|'usermeta'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'key'
name|'in'
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_assert_consistent_object_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_container_dbs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_suffix_hashes'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_ctype_replicated_when_previous_incomplete_puts
dedent|''
name|'def'
name|'test_post_ctype_replicated_when_previous_incomplete_puts'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# primary half                     handoff half'
nl|'\n'
comment|'# ------------                     ------------'
nl|'\n'
comment|'# t0.data: ctype = foo'
nl|'\n'
comment|'#                                  t1.data: ctype = bar'
nl|'\n'
comment|'# t2.meta: ctype = baz'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#              ...run replicator and expect...'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#               t1.data:'
nl|'\n'
comment|'#               t2.meta: ctype = baz'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy_index'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# incomplete write to primary half'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# handoff write'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# content-type update to primary half'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_post_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'baz'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check object metadata'
nl|'\n'
name|'metadata'
op|'='
name|'client'
op|'.'
name|'head_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
nl|'\n'
comment|'# check container listing metadata'
nl|'\n'
name|'container_metadata'
op|','
name|'objs'
op|'='
name|'client'
op|'.'
name|'get_container'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'obj'
name|'in'
name|'objs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'obj'
op|'['
string|"'name'"
op|']'
op|'=='
name|'self'
op|'.'
name|'object_name'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'expected'
op|'='
string|"'baz'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'obj'
op|'['
string|"'content_type'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_object_metadata_matches_listing'
op|'('
name|'obj'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_container_dbs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_object_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_suffix_hashes'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_put_ctype_replicated_when_subsequent_post
dedent|''
name|'def'
name|'test_put_ctype_replicated_when_subsequent_post'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# primary half                     handoff half'
nl|'\n'
comment|'# ------------                     ------------'
nl|'\n'
comment|'# t0.data: ctype = foo'
nl|'\n'
comment|'#                                  t1.data: ctype = bar'
nl|'\n'
comment|'# t2.meta:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#              ...run replicator and expect...'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#               t1.data: ctype = bar'
nl|'\n'
comment|'#               t2.meta:'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy_index'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# incomplete write'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# handoff write'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'bar'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# metadata update with newest data unavailable'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_post_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'X-Object-Meta-Color'"
op|':'
string|"'Blue'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check object metadata'
nl|'\n'
name|'metadata'
op|'='
name|'client'
op|'.'
name|'head_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
nl|'\n'
comment|'# check container listing metadata'
nl|'\n'
name|'container_metadata'
op|','
name|'objs'
op|'='
name|'client'
op|'.'
name|'get_container'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'obj'
name|'in'
name|'objs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'obj'
op|'['
string|"'name'"
op|']'
op|'=='
name|'self'
op|'.'
name|'object_name'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'obj not found in container listing'"
op|')'
newline|'\n'
dedent|''
name|'expected'
op|'='
string|"'bar'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'obj'
op|'['
string|"'content_type'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'x-object-meta-color'"
op|']'
op|','
string|"'Blue'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_object_metadata_matches_listing'
op|'('
name|'obj'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_container_dbs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_object_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_suffix_hashes'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_ctype_replicated_when_subsequent_post_without_ctype
dedent|''
name|'def'
name|'test_post_ctype_replicated_when_subsequent_post_without_ctype'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# primary half                     handoff half'
nl|'\n'
comment|'# ------------                     ------------'
nl|'\n'
comment|'# t0.data: ctype = foo'
nl|'\n'
comment|'#                                  t1.data: ctype = bar'
nl|'\n'
comment|'# t2.meta: ctype = bif'
nl|'\n'
comment|"#                                  t3.data: ctype = baz, color = 'Red'"
nl|'\n'
comment|'#               t4.meta: color = Blue'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#              ...run replicator and expect...'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#               t1.data:'
nl|'\n'
comment|'#               t4-delta.meta: ctype = baz, color = Blue'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy_index'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# incomplete write'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'older'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# handoff write'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'bar'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'newer'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# incomplete post with content type'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_post_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'bif'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# incomplete post to handoff with content type'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_post_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'baz'"
op|','
nl|'\n'
string|"'X-Object-Meta-Color'"
op|':'
string|"'Red'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# complete post with no content type'
nl|'\n'
name|'self'
op|'.'
name|'_post_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'X-Object-Meta-Color'"
op|':'
string|"'Blue'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'ignored'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|"# 'baz' wins over 'bar' but 'Blue' wins over 'Red'"
nl|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check object metadata'
nl|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check container listing metadata'
nl|'\n'
name|'container_metadata'
op|','
name|'objs'
op|'='
name|'client'
op|'.'
name|'get_container'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'obj'
name|'in'
name|'objs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'obj'
op|'['
string|"'name'"
op|']'
op|'=='
name|'self'
op|'.'
name|'object_name'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'expected'
op|'='
string|"'baz'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'obj'
op|'['
string|"'content_type'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'x-object-meta-color'"
op|']'
op|','
string|"'Blue'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'x-object-sysmeta-test'"
op|']'
op|','
string|"'newer'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_object_metadata_matches_listing'
op|'('
name|'obj'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_container_dbs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_object_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_suffix_hashes'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_put_ctype_replicated_when_subsequent_posts_without_ctype
dedent|''
name|'def'
name|'test_put_ctype_replicated_when_subsequent_posts_without_ctype'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# primary half                     handoff half'
nl|'\n'
comment|'# ------------                     ------------'
nl|'\n'
comment|'#               t0.data: ctype = foo'
nl|'\n'
comment|'#                                  t1.data: ctype = bar'
nl|'\n'
comment|'# t2.meta:'
nl|'\n'
comment|'#                                  t3.meta'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#              ...run replicator and expect...'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#               t1.data: ctype = bar'
nl|'\n'
comment|'#               t3.meta'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy_index'
op|'='
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'older'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# incomplete write to handoff half'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'bar'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'newer'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# incomplete post with no content type to primary half'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_post_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'X-Object-Meta-Color'"
op|':'
string|"'Red'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'ignored'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# incomplete post with no content type to handoff half'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_post_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'X-Object-Meta-Color'"
op|':'
string|"'Blue'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check object metadata'
nl|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check container listing metadata'
nl|'\n'
name|'container_metadata'
op|','
name|'objs'
op|'='
name|'client'
op|'.'
name|'get_container'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'obj'
name|'in'
name|'objs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'obj'
op|'['
string|"'name'"
op|']'
op|'=='
name|'self'
op|'.'
name|'object_name'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'expected'
op|'='
string|"'bar'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'obj'
op|'['
string|"'content_type'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_object_metadata_matches_listing'
op|'('
name|'obj'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'x-object-meta-color'"
op|']'
op|','
string|"'Blue'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'x-object-sysmeta-test'"
op|']'
op|','
string|"'newer'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_object_metadata_matches_listing'
op|'('
name|'obj'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_container_dbs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_object_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_suffix_hashes'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_posted_metadata_only_persists_after_prior_put
dedent|''
name|'def'
name|'test_posted_metadata_only_persists_after_prior_put'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# newer metadata posted to subset of nodes should persist after an'
nl|'\n'
comment|'# earlier put on other nodes, but older content-type on that subset'
nl|'\n'
comment|'# should not persist'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy_index'
op|'='
number|'0'
op|')'
newline|'\n'
comment|'# incomplete put to handoff'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'oldest'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'oldest'"
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'oldest'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
comment|'# incomplete put to primary'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'oldest'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'oldest'"
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'oldest'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# incomplete post with content-type to handoff'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_post_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'newer'"
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'newer'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# incomplete put to primary'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'newest'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'newest'"
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'newer'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# incomplete post with no content-type to handoff which still has'
nl|'\n'
comment|'# out of date content-type'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_post_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'X-Object-Meta-Test'"
op|':'
string|"'newest'"
op|'}'
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'x-object-meta-test'"
op|']'
op|','
string|"'newest'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'content-type'"
op|']'
op|','
string|"'newer'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check object metadata'
nl|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'x-object-meta-test'"
op|']'
op|','
string|"'newest'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'x-object-sysmeta-test'"
op|']'
op|','
string|"'newest'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'content-type'"
op|']'
op|','
string|"'newest'"
op|')'
newline|'\n'
nl|'\n'
comment|'# check container listing metadata'
nl|'\n'
name|'container_metadata'
op|','
name|'objs'
op|'='
name|'client'
op|'.'
name|'get_container'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'obj'
name|'in'
name|'objs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'obj'
op|'['
string|"'name'"
op|']'
op|'=='
name|'self'
op|'.'
name|'object_name'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'obj'
op|'['
string|"'content_type'"
op|']'
op|','
string|"'newest'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_object_metadata_matches_listing'
op|'('
name|'obj'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_object_metadata_matches_listing'
op|'('
name|'obj'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_container_dbs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_object_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_suffix_hashes'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_trumped_by_prior_delete
dedent|''
name|'def'
name|'test_post_trumped_by_prior_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# new metadata and content-type posted to subset of nodes should not'
nl|'\n'
comment|'# cause object to persist after replication of an earlier delete on'
nl|'\n'
comment|'# other nodes.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy_index'
op|'='
number|'0'
op|')'
newline|'\n'
comment|'# incomplete put'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'oldest'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'oldest'"
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'oldest'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# incomplete put then delete'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'oldest'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'oldest'"
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'oldest'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_delete_object'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# handoff post'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_post_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'newest'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'ignored'"
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'newest'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# check object metadata'
nl|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'_get_object_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'x-object-sysmeta-test'"
op|']'
op|','
string|"'oldest'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'x-object-meta-test'"
op|']'
op|','
string|"'newest'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'content-type'"
op|']'
op|','
string|"'newest'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# delete trumps later post'
nl|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check object is now deleted'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'UnexpectedResponse'
op|','
name|'self'
op|'.'
name|'_get_object_metadata'
op|')'
newline|'\n'
name|'container_metadata'
op|','
name|'objs'
op|'='
name|'client'
op|'.'
name|'get_container'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'objs'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_container_dbs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_deleted_object'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_assert_consistent_suffix_hashes'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|'"__main__"'
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
