begin_unit
comment|'#! /usr/bin/env python'
nl|'\n'
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'__future__'
name|'import'
name|'print_function'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
nl|'\n'
name|'from'
name|'errno'
name|'import'
name|'EEXIST'
newline|'\n'
name|'from'
name|'itertools'
name|'import'
name|'islice'
op|','
name|'izip'
newline|'\n'
name|'from'
name|'operator'
name|'import'
name|'itemgetter'
newline|'\n'
name|'from'
name|'os'
name|'import'
name|'mkdir'
newline|'\n'
name|'from'
name|'os'
op|'.'
name|'path'
name|'import'
name|'basename'
op|','
name|'abspath'
op|','
name|'dirname'
op|','
name|'exists'
op|','
name|'join'
name|'as'
name|'pathjoin'
newline|'\n'
name|'from'
name|'sys'
name|'import'
name|'argv'
name|'as'
name|'sys_argv'
op|','
name|'exit'
op|','
name|'stderr'
op|','
name|'stdout'
newline|'\n'
name|'from'
name|'textwrap'
name|'import'
name|'wrap'
newline|'\n'
name|'from'
name|'time'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'optparse'
newline|'\n'
name|'import'
name|'math'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'exceptions'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
name|'import'
name|'RingBuilder'
op|','
name|'Ring'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
op|'.'
name|'builder'
name|'import'
name|'MAX_BALANCE'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
op|'.'
name|'utils'
name|'import'
name|'validate_args'
op|','
name|'validate_and_normalize_ip'
op|','
name|'build_dev_from_opts'
op|','
name|'parse_builder_ring_filename_args'
op|','
name|'parse_search_value'
op|','
name|'parse_search_values_from_opts'
op|','
name|'parse_change_values_from_opts'
op|','
name|'dispersion_report'
op|','
name|'parse_add_value'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'lock_parent_directory'
newline|'\n'
nl|'\n'
DECL|variable|MAJOR_VERSION
name|'MAJOR_VERSION'
op|'='
number|'1'
newline|'\n'
DECL|variable|MINOR_VERSION
name|'MINOR_VERSION'
op|'='
number|'3'
newline|'\n'
DECL|variable|EXIT_SUCCESS
name|'EXIT_SUCCESS'
op|'='
number|'0'
newline|'\n'
DECL|variable|EXIT_WARNING
name|'EXIT_WARNING'
op|'='
number|'1'
newline|'\n'
DECL|variable|EXIT_ERROR
name|'EXIT_ERROR'
op|'='
number|'2'
newline|'\n'
nl|'\n'
name|'global'
name|'argv'
op|','
name|'backup_dir'
op|','
name|'builder'
op|','
name|'builder_file'
op|','
name|'ring_file'
newline|'\n'
name|'argv'
op|'='
name|'backup_dir'
op|'='
name|'builder'
op|'='
name|'builder_file'
op|'='
name|'ring_file'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|format_device
name|'def'
name|'format_device'
op|'('
name|'dev'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Format a device for display.\n    """'
newline|'\n'
name|'copy_dev'
op|'='
name|'dev'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
op|'('
string|"'ip'"
op|','
string|"'replication_ip'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"':'"
name|'in'
name|'copy_dev'
op|'['
name|'key'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'copy_dev'
op|'['
name|'key'
op|']'
op|'='
string|"'['"
op|'+'
name|'copy_dev'
op|'['
name|'key'
op|']'
op|'+'
string|"']'"
newline|'\n'
dedent|''
dedent|''
name|'return'
op|'('
string|"'d%(id)sr%(region)sz%(zone)s-%(ip)s:%(port)sR'"
nl|'\n'
string|"'%(replication_ip)s:%(replication_port)s/%(device)s_'"
nl|'\n'
string|'\'"%(meta)s"\''
op|'%'
name|'copy_dev'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_parse_search_values
dedent|''
name|'def'
name|'_parse_search_values'
op|'('
name|'argvish'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'new_cmd_format'
op|','
name|'opts'
op|','
name|'args'
op|'='
name|'validate_args'
op|'('
name|'argvish'
op|')'
newline|'\n'
nl|'\n'
comment|"# We'll either parse the all-in-one-string format or the"
nl|'\n'
comment|'# --options format,'
nl|'\n'
comment|'# but not both. If both are specified, raise an error.'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'search_values'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'new_cmd_format'
name|'or'
name|'len'
op|'('
name|'args'
op|')'
op|'!='
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'search'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
name|'search_values'
op|'='
name|'parse_search_value'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'search_values'
op|'='
name|'parse_search_values_from_opts'
op|'('
name|'opts'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'search_values'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
name|'e'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_find_parts
dedent|''
dedent|''
name|'def'
name|'_find_parts'
op|'('
name|'devs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'devs'
op|'='
op|'['
name|'d'
op|'['
string|"'id'"
op|']'
name|'for'
name|'d'
name|'in'
name|'devs'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'devs'
name|'or'
name|'not'
name|'builder'
op|'.'
name|'_replica2part2dev'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'partition_count'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'replica'
name|'in'
name|'builder'
op|'.'
name|'_replica2part2dev'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'partition'
op|','
name|'device'
name|'in'
name|'enumerate'
op|'('
name|'replica'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'device'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'partition'
name|'not'
name|'in'
name|'partition_count'
op|':'
newline|'\n'
indent|'                    '
name|'partition_count'
op|'['
name|'partition'
op|']'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'partition_count'
op|'['
name|'partition'
op|']'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
comment|'# Sort by number of found replicas to keep the output format'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'sorted_partition_count'
op|'='
name|'sorted'
op|'('
nl|'\n'
name|'partition_count'
op|'.'
name|'items'
op|'('
op|')'
op|','
name|'key'
op|'='
name|'itemgetter'
op|'('
number|'1'
op|')'
op|','
name|'reverse'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'sorted_partition_count'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_parse_list_parts_values
dedent|''
name|'def'
name|'_parse_list_parts_values'
op|'('
name|'argvish'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'new_cmd_format'
op|','
name|'opts'
op|','
name|'args'
op|'='
name|'validate_args'
op|'('
name|'argvish'
op|')'
newline|'\n'
nl|'\n'
comment|"# We'll either parse the all-in-one-string format or the"
nl|'\n'
comment|'# --options format,'
nl|'\n'
comment|'# but not both. If both are specified, raise an error.'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'devs'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'new_cmd_format'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'list_parts'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'arg'
name|'in'
name|'args'
op|':'
newline|'\n'
indent|'                '
name|'devs'
op|'.'
name|'extend'
op|'('
nl|'\n'
name|'builder'
op|'.'
name|'search_devs'
op|'('
name|'parse_search_value'
op|'('
name|'arg'
op|')'
op|')'
name|'or'
op|'['
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'devs'
op|'.'
name|'extend'
op|'('
name|'builder'
op|'.'
name|'search_devs'
op|'('
nl|'\n'
name|'parse_search_values_from_opts'
op|'('
name|'opts'
op|')'
op|')'
name|'or'
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'devs'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
name|'e'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_parse_add_values
dedent|''
dedent|''
name|'def'
name|'_parse_add_values'
op|'('
name|'argvish'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Parse devices to add as specified on the command line.\n\n    Will exit on error and spew warnings.\n\n    :returns: array of device dicts\n    """'
newline|'\n'
name|'new_cmd_format'
op|','
name|'opts'
op|','
name|'args'
op|'='
name|'validate_args'
op|'('
name|'argvish'
op|')'
newline|'\n'
nl|'\n'
comment|"# We'll either parse the all-in-one-string format or the"
nl|'\n'
comment|'# --options format,'
nl|'\n'
comment|'# but not both. If both are specified, raise an error.'
nl|'\n'
name|'parsed_devs'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'new_cmd_format'
name|'or'
name|'len'
op|'('
name|'args'
op|')'
op|'%'
number|'2'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'add'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'devs_and_weights'
op|'='
name|'izip'
op|'('
name|'islice'
op|'('
name|'args'
op|','
number|'0'
op|','
name|'len'
op|'('
name|'args'
op|')'
op|','
number|'2'
op|')'
op|','
nl|'\n'
name|'islice'
op|'('
name|'args'
op|','
number|'1'
op|','
name|'len'
op|'('
name|'args'
op|')'
op|','
number|'2'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'devstr'
op|','
name|'weightstr'
name|'in'
name|'devs_and_weights'
op|':'
newline|'\n'
indent|'            '
name|'dev_dict'
op|'='
name|'parse_add_value'
op|'('
name|'devstr'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'dev_dict'
op|'['
string|"'region'"
op|']'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'stderr'
op|'.'
name|'write'
op|'('
string|"'WARNING: No region specified for %s. '"
nl|'\n'
string|"'Defaulting to region 1.\\n'"
op|'%'
name|'devstr'
op|')'
newline|'\n'
name|'dev_dict'
op|'['
string|"'region'"
op|']'
op|'='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'dev_dict'
op|'['
string|"'replication_ip'"
op|']'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'dev_dict'
op|'['
string|"'replication_ip'"
op|']'
op|'='
name|'dev_dict'
op|'['
string|"'ip'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'dev_dict'
op|'['
string|"'replication_port'"
op|']'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'dev_dict'
op|'['
string|"'replication_port'"
op|']'
op|'='
name|'dev_dict'
op|'['
string|"'port'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'weight'
op|'='
name|'float'
op|'('
name|'weightstr'
op|')'
newline|'\n'
name|'if'
name|'weight'
op|'<'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ValueError'
op|'('
string|"'Invalid weight value: %s'"
op|'%'
name|'devstr'
op|')'
newline|'\n'
dedent|''
name|'dev_dict'
op|'['
string|"'weight'"
op|']'
op|'='
name|'weight'
newline|'\n'
nl|'\n'
name|'parsed_devs'
op|'.'
name|'append'
op|'('
name|'dev_dict'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'parsed_devs'
op|'.'
name|'append'
op|'('
name|'build_dev_from_opts'
op|'('
name|'opts'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'parsed_devs'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_set_weight_values
dedent|''
name|'def'
name|'_set_weight_values'
op|'('
name|'devs'
op|','
name|'weight'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'devs'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
string|"'Search value matched 0 devices.\\n'"
nl|'\n'
string|"'The on-disk ring builder is unchanged.'"
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'devs'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
string|"'Matched more than one device:'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'    %s'"
op|'%'
name|'format_device'
op|'('
name|'dev'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'raw_input'
op|'('
string|"'Are you sure you want to update the weight for '"
nl|'\n'
string|"'these %s devices? (y/N) '"
op|'%'
name|'len'
op|'('
name|'devs'
op|')'
op|')'
op|'!='
string|"'y'"
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'Aborting device modifications'"
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'        '
name|'builder'
op|'.'
name|'set_dev_weight'
op|'('
name|'dev'
op|'['
string|"'id'"
op|']'
op|','
name|'weight'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'%s weight set to %s'"
op|'%'
op|'('
name|'format_device'
op|'('
name|'dev'
op|')'
op|','
nl|'\n'
name|'dev'
op|'['
string|"'weight'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_parse_set_weight_values
dedent|''
dedent|''
name|'def'
name|'_parse_set_weight_values'
op|'('
name|'argvish'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'new_cmd_format'
op|','
name|'opts'
op|','
name|'args'
op|'='
name|'validate_args'
op|'('
name|'argvish'
op|')'
newline|'\n'
nl|'\n'
comment|"# We'll either parse the all-in-one-string format or the"
nl|'\n'
comment|'# --options format,'
nl|'\n'
comment|'# but not both. If both are specified, raise an error.'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'devs'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'not'
name|'new_cmd_format'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'%'
number|'2'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'set_weight'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'devs_and_weights'
op|'='
name|'izip'
op|'('
name|'islice'
op|'('
name|'argvish'
op|','
number|'0'
op|','
name|'len'
op|'('
name|'argvish'
op|')'
op|','
number|'2'
op|')'
op|','
nl|'\n'
name|'islice'
op|'('
name|'argvish'
op|','
number|'1'
op|','
name|'len'
op|'('
name|'argvish'
op|')'
op|','
number|'2'
op|')'
op|')'
newline|'\n'
name|'for'
name|'devstr'
op|','
name|'weightstr'
name|'in'
name|'devs_and_weights'
op|':'
newline|'\n'
indent|'                '
name|'devs'
op|'.'
name|'extend'
op|'('
name|'builder'
op|'.'
name|'search_devs'
op|'('
nl|'\n'
name|'parse_search_value'
op|'('
name|'devstr'
op|')'
op|')'
name|'or'
op|'['
op|']'
op|')'
newline|'\n'
name|'weight'
op|'='
name|'float'
op|'('
name|'weightstr'
op|')'
newline|'\n'
name|'_set_weight_values'
op|'('
name|'devs'
op|','
name|'weight'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'!='
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'set_weight'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'devs'
op|'.'
name|'extend'
op|'('
name|'builder'
op|'.'
name|'search_devs'
op|'('
nl|'\n'
name|'parse_search_values_from_opts'
op|'('
name|'opts'
op|')'
op|')'
name|'or'
op|'['
op|']'
op|')'
newline|'\n'
name|'weight'
op|'='
name|'float'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'_set_weight_values'
op|'('
name|'devs'
op|','
name|'weight'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
name|'e'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_set_info_values
dedent|''
dedent|''
name|'def'
name|'_set_info_values'
op|'('
name|'devs'
op|','
name|'change'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'if'
name|'not'
name|'devs'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
string|'"Search value matched 0 devices.\\n"'
nl|'\n'
string|'"The on-disk ring builder is unchanged."'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'devs'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
string|"'Matched more than one device:'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'    %s'"
op|'%'
name|'format_device'
op|'('
name|'dev'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'raw_input'
op|'('
string|"'Are you sure you want to update the info for '"
nl|'\n'
string|"'these %s devices? (y/N) '"
op|'%'
name|'len'
op|'('
name|'devs'
op|')'
op|')'
op|'!='
string|"'y'"
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'Aborting device modifications'"
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'        '
name|'orig_dev_string'
op|'='
name|'format_device'
op|'('
name|'dev'
op|')'
newline|'\n'
name|'test_dev'
op|'='
name|'dict'
op|'('
name|'dev'
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'change'
op|':'
newline|'\n'
indent|'            '
name|'test_dev'
op|'['
name|'key'
op|']'
op|'='
name|'change'
op|'['
name|'key'
op|']'
newline|'\n'
dedent|''
name|'for'
name|'check_dev'
name|'in'
name|'builder'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'check_dev'
name|'or'
name|'check_dev'
op|'['
string|"'id'"
op|']'
op|'=='
name|'test_dev'
op|'['
string|"'id'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'check_dev'
op|'['
string|"'ip'"
op|']'
op|'=='
name|'test_dev'
op|'['
string|"'ip'"
op|']'
name|'and'
name|'check_dev'
op|'['
string|"'port'"
op|']'
op|'=='
name|'test_dev'
op|'['
string|"'port'"
op|']'
name|'and'
name|'check_dev'
op|'['
string|"'device'"
op|']'
op|'=='
name|'test_dev'
op|'['
string|"'device'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'('
string|"'Device %d already uses %s:%d/%s.'"
op|'%'
nl|'\n'
op|'('
name|'check_dev'
op|'['
string|"'id'"
op|']'
op|','
name|'check_dev'
op|'['
string|"'ip'"
op|']'
op|','
nl|'\n'
name|'check_dev'
op|'['
string|"'port'"
op|']'
op|','
name|'check_dev'
op|'['
string|"'device'"
op|']'
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'key'
name|'in'
name|'change'
op|':'
newline|'\n'
indent|'            '
name|'dev'
op|'['
name|'key'
op|']'
op|'='
name|'change'
op|'['
name|'key'
op|']'
newline|'\n'
dedent|''
name|'print'
op|'('
string|"'Device %s is now %s'"
op|'%'
op|'('
name|'orig_dev_string'
op|','
nl|'\n'
name|'format_device'
op|'('
name|'dev'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_parse_set_info_values
dedent|''
dedent|''
name|'def'
name|'_parse_set_info_values'
op|'('
name|'argvish'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'new_cmd_format'
op|','
name|'opts'
op|','
name|'args'
op|'='
name|'validate_args'
op|'('
name|'argvish'
op|')'
newline|'\n'
nl|'\n'
comment|"# We'll either parse the all-in-one-string format or the"
nl|'\n'
comment|'# --options format,'
nl|'\n'
comment|'# but not both. If both are specified, raise an error.'
nl|'\n'
name|'if'
name|'not'
name|'new_cmd_format'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'%'
number|'2'
op|'!='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'search'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'searches_and_changes'
op|'='
name|'izip'
op|'('
name|'islice'
op|'('
name|'argvish'
op|','
number|'0'
op|','
name|'len'
op|'('
name|'argvish'
op|')'
op|','
number|'2'
op|')'
op|','
nl|'\n'
name|'islice'
op|'('
name|'argvish'
op|','
number|'1'
op|','
name|'len'
op|'('
name|'argvish'
op|')'
op|','
number|'2'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'search_value'
op|','
name|'change_value'
name|'in'
name|'searches_and_changes'
op|':'
newline|'\n'
indent|'            '
name|'devs'
op|'='
name|'builder'
op|'.'
name|'search_devs'
op|'('
name|'parse_search_value'
op|'('
name|'search_value'
op|')'
op|')'
newline|'\n'
name|'change'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'ip'
op|'='
string|"''"
newline|'\n'
name|'if'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
name|'change_value'
op|'['
number|'0'
op|']'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
op|'('
name|'i'
op|'<'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
nl|'\n'
name|'change_value'
op|'['
name|'i'
op|']'
name|'in'
string|"'0123456789.'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'ip'
op|'='
name|'change_value'
op|'['
op|':'
name|'i'
op|']'
newline|'\n'
name|'change_value'
op|'='
name|'change_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
name|'change_value'
op|'['
number|'0'
op|']'
op|'=='
string|"'['"
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
name|'change_value'
op|'['
name|'i'
op|']'
op|'!='
string|"']'"
op|':'
newline|'\n'
indent|'                    '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'i'
op|'+='
number|'1'
newline|'\n'
name|'ip'
op|'='
name|'change_value'
op|'['
op|':'
name|'i'
op|']'
op|'.'
name|'lstrip'
op|'('
string|"'['"
op|')'
op|'.'
name|'rstrip'
op|'('
string|"']'"
op|')'
newline|'\n'
name|'change_value'
op|'='
name|'change_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'ip'
op|':'
newline|'\n'
indent|'                '
name|'change'
op|'['
string|"'ip'"
op|']'
op|'='
name|'validate_and_normalize_ip'
op|'('
name|'ip'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'change_value'
op|'.'
name|'startswith'
op|'('
string|"':'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
name|'change_value'
op|'['
name|'i'
op|']'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'change'
op|'['
string|"'port'"
op|']'
op|'='
name|'int'
op|'('
name|'change_value'
op|'['
number|'1'
op|':'
name|'i'
op|']'
op|')'
newline|'\n'
name|'change_value'
op|'='
name|'change_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'change_value'
op|'.'
name|'startswith'
op|'('
string|"'R'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'change_value'
op|'='
name|'change_value'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'replication_ip'
op|'='
string|"''"
newline|'\n'
name|'if'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
name|'change_value'
op|'['
number|'0'
op|']'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
op|'('
name|'i'
op|'<'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
nl|'\n'
name|'change_value'
op|'['
name|'i'
op|']'
name|'in'
string|"'0123456789.'"
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'replication_ip'
op|'='
name|'change_value'
op|'['
op|':'
name|'i'
op|']'
newline|'\n'
name|'change_value'
op|'='
name|'change_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
name|'change_value'
op|'['
number|'0'
op|']'
op|'=='
string|"'['"
op|':'
newline|'\n'
indent|'                    '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
name|'change_value'
op|'['
name|'i'
op|']'
op|'!='
string|"']'"
op|':'
newline|'\n'
indent|'                        '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'i'
op|'+='
number|'1'
newline|'\n'
name|'replication_ip'
op|'='
name|'change_value'
op|'['
op|':'
name|'i'
op|']'
op|'.'
name|'lstrip'
op|'('
string|"'['"
op|')'
op|'.'
name|'rstrip'
op|'('
string|"']'"
op|')'
newline|'\n'
name|'change_value'
op|'='
name|'change_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'replication_ip'
op|':'
newline|'\n'
indent|'                    '
name|'change'
op|'['
string|"'replication_ip'"
op|']'
op|'='
name|'validate_and_normalize_ip'
op|'('
name|'replication_ip'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'change_value'
op|'.'
name|'startswith'
op|'('
string|"':'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
name|'change_value'
op|'['
name|'i'
op|']'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'change'
op|'['
string|"'replication_port'"
op|']'
op|'='
name|'int'
op|'('
name|'change_value'
op|'['
number|'1'
op|':'
name|'i'
op|']'
op|')'
newline|'\n'
name|'change_value'
op|'='
name|'change_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'change_value'
op|'.'
name|'startswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
name|'change_value'
op|'['
name|'i'
op|']'
op|'!='
string|"'_'"
op|':'
newline|'\n'
indent|'                    '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'change'
op|'['
string|"'device'"
op|']'
op|'='
name|'change_value'
op|'['
number|'1'
op|':'
name|'i'
op|']'
newline|'\n'
name|'change_value'
op|'='
name|'change_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'change_value'
op|'.'
name|'startswith'
op|'('
string|"'_'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'change'
op|'['
string|"'meta'"
op|']'
op|'='
name|'change_value'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'change_value'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'if'
name|'change_value'
name|'or'
name|'not'
name|'change'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ValueError'
op|'('
string|"'Invalid set info change value: %s'"
op|'%'
nl|'\n'
name|'repr'
op|'('
name|'argvish'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'_set_info_values'
op|'('
name|'devs'
op|','
name|'change'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'devs'
op|'='
name|'builder'
op|'.'
name|'search_devs'
op|'('
name|'parse_search_values_from_opts'
op|'('
name|'opts'
op|')'
op|')'
newline|'\n'
name|'change'
op|'='
name|'parse_change_values_from_opts'
op|'('
name|'opts'
op|')'
newline|'\n'
name|'_set_info_values'
op|'('
name|'devs'
op|','
name|'change'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_parse_remove_values
dedent|''
dedent|''
name|'def'
name|'_parse_remove_values'
op|'('
name|'argvish'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'    '
name|'new_cmd_format'
op|','
name|'opts'
op|','
name|'args'
op|'='
name|'validate_args'
op|'('
name|'argvish'
op|')'
newline|'\n'
nl|'\n'
comment|"# We'll either parse the all-in-one-string format or the"
nl|'\n'
comment|'# --options format,'
nl|'\n'
comment|'# but not both. If both are specified, raise an error.'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'devs'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'new_cmd_format'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'remove'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'arg'
name|'in'
name|'args'
op|':'
newline|'\n'
indent|'                '
name|'devs'
op|'.'
name|'extend'
op|'('
name|'builder'
op|'.'
name|'search_devs'
op|'('
nl|'\n'
name|'parse_search_value'
op|'('
name|'arg'
op|')'
op|')'
name|'or'
op|'['
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'devs'
op|'.'
name|'extend'
op|'('
name|'builder'
op|'.'
name|'search_devs'
op|'('
nl|'\n'
name|'parse_search_values_from_opts'
op|'('
name|'opts'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'devs'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
name|'e'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Commands
dedent|''
dedent|''
name|'class'
name|'Commands'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|unknown
indent|'    '
name|'def'
name|'unknown'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
string|"'Unknown command: %s'"
op|'%'
name|'argv'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
DECL|member|create
dedent|''
name|'def'
name|'create'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file> create <part_power> <replicas>\n                                         <min_part_hours>\n    Creates <builder_file> with 2^<part_power> partitions and <replicas>.\n    <min_part_hours> is number of hours to restrict moving a partition more\n    than once.\n        """'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'6'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'create'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
name|'builder'
op|'='
name|'RingBuilder'
op|'('
name|'int'
op|'('
name|'argv'
op|'['
number|'3'
op|']'
op|')'
op|','
name|'float'
op|'('
name|'argv'
op|'['
number|'4'
op|']'
op|')'
op|','
name|'int'
op|'('
name|'argv'
op|'['
number|'5'
op|']'
op|')'
op|')'
newline|'\n'
name|'backup_dir'
op|'='
name|'pathjoin'
op|'('
name|'dirname'
op|'('
name|'builder_file'
op|')'
op|','
string|"'backups'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'mkdir'
op|'('
name|'backup_dir'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'err'
op|'.'
name|'errno'
op|'!='
name|'EEXIST'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'builder'
op|'.'
name|'save'
op|'('
name|'pathjoin'
op|'('
name|'backup_dir'
op|','
nl|'\n'
string|"'%d.'"
op|'%'
name|'time'
op|'('
op|')'
op|'+'
name|'basename'
op|'('
name|'builder_file'
op|')'
op|')'
op|')'
newline|'\n'
name|'builder'
op|'.'
name|'save'
op|'('
name|'builder_file'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_SUCCESS'
op|')'
newline|'\n'
nl|'\n'
DECL|function|default
dedent|''
name|'def'
name|'default'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file>\n    Shows information about the ring and the devices within.\n        """'
newline|'\n'
name|'print'
op|'('
string|"'%s, build version %d'"
op|'%'
op|'('
name|'builder_file'
op|','
name|'builder'
op|'.'
name|'version'
op|')'
op|')'
newline|'\n'
name|'regions'
op|'='
number|'0'
newline|'\n'
name|'zones'
op|'='
number|'0'
newline|'\n'
name|'balance'
op|'='
number|'0'
newline|'\n'
name|'dev_count'
op|'='
number|'0'
newline|'\n'
name|'if'
name|'builder'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'regions'
op|'='
name|'len'
op|'('
name|'set'
op|'('
name|'d'
op|'['
string|"'region'"
op|']'
name|'for'
name|'d'
name|'in'
name|'builder'
op|'.'
name|'devs'
nl|'\n'
name|'if'
name|'d'
name|'is'
name|'not'
name|'None'
op|')'
op|')'
newline|'\n'
name|'zones'
op|'='
name|'len'
op|'('
name|'set'
op|'('
op|'('
name|'d'
op|'['
string|"'region'"
op|']'
op|','
name|'d'
op|'['
string|"'zone'"
op|']'
op|')'
name|'for'
name|'d'
name|'in'
name|'builder'
op|'.'
name|'devs'
nl|'\n'
name|'if'
name|'d'
name|'is'
name|'not'
name|'None'
op|')'
op|')'
newline|'\n'
name|'dev_count'
op|'='
name|'len'
op|'('
op|'['
name|'dev'
name|'for'
name|'dev'
name|'in'
name|'builder'
op|'.'
name|'devs'
nl|'\n'
name|'if'
name|'dev'
name|'is'
name|'not'
name|'None'
op|']'
op|')'
newline|'\n'
name|'balance'
op|'='
name|'builder'
op|'.'
name|'get_balance'
op|'('
op|')'
newline|'\n'
dedent|''
name|'dispersion_trailer'
op|'='
string|"''"
name|'if'
name|'builder'
op|'.'
name|'dispersion'
name|'is'
name|'None'
name|'else'
op|'('
nl|'\n'
string|"', %.02f dispersion'"
op|'%'
op|'('
name|'builder'
op|'.'
name|'dispersion'
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'%d partitions, %.6f replicas, %d regions, %d zones, '"
nl|'\n'
string|"'%d devices, %.02f balance%s'"
op|'%'
op|'('
nl|'\n'
name|'builder'
op|'.'
name|'parts'
op|','
name|'builder'
op|'.'
name|'replicas'
op|','
name|'regions'
op|','
name|'zones'
op|','
name|'dev_count'
op|','
nl|'\n'
name|'balance'
op|','
name|'dispersion_trailer'
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'The minimum number of hours before a partition can be '"
nl|'\n'
string|"'reassigned is %s'"
op|'%'
name|'builder'
op|'.'
name|'min_part_hours'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'The overload factor is %0.2f%% (%.6f)'"
op|'%'
op|'('
nl|'\n'
name|'builder'
op|'.'
name|'overload'
op|'*'
number|'100'
op|','
name|'builder'
op|'.'
name|'overload'
op|')'
op|')'
newline|'\n'
name|'if'
name|'builder'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'Devices:    id  region  zone      ip address  port  '"
nl|'\n'
string|"'replication ip  replication port      name '"
nl|'\n'
string|"'weight partitions balance meta'"
op|')'
newline|'\n'
name|'weighted_parts'
op|'='
name|'builder'
op|'.'
name|'parts'
op|'*'
name|'builder'
op|'.'
name|'replicas'
op|'/'
name|'sum'
op|'('
name|'d'
op|'['
string|"'weight'"
op|']'
name|'for'
name|'d'
name|'in'
name|'builder'
op|'.'
name|'devs'
name|'if'
name|'d'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'builder'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'dev'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'dev'
op|'['
string|"'weight'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'dev'
op|'['
string|"'parts'"
op|']'
op|':'
newline|'\n'
indent|'                        '
name|'balance'
op|'='
name|'MAX_BALANCE'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'balance'
op|'='
number|'0'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'balance'
op|'='
number|'100.0'
op|'*'
name|'dev'
op|'['
string|"'parts'"
op|']'
op|'/'
op|'('
name|'dev'
op|'['
string|"'weight'"
op|']'
op|'*'
name|'weighted_parts'
op|')'
op|'-'
number|'100.0'
newline|'\n'
dedent|''
name|'print'
op|'('
string|"'         %5d %7d %5d %15s %5d %15s %17d %9s %6.02f '"
nl|'\n'
string|"'%10s %7.02f %s'"
op|'%'
nl|'\n'
op|'('
name|'dev'
op|'['
string|"'id'"
op|']'
op|','
name|'dev'
op|'['
string|"'region'"
op|']'
op|','
name|'dev'
op|'['
string|"'zone'"
op|']'
op|','
name|'dev'
op|'['
string|"'ip'"
op|']'
op|','
nl|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|','
name|'dev'
op|'['
string|"'replication_ip'"
op|']'
op|','
nl|'\n'
name|'dev'
op|'['
string|"'replication_port'"
op|']'
op|','
name|'dev'
op|'['
string|"'device'"
op|']'
op|','
name|'dev'
op|'['
string|"'weight'"
op|']'
op|','
nl|'\n'
name|'dev'
op|'['
string|"'parts'"
op|']'
op|','
name|'balance'
op|','
name|'dev'
op|'['
string|"'meta'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'exit'
op|'('
name|'EXIT_SUCCESS'
op|')'
newline|'\n'
nl|'\n'
DECL|function|search
dedent|''
name|'def'
name|'search'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file> search <search-value>\n\nor\n\nswift-ring-builder <builder_file> search\n    --region <region> --zone <zone> --ip <ip or hostname> --port <port>\n    --replication-ip <r_ip or r_hostname> --replication-port <r_port>\n    --device <device_name> --meta <meta> --weight <weight>\n\n    Where <r_ip>, <r_hostname> and <r_port> are replication ip, hostname\n    and port.\n    Any of the options are optional in both cases.\n\n    Shows information about matching devices.\n        """'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'4'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'search'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
op|')'
newline|'\n'
name|'print'
op|'('
name|'parse_search_value'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'devs'
op|'='
name|'builder'
op|'.'
name|'search_devs'
op|'('
name|'_parse_search_values'
op|'('
name|'argv'
op|'['
number|'3'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'No matching devices found'"
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
name|'print'
op|'('
string|"'Devices:    id  region  zone      ip address  port  '"
nl|'\n'
string|"'replication ip  replication port      name weight partitions '"
nl|'\n'
string|"'balance meta'"
op|')'
newline|'\n'
name|'weighted_parts'
op|'='
name|'builder'
op|'.'
name|'parts'
op|'*'
name|'builder'
op|'.'
name|'replicas'
op|'/'
name|'sum'
op|'('
name|'d'
op|'['
string|"'weight'"
op|']'
name|'for'
name|'d'
name|'in'
name|'builder'
op|'.'
name|'devs'
name|'if'
name|'d'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'dev'
op|'['
string|"'weight'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'dev'
op|'['
string|"'parts'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'balance'
op|'='
name|'MAX_BALANCE'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'balance'
op|'='
number|'0'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'balance'
op|'='
number|'100.0'
op|'*'
name|'dev'
op|'['
string|"'parts'"
op|']'
op|'/'
op|'('
name|'dev'
op|'['
string|"'weight'"
op|']'
op|'*'
name|'weighted_parts'
op|')'
op|'-'
number|'100.0'
newline|'\n'
dedent|''
name|'print'
op|'('
string|"'         %5d %7d %5d %15s %5d %15s %17d %9s %6.02f %10s '"
nl|'\n'
string|"'%7.02f %s'"
op|'%'
nl|'\n'
op|'('
name|'dev'
op|'['
string|"'id'"
op|']'
op|','
name|'dev'
op|'['
string|"'region'"
op|']'
op|','
name|'dev'
op|'['
string|"'zone'"
op|']'
op|','
name|'dev'
op|'['
string|"'ip'"
op|']'
op|','
nl|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|','
name|'dev'
op|'['
string|"'replication_ip'"
op|']'
op|','
name|'dev'
op|'['
string|"'replication_port'"
op|']'
op|','
nl|'\n'
name|'dev'
op|'['
string|"'device'"
op|']'
op|','
name|'dev'
op|'['
string|"'weight'"
op|']'
op|','
name|'dev'
op|'['
string|"'parts'"
op|']'
op|','
name|'balance'
op|','
nl|'\n'
name|'dev'
op|'['
string|"'meta'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'exit'
op|'('
name|'EXIT_SUCCESS'
op|')'
newline|'\n'
nl|'\n'
DECL|function|list_parts
dedent|''
name|'def'
name|'list_parts'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file> list_parts <search-value> [<search-value>] ..\n\nor\n\nswift-ring-builder <builder_file> list_parts\n    --region <region> --zone <zone> --ip <ip or hostname> --port <port>\n    --replication-ip <r_ip or r_hostname> --replication-port <r_port>\n    --device <device_name> --meta <meta> --weight <weight>\n\n    Where <r_ip>, <r_hostname> and <r_port> are replication ip, hostname\n    and port.\n    Any of the options are optional in both cases.\n\n    Returns a 2 column list of all the partitions that are assigned to any of\n    the devices matching the search values given. The first column is the\n    assigned partition number and the second column is the number of device\n    matches for that partition. The list is ordered from most number of matches\n    to least. If there are a lot of devices to match against, this command\n    could take a while to run.\n        """'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'4'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'list_parts'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
op|')'
newline|'\n'
name|'print'
op|'('
name|'parse_search_value'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'builder'
op|'.'
name|'_replica2part2dev'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|'\'Specified builder file \\"%s\\" is not rebalanced yet. \''
nl|'\n'
string|"'Please rebalance first.'"
op|'%'
name|'builder_file'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'devs'
op|'='
name|'_parse_list_parts_values'
op|'('
name|'argv'
op|'['
number|'3'
op|':'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'No matching devices found'"
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'sorted_partition_count'
op|'='
name|'_find_parts'
op|'('
name|'devs'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'sorted_partition_count'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'No matching devices found'"
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
op|'('
string|"'Partition   Matches'"
op|')'
newline|'\n'
name|'for'
name|'partition'
op|','
name|'count'
name|'in'
name|'sorted_partition_count'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'%9d   %7d'"
op|'%'
op|'('
name|'partition'
op|','
name|'count'
op|')'
op|')'
newline|'\n'
dedent|''
name|'exit'
op|'('
name|'EXIT_SUCCESS'
op|')'
newline|'\n'
nl|'\n'
DECL|function|add
dedent|''
name|'def'
name|'add'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file> add\n    [r<region>]z<zone>-<ip>:<port>[R<r_ip>:<r_port>]/<device_name>_<meta>\n     <weight>\n    [[r<region>]z<zone>-<ip>:<port>[R<r_ip>:<r_port>]/<device_name>_<meta>\n     <weight>] ...\n\n    Where <r_ip> and <r_port> are replication ip and port.\n\nor\n\nswift-ring-builder <builder_file> add\n    --region <region> --zone <zone> --ip <ip or hostname> --port <port>\n    [--replication-ip <r_ip or r_hostname>] [--replication-port <r_port>]\n    --device <device_name> --weight <weight>\n    [--meta <meta>]\n\n    Adds devices to the ring with the given information. No partitions will be\n    assigned to the new device until after running \'rebalance\'. This is so you\n    can make multiple device changes and rebalance them all just once.\n        """'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'5'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'add'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'new_dev'
name|'in'
name|'_parse_add_values'
op|'('
name|'argv'
op|'['
number|'3'
op|':'
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'dev'
name|'in'
name|'builder'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'dev'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                        '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'=='
name|'new_dev'
op|'['
string|"'ip'"
op|']'
name|'and'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'=='
name|'new_dev'
op|'['
string|"'port'"
op|']'
name|'and'
name|'dev'
op|'['
string|"'device'"
op|']'
op|'=='
name|'new_dev'
op|'['
string|"'device'"
op|']'
op|':'
newline|'\n'
indent|'                        '
name|'print'
op|'('
string|"'Device %d already uses %s:%d/%s.'"
op|'%'
nl|'\n'
op|'('
name|'dev'
op|'['
string|"'id'"
op|']'
op|','
name|'dev'
op|'['
string|"'ip'"
op|']'
op|','
nl|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|','
name|'dev'
op|'['
string|"'device'"
op|']'
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|'"The on-disk ring builder is unchanged.\\n"'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'dev_id'
op|'='
name|'builder'
op|'.'
name|'add_dev'
op|'('
name|'new_dev'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'Device %s with %s weight got id %s'"
op|'%'
nl|'\n'
op|'('
name|'format_device'
op|'('
name|'new_dev'
op|')'
op|','
name|'new_dev'
op|'['
string|"'weight'"
op|']'
op|','
name|'dev_id'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'err'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'The on-disk ring builder is unchanged.'"
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'builder'
op|'.'
name|'save'
op|'('
name|'builder_file'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_SUCCESS'
op|')'
newline|'\n'
nl|'\n'
DECL|function|set_weight
dedent|''
name|'def'
name|'set_weight'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file> set_weight <search-value> <weight>\n    [<search-value> <weight] ...\n\nor\n\nswift-ring-builder <builder_file> set_weight\n    --region <region> --zone <zone> --ip <ip or hostname> --port <port>\n    --replication-ip <r_ip or r_hostname> --replication-port <r_port>\n    --device <device_name> --meta <meta> --weight <weight>\n\n    Where <r_ip>, <r_hostname> and <r_port> are replication ip, hostname\n    and port.\n    Any of the options are optional in both cases.\n\n    Resets the devices\' weights. No partitions will be reassigned to or from\n    the device until after running \'rebalance\'. This is so you can make\n    multiple device changes and rebalance them all just once.\n        """'
newline|'\n'
comment|'# if len(argv) < 5 or len(argv) % 2 != 1:'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'5'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'set_weight'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
op|')'
newline|'\n'
name|'print'
op|'('
name|'parse_search_value'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'_parse_set_weight_values'
op|'('
name|'argv'
op|'['
number|'3'
op|':'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'builder'
op|'.'
name|'save'
op|'('
name|'builder_file'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_SUCCESS'
op|')'
newline|'\n'
nl|'\n'
DECL|function|set_info
dedent|''
name|'def'
name|'set_info'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file> set_info\n    <search-value> <ip>:<port>[R<r_ip>:<r_port>]/<device_name>_<meta>\n    [<search-value> <ip>:<port>[R<r_ip>:<r_port>]/<device_name>_<meta>] ...\n\nor\n\nswift-ring-builder <builder_file> set_info\n    --ip <ip or hostname> --port <port>\n    --replication-ip <r_ip or r_hostname> --replication-port <r_port>\n    --device <device_name> --meta <meta>\n    --change-ip <ip or hostname> --change-port <port>\n    --change-replication-ip <r_ip or r_hostname>\n    --change-replication-port <r_port>\n    --change-device <device_name>\n    --change-meta <meta>\n\n    Where <r_ip>, <r_hostname> and <r_port> are replication ip, hostname\n    and port.\n    Any of the options are optional in both cases.\n\n    For each search-value, resets the matched device\'s information.\n    This information isn\'t used to assign partitions, so you can use\n    \'write_ring\' afterward to rewrite the current ring with the newer\n    device information. Any of the parts are optional in the final\n    <ip>:<port>/<device_name>_<meta> parameter; just give what you\n    want to change. For instance set_info d74 _"snet: 5.6.7.8" would\n    just update the meta data for device id 74.\n        """'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'5'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'set_info'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
op|')'
newline|'\n'
name|'print'
op|'('
name|'parse_search_value'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'_parse_set_info_values'
op|'('
name|'argv'
op|'['
number|'3'
op|':'
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'err'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'builder'
op|'.'
name|'save'
op|'('
name|'builder_file'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_SUCCESS'
op|')'
newline|'\n'
nl|'\n'
DECL|function|remove
dedent|''
name|'def'
name|'remove'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file> remove <search-value> [search-value ...]\n\nor\n\nswift-ring-builder <builder_file> search\n    --region <region> --zone <zone> --ip <ip or hostname> --port <port>\n    --replication-ip <r_ip or r_hostname> --replication-port <r_port>\n    --device <device_name> --meta <meta> --weight <weight>\n\n    Where <r_ip>, <r_hostname> and <r_port> are replication ip, hostname\n    and port.\n    Any of the options are optional in both cases.\n\n    Removes the device(s) from the ring. This should normally just be used for\n    a device that has failed. For a device you wish to decommission, it\'s best\n    to set its weight to 0, wait for it to drain all its data, then use this\n    remove command. This will not take effect until after running \'rebalance\'.\n    This is so you can make multiple device changes and rebalance them all just\n    once.\n        """'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'4'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'remove'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
op|')'
newline|'\n'
name|'print'
op|'('
name|'parse_search_value'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'devs'
op|'='
name|'_parse_remove_values'
op|'('
name|'argv'
op|'['
number|'3'
op|':'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'Search value matched 0 devices.\\n'"
nl|'\n'
string|"'The on-disk ring builder is unchanged.'"
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'devs'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'Matched more than one device:'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'('
string|"'    %s'"
op|'%'
name|'format_device'
op|'('
name|'dev'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'raw_input'
op|'('
string|"'Are you sure you want to remove these %s '"
nl|'\n'
string|"'devices? (y/N) '"
op|'%'
name|'len'
op|'('
name|'devs'
op|')'
op|')'
op|'!='
string|"'y'"
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'('
string|"'Aborting device removals'"
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'builder'
op|'.'
name|'remove_dev'
op|'('
name|'dev'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'RingBuilderError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'('
string|"'-'"
op|'*'
number|'79'
op|')'
newline|'\n'
name|'print'
op|'('
nl|'\n'
string|"'An error occurred while removing device with id %d\\n'"
nl|'\n'
string|"'This usually means that you attempted to remove\\n'"
nl|'\n'
string|"'the last device in a ring. If this is the case,\\n'"
nl|'\n'
string|"'consider creating a new ring instead.\\n'"
nl|'\n'
string|"'The on-disk ring builder is unchanged.\\n'"
nl|'\n'
string|"'Original exception message: %s'"
op|'%'
nl|'\n'
op|'('
name|'dev'
op|'['
string|"'id'"
op|']'
op|','
name|'e'
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'-'"
op|'*'
number|'79'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
op|'('
string|"'%s marked for removal and will '"
nl|'\n'
string|"'be removed next rebalance.'"
op|'%'
name|'format_device'
op|'('
name|'dev'
op|')'
op|')'
newline|'\n'
dedent|''
name|'builder'
op|'.'
name|'save'
op|'('
name|'builder_file'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_SUCCESS'
op|')'
newline|'\n'
nl|'\n'
DECL|function|rebalance
dedent|''
name|'def'
name|'rebalance'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file> rebalance [options]\n    Attempts to rebalance the ring by reassigning partitions that haven\'t been\n    recently reassigned.\n        """'
newline|'\n'
name|'usage'
op|'='
name|'Commands'
op|'.'
name|'rebalance'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'parser'
op|'='
name|'optparse'
op|'.'
name|'OptionParser'
op|'('
name|'usage'
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|"'-f'"
op|','
string|"'--force'"
op|','
name|'action'
op|'='
string|"'store_true'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'Force a rebalanced ring to save even '"
nl|'\n'
string|"'if < 1% of parts changed'"
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|"'-s'"
op|','
string|"'--seed'"
op|','
name|'help'
op|'='
string|'"seed to use for rebalance"'
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|"'-d'"
op|','
string|"'--debug'"
op|','
name|'action'
op|'='
string|"'store_true'"
op|','
nl|'\n'
name|'help'
op|'='
string|'"print debug information"'
op|')'
newline|'\n'
name|'options'
op|','
name|'args'
op|'='
name|'parser'
op|'.'
name|'parse_args'
op|'('
name|'argv'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_seed
name|'def'
name|'get_seed'
op|'('
name|'index'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'options'
op|'.'
name|'seed'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'options'
op|'.'
name|'seed'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'args'
op|'['
name|'index'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'IndexError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'options'
op|'.'
name|'debug'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|'"swift.ring.builder"'
op|')'
newline|'\n'
name|'logger'
op|'.'
name|'disabled'
op|'='
name|'False'
newline|'\n'
name|'logger'
op|'.'
name|'setLevel'
op|'('
name|'logging'
op|'.'
name|'DEBUG'
op|')'
newline|'\n'
name|'handler'
op|'='
name|'logging'
op|'.'
name|'StreamHandler'
op|'('
name|'stdout'
op|')'
newline|'\n'
name|'formatter'
op|'='
name|'logging'
op|'.'
name|'Formatter'
op|'('
string|'"%(levelname)s: %(message)s"'
op|')'
newline|'\n'
name|'handler'
op|'.'
name|'setFormatter'
op|'('
name|'formatter'
op|')'
newline|'\n'
name|'logger'
op|'.'
name|'addHandler'
op|'('
name|'handler'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'devs_changed'
op|'='
name|'builder'
op|'.'
name|'devs_changed'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'last_balance'
op|'='
name|'builder'
op|'.'
name|'get_balance'
op|'('
op|')'
newline|'\n'
name|'parts'
op|','
name|'balance'
op|'='
name|'builder'
op|'.'
name|'rebalance'
op|'('
name|'seed'
op|'='
name|'get_seed'
op|'('
number|'3'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'RingBuilderError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'-'"
op|'*'
number|'79'
op|')'
newline|'\n'
name|'print'
op|'('
string|'"An error has occurred during ring validation. Common\\n"'
nl|'\n'
string|'"causes of failure are rings that are empty or do not\\n"'
nl|'\n'
string|'"have enough devices to accommodate the replica count.\\n"'
nl|'\n'
string|'"Original exception message:\\n %s"'
op|'%'
nl|'\n'
op|'('
name|'e'
op|','
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'-'"
op|'*'
number|'79'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
op|'('
name|'parts'
name|'or'
name|'options'
op|'.'
name|'force'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'No partitions could be reassigned.'"
op|')'
newline|'\n'
name|'print'
op|'('
string|"'Either none need to be or none can be due to '"
nl|'\n'
string|"'min_part_hours [%s].'"
op|'%'
name|'builder'
op|'.'
name|'min_part_hours'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_WARNING'
op|')'
newline|'\n'
comment|"# If we set device's weight to zero, currently balance will be set"
nl|'\n'
comment|'# special value(MAX_BALANCE) until zero weighted device return all'
nl|'\n'
comment|'# its partitions. So we cannot check balance has changed.'
nl|'\n'
comment|'# Thus we need to check balance or last_balance is special value.'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'options'
op|'.'
name|'force'
name|'and'
name|'not'
name|'devs_changed'
name|'and'
name|'abs'
op|'('
name|'last_balance'
op|'-'
name|'balance'
op|')'
op|'<'
number|'1'
name|'and'
name|'not'
op|'('
name|'last_balance'
op|'=='
name|'MAX_BALANCE'
name|'and'
name|'balance'
op|'=='
name|'MAX_BALANCE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'Cowardly refusing to save rebalance as it did not change '"
nl|'\n'
string|"'at least 1%.'"
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_WARNING'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'builder'
op|'.'
name|'validate'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'RingValidationError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'-'"
op|'*'
number|'79'
op|')'
newline|'\n'
name|'print'
op|'('
string|'"An error has occurred during ring validation. Common\\n"'
nl|'\n'
string|'"causes of failure are rings that are empty or do not\\n"'
nl|'\n'
string|'"have enough devices to accommodate the replica count.\\n"'
nl|'\n'
string|'"Original exception message:\\n %s"'
op|'%'
nl|'\n'
op|'('
name|'e'
op|','
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'-'"
op|'*'
number|'79'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
name|'print'
op|'('
string|"'Reassigned %d (%.02f%%) partitions. '"
nl|'\n'
string|"'Balance is now %.02f.  '"
nl|'\n'
string|"'Dispersion is now %.02f'"
op|'%'
op|'('
nl|'\n'
name|'parts'
op|','
number|'100.0'
op|'*'
name|'parts'
op|'/'
name|'builder'
op|'.'
name|'parts'
op|','
nl|'\n'
name|'balance'
op|','
nl|'\n'
name|'builder'
op|'.'
name|'dispersion'
op|')'
op|')'
newline|'\n'
name|'status'
op|'='
name|'EXIT_SUCCESS'
newline|'\n'
name|'if'
name|'builder'
op|'.'
name|'dispersion'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'-'"
op|'*'
number|'79'
op|')'
newline|'\n'
name|'print'
op|'('
nl|'\n'
string|"'NOTE: Dispersion of %.06f indicates some parts are not\\n'"
nl|'\n'
string|"'      optimally dispersed.\\n\\n'"
nl|'\n'
string|"'      You may want to adjust some device weights, increase\\n'"
nl|'\n'
string|"'      the overload or review the dispersion report.'"
op|'%'
nl|'\n'
name|'builder'
op|'.'
name|'dispersion'
op|')'
newline|'\n'
name|'status'
op|'='
name|'EXIT_WARNING'
newline|'\n'
name|'print'
op|'('
string|"'-'"
op|'*'
number|'79'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'balance'
op|'>'
number|'5'
name|'and'
name|'balance'
op|'/'
number|'100.0'
op|'>'
name|'builder'
op|'.'
name|'overload'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'-'"
op|'*'
number|'79'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'NOTE: Balance of %.02f indicates you should push this '"
op|'%'
nl|'\n'
name|'balance'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'      ring, wait at least %d hours, and rebalance/repush.'"
nl|'\n'
op|'%'
name|'builder'
op|'.'
name|'min_part_hours'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'-'"
op|'*'
number|'79'
op|')'
newline|'\n'
name|'status'
op|'='
name|'EXIT_WARNING'
newline|'\n'
dedent|''
name|'ts'
op|'='
name|'time'
op|'('
op|')'
newline|'\n'
name|'builder'
op|'.'
name|'get_ring'
op|'('
op|')'
op|'.'
name|'save'
op|'('
nl|'\n'
name|'pathjoin'
op|'('
name|'backup_dir'
op|','
string|"'%d.'"
op|'%'
name|'ts'
op|'+'
name|'basename'
op|'('
name|'ring_file'
op|')'
op|')'
op|')'
newline|'\n'
name|'builder'
op|'.'
name|'save'
op|'('
name|'pathjoin'
op|'('
name|'backup_dir'
op|','
string|"'%d.'"
op|'%'
name|'ts'
op|'+'
name|'basename'
op|'('
name|'builder_file'
op|')'
op|')'
op|')'
newline|'\n'
name|'builder'
op|'.'
name|'get_ring'
op|'('
op|')'
op|'.'
name|'save'
op|'('
name|'ring_file'
op|')'
newline|'\n'
name|'builder'
op|'.'
name|'save'
op|'('
name|'builder_file'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'status'
op|')'
newline|'\n'
nl|'\n'
DECL|function|dispersion
dedent|''
name|'def'
name|'dispersion'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file> dispersion <search_filter> [options]\n\n    Output report on dispersion.\n\n    --verbose option will display dispersion graph broken down by tier\n\n    You can filter which tiers are evaluated to drill down using a regex\n    in the optional search_filter arguemnt.\n\n    The reports columns are:\n\n    Tier  : the name of the tier\n    parts : the total number of partitions with assignment in the tier\n    %     : the percentage of parts in the tier with replicas over assigned\n    max   : maximum replicas a part should have assigned at the tier\n    0 - N : the number of parts with that many replicas assigned\n\n    e.g.\n        Tier:  parts      %   max   0    1    2   3\n        r1z1    1022  79.45     1   2  210  784  28\n\n        r1z1 has 1022 total parts assigned, 79% of them have more than the\n        recommend max replica count of 1 assigned.  Only 2 parts in the ring\n        are *not* assigned in this tier (0 replica count), 210 parts have\n        the recommend replica count of 1, 784 have 2 replicas, and 28 sadly\n        have all three replicas in this tier.\n        """'
newline|'\n'
name|'status'
op|'='
name|'EXIT_SUCCESS'
newline|'\n'
name|'if'
name|'not'
name|'builder'
op|'.'
name|'_replica2part2dev'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|'\'Specified builder file \\"%s\\" is not rebalanced yet. \''
nl|'\n'
string|"'Please rebalance first.'"
op|'%'
name|'builder_file'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
name|'usage'
op|'='
name|'Commands'
op|'.'
name|'dispersion'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'parser'
op|'='
name|'optparse'
op|'.'
name|'OptionParser'
op|'('
name|'usage'
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|"'-v'"
op|','
string|"'--verbose'"
op|','
name|'action'
op|'='
string|"'store_true'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'Display dispersion report for tiers'"
op|')'
newline|'\n'
name|'options'
op|','
name|'args'
op|'='
name|'parser'
op|'.'
name|'parse_args'
op|'('
name|'argv'
op|')'
newline|'\n'
name|'if'
name|'args'
op|'['
number|'3'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'search_filter'
op|'='
name|'args'
op|'['
number|'3'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'search_filter'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'report'
op|'='
name|'dispersion_report'
op|'('
name|'builder'
op|','
name|'search_filter'
op|'='
name|'search_filter'
op|','
nl|'\n'
name|'verbose'
op|'='
name|'options'
op|'.'
name|'verbose'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'Dispersion is %.06f, Balance is %.06f, Overload is %0.2f%%'"
op|'%'
op|'('
nl|'\n'
name|'builder'
op|'.'
name|'dispersion'
op|','
name|'builder'
op|'.'
name|'get_balance'
op|'('
op|')'
op|','
name|'builder'
op|'.'
name|'overload'
op|'*'
number|'100'
op|')'
op|')'
newline|'\n'
name|'if'
name|'report'
op|'['
string|"'worst_tier'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'status'
op|'='
name|'EXIT_WARNING'
newline|'\n'
name|'print'
op|'('
string|"'Worst tier is %.06f (%s)'"
op|'%'
op|'('
name|'report'
op|'['
string|"'max_dispersion'"
op|']'
op|','
nl|'\n'
name|'report'
op|'['
string|"'worst_tier'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'report'
op|'['
string|"'graph'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'replica_range'
op|'='
name|'range'
op|'('
name|'int'
op|'('
name|'math'
op|'.'
name|'ceil'
op|'('
name|'builder'
op|'.'
name|'replicas'
op|'+'
number|'1'
op|')'
op|')'
op|')'
newline|'\n'
name|'part_count_width'
op|'='
string|"'%%%ds'"
op|'%'
name|'max'
op|'('
name|'len'
op|'('
name|'str'
op|'('
name|'builder'
op|'.'
name|'parts'
op|')'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
name|'replica_counts_tmpl'
op|'='
string|"' '"
op|'.'
name|'join'
op|'('
name|'part_count_width'
name|'for'
name|'i'
name|'in'
nl|'\n'
name|'replica_range'
op|')'
newline|'\n'
name|'tiers'
op|'='
op|'('
name|'tier'
name|'for'
name|'tier'
op|','
name|'_junk'
name|'in'
name|'report'
op|'['
string|"'graph'"
op|']'
op|')'
newline|'\n'
name|'tier_width'
op|'='
name|'max'
op|'('
name|'max'
op|'('
name|'map'
op|'('
name|'len'
op|','
name|'tiers'
op|')'
op|')'
op|','
number|'30'
op|')'
newline|'\n'
name|'header_line'
op|'='
op|'('
string|"'%-'"
op|'+'
name|'str'
op|'('
name|'tier_width'
op|')'
op|'+'
nl|'\n'
string|"'s '"
op|'+'
name|'part_count_width'
op|'+'
nl|'\n'
string|"' %6s %6s '"
op|'+'
name|'replica_counts_tmpl'
op|')'
op|'%'
name|'tuple'
op|'('
nl|'\n'
op|'['
string|"'Tier'"
op|','
string|"'Parts'"
op|','
string|"'%'"
op|','
string|"'Max'"
op|']'
op|'+'
name|'replica_range'
op|')'
newline|'\n'
name|'underline'
op|'='
string|"'-'"
op|'*'
name|'len'
op|'('
name|'header_line'
op|')'
newline|'\n'
name|'print'
op|'('
name|'underline'
op|')'
newline|'\n'
name|'print'
op|'('
name|'header_line'
op|')'
newline|'\n'
name|'print'
op|'('
name|'underline'
op|')'
newline|'\n'
name|'for'
name|'tier_name'
op|','
name|'dispersion'
name|'in'
name|'report'
op|'['
string|"'graph'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'replica_counts_repr'
op|'='
name|'replica_counts_tmpl'
op|'%'
name|'tuple'
op|'('
nl|'\n'
name|'dispersion'
op|'['
string|"'replicas'"
op|']'
op|')'
newline|'\n'
name|'template'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
op|'['
nl|'\n'
string|"'%-'"
op|','
name|'str'
op|'('
name|'tier_width'
op|')'
op|','
string|"'s '"
op|','
nl|'\n'
name|'part_count_width'
op|','
nl|'\n'
string|"' %6.02f %6d %s'"
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
name|'args'
op|'='
op|'('
nl|'\n'
name|'tier_name'
op|','
nl|'\n'
name|'dispersion'
op|'['
string|"'placed_parts'"
op|']'
op|','
nl|'\n'
name|'dispersion'
op|'['
string|"'dispersion'"
op|']'
op|','
nl|'\n'
name|'dispersion'
op|'['
string|"'max_replicas'"
op|']'
op|','
nl|'\n'
name|'replica_counts_repr'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'print'
op|'('
name|'template'
op|'%'
name|'args'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'exit'
op|'('
name|'status'
op|')'
newline|'\n'
nl|'\n'
DECL|function|validate
dedent|''
name|'def'
name|'validate'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file> validate\n    Just runs the validation routines on the ring.\n        """'
newline|'\n'
name|'builder'
op|'.'
name|'validate'
op|'('
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_SUCCESS'
op|')'
newline|'\n'
nl|'\n'
DECL|function|write_ring
dedent|''
name|'def'
name|'write_ring'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file> write_ring\n    Just rewrites the distributable ring file. This is done automatically after\n    a successful rebalance, so really this is only useful after one or more\n    \'set_info\' calls when no rebalance is needed but you want to send out the\n    new device information.\n        """'
newline|'\n'
name|'ring_data'
op|'='
name|'builder'
op|'.'
name|'get_ring'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'ring_data'
op|'.'
name|'_replica2part2dev_id'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'ring_data'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'('
string|"'Warning: Writing a ring with no partition '"
nl|'\n'
string|"'assignments but with devices; did you forget to run '"
nl|'\n'
string|'\'"rebalance"?\''
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'('
string|"'Warning: Writing an empty ring'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'ring_data'
op|'.'
name|'save'
op|'('
nl|'\n'
name|'pathjoin'
op|'('
name|'backup_dir'
op|','
string|"'%d.'"
op|'%'
name|'time'
op|'('
op|')'
op|'+'
name|'basename'
op|'('
name|'ring_file'
op|')'
op|')'
op|')'
newline|'\n'
name|'ring_data'
op|'.'
name|'save'
op|'('
name|'ring_file'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_SUCCESS'
op|')'
newline|'\n'
nl|'\n'
DECL|function|write_builder
dedent|''
name|'def'
name|'write_builder'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <ring_file> write_builder [min_part_hours]\n    Recreate a builder from a ring file (lossy) if you lost your builder\n    backups.  (Protip: don\'t lose your builder backups).\n    [min_part_hours] is one of those numbers lost to the builder,\n    you can change it with set_min_part_hours.\n        """'
newline|'\n'
name|'if'
name|'exists'
op|'('
name|'builder_file'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|"'Cowardly refusing to overwrite existing '"
nl|'\n'
string|"'Ring Builder file: %s'"
op|'%'
name|'builder_file'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'>'
number|'3'
op|':'
newline|'\n'
indent|'            '
name|'min_part_hours'
op|'='
name|'int'
op|'('
name|'argv'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'stderr'
op|'.'
name|'write'
op|'('
string|'"WARNING: default min_part_hours may not match "'
nl|'\n'
string|'"the value in the lost builder.\\n"'
op|')'
newline|'\n'
name|'min_part_hours'
op|'='
number|'24'
newline|'\n'
dedent|''
name|'ring'
op|'='
name|'Ring'
op|'('
name|'ring_file'
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'dev'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'parts'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'parts_wanted'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'builder_dict'
op|'='
op|'{'
nl|'\n'
string|"'part_power'"
op|':'
number|'32'
op|'-'
name|'ring'
op|'.'
name|'_part_shift'
op|','
nl|'\n'
string|"'replicas'"
op|':'
name|'float'
op|'('
name|'ring'
op|'.'
name|'replica_count'
op|')'
op|','
nl|'\n'
string|"'min_part_hours'"
op|':'
name|'min_part_hours'
op|','
nl|'\n'
string|"'parts'"
op|':'
name|'ring'
op|'.'
name|'partition_count'
op|','
nl|'\n'
string|"'devs'"
op|':'
name|'ring'
op|'.'
name|'devs'
op|','
nl|'\n'
string|"'devs_changed'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'version'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'_replica2part2dev'"
op|':'
name|'ring'
op|'.'
name|'_replica2part2dev_id'
op|','
nl|'\n'
string|"'_last_part_moves_epoch'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'_last_part_moves'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'_last_part_gather_start'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'_remove_devs'"
op|':'
op|'['
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'builder'
op|'='
name|'RingBuilder'
op|'.'
name|'from_dict'
op|'('
name|'builder_dict'
op|')'
newline|'\n'
name|'for'
name|'parts'
name|'in'
name|'builder'
op|'.'
name|'_replica2part2dev'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'dev_id'
name|'in'
name|'parts'
op|':'
newline|'\n'
indent|'                '
name|'builder'
op|'.'
name|'devs'
op|'['
name|'dev_id'
op|']'
op|'['
string|"'parts'"
op|']'
op|'+='
number|'1'
newline|'\n'
dedent|''
dedent|''
name|'builder'
op|'.'
name|'_set_parts_wanted'
op|'('
op|')'
newline|'\n'
name|'builder'
op|'.'
name|'save'
op|'('
name|'builder_file'
op|')'
newline|'\n'
nl|'\n'
DECL|function|pretend_min_part_hours_passed
dedent|''
name|'def'
name|'pretend_min_part_hours_passed'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'builder'
op|'.'
name|'pretend_min_part_hours_passed'
op|'('
op|')'
newline|'\n'
name|'builder'
op|'.'
name|'save'
op|'('
name|'builder_file'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_SUCCESS'
op|')'
newline|'\n'
nl|'\n'
DECL|function|set_min_part_hours
dedent|''
name|'def'
name|'set_min_part_hours'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file> set_min_part_hours <hours>\n    Changes the <min_part_hours> to the given <hours>. This should be set to\n    however long a full replication/update cycle takes. We\'re working on a way\n    to determine this more easily than scanning logs.\n        """'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'4'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'set_min_part_hours'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
name|'builder'
op|'.'
name|'change_min_part_hours'
op|'('
name|'int'
op|'('
name|'argv'
op|'['
number|'3'
op|']'
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'The minimum number of hours before a partition can be '"
nl|'\n'
string|"'reassigned is now set to %s'"
op|'%'
name|'argv'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'builder'
op|'.'
name|'save'
op|'('
name|'builder_file'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_SUCCESS'
op|')'
newline|'\n'
nl|'\n'
DECL|function|set_replicas
dedent|''
name|'def'
name|'set_replicas'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file> set_replicas <replicas>\n    Changes the replica count to the given <replicas>. <replicas> may\n    be a floating-point value, in which case some partitions will have\n    floor(<replicas>) replicas and some will have ceiling(<replicas>)\n    in the correct proportions.\n\n    A rebalance is needed to make the change take effect.\n    """'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'4'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'set_replicas'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'new_replicas'
op|'='
name|'argv'
op|'['
number|'3'
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'new_replicas'
op|'='
name|'float'
op|'('
name|'new_replicas'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'set_replicas'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|'"\\"%s\\" is not a valid number."'
op|'%'
name|'new_replicas'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'new_replicas'
op|'<'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|'"Replica count must be at least 1."'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'builder'
op|'.'
name|'set_replicas'
op|'('
name|'new_replicas'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'The replica count is now %.6f.'"
op|'%'
name|'builder'
op|'.'
name|'replicas'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'The change will take effect after the next rebalance.'"
op|')'
newline|'\n'
name|'builder'
op|'.'
name|'save'
op|'('
name|'builder_file'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_SUCCESS'
op|')'
newline|'\n'
nl|'\n'
DECL|function|set_overload
dedent|''
name|'def'
name|'set_overload'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\nswift-ring-builder <builder_file> set_overload <overload>[%]\n    Changes the overload factor to the given <overload>.\n\n    A rebalance is needed to make the change take effect.\n    """'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'4'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'set_overload'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'new_overload'
op|'='
name|'argv'
op|'['
number|'3'
op|']'
newline|'\n'
name|'if'
name|'new_overload'
op|'.'
name|'endswith'
op|'('
string|"'%'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'percent'
op|'='
name|'True'
newline|'\n'
name|'new_overload'
op|'='
name|'new_overload'
op|'.'
name|'rstrip'
op|'('
string|"'%'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'percent'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'new_overload'
op|'='
name|'float'
op|'('
name|'new_overload'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'set_overload'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|'"%r is not a valid number."'
op|'%'
name|'new_overload'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'percent'
op|':'
newline|'\n'
indent|'            '
name|'new_overload'
op|'*='
number|'0.01'
newline|'\n'
dedent|''
name|'if'
name|'new_overload'
op|'<'
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|'"Overload must be non-negative."'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'new_overload'
op|'>'
number|'1'
name|'and'
name|'not'
name|'percent'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|'"!?! Warning overload is greater than 100% !?!"'
op|')'
newline|'\n'
name|'status'
op|'='
name|'EXIT_WARNING'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'status'
op|'='
name|'EXIT_SUCCESS'
newline|'\n'
nl|'\n'
dedent|''
name|'builder'
op|'.'
name|'set_overload'
op|'('
name|'new_overload'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'The overload factor is now %0.2f%% (%.6f)'"
op|'%'
op|'('
nl|'\n'
name|'builder'
op|'.'
name|'overload'
op|'*'
number|'100'
op|','
name|'builder'
op|'.'
name|'overload'
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
string|"'The change will take effect after the next rebalance.'"
op|')'
newline|'\n'
name|'builder'
op|'.'
name|'save'
op|'('
name|'builder_file'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'status'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|main
dedent|''
dedent|''
name|'def'
name|'main'
op|'('
name|'arguments'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'argv'
op|','
name|'backup_dir'
op|','
name|'builder'
op|','
name|'builder_file'
op|','
name|'ring_file'
newline|'\n'
name|'if'
name|'arguments'
op|':'
newline|'\n'
indent|'        '
name|'argv'
op|'='
name|'arguments'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'argv'
op|'='
name|'sys_argv'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'2'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
string|'"swift-ring-builder %(MAJOR_VERSION)s.%(MINOR_VERSION)s\\n"'
op|'%'
nl|'\n'
name|'globals'
op|'('
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
name|'Commands'
op|'.'
name|'default'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
op|')'
newline|'\n'
name|'cmds'
op|'='
op|'['
name|'c'
name|'for'
name|'c'
op|','
name|'f'
name|'in'
name|'Commands'
op|'.'
name|'__dict__'
op|'.'
name|'items'
op|'('
op|')'
nl|'\n'
name|'if'
name|'f'
op|'.'
name|'__doc__'
name|'and'
name|'c'
op|'['
number|'0'
op|']'
op|'!='
string|"'_'"
name|'and'
name|'c'
op|'!='
string|"'default'"
op|']'
newline|'\n'
name|'cmds'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'for'
name|'cmd'
name|'in'
name|'cmds'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'Commands'
op|'.'
name|'__dict__'
op|'['
name|'cmd'
op|']'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
op|')'
newline|'\n'
dedent|''
name|'print'
op|'('
name|'parse_search_value'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'print'
op|'('
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'wrap'
op|'('
string|"' '"
op|'.'
name|'join'
op|'('
name|'cmds'
op|')'
op|','
number|'79'
op|','
name|'initial_indent'
op|'='
string|"'Quick list: '"
op|','
nl|'\n'
name|'subsequent_indent'
op|'='
string|"'            '"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'line'
op|')'
newline|'\n'
dedent|''
name|'print'
op|'('
string|"'Exit codes: 0 = operation successful\\n'"
nl|'\n'
string|"'            1 = operation completed with warnings\\n'"
nl|'\n'
string|"'            2 = error'"
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_SUCCESS'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'builder_file'
op|','
name|'ring_file'
op|'='
name|'parse_builder_ring_filename_args'
op|'('
name|'argv'
op|')'
newline|'\n'
name|'if'
name|'builder_file'
op|'!='
name|'argv'
op|'['
number|'1'
op|']'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
string|"'Note: using %s instead of %s as builder file'"
op|'%'
op|'('
nl|'\n'
name|'builder_file'
op|','
name|'argv'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'builder'
op|'='
name|'RingBuilder'
op|'.'
name|'load'
op|'('
name|'builder_file'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'UnPicklingError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
name|'e'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'exceptions'
op|'.'
name|'FileNotFoundError'
op|','
name|'exceptions'
op|'.'
name|'PermissionError'
op|')'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'3'
name|'or'
name|'argv'
op|'['
number|'2'
op|']'
name|'not'
name|'in'
op|'('
string|"'create'"
op|','
string|"'write_builder'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
name|'e'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'('
string|"'Problem occurred while reading builder file: %s. %s'"
op|'%'
nl|'\n'
op|'('
name|'builder_file'
op|','
name|'e'
op|')'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'backup_dir'
op|'='
name|'pathjoin'
op|'('
name|'dirname'
op|'('
name|'builder_file'
op|')'
op|','
string|"'backups'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'mkdir'
op|'('
name|'backup_dir'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'err'
op|'.'
name|'errno'
op|'!='
name|'EEXIST'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'        '
name|'command'
op|'='
string|'"default"'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'command'
op|'='
name|'argv'
op|'['
number|'2'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'argv'
op|'['
number|'0'
op|']'
op|'.'
name|'endswith'
op|'('
string|"'-safe'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'lock_parent_directory'
op|'('
name|'abspath'
op|'('
name|'builder_file'
op|')'
op|','
number|'15'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'Commands'
op|'.'
name|'__dict__'
op|'.'
name|'get'
op|'('
name|'command'
op|','
name|'Commands'
op|'.'
name|'unknown'
op|'.'
name|'im_func'
op|')'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'LockTimeout'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'('
string|'"Ring/builder dir currently locked."'
op|')'
newline|'\n'
name|'exit'
op|'('
number|'2'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'Commands'
op|'.'
name|'__dict__'
op|'.'
name|'get'
op|'('
name|'command'
op|','
name|'Commands'
op|'.'
name|'unknown'
op|'.'
name|'im_func'
op|')'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
