begin_unit
comment|'#!/usr/bin/python -u'
nl|'\n'
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'errno'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'probe'
op|'.'
name|'common'
name|'import'
name|'ECProbeTest'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'direct_client'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'EC_POLICY'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'manager'
name|'import'
name|'Manager'
newline|'\n'
nl|'\n'
name|'from'
name|'swiftclient'
name|'import'
name|'client'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Body
name|'class'
name|'Body'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'total'
op|'='
number|'3.5'
op|'*'
number|'2'
op|'**'
number|'20'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'total'
op|'='
name|'total'
newline|'\n'
name|'self'
op|'.'
name|'hasher'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'size'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'chunk'
op|'='
string|"'test'"
op|'*'
number|'16'
op|'*'
number|'2'
op|'**'
number|'10'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|etag
name|'def'
name|'etag'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'hasher'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|next
dedent|''
name|'def'
name|'next'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'size'
op|'>'
name|'self'
op|'.'
name|'total'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'StopIteration'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'size'
op|'+='
name|'len'
op|'('
name|'self'
op|'.'
name|'chunk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'hasher'
op|'.'
name|'update'
op|'('
name|'self'
op|'.'
name|'chunk'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'chunk'
newline|'\n'
nl|'\n'
DECL|member|__next__
dedent|''
name|'def'
name|'__next__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestReconstructorPropDurable
dedent|''
dedent|''
name|'class'
name|'TestReconstructorPropDurable'
op|'('
name|'ECProbeTest'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestReconstructorPropDurable'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
string|"'container-%s'"
op|'%'
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
string|"'object-%s'"
op|'%'
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
newline|'\n'
comment|'# sanity'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'policy'
op|'.'
name|'policy_type'
op|','
name|'EC_POLICY'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'reconstructor'
op|'='
name|'Manager'
op|'('
op|'['
string|'"object-reconstructor"'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|direct_get
dedent|''
name|'def'
name|'direct_get'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'part'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req_headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'int'
op|'('
name|'self'
op|'.'
name|'policy'
op|')'
op|'}'
newline|'\n'
name|'headers'
op|','
name|'data'
op|'='
name|'direct_client'
op|'.'
name|'direct_get_object'
op|'('
nl|'\n'
name|'node'
op|','
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
name|'headers'
op|'='
name|'req_headers'
op|','
nl|'\n'
name|'resp_chunk_size'
op|'='
number|'64'
op|'*'
number|'2'
op|'**'
number|'20'
op|')'
newline|'\n'
name|'hasher'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'for'
name|'chunk'
name|'in'
name|'data'
op|':'
newline|'\n'
indent|'            '
name|'hasher'
op|'.'
name|'update'
op|'('
name|'chunk'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'hasher'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_node
dedent|''
name|'def'
name|'_check_node'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'part'
op|','
name|'etag'
op|','
name|'headers_post'
op|')'
op|':'
newline|'\n'
comment|'# get fragment archive etag'
nl|'\n'
indent|'        '
name|'fragment_archive_etag'
op|'='
name|'self'
op|'.'
name|'direct_get'
op|'('
name|'node'
op|','
name|'part'
op|')'
newline|'\n'
nl|'\n'
comment|'# remove the .durable from the selected node'
nl|'\n'
name|'part_dir'
op|'='
name|'self'
op|'.'
name|'storage_dir'
op|'('
string|"'object'"
op|','
name|'node'
op|','
name|'part'
op|'='
name|'part'
op|')'
newline|'\n'
name|'for'
name|'dirs'
op|','
name|'subdirs'
op|','
name|'files'
name|'in'
name|'os'
op|'.'
name|'walk'
op|'('
name|'part_dir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'fname'
name|'in'
name|'files'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'fname'
op|'.'
name|'endswith'
op|'('
string|"'.durable'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'durable'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'dirs'
op|','
name|'fname'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'remove'
op|'('
name|'durable'
op|')'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'remove'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'part_dir'
op|','
string|"'hashes.pkl'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'e'
op|'.'
name|'errno'
op|'!='
name|'errno'
op|'.'
name|'ENOENT'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
nl|'\n'
comment|'# fire up reconstructor to propogate the .durable'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'reconstructor'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# fragment is still exactly as it was before!'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fragment_archive_etag'
op|','
nl|'\n'
name|'self'
op|'.'
name|'direct_get'
op|'('
name|'node'
op|','
name|'part'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# check meta'
nl|'\n'
name|'meta'
op|'='
name|'client'
op|'.'
name|'head_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'headers_post'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'meta'
op|'['
name|'key'
op|']'
op|','
name|'headers_post'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_format_node
dedent|''
dedent|''
name|'def'
name|'_format_node'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'%s#%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'node'
op|'['
string|"'index'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_main
dedent|''
name|'def'
name|'test_main'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# create EC container'
nl|'\n'
indent|'        '
name|'headers'
op|'='
op|'{'
string|"'X-Storage-Policy'"
op|':'
name|'self'
op|'.'
name|'policy'
op|'.'
name|'name'
op|'}'
newline|'\n'
name|'client'
op|'.'
name|'put_container'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
nl|'\n'
comment|'# PUT object'
nl|'\n'
name|'contents'
op|'='
name|'Body'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'x-object-meta-foo'"
op|':'
string|"'meta-foo'"
op|'}'
newline|'\n'
name|'headers_post'
op|'='
op|'{'
string|"'x-object-meta-bar'"
op|':'
string|"'meta-bar'"
op|'}'
newline|'\n'
nl|'\n'
name|'etag'
op|'='
name|'client'
op|'.'
name|'put_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'contents'
op|'='
name|'contents'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'client'
op|'.'
name|'post_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
name|'headers'
op|'='
name|'headers_post'
op|')'
newline|'\n'
name|'del'
name|'headers_post'
op|'['
string|"'X-Auth-Token'"
op|']'
comment|'# WTF, where did this come from?'
newline|'\n'
nl|'\n'
comment|'# built up a list of node lists to kill a .durable from,'
nl|'\n'
comment|'# first try a single node'
nl|'\n'
comment|'# then adjacent nodes and then nodes >1 node apart'
nl|'\n'
name|'opart'
op|','
name|'onodes'
op|'='
name|'self'
op|'.'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'single_node'
op|'='
op|'['
name|'random'
op|'.'
name|'choice'
op|'('
name|'onodes'
op|')'
op|']'
newline|'\n'
name|'adj_nodes'
op|'='
op|'['
name|'onodes'
op|'['
number|'0'
op|']'
op|','
name|'onodes'
op|'['
op|'-'
number|'1'
op|']'
op|']'
newline|'\n'
name|'far_nodes'
op|'='
op|'['
name|'onodes'
op|'['
number|'0'
op|']'
op|','
name|'onodes'
op|'['
op|'-'
number|'2'
op|']'
op|']'
newline|'\n'
name|'test_list'
op|'='
op|'['
name|'single_node'
op|','
name|'adj_nodes'
op|','
name|'far_nodes'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'node_list'
name|'in'
name|'test_list'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'onode'
name|'in'
name|'node_list'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_check_node'
op|'('
name|'onode'
op|','
name|'opart'
op|','
name|'etag'
op|','
name|'headers_post'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AssertionError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'fail'
op|'('
nl|'\n'
name|'str'
op|'('
name|'e'
op|')'
op|'+'
string|"'\\n... for node %r of scenario %r'"
op|'%'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'_format_node'
op|'('
name|'onode'
op|')'
op|','
nl|'\n'
op|'['
name|'self'
op|'.'
name|'_format_node'
op|'('
name|'n'
op|')'
name|'for'
name|'n'
name|'in'
name|'node_list'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|'"__main__"'
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
