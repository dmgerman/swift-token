begin_unit
comment|'# Copyright (c) 2010-2011 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'urllib'
name|'import'
name|'unquote'
newline|'\n'
name|'import'
name|'cStringIO'
name|'as'
name|'StringIO'
newline|'\n'
name|'from'
name|'logging'
op|'.'
name|'handlers'
name|'import'
name|'SysLogHandler'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'FakeLogger'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'get_logger'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
name|'import'
name|'proxy_logging'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'Request'
op|','
name|'Response'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeApp
name|'class'
name|'FakeApp'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'body'
op|'='
name|'None'
op|','
name|'response_str'
op|'='
string|"'200 OK'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'body'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'body'
op|'='
op|'['
string|"'FAKE APP'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'body'
op|'='
name|'body'
newline|'\n'
name|'self'
op|'.'
name|'response_str'
op|'='
name|'response_str'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'start_response'
op|'('
name|'self'
op|'.'
name|'response_str'
op|','
nl|'\n'
op|'['
op|'('
string|"'Content-Type'"
op|','
string|"'text/plain'"
op|')'
op|','
nl|'\n'
op|'('
string|"'Content-Length'"
op|','
name|'str'
op|'('
name|'sum'
op|'('
name|'map'
op|'('
name|'len'
op|','
name|'self'
op|'.'
name|'body'
op|')'
op|')'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
name|'while'
name|'env'
op|'['
string|"'wsgi.input'"
op|']'
op|'.'
name|'read'
op|'('
number|'5'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'body'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeAppThatExcepts
dedent|''
dedent|''
name|'class'
name|'FakeAppThatExcepts'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__call__
indent|'    '
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'Exception'
op|'('
string|'"We take exception to that!"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeAppNoContentLengthNoTransferEncoding
dedent|''
dedent|''
name|'class'
name|'FakeAppNoContentLengthNoTransferEncoding'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'body'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'body'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'body'
op|'='
op|'['
string|"'FAKE APP'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'body'
op|'='
name|'body'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|'('
string|"'Content-Type'"
op|','
string|"'text/plain'"
op|')'
op|']'
op|')'
newline|'\n'
name|'while'
name|'env'
op|'['
string|"'wsgi.input'"
op|']'
op|'.'
name|'read'
op|'('
number|'5'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'body'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FileLikeExceptor
dedent|''
dedent|''
name|'class'
name|'FileLikeExceptor'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|','
name|'len'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'IOError'
op|'('
string|"'of some sort'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|readline
dedent|''
name|'def'
name|'readline'
op|'('
name|'self'
op|','
name|'len'
op|'='
number|'1024'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'IOError'
op|'('
string|"'of some sort'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeAppReadline
dedent|''
dedent|''
name|'class'
name|'FakeAppReadline'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__call__
indent|'    '
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|'('
string|"'Content-Type'"
op|','
string|"'text/plain'"
op|')'
op|','
nl|'\n'
op|'('
string|"'Content-Length'"
op|','
string|"'8'"
op|')'
op|']'
op|')'
newline|'\n'
name|'env'
op|'['
string|"'wsgi.input'"
op|']'
op|'.'
name|'readline'
op|'('
op|')'
newline|'\n'
name|'return'
op|'['
string|'"FAKE APP"'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|start_response
dedent|''
dedent|''
name|'def'
name|'start_response'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestProxyLogging
dedent|''
name|'class'
name|'TestProxyLogging'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|_log_parts
indent|'    '
name|'def'
name|'_log_parts'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'should_be_empty'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'info_calls'
op|'='
name|'app'
op|'.'
name|'access_logger'
op|'.'
name|'log_dict'
op|'['
string|"'info'"
op|']'
newline|'\n'
name|'if'
name|'should_be_empty'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
op|']'
op|','
name|'info_calls'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'info_calls'
op|')'
op|')'
newline|'\n'
name|'return'
name|'info_calls'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'split'
op|'('
string|"' '"
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertTiming
dedent|''
dedent|''
name|'def'
name|'assertTiming'
op|'('
name|'self'
op|','
name|'exp_metric'
op|','
name|'app'
op|','
name|'exp_timing'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'timing_calls'
op|'='
name|'app'
op|'.'
name|'access_logger'
op|'.'
name|'log_dict'
op|'['
string|"'timing'"
op|']'
newline|'\n'
name|'found'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'timing_call'
name|'in'
name|'timing_calls'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'{'
op|'}'
op|','
name|'timing_call'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'timing_call'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
name|'if'
name|'timing_call'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|'=='
name|'exp_metric'
op|':'
newline|'\n'
indent|'                '
name|'found'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'exp_timing'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertAlmostEqual'
op|'('
name|'exp_timing'
op|','
name|'timing_call'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'places'
op|'='
number|'4'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'not'
name|'found'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'False'
op|','
string|"'assertTiming: %s not found in %r'"
op|'%'
op|'('
nl|'\n'
name|'exp_metric'
op|','
name|'timing_calls'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertTimingSince
dedent|''
dedent|''
name|'def'
name|'assertTimingSince'
op|'('
name|'self'
op|','
name|'exp_metric'
op|','
name|'app'
op|','
name|'exp_start'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'timing_calls'
op|'='
name|'app'
op|'.'
name|'access_logger'
op|'.'
name|'log_dict'
op|'['
string|"'timing_since'"
op|']'
newline|'\n'
name|'found'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'timing_call'
name|'in'
name|'timing_calls'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'{'
op|'}'
op|','
name|'timing_call'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'timing_call'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
name|'if'
name|'timing_call'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|'=='
name|'exp_metric'
op|':'
newline|'\n'
indent|'                '
name|'found'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'exp_start'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertAlmostEqual'
op|'('
name|'exp_start'
op|','
name|'timing_call'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'places'
op|'='
number|'4'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'not'
name|'found'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'False'
op|','
string|"'assertTimingSince: %s not found in %r'"
op|'%'
op|'('
nl|'\n'
name|'exp_metric'
op|','
name|'timing_calls'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertNotTiming
dedent|''
dedent|''
name|'def'
name|'assertNotTiming'
op|'('
name|'self'
op|','
name|'not_exp_metric'
op|','
name|'app'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'timing_calls'
op|'='
name|'app'
op|'.'
name|'access_logger'
op|'.'
name|'log_dict'
op|'['
string|"'timing'"
op|']'
newline|'\n'
name|'for'
name|'timing_call'
name|'in'
name|'timing_calls'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'not_exp_metric'
op|','
name|'timing_call'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assertUpdateStats
dedent|''
dedent|''
name|'def'
name|'assertUpdateStats'
op|'('
name|'self'
op|','
name|'exp_metric'
op|','
name|'exp_bytes'
op|','
name|'app'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'update_stats_calls'
op|'='
name|'app'
op|'.'
name|'access_logger'
op|'.'
name|'log_dict'
op|'['
string|"'update_stats'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'update_stats_calls'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'{'
op|'}'
op|','
name|'update_stats_calls'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'('
name|'exp_metric'
op|','
name|'exp_bytes'
op|')'
op|','
name|'update_stats_calls'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_log_request_statsd_invalid_stats_types
dedent|''
name|'def'
name|'test_log_request_statsd_invalid_stats_types'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'for'
name|'url'
name|'in'
op|'['
string|"'/'"
op|','
string|"'/foo'"
op|','
string|"'/foo/bar'"
op|','
string|"'/v1'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'url'
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
comment|'# get body'
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'app'
op|'.'
name|'access_logger'
op|'.'
name|'log_dict'
op|'['
string|"'timing'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'app'
op|'.'
name|'access_logger'
op|'.'
name|'log_dict'
op|'['
string|"'update_stats'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_log_request_stat_type_bad
dedent|''
dedent|''
name|'def'
name|'test_log_request_stat_type_bad'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'bad_path'
name|'in'
op|'['
string|"''"
op|','
string|"'/'"
op|','
string|"'/bad'"
op|','
string|"'/baddy/mc_badderson'"
op|','
string|"'/v1'"
op|','
nl|'\n'
string|"'/v1/'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'bad_path'
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'now'
op|'='
number|'10000.0'
newline|'\n'
name|'app'
op|'.'
name|'log_request'
op|'('
name|'req'
op|','
number|'123'
op|','
number|'7'
op|','
number|'13'
op|','
name|'now'
op|','
name|'now'
op|'+'
number|'2.71828182846'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'app'
op|'.'
name|'access_logger'
op|'.'
name|'log_dict'
op|'['
string|"'timing'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'app'
op|'.'
name|'access_logger'
op|'.'
name|'log_dict'
op|'['
string|"'update_stats'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_log_request_stat_type_good
dedent|''
dedent|''
name|'def'
name|'test_log_request_stat_type_good'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        log_request() should send timing and byte-count counters for GET\n        requests.  Also, __call__()\'s iter_response() function should\n        statsd-log time to first byte (calling the passed-in start_response\n        function), but only for GET requests.\n        """'
newline|'\n'
name|'stub_times'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|stub_time
name|'def'
name|'stub_time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'stub_times'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'path_types'
op|'='
op|'{'
nl|'\n'
string|"'/v1/a'"
op|':'
string|"'account'"
op|','
nl|'\n'
string|"'/v1/a/'"
op|':'
string|"'account'"
op|','
nl|'\n'
string|"'/v1/a/c'"
op|':'
string|"'container'"
op|','
nl|'\n'
string|"'/v1/a/c/'"
op|':'
string|"'container'"
op|','
nl|'\n'
string|"'/v1/a/c/o'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'/v1/a/c/o/'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'/v1/a/c/o/p'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'/v1/a/c/o/p/'"
op|':'
string|"'object'"
op|','
nl|'\n'
string|"'/v1/a/c/o/p/p2'"
op|':'
string|"'object'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|'"time.time"'
op|','
name|'stub_time'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'path'
op|','
name|'exp_type'
name|'in'
name|'path_types'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# GET'
nl|'\n'
indent|'                '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
nl|'\n'
name|'FakeApp'
op|'('
name|'body'
op|'='
string|"'7654321'"
op|','
name|'response_str'
op|'='
string|"'321 Fubar'"
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|','
name|'environ'
op|'='
op|'{'
nl|'\n'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
string|"'4321'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'stub_times'
op|'='
op|'['
number|'18.0'
op|','
number|'20.71828182846'
op|']'
newline|'\n'
name|'iter_response'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'lambda'
op|'*'
name|'_'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'7654321'"
op|','
string|"''"
op|'.'
name|'join'
op|'('
name|'iter_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTiming'
op|'('
string|"'%s.GET.321.timing'"
op|'%'
name|'exp_type'
op|','
name|'app'
op|','
nl|'\n'
name|'exp_timing'
op|'='
number|'2.71828182846'
op|'*'
number|'1000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTimingSince'
op|'('
nl|'\n'
string|"'%s.GET.321.first-byte.timing'"
op|'%'
name|'exp_type'
op|','
name|'app'
op|','
nl|'\n'
name|'exp_start'
op|'='
number|'18.0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertUpdateStats'
op|'('
string|"'%s.GET.321.xfer'"
op|'%'
name|'exp_type'
op|','
nl|'\n'
number|'4'
op|'+'
number|'7'
op|','
name|'app'
op|')'
newline|'\n'
nl|'\n'
comment|'# GET with swift.proxy_access_log_made already set'
nl|'\n'
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
nl|'\n'
name|'FakeApp'
op|'('
name|'body'
op|'='
string|"'7654321'"
op|','
name|'response_str'
op|'='
string|"'321 Fubar'"
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|','
name|'environ'
op|'='
op|'{'
nl|'\n'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'swift.proxy_access_log_made'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
string|"'4321'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'stub_times'
op|'='
op|'['
number|'18.0'
op|','
number|'20.71828182846'
op|']'
newline|'\n'
name|'iter_response'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'lambda'
op|'*'
name|'_'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'7654321'"
op|','
string|"''"
op|'.'
name|'join'
op|'('
name|'iter_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'app'
op|'.'
name|'access_logger'
op|'.'
name|'log_dict'
op|'['
string|"'timing'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
nl|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'.'
name|'log_dict'
op|'['
string|"'timing_since'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
nl|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'.'
name|'log_dict'
op|'['
string|"'update_stats'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# PUT (no first-byte timing!)'
nl|'\n'
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
nl|'\n'
name|'FakeApp'
op|'('
name|'body'
op|'='
string|"'87654321'"
op|','
name|'response_str'
op|'='
string|"'314 PiTown'"
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|','
name|'environ'
op|'='
op|'{'
nl|'\n'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
string|"'654321'"
op|')'
op|'}'
op|')'
newline|'\n'
comment|"# (it's not a GET, so time() doesn't have a 2nd call)"
nl|'\n'
name|'stub_times'
op|'='
op|'['
number|'58.2'
op|','
number|'58.2'
op|'+'
number|'7.3321'
op|']'
newline|'\n'
name|'iter_response'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'lambda'
op|'*'
name|'_'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'87654321'"
op|','
string|"''"
op|'.'
name|'join'
op|'('
name|'iter_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTiming'
op|'('
string|"'%s.PUT.314.timing'"
op|'%'
name|'exp_type'
op|','
name|'app'
op|','
nl|'\n'
name|'exp_timing'
op|'='
number|'7.3321'
op|'*'
number|'1000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotTiming'
op|'('
nl|'\n'
string|"'%s.GET.314.first-byte.timing'"
op|'%'
name|'exp_type'
op|','
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotTiming'
op|'('
nl|'\n'
string|"'%s.PUT.314.first-byte.timing'"
op|'%'
name|'exp_type'
op|','
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertUpdateStats'
op|'('
nl|'\n'
string|"'%s.PUT.314.xfer'"
op|'%'
name|'exp_type'
op|','
number|'6'
op|'+'
number|'8'
op|','
name|'app'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_log_request_stat_method_filtering_default
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_log_request_stat_method_filtering_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method_map'
op|'='
op|'{'
nl|'\n'
string|"'foo'"
op|':'
string|"'BAD_METHOD'"
op|','
nl|'\n'
string|"''"
op|':'
string|"'BAD_METHOD'"
op|','
nl|'\n'
string|"'PUTT'"
op|':'
string|"'BAD_METHOD'"
op|','
nl|'\n'
string|"'SPECIAL'"
op|':'
string|"'BAD_METHOD'"
op|','
nl|'\n'
string|"'GET'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'PUT'"
op|':'
string|"'PUT'"
op|','
nl|'\n'
string|"'COPY'"
op|':'
string|"'COPY'"
op|','
nl|'\n'
string|"'HEAD'"
op|':'
string|"'HEAD'"
op|','
nl|'\n'
string|"'POST'"
op|':'
string|"'POST'"
op|','
nl|'\n'
string|"'DELETE'"
op|':'
string|"'DELETE'"
op|','
nl|'\n'
string|"'OPTIONS'"
op|':'
string|"'OPTIONS'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'for'
name|'method'
op|','
name|'exp_method'
name|'in'
name|'method_map'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|')'
newline|'\n'
name|'now'
op|'='
number|'10000.0'
newline|'\n'
name|'app'
op|'.'
name|'log_request'
op|'('
name|'req'
op|','
number|'299'
op|','
number|'11'
op|','
number|'3'
op|','
name|'now'
op|','
name|'now'
op|'+'
number|'1.17'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTiming'
op|'('
string|"'account.%s.299.timing'"
op|'%'
name|'exp_method'
op|','
name|'app'
op|','
nl|'\n'
name|'exp_timing'
op|'='
number|'1.17'
op|'*'
number|'1000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertUpdateStats'
op|'('
string|"'account.%s.299.xfer'"
op|'%'
name|'exp_method'
op|','
nl|'\n'
number|'11'
op|'+'
number|'3'
op|','
name|'app'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_log_request_stat_method_filtering_custom
dedent|''
dedent|''
name|'def'
name|'test_log_request_stat_method_filtering_custom'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'method_map'
op|'='
op|'{'
nl|'\n'
string|"'foo'"
op|':'
string|"'BAD_METHOD'"
op|','
nl|'\n'
string|"''"
op|':'
string|"'BAD_METHOD'"
op|','
nl|'\n'
string|"'PUTT'"
op|':'
string|"'BAD_METHOD'"
op|','
nl|'\n'
string|"'SPECIAL'"
op|':'
string|"'SPECIAL'"
op|','
comment|'# will be configured'
nl|'\n'
string|"'GET'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'PUT'"
op|':'
string|"'PUT'"
op|','
nl|'\n'
string|"'COPY'"
op|':'
string|"'BAD_METHOD'"
op|','
comment|"# prove no one's special"
nl|'\n'
op|'}'
newline|'\n'
comment|'# this conf var supports optional leading access_'
nl|'\n'
name|'for'
name|'conf_key'
name|'in'
op|'['
string|"'access_log_statsd_valid_http_methods'"
op|','
nl|'\n'
string|"'log_statsd_valid_http_methods'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'method'
op|','
name|'exp_method'
name|'in'
name|'method_map'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
nl|'\n'
name|'conf_key'
op|':'
string|"'SPECIAL,  GET,PUT '"
op|','
comment|'# crazy spaces ok'
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|')'
newline|'\n'
name|'now'
op|'='
number|'10000.0'
newline|'\n'
name|'app'
op|'.'
name|'log_request'
op|'('
name|'req'
op|','
number|'911'
op|','
number|'4'
op|','
number|'43'
op|','
name|'now'
op|','
name|'now'
op|'+'
number|'1.01'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTiming'
op|'('
string|"'container.%s.911.timing'"
op|'%'
name|'exp_method'
op|','
name|'app'
op|','
nl|'\n'
name|'exp_timing'
op|'='
number|'1.01'
op|'*'
number|'1000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertUpdateStats'
op|'('
string|"'container.%s.911.xfer'"
op|'%'
name|'exp_method'
op|','
nl|'\n'
number|'4'
op|'+'
number|'43'
op|','
name|'app'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_basic_req
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_basic_req'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'3'
op|']'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'4'
op|']'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'5'
op|']'
op|','
string|"'HTTP/1.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'200'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp_body'
op|','
string|"'FAKE APP'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'11'
op|']'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'resp_body'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_basic_req_second_time
dedent|''
name|'def'
name|'test_basic_req_second_time'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
nl|'\n'
string|"'swift.proxy_access_log_made'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|','
name|'should_be_empty'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp_body'
op|','
string|"'FAKE APP'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multi_segment_resp
dedent|''
name|'def'
name|'test_multi_segment_resp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
nl|'\n'
op|'['
string|"'some'"
op|','
string|"'chunks'"
op|','
string|"'of data'"
op|']'
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'swift.source'"
op|':'
string|"'SOS'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'3'
op|']'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'4'
op|']'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'5'
op|']'
op|','
string|"'HTTP/1.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'200'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp_body'
op|','
string|"'somechunksof data'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'11'
op|']'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'resp_body'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertUpdateStats'
op|'('
string|"'SOS.GET.200.xfer'"
op|','
name|'len'
op|'('
name|'resp_body'
op|')'
op|','
name|'app'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_log_headers
dedent|''
name|'def'
name|'test_log_headers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'conf_key'
name|'in'
op|'['
string|"'access_log_headers'"
op|','
string|"'log_headers'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
name|'conf_key'
op|':'
string|"'yes'"
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
comment|'# exhaust generator'
nl|'\n'
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'resp'
op|']'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'unquote'
op|'('
name|'log_parts'
op|'['
number|'14'
op|']'
op|')'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Host: localhost:80'"
name|'in'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_access_log_headers_only
dedent|''
dedent|''
name|'def'
name|'test_access_log_headers_only'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
nl|'\n'
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
string|"'log_headers'"
op|':'
string|"'yes'"
op|','
nl|'\n'
string|"'access_log_headers_only'"
op|':'
string|"'FIRST, seCond'"
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'First'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'Second'"
op|':'
string|"'2'"
op|','
nl|'\n'
string|"'Third'"
op|':'
string|"'3'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
comment|'# exhaust generator'
nl|'\n'
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'resp'
op|']'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'unquote'
op|'('
name|'log_parts'
op|'['
number|'14'
op|']'
op|')'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'First: 1'"
name|'in'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Second: 2'"
name|'in'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Third: 3'"
name|'not'
name|'in'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Host: localhost:80'"
name|'not'
name|'in'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_upload_size
dedent|''
name|'def'
name|'test_upload_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'log_headers'"
op|':'
string|"'yes'"
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o/foo'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
string|"'some stuff'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
comment|'# exhaust generator'
nl|'\n'
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'resp'
op|']'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'11'
op|']'
op|','
name|'str'
op|'('
name|'len'
op|'('
string|"'FAKE APP'"
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'10'
op|']'
op|','
name|'str'
op|'('
name|'len'
op|'('
string|"'some stuff'"
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertUpdateStats'
op|'('
string|"'object.PUT.200.xfer'"
op|','
nl|'\n'
name|'len'
op|'('
string|"'some stuff'"
op|')'
op|'+'
name|'len'
op|'('
string|"'FAKE APP'"
op|')'
op|','
nl|'\n'
name|'app'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_upload_line
dedent|''
name|'def'
name|'test_upload_line'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeAppReadline'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'log_headers'"
op|':'
string|"'yes'"
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
nl|'\n'
string|"'some stuff\\nsome other stuff\\n'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
comment|'# exhaust generator'
nl|'\n'
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'resp'
op|']'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'11'
op|']'
op|','
name|'str'
op|'('
name|'len'
op|'('
string|"'FAKE APP'"
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'10'
op|']'
op|','
name|'str'
op|'('
name|'len'
op|'('
string|"'some stuff\\n'"
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertUpdateStats'
op|'('
string|"'container.POST.200.xfer'"
op|','
nl|'\n'
name|'len'
op|'('
string|"'some stuff\\n'"
op|')'
op|'+'
name|'len'
op|'('
string|"'FAKE APP'"
op|')'
op|','
nl|'\n'
name|'app'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_log_query_string
dedent|''
name|'def'
name|'test_log_query_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'QUERY_STRING'"
op|':'
string|"'x=3'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
comment|'# exhaust generator'
nl|'\n'
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'resp'
op|']'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'unquote'
op|'('
name|'log_parts'
op|'['
number|'4'
op|']'
op|')'
op|','
string|"'/?x=3'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_client_logging
dedent|''
name|'def'
name|'test_client_logging'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'REMOTE_ADDR'"
op|':'
string|"'1.2.3.4'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
comment|'# exhaust generator'
nl|'\n'
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'resp'
op|']'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'0'
op|']'
op|','
string|"'1.2.3.4'"
op|')'
comment|'# client ip'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'1'
op|']'
op|','
string|"'1.2.3.4'"
op|')'
comment|'# remote addr'
newline|'\n'
nl|'\n'
DECL|member|test_proxy_client_logging
dedent|''
name|'def'
name|'test_proxy_client_logging'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
nl|'\n'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'REMOTE_ADDR'"
op|':'
string|"'1.2.3.4'"
op|','
nl|'\n'
string|"'HTTP_X_FORWARDED_FOR'"
op|':'
string|"'4.5.6.7,8.9.10.11'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
comment|'# exhaust generator'
nl|'\n'
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'resp'
op|']'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'0'
op|']'
op|','
string|"'4.5.6.7'"
op|')'
comment|'# client ip'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'1'
op|']'
op|','
string|"'1.2.3.4'"
op|')'
comment|'# remote addr'
newline|'\n'
nl|'\n'
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
nl|'\n'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'REMOTE_ADDR'"
op|':'
string|"'1.2.3.4'"
op|','
nl|'\n'
string|"'HTTP_X_CLUSTER_CLIENT_IP'"
op|':'
string|"'4.5.6.7'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
comment|'# exhaust generator'
nl|'\n'
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'resp'
op|']'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'0'
op|']'
op|','
string|"'4.5.6.7'"
op|')'
comment|'# client ip'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'1'
op|']'
op|','
string|"'1.2.3.4'"
op|')'
comment|'# remote addr'
newline|'\n'
nl|'\n'
DECL|member|test_facility
dedent|''
name|'def'
name|'test_facility'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
nl|'\n'
name|'FakeApp'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'log_headers'"
op|':'
string|"'yes'"
op|','
nl|'\n'
string|"'access_log_facility'"
op|':'
string|"'LOG_LOCAL7'"
op|'}'
op|')'
newline|'\n'
name|'handler'
op|'='
name|'get_logger'
op|'.'
name|'handler4logger'
op|'['
name|'app'
op|'.'
name|'access_logger'
op|'.'
name|'logger'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'SysLogHandler'
op|'.'
name|'LOG_LOCAL7'
op|','
name|'handler'
op|'.'
name|'facility'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_filter
dedent|''
name|'def'
name|'test_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'factory'
op|'='
name|'proxy_logging'
op|'.'
name|'filter_factory'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'callable'
op|'('
name|'factory'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'callable'
op|'('
name|'factory'
op|'('
name|'FakeApp'
op|'('
op|')'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unread_body
dedent|''
name|'def'
name|'test_unread_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
nl|'\n'
name|'FakeApp'
op|'('
op|'['
string|"'some'"
op|','
string|"'stuff'"
op|']'
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
comment|'# read first chunk'
nl|'\n'
name|'next'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'close'
op|'('
op|')'
comment|'# raise a GeneratorExit in middleware app_iter loop'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'499'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'11'
op|']'
op|','
string|"'4'"
op|')'
comment|'# write length'
newline|'\n'
nl|'\n'
DECL|member|test_disconnect_on_readline
dedent|''
name|'def'
name|'test_disconnect_on_readline'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeAppReadline'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'FileLikeExceptor'
op|'('
op|')'
op|'}'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
comment|'# read body'
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IOError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'499'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'10'
op|']'
op|','
string|"'-'"
op|')'
comment|'# read length'
newline|'\n'
nl|'\n'
DECL|member|test_disconnect_on_read
dedent|''
name|'def'
name|'test_disconnect_on_read'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
nl|'\n'
name|'FakeApp'
op|'('
op|'['
string|"'some'"
op|','
string|"'stuff'"
op|']'
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'FileLikeExceptor'
op|'('
op|')'
op|'}'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
comment|'# read body'
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IOError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'499'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'10'
op|']'
op|','
string|"'-'"
op|')'
comment|'# read length'
newline|'\n'
nl|'\n'
DECL|member|test_app_exception
dedent|''
name|'def'
name|'test_app_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
nl|'\n'
name|'FakeAppThatExcepts'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'500'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'10'
op|']'
op|','
string|"'-'"
op|')'
comment|'# read length'
newline|'\n'
nl|'\n'
DECL|member|test_no_content_length_no_transfer_encoding_with_list_body
dedent|''
name|'def'
name|'test_no_content_length_no_transfer_encoding_with_list_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
nl|'\n'
name|'FakeAppNoContentLengthNoTransferEncoding'
op|'('
nl|'\n'
comment|'# test the "while not chunk: chunk = iterator.next()"'
nl|'\n'
name|'body'
op|'='
op|'['
string|"''"
op|','
string|"''"
op|','
string|"'line1\\n'"
op|','
string|"'line2\\n'"
op|']'
op|','
nl|'\n'
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'3'
op|']'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'4'
op|']'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'5'
op|']'
op|','
string|"'HTTP/1.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'200'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp_body'
op|','
string|"'line1\\nline2\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'11'
op|']'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'resp_body'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_content_length_no_transfer_encoding_with_empty_strings
dedent|''
name|'def'
name|'test_no_content_length_no_transfer_encoding_with_empty_strings'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
nl|'\n'
name|'FakeAppNoContentLengthNoTransferEncoding'
op|'('
nl|'\n'
comment|'# test the "while not chunk: chunk = iterator.next()"'
nl|'\n'
name|'body'
op|'='
op|'['
string|"''"
op|','
string|"''"
op|','
string|"''"
op|']'
op|','
nl|'\n'
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'3'
op|']'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'4'
op|']'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'5'
op|']'
op|','
string|"'HTTP/1.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'200'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp_body'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'11'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_content_length_no_transfer_encoding_with_generator
dedent|''
name|'def'
name|'test_no_content_length_no_transfer_encoding_with_generator'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|BodyGen
indent|'        '
name|'class'
name|'BodyGen'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'data'
op|'='
name|'data'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'yield'
name|'self'
op|'.'
name|'data'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
nl|'\n'
name|'FakeAppNoContentLengthNoTransferEncoding'
op|'('
nl|'\n'
name|'body'
op|'='
name|'BodyGen'
op|'('
string|"'abc'"
op|')'
op|','
nl|'\n'
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'3'
op|']'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'4'
op|']'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'5'
op|']'
op|','
string|"'HTTP/1.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'200'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp_body'
op|','
string|"'abc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'11'
op|']'
op|','
string|"'3'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_req_path_info_popping
dedent|''
name|'def'
name|'test_req_path_info_popping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/something'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'PATH_INFO'"
op|']'
op|','
string|"'/something'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'3'
op|']'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'4'
op|']'
op|','
string|"'/v1/something'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'5'
op|']'
op|','
string|"'HTTP/1.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'200'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp_body'
op|','
string|"'FAKE APP'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'11'
op|']'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'resp_body'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ipv6
dedent|''
name|'def'
name|'test_ipv6'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ipv6addr'
op|'='
string|"'2001:db8:85a3:8d3:1319:8a2e:370:7348'"
newline|'\n'
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'remote_addr'
op|'='
name|'ipv6addr'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'0'
op|']'
op|','
name|'ipv6addr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'1'
op|']'
op|','
name|'ipv6addr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'3'
op|']'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'4'
op|']'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'5'
op|']'
op|','
string|"'HTTP/1.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'200'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp_body'
op|','
string|"'FAKE APP'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'11'
op|']'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'resp_body'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_log_info_none
dedent|''
name|'def'
name|'test_log_info_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'list'
op|'('
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'17'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
nl|'\n'
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.log_info'"
op|']'
op|'='
op|'['
op|']'
newline|'\n'
name|'list'
op|'('
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'17'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_log_info_single
dedent|''
name|'def'
name|'test_log_info_single'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.log_info'"
op|']'
op|'='
op|'['
string|"'one'"
op|']'
newline|'\n'
name|'list'
op|'('
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'17'
op|']'
op|','
string|"'one'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_log_info_multiple
dedent|''
name|'def'
name|'test_log_info_multiple'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.log_info'"
op|']'
op|'='
op|'['
string|"'one'"
op|','
string|"'and two'"
op|']'
newline|'\n'
name|'list'
op|'('
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'17'
op|']'
op|','
string|"'one%2Cand%20two'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_log_auth_token
dedent|''
name|'def'
name|'test_log_auth_token'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'auth_token'
op|'='
string|"'b05bf940-0464-4c0e-8c70-87717d2d73e8'"
newline|'\n'
nl|'\n'
comment|'# Default - no reveal_sensitive_prefix in config'
nl|'\n'
comment|'# No x-auth-token header'
nl|'\n'
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'9'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
comment|'# Has x-auth-token header'
nl|'\n'
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'HTTP_X_AUTH_TOKEN'"
op|':'
name|'auth_token'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'9'
op|']'
op|','
name|'auth_token'
op|')'
newline|'\n'
nl|'\n'
comment|'# Truncate to first 8 characters'
nl|'\n'
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
nl|'\n'
string|"'reveal_sensitive_prefix'"
op|':'
string|"'8'"
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'9'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
nl|'\n'
string|"'reveal_sensitive_prefix'"
op|':'
string|"'8'"
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'HTTP_X_AUTH_TOKEN'"
op|':'
name|'auth_token'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'9'
op|']'
op|','
string|"'b05bf940...'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Token length and reveal_sensitive_prefix are same (no truncate)'
nl|'\n'
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
nl|'\n'
string|"'reveal_sensitive_prefix'"
op|':'
name|'str'
op|'('
name|'len'
op|'('
name|'auth_token'
op|')'
op|')'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'HTTP_X_AUTH_TOKEN'"
op|':'
name|'auth_token'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'9'
op|']'
op|','
name|'auth_token'
op|')'
newline|'\n'
nl|'\n'
comment|"# Don't log x-auth-token"
nl|'\n'
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
nl|'\n'
string|"'reveal_sensitive_prefix'"
op|':'
string|"'0'"
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'9'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
nl|'\n'
string|"'reveal_sensitive_prefix'"
op|':'
string|"'0'"
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'HTTP_X_AUTH_TOKEN'"
op|':'
name|'auth_token'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'9'
op|']'
op|','
string|"'...'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Avoids pyflakes error, "local variable \'resp_body\' is assigned to'
nl|'\n'
comment|'# but never used'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'resp_body'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ensure_fields
dedent|''
name|'def'
name|'test_ensure_fields'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'access_logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.time'"
op|','
nl|'\n'
name|'mock'
op|'.'
name|'MagicMock'
op|'('
nl|'\n'
name|'side_effect'
op|'='
op|'['
number|'10000000.0'
op|','
number|'10000001.0'
op|']'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
dedent|''
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'log_parts'
op|')'
op|','
number|'20'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'0'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'1'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'2'
op|']'
op|','
string|"'26/Apr/1970/17/46/41'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'3'
op|']'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'4'
op|']'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'5'
op|']'
op|','
string|"'HTTP/1.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'200'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'7'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'8'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'9'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'10'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp_body'
op|','
string|"'FAKE APP'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'11'
op|']'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'resp_body'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'12'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'13'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'14'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'15'
op|']'
op|','
string|"'1.0000'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'16'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'17'
op|']'
op|','
string|"'-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'18'
op|']'
op|','
string|"'10000000.000000000'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'19'
op|']'
op|','
string|"'10000001.000000000'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dual_logging_middlewares
dedent|''
name|'def'
name|'test_dual_logging_middlewares'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Since no internal request is being made, outer most proxy logging'
nl|'\n'
comment|'# middleware, log1, should have performed the logging.'
nl|'\n'
indent|'        '
name|'app'
op|'='
name|'FakeApp'
op|'('
op|')'
newline|'\n'
name|'flg0'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'env'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'log0'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'app'
op|','
name|'env'
op|','
name|'logger'
op|'='
name|'flg0'
op|')'
newline|'\n'
name|'flg1'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'log1'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'log0'
op|','
name|'env'
op|','
name|'logger'
op|'='
name|'flg1'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'log1'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'log0'
op|','
name|'should_be_empty'
op|'='
name|'True'
op|')'
newline|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'log1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'3'
op|']'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'4'
op|']'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'5'
op|']'
op|','
string|"'HTTP/1.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'200'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp_body'
op|','
string|"'FAKE APP'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'11'
op|']'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'resp_body'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dual_logging_middlewares_w_inner
dedent|''
name|'def'
name|'test_dual_logging_middlewares_w_inner'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|FakeMiddleware
indent|'        '
name|'class'
name|'FakeMiddleware'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""\n            Fake middleware to make a separate internal request, but construct\n            the response with different data.\n            """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'app'
op|'='
name|'app'
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'='
name|'conf'
newline|'\n'
nl|'\n'
DECL|member|GET
dedent|''
name|'def'
name|'GET'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
comment|'# Make the internal request'
nl|'\n'
indent|'                '
name|'ireq'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'ireq'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
name|'if'
name|'resp_body'
op|'!='
string|"'FAKE APP'"
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'Response'
op|'('
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'body'
op|'='
string|'"FAKE APP WAS NOT RETURNED"'
op|','
nl|'\n'
name|'content_type'
op|'='
string|'"text/plain"'
op|')'
newline|'\n'
comment|'# But our response is different'
nl|'\n'
dedent|''
name|'return'
name|'Response'
op|'('
name|'request'
op|'='
name|'req'
op|','
name|'body'
op|'='
string|'"FAKE MIDDLEWARE"'
op|','
nl|'\n'
name|'content_type'
op|'='
string|'"text/plain"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'req'
op|'='
name|'Request'
op|'('
name|'env'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'GET'
op|'('
name|'req'
op|')'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
comment|'# Since an internal request is being made, inner most proxy logging'
nl|'\n'
comment|'# middleware, log0, should have performed the logging.'
nl|'\n'
dedent|''
dedent|''
name|'app'
op|'='
name|'FakeApp'
op|'('
op|')'
newline|'\n'
name|'flg0'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'env'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'log0'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'app'
op|','
name|'env'
op|','
name|'logger'
op|'='
name|'flg0'
op|')'
newline|'\n'
name|'fake'
op|'='
name|'FakeMiddleware'
op|'('
name|'log0'
op|','
name|'env'
op|')'
newline|'\n'
name|'flg1'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'log1'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'fake'
op|','
name|'env'
op|','
name|'logger'
op|'='
name|'flg1'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'log1'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'resp_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|')'
newline|'\n'
nl|'\n'
comment|"# Inner most logger should have logged the app's response"
nl|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'log0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'3'
op|']'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'4'
op|']'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'5'
op|']'
op|','
string|"'HTTP/1.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'200'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'11'
op|']'
op|','
name|'str'
op|'('
name|'len'
op|'('
string|"'FAKE APP'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# Outer most logger should have logged the other middleware's response"
nl|'\n'
name|'log_parts'
op|'='
name|'self'
op|'.'
name|'_log_parts'
op|'('
name|'log1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'3'
op|']'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'4'
op|']'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'5'
op|']'
op|','
string|"'HTTP/1.0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'6'
op|']'
op|','
string|"'200'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp_body'
op|','
string|"'FAKE MIDDLEWARE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'log_parts'
op|'['
number|'11'
op|']'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'resp_body'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
