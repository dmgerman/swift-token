begin_unit
comment|'# Copyright (c) 2013 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'StringIO'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'import'
name|'eventlet'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'constraints'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'exceptions'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'swob'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'diskfile'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'server'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'ssync_receiver'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
name|'import'
name|'unit'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestReceiver
name|'class'
name|'TestReceiver'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'utils'
op|'.'
name|'HASH_PATH_SUFFIX'
op|'='
string|"'endcap'"
newline|'\n'
name|'utils'
op|'.'
name|'HASH_PATH_PREFIX'
op|'='
string|"'startcap'"
newline|'\n'
comment|"# Not sure why the test.unit stuff isn't taking effect here; so I'm"
nl|'\n'
comment|'# reenforcing it.'
nl|'\n'
name|'diskfile'
op|'.'
name|'getxattr'
op|'='
name|'unit'
op|'.'
name|'_getxattr'
newline|'\n'
name|'diskfile'
op|'.'
name|'setxattr'
op|'='
name|'unit'
op|'.'
name|'_setxattr'
newline|'\n'
name|'self'
op|'.'
name|'testdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
nl|'\n'
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
op|')'
op|','
string|"'tmp_test_ssync_receiver'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'mkdirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'sda1'"
op|','
string|"'tmp'"
op|')'
op|')'
newline|'\n'
name|'conf'
op|'='
op|'{'
nl|'\n'
string|"'devices'"
op|':'
name|'self'
op|'.'
name|'testdir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'false'"
op|','
nl|'\n'
string|"'replication_one_per_device'"
op|':'
string|"'false'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'server'
op|'.'
name|'ObjectController'
op|'('
name|'conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'bytes_per_sync'
op|'='
number|'1'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'account1'
op|'='
string|"'a'"
newline|'\n'
name|'self'
op|'.'
name|'container1'
op|'='
string|"'c'"
newline|'\n'
name|'self'
op|'.'
name|'object1'
op|'='
string|"'o1'"
newline|'\n'
name|'self'
op|'.'
name|'name1'
op|'='
string|"'/'"
op|'+'
string|"'/'"
op|'.'
name|'join'
op|'('
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account1'
op|','
name|'self'
op|'.'
name|'container1'
op|','
name|'self'
op|'.'
name|'object1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'hash1'
op|'='
name|'utils'
op|'.'
name|'hash_path'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account1'
op|','
name|'self'
op|'.'
name|'container1'
op|','
name|'self'
op|'.'
name|'object1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ts1'
op|'='
string|"'1372800001.00000'"
newline|'\n'
name|'self'
op|'.'
name|'metadata1'
op|'='
op|'{'
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name1'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'self'
op|'.'
name|'ts1'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
string|"'0'"
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'account2'
op|'='
string|"'a'"
newline|'\n'
name|'self'
op|'.'
name|'container2'
op|'='
string|"'c'"
newline|'\n'
name|'self'
op|'.'
name|'object2'
op|'='
string|"'o2'"
newline|'\n'
name|'self'
op|'.'
name|'name2'
op|'='
string|"'/'"
op|'+'
string|"'/'"
op|'.'
name|'join'
op|'('
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account2'
op|','
name|'self'
op|'.'
name|'container2'
op|','
name|'self'
op|'.'
name|'object2'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'hash2'
op|'='
name|'utils'
op|'.'
name|'hash_path'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account2'
op|','
name|'self'
op|'.'
name|'container2'
op|','
name|'self'
op|'.'
name|'object2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ts2'
op|'='
string|"'1372800002.00000'"
newline|'\n'
name|'self'
op|'.'
name|'metadata2'
op|'='
op|'{'
nl|'\n'
string|"'name'"
op|':'
name|'self'
op|'.'
name|'name2'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'self'
op|'.'
name|'ts2'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
string|"'0'"
op|'}'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'self'
op|'.'
name|'testdir'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|body_lines
dedent|''
name|'def'
name|'body_lines'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lines'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'body'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'line'
op|'='
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'if'
name|'line'
op|':'
newline|'\n'
indent|'                '
name|'lines'
op|'.'
name|'append'
op|'('
name|'line'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'lines'
newline|'\n'
nl|'\n'
DECL|member|test_REPLICATION_semaphore_locked
dedent|''
name|'def'
name|'test_REPLICATION_semaphore_locked'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|','
string|"'replication_semaphore'"
op|')'
name|'as'
name|'mocked_replication_semaphore'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mocked_replication_semaphore'
op|'.'
name|'acquire'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|'":ERROR: 503 \'<html><h1>Service Unavailable</h1><p>The "'
nl|'\n'
string|'"server is currently unavailable. Please try again at a "'
nl|'\n'
string|'"later time.</p></html>\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_REPLICATION_calls_replication_lock
dedent|''
dedent|''
name|'def'
name|'test_REPLICATION_calls_replication_lock'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_diskfile_mgr'
op|','
string|"'replication_lock'"
op|')'
name|'as'
name|'mocked_replication_lock'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/sda1/1'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n:UPDATES: END\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|"':UPDATES: START'"
op|','
string|"':UPDATES: END'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'mocked_replication_lock'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'sda1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_REPLICATION_replication_lock_fail
dedent|''
dedent|''
name|'def'
name|'test_REPLICATION_replication_lock_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|_mock
indent|'        '
name|'def'
name|'_mock'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'exceptions'
op|'.'
name|'ReplicationLockTimeout'
op|'('
number|'0.01'
op|','
string|"'/somewhere/'"
op|'+'
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0.05'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_diskfile_mgr'
op|','
string|"'replication_lock'"
op|','
name|'_mock'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_diskfile_mgr'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/sda1/1'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n:UPDATES: END\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|'":ERROR: 0 \'0.01 seconds: /somewhere/sda1\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'None/sda1/1 REPLICATION LOCK TIMEOUT: 0.01 seconds: '"
nl|'\n'
string|"'/somewhere/sda1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_REPLICATION_initial_path
dedent|''
dedent|''
name|'def'
name|'test_REPLICATION_initial_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|','
string|"'replication_semaphore'"
op|')'
name|'as'
name|'mocked_replication_semaphore'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|'":ERROR: 0 \'Invalid path: /device\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mocked_replication_semaphore'
op|'.'
name|'acquire'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mocked_replication_semaphore'
op|'.'
name|'release'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|','
string|"'replication_semaphore'"
op|')'
name|'as'
name|'mocked_replication_semaphore'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|'":ERROR: 0 \'Invalid path: /device/\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mocked_replication_semaphore'
op|'.'
name|'acquire'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mocked_replication_semaphore'
op|'.'
name|'release'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|','
string|"'replication_semaphore'"
op|')'
name|'as'
name|'mocked_replication_semaphore'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|'\':ERROR: 0 "Looking for :MISSING_CHECK: START got \\\'\\\'"\''
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'mocked_replication_semaphore'
op|'.'
name|'acquire'
op|'.'
name|'assert_called_once_with'
op|'('
number|'0'
op|')'
newline|'\n'
name|'mocked_replication_semaphore'
op|'.'
name|'release'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|','
string|"'replication_semaphore'"
op|')'
name|'as'
name|'mocked_replication_semaphore'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition/junk'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|'":ERROR: 0 \'Invalid path: /device/partition/junk\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mocked_replication_semaphore'
op|'.'
name|'acquire'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mocked_replication_semaphore'
op|'.'
name|'release'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_REPLICATION_mount_check
dedent|''
dedent|''
name|'def'
name|'test_REPLICATION_mount_check'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|','
string|"'replication_semaphore'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_diskfile_mgr'
op|','
string|"'mount_check'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'constraints'
op|','
string|"'check_mount'"
op|','
name|'return_value'
op|'='
name|'False'
op|')'
op|')'
name|'as'
op|'('
nl|'\n'
name|'mocked_replication_semaphore'
op|','
nl|'\n'
name|'mocked_mount_check'
op|','
nl|'\n'
name|'mocked_check_mount'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|'\':ERROR: 0 "Looking for :MISSING_CHECK: START got \\\'\\\'"\''
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mocked_check_mount'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|','
string|"'replication_semaphore'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_diskfile_mgr'
op|','
string|"'mount_check'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'constraints'
op|','
string|"'check_mount'"
op|','
name|'return_value'
op|'='
name|'False'
op|')'
op|')'
name|'as'
op|'('
nl|'\n'
name|'mocked_replication_semaphore'
op|','
nl|'\n'
name|'mocked_mount_check'
op|','
nl|'\n'
name|'mocked_check_mount'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|'":ERROR: 507 \'<html><h1>Insufficient Storage</h1><p>There "'
nl|'\n'
string|'"was not enough space to save the resource. Drive: "'
nl|'\n'
string|'"device</p></html>\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'mocked_check_mount'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'devices'
op|','
string|"'device'"
op|')'
newline|'\n'
nl|'\n'
name|'mocked_check_mount'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'mocked_check_mount'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|'\':ERROR: 0 "Looking for :MISSING_CHECK: START got \\\'\\\'"\''
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'mocked_check_mount'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'devices'
op|','
string|"'device'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_REPLICATION_Exception
dedent|''
dedent|''
name|'def'
name|'test_REPLICATION_Exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|_Wrapper
indent|'        '
name|'class'
name|'_Wrapper'
op|'('
name|'StringIO'
op|'.'
name|'StringIO'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'StringIO'
op|'.'
name|'StringIO'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_socket'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_socket
dedent|''
name|'def'
name|'get_socket'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'mock_socket'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'ssync_receiver'
op|'.'
name|'eventlet'
op|'.'
name|'greenio'
op|','
string|"'shutdown_safe'"
op|')'
name|'as'
name|'mock_shutdown_safe'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
DECL|variable|req
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\nBad content is here'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'remote_addr'
op|'='
string|"'1.2.3.4'"
newline|'\n'
DECL|variable|mock_wsgi_input
name|'mock_wsgi_input'
op|'='
name|'_Wrapper'
op|'('
name|'req'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'='
name|'mock_wsgi_input'
newline|'\n'
DECL|variable|resp
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 0 \'Got no headers for Bad content is here\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'mock_shutdown_safe'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock_wsgi_input'
op|'.'
name|'mock_socket'
op|')'
newline|'\n'
name|'mock_wsgi_input'
op|'.'
name|'mock_socket'
op|'.'
name|'close'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'1.2.3.4/device/partition EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_REPLICATION_Exception_Exception
dedent|''
dedent|''
name|'def'
name|'test_REPLICATION_Exception_Exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|_Wrapper
indent|'        '
name|'class'
name|'_Wrapper'
op|'('
name|'StringIO'
op|'.'
name|'StringIO'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'StringIO'
op|'.'
name|'StringIO'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_socket'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_socket
dedent|''
name|'def'
name|'get_socket'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'mock_socket'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'ssync_receiver'
op|'.'
name|'eventlet'
op|'.'
name|'greenio'
op|','
string|"'shutdown_safe'"
op|')'
name|'as'
name|'mock_shutdown_safe'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
DECL|variable|req
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\nBad content is here'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'remote_addr'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'.'
name|'remote_addr'
op|'.'
name|'__str__'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
nl|'\n'
name|'side_effect'
op|'='
name|'Exception'
op|'('
string|'"can\'t stringify this"'
op|')'
op|')'
newline|'\n'
DECL|variable|mock_wsgi_input
name|'mock_wsgi_input'
op|'='
name|'_Wrapper'
op|'('
name|'req'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'='
name|'mock_wsgi_input'
newline|'\n'
DECL|variable|resp
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'mock_shutdown_safe'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock_wsgi_input'
op|'.'
name|'mock_socket'
op|')'
newline|'\n'
name|'mock_wsgi_input'
op|'.'
name|'mock_socket'
op|'.'
name|'close'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_MISSING_CHECK_timeout
dedent|''
dedent|''
name|'def'
name|'test_MISSING_CHECK_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|_Wrapper
indent|'        '
name|'class'
name|'_Wrapper'
op|'('
name|'StringIO'
op|'.'
name|'StringIO'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'StringIO'
op|'.'
name|'StringIO'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_socket'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|readline
dedent|''
name|'def'
name|'readline'
op|'('
name|'self'
op|','
name|'sizehint'
op|'='
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'line'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'.'
name|'readline'
op|'('
name|'self'
op|')'
newline|'\n'
name|'if'
name|'line'
op|'.'
name|'startswith'
op|'('
string|"'hash'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0.1'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'line'
newline|'\n'
nl|'\n'
DECL|member|get_socket
dedent|''
name|'def'
name|'get_socket'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'mock_socket'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'controller'
op|'.'
name|'client_timeout'
op|'='
number|'0.01'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'ssync_receiver'
op|'.'
name|'eventlet'
op|'.'
name|'greenio'
op|','
string|"'shutdown_safe'"
op|')'
name|'as'
name|'mock_shutdown_safe'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
DECL|variable|req
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/sda1/1'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n'"
nl|'\n'
string|"'hash ts\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n:UPDATES: END\\r\\n'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'remote_addr'
op|'='
string|"'2.3.4.5'"
newline|'\n'
DECL|variable|mock_wsgi_input
name|'mock_wsgi_input'
op|'='
name|'_Wrapper'
op|'('
name|'req'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'='
name|'mock_wsgi_input'
newline|'\n'
DECL|variable|resp
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|'":ERROR: 408 \'0.01 seconds: missing_check line\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_shutdown_safe'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'2.3.4.5/sda1/1 TIMEOUT in replication.Receiver: '"
nl|'\n'
string|"'0.01 seconds: missing_check line'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_MISSING_CHECK_other_exception
dedent|''
dedent|''
name|'def'
name|'test_MISSING_CHECK_other_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|_Wrapper
indent|'        '
name|'class'
name|'_Wrapper'
op|'('
name|'StringIO'
op|'.'
name|'StringIO'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'StringIO'
op|'.'
name|'StringIO'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_socket'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|readline
dedent|''
name|'def'
name|'readline'
op|'('
name|'self'
op|','
name|'sizehint'
op|'='
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'line'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'.'
name|'readline'
op|'('
name|'self'
op|')'
newline|'\n'
name|'if'
name|'line'
op|'.'
name|'startswith'
op|'('
string|"'hash'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'Exception'
op|'('
string|"'test exception'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'line'
newline|'\n'
nl|'\n'
DECL|member|get_socket
dedent|''
name|'def'
name|'get_socket'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'mock_socket'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'controller'
op|'.'
name|'client_timeout'
op|'='
number|'0.01'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'ssync_receiver'
op|'.'
name|'eventlet'
op|'.'
name|'greenio'
op|','
string|"'shutdown_safe'"
op|')'
name|'as'
name|'mock_shutdown_safe'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
DECL|variable|req
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/sda1/1'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n'"
nl|'\n'
string|"'hash ts\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n:UPDATES: END\\r\\n'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'remote_addr'
op|'='
string|"'3.4.5.6'"
newline|'\n'
DECL|variable|mock_wsgi_input
name|'mock_wsgi_input'
op|'='
name|'_Wrapper'
op|'('
name|'req'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'='
name|'mock_wsgi_input'
newline|'\n'
DECL|variable|resp
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|'":ERROR: 0 \'test exception\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_shutdown_safe'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'3.4.5.6/sda1/1 EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_MISSING_CHECK_empty_list
dedent|''
dedent|''
name|'def'
name|'test_MISSING_CHECK_empty_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/sda1/1'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n:UPDATES: END\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|"':UPDATES: START'"
op|','
string|"':UPDATES: END'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_MISSING_CHECK_have_none
dedent|''
name|'def'
name|'test_MISSING_CHECK_have_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/sda1/1'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n'"
op|'+'
nl|'\n'
name|'self'
op|'.'
name|'hash1'
op|'+'
string|"' '"
op|'+'
name|'self'
op|'.'
name|'ts1'
op|'+'
string|"'\\r\\n'"
op|'+'
nl|'\n'
name|'self'
op|'.'
name|'hash2'
op|'+'
string|"' '"
op|'+'
name|'self'
op|'.'
name|'ts2'
op|'+'
string|"'\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n:UPDATES: END\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'hash1'
op|','
nl|'\n'
name|'self'
op|'.'
name|'hash2'
op|','
nl|'\n'
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|"':UPDATES: START'"
op|','
string|"':UPDATES: END'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_MISSING_CHECK_have_one_exact
dedent|''
name|'def'
name|'test_MISSING_CHECK_have_one_exact'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'object_dir'
op|'='
name|'utils'
op|'.'
name|'storage_directory'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'sda1'"
op|','
name|'diskfile'
op|'.'
name|'DATADIR'
op|')'
op|','
nl|'\n'
string|"'1'"
op|','
name|'self'
op|'.'
name|'hash1'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'mkdirs'
op|'('
name|'object_dir'
op|')'
newline|'\n'
name|'fp'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'object_dir'
op|','
name|'self'
op|'.'
name|'ts1'
op|'+'
string|"'.data'"
op|')'
op|','
string|"'w+'"
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'write'
op|'('
string|"'1'"
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'metadata1'
op|'['
string|"'Content-Length'"
op|']'
op|'='
string|"'1'"
newline|'\n'
name|'diskfile'
op|'.'
name|'write_metadata'
op|'('
name|'fp'
op|','
name|'self'
op|'.'
name|'metadata1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/sda1/1'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n'"
op|'+'
nl|'\n'
name|'self'
op|'.'
name|'hash1'
op|'+'
string|"' '"
op|'+'
name|'self'
op|'.'
name|'ts1'
op|'+'
string|"'\\r\\n'"
op|'+'
nl|'\n'
name|'self'
op|'.'
name|'hash2'
op|'+'
string|"' '"
op|'+'
name|'self'
op|'.'
name|'ts2'
op|'+'
string|"'\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n:UPDATES: END\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'hash2'
op|','
nl|'\n'
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|"':UPDATES: START'"
op|','
string|"':UPDATES: END'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_MISSING_CHECK_have_one_newer
dedent|''
name|'def'
name|'test_MISSING_CHECK_have_one_newer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'object_dir'
op|'='
name|'utils'
op|'.'
name|'storage_directory'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'sda1'"
op|','
name|'diskfile'
op|'.'
name|'DATADIR'
op|')'
op|','
nl|'\n'
string|"'1'"
op|','
name|'self'
op|'.'
name|'hash1'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'mkdirs'
op|'('
name|'object_dir'
op|')'
newline|'\n'
name|'newer_ts1'
op|'='
name|'utils'
op|'.'
name|'normalize_timestamp'
op|'('
name|'float'
op|'('
name|'self'
op|'.'
name|'ts1'
op|')'
op|'+'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'metadata1'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'newer_ts1'
newline|'\n'
name|'fp'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'object_dir'
op|','
name|'newer_ts1'
op|'+'
string|"'.data'"
op|')'
op|','
string|"'w+'"
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'write'
op|'('
string|"'1'"
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'metadata1'
op|'['
string|"'Content-Length'"
op|']'
op|'='
string|"'1'"
newline|'\n'
name|'diskfile'
op|'.'
name|'write_metadata'
op|'('
name|'fp'
op|','
name|'self'
op|'.'
name|'metadata1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/sda1/1'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n'"
op|'+'
nl|'\n'
name|'self'
op|'.'
name|'hash1'
op|'+'
string|"' '"
op|'+'
name|'self'
op|'.'
name|'ts1'
op|'+'
string|"'\\r\\n'"
op|'+'
nl|'\n'
name|'self'
op|'.'
name|'hash2'
op|'+'
string|"' '"
op|'+'
name|'self'
op|'.'
name|'ts2'
op|'+'
string|"'\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n:UPDATES: END\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'hash2'
op|','
nl|'\n'
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|"':UPDATES: START'"
op|','
string|"':UPDATES: END'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_MISSING_CHECK_have_one_older
dedent|''
name|'def'
name|'test_MISSING_CHECK_have_one_older'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'object_dir'
op|'='
name|'utils'
op|'.'
name|'storage_directory'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'sda1'"
op|','
name|'diskfile'
op|'.'
name|'DATADIR'
op|')'
op|','
nl|'\n'
string|"'1'"
op|','
name|'self'
op|'.'
name|'hash1'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'mkdirs'
op|'('
name|'object_dir'
op|')'
newline|'\n'
name|'older_ts1'
op|'='
name|'utils'
op|'.'
name|'normalize_timestamp'
op|'('
name|'float'
op|'('
name|'self'
op|'.'
name|'ts1'
op|')'
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'metadata1'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'older_ts1'
newline|'\n'
name|'fp'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'object_dir'
op|','
name|'older_ts1'
op|'+'
string|"'.data'"
op|')'
op|','
string|"'w+'"
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'write'
op|'('
string|"'1'"
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'metadata1'
op|'['
string|"'Content-Length'"
op|']'
op|'='
string|"'1'"
newline|'\n'
name|'diskfile'
op|'.'
name|'write_metadata'
op|'('
name|'fp'
op|','
name|'self'
op|'.'
name|'metadata1'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/sda1/1'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n'"
op|'+'
nl|'\n'
name|'self'
op|'.'
name|'hash1'
op|'+'
string|"' '"
op|'+'
name|'self'
op|'.'
name|'ts1'
op|'+'
string|"'\\r\\n'"
op|'+'
nl|'\n'
name|'self'
op|'.'
name|'hash2'
op|'+'
string|"' '"
op|'+'
name|'self'
op|'.'
name|'ts2'
op|'+'
string|"'\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n:UPDATES: END\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'hash1'
op|','
nl|'\n'
name|'self'
op|'.'
name|'hash2'
op|','
nl|'\n'
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|"':UPDATES: START'"
op|','
string|"':UPDATES: END'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_timeout
dedent|''
name|'def'
name|'test_UPDATES_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|_Wrapper
indent|'        '
name|'class'
name|'_Wrapper'
op|'('
name|'StringIO'
op|'.'
name|'StringIO'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'StringIO'
op|'.'
name|'StringIO'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_socket'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|readline
dedent|''
name|'def'
name|'readline'
op|'('
name|'self'
op|','
name|'sizehint'
op|'='
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'line'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'.'
name|'readline'
op|'('
name|'self'
op|')'
newline|'\n'
name|'if'
name|'line'
op|'.'
name|'startswith'
op|'('
string|"'DELETE'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0.1'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'line'
newline|'\n'
nl|'\n'
DECL|member|get_socket
dedent|''
name|'def'
name|'get_socket'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'mock_socket'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'controller'
op|'.'
name|'client_timeout'
op|'='
number|'0.01'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'ssync_receiver'
op|'.'
name|'eventlet'
op|'.'
name|'greenio'
op|','
string|"'shutdown_safe'"
op|')'
name|'as'
name|'mock_shutdown_safe'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
DECL|variable|req
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.76334\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'remote_addr'
op|'='
string|"'2.3.4.5'"
newline|'\n'
DECL|variable|mock_wsgi_input
name|'mock_wsgi_input'
op|'='
name|'_Wrapper'
op|'('
name|'req'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'='
name|'mock_wsgi_input'
newline|'\n'
DECL|variable|resp
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 408 \'0.01 seconds: updates line\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'mock_shutdown_safe'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock_wsgi_input'
op|'.'
name|'mock_socket'
op|')'
newline|'\n'
name|'mock_wsgi_input'
op|'.'
name|'mock_socket'
op|'.'
name|'close'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'2.3.4.5/device/partition TIMEOUT in replication.Receiver: '"
nl|'\n'
string|"'0.01 seconds: updates line'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_other_exception
dedent|''
dedent|''
name|'def'
name|'test_UPDATES_other_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|_Wrapper
indent|'        '
name|'class'
name|'_Wrapper'
op|'('
name|'StringIO'
op|'.'
name|'StringIO'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'StringIO'
op|'.'
name|'StringIO'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_socket'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|readline
dedent|''
name|'def'
name|'readline'
op|'('
name|'self'
op|','
name|'sizehint'
op|'='
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'line'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'.'
name|'readline'
op|'('
name|'self'
op|')'
newline|'\n'
name|'if'
name|'line'
op|'.'
name|'startswith'
op|'('
string|"'DELETE'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'Exception'
op|'('
string|"'test exception'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'line'
newline|'\n'
nl|'\n'
DECL|member|get_socket
dedent|''
name|'def'
name|'get_socket'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'mock_socket'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'controller'
op|'.'
name|'client_timeout'
op|'='
number|'0.01'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'ssync_receiver'
op|'.'
name|'eventlet'
op|'.'
name|'greenio'
op|','
string|"'shutdown_safe'"
op|')'
name|'as'
name|'mock_shutdown_safe'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
DECL|variable|req
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.76334\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'remote_addr'
op|'='
string|"'3.4.5.6'"
newline|'\n'
DECL|variable|mock_wsgi_input
name|'mock_wsgi_input'
op|'='
name|'_Wrapper'
op|'('
name|'req'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'='
name|'mock_wsgi_input'
newline|'\n'
DECL|variable|resp
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 0 \'test exception\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'mock_shutdown_safe'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'mock_wsgi_input'
op|'.'
name|'mock_socket'
op|')'
newline|'\n'
name|'mock_wsgi_input'
op|'.'
name|'mock_socket'
op|'.'
name|'close'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'3.4.5.6/device/partition EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_no_problems_no_hard_disconnect
dedent|''
dedent|''
name|'def'
name|'test_UPDATES_no_problems_no_hard_disconnect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|_Wrapper
indent|'        '
name|'class'
name|'_Wrapper'
op|'('
name|'StringIO'
op|'.'
name|'StringIO'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'StringIO'
op|'.'
name|'StringIO'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_socket'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_socket
dedent|''
name|'def'
name|'get_socket'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'mock_socket'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'controller'
op|'.'
name|'client_timeout'
op|'='
number|'0.01'
newline|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'ssync_receiver'
op|'.'
name|'eventlet'
op|'.'
name|'greenio'
op|','
string|"'shutdown_safe'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|','
string|"'DELETE'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'swob'
op|'.'
name|'HTTPNoContent'
op|'('
op|')'
op|')'
op|')'
name|'as'
op|'('
nl|'\n'
name|'mock_shutdown_safe'
op|','
name|'mock_delete'
op|')'
op|':'
newline|'\n'
DECL|variable|req
indent|'            '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.76334\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
newline|'\n'
DECL|variable|mock_wsgi_input
name|'mock_wsgi_input'
op|'='
name|'_Wrapper'
op|'('
name|'req'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'='
name|'mock_wsgi_input'
newline|'\n'
DECL|variable|resp
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|"':UPDATES: START'"
op|','
string|"':UPDATES: END'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_shutdown_safe'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_wsgi_input'
op|'.'
name|'mock_socket'
op|'.'
name|'close'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_bad_subrequest_line
dedent|''
dedent|''
name|'def'
name|'test_UPDATES_bad_subrequest_line'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'bad_subrequest_line\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 0 \'need more than 1 value to unpack\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'None/device/partition EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|','
string|"'DELETE'"
op|','
nl|'\n'
name|'return_value'
op|'='
name|'swob'
op|'.'
name|'HTTPNoContent'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.76334\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"'bad_subrequest_line2'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 0 \'need more than 1 value to unpack\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'None/device/partition EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_no_headers
dedent|''
dedent|''
name|'def'
name|'test_UPDATES_no_headers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 0 \'Got no headers for DELETE /a/c/o\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'None/device/partition EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_bad_headers
dedent|''
name|'def'
name|'test_UPDATES_bad_headers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n'"
nl|'\n'
string|"'Bad-Header Test\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 0 \'need more than 1 value to unpack\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'None/device/partition EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n'"
nl|'\n'
string|"'Good-Header: Test\\r\\n'"
nl|'\n'
string|"'Bad-Header Test\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 0 \'need more than 1 value to unpack\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'None/device/partition EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_bad_content_length
dedent|''
name|'def'
name|'test_UPDATES_bad_content_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'PUT /a/c/o\\r\\n'"
nl|'\n'
string|"'Content-Length: a\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'\':ERROR: 0 "invalid literal for int() with base 10: \\\'a\\\'"\''
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'None/device/partition EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_content_length_with_DELETE
dedent|''
name|'def'
name|'test_UPDATES_content_length_with_DELETE'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n'"
nl|'\n'
string|"'Content-Length: 1\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 0 \'DELETE subrequest with content-length /a/c/o\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'None/device/partition EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_no_content_length_with_PUT
dedent|''
name|'def'
name|'test_UPDATES_no_content_length_with_PUT'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'PUT /a/c/o\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 0 \'No content-length sent for PUT /a/c/o\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'None/device/partition EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_early_termination
dedent|''
name|'def'
name|'test_UPDATES_early_termination'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'PUT /a/c/o\\r\\n'"
nl|'\n'
string|"'Content-Length: 1\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 0 \'Early termination for PUT /a/c/o\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'None/device/partition EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_failures
dedent|''
name|'def'
name|'test_UPDATES_failures'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
op|'@'
name|'server'
op|'.'
name|'public'
newline|'\n'
DECL|function|_DELETE
name|'def'
name|'_DELETE'
op|'('
name|'request'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'request'
op|'.'
name|'path'
op|'=='
string|"'/device/partition/a/c/works'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'swob'
op|'.'
name|'HTTPOk'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'swob'
op|'.'
name|'HTTPInternalServerError'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# failures never hit threshold'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'controller'
op|','
string|"'DELETE'"
op|','
name|'_DELETE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'replication_failure_threshold'
op|'='
number|'4'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'replication_failure_ratio'
op|'='
number|'1.5'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 500 \'ERROR: With :UPDATES: 3 failures to 0 "'
nl|'\n'
string|'"successes\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
comment|'# failures hit threshold and no successes, so ratio is like infinity'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'controller'
op|','
string|"'DELETE'"
op|','
name|'_DELETE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'replication_failure_threshold'
op|'='
number|'4'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'replication_failure_ratio'
op|'='
number|'1.5'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 0 \'Too many 4 failures to 0 successes\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'None/device/partition EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
comment|'# failures hit threshold and ratio hits 1.33333333333'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'controller'
op|','
string|"'DELETE'"
op|','
name|'_DELETE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'replication_failure_threshold'
op|'='
number|'4'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'replication_failure_ratio'
op|'='
number|'1.5'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/works\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/works\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/works\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 500 \'ERROR: With :UPDATES: 4 failures to 3 "'
nl|'\n'
string|'"successes\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
comment|'# failures hit threshold and ratio hits 2.0'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'controller'
op|','
string|"'DELETE'"
op|','
name|'_DELETE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'replication_failure_threshold'
op|'='
number|'4'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'replication_failure_ratio'
op|'='
number|'1.5'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/works\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/works\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 0 \'Too many 4 failures to 2 successes\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'None/device/partition EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_PUT
dedent|''
dedent|''
name|'def'
name|'test_UPDATES_PUT'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_PUT_request'
op|'='
op|'['
name|'None'
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'server'
op|'.'
name|'public'
newline|'\n'
DECL|function|_PUT
name|'def'
name|'_PUT'
op|'('
name|'request'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_PUT_request'
op|'['
number|'0'
op|']'
op|'='
name|'request'
newline|'\n'
name|'request'
op|'.'
name|'read_body'
op|'='
name|'request'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'swob'
op|'.'
name|'HTTPOk'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'controller'
op|','
string|"'PUT'"
op|','
name|'_PUT'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'PUT /a/c/o\\r\\n'"
nl|'\n'
string|"'Content-Length: 1\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.12344\\r\\n'"
nl|'\n'
string|"'X-Object-Meta-Test1: one\\r\\n'"
nl|'\n'
string|"'Content-Encoding: gzip\\r\\n'"
nl|'\n'
string|"'Specialty-Header: value\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"'1'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|"':UPDATES: START'"
op|','
string|"':UPDATES: END'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'req'
op|'='
name|'_PUT_request'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'path'
op|','
string|"'/device/partition/a/c/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'content_length'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'headers'
op|','
op|'{'
nl|'\n'
string|"'Content-Length'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
string|"'1364456113.12344'"
op|','
nl|'\n'
string|"'X-Object-Meta-Test1'"
op|':'
string|"'one'"
op|','
nl|'\n'
string|"'Content-Encoding'"
op|':'
string|"'gzip'"
op|','
nl|'\n'
string|"'Specialty-Header'"
op|':'
string|"'value'"
op|','
nl|'\n'
string|"'Host'"
op|':'
string|"'localhost:80'"
op|','
nl|'\n'
string|"'X-Backend-Replication'"
op|':'
string|"'True'"
op|','
nl|'\n'
string|"'X-Backend-Replication-Headers'"
op|':'
op|'('
nl|'\n'
string|"'content-length x-timestamp x-object-meta-test1 '"
nl|'\n'
string|"'content-encoding specialty-header'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'read_body'
op|','
string|"'1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_DELETE
dedent|''
dedent|''
name|'def'
name|'test_UPDATES_DELETE'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_DELETE_request'
op|'='
op|'['
name|'None'
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'server'
op|'.'
name|'public'
newline|'\n'
DECL|function|_DELETE
name|'def'
name|'_DELETE'
op|'('
name|'request'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_DELETE_request'
op|'['
number|'0'
op|']'
op|'='
name|'request'
newline|'\n'
name|'return'
name|'swob'
op|'.'
name|'HTTPOk'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'controller'
op|','
string|"'DELETE'"
op|','
name|'_DELETE'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.76334\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|"':UPDATES: START'"
op|','
string|"':UPDATES: END'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'req'
op|'='
name|'_DELETE_request'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'path'
op|','
string|"'/device/partition/a/c/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'headers'
op|','
op|'{'
nl|'\n'
string|"'X-Timestamp'"
op|':'
string|"'1364456113.76334'"
op|','
nl|'\n'
string|"'Host'"
op|':'
string|"'localhost:80'"
op|','
nl|'\n'
string|"'X-Backend-Replication'"
op|':'
string|"'True'"
op|','
nl|'\n'
string|"'X-Backend-Replication-Headers'"
op|':'
string|"'x-timestamp'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_BONK
dedent|''
dedent|''
name|'def'
name|'test_UPDATES_BONK'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_BONK_request'
op|'='
op|'['
name|'None'
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'server'
op|'.'
name|'public'
newline|'\n'
DECL|function|_BONK
name|'def'
name|'_BONK'
op|'('
name|'request'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_BONK_request'
op|'['
number|'0'
op|']'
op|'='
name|'request'
newline|'\n'
name|'return'
name|'swob'
op|'.'
name|'HTTPOk'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'controller'
op|'.'
name|'BONK'
op|'='
name|'_BONK'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'BONK /a/c/o\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.76334\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 0 \'Invalid subrequest method BONK\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'None/device/partition EXCEPTION in replication.Receiver'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_BONK_request'
op|'['
number|'0'
op|']'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_multiple
dedent|''
name|'def'
name|'test_UPDATES_multiple'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_requests'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'server'
op|'.'
name|'public'
newline|'\n'
DECL|function|_PUT
name|'def'
name|'_PUT'
op|'('
name|'request'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_requests'
op|'.'
name|'append'
op|'('
name|'request'
op|')'
newline|'\n'
name|'request'
op|'.'
name|'read_body'
op|'='
name|'request'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'swob'
op|'.'
name|'HTTPOk'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'server'
op|'.'
name|'public'
newline|'\n'
DECL|function|_DELETE
name|'def'
name|'_DELETE'
op|'('
name|'request'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_requests'
op|'.'
name|'append'
op|'('
name|'request'
op|')'
newline|'\n'
name|'return'
name|'swob'
op|'.'
name|'HTTPOk'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'controller'
op|','
string|"'PUT'"
op|','
name|'_PUT'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'controller'
op|','
string|"'DELETE'"
op|','
name|'_DELETE'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'PUT /a/c/o1\\r\\n'"
nl|'\n'
string|"'Content-Length: 1\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.00001\\r\\n'"
nl|'\n'
string|"'X-Object-Meta-Test1: one\\r\\n'"
nl|'\n'
string|"'Content-Encoding: gzip\\r\\n'"
nl|'\n'
string|"'Specialty-Header: value\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"'1'"
nl|'\n'
string|"'DELETE /a/c/o2\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.00002\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"'PUT /a/c/o3\\r\\n'"
nl|'\n'
string|"'Content-Length: 3\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.00003\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"'123'"
nl|'\n'
string|"'PUT /a/c/o4\\r\\n'"
nl|'\n'
string|"'Content-Length: 4\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.00004\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"'1\\r\\n4'"
nl|'\n'
string|"'DELETE /a/c/o5\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.00005\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o6\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.00006\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|"':UPDATES: START'"
op|','
string|"':UPDATES: END'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'req'
op|'='
name|'_requests'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'method'
op|','
string|"'PUT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'path'
op|','
string|"'/device/partition/a/c/o1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'content_length'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'headers'
op|','
op|'{'
nl|'\n'
string|"'Content-Length'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
string|"'1364456113.00001'"
op|','
nl|'\n'
string|"'X-Object-Meta-Test1'"
op|':'
string|"'one'"
op|','
nl|'\n'
string|"'Content-Encoding'"
op|':'
string|"'gzip'"
op|','
nl|'\n'
string|"'Specialty-Header'"
op|':'
string|"'value'"
op|','
nl|'\n'
string|"'Host'"
op|':'
string|"'localhost:80'"
op|','
nl|'\n'
string|"'X-Backend-Replication'"
op|':'
string|"'True'"
op|','
nl|'\n'
string|"'X-Backend-Replication-Headers'"
op|':'
op|'('
nl|'\n'
string|"'content-length x-timestamp x-object-meta-test1 '"
nl|'\n'
string|"'content-encoding specialty-header'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'read_body'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'_requests'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'method'
op|','
string|"'DELETE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'path'
op|','
string|"'/device/partition/a/c/o2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'headers'
op|','
op|'{'
nl|'\n'
string|"'X-Timestamp'"
op|':'
string|"'1364456113.00002'"
op|','
nl|'\n'
string|"'Host'"
op|':'
string|"'localhost:80'"
op|','
nl|'\n'
string|"'X-Backend-Replication'"
op|':'
string|"'True'"
op|','
nl|'\n'
string|"'X-Backend-Replication-Headers'"
op|':'
string|"'x-timestamp'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'='
name|'_requests'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'method'
op|','
string|"'PUT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'path'
op|','
string|"'/device/partition/a/c/o3'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'content_length'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'headers'
op|','
op|'{'
nl|'\n'
string|"'Content-Length'"
op|':'
string|"'3'"
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
string|"'1364456113.00003'"
op|','
nl|'\n'
string|"'Host'"
op|':'
string|"'localhost:80'"
op|','
nl|'\n'
string|"'X-Backend-Replication'"
op|':'
string|"'True'"
op|','
nl|'\n'
string|"'X-Backend-Replication-Headers'"
op|':'
op|'('
nl|'\n'
string|"'content-length x-timestamp'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'read_body'
op|','
string|"'123'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'_requests'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'method'
op|','
string|"'PUT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'path'
op|','
string|"'/device/partition/a/c/o4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'content_length'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'headers'
op|','
op|'{'
nl|'\n'
string|"'Content-Length'"
op|':'
string|"'4'"
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
string|"'1364456113.00004'"
op|','
nl|'\n'
string|"'Host'"
op|':'
string|"'localhost:80'"
op|','
nl|'\n'
string|"'X-Backend-Replication'"
op|':'
string|"'True'"
op|','
nl|'\n'
string|"'X-Backend-Replication-Headers'"
op|':'
op|'('
nl|'\n'
string|"'content-length x-timestamp'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'read_body'
op|','
string|"'1\\r\\n4'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'_requests'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'method'
op|','
string|"'DELETE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'path'
op|','
string|"'/device/partition/a/c/o5'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'headers'
op|','
op|'{'
nl|'\n'
string|"'X-Timestamp'"
op|':'
string|"'1364456113.00005'"
op|','
nl|'\n'
string|"'Host'"
op|':'
string|"'localhost:80'"
op|','
nl|'\n'
string|"'X-Backend-Replication'"
op|':'
string|"'True'"
op|','
nl|'\n'
string|"'X-Backend-Replication-Headers'"
op|':'
string|"'x-timestamp'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'='
name|'_requests'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'method'
op|','
string|"'DELETE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'path'
op|','
string|"'/device/partition/a/c/o6'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'headers'
op|','
op|'{'
nl|'\n'
string|"'X-Timestamp'"
op|':'
string|"'1364456113.00006'"
op|','
nl|'\n'
string|"'Host'"
op|':'
string|"'localhost:80'"
op|','
nl|'\n'
string|"'X-Backend-Replication'"
op|':'
string|"'True'"
op|','
nl|'\n'
string|"'X-Backend-Replication-Headers'"
op|':'
string|"'x-timestamp'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_requests'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_UPDATES_subreq_does_not_read_all
dedent|''
dedent|''
name|'def'
name|'test_UPDATES_subreq_does_not_read_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# This tests that if a REPLICATION subrequest fails and doesn't read"
nl|'\n'
comment|'# all the subrequest body that it will read and throw away the rest of'
nl|'\n'
comment|'# the body before moving on to the next subrequest.'
nl|'\n'
comment|'# If you comment out the part in ssync_receiver where it does:'
nl|'\n'
comment|"#     for junk in subreq.environ['wsgi.input']:"
nl|'\n'
comment|'#         pass'
nl|'\n'
comment|'# You can then see this test fail.'
nl|'\n'
indent|'        '
name|'_requests'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'server'
op|'.'
name|'public'
newline|'\n'
DECL|function|_PUT
name|'def'
name|'_PUT'
op|'('
name|'request'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_requests'
op|'.'
name|'append'
op|'('
name|'request'
op|')'
newline|'\n'
comment|'# Deliberately just reading up to first 2 bytes.'
nl|'\n'
name|'request'
op|'.'
name|'read_body'
op|'='
name|'request'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'.'
name|'read'
op|'('
number|'2'
op|')'
newline|'\n'
name|'return'
name|'swob'
op|'.'
name|'HTTPInternalServerError'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|_IgnoreReadlineHint
dedent|''
name|'class'
name|'_IgnoreReadlineHint'
op|'('
name|'StringIO'
op|'.'
name|'StringIO'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'StringIO'
op|'.'
name|'StringIO'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|readline
dedent|''
name|'def'
name|'readline'
op|'('
name|'self'
op|','
name|'hint'
op|'='
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'StringIO'
op|'.'
name|'StringIO'
op|'.'
name|'readline'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'controller'
op|'.'
name|'PUT'
op|'='
name|'_PUT'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'network_chunk_size'
op|'='
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/device/partition'"
op|','
nl|'\n'
DECL|variable|environ
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'REPLICATION'"
op|'}'
op|','
nl|'\n'
DECL|variable|body
name|'body'
op|'='
string|"':MISSING_CHECK: START\\r\\n:MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'PUT /a/c/o1\\r\\n'"
nl|'\n'
string|"'Content-Length: 3\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.00001\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"'123'"
nl|'\n'
string|"'PUT /a/c/o2\\r\\n'"
nl|'\n'
string|"'Content-Length: 1\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1364456113.00002\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"'1'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'='
name|'_IgnoreReadlineHint'
op|'('
name|'req'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'REPLICATION'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'body_lines'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
op|'['
string|"':MISSING_CHECK: START'"
op|','
string|"':MISSING_CHECK: END'"
op|','
nl|'\n'
string|'":ERROR: 500 \'ERROR: With :UPDATES: 2 failures to 0 successes\'"'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'req'
op|'='
name|'_requests'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'path'
op|','
string|"'/device/partition/a/c/o1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'content_length'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'headers'
op|','
op|'{'
nl|'\n'
string|"'Content-Length'"
op|':'
string|"'3'"
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
string|"'1364456113.00001'"
op|','
nl|'\n'
string|"'Host'"
op|':'
string|"'localhost:80'"
op|','
nl|'\n'
string|"'X-Backend-Replication'"
op|':'
string|"'True'"
op|','
nl|'\n'
string|"'X-Backend-Replication-Headers'"
op|':'
op|'('
nl|'\n'
string|"'content-length x-timestamp'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'read_body'
op|','
string|"'12'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'_requests'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'path'
op|','
string|"'/device/partition/a/c/o2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'content_length'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'headers'
op|','
op|'{'
nl|'\n'
string|"'Content-Length'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
string|"'1364456113.00002'"
op|','
nl|'\n'
string|"'Host'"
op|':'
string|"'localhost:80'"
op|','
nl|'\n'
string|"'X-Backend-Replication'"
op|':'
string|"'True'"
op|','
nl|'\n'
string|"'X-Backend-Replication-Headers'"
op|':'
op|'('
nl|'\n'
string|"'content-length x-timestamp'"
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'read_body'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'_requests'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
