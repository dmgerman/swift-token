begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'gzip'
name|'import'
name|'GzipFile'
newline|'\n'
name|'from'
name|'shutil'
name|'import'
name|'rmtree'
newline|'\n'
name|'import'
name|'six'
op|'.'
name|'moves'
op|'.'
name|'cPickle'
name|'as'
name|'pickle'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'contextmanager'
op|','
name|'closing'
newline|'\n'
name|'from'
name|'collections'
name|'import'
name|'defaultdict'
newline|'\n'
name|'from'
name|'errno'
name|'import'
name|'ENOENT'
op|','
name|'ENOTEMPTY'
op|','
name|'ENOTDIR'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'green'
name|'import'
name|'subprocess'
newline|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'Timeout'
op|','
name|'tpool'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
op|'('
name|'debug_logger'
op|','
name|'patch_policies'
op|','
name|'make_timestamp_iter'
op|','
nl|'\n'
name|'mocked_http_conn'
op|')'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'hash_path'
op|','
name|'mkdirs'
op|','
name|'normalize_timestamp'
op|','
name|'storage_directory'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'ring'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'diskfile'
op|','
name|'replicator'
name|'as'
name|'object_replicator'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'StoragePolicy'
op|','
name|'POLICIES'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_ips
name|'def'
name|'_ips'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
string|"'127.0.0.0'"
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|mock_http_connect
dedent|''
name|'def'
name|'mock_http_connect'
op|'('
name|'status'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|FakeConn
indent|'    '
name|'class'
name|'FakeConn'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'        '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'status'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'status'
op|'='
name|'status'
newline|'\n'
name|'self'
op|'.'
name|'reason'
op|'='
string|"'Fake'"
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'='
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'port'
op|'='
name|'args'
op|'['
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'method'
op|'='
name|'args'
op|'['
number|'4'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'path'
op|'='
name|'args'
op|'['
number|'5'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'with_exc'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'headers'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'headers'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getresponse
dedent|''
name|'def'
name|'getresponse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'with_exc'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'test'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|getheader
dedent|''
name|'def'
name|'getheader'
op|'('
name|'self'
op|','
name|'header'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'headers'
op|'['
name|'header'
op|']'
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|','
name|'amt'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'pickle'
op|'.'
name|'dumps'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|close
dedent|''
name|'def'
name|'close'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'FakeConn'
op|'('
name|'status'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|process_errors
dedent|''
name|'process_errors'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MockProcess
name|'class'
name|'MockProcess'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|ret_code
indent|'    '
name|'ret_code'
op|'='
name|'None'
newline|'\n'
DECL|variable|ret_log
name|'ret_log'
op|'='
name|'None'
newline|'\n'
DECL|variable|check_args
name|'check_args'
op|'='
name|'None'
newline|'\n'
DECL|variable|captured_log
name|'captured_log'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|class|Stream
name|'class'
name|'Stream'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|read
indent|'        '
name|'def'
name|'read'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'next'
op|'('
name|'MockProcess'
op|'.'
name|'ret_log'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
dedent|''
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'targs'
op|'='
name|'next'
op|'('
name|'MockProcess'
op|'.'
name|'check_args'
op|')'
newline|'\n'
name|'for'
name|'targ'
name|'in'
name|'targs'
op|':'
newline|'\n'
comment|'# Allow more than 2 candidate targs'
nl|'\n'
comment|'# (e.g. a case that either node is fine when nodes shuffled)'
nl|'\n'
indent|'            '
name|'if'
name|'isinstance'
op|'('
name|'targ'
op|','
name|'tuple'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'allowed'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'target'
name|'in'
name|'targ'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'target'
name|'in'
name|'args'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                        '
name|'allowed'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'allowed'
op|':'
newline|'\n'
indent|'                    '
name|'process_errors'
op|'.'
name|'append'
op|'('
string|'"Invalid: %s not in %s"'
op|'%'
op|'('
name|'targ'
op|','
nl|'\n'
name|'args'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'targ'
name|'not'
name|'in'
name|'args'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'process_errors'
op|'.'
name|'append'
op|'('
string|'"Invalid: %s not in %s"'
op|'%'
op|'('
name|'targ'
op|','
nl|'\n'
name|'args'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'captured_info'
op|'='
op|'{'
nl|'\n'
string|"'rsync_args'"
op|':'
name|'args'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'stdout'
op|'='
name|'self'
op|'.'
name|'Stream'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|wait
dedent|''
name|'def'
name|'wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# the _mock_process context manager assures this class attribute is a'
nl|'\n'
comment|'# mutable list and takes care of resetting it'
nl|'\n'
indent|'        '
name|'rv'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ret_code'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'captured_log'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'captured_info'
op|'['
string|"'ret_code'"
op|']'
op|'='
name|'rv'
newline|'\n'
name|'self'
op|'.'
name|'captured_log'
op|'.'
name|'append'
op|'('
name|'self'
op|'.'
name|'captured_info'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|function|_mock_process
name|'def'
name|'_mock_process'
op|'('
name|'ret'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'captured_log'
op|'='
op|'['
op|']'
newline|'\n'
name|'MockProcess'
op|'.'
name|'captured_log'
op|'='
name|'captured_log'
newline|'\n'
name|'orig_process'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
newline|'\n'
name|'MockProcess'
op|'.'
name|'ret_code'
op|'='
op|'('
name|'i'
op|'['
number|'0'
op|']'
name|'for'
name|'i'
name|'in'
name|'ret'
op|')'
newline|'\n'
name|'MockProcess'
op|'.'
name|'ret_log'
op|'='
op|'('
name|'i'
op|'['
number|'1'
op|']'
name|'for'
name|'i'
name|'in'
name|'ret'
op|')'
newline|'\n'
name|'MockProcess'
op|'.'
name|'check_args'
op|'='
op|'('
name|'i'
op|'['
number|'2'
op|']'
name|'for'
name|'i'
name|'in'
name|'ret'
op|')'
newline|'\n'
name|'object_replicator'
op|'.'
name|'subprocess'
op|'.'
name|'Popen'
op|'='
name|'MockProcess'
newline|'\n'
name|'yield'
name|'captured_log'
newline|'\n'
name|'MockProcess'
op|'.'
name|'captured_log'
op|'='
name|'None'
newline|'\n'
name|'object_replicator'
op|'.'
name|'subprocess'
op|'.'
name|'Popen'
op|'='
name|'orig_process'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_test_rings
dedent|''
name|'def'
name|'_create_test_rings'
op|'('
name|'path'
op|','
name|'devs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'testgz'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'path'
op|','
string|"'object.ring.gz'"
op|')'
newline|'\n'
name|'intended_replica2part2dev_id'
op|'='
op|'['
nl|'\n'
op|'['
number|'0'
op|','
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'4'
op|','
number|'5'
op|','
number|'6'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'0'
op|','
number|'5'
op|','
number|'6'
op|','
number|'4'
op|']'
op|','
nl|'\n'
op|'['
number|'2'
op|','
number|'3'
op|','
number|'0'
op|','
number|'1'
op|','
number|'6'
op|','
number|'4'
op|','
number|'5'
op|']'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'intended_devs'
op|'='
name|'devs'
name|'or'
op|'['
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.0'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'2'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.2'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'2'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.3'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'4'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.4'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'5'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'6'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'2'
op|','
string|"'ip'"
op|':'
string|"'fe80::202:b3ff:fe1e:8329'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'6'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'7'
op|','
string|"'region'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'2001:0db8:85a3:0000:0000:8a2e:0370:7334'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'intended_part_shift'
op|'='
number|'30'
newline|'\n'
name|'with'
name|'closing'
op|'('
name|'GzipFile'
op|'('
name|'testgz'
op|','
string|"'wb'"
op|')'
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'        '
name|'pickle'
op|'.'
name|'dump'
op|'('
nl|'\n'
name|'ring'
op|'.'
name|'RingData'
op|'('
name|'intended_replica2part2dev_id'
op|','
nl|'\n'
name|'intended_devs'
op|','
name|'intended_part_shift'
op|')'
op|','
nl|'\n'
name|'f'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'testgz'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'path'
op|','
string|"'object-1.ring.gz'"
op|')'
newline|'\n'
name|'with'
name|'closing'
op|'('
name|'GzipFile'
op|'('
name|'testgz'
op|','
string|"'wb'"
op|')'
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'        '
name|'pickle'
op|'.'
name|'dump'
op|'('
nl|'\n'
name|'ring'
op|'.'
name|'RingData'
op|'('
name|'intended_replica2part2dev_id'
op|','
nl|'\n'
name|'intended_devs'
op|','
name|'intended_part_shift'
op|')'
op|','
nl|'\n'
name|'f'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'.'
name|'object_ring'
op|'='
name|'None'
comment|'# force reload'
newline|'\n'
dedent|''
name|'return'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'patch_policies'
op|'('
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'True'
op|')'
op|']'
op|')'
newline|'\n'
DECL|class|TestObjectReplicator
name|'class'
name|'TestObjectReplicator'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'utils'
op|'.'
name|'HASH_PATH_SUFFIX'
op|'='
string|"'endcap'"
newline|'\n'
name|'utils'
op|'.'
name|'HASH_PATH_PREFIX'
op|'='
string|"''"
newline|'\n'
comment|'# Setup a test ring (stolen from common/test_ring.py)'
nl|'\n'
name|'self'
op|'.'
name|'testdir'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'devices'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'node'"
op|')'
newline|'\n'
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
name|'ignore_errors'
op|'='
number|'1'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'self'
op|'.'
name|'testdir'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'self'
op|'.'
name|'devices'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'objects'
op|','
name|'self'
op|'.'
name|'objects_1'
op|','
name|'self'
op|'.'
name|'parts'
op|','
name|'self'
op|'.'
name|'parts_1'
op|'='
name|'self'
op|'.'
name|'_write_disk_data'
op|'('
string|"'sda'"
op|')'
newline|'\n'
name|'_create_test_rings'
op|'('
name|'self'
op|'.'
name|'testdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'test-replicator'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'bind_ip'
op|'='
name|'_ips'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|','
name|'bind_port'
op|'='
number|'6000'
op|','
nl|'\n'
name|'swift_dir'
op|'='
name|'self'
op|'.'
name|'testdir'
op|','
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
op|','
name|'mount_check'
op|'='
string|"'false'"
op|','
nl|'\n'
name|'timeout'
op|'='
string|"'300'"
op|','
name|'stats_interval'
op|'='
string|"'1'"
op|','
name|'sync_method'
op|'='
string|"'rsync'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_replicator'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ts'
op|'='
name|'make_timestamp_iter'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'process_errors'
op|')'
newline|'\n'
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
name|'ignore_errors'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_handoff_replication_setting_warnings
dedent|''
name|'def'
name|'test_handoff_replication_setting_warnings'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf_tests'
op|'='
op|'['
nl|'\n'
comment|'# (config, expected_warning)'
nl|'\n'
op|'('
op|'{'
op|'}'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
op|'{'
string|"'handoff_delete'"
op|':'
string|"'auto'"
op|'}'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
op|'{'
string|"'handoffs_first'"
op|':'
string|"'no'"
op|'}'
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
op|'{'
string|"'handoff_delete'"
op|':'
string|"'2'"
op|'}'
op|','
name|'True'
op|')'
op|','
nl|'\n'
op|'('
op|'{'
string|"'handoffs_first'"
op|':'
string|"'yes'"
op|'}'
op|','
name|'True'
op|')'
op|','
nl|'\n'
op|'('
op|'{'
string|"'handoff_delete'"
op|':'
string|"'1'"
op|','
string|"'handoffs_first'"
op|':'
string|"'yes'"
op|'}'
op|','
name|'True'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'log_message'
op|'='
string|"'Handoff only mode is not intended for normal '"
string|"'operation, please disable handoffs_first and '"
string|"'handoff_delete before the next normal rebalance'"
newline|'\n'
name|'for'
name|'config'
op|','
name|'expected_warning'
name|'in'
name|'conf_tests'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'clear'
op|'('
op|')'
newline|'\n'
name|'object_replicator'
op|'.'
name|'ObjectReplicator'
op|'('
name|'config'
op|','
name|'logger'
op|'='
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
name|'warning_log_lines'
op|'='
name|'self'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'warning'"
op|')'
newline|'\n'
name|'if'
name|'expected_warning'
op|':'
newline|'\n'
indent|'                '
name|'expected_log_lines'
op|'='
op|'['
name|'log_message'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'expected_log_lines'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_log_lines'
op|','
name|'warning_log_lines'
op|','
nl|'\n'
string|"'expected %s != %s for config %r'"
op|'%'
op|'('
nl|'\n'
name|'expected_log_lines'
op|','
nl|'\n'
name|'warning_log_lines'
op|','
nl|'\n'
name|'config'
op|','
nl|'\n'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_write_disk_data
dedent|''
dedent|''
name|'def'
name|'_write_disk_data'
op|'('
name|'self'
op|','
name|'disk_name'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'disk_name'
op|')'
op|')'
newline|'\n'
name|'objects'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'disk_name'
op|','
nl|'\n'
name|'diskfile'
op|'.'
name|'get_data_dir'
op|'('
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
name|'objects_1'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'disk_name'
op|','
nl|'\n'
name|'diskfile'
op|'.'
name|'get_data_dir'
op|'('
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'objects'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'objects_1'
op|')'
newline|'\n'
name|'parts'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'parts_1'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'part'
name|'in'
op|'['
string|"'0'"
op|','
string|"'1'"
op|','
string|"'2'"
op|','
string|"'3'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'parts'
op|'['
name|'part'
op|']'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'objects'
op|','
name|'part'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'parts'
op|'['
name|'part'
op|']'
op|')'
newline|'\n'
name|'parts_1'
op|'['
name|'part'
op|']'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'objects_1'
op|','
name|'part'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'parts_1'
op|'['
name|'part'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'objects'
op|','
name|'objects_1'
op|','
name|'parts'
op|','
name|'parts_1'
newline|'\n'
nl|'\n'
DECL|member|_create_replicator
dedent|''
name|'def'
name|'_create_replicator'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'replicator'
op|'='
name|'object_replicator'
op|'.'
name|'ObjectReplicator'
op|'('
name|'self'
op|'.'
name|'conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'logger'
op|'='
name|'self'
op|'.'
name|'logger'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_zero_stats'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'all_devs_info'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'df_mgr'
op|'='
name|'diskfile'
op|'.'
name|'DiskFileManager'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_once
dedent|''
name|'def'
name|'test_run_once'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'dict'
op|'('
name|'swift_dir'
op|'='
name|'self'
op|'.'
name|'testdir'
op|','
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
name|'bind_ip'
op|'='
name|'_ips'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'mount_check'
op|'='
string|"'false'"
op|','
name|'timeout'
op|'='
string|"'300'"
op|','
name|'stats_interval'
op|'='
string|"'1'"
op|')'
newline|'\n'
name|'replicator'
op|'='
name|'object_replicator'
op|'.'
name|'ObjectReplicator'
op|'('
name|'conf'
op|')'
newline|'\n'
name|'was_connector'
op|'='
name|'object_replicator'
op|'.'
name|'http_connect'
newline|'\n'
name|'object_replicator'
op|'.'
name|'http_connect'
op|'='
name|'mock_http_connect'
op|'('
number|'200'
op|')'
newline|'\n'
name|'cur_part'
op|'='
string|"'0'"
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
name|'cur_part'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'cur_part'
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'ring'
op|'='
name|'replicator'
op|'.'
name|'load_object_ring'
op|'('
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'int'
op|'('
name|'cur_part'
op|')'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'rsync_mods'
op|'='
name|'tuple'
op|'('
op|'['
string|"'%s::object/sda/objects/%s'"
op|'%'
nl|'\n'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'cur_part'
op|')'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|']'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mods'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'replicator'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'process_errors'
op|')'
newline|'\n'
name|'object_replicator'
op|'.'
name|'http_connect'
op|'='
name|'was_connector'
newline|'\n'
nl|'\n'
comment|'# policy 1'
nl|'\n'
DECL|member|test_run_once_1
dedent|''
name|'def'
name|'test_run_once_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'dict'
op|'('
name|'swift_dir'
op|'='
name|'self'
op|'.'
name|'testdir'
op|','
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
name|'mount_check'
op|'='
string|"'false'"
op|','
name|'timeout'
op|'='
string|"'300'"
op|','
name|'stats_interval'
op|'='
string|"'1'"
op|')'
newline|'\n'
name|'replicator'
op|'='
name|'object_replicator'
op|'.'
name|'ObjectReplicator'
op|'('
name|'conf'
op|')'
newline|'\n'
name|'was_connector'
op|'='
name|'object_replicator'
op|'.'
name|'http_connect'
newline|'\n'
name|'object_replicator'
op|'.'
name|'http_connect'
op|'='
name|'mock_http_connect'
op|'('
number|'200'
op|')'
newline|'\n'
name|'cur_part'
op|'='
string|"'0'"
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
name|'cur_part'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects_1'
op|','
name|'cur_part'
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'ring'
op|'='
name|'replicator'
op|'.'
name|'load_object_ring'
op|'('
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'int'
op|'('
name|'cur_part'
op|')'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'rsync_mods'
op|'='
name|'tuple'
op|'('
op|'['
string|"'%s::object/sda/objects-1/%s'"
op|'%'
nl|'\n'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'cur_part'
op|')'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|']'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mods'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.whataremyips'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'_ips'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'replicator'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'process_errors'
op|')'
newline|'\n'
name|'object_replicator'
op|'.'
name|'http_connect'
op|'='
name|'was_connector'
newline|'\n'
nl|'\n'
DECL|member|test_check_ring
dedent|''
name|'def'
name|'test_check_ring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'pol'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'obj_ring'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'load_object_ring'
op|'('
name|'pol'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'check_ring'
op|'('
name|'obj_ring'
op|')'
op|')'
newline|'\n'
name|'orig_check'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'next_check'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'next_check'
op|'='
name|'orig_check'
op|'-'
number|'30'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'check_ring'
op|'('
name|'obj_ring'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'next_check'
op|'='
name|'orig_check'
newline|'\n'
name|'orig_ring_time'
op|'='
name|'obj_ring'
op|'.'
name|'_mtime'
newline|'\n'
name|'obj_ring'
op|'.'
name|'_mtime'
op|'='
name|'orig_ring_time'
op|'-'
number|'30'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'check_ring'
op|'('
name|'obj_ring'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'next_check'
op|'='
name|'orig_check'
op|'-'
number|'30'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'check_ring'
op|'('
name|'obj_ring'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_collect_jobs_mkdirs_error
dedent|''
dedent|''
name|'def'
name|'test_collect_jobs_mkdirs_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'non_local'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|blowup_mkdirs
name|'def'
name|'blowup_mkdirs'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'non_local'
op|'['
string|"'path'"
op|']'
op|'='
name|'path'
newline|'\n'
name|'raise'
name|'OSError'
op|'('
string|"'Ow!'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'object_replicator'
op|','
string|"'mkdirs'"
op|','
name|'blowup_mkdirs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'ignore_errors'
op|'='
number|'1'
op|')'
newline|'\n'
name|'object_replicator'
op|'.'
name|'mkdirs'
op|'='
name|'blowup_mkdirs'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
op|','
op|'['
nl|'\n'
string|"'ERROR creating %s: '"
op|'%'
name|'non_local'
op|'['
string|"'path'"
op|']'
op|']'
op|')'
newline|'\n'
name|'log_args'
op|','
name|'log_kwargs'
op|'='
name|'self'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'error'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'log_kwargs'
op|'['
string|"'exc_info'"
op|']'
op|'['
number|'1'
op|']'
op|')'
op|','
string|"'Ow!'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_collect_jobs
dedent|''
dedent|''
name|'def'
name|'test_collect_jobs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'jobs'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
name|'jobs_to_delete'
op|'='
op|'['
name|'j'
name|'for'
name|'j'
name|'in'
name|'jobs'
name|'if'
name|'j'
op|'['
string|"'delete'"
op|']'
op|']'
newline|'\n'
name|'jobs_by_pol_part'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
indent|'            '
name|'jobs_by_pol_part'
op|'['
name|'str'
op|'('
name|'int'
op|'('
name|'job'
op|'['
string|"'policy'"
op|']'
op|')'
op|')'
op|'+'
name|'job'
op|'['
string|"'partition'"
op|']'
op|']'
op|'='
name|'job'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'jobs_to_delete'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'1'"
op|','
name|'jobs_to_delete'
op|'['
number|'0'
op|']'
op|'['
string|"'partition'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part'
op|'['
string|"'00'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part'
op|'['
string|"'01'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part'
op|'['
string|"'02'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part'
op|'['
string|"'03'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
op|'['
number|'3'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part'
op|'['
string|"'10'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part'
op|'['
string|"'11'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part'
op|'['
string|"'12'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part'
op|'['
string|"'13'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
op|'['
number|'3'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'for'
name|'part'
name|'in'
op|'['
string|"'00'"
op|','
string|"'01'"
op|','
string|"'02'"
op|','
string|"'03'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part'
op|'['
name|'part'
op|']'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'node'
op|'['
string|"'device'"
op|']'
op|','
string|"'sda'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jobs_by_pol_part'
op|'['
name|'part'
op|']'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'part'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'part'
name|'in'
op|'['
string|"'10'"
op|','
string|"'11'"
op|','
string|"'12'"
op|','
string|"'13'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part'
op|'['
name|'part'
op|']'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'node'
op|'['
string|"'device'"
op|']'
op|','
string|"'sda'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jobs_by_pol_part'
op|'['
name|'part'
op|']'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects_1'
op|','
name|'part'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.random.shuffle'"
op|','
name|'side_effect'
op|'='
name|'lambda'
name|'l'
op|':'
name|'l'
op|')'
newline|'\n'
DECL|member|test_collect_jobs_multi_disk
name|'def'
name|'test_collect_jobs_multi_disk'
op|'('
name|'self'
op|','
name|'mock_shuffle'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'devs'
op|'='
op|'['
nl|'\n'
comment|'# Two disks on same IP/port'
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'1.1.1.1'"
op|','
string|"'port'"
op|':'
number|'1111'
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'127.0.0.0'"
op|','
string|"'replication_port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'device'"
op|':'
string|"'sdb'"
op|','
string|"'zone'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'1.1.1.1'"
op|','
string|"'port'"
op|':'
number|'1111'
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'127.0.0.0'"
op|','
string|"'replication_port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
comment|'# Two disks on same server, different ports'
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'device'"
op|':'
string|"'sdc'"
op|','
string|"'zone'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'2'
op|','
string|"'ip'"
op|':'
string|"'1.1.1.2'"
op|','
string|"'port'"
op|':'
number|'1112'
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'replication_port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
string|"'device'"
op|':'
string|"'sdd'"
op|','
string|"'zone'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'2'
op|','
string|"'ip'"
op|':'
string|"'1.1.1.2'"
op|','
string|"'port'"
op|':'
number|'1112'
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'replication_port'"
op|':'
number|'6001'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'objects_sdb'
op|','
name|'objects_1_sdb'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'_write_disk_data'
op|'('
string|"'sdb'"
op|')'
newline|'\n'
name|'objects_sdc'
op|','
name|'objects_1_sdc'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'_write_disk_data'
op|'('
string|"'sdc'"
op|')'
newline|'\n'
name|'objects_sdd'
op|','
name|'objects_1_sdd'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'_write_disk_data'
op|'('
string|"'sdd'"
op|')'
newline|'\n'
name|'_create_test_rings'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
name|'devs'
op|')'
newline|'\n'
nl|'\n'
name|'jobs'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'jobs'
op|')'
op|']'
op|','
name|'mock_shuffle'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
name|'jobs_to_delete'
op|'='
op|'['
name|'j'
name|'for'
name|'j'
name|'in'
name|'jobs'
name|'if'
name|'j'
op|'['
string|"'delete'"
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'jobs_to_delete'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'1'"
op|','
string|"'2'"
op|','
comment|'# policy 0; 1 not on sda, 2 not on sdb'
nl|'\n'
string|"'1'"
op|','
string|"'2'"
op|','
comment|'# policy 1; 1 not on sda, 2 not on sdb'
nl|'\n'
op|']'
op|','
op|'['
name|'j'
op|'['
string|"'partition'"
op|']'
name|'for'
name|'j'
name|'in'
name|'jobs_to_delete'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'jobs_by_pol_part_dev'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
comment|'# There should be no jobs with a device not in just sda & sdb'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'job'
op|'['
string|"'device'"
op|']'
name|'in'
op|'('
string|"'sda'"
op|','
string|"'sdb'"
op|')'
op|')'
newline|'\n'
name|'jobs_by_pol_part_dev'
op|'['
nl|'\n'
name|'str'
op|'('
name|'int'
op|'('
name|'job'
op|'['
string|"'policy'"
op|']'
op|')'
op|')'
op|'+'
name|'job'
op|'['
string|"'partition'"
op|']'
op|'+'
name|'job'
op|'['
string|"'device'"
op|']'
nl|'\n'
op|']'
op|'='
name|'job'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'00sda'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'00sdb'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'0'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'01sda'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'01sdb'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'02sda'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'02sdb'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'2'
op|','
number|'3'
op|','
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'03sda'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'3'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'03sdb'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'3'
op|','
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'10sda'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'10sdb'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'0'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'11sda'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'11sdb'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'12sda'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'12sdb'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'2'
op|','
number|'3'
op|','
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'13sda'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'3'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'13sdb'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'3'
op|','
number|'0'
op|']'
op|')'
newline|'\n'
name|'for'
name|'part'
name|'in'
op|'['
string|"'00'"
op|','
string|"'01'"
op|','
string|"'02'"
op|','
string|"'03'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jobs_by_pol_part_dev'
op|'['
name|'part'
op|'+'
string|"'sda'"
op|']'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'part'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jobs_by_pol_part_dev'
op|'['
name|'part'
op|'+'
string|"'sdb'"
op|']'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'objects_sdb'
op|','
name|'part'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'part'
name|'in'
op|'['
string|"'10'"
op|','
string|"'11'"
op|','
string|"'12'"
op|','
string|"'13'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jobs_by_pol_part_dev'
op|'['
name|'part'
op|'+'
string|"'sda'"
op|']'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects_1'
op|','
name|'part'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jobs_by_pol_part_dev'
op|'['
name|'part'
op|'+'
string|"'sdb'"
op|']'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'objects_1_sdb'
op|','
name|'part'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.random.shuffle'"
op|','
name|'side_effect'
op|'='
name|'lambda'
name|'l'
op|':'
name|'l'
op|')'
newline|'\n'
DECL|member|test_collect_jobs_multi_disk_diff_ports_normal
name|'def'
name|'test_collect_jobs_multi_disk_diff_ports_normal'
op|'('
name|'self'
op|','
name|'mock_shuffle'
op|')'
op|':'
newline|'\n'
comment|'# Normally (servers_per_port=0), replication_ip AND replication_port'
nl|'\n'
comment|'# are used to determine local ring device entries.  Here we show that'
nl|'\n'
comment|'# with bind_ip=\'127.0.0.1\', bind_port=6000, only "sdc" is local.'
nl|'\n'
indent|'        '
name|'devs'
op|'='
op|'['
nl|'\n'
comment|'# Two disks on same IP/port'
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'1.1.1.1'"
op|','
string|"'port'"
op|':'
number|'1111'
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'127.0.0.0'"
op|','
string|"'replication_port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'device'"
op|':'
string|"'sdb'"
op|','
string|"'zone'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'1.1.1.1'"
op|','
string|"'port'"
op|':'
number|'1111'
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'127.0.0.0'"
op|','
string|"'replication_port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
comment|'# Two disks on same server, different ports'
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'device'"
op|':'
string|"'sdc'"
op|','
string|"'zone'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'2'
op|','
string|"'ip'"
op|':'
string|"'1.1.1.2'"
op|','
string|"'port'"
op|':'
number|'1112'
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'replication_port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
string|"'device'"
op|':'
string|"'sdd'"
op|','
string|"'zone'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'2'
op|','
string|"'ip'"
op|':'
string|"'1.1.1.2'"
op|','
string|"'port'"
op|':'
number|'1112'
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'replication_port'"
op|':'
number|'6001'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'objects_sdb'
op|','
name|'objects_1_sdb'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'_write_disk_data'
op|'('
string|"'sdb'"
op|')'
newline|'\n'
name|'objects_sdc'
op|','
name|'objects_1_sdc'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'_write_disk_data'
op|'('
string|"'sdc'"
op|')'
newline|'\n'
name|'objects_sdd'
op|','
name|'objects_1_sdd'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'_write_disk_data'
op|'('
string|"'sdd'"
op|')'
newline|'\n'
name|'_create_test_rings'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
name|'devs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conf'
op|'['
string|"'bind_ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'self'
op|'.'
name|'_create_replicator'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'jobs'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'jobs'
op|')'
op|']'
op|','
name|'mock_shuffle'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
name|'jobs_to_delete'
op|'='
op|'['
name|'j'
name|'for'
name|'j'
name|'in'
name|'jobs'
name|'if'
name|'j'
op|'['
string|"'delete'"
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'jobs_to_delete'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'3'"
op|','
comment|'# policy 0; 3 not on sdc'
nl|'\n'
string|"'3'"
op|','
comment|'# policy 1; 3 not on sdc'
nl|'\n'
op|']'
op|','
op|'['
name|'j'
op|'['
string|"'partition'"
op|']'
name|'for'
name|'j'
name|'in'
name|'jobs_to_delete'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'jobs_by_pol_part_dev'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
comment|'# There should be no jobs with a device not sdc'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'job'
op|'['
string|"'device'"
op|']'
op|','
string|"'sdc'"
op|')'
newline|'\n'
name|'jobs_by_pol_part_dev'
op|'['
nl|'\n'
name|'str'
op|'('
name|'int'
op|'('
name|'job'
op|'['
string|"'policy'"
op|']'
op|')'
op|')'
op|'+'
name|'job'
op|'['
string|"'partition'"
op|']'
op|'+'
name|'job'
op|'['
string|"'device'"
op|']'
nl|'\n'
op|']'
op|'='
name|'job'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'00sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'0'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'01sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'02sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'3'
op|','
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'03sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'3'
op|','
number|'0'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'10sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'0'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'11sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'12sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'3'
op|','
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'13sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'3'
op|','
number|'0'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'for'
name|'part'
name|'in'
op|'['
string|"'00'"
op|','
string|"'01'"
op|','
string|"'02'"
op|','
string|"'03'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jobs_by_pol_part_dev'
op|'['
name|'part'
op|'+'
string|"'sdc'"
op|']'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'objects_sdc'
op|','
name|'part'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'part'
name|'in'
op|'['
string|"'10'"
op|','
string|"'11'"
op|','
string|"'12'"
op|','
string|"'13'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jobs_by_pol_part_dev'
op|'['
name|'part'
op|'+'
string|"'sdc'"
op|']'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'objects_1_sdc'
op|','
name|'part'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.random.shuffle'"
op|','
name|'side_effect'
op|'='
name|'lambda'
name|'l'
op|':'
name|'l'
op|')'
newline|'\n'
DECL|member|test_collect_jobs_multi_disk_servers_per_port
name|'def'
name|'test_collect_jobs_multi_disk_servers_per_port'
op|'('
name|'self'
op|','
name|'mock_shuffle'
op|')'
op|':'
newline|'\n'
comment|'# Normally (servers_per_port=0), replication_ip AND replication_port'
nl|'\n'
comment|'# are used to determine local ring device entries.  Here we show that'
nl|'\n'
comment|"# with servers_per_port > 0 and bind_ip='127.0.0.1', bind_port=6000,"
nl|'\n'
comment|'# then both "sdc" and "sdd" are local.'
nl|'\n'
indent|'        '
name|'devs'
op|'='
op|'['
nl|'\n'
comment|'# Two disks on same IP/port'
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'1.1.1.1'"
op|','
string|"'port'"
op|':'
number|'1111'
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'127.0.0.0'"
op|','
string|"'replication_port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'device'"
op|':'
string|"'sdb'"
op|','
string|"'zone'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'1.1.1.1'"
op|','
string|"'port'"
op|':'
number|'1111'
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'127.0.0.0'"
op|','
string|"'replication_port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
comment|'# Two disks on same server, different ports'
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'device'"
op|':'
string|"'sdc'"
op|','
string|"'zone'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'2'
op|','
string|"'ip'"
op|':'
string|"'1.1.1.2'"
op|','
string|"'port'"
op|':'
number|'1112'
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'replication_port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
string|"'device'"
op|':'
string|"'sdd'"
op|','
string|"'zone'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'2'
op|','
string|"'ip'"
op|':'
string|"'1.1.1.2'"
op|','
string|"'port'"
op|':'
number|'1112'
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'replication_port'"
op|':'
number|'6001'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'objects_sdb'
op|','
name|'objects_1_sdb'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'_write_disk_data'
op|'('
string|"'sdb'"
op|')'
newline|'\n'
name|'objects_sdc'
op|','
name|'objects_1_sdc'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'_write_disk_data'
op|'('
string|"'sdc'"
op|')'
newline|'\n'
name|'objects_sdd'
op|','
name|'objects_1_sdd'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'_write_disk_data'
op|'('
string|"'sdd'"
op|')'
newline|'\n'
name|'_create_test_rings'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
name|'devs'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conf'
op|'['
string|"'bind_ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'['
string|"'servers_per_port'"
op|']'
op|'='
number|'1'
comment|'# diff port ok'
newline|'\n'
name|'self'
op|'.'
name|'_create_replicator'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'jobs'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
name|'jobs'
op|')'
op|']'
op|','
name|'mock_shuffle'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
name|'jobs_to_delete'
op|'='
op|'['
name|'j'
name|'for'
name|'j'
name|'in'
name|'jobs'
name|'if'
name|'j'
op|'['
string|"'delete'"
op|']'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'jobs_to_delete'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'3'"
op|','
string|"'0'"
op|','
comment|'# policy 0; 3 not on sdc, 0 not on sdd'
nl|'\n'
string|"'3'"
op|','
string|"'0'"
op|','
comment|'# policy 1; 3 not on sdc, 0 not on sdd'
nl|'\n'
op|']'
op|','
op|'['
name|'j'
op|'['
string|"'partition'"
op|']'
name|'for'
name|'j'
name|'in'
name|'jobs_to_delete'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'jobs_by_pol_part_dev'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
comment|'# There should be no jobs with a device not in just sdc & sdd'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'job'
op|'['
string|"'device'"
op|']'
name|'in'
op|'('
string|"'sdc'"
op|','
string|"'sdd'"
op|')'
op|')'
newline|'\n'
name|'jobs_by_pol_part_dev'
op|'['
nl|'\n'
name|'str'
op|'('
name|'int'
op|'('
name|'job'
op|'['
string|"'policy'"
op|']'
op|')'
op|')'
op|'+'
name|'job'
op|'['
string|"'partition'"
op|']'
op|'+'
name|'job'
op|'['
string|"'device'"
op|']'
nl|'\n'
op|']'
op|'='
name|'job'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'00sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'0'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'00sdd'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'0'
op|','
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'01sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'01sdd'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'02sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'3'
op|','
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'02sdd'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'2'
op|','
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'03sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'3'
op|','
number|'0'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'03sdd'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'0'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'10sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'0'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'10sdd'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'0'
op|','
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'11sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'11sdd'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'12sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'3'
op|','
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'12sdd'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'2'
op|','
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'13sdc'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'3'
op|','
number|'0'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'jobs_by_pol_part_dev'
op|'['
string|"'13sdd'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
nl|'\n'
op|'['
number|'0'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'for'
name|'part'
name|'in'
op|'['
string|"'00'"
op|','
string|"'01'"
op|','
string|"'02'"
op|','
string|"'03'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jobs_by_pol_part_dev'
op|'['
name|'part'
op|'+'
string|"'sdc'"
op|']'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'objects_sdc'
op|','
name|'part'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jobs_by_pol_part_dev'
op|'['
name|'part'
op|'+'
string|"'sdd'"
op|']'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'objects_sdd'
op|','
name|'part'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'part'
name|'in'
op|'['
string|"'10'"
op|','
string|"'11'"
op|','
string|"'12'"
op|','
string|"'13'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jobs_by_pol_part_dev'
op|'['
name|'part'
op|'+'
string|"'sdc'"
op|']'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'objects_1_sdc'
op|','
name|'part'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'jobs_by_pol_part_dev'
op|'['
name|'part'
op|'+'
string|"'sdd'"
op|']'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'objects_1_sdd'
op|','
name|'part'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_collect_jobs_handoffs_first
dedent|''
dedent|''
name|'def'
name|'test_collect_jobs_handoffs_first'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'handoffs_first'
op|'='
name|'True'
newline|'\n'
name|'jobs'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'jobs'
op|'['
number|'0'
op|']'
op|'['
string|"'delete'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1'"
op|','
name|'jobs'
op|'['
number|'0'
op|']'
op|'['
string|"'partition'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_handoffs_first_mode_will_process_all_jobs_after_handoffs
dedent|''
name|'def'
name|'test_handoffs_first_mode_will_process_all_jobs_after_handoffs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# make a object in the handoff & primary partition'
nl|'\n'
indent|'        '
name|'expected_suffix_paths'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
comment|'# primary'
nl|'\n'
indent|'            '
name|'ts'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts'
op|')'
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'0'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
name|'policy'
op|')'
newline|'\n'
name|'with'
name|'df'
op|'.'
name|'create'
op|'('
op|')'
name|'as'
name|'w'
op|':'
newline|'\n'
indent|'                '
name|'w'
op|'.'
name|'write'
op|'('
string|"'asdf'"
op|')'
newline|'\n'
name|'w'
op|'.'
name|'put'
op|'('
op|'{'
string|"'X-Timestamp'"
op|':'
name|'ts'
op|'.'
name|'internal'
op|'}'
op|')'
newline|'\n'
name|'w'
op|'.'
name|'commit'
op|'('
name|'ts'
op|')'
newline|'\n'
dedent|''
name|'expected_suffix_paths'
op|'.'
name|'append'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
op|')'
newline|'\n'
comment|'# handoff'
nl|'\n'
name|'ts'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts'
op|')'
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
name|'policy'
op|')'
newline|'\n'
name|'with'
name|'df'
op|'.'
name|'create'
op|'('
op|')'
name|'as'
name|'w'
op|':'
newline|'\n'
indent|'                '
name|'w'
op|'.'
name|'write'
op|'('
string|"'asdf'"
op|')'
newline|'\n'
name|'w'
op|'.'
name|'put'
op|'('
op|'{'
string|"'X-Timestamp'"
op|':'
name|'ts'
op|'.'
name|'internal'
op|'}'
op|')'
newline|'\n'
name|'w'
op|'.'
name|'commit'
op|'('
name|'ts'
op|')'
newline|'\n'
dedent|''
name|'expected_suffix_paths'
op|'.'
name|'append'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# rsync will be called for all parts we created objects in'
nl|'\n'
dedent|''
name|'process_arg_checker'
op|'='
op|'['
nl|'\n'
comment|'# (return_code, stdout, <each in capture rsync args>)'
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
op|']'
op|')'
op|','
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
op|']'
op|')'
op|','
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
op|']'
op|')'
op|','
comment|'# handoff job "first" policy'
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
op|']'
op|')'
op|','
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
op|']'
op|')'
op|','
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
op|']'
op|')'
op|','
comment|'# handoff job "second" policy'
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
op|']'
op|')'
op|','
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
op|']'
op|')'
op|','
comment|'# update job "first" policy'
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
op|']'
op|')'
op|','
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
op|']'
op|')'
op|','
comment|'# update job "second" policy'
nl|'\n'
op|']'
newline|'\n'
comment|'# each handoff partition node gets one replicate request for after'
nl|'\n'
comment|'# rsync (2 * 3), each primary partition with objects gets two'
nl|'\n'
comment|'# replicate requests (pre-flight and post sync) to each of each'
nl|'\n'
comment|'# partners (2 * 2 * 2), the 2 remaining empty parts (2 & 3) get a'
nl|'\n'
comment|'# pre-flight replicate request per node for each storage policy'
nl|'\n'
comment|'# (2 * 2 * 2) - so 6 + 8 + 8 == 22'
nl|'\n'
name|'replicate_responses'
op|'='
op|'['
number|'200'
op|']'
op|'*'
number|'22'
newline|'\n'
name|'stub_body'
op|'='
name|'pickle'
op|'.'
name|'dumps'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
name|'as'
name|'rsync_log'
op|','
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.whataremyips'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'_ips'
op|')'
op|','
name|'mocked_http_conn'
op|'('
op|'*'
name|'replicate_responses'
op|','
nl|'\n'
name|'body'
op|'='
name|'stub_body'
op|')'
name|'as'
name|'conn_log'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'handoffs_first'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
comment|'# all jobs processed!'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'job_count'
op|','
nl|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replication_count'
op|')'
newline|'\n'
nl|'\n'
comment|"# sanity, all the handoffs suffixes we filled in were rsync'd"
nl|'\n'
name|'found_rsync_suffix_paths'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'subprocess_info'
name|'in'
name|'rsync_log'
op|':'
newline|'\n'
indent|'            '
name|'local_path'
op|','
name|'remote_path'
op|'='
name|'subprocess_info'
op|'['
string|"'rsync_args'"
op|']'
op|'['
op|'-'
number|'2'
op|':'
op|']'
newline|'\n'
name|'found_rsync_suffix_paths'
op|'.'
name|'add'
op|'('
name|'local_path'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
name|'expected_suffix_paths'
op|')'
op|','
name|'found_rsync_suffix_paths'
op|')'
newline|'\n'
comment|'# sanity, all nodes got replicated'
nl|'\n'
name|'found_replicate_calls'
op|'='
name|'defaultdict'
op|'('
name|'int'
op|')'
newline|'\n'
name|'for'
name|'req'
name|'in'
name|'conn_log'
op|'.'
name|'requests'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'['
string|"'method'"
op|']'
op|','
string|"'REPLICATE'"
op|')'
newline|'\n'
name|'found_replicate_key'
op|'='
op|'('
nl|'\n'
name|'int'
op|'('
name|'req'
op|'['
string|"'headers'"
op|']'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|')'
op|','
nl|'\n'
name|'req'
op|'['
string|"'path'"
op|']'
op|')'
newline|'\n'
name|'found_replicate_calls'
op|'['
name|'found_replicate_key'
op|']'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'expected_replicate_calls'
op|'='
op|'{'
nl|'\n'
op|'('
number|'0'
op|','
string|"'/sda/1/a83'"
op|')'
op|':'
number|'3'
op|','
nl|'\n'
op|'('
number|'1'
op|','
string|"'/sda/1/a83'"
op|')'
op|':'
number|'3'
op|','
nl|'\n'
op|'('
number|'0'
op|','
string|"'/sda/0'"
op|')'
op|':'
number|'2'
op|','
nl|'\n'
op|'('
number|'0'
op|','
string|"'/sda/0/a83'"
op|')'
op|':'
number|'2'
op|','
nl|'\n'
op|'('
number|'1'
op|','
string|"'/sda/0'"
op|')'
op|':'
number|'2'
op|','
nl|'\n'
op|'('
number|'1'
op|','
string|"'/sda/0/a83'"
op|')'
op|':'
number|'2'
op|','
nl|'\n'
op|'('
number|'0'
op|','
string|"'/sda/2'"
op|')'
op|':'
number|'2'
op|','
nl|'\n'
op|'('
number|'1'
op|','
string|"'/sda/2'"
op|')'
op|':'
number|'2'
op|','
nl|'\n'
op|'('
number|'0'
op|','
string|"'/sda/3'"
op|')'
op|':'
number|'2'
op|','
nl|'\n'
op|'('
number|'1'
op|','
string|"'/sda/3'"
op|')'
op|':'
number|'2'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'dict'
op|'('
name|'found_replicate_calls'
op|')'
op|','
nl|'\n'
name|'expected_replicate_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_replicator_skips_bogus_partition_dirs
dedent|''
name|'def'
name|'test_replicator_skips_bogus_partition_dirs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# A directory in the wrong place shouldn't crash the replicator"
nl|'\n'
indent|'        '
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'objects'
op|')'
newline|'\n'
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'objects_1'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'self'
op|'.'
name|'objects'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'self'
op|'.'
name|'objects_1'
op|')'
newline|'\n'
nl|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|'"burrito"'
op|')'
op|')'
newline|'\n'
name|'jobs'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'jobs'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_replicator_removes_zbf
dedent|''
name|'def'
name|'test_replicator_removes_zbf'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# After running xfs_repair, a partition directory could become a'
nl|'\n'
comment|'# zero-byte file. If this happens, the replicator should clean it'
nl|'\n'
comment|'# up, log something, and move on to the next partition.'
nl|'\n'
nl|'\n'
comment|'# Surprise! Partition dir 1 is actually a zero-byte file.'
nl|'\n'
indent|'        '
name|'pol_0_part_1_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'rmtree'
op|'('
name|'pol_0_part_1_path'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'pol_0_part_1_path'
op|','
string|"'w'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'isfile'
op|'('
name|'pol_0_part_1_path'
op|')'
op|')'
comment|'# sanity check'
newline|'\n'
nl|'\n'
comment|"# Policy 1's partition dir 1 is also a zero-byte file."
nl|'\n'
name|'pol_1_part_1_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects_1'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'rmtree'
op|'('
name|'pol_1_part_1_path'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'pol_1_part_1_path'
op|','
string|"'w'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'isfile'
op|'('
name|'pol_1_part_1_path'
op|')'
op|')'
comment|'# sanity check'
newline|'\n'
nl|'\n'
comment|"# Don't delete things in collect_jobs(); all the stat() calls would"
nl|'\n'
comment|'# make replicator startup really slow.'
nl|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'pol_0_part_1_path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'pol_1_part_1_path'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# After a replication pass, the files should be gone'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'pol_0_part_1_path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'pol_1_part_1_path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'sorted'
op|'('
name|'self'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'warning'"
op|')'
op|')'
op|','
op|'['
nl|'\n'
op|'('
string|"'Removing partition directory which was a file: %s'"
nl|'\n'
op|'%'
name|'pol_1_part_1_path'
op|')'
op|','
nl|'\n'
op|'('
string|"'Removing partition directory which was a file: %s'"
nl|'\n'
op|'%'
name|'pol_0_part_1_path'
op|')'
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition
dedent|''
name|'def'
name|'test_delete_partition'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'load_object_ring'
op|'('
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
number|'1'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_default_sync_method
dedent|''
dedent|''
name|'def'
name|'test_delete_partition_default_sync_method'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'conf'
op|'.'
name|'pop'
op|'('
string|"'sync_method'"
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'load_object_ring'
op|'('
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
number|'1'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_ssync_single_region
dedent|''
dedent|''
name|'def'
name|'test_delete_partition_ssync_single_region'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'devs'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.0'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.2'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'4'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.3'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'4'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.4'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'5'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'6'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'fe80::202:b3ff:fe1e:8329'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'6'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'7'
op|','
string|"'region'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'2001:0db8:85a3:0000:0000:8a2e:0370:7334'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'_create_test_rings'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
name|'devs'
op|'='
name|'devs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'['
string|"'sync_method'"
op|']'
op|'='
string|"'ssync'"
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'='
name|'object_replicator'
op|'.'
name|'ObjectReplicator'
op|'('
name|'self'
op|'.'
name|'conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'logger'
op|'='
name|'debug_logger'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_zero_stats'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'ts'
op|'='
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
name|'ts'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'whole_path_from'
op|'='
name|'storage_directory'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
number|'1'
op|','
name|'ohash'
op|')'
newline|'\n'
name|'suffix_dir_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'whole_path_from'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_fake_ssync
name|'def'
name|'_fake_ssync'
op|'('
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
op|','
op|'{'
name|'ohash'
op|':'
name|'ts'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'sync_method'
op|'='
name|'_fake_ssync'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'whole_path_from'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'suffix_dir_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_1
dedent|''
dedent|''
name|'def'
name|'test_delete_partition_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects_1'
op|','
string|"'1'"
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects_1'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'load_object_ring'
op|'('
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
number|'1'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects-1/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_with_failures
dedent|''
dedent|''
name|'def'
name|'test_delete_partition_with_failures'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'load_object_ring'
op|'('
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
number|'1'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
op|','
name|'node'
name|'in'
name|'enumerate'
op|'('
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'i'
op|'=='
number|'0'
op|':'
newline|'\n'
comment|'# force one of the rsync calls to fail'
nl|'\n'
indent|'                    '
name|'ret_code'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'ret_code'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
name|'ret_code'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
comment|'# The path should still exist'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_with_handoff_delete
dedent|''
dedent|''
name|'def'
name|'test_delete_partition_with_handoff_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'handoff_delete'
op|'='
number|'2'
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'load_object_ring'
op|'('
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
number|'1'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
op|','
name|'node'
name|'in'
name|'enumerate'
op|'('
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'i'
op|'=='
number|'0'
op|':'
newline|'\n'
comment|'# force one of the rsync calls to fail'
nl|'\n'
indent|'                    '
name|'ret_code'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'ret_code'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
name|'ret_code'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_with_handoff_delete_failures
dedent|''
dedent|''
name|'def'
name|'test_delete_partition_with_handoff_delete_failures'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'handoff_delete'
op|'='
number|'2'
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'load_object_ring'
op|'('
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
number|'1'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
op|','
name|'node'
name|'in'
name|'enumerate'
op|'('
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'i'
name|'in'
op|'('
number|'0'
op|','
number|'1'
op|')'
op|':'
newline|'\n'
comment|'# force two of the rsync calls to fail'
nl|'\n'
indent|'                    '
name|'ret_code'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'ret_code'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
name|'ret_code'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
comment|'# The file should still exist'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_with_handoff_delete_fail_in_other_region
dedent|''
dedent|''
name|'def'
name|'test_delete_partition_with_handoff_delete_fail_in_other_region'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'load_object_ring'
op|'('
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
number|'1'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'node'
op|'['
string|"'region'"
op|']'
op|'!='
number|'1'
op|':'
newline|'\n'
comment|'#  the rsync calls for other region to fail'
nl|'\n'
indent|'                    '
name|'ret_code'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'ret_code'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
name|'ret_code'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
comment|'# The file should still exist'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_override_params
dedent|''
dedent|''
name|'def'
name|'test_delete_partition_override_params'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'0'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
name|'override_devices'
op|'='
op|'['
string|"'sdb'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
name|'override_partitions'
op|'='
op|'['
string|"'9'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
name|'override_devices'
op|'='
op|'['
string|"'sda'"
op|']'
op|','
nl|'\n'
name|'override_partitions'
op|'='
op|'['
string|"'1'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_policy_override_params
dedent|''
name|'def'
name|'test_delete_policy_override_params'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'df0'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'99'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'df1'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'99'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df0'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df1'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
nl|'\n'
name|'pol0_part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'99'"
op|')'
newline|'\n'
name|'pol1_part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects_1'
op|','
string|"'99'"
op|')'
newline|'\n'
nl|'\n'
comment|'# sanity checks'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'pol0_part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'pol1_part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# a bogus policy index doesn't bother the replicator any more than a"
nl|'\n'
comment|'# bogus device or partition does'
nl|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'run_once'
op|'('
name|'policies'
op|'='
string|"'1,2,5'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'pol1_part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'pol0_part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_ssync
dedent|''
name|'def'
name|'test_delete_partition_ssync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'ts'
op|'='
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
name|'ts'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'0'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'whole_path_from'
op|'='
name|'storage_directory'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
number|'1'
op|','
name|'ohash'
op|')'
newline|'\n'
name|'suffix_dir_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'whole_path_from'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'call_nums'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'['
string|"'sync_method'"
op|']'
op|'='
string|"'ssync'"
newline|'\n'
nl|'\n'
DECL|function|_fake_ssync
name|'def'
name|'_fake_ssync'
op|'('
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'success'
op|'='
name|'True'
newline|'\n'
name|'ret_val'
op|'='
op|'{'
name|'ohash'
op|':'
name|'ts'
op|'}'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'call_nums'
op|'=='
number|'2'
op|':'
newline|'\n'
comment|'# ssync should return (True, []) only when the second'
nl|'\n'
comment|'# candidate node has not get the replica yet.'
nl|'\n'
indent|'                    '
name|'success'
op|'='
name|'False'
newline|'\n'
name|'ret_val'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'call_nums'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'success'
op|','
name|'ret_val'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'sync_method'
op|'='
name|'_fake_ssync'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
comment|'# The file should still exist'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'whole_path_from'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'suffix_dir_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
comment|'# The file should be deleted at the second replicate call'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'whole_path_from'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'suffix_dir_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
comment|'# The partition should be deleted at the third replicate call'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'whole_path_from'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'suffix_dir_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'call_nums'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_ssync_with_sync_failure
dedent|''
dedent|''
name|'def'
name|'test_delete_partition_ssync_with_sync_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'ts'
op|'='
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
name|'ts'
op|'+'
string|"'.data'"
op|')'
op|','
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'0'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'whole_path_from'
op|'='
name|'storage_directory'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
number|'1'
op|','
name|'ohash'
op|')'
newline|'\n'
name|'suffix_dir_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'whole_path_from'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'call_nums'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'['
string|"'sync_method'"
op|']'
op|'='
string|"'ssync'"
newline|'\n'
nl|'\n'
DECL|function|_fake_ssync
name|'def'
name|'_fake_ssync'
op|'('
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|','
op|'**'
name|'kwags'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'success'
op|'='
name|'False'
newline|'\n'
name|'ret_val'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'call_nums'
op|'=='
number|'2'
op|':'
newline|'\n'
comment|'# ssync should return (True, []) only when the second'
nl|'\n'
comment|'# candidate node has not get the replica yet.'
nl|'\n'
indent|'                    '
name|'success'
op|'='
name|'True'
newline|'\n'
name|'ret_val'
op|'='
op|'{'
name|'ohash'
op|':'
name|'ts'
op|'}'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'call_nums'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'success'
op|','
name|'ret_val'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'sync_method'
op|'='
name|'_fake_ssync'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
comment|'# The file should still exist'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'whole_path_from'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'suffix_dir_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
comment|'# The file should still exist'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'whole_path_from'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'suffix_dir_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
comment|'# The file should still exist'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'whole_path_from'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'suffix_dir_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'call_nums'
newline|'\n'
nl|'\n'
DECL|member|test_delete_objs_ssync_only_when_in_sync
dedent|''
dedent|''
name|'def'
name|'test_delete_objs_ssync_only_when_in_sync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'test-replicator'"
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'ts'
op|'='
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
name|'ts'
op|'+'
string|"'.data'"
op|')'
op|','
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'0'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'whole_path_from'
op|'='
name|'storage_directory'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
number|'1'
op|','
name|'ohash'
op|')'
newline|'\n'
name|'suffix_dir_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'whole_path_from'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'call_nums'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'['
string|"'sync_method'"
op|']'
op|'='
string|"'ssync'"
newline|'\n'
nl|'\n'
name|'in_sync_objs'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|_fake_ssync
name|'def'
name|'_fake_ssync'
op|'('
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|','
name|'remote_check_objs'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'call_nums'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'remote_check_objs'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# sync job'
nl|'\n'
indent|'                    '
name|'ret_val'
op|'='
op|'{'
name|'ohash'
op|':'
name|'ts'
op|'}'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'ret_val'
op|'='
name|'in_sync_objs'
newline|'\n'
dedent|''
name|'return'
name|'True'
op|','
name|'ret_val'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'sync_method'
op|'='
name|'_fake_ssync'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'self'
op|'.'
name|'call_nums'
op|')'
newline|'\n'
comment|'# The file should still exist'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'whole_path_from'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'suffix_dir_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'del'
name|'self'
op|'.'
name|'call_nums'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_ssync_with_cleanup_failure
dedent|''
dedent|''
name|'def'
name|'test_delete_partition_ssync_with_cleanup_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'logger'
op|'='
name|'mock_logger'
op|'='
name|'debug_logger'
op|'('
string|"'test-replicator'"
op|')'
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'ts'
op|'='
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
name|'ts'
op|'+'
string|"'.data'"
op|')'
op|','
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'0'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'whole_path_from'
op|'='
name|'storage_directory'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
number|'1'
op|','
name|'ohash'
op|')'
newline|'\n'
name|'suffix_dir_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'whole_path_from'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'call_nums'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'['
string|"'sync_method'"
op|']'
op|'='
string|"'ssync'"
newline|'\n'
nl|'\n'
DECL|function|_fake_ssync
name|'def'
name|'_fake_ssync'
op|'('
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'success'
op|'='
name|'True'
newline|'\n'
name|'ret_val'
op|'='
op|'{'
name|'ohash'
op|':'
name|'ts'
op|'}'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'call_nums'
op|'=='
number|'2'
op|':'
newline|'\n'
comment|'# ssync should return (True, []) only when the second'
nl|'\n'
comment|'# candidate node has not get the replica yet.'
nl|'\n'
indent|'                    '
name|'success'
op|'='
name|'False'
newline|'\n'
name|'ret_val'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'call_nums'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'success'
op|','
name|'ret_val'
newline|'\n'
nl|'\n'
dedent|''
name|'rmdir_func'
op|'='
name|'os'
op|'.'
name|'rmdir'
newline|'\n'
nl|'\n'
DECL|function|raise_exception_rmdir
name|'def'
name|'raise_exception_rmdir'
op|'('
name|'exception_class'
op|','
name|'error_no'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'instance'
op|'='
name|'exception_class'
op|'('
op|')'
newline|'\n'
name|'instance'
op|'.'
name|'errno'
op|'='
name|'error_no'
newline|'\n'
nl|'\n'
DECL|function|func
name|'def'
name|'func'
op|'('
name|'directory'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'directory'
op|'=='
name|'suffix_dir_path'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
name|'instance'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'rmdir_func'
op|'('
name|'directory'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'func'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'sync_method'
op|'='
name|'_fake_ssync'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
comment|'# The file should still exist'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'whole_path_from'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'suffix_dir_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Fail with ENOENT'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.rmdir'"
op|','
nl|'\n'
name|'raise_exception_rmdir'
op|'('
name|'OSError'
op|','
name|'ENOENT'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'whole_path_from'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'suffix_dir_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Fail with ENOTEMPTY'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.rmdir'"
op|','
nl|'\n'
name|'raise_exception_rmdir'
op|'('
name|'OSError'
op|','
name|'ENOTEMPTY'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'whole_path_from'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'suffix_dir_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Fail with ENOTDIR'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.rmdir'"
op|','
nl|'\n'
name|'raise_exception_rmdir'
op|'('
name|'OSError'
op|','
name|'ENOTDIR'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'mock_logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'whole_path_from'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'suffix_dir_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Finally we can cleanup everything'
nl|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'whole_path_from'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'suffix_dir_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'whole_path_from'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'suffix_dir_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_once_recover_from_failure
dedent|''
dedent|''
name|'def'
name|'test_run_once_recover_from_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'dict'
op|'('
name|'swift_dir'
op|'='
name|'self'
op|'.'
name|'testdir'
op|','
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
name|'bind_ip'
op|'='
name|'_ips'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'mount_check'
op|'='
string|"'false'"
op|','
name|'timeout'
op|'='
string|"'300'"
op|','
name|'stats_interval'
op|'='
string|"'1'"
op|')'
newline|'\n'
name|'replicator'
op|'='
name|'object_replicator'
op|'.'
name|'ObjectReplicator'
op|'('
name|'conf'
op|')'
newline|'\n'
name|'was_connector'
op|'='
name|'object_replicator'
op|'.'
name|'http_connect'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'object_replicator'
op|'.'
name|'http_connect'
op|'='
name|'mock_http_connect'
op|'('
number|'200'
op|')'
newline|'\n'
comment|"# Write some files into '1' and run replicate- they should be moved"
nl|'\n'
comment|'# to the other partitions and then node should get deleted.'
nl|'\n'
name|'cur_part'
op|'='
string|"'1'"
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
name|'cur_part'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'cur_part'
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'replicator'
op|'.'
name|'load_object_ring'
op|'('
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'int'
op|'('
name|'cur_part'
op|')'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
nl|'\n'
name|'cur_part'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
nl|'\n'
string|"'1'"
op|','
name|'data_dir'
op|','
name|'ohash'
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'replicator'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'process_errors'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'result'
name|'in'
op|'['
op|'('
string|"'0'"
op|','
name|'True'
op|')'
op|','
op|'('
string|"'1'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
string|"'2'"
op|','
name|'True'
op|')'
op|','
op|'('
string|"'3'"
op|','
name|'True'
op|')'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
nl|'\n'
name|'i'
op|','
name|'diskfile'
op|'.'
name|'HASH_FILE'
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'F_OK'
op|')'
op|','
name|'result'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'object_replicator'
op|'.'
name|'http_connect'
op|'='
name|'was_connector'
newline|'\n'
nl|'\n'
DECL|member|test_run_once_recover_from_timeout
dedent|''
dedent|''
name|'def'
name|'test_run_once_recover_from_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'dict'
op|'('
name|'swift_dir'
op|'='
name|'self'
op|'.'
name|'testdir'
op|','
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
name|'bind_ips'
op|'='
name|'_ips'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'mount_check'
op|'='
string|"'false'"
op|','
name|'timeout'
op|'='
string|"'300'"
op|','
name|'stats_interval'
op|'='
string|"'1'"
op|')'
newline|'\n'
name|'replicator'
op|'='
name|'object_replicator'
op|'.'
name|'ObjectReplicator'
op|'('
name|'conf'
op|')'
newline|'\n'
name|'was_connector'
op|'='
name|'object_replicator'
op|'.'
name|'http_connect'
newline|'\n'
name|'was_get_hashes'
op|'='
name|'object_replicator'
op|'.'
name|'DiskFileManager'
op|'.'
name|'_get_hashes'
newline|'\n'
name|'was_execute'
op|'='
name|'tpool'
op|'.'
name|'execute'
newline|'\n'
name|'self'
op|'.'
name|'get_hash_count'
op|'='
number|'0'
newline|'\n'
name|'try'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_get_hashes
indent|'            '
name|'def'
name|'fake_get_hashes'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'get_hash_count'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'get_hash_count'
op|'=='
number|'3'
op|':'
newline|'\n'
comment|'# raise timeout on last call to get hashes'
nl|'\n'
indent|'                    '
name|'raise'
name|'Timeout'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
number|'2'
op|','
op|'{'
string|"'abc'"
op|':'
string|"'def'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_exc
dedent|''
name|'def'
name|'fake_exc'
op|'('
name|'tester'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
string|"'Error syncing partition'"
name|'in'
name|'args'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'tester'
op|'.'
name|'i_failed'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'i_failed'
op|'='
name|'False'
newline|'\n'
name|'object_replicator'
op|'.'
name|'http_connect'
op|'='
name|'mock_http_connect'
op|'('
number|'200'
op|')'
newline|'\n'
name|'object_replicator'
op|'.'
name|'DiskFileManager'
op|'.'
name|'_get_hashes'
op|'='
name|'fake_get_hashes'
newline|'\n'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'='
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'fake_exc'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
comment|"# Write some files into '1' and run replicate- they should be moved"
nl|'\n'
comment|'# to the other partitions and then node should get deleted.'
nl|'\n'
name|'cur_part'
op|'='
string|"'1'"
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
string|"'sda'"
op|','
name|'cur_part'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'cur_part'
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'ring'
op|'='
name|'replicator'
op|'.'
name|'load_object_ring'
op|'('
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'int'
op|'('
name|'cur_part'
op|')'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
nl|'\n'
name|'cur_part'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
nl|'\n'
string|"'1'"
op|','
name|'data_dir'
op|','
name|'ohash'
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'replicator'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'process_errors'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'i_failed'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'object_replicator'
op|'.'
name|'http_connect'
op|'='
name|'was_connector'
newline|'\n'
name|'object_replicator'
op|'.'
name|'DiskFileManager'
op|'.'
name|'_get_hashes'
op|'='
name|'was_get_hashes'
newline|'\n'
name|'tpool'
op|'.'
name|'execute'
op|'='
name|'was_execute'
newline|'\n'
nl|'\n'
DECL|member|test_run
dedent|''
dedent|''
name|'def'
name|'test_run'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'_mock_process'
op|'('
op|'['
op|'('
number|'0'
op|','
string|"''"
op|')'
op|']'
op|'*'
number|'100'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_withlog
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_run_withlog'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'_mock_process'
op|'('
op|'['
op|'('
number|'0'
op|','
string|'"stuff in log"'
op|')'
op|']'
op|'*'
number|'100'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_sync_just_calls_sync_method
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_sync_just_calls_sync_method'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'sync_method'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'sync'
op|'('
string|"'node'"
op|','
string|"'job'"
op|','
string|"'suffixes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'sync_method'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'node'"
op|','
string|"'job'"
op|','
string|"'suffixes'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.tpool_reraise'"
op|','
name|'autospec'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
name|'autospec'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_update
name|'def'
name|'test_update'
op|'('
name|'self'
op|','
name|'mock_http'
op|','
name|'mock_tpool_reraise'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|set_default
indent|'        '
name|'def'
name|'set_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_count'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_sync'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_hash'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replication_count'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'partition_times'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'user-agent'"
op|':'
string|"'object-replicator %s'"
op|'%'
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'logger'
op|'='
name|'mock_logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_tpool_reraise'
op|'.'
name|'return_value'
op|'='
op|'('
number|'0'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'all_jobs'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
name|'jobs'
op|'='
op|'['
name|'job'
name|'for'
name|'job'
name|'in'
name|'all_jobs'
name|'if'
name|'not'
name|'job'
op|'['
string|"'delete'"
op|']'
op|']'
newline|'\n'
nl|'\n'
name|'mock_http'
op|'.'
name|'return_value'
op|'='
name|'answer'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'answer'
op|'.'
name|'getresponse'
op|'.'
name|'return_value'
op|'='
name|'resp'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
comment|'# Check uncorrect http_connect with status 507 and'
nl|'\n'
comment|'# count of attempts and call args'
nl|'\n'
name|'resp'
op|'.'
name|'status'
op|'='
number|'507'
newline|'\n'
name|'error'
op|'='
string|"'%(ip)s/%(device)s responded as unmounted'"
newline|'\n'
name|'expect'
op|'='
string|"'Error syncing partition'"
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
indent|'            '
name|'set_default'
op|'('
name|'self'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'job'
op|'['
string|"'policy'"
op|']'
op|'.'
name|'object_ring'
newline|'\n'
name|'self'
op|'.'
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|'='
name|'int'
op|'('
name|'job'
op|'['
string|"'policy'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'update'
op|'('
name|'job'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'error'
name|'in'
name|'mock_logger'
op|'.'
name|'error'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'expect'
name|'in'
name|'mock_logger'
op|'.'
name|'exception'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'partition_times'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_http'
op|'.'
name|'call_count'
op|','
name|'len'
op|'('
name|'ring'
op|'.'
name|'_devs'
op|')'
op|'-'
number|'1'
op|')'
newline|'\n'
name|'reqs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'job'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'reqs'
op|'.'
name|'append'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
name|'job'
op|'['
string|"'partition'"
op|']'
op|','
string|"'REPLICATE'"
op|','
string|"''"
op|','
nl|'\n'
name|'headers'
op|'='
name|'self'
op|'.'
name|'headers'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'job'
op|'['
string|"'partition'"
op|']'
op|'=='
string|"'0'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_hash'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'mock_http'
op|'.'
name|'assert_has_calls'
op|'('
name|'reqs'
op|','
name|'any_order'
op|'='
name|'True'
op|')'
newline|'\n'
name|'mock_http'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'mock_logger'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Check uncorrect http_connect with status 400 != HTTP_OK'
nl|'\n'
dedent|''
name|'resp'
op|'.'
name|'status'
op|'='
number|'400'
newline|'\n'
name|'error'
op|'='
string|"'Invalid response %(resp)s from %(ip)s'"
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
indent|'            '
name|'set_default'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'update'
op|'('
name|'job'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'error'
name|'in'
name|'mock_logger'
op|'.'
name|'error'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'partition_times'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'mock_logger'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Check successful http_connection and exception with'
nl|'\n'
comment|'# uncorrect pickle.loads(resp.read())'
nl|'\n'
dedent|''
name|'resp'
op|'.'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'expect'
op|'='
string|"'Error syncing with node:'"
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
indent|'            '
name|'set_default'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'update'
op|'('
name|'job'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'expect'
name|'in'
name|'mock_logger'
op|'.'
name|'exception'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'partition_times'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'mock_logger'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Check successful http_connection and correct'
nl|'\n'
comment|'# pickle.loads(resp.read()) for non local node'
nl|'\n'
dedent|''
name|'resp'
op|'.'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'local_job'
op|'='
name|'None'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'.'
name|'return_value'
op|'='
name|'pickle'
op|'.'
name|'dumps'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
indent|'            '
name|'set_default'
op|'('
name|'self'
op|')'
newline|'\n'
comment|'# limit local job to policy 0 for simplicity'
nl|'\n'
name|'if'
name|'job'
op|'['
string|"'partition'"
op|']'
op|'=='
string|"'0'"
name|'and'
name|'int'
op|'('
name|'job'
op|'['
string|"'policy'"
op|']'
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'local_job'
op|'='
name|'job'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'update'
op|'('
name|'job'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_logger'
op|'.'
name|'exception'
op|'.'
name|'call_count'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'mock_logger'
op|'.'
name|'error'
op|'.'
name|'call_count'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'partition_times'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_hash'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_sync'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_count'
op|','
number|'0'
op|')'
newline|'\n'
name|'mock_logger'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Check successful http_connect and sync for local node'
nl|'\n'
dedent|''
name|'mock_tpool_reraise'
op|'.'
name|'return_value'
op|'='
op|'('
number|'1'
op|','
op|'{'
string|"'a83'"
op|':'
string|"'ba47fd314242ec8c'"
nl|'\n'
string|"'7efb91f5d57336e4'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'.'
name|'return_value'
op|'='
name|'pickle'
op|'.'
name|'dumps'
op|'('
op|'{'
string|"'a83'"
op|':'
string|"'c130a2c17ed45102a'"
nl|'\n'
string|"'ada0f4eee69494ff'"
op|'}'
op|')'
newline|'\n'
name|'set_default'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'sync'
op|'='
name|'fake_func'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'return_value'
op|'='
op|'('
name|'True'
op|','
op|'['
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'update'
op|'('
name|'local_job'
op|')'
newline|'\n'
name|'reqs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'local_job'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'reqs'
op|'.'
name|'append'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
name|'node'
op|','
name|'local_job'
op|','
op|'['
string|"'a83'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'fake_func'
op|'.'
name|'assert_has_calls'
op|'('
name|'reqs'
op|','
name|'any_order'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_func'
op|'.'
name|'call_count'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replication_count'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_sync'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_hash'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_count'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
comment|'# Efficient Replication Case'
nl|'\n'
name|'set_default'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'sync'
op|'='
name|'fake_func'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'return_value'
op|'='
op|'('
name|'True'
op|','
op|'['
op|']'
op|')'
op|')'
newline|'\n'
name|'all_jobs'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
name|'job'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'tmp'
name|'in'
name|'all_jobs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'tmp'
op|'['
string|"'partition'"
op|']'
op|'=='
string|"'3'"
op|':'
newline|'\n'
indent|'                '
name|'job'
op|'='
name|'tmp'
newline|'\n'
name|'break'
newline|'\n'
comment|'# The candidate nodes to replicate (i.e. dev1 and dev3)'
nl|'\n'
comment|'# belong to another region'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'update'
op|'('
name|'job'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'fake_func'
op|'.'
name|'call_count'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replication_count'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_sync'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_hash'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_count'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
name|'mock_http'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'mock_logger'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# test for replication params on policy 0 only'
nl|'\n'
name|'repl_job'
op|'='
name|'local_job'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'repl_job'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'node'
op|'['
string|"'replication_ip'"
op|']'
op|'='
string|"'127.0.0.11'"
newline|'\n'
name|'node'
op|'['
string|"'replication_port'"
op|']'
op|'='
string|"'6011'"
newline|'\n'
dedent|''
name|'set_default'
op|'('
name|'self'
op|')'
newline|'\n'
comment|'# with only one set of headers make sure we specify index 0 here'
nl|'\n'
comment|'# as otherwise it may be different from earlier tests'
nl|'\n'
name|'self'
op|'.'
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'update'
op|'('
name|'repl_job'
op|')'
newline|'\n'
name|'reqs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'repl_job'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'reqs'
op|'.'
name|'append'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
name|'node'
op|'['
string|"'replication_ip'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'replication_port'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
name|'repl_job'
op|'['
string|"'partition'"
op|']'
op|','
string|"'REPLICATE'"
op|','
nl|'\n'
string|"''"
op|','
name|'headers'
op|'='
name|'self'
op|'.'
name|'headers'
op|')'
op|')'
newline|'\n'
name|'reqs'
op|'.'
name|'append'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
name|'node'
op|'['
string|"'replication_ip'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'replication_port'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
name|'repl_job'
op|'['
string|"'partition'"
op|']'
op|','
string|"'REPLICATE'"
op|','
nl|'\n'
string|"'/a83'"
op|','
name|'headers'
op|'='
name|'self'
op|'.'
name|'headers'
op|')'
op|')'
newline|'\n'
dedent|''
name|'mock_http'
op|'.'
name|'assert_has_calls'
op|'('
name|'reqs'
op|','
name|'any_order'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rsync_compress_different_region
dedent|''
name|'def'
name|'test_rsync_compress_different_region'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'sync_method'
op|','
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'rsync'
op|')'
newline|'\n'
name|'jobs'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
name|'_m_rsync'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'return_value'
op|'='
number|'0'
op|')'
newline|'\n'
name|'_m_os_path_exists'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'replicator'
op|','
string|"'_rsync'"
op|','
name|'_m_rsync'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'_m_os_path_exists'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'region'"
name|'in'
name|'job'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'job'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'                        '
name|'for'
name|'rsync_compress'
name|'in'
op|'('
name|'True'
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'rsync_compress'
op|'='
name|'rsync_compress'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'sync'
op|'('
name|'node'
op|','
name|'job'
op|','
nl|'\n'
op|'['
string|"'fake_suffix'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'ret'
op|')'
newline|'\n'
name|'if'
name|'node'
op|'['
string|"'region'"
op|']'
op|'!='
name|'job'
op|'['
string|"'region'"
op|']'
op|':'
newline|'\n'
indent|'                                '
name|'if'
name|'rsync_compress'
op|':'
newline|'\n'
comment|'# --compress arg should be passed to rsync'
nl|'\n'
comment|'# binary only when rsync_compress option is'
nl|'\n'
comment|'# enabled AND destination node is in a'
nl|'\n'
comment|'# different region'
nl|'\n'
indent|'                                    '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'--compress'"
name|'in'
nl|'\n'
name|'_m_rsync'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                                    '
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'--compress'"
name|'in'
nl|'\n'
name|'_m_rsync'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                                '
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'--compress'"
name|'in'
nl|'\n'
name|'_m_rsync'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'_m_os_path_exists'
op|'.'
name|'call_args_list'
op|'['
op|'-'
number|'1'
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'job'
op|'['
string|"'path'"
op|']'
op|','
string|"'fake_suffix'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'_m_os_path_exists'
op|'.'
name|'call_args_list'
op|'['
op|'-'
number|'2'
op|']'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'job'
op|'['
string|"'path'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
