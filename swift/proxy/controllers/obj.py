begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
comment|'# NOTE: swift_conn'
nl|'\n'
comment|"# You'll see swift_conn passed around a few places in this file. This is the"
nl|'\n'
comment|'# source bufferedhttp connection of whatever it is attached to.'
nl|'\n'
comment|'#   It is used when early termination of reading from the connection should'
nl|'\n'
comment|"# happen, such as when a range request is satisfied but there's still more the"
nl|'\n'
comment|'# source connection would like to send. To prevent having to read all the data'
nl|'\n'
comment|'# that could be left, the source connection can be .close() and then reads'
nl|'\n'
comment|'# commence to empty out any buffers.'
nl|'\n'
comment|'#   These shenanigans are to ensure all related objects can be garbage'
nl|'\n'
comment|"# collected. We've seen objects hang around forever otherwise."
nl|'\n'
nl|'\n'
name|'import'
name|'itertools'
newline|'\n'
name|'import'
name|'mimetypes'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'math'
newline|'\n'
name|'from'
name|'swift'
name|'import'
name|'gettext_'
name|'as'
name|'_'
newline|'\n'
name|'from'
name|'urllib'
name|'import'
name|'unquote'
op|','
name|'quote'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'GreenPile'
newline|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'queue'
name|'import'
name|'Queue'
newline|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'timeout'
name|'import'
name|'Timeout'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
op|'('
nl|'\n'
name|'clean_content_type'
op|','
name|'config_true_value'
op|','
name|'ContextPool'
op|','
name|'csv_append'
op|','
nl|'\n'
name|'GreenAsyncPile'
op|','
name|'GreenthreadSafeIterator'
op|','
name|'json'
op|','
name|'Timestamp'
op|','
nl|'\n'
name|'normalize_delete_at_timestamp'
op|','
name|'public'
op|','
name|'quorum_size'
op|','
name|'get_expirer_container'
op|')'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'bufferedhttp'
name|'import'
name|'http_connect'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'constraints'
name|'import'
name|'check_metadata'
op|','
name|'check_object_creation'
op|','
name|'check_copy_from_header'
op|','
name|'check_destination_header'
op|','
name|'check_account_format'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'constraints'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'ChunkReadTimeout'
op|','
name|'ChunkWriteTimeout'
op|','
name|'ConnectionTimeout'
op|','
name|'ListingIterNotFound'
op|','
name|'ListingIterNotAuthorized'
op|','
name|'ListingIterError'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'http'
name|'import'
op|'('
nl|'\n'
name|'is_success'
op|','
name|'is_client_error'
op|','
name|'is_server_error'
op|','
name|'HTTP_CONTINUE'
op|','
name|'HTTP_CREATED'
op|','
nl|'\n'
name|'HTTP_MULTIPLE_CHOICES'
op|','
name|'HTTP_NOT_FOUND'
op|','
name|'HTTP_INTERNAL_SERVER_ERROR'
op|','
nl|'\n'
name|'HTTP_SERVICE_UNAVAILABLE'
op|','
name|'HTTP_INSUFFICIENT_STORAGE'
op|','
nl|'\n'
name|'HTTP_PRECONDITION_FAILED'
op|','
name|'HTTP_CONFLICT'
op|')'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'POLICIES'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'base'
name|'import'
name|'Controller'
op|','
name|'delay_denial'
op|','
name|'cors_validation'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'HTTPAccepted'
op|','
name|'HTTPBadRequest'
op|','
name|'HTTPNotFound'
op|','
name|'HTTPPreconditionFailed'
op|','
name|'HTTPRequestEntityTooLarge'
op|','
name|'HTTPRequestTimeout'
op|','
name|'HTTPServerError'
op|','
name|'HTTPServiceUnavailable'
op|','
name|'Request'
op|','
name|'HTTPClientDisconnect'
op|','
name|'HeaderKeyDict'
op|','
name|'HTTPException'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'request_helpers'
name|'import'
name|'is_sys_or_user_meta'
op|','
name|'is_sys_meta'
op|','
name|'remove_items'
op|','
name|'copy_header_subset'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|copy_headers_into
name|'def'
name|'copy_headers_into'
op|'('
name|'from_r'
op|','
name|'to_r'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Will copy desired headers from from_r to to_r\n    :params from_r: a swob Request or Response\n    :params to_r: a swob Request or Response\n    """'
newline|'\n'
name|'pass_headers'
op|'='
op|'['
string|"'x-delete-at'"
op|']'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'from_r'
op|'.'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'is_sys_or_user_meta'
op|'('
string|"'object'"
op|','
name|'k'
op|')'
name|'or'
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
name|'pass_headers'
op|':'
newline|'\n'
indent|'            '
name|'to_r'
op|'.'
name|'headers'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|check_content_type
dedent|''
dedent|''
dedent|''
name|'def'
name|'check_content_type'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'req'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'swift.content_type_overridden'"
op|')'
name|'and'
string|"';'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'content-type'"
op|','
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'param'
name|'in'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|'.'
name|'split'
op|'('
string|"';'"
op|')'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'param'
op|'.'
name|'lstrip'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'swift_'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPBadRequest'
op|'('
string|'"Invalid Content-Type, "'
nl|'\n'
string|'"swift_* is not a valid parameter name."'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ObjectController
dedent|''
name|'class'
name|'ObjectController'
op|'('
name|'Controller'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""WSGI controller for object requests."""'
newline|'\n'
DECL|variable|server_type
name|'server_type'
op|'='
string|"'Object'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'account_name'
op|','
name|'container_name'
op|','
name|'object_name'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Controller'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'account_name'
op|'='
name|'unquote'
op|'('
name|'account_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'unquote'
op|'('
name|'container_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'unquote'
op|'('
name|'object_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_listing_iter
dedent|''
name|'def'
name|'_listing_iter'
op|'('
name|'self'
op|','
name|'lcontainer'
op|','
name|'lprefix'
op|','
name|'env'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'page'
name|'in'
name|'self'
op|'.'
name|'_listing_pages_iter'
op|'('
name|'lcontainer'
op|','
name|'lprefix'
op|','
name|'env'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'item'
name|'in'
name|'page'
op|':'
newline|'\n'
indent|'                '
name|'yield'
name|'item'
newline|'\n'
nl|'\n'
DECL|member|_listing_pages_iter
dedent|''
dedent|''
dedent|''
name|'def'
name|'_listing_pages_iter'
op|'('
name|'self'
op|','
name|'lcontainer'
op|','
name|'lprefix'
op|','
name|'env'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lpartition'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_part'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'lcontainer'
op|')'
newline|'\n'
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'lreq'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'i will be overridden by env'"
op|','
name|'environ'
op|'='
name|'env'
op|')'
newline|'\n'
comment|"# Don't quote PATH_INFO, by WSGI spec"
nl|'\n'
name|'lreq'
op|'.'
name|'environ'
op|'['
string|"'PATH_INFO'"
op|']'
op|'='
string|"'/v1/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'account_name'
op|','
name|'lcontainer'
op|')'
newline|'\n'
name|'lreq'
op|'.'
name|'environ'
op|'['
string|"'REQUEST_METHOD'"
op|']'
op|'='
string|"'GET'"
newline|'\n'
name|'lreq'
op|'.'
name|'environ'
op|'['
string|"'QUERY_STRING'"
op|']'
op|'='
string|"'format=json&prefix=%s&marker=%s'"
op|'%'
op|'('
name|'quote'
op|'('
name|'lprefix'
op|')'
op|','
nl|'\n'
name|'quote'
op|'('
name|'marker'
op|')'
op|')'
newline|'\n'
name|'lresp'
op|'='
name|'self'
op|'.'
name|'GETorHEAD_base'
op|'('
nl|'\n'
name|'lreq'
op|','
name|'_'
op|'('
string|"'Container'"
op|')'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|','
name|'lpartition'
op|','
nl|'\n'
name|'lreq'
op|'.'
name|'swift_entity_path'
op|')'
newline|'\n'
name|'if'
string|"'swift.authorize'"
name|'in'
name|'env'
op|':'
newline|'\n'
indent|'                '
name|'lreq'
op|'.'
name|'acl'
op|'='
name|'lresp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-container-read'"
op|')'
newline|'\n'
name|'aresp'
op|'='
name|'env'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'lreq'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'ListingIterNotAuthorized'
op|'('
name|'aresp'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'lresp'
op|'.'
name|'status_int'
op|'=='
name|'HTTP_NOT_FOUND'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ListingIterNotFound'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'is_success'
op|'('
name|'lresp'
op|'.'
name|'status_int'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ListingIterError'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'lresp'
op|'.'
name|'body'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'sublisting'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'lresp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'sublisting'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'marker'
op|'='
name|'sublisting'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'name'"
op|']'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
name|'yield'
name|'sublisting'
newline|'\n'
nl|'\n'
DECL|member|iter_nodes_local_first
dedent|''
dedent|''
name|'def'
name|'iter_nodes_local_first'
op|'('
name|'self'
op|','
name|'ring'
op|','
name|'partition'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Yields nodes for a ring partition.\n\n        If the \'write_affinity\' setting is non-empty, then this will yield N\n        local nodes (as defined by the write_affinity setting) first, then the\n        rest of the nodes as normal. It is a re-ordering of the nodes such\n        that the local ones come first; no node is omitted. The effect is\n        that the request will be serviced by local object servers first, but\n        nonlocal ones will be employed if not enough local ones are available.\n\n        :param ring: ring to get nodes from\n        :param partition: ring partition to yield nodes for\n        """'
newline|'\n'
nl|'\n'
name|'is_local'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'write_affinity_is_local_fn'
newline|'\n'
name|'if'
name|'is_local'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'ring'
op|','
name|'partition'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'primary_nodes'
op|'='
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'partition'
op|')'
newline|'\n'
name|'num_locals'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'write_affinity_node_count'
op|'('
name|'len'
op|'('
name|'primary_nodes'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'all_nodes'
op|'='
name|'itertools'
op|'.'
name|'chain'
op|'('
name|'primary_nodes'
op|','
nl|'\n'
name|'ring'
op|'.'
name|'get_more_nodes'
op|'('
name|'partition'
op|')'
op|')'
newline|'\n'
name|'first_n_local_nodes'
op|'='
name|'list'
op|'('
name|'itertools'
op|'.'
name|'islice'
op|'('
nl|'\n'
name|'itertools'
op|'.'
name|'ifilter'
op|'('
name|'is_local'
op|','
name|'all_nodes'
op|')'
op|','
name|'num_locals'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# refresh it; it moved when we computed first_n_local_nodes'
nl|'\n'
name|'all_nodes'
op|'='
name|'itertools'
op|'.'
name|'chain'
op|'('
name|'primary_nodes'
op|','
nl|'\n'
name|'ring'
op|'.'
name|'get_more_nodes'
op|'('
name|'partition'
op|')'
op|')'
newline|'\n'
name|'local_first_node_iter'
op|'='
name|'itertools'
op|'.'
name|'chain'
op|'('
nl|'\n'
name|'first_n_local_nodes'
op|','
nl|'\n'
name|'itertools'
op|'.'
name|'ifilter'
op|'('
name|'lambda'
name|'node'
op|':'
name|'node'
name|'not'
name|'in'
name|'first_n_local_nodes'
op|','
nl|'\n'
name|'all_nodes'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
nl|'\n'
name|'ring'
op|','
name|'partition'
op|','
name|'node_iter'
op|'='
name|'local_first_node_iter'
op|')'
newline|'\n'
nl|'\n'
DECL|member|GETorHEAD
dedent|''
name|'def'
name|'GETorHEAD'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handle HTTP GET or HEAD requests."""'
newline|'\n'
name|'container_info'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'req'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'acl'
op|'='
name|'container_info'
op|'['
string|"'read_acl'"
op|']'
newline|'\n'
comment|'# pass the policy index to storage nodes via req header'
nl|'\n'
name|'policy_index'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
nl|'\n'
name|'container_info'
op|'['
string|"'storage_policy'"
op|']'
op|')'
newline|'\n'
name|'obj_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'policy_index'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|'='
name|'policy_index'
newline|'\n'
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'aresp'
newline|'\n'
dedent|''
dedent|''
name|'partition'
op|'='
name|'obj_ring'
op|'.'
name|'get_part'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'GETorHEAD_base'
op|'('
nl|'\n'
name|'req'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
name|'obj_ring'
op|','
name|'partition'
op|','
nl|'\n'
name|'req'
op|'.'
name|'swift_entity_path'
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|"';'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'content-type'"
op|','
string|"''"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'.'
name|'content_type'
op|'='
name|'clean_content_type'
op|'('
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'cors_validation'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|GET
name|'def'
name|'GET'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handler for HTTP GET requests."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'GETorHEAD'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'cors_validation'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|HEAD
name|'def'
name|'HEAD'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handler for HTTP HEAD requests."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'GETorHEAD'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'cors_validation'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|POST
name|'def'
name|'POST'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP POST request handler."""'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_post_as_copy'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'path_info'
op|'='
string|"'/v1/%s/%s/%s'"
op|'%'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Copy-From'"
op|']'
op|'='
name|'quote'
op|'('
string|"'/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|')'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Fresh-Metadata'"
op|']'
op|'='
string|"'true'"
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift_versioned_copy'"
op|']'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'QUERY_STRING'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'req'
op|'.'
name|'environ'
op|'['
string|"'QUERY_STRING'"
op|']'
op|'+='
string|"'&multipart-manifest=get'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'req'
op|'.'
name|'environ'
op|'['
string|"'QUERY_STRING'"
op|']'
op|'='
string|"'multipart-manifest=get'"
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'self'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
comment|"# Older editions returned 202 Accepted on object POSTs, so we'll"
nl|'\n'
comment|'# convert any 201 Created responses to that for compatibility with'
nl|'\n'
comment|'# picky clients.'
nl|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'!='
name|'HTTP_CREATED'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'resp'
newline|'\n'
dedent|''
name|'return'
name|'HTTPAccepted'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'error_response'
op|'='
name|'check_metadata'
op|'('
name|'req'
op|','
string|"'object'"
op|')'
newline|'\n'
name|'if'
name|'error_response'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'error_response'
newline|'\n'
dedent|''
name|'container_info'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'req'
op|')'
newline|'\n'
name|'container_partition'
op|'='
name|'container_info'
op|'['
string|"'partition'"
op|']'
newline|'\n'
name|'containers'
op|'='
name|'container_info'
op|'['
string|"'nodes'"
op|']'
newline|'\n'
name|'req'
op|'.'
name|'acl'
op|'='
name|'container_info'
op|'['
string|"'write_acl'"
op|']'
newline|'\n'
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'                '
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'aresp'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'containers'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|','
name|'delete_at_container'
op|','
name|'delete_at_part'
op|','
name|'delete_at_nodes'
op|'='
name|'self'
op|'.'
name|'_config_obj_expiration'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
comment|'# pass the policy index to storage nodes via req header'
nl|'\n'
name|'policy_index'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
nl|'\n'
name|'container_info'
op|'['
string|"'storage_policy'"
op|']'
op|')'
newline|'\n'
name|'obj_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'policy_index'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|'='
name|'policy_index'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'obj_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'Timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'.'
name|'internal'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
name|'self'
op|'.'
name|'_backend_requests'
op|'('
nl|'\n'
name|'req'
op|','
name|'len'
op|'('
name|'nodes'
op|')'
op|','
name|'container_partition'
op|','
name|'containers'
op|','
nl|'\n'
name|'delete_at_container'
op|','
name|'delete_at_part'
op|','
name|'delete_at_nodes'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_requests'
op|'('
name|'req'
op|','
name|'obj_ring'
op|','
name|'partition'
op|','
nl|'\n'
string|"'POST'"
op|','
name|'req'
op|'.'
name|'swift_entity_path'
op|','
name|'headers'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
DECL|member|_backend_requests
dedent|''
dedent|''
name|'def'
name|'_backend_requests'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'n_outgoing'
op|','
nl|'\n'
name|'container_partition'
op|','
name|'containers'
op|','
nl|'\n'
name|'delete_at_container'
op|'='
name|'None'
op|','
name|'delete_at_partition'
op|'='
name|'None'
op|','
nl|'\n'
name|'delete_at_nodes'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
op|'['
name|'self'
op|'.'
name|'generate_request_headers'
op|'('
name|'req'
op|','
name|'additional'
op|'='
name|'req'
op|'.'
name|'headers'
op|')'
nl|'\n'
name|'for'
name|'_junk'
name|'in'
name|'range'
op|'('
name|'n_outgoing'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
op|','
name|'container'
name|'in'
name|'enumerate'
op|'('
name|'containers'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'='
name|'i'
op|'%'
name|'len'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'['
string|"'X-Container-Partition'"
op|']'
op|'='
name|'container_partition'
newline|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'['
string|"'X-Container-Host'"
op|']'
op|'='
name|'csv_append'
op|'('
nl|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
string|"'X-Container-Host'"
op|')'
op|','
nl|'\n'
string|"'%(ip)s:%(port)s'"
op|'%'
name|'container'
op|')'
newline|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'['
string|"'X-Container-Device'"
op|']'
op|'='
name|'csv_append'
op|'('
nl|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
string|"'X-Container-Device'"
op|')'
op|','
nl|'\n'
name|'container'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'i'
op|','
name|'node'
name|'in'
name|'enumerate'
op|'('
name|'delete_at_nodes'
name|'or'
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'='
name|'i'
op|'%'
name|'len'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'['
string|"'X-Delete-At-Container'"
op|']'
op|'='
name|'delete_at_container'
newline|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'['
string|"'X-Delete-At-Partition'"
op|']'
op|'='
name|'delete_at_partition'
newline|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'['
string|"'X-Delete-At-Host'"
op|']'
op|'='
name|'csv_append'
op|'('
nl|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At-Host'"
op|')'
op|','
nl|'\n'
string|"'%(ip)s:%(port)s'"
op|'%'
name|'node'
op|')'
newline|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'['
string|"'X-Delete-At-Device'"
op|']'
op|'='
name|'csv_append'
op|'('
nl|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At-Device'"
op|')'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'headers'
newline|'\n'
nl|'\n'
DECL|member|_send_file
dedent|''
name|'def'
name|'_send_file'
op|'('
name|'self'
op|','
name|'conn'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Method for a file PUT coro"""'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'chunk'
op|'='
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'get'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'conn'
op|'.'
name|'failed'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'ChunkWriteTimeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'conn'
op|'.'
name|'send'
op|'('
name|'chunk'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'ChunkWriteTimeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'failed'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'exception_occurred'
op|'('
nl|'\n'
name|'conn'
op|'.'
name|'node'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Trying to write to %s'"
op|')'
op|'%'
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'task_done'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_connect_put_node
dedent|''
dedent|''
name|'def'
name|'_connect_put_node'
op|'('
name|'self'
op|','
name|'nodes'
op|','
name|'part'
op|','
name|'path'
op|','
name|'headers'
op|','
nl|'\n'
name|'logger_thread_locals'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Make a connection for a replicated object.\n\n        Connects to the first working node that it finds in node_iter\n        and sends over the request headers. Returns an HTTPConnection\n        object to handle the rest of the streaming.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'thread_locals'
op|'='
name|'logger_thread_locals'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'start_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'with'
name|'ConnectionTimeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'conn_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'='
name|'http_connect'
op|'('
nl|'\n'
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'part'
op|','
string|"'PUT'"
op|','
nl|'\n'
name|'path'
op|','
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'app'
op|'.'
name|'set_node_timing'
op|'('
name|'node'
op|','
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'start_time'
op|')'
newline|'\n'
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getexpect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status'
op|'=='
name|'HTTP_CONTINUE'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'resp'
op|'='
name|'None'
newline|'\n'
name|'conn'
op|'.'
name|'node'
op|'='
name|'node'
newline|'\n'
name|'return'
name|'conn'
newline|'\n'
dedent|''
name|'elif'
name|'is_success'
op|'('
name|'resp'
op|'.'
name|'status'
op|')'
name|'or'
name|'resp'
op|'.'
name|'status'
op|'=='
name|'HTTP_CONFLICT'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'resp'
op|'='
name|'resp'
newline|'\n'
name|'conn'
op|'.'
name|'node'
op|'='
name|'node'
newline|'\n'
name|'return'
name|'conn'
newline|'\n'
dedent|''
name|'elif'
name|'headers'
op|'['
string|"'If-None-Match'"
op|']'
name|'is'
name|'not'
name|'None'
name|'and'
name|'resp'
op|'.'
name|'status'
op|'=='
name|'HTTP_PRECONDITION_FAILED'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'resp'
op|'='
name|'resp'
newline|'\n'
name|'conn'
op|'.'
name|'node'
op|'='
name|'node'
newline|'\n'
name|'return'
name|'conn'
newline|'\n'
dedent|''
name|'elif'
name|'resp'
op|'.'
name|'status'
op|'=='
name|'HTTP_INSUFFICIENT_STORAGE'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_limit'
op|'('
name|'node'
op|','
name|'_'
op|'('
string|"'ERROR Insufficient Storage'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'is_server_error'
op|'('
name|'resp'
op|'.'
name|'status'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_occurred'
op|'('
nl|'\n'
name|'node'
op|','
nl|'\n'
name|'_'
op|'('
string|"'ERROR %(status)d Expect: 100-continue '"
nl|'\n'
string|"'From Object Server'"
op|')'
op|'%'
op|'{'
nl|'\n'
string|"'status'"
op|':'
name|'resp'
op|'.'
name|'status'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'app'
op|'.'
name|'exception_occurred'
op|'('
nl|'\n'
name|'node'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Expect: 100-continue on %s'"
op|')'
op|'%'
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_await_response
dedent|''
dedent|''
dedent|''
name|'def'
name|'_await_response'
op|'('
name|'self'
op|','
name|'conn'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'conn'
op|'.'
name|'resp'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'conn'
op|'.'
name|'resp'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_conn_response
dedent|''
dedent|''
dedent|''
name|'def'
name|'_get_conn_response'
op|'('
name|'self'
op|','
name|'conn'
op|','
name|'req'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'self'
op|'.'
name|'_await_response'
op|'('
name|'conn'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'return'
op|'('
name|'conn'
op|','
name|'resp'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'exception_occurred'
op|'('
nl|'\n'
name|'conn'
op|'.'
name|'node'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Trying to get final status of PUT to %s'"
op|')'
op|'%'
name|'req'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'('
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_put_responses
dedent|''
name|'def'
name|'_get_put_responses'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'conns'
op|','
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'statuses'
op|'='
op|'['
op|']'
newline|'\n'
name|'reasons'
op|'='
op|'['
op|']'
newline|'\n'
name|'bodies'
op|'='
op|'['
op|']'
newline|'\n'
name|'etags'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'pile'
op|'='
name|'GreenAsyncPile'
op|'('
name|'len'
op|'('
name|'conns'
op|')'
op|')'
newline|'\n'
name|'for'
name|'conn'
name|'in'
name|'conns'
op|':'
newline|'\n'
indent|'            '
name|'pile'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'_get_conn_response'
op|','
name|'conn'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_handle_response
dedent|''
name|'def'
name|'_handle_response'
op|'('
name|'conn'
op|','
name|'response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'statuses'
op|'.'
name|'append'
op|'('
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'reasons'
op|'.'
name|'append'
op|'('
name|'response'
op|'.'
name|'reason'
op|')'
newline|'\n'
name|'bodies'
op|'.'
name|'append'
op|'('
name|'response'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'=='
name|'HTTP_INSUFFICIENT_STORAGE'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_limit'
op|'('
name|'conn'
op|'.'
name|'node'
op|','
nl|'\n'
name|'_'
op|'('
string|"'ERROR Insufficient Storage'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'response'
op|'.'
name|'status'
op|'>='
name|'HTTP_INTERNAL_SERVER_ERROR'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_occurred'
op|'('
nl|'\n'
name|'conn'
op|'.'
name|'node'
op|','
nl|'\n'
name|'_'
op|'('
string|"'ERROR %(status)d %(body)s From Object Server '"
nl|'\n'
string|"'re: %(path)s'"
op|')'
op|'%'
nl|'\n'
op|'{'
string|"'status'"
op|':'
name|'response'
op|'.'
name|'status'
op|','
nl|'\n'
string|"'body'"
op|':'
name|'bodies'
op|'['
op|'-'
number|'1'
op|']'
op|'['
op|':'
number|'1024'
op|']'
op|','
string|"'path'"
op|':'
name|'req'
op|'.'
name|'path'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'is_success'
op|'('
name|'response'
op|'.'
name|'status'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'etags'
op|'.'
name|'add'
op|'('
name|'response'
op|'.'
name|'getheader'
op|'('
string|"'etag'"
op|')'
op|'.'
name|'strip'
op|'('
string|'\'"\''
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
op|'('
name|'conn'
op|','
name|'response'
op|')'
name|'in'
name|'pile'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'response'
op|':'
newline|'\n'
indent|'                '
name|'_handle_response'
op|'('
name|'conn'
op|','
name|'response'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'have_quorum'
op|'('
name|'statuses'
op|','
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
nl|'\n'
comment|'# give any pending requests *some* chance to finish'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'finished_quickly'
op|'='
name|'pile'
op|'.'
name|'waitall'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'post_quorum_timeout'
op|')'
newline|'\n'
name|'for'
op|'('
name|'conn'
op|','
name|'response'
op|')'
name|'in'
name|'finished_quickly'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'response'
op|':'
newline|'\n'
indent|'                '
name|'_handle_response'
op|'('
name|'conn'
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'while'
name|'len'
op|'('
name|'statuses'
op|')'
op|'<'
name|'len'
op|'('
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'statuses'
op|'.'
name|'append'
op|'('
name|'HTTP_SERVICE_UNAVAILABLE'
op|')'
newline|'\n'
name|'reasons'
op|'.'
name|'append'
op|'('
string|"''"
op|')'
newline|'\n'
name|'bodies'
op|'.'
name|'append'
op|'('
string|"''"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'statuses'
op|','
name|'reasons'
op|','
name|'bodies'
op|','
name|'etags'
newline|'\n'
nl|'\n'
DECL|member|_config_obj_expiration
dedent|''
name|'def'
name|'_config_obj_expiration'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'delete_at_container'
op|'='
name|'None'
newline|'\n'
name|'delete_at_part'
op|'='
name|'None'
newline|'\n'
name|'delete_at_nodes'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'constraints'
op|'.'
name|'check_delete_headers'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|"'x-delete-at'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'x_delete_at'
op|'='
name|'int'
op|'('
name|'normalize_delete_at_timestamp'
op|'('
nl|'\n'
name|'int'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-delete-at'"
op|']'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'environ'
op|'.'
name|'setdefault'
op|'('
string|"'swift.log_info'"
op|','
op|'['
op|']'
op|')'
op|'.'
name|'append'
op|'('
nl|'\n'
string|"'x-delete-at:%s'"
op|'%'
name|'x_delete_at'
op|')'
newline|'\n'
nl|'\n'
name|'delete_at_container'
op|'='
name|'get_expirer_container'
op|'('
nl|'\n'
name|'x_delete_at'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'expiring_objects_container_divisor'
op|','
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
nl|'\n'
name|'delete_at_part'
op|','
name|'delete_at_nodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'expiring_objects_account'
op|','
name|'delete_at_container'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'req'
op|','
name|'delete_at_container'
op|','
name|'delete_at_part'
op|','
name|'delete_at_nodes'
newline|'\n'
nl|'\n'
DECL|member|_handle_copy_request
dedent|''
name|'def'
name|'_handle_copy_request'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        This method handles copying objects based on values set in the headers\n        \'X-Copy-From\' and \'X-Copy-From-Account\'\n\n        This method was added as part of the refactoring of the PUT method and\n        the functionality is expected to be moved to middleware\n        """'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'swift.orig_req_method'"
op|','
name|'req'
op|'.'
name|'method'
op|')'
op|'!='
string|"'POST'"
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'environ'
op|'.'
name|'setdefault'
op|'('
string|"'swift.log_info'"
op|','
op|'['
op|']'
op|')'
op|'.'
name|'append'
op|'('
nl|'\n'
string|"'x-copy-from:%s'"
op|'%'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Copy-From'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'ver'
op|','
name|'acct'
op|','
name|'_rest'
op|'='
name|'req'
op|'.'
name|'split_path'
op|'('
number|'2'
op|','
number|'3'
op|','
name|'True'
op|')'
newline|'\n'
name|'src_account_name'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Copy-From-Account'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'src_account_name'
op|':'
newline|'\n'
indent|'            '
name|'src_account_name'
op|'='
name|'check_account_format'
op|'('
name|'req'
op|','
name|'src_account_name'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'src_account_name'
op|'='
name|'acct'
newline|'\n'
dedent|''
name|'src_container_name'
op|','
name|'src_obj_name'
op|'='
name|'check_copy_from_header'
op|'('
name|'req'
op|')'
newline|'\n'
name|'source_header'
op|'='
string|"'/%s/%s/%s/%s'"
op|'%'
op|'('
nl|'\n'
name|'ver'
op|','
name|'src_account_name'
op|','
name|'src_container_name'
op|','
name|'src_obj_name'
op|')'
newline|'\n'
name|'source_req'
op|'='
name|'req'
op|'.'
name|'copy_get'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# make sure the source request uses it's container_info"
nl|'\n'
name|'source_req'
op|'.'
name|'headers'
op|'.'
name|'pop'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
name|'None'
op|')'
newline|'\n'
name|'source_req'
op|'.'
name|'path_info'
op|'='
name|'source_header'
newline|'\n'
name|'source_req'
op|'.'
name|'headers'
op|'['
string|"'X-Newest'"
op|']'
op|'='
string|"'true'"
newline|'\n'
nl|'\n'
name|'orig_obj_name'
op|'='
name|'self'
op|'.'
name|'object_name'
newline|'\n'
name|'orig_container_name'
op|'='
name|'self'
op|'.'
name|'container_name'
newline|'\n'
name|'orig_account_name'
op|'='
name|'self'
op|'.'
name|'account_name'
newline|'\n'
name|'sink_req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
nl|'\n'
name|'environ'
op|'='
name|'req'
op|'.'
name|'environ'
op|','
name|'headers'
op|'='
name|'req'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'src_obj_name'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'src_container_name'
newline|'\n'
name|'self'
op|'.'
name|'account_name'
op|'='
name|'src_account_name'
newline|'\n'
name|'source_resp'
op|'='
name|'self'
op|'.'
name|'GET'
op|'('
name|'source_req'
op|')'
newline|'\n'
nl|'\n'
comment|'# This gives middlewares a way to change the source; for example,'
nl|'\n'
comment|'# this lets you COPY a SLO manifest and have the new object be the'
nl|'\n'
comment|'# concatenation of the segments (like what a GET request gives'
nl|'\n'
comment|'# the client), not a copy of the manifest file.'
nl|'\n'
name|'hook'
op|'='
name|'req'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'swift.copy_hook'"
op|','
nl|'\n'
op|'('
name|'lambda'
name|'source_req'
op|','
name|'source_resp'
op|','
name|'sink_req'
op|':'
name|'source_resp'
op|')'
op|')'
newline|'\n'
name|'source_resp'
op|'='
name|'hook'
op|'('
name|'source_req'
op|','
name|'source_resp'
op|','
name|'sink_req'
op|')'
newline|'\n'
nl|'\n'
comment|'# reset names'
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'orig_obj_name'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'orig_container_name'
newline|'\n'
name|'self'
op|'.'
name|'account_name'
op|'='
name|'orig_account_name'
newline|'\n'
nl|'\n'
name|'if'
name|'source_resp'
op|'.'
name|'status_int'
op|'>='
name|'HTTP_MULTIPLE_CHOICES'
op|':'
newline|'\n'
comment|"# this is a bit of ugly code, but I'm willing to live with it"
nl|'\n'
comment|'# until copy request handling moves to middleware'
nl|'\n'
indent|'            '
name|'return'
name|'source_resp'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'source_resp'
op|'.'
name|'content_length'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# This indicates a transfer-encoding: chunked source object,'
nl|'\n'
comment|'# which currently only happens because there are more than'
nl|'\n'
comment|'# CONTAINER_LISTING_LIMIT segments in a segmented object. In'
nl|'\n'
comment|"# this case, we're going to refuse to do the server-side copy."
nl|'\n'
indent|'            '
name|'raise'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'source_resp'
op|'.'
name|'content_length'
op|'>'
name|'constraints'
op|'.'
name|'MAX_FILE_SIZE'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'data_source'
op|'='
name|'iter'
op|'('
name|'source_resp'
op|'.'
name|'app_iter'
op|')'
newline|'\n'
name|'sink_req'
op|'.'
name|'content_length'
op|'='
name|'source_resp'
op|'.'
name|'content_length'
newline|'\n'
name|'sink_req'
op|'.'
name|'etag'
op|'='
name|'source_resp'
op|'.'
name|'etag'
newline|'\n'
nl|'\n'
comment|'# we no longer need the X-Copy-From header'
nl|'\n'
name|'del'
name|'sink_req'
op|'.'
name|'headers'
op|'['
string|"'X-Copy-From'"
op|']'
newline|'\n'
name|'if'
string|"'X-Copy-From-Account'"
name|'in'
name|'sink_req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'sink_req'
op|'.'
name|'headers'
op|'['
string|"'X-Copy-From-Account'"
op|']'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'req'
op|'.'
name|'content_type_manually_set'
op|':'
newline|'\n'
indent|'            '
name|'sink_req'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
name|'source_resp'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
newline|'\n'
dedent|''
name|'if'
name|'config_true_value'
op|'('
nl|'\n'
name|'sink_req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-fresh-metadata'"
op|','
string|"'false'"
op|')'
op|')'
op|':'
newline|'\n'
comment|'# post-as-copy: ignore new sysmeta, copy existing sysmeta'
nl|'\n'
indent|'            '
name|'condition'
op|'='
name|'lambda'
name|'k'
op|':'
name|'is_sys_meta'
op|'('
string|"'object'"
op|','
name|'k'
op|')'
newline|'\n'
name|'remove_items'
op|'('
name|'sink_req'
op|'.'
name|'headers'
op|','
name|'condition'
op|')'
newline|'\n'
name|'copy_header_subset'
op|'('
name|'source_resp'
op|','
name|'sink_req'
op|','
name|'condition'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# copy/update existing sysmeta and user meta'
nl|'\n'
indent|'            '
name|'copy_headers_into'
op|'('
name|'source_resp'
op|','
name|'sink_req'
op|')'
newline|'\n'
name|'copy_headers_into'
op|'('
name|'req'
op|','
name|'sink_req'
op|')'
newline|'\n'
nl|'\n'
comment|'# copy over x-static-large-object for POSTs and manifest copies'
nl|'\n'
dedent|''
name|'if'
string|"'X-Static-Large-Object'"
name|'in'
name|'source_resp'
op|'.'
name|'headers'
name|'and'
name|'req'
op|'.'
name|'params'
op|'.'
name|'get'
op|'('
string|"'multipart-manifest'"
op|')'
op|'=='
string|"'get'"
op|':'
newline|'\n'
indent|'            '
name|'sink_req'
op|'.'
name|'headers'
op|'['
string|"'X-Static-Large-Object'"
op|']'
op|'='
name|'source_resp'
op|'.'
name|'headers'
op|'['
string|"'X-Static-Large-Object'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'sink_req'
newline|'\n'
nl|'\n'
DECL|function|update_response
name|'def'
name|'update_response'
op|'('
name|'req'
op|','
name|'resp'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'acct'
op|','
name|'path'
op|'='
name|'source_resp'
op|'.'
name|'environ'
op|'['
string|"'PATH_INFO'"
op|']'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'3'
op|')'
op|'['
number|'2'
op|':'
number|'4'
op|']'
newline|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'X-Copied-From-Account'"
op|']'
op|'='
name|'quote'
op|'('
name|'acct'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'X-Copied-From'"
op|']'
op|'='
name|'quote'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
string|"'last-modified'"
name|'in'
name|'source_resp'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'X-Copied-From-Last-Modified'"
op|']'
op|'='
name|'source_resp'
op|'.'
name|'headers'
op|'['
string|"'last-modified'"
op|']'
newline|'\n'
dedent|''
name|'copy_headers_into'
op|'('
name|'req'
op|','
name|'resp'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
comment|"# this is a bit of ugly code, but I'm willing to live with it"
nl|'\n'
comment|'# until copy request handling moves to middleware'
nl|'\n'
dedent|''
name|'return'
name|'None'
op|','
name|'req'
op|','
name|'data_source'
op|','
name|'update_response'
newline|'\n'
nl|'\n'
DECL|member|_handle_object_versions
dedent|''
name|'def'
name|'_handle_object_versions'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        This method handles versionining of objects in containers that\n        have the feature enabled.\n\n        When a new PUT request is sent, the proxy checks for previous versions\n        of that same object name. If found, it is copied to a different\n        container and the new version is stored in its place.\n\n        This method was added as part of the PUT method refactoring and the\n        functionality is expected to be moved to middleware\n        """'
newline|'\n'
name|'container_info'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'req'
op|')'
newline|'\n'
name|'policy_index'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
nl|'\n'
name|'container_info'
op|'['
string|"'storage_policy'"
op|']'
op|')'
newline|'\n'
name|'obj_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'policy_index'
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'obj_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'object_versions'
op|'='
name|'container_info'
op|'['
string|"'versions'"
op|']'
newline|'\n'
nl|'\n'
comment|'# do a HEAD request for checking object versions'
nl|'\n'
name|'if'
name|'object_versions'
name|'and'
name|'not'
name|'req'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'swift_versioned_copy'"
op|')'
op|':'
newline|'\n'
comment|'# make sure proxy-server uses the right policy index'
nl|'\n'
indent|'            '
name|'_headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'policy_index'
op|','
nl|'\n'
string|"'X-Newest'"
op|':'
string|"'True'"
op|'}'
newline|'\n'
name|'hreq'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
name|'headers'
op|'='
name|'_headers'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'hresp'
op|'='
name|'self'
op|'.'
name|'GETorHEAD_base'
op|'('
nl|'\n'
name|'hreq'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
name|'obj_ring'
op|','
name|'partition'
op|','
nl|'\n'
name|'hreq'
op|'.'
name|'swift_entity_path'
op|')'
newline|'\n'
nl|'\n'
name|'is_manifest'
op|'='
string|"'X-Object-Manifest'"
name|'in'
name|'req'
op|'.'
name|'headers'
name|'or'
string|"'X-Object-Manifest'"
name|'in'
name|'hresp'
op|'.'
name|'headers'
newline|'\n'
name|'if'
name|'hresp'
op|'.'
name|'status_int'
op|'!='
name|'HTTP_NOT_FOUND'
name|'and'
name|'not'
name|'is_manifest'
op|':'
newline|'\n'
comment|'# This is a version manifest and needs to be handled'
nl|'\n'
comment|'# differently. First copy the existing data to a new object,'
nl|'\n'
comment|'# then write the data from this request to the version manifest'
nl|'\n'
comment|'# object.'
nl|'\n'
indent|'                '
name|'lcontainer'
op|'='
name|'object_versions'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'prefix_len'
op|'='
string|"'%03x'"
op|'%'
name|'len'
op|'('
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'lprefix'
op|'='
name|'prefix_len'
op|'+'
name|'self'
op|'.'
name|'object_name'
op|'+'
string|"'/'"
newline|'\n'
name|'ts_source'
op|'='
name|'hresp'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'swift_x_timestamp'"
op|')'
newline|'\n'
name|'if'
name|'ts_source'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'ts_source'
op|'='
name|'time'
op|'.'
name|'mktime'
op|'('
name|'time'
op|'.'
name|'strptime'
op|'('
nl|'\n'
name|'hresp'
op|'.'
name|'headers'
op|'['
string|"'last-modified'"
op|']'
op|','
nl|'\n'
string|"'%a, %d %b %Y %H:%M:%S GMT'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'new_ts'
op|'='
name|'Timestamp'
op|'('
name|'ts_source'
op|')'
op|'.'
name|'internal'
newline|'\n'
name|'vers_obj_name'
op|'='
name|'lprefix'
op|'+'
name|'new_ts'
newline|'\n'
name|'copy_headers'
op|'='
op|'{'
nl|'\n'
string|"'Destination'"
op|':'
string|"'%s/%s'"
op|'%'
op|'('
name|'lcontainer'
op|','
name|'vers_obj_name'
op|')'
op|'}'
newline|'\n'
name|'copy_environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|','
nl|'\n'
string|"'swift_versioned_copy'"
op|':'
name|'True'
nl|'\n'
op|'}'
newline|'\n'
name|'copy_req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
name|'headers'
op|'='
name|'copy_headers'
op|','
nl|'\n'
name|'environ'
op|'='
name|'copy_environ'
op|')'
newline|'\n'
name|'copy_resp'
op|'='
name|'self'
op|'.'
name|'COPY'
op|'('
name|'copy_req'
op|')'
newline|'\n'
name|'if'
name|'is_client_error'
op|'('
name|'copy_resp'
op|'.'
name|'status_int'
op|')'
op|':'
newline|'\n'
comment|'# missing container or bad permissions'
nl|'\n'
indent|'                    '
name|'raise'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'is_success'
op|'('
name|'copy_resp'
op|'.'
name|'status_int'
op|')'
op|':'
newline|'\n'
comment|'# could not copy the data, bail'
nl|'\n'
indent|'                    '
name|'raise'
name|'HTTPServiceUnavailable'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_update_content_type
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_update_content_type'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
comment|"# Sometimes the 'content-type' header exists, but is set to None."
nl|'\n'
indent|'        '
name|'req'
op|'.'
name|'content_type_manually_set'
op|'='
name|'True'
newline|'\n'
name|'detect_content_type'
op|'='
name|'config_true_value'
op|'('
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-detect-content-type'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'detect_content_type'
name|'or'
name|'not'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'content-type'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'guessed_type'
op|','
name|'_junk'
op|'='
name|'mimetypes'
op|'.'
name|'guess_type'
op|'('
name|'req'
op|'.'
name|'path_info'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
name|'guessed_type'
name|'or'
string|"'application/octet-stream'"
newline|'\n'
name|'if'
name|'detect_content_type'
op|':'
newline|'\n'
indent|'                '
name|'req'
op|'.'
name|'headers'
op|'.'
name|'pop'
op|'('
string|"'x-detect-content-type'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'req'
op|'.'
name|'content_type_manually_set'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|_update_x_timestamp
dedent|''
dedent|''
dedent|''
name|'def'
name|'_update_x_timestamp'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
comment|'# Used by container sync feature'
nl|'\n'
indent|'        '
name|'if'
string|"'x-timestamp'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'req_timestamp'
op|'='
name|'Timestamp'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'HTTPBadRequest'
op|'('
nl|'\n'
name|'request'
op|'='
name|'req'
op|','
name|'content_type'
op|'='
string|"'text/plain'"
op|','
nl|'\n'
name|'body'
op|'='
string|"'X-Timestamp should be a UNIX timestamp float value; '"
nl|'\n'
string|"'was %r'"
op|'%'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'req_timestamp'
op|'.'
name|'internal'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'Timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'.'
name|'internal'
newline|'\n'
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|_check_failure_put_connections
dedent|''
name|'def'
name|'_check_failure_put_connections'
op|'('
name|'self'
op|','
name|'conns'
op|','
name|'req'
op|','
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'req'
op|'.'
name|'if_none_match'
name|'is'
name|'not'
name|'None'
name|'and'
string|"'*'"
name|'in'
name|'req'
op|'.'
name|'if_none_match'
op|':'
newline|'\n'
indent|'            '
name|'statuses'
op|'='
op|'['
name|'conn'
op|'.'
name|'resp'
op|'.'
name|'status'
name|'for'
name|'conn'
name|'in'
name|'conns'
name|'if'
name|'conn'
op|'.'
name|'resp'
op|']'
newline|'\n'
name|'if'
name|'HTTP_PRECONDITION_FAILED'
name|'in'
name|'statuses'
op|':'
newline|'\n'
comment|"# If we find any copy of the file, it shouldn't be uploaded"
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Object PUT returning 412, %(statuses)r'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'statuses'"
op|':'
name|'statuses'
op|'}'
op|')'
newline|'\n'
name|'raise'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'any'
op|'('
name|'conn'
name|'for'
name|'conn'
name|'in'
name|'conns'
name|'if'
name|'conn'
op|'.'
name|'resp'
name|'and'
nl|'\n'
name|'conn'
op|'.'
name|'resp'
op|'.'
name|'status'
op|'=='
name|'HTTP_CONFLICT'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'timestamps'
op|'='
op|'['
name|'HeaderKeyDict'
op|'('
name|'conn'
op|'.'
name|'resp'
op|'.'
name|'getheaders'
op|'('
op|')'
op|')'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'X-Backend-Timestamp'"
op|')'
name|'for'
name|'conn'
name|'in'
name|'conns'
name|'if'
name|'conn'
op|'.'
name|'resp'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Object PUT returning 202 for 409: '"
nl|'\n'
string|"'%(req_timestamp)s <= %(timestamps)r'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'req_timestamp'"
op|':'
name|'req'
op|'.'
name|'timestamp'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'timestamps'"
op|':'
string|"', '"
op|'.'
name|'join'
op|'('
name|'timestamps'
op|')'
op|'}'
op|')'
newline|'\n'
name|'raise'
name|'HTTPAccepted'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'min_conns'
op|'='
name|'quorum_size'
op|'('
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_min_conn'
op|'('
name|'req'
op|','
name|'conns'
op|','
name|'min_conns'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_put_connections
dedent|''
name|'def'
name|'_get_put_connections'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'nodes'
op|','
name|'partition'
op|','
name|'outgoing_headers'
op|','
nl|'\n'
name|'policy'
op|','
name|'expect'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Establish connections to storage nodes for PUT request\n        """'
newline|'\n'
name|'obj_ring'
op|'='
name|'policy'
op|'.'
name|'object_ring'
newline|'\n'
name|'node_iter'
op|'='
name|'GreenthreadSafeIterator'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'iter_nodes_local_first'
op|'('
name|'obj_ring'
op|','
name|'partition'
op|')'
op|')'
newline|'\n'
name|'pile'
op|'='
name|'GreenPile'
op|'('
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'nheaders'
name|'in'
name|'outgoing_headers'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'expect'
op|':'
newline|'\n'
indent|'                '
name|'nheaders'
op|'['
string|"'Expect'"
op|']'
op|'='
string|"'100-continue'"
newline|'\n'
dedent|''
name|'pile'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'_connect_put_node'
op|','
name|'node_iter'
op|','
name|'partition'
op|','
nl|'\n'
name|'req'
op|'.'
name|'swift_entity_path'
op|','
name|'nheaders'
op|','
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'thread_locals'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'conns'
op|'='
op|'['
name|'conn'
name|'for'
name|'conn'
name|'in'
name|'pile'
name|'if'
name|'conn'
op|']'
newline|'\n'
nl|'\n'
name|'return'
name|'conns'
newline|'\n'
nl|'\n'
DECL|member|_check_min_conn
dedent|''
name|'def'
name|'_check_min_conn'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'conns'
op|','
name|'min_conns'
op|','
name|'msg'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'msg'
op|'='
name|'msg'
name|'or'
string|"'Object PUT returning 503, %(conns)s/%(nodes)s '"
string|"'required connections'"
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'conns'
op|')'
op|'<'
name|'min_conns'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
op|'('
name|'msg'
op|')'
op|','
nl|'\n'
op|'{'
string|"'conns'"
op|':'
name|'len'
op|'('
name|'conns'
op|')'
op|','
string|"'nodes'"
op|':'
name|'min_conns'
op|'}'
op|')'
newline|'\n'
name|'raise'
name|'HTTPServiceUnavailable'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_transfer_data
dedent|''
dedent|''
name|'def'
name|'_transfer_data'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'data_source'
op|','
name|'conns'
op|','
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'min_conns'
op|'='
name|'quorum_size'
op|'('
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'bytes_transferred'
op|'='
number|'0'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'ContextPool'
op|'('
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
name|'as'
name|'pool'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'conn'
name|'in'
name|'conns'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'failed'
op|'='
name|'False'
newline|'\n'
name|'conn'
op|'.'
name|'queue'
op|'='
name|'Queue'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'put_queue_depth'
op|')'
newline|'\n'
name|'pool'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'_send_file'
op|','
name|'conn'
op|','
name|'req'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'ChunkReadTimeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'client_timeout'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'try'
op|':'
newline|'\n'
indent|'                            '
name|'chunk'
op|'='
name|'next'
op|'('
name|'data_source'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                            '
name|'if'
name|'req'
op|'.'
name|'is_chunked'
op|':'
newline|'\n'
indent|'                                '
name|'for'
name|'conn'
name|'in'
name|'conns'
op|':'
newline|'\n'
indent|'                                    '
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'put'
op|'('
string|"'0\\r\\n\\r\\n'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'bytes_transferred'
op|'+='
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'if'
name|'bytes_transferred'
op|'>'
name|'constraints'
op|'.'
name|'MAX_FILE_SIZE'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'conn'
name|'in'
name|'list'
op|'('
name|'conns'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'not'
name|'conn'
op|'.'
name|'failed'
op|':'
newline|'\n'
indent|'                            '
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'put'
op|'('
nl|'\n'
string|"'%x\\r\\n%s\\r\\n'"
op|'%'
op|'('
name|'len'
op|'('
name|'chunk'
op|')'
op|','
name|'chunk'
op|')'
nl|'\n'
name|'if'
name|'req'
op|'.'
name|'is_chunked'
name|'else'
name|'chunk'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                            '
name|'conn'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'conns'
op|'.'
name|'remove'
op|'('
name|'conn'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'_check_min_conn'
op|'('
nl|'\n'
name|'req'
op|','
name|'conns'
op|','
name|'min_conns'
op|','
nl|'\n'
name|'msg'
op|'='
string|"'Object PUT exceptions during'"
nl|'\n'
string|"' send, %(conns)s/%(nodes)s required connections'"
op|')'
newline|'\n'
dedent|''
name|'for'
name|'conn'
name|'in'
name|'conns'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'unfinished_tasks'
op|':'
newline|'\n'
indent|'                        '
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'conns'
op|'='
op|'['
name|'conn'
name|'for'
name|'conn'
name|'in'
name|'conns'
name|'if'
name|'not'
name|'conn'
op|'.'
name|'failed'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_check_min_conn'
op|'('
nl|'\n'
name|'req'
op|','
name|'conns'
op|','
name|'min_conns'
op|','
nl|'\n'
name|'msg'
op|'='
string|"'Object PUT exceptions after last send, '"
nl|'\n'
string|"'%(conns)s/%(nodes)s required connections'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ChunkReadTimeout'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'warn'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'ERROR Client read timeout (%ss)'"
op|')'
op|','
name|'err'
op|'.'
name|'seconds'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'client_timeouts'"
op|')'
newline|'\n'
name|'raise'
name|'HTTPRequestTimeout'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'HTTPException'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'ERROR Exception causing client disconnect'"
op|')'
op|')'
newline|'\n'
name|'raise'
name|'HTTPClientDisconnect'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'req'
op|'.'
name|'content_length'
name|'and'
name|'bytes_transferred'
op|'<'
name|'req'
op|'.'
name|'content_length'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'client_disconnect'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'warn'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Client disconnected without sending enough data'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'client_disconnects'"
op|')'
newline|'\n'
name|'raise'
name|'HTTPClientDisconnect'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_store_object
dedent|''
dedent|''
name|'def'
name|'_store_object'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'data_source'
op|','
name|'nodes'
op|','
name|'partition'
op|','
nl|'\n'
name|'outgoing_headers'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Store a replicated object.\n\n        This method is responsible for establishing connection\n        with storage nodes and sending object to each one of those\n        nodes. After sending the data, the "best" reponse will be\n        returned based on statuses from all connections\n        """'
newline|'\n'
name|'policy_idx'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|')'
newline|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'get_by_index'
op|'('
name|'policy_idx'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# RFC2616:8.2.3 disallows 100-continue without a body'
nl|'\n'
dedent|''
name|'if'
op|'('
name|'req'
op|'.'
name|'content_length'
op|'>'
number|'0'
op|')'
name|'or'
name|'req'
op|'.'
name|'is_chunked'
op|':'
newline|'\n'
indent|'            '
name|'expect'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'expect'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'conns'
op|'='
name|'self'
op|'.'
name|'_get_put_connections'
op|'('
name|'req'
op|','
name|'nodes'
op|','
name|'partition'
op|','
nl|'\n'
name|'outgoing_headers'
op|','
name|'policy'
op|','
name|'expect'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
comment|'# check that a minimum number of connections were established and'
nl|'\n'
comment|'# meet all the correct conditions set in the request'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'_check_failure_put_connections'
op|'('
name|'conns'
op|','
name|'req'
op|','
name|'nodes'
op|')'
newline|'\n'
nl|'\n'
comment|'# transfer data'
nl|'\n'
name|'self'
op|'.'
name|'_transfer_data'
op|'('
name|'req'
op|','
name|'data_source'
op|','
name|'conns'
op|','
name|'nodes'
op|')'
newline|'\n'
nl|'\n'
comment|'# get responses'
nl|'\n'
name|'statuses'
op|','
name|'reasons'
op|','
name|'bodies'
op|','
name|'etags'
op|'='
name|'self'
op|'.'
name|'_get_put_responses'
op|'('
nl|'\n'
name|'req'
op|','
name|'conns'
op|','
name|'nodes'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'HTTPException'
name|'as'
name|'resp'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'resp'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'conn'
name|'in'
name|'conns'
op|':'
newline|'\n'
indent|'                '
name|'conn'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'len'
op|'('
name|'etags'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Object servers returned %s mismatched etags'"
op|')'
op|','
name|'len'
op|'('
name|'etags'
op|')'
op|')'
newline|'\n'
name|'return'
name|'HTTPServerError'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'etag'
op|'='
name|'etags'
op|'.'
name|'pop'
op|'('
op|')'
name|'if'
name|'len'
op|'('
name|'etags'
op|')'
name|'else'
name|'None'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'best_response'
op|'('
name|'req'
op|','
name|'statuses'
op|','
name|'reasons'
op|','
name|'bodies'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Object PUT'"
op|')'
op|','
name|'etag'
op|'='
name|'etag'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'last_modified'
op|'='
name|'math'
op|'.'
name|'ceil'
op|'('
nl|'\n'
name|'float'
op|'('
name|'Timestamp'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
op|')'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'cors_validation'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|PUT
name|'def'
name|'PUT'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP PUT request handler."""'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'if_none_match'
name|'is'
name|'not'
name|'None'
name|'and'
string|"'*'"
name|'not'
name|'in'
name|'req'
op|'.'
name|'if_none_match'
op|':'
newline|'\n'
comment|"# Sending an etag with if-none-match isn't currently supported"
nl|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|','
name|'content_type'
op|'='
string|"'text/plain'"
op|','
nl|'\n'
name|'body'
op|'='
string|"'If-None-Match only supports *'"
op|')'
newline|'\n'
dedent|''
name|'container_info'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'req'
op|')'
newline|'\n'
name|'policy_index'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
nl|'\n'
name|'container_info'
op|'['
string|"'storage_policy'"
op|']'
op|')'
newline|'\n'
name|'obj_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'policy_index'
op|')'
newline|'\n'
name|'container_nodes'
op|'='
name|'container_info'
op|'['
string|"'nodes'"
op|']'
newline|'\n'
name|'container_partition'
op|'='
name|'container_info'
op|'['
string|"'partition'"
op|']'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'obj_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
nl|'\n'
comment|'# pass the policy index to storage nodes via req header'
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|'='
name|'policy_index'
newline|'\n'
name|'req'
op|'.'
name|'acl'
op|'='
name|'container_info'
op|'['
string|"'write_acl'"
op|']'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift_sync_key'"
op|']'
op|'='
name|'container_info'
op|'['
string|"'sync_key'"
op|']'
newline|'\n'
nl|'\n'
comment|'# is request authorized'
nl|'\n'
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'aresp'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'container_info'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
comment|'# update content type in case it is missing'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_update_content_type'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
comment|'# check constraints on object name and request headers'
nl|'\n'
name|'error_response'
op|'='
name|'check_object_creation'
op|'('
name|'req'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
name|'or'
name|'check_content_type'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'error_response'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'error_response'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_update_x_timestamp'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
comment|'# check if versioning is enabled and handle copying previous version'
nl|'\n'
name|'self'
op|'.'
name|'_handle_object_versions'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
comment|'# check if request is a COPY of an existing object'
nl|'\n'
name|'source_header'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Copy-From'"
op|')'
newline|'\n'
name|'if'
name|'source_header'
op|':'
newline|'\n'
indent|'            '
name|'error_response'
op|','
name|'req'
op|','
name|'data_source'
op|','
name|'update_response'
op|'='
name|'self'
op|'.'
name|'_handle_copy_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'error_response'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'error_response'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'reader'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'.'
name|'read'
newline|'\n'
name|'data_source'
op|'='
name|'iter'
op|'('
name|'lambda'
op|':'
name|'reader'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'client_chunk_size'
op|')'
op|','
string|"''"
op|')'
newline|'\n'
name|'update_response'
op|'='
name|'lambda'
name|'req'
op|','
name|'resp'
op|':'
name|'resp'
newline|'\n'
nl|'\n'
comment|'# check if object is set to be automaticaly deleted (i.e. expired)'
nl|'\n'
dedent|''
name|'req'
op|','
name|'delete_at_container'
op|','
name|'delete_at_part'
op|','
name|'delete_at_nodes'
op|'='
name|'self'
op|'.'
name|'_config_obj_expiration'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
comment|'# XXX hack for PUT to EC until the proxy learns how to encode'
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Object-Sysmeta-Ec-Archive-Index'"
op|']'
op|'='
number|'0'
newline|'\n'
nl|'\n'
comment|'# add special headers to be handled by storage nodes'
nl|'\n'
name|'outgoing_headers'
op|'='
name|'self'
op|'.'
name|'_backend_requests'
op|'('
nl|'\n'
name|'req'
op|','
name|'len'
op|'('
name|'nodes'
op|')'
op|','
name|'container_partition'
op|','
name|'container_nodes'
op|','
nl|'\n'
name|'delete_at_container'
op|','
name|'delete_at_part'
op|','
name|'delete_at_nodes'
op|')'
newline|'\n'
nl|'\n'
comment|'# send object to storage nodes'
nl|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'_store_object'
op|'('
nl|'\n'
name|'req'
op|','
name|'data_source'
op|','
name|'nodes'
op|','
name|'partition'
op|','
name|'outgoing_headers'
op|')'
newline|'\n'
name|'return'
name|'update_response'
op|'('
name|'req'
op|','
name|'resp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'cors_validation'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|DELETE
name|'def'
name|'DELETE'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP DELETE request handler."""'
newline|'\n'
name|'container_info'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'req'
op|')'
newline|'\n'
comment|'# pass the policy index to storage nodes via req header'
nl|'\n'
name|'policy_index'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
nl|'\n'
name|'container_info'
op|'['
string|"'storage_policy'"
op|']'
op|')'
newline|'\n'
name|'obj_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'policy_index'
op|')'
newline|'\n'
comment|'# pass the policy index to storage nodes via req header'
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|'='
name|'policy_index'
newline|'\n'
name|'container_partition'
op|'='
name|'container_info'
op|'['
string|"'partition'"
op|']'
newline|'\n'
name|'containers'
op|'='
name|'container_info'
op|'['
string|"'nodes'"
op|']'
newline|'\n'
name|'req'
op|'.'
name|'acl'
op|'='
name|'container_info'
op|'['
string|"'write_acl'"
op|']'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift_sync_key'"
op|']'
op|'='
name|'container_info'
op|'['
string|"'sync_key'"
op|']'
newline|'\n'
name|'object_versions'
op|'='
name|'container_info'
op|'['
string|"'versions'"
op|']'
newline|'\n'
name|'if'
name|'object_versions'
op|':'
newline|'\n'
comment|'# this is a version manifest and needs to be handled differently'
nl|'\n'
indent|'            '
name|'object_versions'
op|'='
name|'unquote'
op|'('
name|'object_versions'
op|')'
newline|'\n'
name|'lcontainer'
op|'='
name|'object_versions'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'prefix_len'
op|'='
string|"'%03x'"
op|'%'
name|'len'
op|'('
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'lprefix'
op|'='
name|'prefix_len'
op|'+'
name|'self'
op|'.'
name|'object_name'
op|'+'
string|"'/'"
newline|'\n'
name|'item_list'
op|'='
op|'['
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'_item'
name|'in'
name|'self'
op|'.'
name|'_listing_iter'
op|'('
name|'lcontainer'
op|','
name|'lprefix'
op|','
nl|'\n'
name|'req'
op|'.'
name|'environ'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'item_list'
op|'.'
name|'append'
op|'('
name|'_item'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ListingIterNotFound'
op|':'
newline|'\n'
comment|'# no worries, last_item is None'
nl|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'except'
name|'ListingIterNotAuthorized'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'err'
op|'.'
name|'aresp'
newline|'\n'
dedent|''
name|'except'
name|'ListingIterError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPServerError'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'while'
name|'len'
op|'('
name|'item_list'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'previous_version'
op|'='
name|'item_list'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
comment|'# there are older versions so copy the previous version to the'
nl|'\n'
comment|'# current object and delete the previous version'
nl|'\n'
name|'orig_container'
op|'='
name|'self'
op|'.'
name|'container_name'
newline|'\n'
name|'orig_obj'
op|'='
name|'self'
op|'.'
name|'object_name'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'lcontainer'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'previous_version'
op|'['
string|"'name'"
op|']'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
nl|'\n'
name|'copy_path'
op|'='
string|"'/v1/'"
op|'+'
name|'self'
op|'.'
name|'account_name'
op|'+'
string|"'/'"
op|'+'
name|'self'
op|'.'
name|'container_name'
op|'+'
string|"'/'"
op|'+'
name|'self'
op|'.'
name|'object_name'
newline|'\n'
nl|'\n'
name|'copy_headers'
op|'='
op|'{'
string|"'X-Newest'"
op|':'
string|"'True'"
op|','
nl|'\n'
string|"'Destination'"
op|':'
name|'orig_container'
op|'+'
string|"'/'"
op|'+'
name|'orig_obj'
nl|'\n'
op|'}'
newline|'\n'
name|'copy_environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|','
nl|'\n'
string|"'swift_versioned_copy'"
op|':'
name|'True'
nl|'\n'
op|'}'
newline|'\n'
name|'creq'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'copy_path'
op|','
name|'headers'
op|'='
name|'copy_headers'
op|','
nl|'\n'
name|'environ'
op|'='
name|'copy_environ'
op|')'
newline|'\n'
name|'copy_resp'
op|'='
name|'self'
op|'.'
name|'COPY'
op|'('
name|'creq'
op|')'
newline|'\n'
name|'if'
name|'copy_resp'
op|'.'
name|'status_int'
op|'=='
name|'HTTP_NOT_FOUND'
op|':'
newline|'\n'
comment|"# the version isn't there so we'll try with previous"
nl|'\n'
indent|'                    '
name|'self'
op|'.'
name|'container_name'
op|'='
name|'orig_container'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'orig_obj'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'is_client_error'
op|'('
name|'copy_resp'
op|'.'
name|'status_int'
op|')'
op|':'
newline|'\n'
comment|'# some user error, maybe permissions'
nl|'\n'
indent|'                    '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'is_success'
op|'('
name|'copy_resp'
op|'.'
name|'status_int'
op|')'
op|':'
newline|'\n'
comment|'# could not copy the data, bail'
nl|'\n'
indent|'                    '
name|'return'
name|'HTTPServiceUnavailable'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
comment|'# reset these because the COPY changed them'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'container_name'
op|'='
name|'lcontainer'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'previous_version'
op|'['
string|"'name'"
op|']'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
name|'new_del_req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'copy_path'
op|','
name|'environ'
op|'='
name|'req'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'container_info'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'req'
op|')'
newline|'\n'
name|'policy_idx'
op|'='
name|'container_info'
op|'['
string|"'storage_policy'"
op|']'
newline|'\n'
name|'obj_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'policy_idx'
op|')'
newline|'\n'
comment|'# pass the policy index to storage nodes via req header'
nl|'\n'
name|'new_del_req'
op|'.'
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|'='
name|'policy_idx'
newline|'\n'
name|'container_partition'
op|'='
name|'container_info'
op|'['
string|"'partition'"
op|']'
newline|'\n'
name|'containers'
op|'='
name|'container_info'
op|'['
string|"'nodes'"
op|']'
newline|'\n'
name|'new_del_req'
op|'.'
name|'acl'
op|'='
name|'container_info'
op|'['
string|"'write_acl'"
op|']'
newline|'\n'
name|'new_del_req'
op|'.'
name|'path_info'
op|'='
name|'copy_path'
newline|'\n'
name|'req'
op|'='
name|'new_del_req'
newline|'\n'
comment|"# remove 'X-If-Delete-At', since it is not for the older copy"
nl|'\n'
name|'if'
string|"'X-If-Delete-At'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                    '
name|'del'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-If-Delete-At'"
op|']'
newline|'\n'
dedent|''
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'aresp'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'containers'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'partition'
op|','
name|'nodes'
op|'='
name|'obj_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
comment|'# Used by container sync feature'
nl|'\n'
name|'if'
string|"'x-timestamp'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'req_timestamp'
op|'='
name|'Timestamp'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPBadRequest'
op|'('
nl|'\n'
name|'request'
op|'='
name|'req'
op|','
name|'content_type'
op|'='
string|"'text/plain'"
op|','
nl|'\n'
name|'body'
op|'='
string|"'X-Timestamp should be a UNIX timestamp float value; '"
nl|'\n'
string|"'was %r'"
op|'%'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'req_timestamp'
op|'.'
name|'internal'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'Timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'.'
name|'internal'
newline|'\n'
nl|'\n'
dedent|''
name|'headers'
op|'='
name|'self'
op|'.'
name|'_backend_requests'
op|'('
nl|'\n'
name|'req'
op|','
name|'len'
op|'('
name|'nodes'
op|')'
op|','
name|'container_partition'
op|','
name|'containers'
op|')'
newline|'\n'
comment|'# When deleting objects treat a 404 status as 204.'
nl|'\n'
name|'status_overrides'
op|'='
op|'{'
number|'404'
op|':'
number|'204'
op|'}'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_requests'
op|'('
name|'req'
op|','
name|'obj_ring'
op|','
nl|'\n'
name|'partition'
op|','
string|"'DELETE'"
op|','
name|'req'
op|'.'
name|'swift_entity_path'
op|','
nl|'\n'
name|'headers'
op|','
name|'overrides'
op|'='
name|'status_overrides'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'cors_validation'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|COPY
name|'def'
name|'COPY'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP COPY request handler."""'
newline|'\n'
name|'if'
name|'not'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'Destination'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'body'
op|'='
string|"'Destination header required'"
op|')'
newline|'\n'
dedent|''
name|'dest_account'
op|'='
name|'self'
op|'.'
name|'account_name'
newline|'\n'
name|'if'
string|"'Destination-Account'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'dest_account'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'Destination-Account'"
op|')'
newline|'\n'
name|'dest_account'
op|'='
name|'check_account_format'
op|'('
name|'req'
op|','
name|'dest_account'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Copy-From-Account'"
op|']'
op|'='
name|'self'
op|'.'
name|'account_name'
newline|'\n'
name|'self'
op|'.'
name|'account_name'
op|'='
name|'dest_account'
newline|'\n'
name|'del'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Destination-Account'"
op|']'
newline|'\n'
dedent|''
name|'dest_container'
op|','
name|'dest_object'
op|'='
name|'check_destination_header'
op|'('
name|'req'
op|')'
newline|'\n'
name|'source'
op|'='
string|"'/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'dest_container'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'dest_object'
newline|'\n'
comment|'# re-write the existing request as a PUT instead of creating a new one'
nl|'\n'
comment|'# since this one is already attached to the posthooklogger'
nl|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'path_info'
op|'='
string|"'/v1/%s/%s/%s'"
op|'%'
op|'('
name|'dest_account'
op|','
name|'dest_container'
op|','
name|'dest_object'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Copy-From'"
op|']'
op|'='
name|'quote'
op|'('
name|'source'
op|')'
newline|'\n'
name|'del'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Destination'"
op|']'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
