begin_unit
comment|'# Copyright (c) 2013 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'import'
name|'eventlet'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'exceptions'
op|','
name|'utils'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'POLICIES'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'Timestamp'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'ssync_sender'
op|','
name|'diskfile'
op|','
name|'ssync_receiver'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'patch_policies'
op|','
name|'make_timestamp_iter'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
op|'.'
name|'obj'
op|'.'
name|'common'
name|'import'
name|'FakeReplicator'
op|','
name|'BaseTest'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NullBufferedHTTPConnection
name|'class'
name|'NullBufferedHTTPConnection'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|putrequest
dedent|''
name|'def'
name|'putrequest'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|putheader
dedent|''
name|'def'
name|'putheader'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|endheaders
dedent|''
name|'def'
name|'endheaders'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|getresponse
dedent|''
name|'def'
name|'getresponse'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|close
dedent|''
name|'def'
name|'close'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeResponse
dedent|''
dedent|''
name|'class'
name|'FakeResponse'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'chunk_body'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'self'
op|'.'
name|'close_called'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'chunk_body'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fp'
op|'='
name|'six'
op|'.'
name|'StringIO'
op|'('
nl|'\n'
string|"'%x\\r\\n%s\\r\\n0\\r\\n\\r\\n'"
op|'%'
op|'('
name|'len'
op|'('
name|'chunk_body'
op|')'
op|','
name|'chunk_body'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"''"
newline|'\n'
nl|'\n'
DECL|member|close
dedent|''
name|'def'
name|'close'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'close_called'
op|'='
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeConnection
dedent|''
dedent|''
name|'class'
name|'FakeConnection'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sent'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'closed'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|send
dedent|''
name|'def'
name|'send'
op|'('
name|'self'
op|','
name|'data'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sent'
op|'.'
name|'append'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|close
dedent|''
name|'def'
name|'close'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'closed'
op|'='
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'patch_policies'
op|'('
op|')'
newline|'\n'
DECL|class|TestSender
name|'class'
name|'TestSender'
op|'('
name|'BaseTest'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestSender'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'testdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'tmpdir'
op|','
string|"'tmp_test_ssync_sender'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'mkdirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'dev'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'daemon'
op|'='
name|'FakeReplicator'
op|'('
name|'self'
op|'.'
name|'testdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_catches_MessageTimeout
dedent|''
name|'def'
name|'test_call_catches_MessageTimeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|connect
indent|'        '
name|'def'
name|'connect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'exceptions'
op|'.'
name|'MessageTimeout'
op|'('
number|'1'
op|','
string|"'test connect'"
op|')'
newline|'\n'
comment|"# Cancels Eventlet's raising of this since we're about to do it."
nl|'\n'
name|'exc'
op|'.'
name|'cancel'
op|'('
op|')'
newline|'\n'
name|'raise'
name|'exc'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'ssync_sender'
op|'.'
name|'Sender'
op|','
string|"'connect'"
op|','
name|'connect'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'node'
op|'='
name|'dict'
op|'('
name|'replication_ip'
op|'='
string|"'1.2.3.4'"
op|','
name|'replication_port'
op|'='
number|'5678'
op|','
nl|'\n'
name|'device'
op|'='
string|"'sda1'"
op|')'
newline|'\n'
name|'job'
op|'='
name|'dict'
op|'('
name|'partition'
op|'='
string|"'9'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'self'
op|'.'
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'candidates'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'error_lines'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'error_lines'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1.2.3.4:5678/sda1/9 1 second: test connect'"
op|','
nl|'\n'
name|'error_lines'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_catches_ReplicationException
dedent|''
name|'def'
name|'test_call_catches_ReplicationException'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|connect
indent|'        '
name|'def'
name|'connect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'exceptions'
op|'.'
name|'ReplicationException'
op|'('
string|"'test connect'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'ssync_sender'
op|'.'
name|'Sender'
op|','
string|"'connect'"
op|','
name|'connect'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'node'
op|'='
name|'dict'
op|'('
name|'replication_ip'
op|'='
string|"'1.2.3.4'"
op|','
name|'replication_port'
op|'='
number|'5678'
op|','
nl|'\n'
name|'device'
op|'='
string|"'sda1'"
op|')'
newline|'\n'
name|'job'
op|'='
name|'dict'
op|'('
name|'partition'
op|'='
string|"'9'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'self'
op|'.'
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'candidates'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'error_lines'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'error_lines'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'1.2.3.4:5678/sda1/9 test connect'"
op|','
nl|'\n'
name|'error_lines'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_catches_other_exceptions
dedent|''
name|'def'
name|'test_call_catches_other_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
name|'dict'
op|'('
name|'replication_ip'
op|'='
string|"'1.2.3.4'"
op|','
name|'replication_port'
op|'='
number|'5678'
op|','
nl|'\n'
name|'device'
op|'='
string|"'sda1'"
op|')'
newline|'\n'
name|'job'
op|'='
name|'dict'
op|'('
name|'partition'
op|'='
string|"'9'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'='
string|"'cause exception'"
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'self'
op|'.'
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'candidates'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'error_lines'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'error_lines'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'line'
op|'.'
name|'startswith'
op|'('
nl|'\n'
string|"'1.2.3.4:5678/sda1/9 EXCEPTION in replication.Sender:'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_catches_exception_handling_exception
dedent|''
dedent|''
name|'def'
name|'test_call_catches_exception_handling_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'job'
op|'='
name|'node'
op|'='
name|'None'
comment|'# Will cause inside exception handler to fail'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'='
string|"'cause exception'"
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'self'
op|'.'
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'candidates'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'error_lines'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'error_lines'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'line'
op|'.'
name|'startswith'
op|'('
nl|'\n'
string|"'EXCEPTION in replication.Sender'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_calls_others
dedent|''
dedent|''
name|'def'
name|'test_call_calls_others'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'missing_check'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'disconnect'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'self'
op|'.'
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'candidates'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'missing_check'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'disconnect'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_calls_others_returns_failure
dedent|''
name|'def'
name|'test_call_calls_others_returns_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'missing_check'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'disconnect'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'failures'
op|'='
number|'1'
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'self'
op|'.'
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'candidates'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'missing_check'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'disconnect'
op|'.'
name|'assert_called_once_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connect
dedent|''
name|'def'
name|'test_connect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
name|'dict'
op|'('
name|'replication_ip'
op|'='
string|"'1.2.3.4'"
op|','
name|'replication_port'
op|'='
number|'5678'
op|','
nl|'\n'
name|'device'
op|'='
string|"'sda1'"
op|','
name|'index'
op|'='
number|'0'
op|')'
newline|'\n'
name|'job'
op|'='
name|'dict'
op|'('
name|'partition'
op|'='
string|"'9'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'swift.obj.ssync_sender.bufferedhttp.BufferedHTTPConnection'"
nl|'\n'
op|')'
name|'as'
name|'mock_conn_class'
op|':'
newline|'\n'
indent|'            '
name|'mock_conn'
op|'='
name|'mock_conn_class'
op|'.'
name|'return_value'
newline|'\n'
name|'mock_resp'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_resp'
op|'.'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'mock_conn'
op|'.'
name|'getresponse'
op|'.'
name|'return_value'
op|'='
name|'mock_resp'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'mock_conn_class'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'1.2.3.4:5678'"
op|')'
newline|'\n'
name|'expectations'
op|'='
op|'{'
nl|'\n'
string|"'putrequest'"
op|':'
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'SSYNC'"
op|','
string|"'/sda1/9'"
op|')'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'putheader'"
op|':'
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'Transfer-Encoding'"
op|','
string|"'chunked'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Ssync-Frag-Index'"
op|','
number|'0'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Ssync-Node-Index'"
op|','
number|'0'
op|')'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'endheaders'"
op|':'
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'for'
name|'method_name'
op|','
name|'expected_calls'
name|'in'
name|'expectations'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mock_method'
op|'='
name|'getattr'
op|'('
name|'mock_conn'
op|','
name|'method_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_calls'
op|','
name|'mock_method'
op|'.'
name|'mock_calls'
op|','
nl|'\n'
string|'\'connection method "%s" got %r not %r\''
op|'%'
op|'('
nl|'\n'
name|'method_name'
op|','
name|'mock_method'
op|'.'
name|'mock_calls'
op|','
nl|'\n'
name|'expected_calls'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connect_handoff
dedent|''
dedent|''
name|'def'
name|'test_connect_handoff'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
name|'dict'
op|'('
name|'replication_ip'
op|'='
string|"'1.2.3.4'"
op|','
name|'replication_port'
op|'='
number|'5678'
op|','
nl|'\n'
name|'device'
op|'='
string|"'sda1'"
op|')'
newline|'\n'
name|'job'
op|'='
name|'dict'
op|'('
name|'partition'
op|'='
string|"'9'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'1'
op|']'
op|','
name|'frag_index'
op|'='
number|'9'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'swift.obj.ssync_sender.bufferedhttp.BufferedHTTPConnection'"
nl|'\n'
op|')'
name|'as'
name|'mock_conn_class'
op|':'
newline|'\n'
indent|'            '
name|'mock_conn'
op|'='
name|'mock_conn_class'
op|'.'
name|'return_value'
newline|'\n'
name|'mock_resp'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_resp'
op|'.'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'mock_conn'
op|'.'
name|'getresponse'
op|'.'
name|'return_value'
op|'='
name|'mock_resp'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'mock_conn_class'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'1.2.3.4:5678'"
op|')'
newline|'\n'
name|'expectations'
op|'='
op|'{'
nl|'\n'
string|"'putrequest'"
op|':'
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'SSYNC'"
op|','
string|"'/sda1/9'"
op|')'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'putheader'"
op|':'
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'Transfer-Encoding'"
op|','
string|"'chunked'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Ssync-Frag-Index'"
op|','
number|'9'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Ssync-Node-Index'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'endheaders'"
op|':'
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'for'
name|'method_name'
op|','
name|'expected_calls'
name|'in'
name|'expectations'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mock_method'
op|'='
name|'getattr'
op|'('
name|'mock_conn'
op|','
name|'method_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_calls'
op|','
name|'mock_method'
op|'.'
name|'mock_calls'
op|','
nl|'\n'
string|'\'connection method "%s" got %r not %r\''
op|'%'
op|'('
nl|'\n'
name|'method_name'
op|','
name|'mock_method'
op|'.'
name|'mock_calls'
op|','
nl|'\n'
name|'expected_calls'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connect_handoff_no_frag
dedent|''
dedent|''
name|'def'
name|'test_connect_handoff_no_frag'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
name|'dict'
op|'('
name|'replication_ip'
op|'='
string|"'1.2.3.4'"
op|','
name|'replication_port'
op|'='
number|'5678'
op|','
nl|'\n'
name|'device'
op|'='
string|"'sda1'"
op|')'
newline|'\n'
name|'job'
op|'='
name|'dict'
op|'('
name|'partition'
op|'='
string|"'9'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'swift.obj.ssync_sender.bufferedhttp.BufferedHTTPConnection'"
nl|'\n'
op|')'
name|'as'
name|'mock_conn_class'
op|':'
newline|'\n'
indent|'            '
name|'mock_conn'
op|'='
name|'mock_conn_class'
op|'.'
name|'return_value'
newline|'\n'
name|'mock_resp'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_resp'
op|'.'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'mock_conn'
op|'.'
name|'getresponse'
op|'.'
name|'return_value'
op|'='
name|'mock_resp'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'mock_conn_class'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'1.2.3.4:5678'"
op|')'
newline|'\n'
name|'expectations'
op|'='
op|'{'
nl|'\n'
string|"'putrequest'"
op|':'
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'SSYNC'"
op|','
string|"'/sda1/9'"
op|')'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'putheader'"
op|':'
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'Transfer-Encoding'"
op|','
string|"'chunked'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
number|'0'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Ssync-Frag-Index'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Ssync-Node-Index'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'endheaders'"
op|':'
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'for'
name|'method_name'
op|','
name|'expected_calls'
name|'in'
name|'expectations'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mock_method'
op|'='
name|'getattr'
op|'('
name|'mock_conn'
op|','
name|'method_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_calls'
op|','
name|'mock_method'
op|'.'
name|'mock_calls'
op|','
nl|'\n'
string|'\'connection method "%s" got %r not %r\''
op|'%'
op|'('
nl|'\n'
name|'method_name'
op|','
name|'mock_method'
op|'.'
name|'mock_calls'
op|','
nl|'\n'
name|'expected_calls'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connect_handoff_none_frag
dedent|''
dedent|''
name|'def'
name|'test_connect_handoff_none_frag'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
name|'dict'
op|'('
name|'replication_ip'
op|'='
string|"'1.2.3.4'"
op|','
name|'replication_port'
op|'='
number|'5678'
op|','
nl|'\n'
name|'device'
op|'='
string|"'sda1'"
op|')'
newline|'\n'
name|'job'
op|'='
name|'dict'
op|'('
name|'partition'
op|'='
string|"'9'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'1'
op|']'
op|','
name|'frag_index'
op|'='
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'swift.obj.ssync_sender.bufferedhttp.BufferedHTTPConnection'"
nl|'\n'
op|')'
name|'as'
name|'mock_conn_class'
op|':'
newline|'\n'
indent|'            '
name|'mock_conn'
op|'='
name|'mock_conn_class'
op|'.'
name|'return_value'
newline|'\n'
name|'mock_resp'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_resp'
op|'.'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'mock_conn'
op|'.'
name|'getresponse'
op|'.'
name|'return_value'
op|'='
name|'mock_resp'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'mock_conn_class'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'1.2.3.4:5678'"
op|')'
newline|'\n'
name|'expectations'
op|'='
op|'{'
nl|'\n'
string|"'putrequest'"
op|':'
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'SSYNC'"
op|','
string|"'/sda1/9'"
op|')'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'putheader'"
op|':'
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'Transfer-Encoding'"
op|','
string|"'chunked'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Ssync-Frag-Index'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Ssync-Node-Index'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'endheaders'"
op|':'
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'for'
name|'method_name'
op|','
name|'expected_calls'
name|'in'
name|'expectations'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mock_method'
op|'='
name|'getattr'
op|'('
name|'mock_conn'
op|','
name|'method_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_calls'
op|','
name|'mock_method'
op|'.'
name|'mock_calls'
op|','
nl|'\n'
string|'\'connection method "%s" got %r not %r\''
op|'%'
op|'('
nl|'\n'
name|'method_name'
op|','
name|'mock_method'
op|'.'
name|'mock_calls'
op|','
nl|'\n'
name|'expected_calls'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connect_handoff_replicated
dedent|''
dedent|''
name|'def'
name|'test_connect_handoff_replicated'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
name|'dict'
op|'('
name|'replication_ip'
op|'='
string|"'1.2.3.4'"
op|','
name|'replication_port'
op|'='
number|'5678'
op|','
nl|'\n'
name|'device'
op|'='
string|"'sda1'"
op|')'
newline|'\n'
comment|'# no frag_index in rsync job'
nl|'\n'
name|'job'
op|'='
name|'dict'
op|'('
name|'partition'
op|'='
string|"'9'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'swift.obj.ssync_sender.bufferedhttp.BufferedHTTPConnection'"
nl|'\n'
op|')'
name|'as'
name|'mock_conn_class'
op|':'
newline|'\n'
indent|'            '
name|'mock_conn'
op|'='
name|'mock_conn_class'
op|'.'
name|'return_value'
newline|'\n'
name|'mock_resp'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_resp'
op|'.'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'mock_conn'
op|'.'
name|'getresponse'
op|'.'
name|'return_value'
op|'='
name|'mock_resp'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'mock_conn_class'
op|'.'
name|'assert_called_once_with'
op|'('
string|"'1.2.3.4:5678'"
op|')'
newline|'\n'
name|'expectations'
op|'='
op|'{'
nl|'\n'
string|"'putrequest'"
op|':'
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'SSYNC'"
op|','
string|"'/sda1/9'"
op|')'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'putheader'"
op|':'
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'Transfer-Encoding'"
op|','
string|"'chunked'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Ssync-Frag-Index'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'X-Backend-Ssync-Node-Index'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
op|']'
op|','
nl|'\n'
string|"'endheaders'"
op|':'
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'for'
name|'method_name'
op|','
name|'expected_calls'
name|'in'
name|'expectations'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mock_method'
op|'='
name|'getattr'
op|'('
name|'mock_conn'
op|','
name|'method_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_calls'
op|','
name|'mock_method'
op|'.'
name|'mock_calls'
op|','
nl|'\n'
string|'\'connection method "%s" got %r not %r\''
op|'%'
op|'('
nl|'\n'
name|'method_name'
op|','
name|'mock_method'
op|'.'
name|'mock_calls'
op|','
nl|'\n'
name|'expected_calls'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call
dedent|''
dedent|''
name|'def'
name|'test_call'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|patch_sender
indent|'        '
name|'def'
name|'patch_sender'
op|'('
name|'sender'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sender'
op|'.'
name|'connect'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'sender'
op|'.'
name|'missing_check'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'sender'
op|'.'
name|'updates'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'sender'
op|'.'
name|'disconnect'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'node'
op|'='
name|'dict'
op|'('
name|'replication_ip'
op|'='
string|"'1.2.3.4'"
op|','
name|'replication_port'
op|'='
number|'5678'
op|','
nl|'\n'
name|'device'
op|'='
string|"'sda1'"
op|')'
newline|'\n'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
string|"'dev'"
op|','
nl|'\n'
string|"'partition'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
string|"'frag_index'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'available_map'
op|'='
name|'dict'
op|'('
op|'['
op|'('
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
string|"'1380144470.00000'"
op|')'
op|','
nl|'\n'
op|'('
string|"'9d41d8cd98f00b204e9800998ecf0def'"
op|','
nl|'\n'
string|"'1380144472.22222'"
op|')'
op|','
nl|'\n'
op|'('
string|"'9d41d8cd98f00b204e9800998ecf1def'"
op|','
nl|'\n'
string|"'1380144474.44444'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# no suffixes -> no work done'
nl|'\n'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
op|'['
op|']'
op|','
name|'remote_check_objs'
op|'='
name|'None'
op|')'
newline|'\n'
name|'patch_sender'
op|'('
name|'sender'
op|')'
newline|'\n'
name|'sender'
op|'.'
name|'available_map'
op|'='
name|'available_map'
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'{'
op|'}'
op|','
name|'candidates'
op|')'
newline|'\n'
nl|'\n'
comment|'# all objs in sync'
nl|'\n'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
op|'['
string|"'ignored'"
op|']'
op|','
name|'remote_check_objs'
op|'='
name|'None'
op|')'
newline|'\n'
name|'patch_sender'
op|'('
name|'sender'
op|')'
newline|'\n'
name|'sender'
op|'.'
name|'available_map'
op|'='
name|'available_map'
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'available_map'
op|','
name|'candidates'
op|')'
newline|'\n'
nl|'\n'
comment|"# one obj not in sync, sync'ing faked, all objs should be in return set"
nl|'\n'
name|'wanted'
op|'='
string|"'9d41d8cd98f00b204e9800998ecf0def'"
newline|'\n'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
op|'['
string|"'ignored'"
op|']'
op|','
nl|'\n'
name|'remote_check_objs'
op|'='
name|'None'
op|')'
newline|'\n'
name|'patch_sender'
op|'('
name|'sender'
op|')'
newline|'\n'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
name|'wanted'
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'sender'
op|'.'
name|'available_map'
op|'='
name|'available_map'
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'available_map'
op|','
name|'candidates'
op|')'
newline|'\n'
nl|'\n'
comment|"# one obj not in sync, remote check only so that obj is not sync'd"
nl|'\n'
comment|'# and should not be in the return set'
nl|'\n'
name|'wanted'
op|'='
string|"'9d41d8cd98f00b204e9800998ecf0def'"
newline|'\n'
name|'remote_check_objs'
op|'='
name|'set'
op|'('
name|'available_map'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
op|'['
string|"'ignored'"
op|']'
op|','
nl|'\n'
name|'remote_check_objs'
op|'='
name|'remote_check_objs'
op|')'
newline|'\n'
name|'patch_sender'
op|'('
name|'sender'
op|')'
newline|'\n'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
name|'wanted'
op|':'
op|'['
op|']'
op|'}'
newline|'\n'
name|'sender'
op|'.'
name|'available_map'
op|'='
name|'available_map'
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'success'
op|')'
newline|'\n'
name|'expected_map'
op|'='
name|'dict'
op|'('
op|'['
op|'('
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
string|"'1380144470.00000'"
op|')'
op|','
nl|'\n'
op|'('
string|"'9d41d8cd98f00b204e9800998ecf1def'"
op|','
nl|'\n'
string|"'1380144474.44444'"
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_map'
op|','
name|'candidates'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_and_missing_check_metadata_legacy_response
dedent|''
name|'def'
name|'test_call_and_missing_check_metadata_legacy_response'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|yield_hashes
indent|'        '
name|'def'
name|'yield_hashes'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'policy'
op|','
name|'suffixes'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'device'
op|'=='
string|"'dev'"
name|'and'
name|'partition'
op|'=='
string|"'9'"
name|'and'
name|'suffixes'
op|'=='
op|'['
string|"'abc'"
op|']'
name|'and'
name|'policy'
op|'=='
name|'POLICIES'
op|'.'
name|'legacy'
op|':'
newline|'\n'
indent|'                '
name|'yield'
op|'('
nl|'\n'
string|"'/srv/node/dev/objects/9/abc/'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|','
nl|'\n'
string|"'ts_meta'"
op|':'
name|'Timestamp'
op|'('
number|'1380155570.00005'
op|')'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'No match for %r %r %r'"
op|'%'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'suffixes'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'node'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
string|"'dev'"
op|','
nl|'\n'
string|"'partition'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
string|"'frag_index'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':MISSING_CHECK: START\\r\\n'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
nl|'\n'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'yield_hashes'
op|'='
name|'yield_hashes'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'df_mgr'
op|'.'
name|'get_diskfile_from_hash'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'disconnect'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'self'
op|'.'
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'success'
op|')'
newline|'\n'
name|'found_post'
op|'='
name|'found_put'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'chunk'
name|'in'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'POST'"
name|'in'
name|'chunk'
op|':'
newline|'\n'
indent|'                '
name|'found_post'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
string|"'PUT'"
name|'in'
name|'chunk'
op|':'
newline|'\n'
indent|'                '
name|'found_put'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'found_post'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'found_put'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'failures'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_and_missing_check
dedent|''
name|'def'
name|'test_call_and_missing_check'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|yield_hashes
indent|'        '
name|'def'
name|'yield_hashes'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'policy'
op|','
name|'suffixes'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'device'
op|'=='
string|"'dev'"
name|'and'
name|'partition'
op|'=='
string|"'9'"
name|'and'
name|'suffixes'
op|'=='
op|'['
string|"'abc'"
op|']'
name|'and'
name|'policy'
op|'=='
name|'POLICIES'
op|'.'
name|'legacy'
op|':'
newline|'\n'
indent|'                '
name|'yield'
op|'('
nl|'\n'
string|"'/srv/node/dev/objects/9/abc/'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'No match for %r %r %r'"
op|'%'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'suffixes'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'node'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
string|"'dev'"
op|','
nl|'\n'
string|"'partition'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
string|"'frag_index'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':MISSING_CHECK: START\\r\\n'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc d\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'yield_hashes'
op|'='
name|'yield_hashes'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'disconnect'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'self'
op|'.'
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'candidates'
op|','
nl|'\n'
name|'dict'
op|'('
op|'['
op|'('
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'failures'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_and_missing_check_with_obj_list
dedent|''
name|'def'
name|'test_call_and_missing_check_with_obj_list'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|yield_hashes
indent|'        '
name|'def'
name|'yield_hashes'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'policy'
op|','
name|'suffixes'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'device'
op|'=='
string|"'dev'"
name|'and'
name|'partition'
op|'=='
string|"'9'"
name|'and'
name|'suffixes'
op|'=='
op|'['
string|"'abc'"
op|']'
name|'and'
name|'policy'
op|'=='
name|'POLICIES'
op|'.'
name|'legacy'
op|':'
newline|'\n'
indent|'                '
name|'yield'
op|'('
nl|'\n'
string|"'/srv/node/dev/objects/9/abc/'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'No match for %r %r %r'"
op|'%'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'suffixes'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
string|"'dev'"
op|','
nl|'\n'
string|"'partition'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
string|"'frag_index'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'None'
op|','
name|'job'
op|','
op|'['
string|"'abc'"
op|']'
op|','
nl|'\n'
op|'['
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':MISSING_CHECK: START\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'yield_hashes'
op|'='
name|'yield_hashes'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'disconnect'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'self'
op|'.'
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'candidates'
op|','
nl|'\n'
name|'dict'
op|'('
op|'['
op|'('
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'failures'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_and_missing_check_with_obj_list_but_required
dedent|''
name|'def'
name|'test_call_and_missing_check_with_obj_list_but_required'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|yield_hashes
indent|'        '
name|'def'
name|'yield_hashes'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'policy'
op|','
name|'suffixes'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'device'
op|'=='
string|"'dev'"
name|'and'
name|'partition'
op|'=='
string|"'9'"
name|'and'
name|'suffixes'
op|'=='
op|'['
string|"'abc'"
op|']'
name|'and'
name|'policy'
op|'=='
name|'POLICIES'
op|'.'
name|'legacy'
op|':'
newline|'\n'
indent|'                '
name|'yield'
op|'('
nl|'\n'
string|"'/srv/node/dev/objects/9/abc/'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'No match for %r %r %r'"
op|'%'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'suffixes'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
string|"'dev'"
op|','
nl|'\n'
string|"'partition'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
string|"'frag_index'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
op|'{'
op|'}'
op|','
name|'job'
op|','
op|'['
string|"'abc'"
op|']'
op|','
nl|'\n'
op|'['
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':MISSING_CHECK: START\\r\\n'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc d\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'yield_hashes'
op|'='
name|'yield_hashes'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connect'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'disconnect'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'self'
op|'.'
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'candidates'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connect_send_timeout
dedent|''
name|'def'
name|'test_connect_send_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'node_timeout'
op|'='
number|'0.01'
comment|'# make disconnect fail fast'
newline|'\n'
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'conn_timeout'
op|'='
number|'0.01'
newline|'\n'
name|'node'
op|'='
name|'dict'
op|'('
name|'replication_ip'
op|'='
string|"'1.2.3.4'"
op|','
name|'replication_port'
op|'='
number|'5678'
op|','
nl|'\n'
name|'device'
op|'='
string|"'sda1'"
op|')'
newline|'\n'
name|'job'
op|'='
name|'dict'
op|'('
name|'partition'
op|'='
string|"'9'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
nl|'\n'
DECL|function|putrequest
name|'def'
name|'putrequest'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0.1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'ssync_sender'
op|'.'
name|'bufferedhttp'
op|'.'
name|'BufferedHTTPConnection'
op|','
nl|'\n'
string|"'putrequest'"
op|','
name|'putrequest'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|','
name|'candidates'
op|'='
name|'self'
op|'.'
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'candidates'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'error_lines'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'error_lines'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'line'
op|'.'
name|'startswith'
op|'('
nl|'\n'
string|"'1.2.3.4:5678/sda1/9 0.01 seconds: connect send'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connect_receive_timeout
dedent|''
dedent|''
name|'def'
name|'test_connect_receive_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'node_timeout'
op|'='
number|'0.02'
newline|'\n'
name|'node'
op|'='
name|'dict'
op|'('
name|'replication_ip'
op|'='
string|"'1.2.3.4'"
op|','
name|'replication_port'
op|'='
number|'5678'
op|','
nl|'\n'
name|'device'
op|'='
string|"'sda1'"
op|','
name|'index'
op|'='
number|'0'
op|')'
newline|'\n'
name|'job'
op|'='
name|'dict'
op|'('
name|'partition'
op|'='
string|"'9'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
nl|'\n'
DECL|class|FakeBufferedHTTPConnection
name|'class'
name|'FakeBufferedHTTPConnection'
op|'('
name|'NullBufferedHTTPConnection'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|getresponse
indent|'            '
name|'def'
name|'getresponse'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'0.1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'ssync_sender'
op|'.'
name|'bufferedhttp'
op|','
string|"'BufferedHTTPConnection'"
op|','
nl|'\n'
name|'FakeBufferedHTTPConnection'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|','
name|'candidates'
op|'='
name|'self'
op|'.'
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'candidates'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'error_lines'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'error_lines'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'line'
op|'.'
name|'startswith'
op|'('
nl|'\n'
string|"'1.2.3.4:5678/sda1/9 0.02 seconds: connect receive'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connect_bad_status
dedent|''
dedent|''
name|'def'
name|'test_connect_bad_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'node_timeout'
op|'='
number|'0.02'
newline|'\n'
name|'node'
op|'='
name|'dict'
op|'('
name|'replication_ip'
op|'='
string|"'1.2.3.4'"
op|','
name|'replication_port'
op|'='
number|'5678'
op|','
nl|'\n'
name|'device'
op|'='
string|"'sda1'"
op|','
name|'index'
op|'='
number|'0'
op|')'
newline|'\n'
name|'job'
op|'='
name|'dict'
op|'('
name|'partition'
op|'='
string|"'9'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'legacy'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeBufferedHTTPConnection
name|'class'
name|'FakeBufferedHTTPConnection'
op|'('
name|'NullBufferedHTTPConnection'
op|')'
op|':'
newline|'\n'
DECL|member|getresponse
indent|'            '
name|'def'
name|'getresponse'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'response'
op|'='
name|'FakeResponse'
op|'('
op|')'
newline|'\n'
name|'response'
op|'.'
name|'status'
op|'='
number|'503'
newline|'\n'
name|'response'
op|'.'
name|'read'
op|'='
name|'lambda'
op|':'
string|"'an error message'"
newline|'\n'
name|'return'
name|'response'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'missing_check_fn'
op|'='
string|"'swift.obj.ssync_sender.Sender.missing_check'"
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
name|'missing_check_fn'
op|')'
name|'as'
name|'mock_missing_check'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
nl|'\n'
name|'ssync_sender'
op|'.'
name|'bufferedhttp'
op|','
string|"'BufferedHTTPConnection'"
op|','
nl|'\n'
name|'FakeBufferedHTTPConnection'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
op|'['
string|"'abc'"
op|']'
op|')'
newline|'\n'
name|'success'
op|','
name|'candidates'
op|'='
name|'self'
op|'.'
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'success'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'candidates'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'error_lines'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'error_lines'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'line'
op|'.'
name|'startswith'
op|'('
nl|'\n'
string|"'1.2.3.4:5678/sda1/9 Expected status 200; got 503'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'an error message'"
op|','
name|'line'
op|')'
newline|'\n'
comment|'# sanity check that Sender did not proceed to missing_check exchange'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'mock_missing_check'
op|'.'
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_readline_newline_in_buffer
dedent|''
name|'def'
name|'test_readline_newline_in_buffer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response_buffer'
op|'='
string|"'Has a newline already.\\r\\nOkay.'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|'('
op|')'
op|','
string|"'Has a newline already.\\r\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response_buffer'
op|','
string|"'Okay.'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_readline_buffer_exceeds_network_chunk_size_somehow
dedent|''
name|'def'
name|'test_readline_buffer_exceeds_network_chunk_size_somehow'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'network_chunk_size'
op|'='
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response_buffer'
op|'='
string|"'1234567890'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|'('
op|')'
op|','
string|"'1234567890'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response_buffer'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_readline_at_start_of_chunk
dedent|''
name|'def'
name|'test_readline_at_start_of_chunk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'.'
name|'fp'
op|'='
name|'six'
op|'.'
name|'StringIO'
op|'('
string|"'2\\r\\nx\\n\\r\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|'('
op|')'
op|','
string|"'x\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_readline_chunk_with_extension
dedent|''
name|'def'
name|'test_readline_chunk_with_extension'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'.'
name|'fp'
op|'='
name|'six'
op|'.'
name|'StringIO'
op|'('
nl|'\n'
string|"'2 ; chunk=extension\\r\\nx\\n\\r\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|'('
op|')'
op|','
string|"'x\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_readline_broken_chunk
dedent|''
name|'def'
name|'test_readline_broken_chunk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'.'
name|'fp'
op|'='
name|'six'
op|'.'
name|'StringIO'
op|'('
string|"'q\\r\\nx\\n\\r\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exceptions'
op|'.'
name|'ReplicationException'
op|','
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'.'
name|'close_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_readline_terminated_chunk
dedent|''
name|'def'
name|'test_readline_terminated_chunk'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'.'
name|'fp'
op|'='
name|'six'
op|'.'
name|'StringIO'
op|'('
string|"'b\\r\\nnot enough'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
nl|'\n'
name|'exceptions'
op|'.'
name|'ReplicationException'
op|','
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'.'
name|'close_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_readline_all
dedent|''
name|'def'
name|'test_readline_all'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'.'
name|'fp'
op|'='
name|'six'
op|'.'
name|'StringIO'
op|'('
string|"'2\\r\\nx\\n\\r\\n0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|'('
op|')'
op|','
string|"'x\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|'('
op|')'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|'('
op|')'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_readline_all_trailing_not_newline_termed
dedent|''
name|'def'
name|'test_readline_all_trailing_not_newline_termed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'.'
name|'fp'
op|'='
name|'six'
op|'.'
name|'StringIO'
op|'('
nl|'\n'
string|"'2\\r\\nx\\n\\r\\n3\\r\\n123\\r\\n0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|'('
op|')'
op|','
string|"'x\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|'('
op|')'
op|','
string|"'123'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|'('
op|')'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|'('
op|')'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_missing_check_timeout
dedent|''
name|'def'
name|'test_missing_check_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'send'
op|'='
name|'lambda'
name|'d'
op|':'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'node_timeout'
op|'='
number|'0.01'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exceptions'
op|'.'
name|'MessageTimeout'
op|','
name|'self'
op|'.'
name|'sender'
op|'.'
name|'missing_check'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_missing_check_has_empty_suffixes
dedent|''
name|'def'
name|'test_missing_check_has_empty_suffixes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|yield_hashes
indent|'        '
name|'def'
name|'yield_hashes'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'policy'
op|','
name|'suffixes'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'device'
op|'!='
string|"'dev'"
name|'or'
name|'partition'
op|'!='
string|"'9'"
name|'or'
nl|'\n'
name|'policy'
op|'!='
name|'POLICIES'
op|'.'
name|'legacy'
name|'or'
nl|'\n'
name|'suffixes'
op|'!='
op|'['
string|"'abc'"
op|','
string|"'def'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'yield'
comment|'# Just here to make this a generator'
newline|'\n'
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'No match for %r %r %r %r'"
op|'%'
op|'('
name|'device'
op|','
name|'partition'
op|','
nl|'\n'
name|'policy'
op|','
name|'suffixes'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
string|"'dev'"
op|','
nl|'\n'
string|"'partition'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|','
string|"'def'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':MISSING_CHECK: START\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'yield_hashes'
op|'='
name|'yield_hashes'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'missing_check'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'17\\r\\n:MISSING_CHECK: START\\r\\n\\r\\n'"
nl|'\n'
string|"'15\\r\\n:MISSING_CHECK: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'available_map'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_missing_check_has_suffixes
dedent|''
name|'def'
name|'test_missing_check_has_suffixes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|yield_hashes
indent|'        '
name|'def'
name|'yield_hashes'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'policy'
op|','
name|'suffixes'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'device'
op|'=='
string|"'dev'"
name|'and'
name|'partition'
op|'=='
string|"'9'"
name|'and'
nl|'\n'
name|'policy'
op|'=='
name|'POLICIES'
op|'.'
name|'legacy'
name|'and'
nl|'\n'
name|'suffixes'
op|'=='
op|'['
string|"'abc'"
op|','
string|"'def'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'yield'
op|'('
nl|'\n'
string|"'/srv/node/dev/objects/9/abc/'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
newline|'\n'
name|'yield'
op|'('
nl|'\n'
string|"'/srv/node/dev/objects/9/def/'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0def'"
op|','
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0def'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144472.22222'
op|')'
op|'}'
op|')'
newline|'\n'
name|'yield'
op|'('
nl|'\n'
string|"'/srv/node/dev/objects/9/def/'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf1def'"
op|','
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf1def'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144474.44444'
op|')'
op|','
nl|'\n'
string|"'ts_meta'"
op|':'
name|'Timestamp'
op|'('
number|'1380144475.44444'
op|')'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'No match for %r %r %r %r'"
op|'%'
op|'('
name|'device'
op|','
name|'partition'
op|','
nl|'\n'
name|'policy'
op|','
name|'suffixes'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
string|"'dev'"
op|','
nl|'\n'
string|"'partition'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|','
string|"'def'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':MISSING_CHECK: START\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'yield_hashes'
op|'='
name|'yield_hashes'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'missing_check'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'17\\r\\n:MISSING_CHECK: START\\r\\n\\r\\n'"
nl|'\n'
string|"'33\\r\\n9d41d8cd98f00b204e9800998ecf0abc 1380144470.00000\\r\\n\\r\\n'"
nl|'\n'
string|"'33\\r\\n9d41d8cd98f00b204e9800998ecf0def 1380144472.22222\\r\\n\\r\\n'"
nl|'\n'
string|"'3b\\r\\n9d41d8cd98f00b204e9800998ecf1def 1380144474.44444 '"
nl|'\n'
string|"'m:186a0\\r\\n\\r\\n'"
nl|'\n'
string|"'15\\r\\n:MISSING_CHECK: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'candidates'
op|'='
op|'['
op|'('
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
name|'dict'
op|'('
name|'ts_data'
op|'='
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'9d41d8cd98f00b204e9800998ecf0def'"
op|','
nl|'\n'
name|'dict'
op|'('
name|'ts_data'
op|'='
name|'Timestamp'
op|'('
number|'1380144472.22222'
op|')'
op|')'
op|')'
op|','
nl|'\n'
op|'('
string|"'9d41d8cd98f00b204e9800998ecf1def'"
op|','
nl|'\n'
name|'dict'
op|'('
name|'ts_data'
op|'='
name|'Timestamp'
op|'('
number|'1380144474.44444'
op|')'
op|','
nl|'\n'
name|'ts_meta'
op|'='
name|'Timestamp'
op|'('
number|'1380144475.44444'
op|')'
op|')'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'available_map'
op|','
name|'dict'
op|'('
name|'candidates'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_missing_check_far_end_disconnect
dedent|''
name|'def'
name|'test_missing_check_far_end_disconnect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|yield_hashes
indent|'        '
name|'def'
name|'yield_hashes'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'policy'
op|','
name|'suffixes'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'device'
op|'=='
string|"'dev'"
name|'and'
name|'partition'
op|'=='
string|"'9'"
name|'and'
nl|'\n'
name|'policy'
op|'=='
name|'POLICIES'
op|'.'
name|'legacy'
name|'and'
nl|'\n'
name|'suffixes'
op|'=='
op|'['
string|"'abc'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'yield'
op|'('
nl|'\n'
string|"'/srv/node/dev/objects/9/abc/'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'No match for %r %r %r %r'"
op|'%'
op|'('
name|'device'
op|','
name|'partition'
op|','
nl|'\n'
name|'policy'
op|','
name|'suffixes'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
string|"'dev'"
op|','
nl|'\n'
string|"'partition'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'yield_hashes'
op|'='
name|'yield_hashes'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
name|'chunk_body'
op|'='
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'missing_check'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'ReplicationException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'exc'
op|')'
op|','
string|"'Early disconnect'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'17\\r\\n:MISSING_CHECK: START\\r\\n\\r\\n'"
nl|'\n'
string|"'33\\r\\n9d41d8cd98f00b204e9800998ecf0abc 1380144470.00000\\r\\n\\r\\n'"
nl|'\n'
string|"'15\\r\\n:MISSING_CHECK: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'available_map'
op|','
nl|'\n'
name|'dict'
op|'('
op|'['
op|'('
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
name|'dict'
op|'('
name|'ts_data'
op|'='
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|')'
op|')'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_missing_check_far_end_disconnect2
dedent|''
name|'def'
name|'test_missing_check_far_end_disconnect2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|yield_hashes
indent|'        '
name|'def'
name|'yield_hashes'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'policy'
op|','
name|'suffixes'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'device'
op|'=='
string|"'dev'"
name|'and'
name|'partition'
op|'=='
string|"'9'"
name|'and'
nl|'\n'
name|'policy'
op|'=='
name|'POLICIES'
op|'.'
name|'legacy'
name|'and'
nl|'\n'
name|'suffixes'
op|'=='
op|'['
string|"'abc'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'yield'
op|'('
nl|'\n'
string|"'/srv/node/dev/objects/9/abc/'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'No match for %r %r %r %r'"
op|'%'
op|'('
name|'device'
op|','
name|'partition'
op|','
nl|'\n'
name|'policy'
op|','
name|'suffixes'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
string|"'dev'"
op|','
nl|'\n'
string|"'partition'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'yield_hashes'
op|'='
name|'yield_hashes'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
string|"':MISSING_CHECK: START\\r\\n'"
op|')'
newline|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'missing_check'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'ReplicationException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'exc'
op|')'
op|','
string|"'Early disconnect'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'17\\r\\n:MISSING_CHECK: START\\r\\n\\r\\n'"
nl|'\n'
string|"'33\\r\\n9d41d8cd98f00b204e9800998ecf0abc 1380144470.00000\\r\\n\\r\\n'"
nl|'\n'
string|"'15\\r\\n:MISSING_CHECK: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'available_map'
op|','
nl|'\n'
name|'dict'
op|'('
op|'['
op|'('
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_missing_check_far_end_unexpected
dedent|''
name|'def'
name|'test_missing_check_far_end_unexpected'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|yield_hashes
indent|'        '
name|'def'
name|'yield_hashes'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'policy'
op|','
name|'suffixes'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'device'
op|'=='
string|"'dev'"
name|'and'
name|'partition'
op|'=='
string|"'9'"
name|'and'
nl|'\n'
name|'policy'
op|'=='
name|'POLICIES'
op|'.'
name|'legacy'
name|'and'
nl|'\n'
name|'suffixes'
op|'=='
op|'['
string|"'abc'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'yield'
op|'('
nl|'\n'
string|"'/srv/node/dev/objects/9/abc/'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'No match for %r %r %r %r'"
op|'%'
op|'('
name|'device'
op|','
name|'partition'
op|','
nl|'\n'
name|'policy'
op|','
name|'suffixes'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
string|"'dev'"
op|','
nl|'\n'
string|"'partition'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'yield_hashes'
op|'='
name|'yield_hashes'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
name|'chunk_body'
op|'='
string|"'OH HAI\\r\\n'"
op|')'
newline|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'missing_check'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'ReplicationException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'exc'
op|')'
op|','
string|'"Unexpected response: \'OH HAI\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'17\\r\\n:MISSING_CHECK: START\\r\\n\\r\\n'"
nl|'\n'
string|"'33\\r\\n9d41d8cd98f00b204e9800998ecf0abc 1380144470.00000\\r\\n\\r\\n'"
nl|'\n'
string|"'15\\r\\n:MISSING_CHECK: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'available_map'
op|','
nl|'\n'
name|'dict'
op|'('
op|'['
op|'('
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_missing_check_send_map
dedent|''
name|'def'
name|'test_missing_check_send_map'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|yield_hashes
indent|'        '
name|'def'
name|'yield_hashes'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'policy'
op|','
name|'suffixes'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'device'
op|'=='
string|"'dev'"
name|'and'
name|'partition'
op|'=='
string|"'9'"
name|'and'
nl|'\n'
name|'policy'
op|'=='
name|'POLICIES'
op|'.'
name|'legacy'
name|'and'
nl|'\n'
name|'suffixes'
op|'=='
op|'['
string|"'abc'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'yield'
op|'('
nl|'\n'
string|"'/srv/node/dev/objects/9/abc/'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'No match for %r %r %r %r'"
op|'%'
op|'('
name|'device'
op|','
name|'partition'
op|','
nl|'\n'
name|'policy'
op|','
name|'suffixes'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
string|"'dev'"
op|','
nl|'\n'
string|"'partition'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':MISSING_CHECK: START\\r\\n'"
nl|'\n'
string|"'0123abc dm\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'yield_hashes'
op|'='
name|'yield_hashes'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'missing_check'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'17\\r\\n:MISSING_CHECK: START\\r\\n\\r\\n'"
nl|'\n'
string|"'33\\r\\n9d41d8cd98f00b204e9800998ecf0abc 1380144470.00000\\r\\n\\r\\n'"
nl|'\n'
string|"'15\\r\\n:MISSING_CHECK: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|','
op|'{'
string|"'0123abc'"
op|':'
op|'{'
string|"'data'"
op|':'
name|'True'
op|','
string|"'meta'"
op|':'
name|'True'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'available_map'
op|','
nl|'\n'
name|'dict'
op|'('
op|'['
op|'('
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_missing_check_extra_line_parts
dedent|''
name|'def'
name|'test_missing_check_extra_line_parts'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# check that sender tolerates extra parts in missing check'
nl|'\n'
comment|'# line responses to allow for protocol upgrades'
nl|'\n'
DECL|function|yield_hashes
indent|'        '
name|'def'
name|'yield_hashes'
op|'('
name|'device'
op|','
name|'partition'
op|','
name|'policy'
op|','
name|'suffixes'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'device'
op|'=='
string|"'dev'"
name|'and'
name|'partition'
op|'=='
string|"'9'"
name|'and'
nl|'\n'
name|'policy'
op|'=='
name|'POLICIES'
op|'.'
name|'legacy'
name|'and'
nl|'\n'
name|'suffixes'
op|'=='
op|'['
string|"'abc'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'yield'
op|'('
nl|'\n'
string|"'/srv/node/dev/objects/9/abc/'"
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
nl|'\n'
string|"'No match for %r %r %r %r'"
op|'%'
op|'('
name|'device'
op|','
name|'partition'
op|','
nl|'\n'
name|'policy'
op|','
name|'suffixes'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
string|"'dev'"
op|','
nl|'\n'
string|"'partition'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'abc'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':MISSING_CHECK: START\\r\\n'"
nl|'\n'
string|"'0123abc d extra response parts\\r\\n'"
nl|'\n'
string|"':MISSING_CHECK: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_mgr'
op|'.'
name|'yield_hashes'
op|'='
name|'yield_hashes'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'missing_check'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|','
nl|'\n'
op|'{'
string|"'0123abc'"
op|':'
op|'{'
string|"'data'"
op|':'
name|'True'
op|'}'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'available_map'
op|','
nl|'\n'
name|'dict'
op|'('
op|'['
op|'('
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
op|','
nl|'\n'
op|'{'
string|"'ts_data'"
op|':'
name|'Timestamp'
op|'('
number|'1380144470.00000'
op|')'
op|'}'
op|')'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_timeout
dedent|''
name|'def'
name|'test_updates_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'send'
op|'='
name|'lambda'
name|'d'
op|':'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'node_timeout'
op|'='
number|'0.01'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exceptions'
op|'.'
name|'MessageTimeout'
op|','
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_empty_send_map
dedent|''
name|'def'
name|'test_updates_empty_send_map'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'11\\r\\n:UPDATES: START\\r\\n\\r\\n'"
nl|'\n'
string|"'f\\r\\n:UPDATES: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_unexpected_response_lines1
dedent|''
name|'def'
name|'test_updates_unexpected_response_lines1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"'abc\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'ReplicationException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'exc'
op|')'
op|','
string|'"Unexpected response: \'abc\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'11\\r\\n:UPDATES: START\\r\\n\\r\\n'"
nl|'\n'
string|"'f\\r\\n:UPDATES: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_unexpected_response_lines2
dedent|''
name|'def'
name|'test_updates_unexpected_response_lines2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'abc\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'ReplicationException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'exc'
op|')'
op|','
string|'"Unexpected response: \'abc\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'11\\r\\n:UPDATES: START\\r\\n\\r\\n'"
nl|'\n'
string|"'f\\r\\n:UPDATES: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_is_deleted
dedent|''
name|'def'
name|'test_updates_is_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'device'
op|'='
string|"'dev'"
newline|'\n'
name|'part'
op|'='
string|"'9'"
newline|'\n'
name|'object_parts'
op|'='
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'_make_open_diskfile'
op|'('
name|'device'
op|','
name|'part'
op|','
op|'*'
name|'object_parts'
op|')'
newline|'\n'
name|'object_hash'
op|'='
name|'utils'
op|'.'
name|'hash_path'
op|'('
op|'*'
name|'object_parts'
op|')'
newline|'\n'
name|'delete_timestamp'
op|'='
name|'utils'
op|'.'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
name|'df'
op|'.'
name|'delete'
op|'('
name|'delete_timestamp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
name|'device'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'part'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
string|"'frag_index'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'node'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
name|'object_hash'
op|':'
op|'{'
string|"'data'"
op|':'
name|'True'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_delete'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_delete'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
string|"'/a/c/o'"
op|','
name|'delete_timestamp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'.'
name|'mock_calls'
op|','
op|'['
op|']'
op|')'
newline|'\n'
comment|"# note that the delete line isn't actually sent since we mock"
nl|'\n'
comment|'# send_delete; send_delete is tested separately.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'11\\r\\n:UPDATES: START\\r\\n\\r\\n'"
nl|'\n'
string|"'f\\r\\n:UPDATES: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_send_delete
dedent|''
name|'def'
name|'test_update_send_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'device'
op|'='
string|"'dev'"
newline|'\n'
name|'part'
op|'='
string|"'9'"
newline|'\n'
name|'object_parts'
op|'='
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'_make_open_diskfile'
op|'('
name|'device'
op|','
name|'part'
op|','
op|'*'
name|'object_parts'
op|')'
newline|'\n'
name|'object_hash'
op|'='
name|'utils'
op|'.'
name|'hash_path'
op|'('
op|'*'
name|'object_parts'
op|')'
newline|'\n'
name|'delete_timestamp'
op|'='
name|'utils'
op|'.'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
name|'df'
op|'.'
name|'delete'
op|'('
name|'delete_timestamp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
name|'device'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'part'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
string|"'frag_index'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'node'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
name|'object_hash'
op|':'
op|'{'
string|"'data'"
op|':'
name|'True'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'11\\r\\n:UPDATES: START\\r\\n\\r\\n'"
nl|'\n'
string|"'30\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n'"
nl|'\n'
string|"'X-Timestamp: %s\\r\\n\\r\\n\\r\\n'"
nl|'\n'
string|"'f\\r\\n:UPDATES: END\\r\\n\\r\\n'"
nl|'\n'
op|'%'
name|'delete_timestamp'
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_put
dedent|''
name|'def'
name|'test_updates_put'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# sender has data file and meta file'
nl|'\n'
indent|'        '
name|'ts_iter'
op|'='
name|'make_timestamp_iter'
op|'('
op|')'
newline|'\n'
name|'device'
op|'='
string|"'dev'"
newline|'\n'
name|'part'
op|'='
string|"'9'"
newline|'\n'
name|'object_parts'
op|'='
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'t1'
op|'='
name|'next'
op|'('
name|'ts_iter'
op|')'
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'_make_open_diskfile'
op|'('
nl|'\n'
name|'device'
op|','
name|'part'
op|','
op|'*'
name|'object_parts'
op|','
name|'timestamp'
op|'='
name|'t1'
op|')'
newline|'\n'
name|'t2'
op|'='
name|'next'
op|'('
name|'ts_iter'
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t2'
op|'.'
name|'internal'
op|','
string|"'X-Object-Meta-Fruit'"
op|':'
string|"'kiwi'"
op|'}'
newline|'\n'
name|'df'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'object_hash'
op|'='
name|'utils'
op|'.'
name|'hash_path'
op|'('
op|'*'
name|'object_parts'
op|')'
newline|'\n'
name|'df'
op|'.'
name|'open'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
name|'df'
op|'.'
name|'get_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
name|'device'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'part'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
string|"'frag_index'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'node'
op|'='
op|'{'
op|'}'
newline|'\n'
comment|'# receiver requested data only'
nl|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
name|'object_hash'
op|':'
op|'{'
string|"'data'"
op|':'
name|'True'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_delete'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_post'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_delete'
op|'.'
name|'mock_calls'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_post'
op|'.'
name|'mock_calls'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'.'
name|'mock_calls'
op|')'
op|')'
newline|'\n'
name|'args'
op|','
name|'_kwargs'
op|'='
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'.'
name|'call_args'
newline|'\n'
name|'path'
op|','
name|'df'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'path'
op|','
string|"'/a/c/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'df'
op|','
name|'diskfile'
op|'.'
name|'DiskFile'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'df'
op|'.'
name|'get_metadata'
op|'('
op|')'
op|')'
newline|'\n'
comment|"# note that the put line isn't actually sent since we mock send_put;"
nl|'\n'
comment|'# send_put is tested separately.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'11\\r\\n:UPDATES: START\\r\\n\\r\\n'"
nl|'\n'
string|"'f\\r\\n:UPDATES: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_post
dedent|''
name|'def'
name|'test_updates_post'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ts_iter'
op|'='
name|'make_timestamp_iter'
op|'('
op|')'
newline|'\n'
name|'device'
op|'='
string|"'dev'"
newline|'\n'
name|'part'
op|'='
string|"'9'"
newline|'\n'
name|'object_parts'
op|'='
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'t1'
op|'='
name|'next'
op|'('
name|'ts_iter'
op|')'
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'_make_open_diskfile'
op|'('
nl|'\n'
name|'device'
op|','
name|'part'
op|','
op|'*'
name|'object_parts'
op|','
name|'timestamp'
op|'='
name|'t1'
op|')'
newline|'\n'
name|'t2'
op|'='
name|'next'
op|'('
name|'ts_iter'
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t2'
op|'.'
name|'internal'
op|','
string|"'X-Object-Meta-Fruit'"
op|':'
string|"'kiwi'"
op|'}'
newline|'\n'
name|'df'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'object_hash'
op|'='
name|'utils'
op|'.'
name|'hash_path'
op|'('
op|'*'
name|'object_parts'
op|')'
newline|'\n'
name|'df'
op|'.'
name|'open'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
name|'df'
op|'.'
name|'get_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
name|'device'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'part'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
string|"'frag_index'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'node'
op|'='
op|'{'
op|'}'
newline|'\n'
comment|'# receiver requested only meta'
nl|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
name|'object_hash'
op|':'
op|'{'
string|"'meta'"
op|':'
name|'True'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_delete'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_post'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_delete'
op|'.'
name|'mock_calls'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'.'
name|'mock_calls'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_post'
op|'.'
name|'mock_calls'
op|')'
op|')'
newline|'\n'
name|'args'
op|','
name|'_kwargs'
op|'='
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_post'
op|'.'
name|'call_args'
newline|'\n'
name|'path'
op|','
name|'df'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'path'
op|','
string|"'/a/c/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'df'
op|','
name|'diskfile'
op|'.'
name|'DiskFile'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'df'
op|'.'
name|'get_metadata'
op|'('
op|')'
op|')'
newline|'\n'
comment|"# note that the post line isn't actually sent since we mock send_post;"
nl|'\n'
comment|'# send_post is tested separately.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'11\\r\\n:UPDATES: START\\r\\n\\r\\n'"
nl|'\n'
string|"'f\\r\\n:UPDATES: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_put_and_post
dedent|''
name|'def'
name|'test_updates_put_and_post'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ts_iter'
op|'='
name|'make_timestamp_iter'
op|'('
op|')'
newline|'\n'
name|'device'
op|'='
string|"'dev'"
newline|'\n'
name|'part'
op|'='
string|"'9'"
newline|'\n'
name|'object_parts'
op|'='
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'t1'
op|'='
name|'next'
op|'('
name|'ts_iter'
op|')'
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'_make_open_diskfile'
op|'('
nl|'\n'
name|'device'
op|','
name|'part'
op|','
op|'*'
name|'object_parts'
op|','
name|'timestamp'
op|'='
name|'t1'
op|')'
newline|'\n'
name|'t2'
op|'='
name|'next'
op|'('
name|'ts_iter'
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t2'
op|'.'
name|'internal'
op|','
string|"'X-Object-Meta-Fruit'"
op|':'
string|"'kiwi'"
op|'}'
newline|'\n'
name|'df'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'object_hash'
op|'='
name|'utils'
op|'.'
name|'hash_path'
op|'('
op|'*'
name|'object_parts'
op|')'
newline|'\n'
name|'df'
op|'.'
name|'open'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
name|'df'
op|'.'
name|'get_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
name|'device'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'part'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'legacy'
op|','
nl|'\n'
string|"'frag_index'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'node'
op|'='
op|'{'
op|'}'
newline|'\n'
comment|'# receiver requested data and meta'
nl|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
name|'object_hash'
op|':'
op|'{'
string|"'meta'"
op|':'
name|'True'
op|','
string|"'data'"
op|':'
name|'True'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_delete'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_post'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_delete'
op|'.'
name|'mock_calls'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'.'
name|'mock_calls'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_post'
op|'.'
name|'mock_calls'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'args'
op|','
name|'_kwargs'
op|'='
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'.'
name|'call_args'
newline|'\n'
name|'path'
op|','
name|'df'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'path'
op|','
string|"'/a/c/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'df'
op|','
name|'diskfile'
op|'.'
name|'DiskFile'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'df'
op|'.'
name|'get_metadata'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'args'
op|','
name|'_kwargs'
op|'='
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_post'
op|'.'
name|'call_args'
newline|'\n'
name|'path'
op|','
name|'df'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'path'
op|','
string|"'/a/c/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIsInstance'
op|'('
name|'df'
op|','
name|'diskfile'
op|'.'
name|'DiskFile'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'df'
op|'.'
name|'get_metadata'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'11\\r\\n:UPDATES: START\\r\\n\\r\\n'"
nl|'\n'
string|"'f\\r\\n:UPDATES: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_storage_policy_index
dedent|''
name|'def'
name|'test_updates_storage_policy_index'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'device'
op|'='
string|"'dev'"
newline|'\n'
name|'part'
op|'='
string|"'9'"
newline|'\n'
name|'object_parts'
op|'='
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'_make_open_diskfile'
op|'('
name|'device'
op|','
name|'part'
op|','
op|'*'
name|'object_parts'
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'object_hash'
op|'='
name|'utils'
op|'.'
name|'hash_path'
op|'('
op|'*'
name|'object_parts'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'df'
op|'.'
name|'get_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'device'"
op|':'
name|'device'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'part'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'frag_index'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'node'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
name|'object_hash'
op|':'
op|'{'
string|"'data'"
op|':'
name|'True'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_delete'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'('
op|')'
newline|'\n'
name|'args'
op|','
name|'_kwargs'
op|'='
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'.'
name|'call_args'
newline|'\n'
name|'path'
op|','
name|'df'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'path'
op|','
string|"'/a/c/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'df'
op|','
name|'diskfile'
op|'.'
name|'DiskFile'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'df'
op|'.'
name|'get_metadata'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'dev/objects/9/'"
op|','
nl|'\n'
name|'object_hash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
op|','
name|'object_hash'
op|')'
op|','
nl|'\n'
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_read_response_timeout_start
dedent|''
name|'def'
name|'test_updates_read_response_timeout_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'orig_readline'
op|'='
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
newline|'\n'
nl|'\n'
DECL|function|delayed_readline
name|'def'
name|'delayed_readline'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
name|'return'
name|'orig_readline'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|'='
name|'delayed_readline'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'http_timeout'
op|'='
number|'0.01'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exceptions'
op|'.'
name|'MessageTimeout'
op|','
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_read_response_disconnect_start
dedent|''
name|'def'
name|'test_updates_read_response_disconnect_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
name|'chunk_body'
op|'='
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'ReplicationException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'exc'
op|')'
op|','
string|"'Early disconnect'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'11\\r\\n:UPDATES: START\\r\\n\\r\\n'"
nl|'\n'
string|"'f\\r\\n:UPDATES: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_read_response_unexp_start
dedent|''
name|'def'
name|'test_updates_read_response_unexp_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"'anything else\\r\\n'"
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'ReplicationException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'exc'
op|')'
op|','
string|'"Unexpected response: \'anything else\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'11\\r\\n:UPDATES: START\\r\\n\\r\\n'"
nl|'\n'
string|"'f\\r\\n:UPDATES: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_read_response_timeout_end
dedent|''
name|'def'
name|'test_updates_read_response_timeout_end'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'orig_readline'
op|'='
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
newline|'\n'
nl|'\n'
DECL|function|delayed_readline
name|'def'
name|'delayed_readline'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rv'
op|'='
name|'orig_readline'
op|'('
op|')'
newline|'\n'
name|'if'
name|'rv'
op|'=='
string|"':UPDATES: END\\r\\n'"
op|':'
newline|'\n'
indent|'                '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'sender'
op|'.'
name|'readline'
op|'='
name|'delayed_readline'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'http_timeout'
op|'='
number|'0.01'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exceptions'
op|'.'
name|'MessageTimeout'
op|','
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_read_response_disconnect_end
dedent|''
name|'def'
name|'test_updates_read_response_disconnect_end'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'ReplicationException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'exc'
op|')'
op|','
string|"'Early disconnect'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'11\\r\\n:UPDATES: START\\r\\n\\r\\n'"
nl|'\n'
string|"'f\\r\\n:UPDATES: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_updates_read_response_unexp_end
dedent|''
name|'def'
name|'test_updates_read_response_unexp_end'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'response'
op|'='
name|'FakeResponse'
op|'('
nl|'\n'
name|'chunk_body'
op|'='
op|'('
nl|'\n'
string|"':UPDATES: START\\r\\n'"
nl|'\n'
string|"'anything else\\r\\n'"
nl|'\n'
string|"':UPDATES: END\\r\\n'"
op|')'
op|')'
newline|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'updates'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'ReplicationException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'exc'
op|')'
op|','
string|'"Unexpected response: \'anything else\'"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'11\\r\\n:UPDATES: START\\r\\n\\r\\n'"
nl|'\n'
string|"'f\\r\\n:UPDATES: END\\r\\n\\r\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_send_delete_timeout
dedent|''
name|'def'
name|'test_send_delete_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'send'
op|'='
name|'lambda'
name|'d'
op|':'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'node_timeout'
op|'='
number|'0.01'
newline|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_delete'
op|'('
string|"'/a/c/o'"
op|','
nl|'\n'
name|'utils'
op|'.'
name|'Timestamp'
op|'('
string|"'1381679759.90941'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'MessageTimeout'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'exc'
op|')'
op|','
string|"'0.01 seconds: send_delete'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_send_delete
dedent|''
name|'def'
name|'test_send_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_delete'
op|'('
string|"'/a/c/o'"
op|','
nl|'\n'
name|'utils'
op|'.'
name|'Timestamp'
op|'('
string|"'1381679759.90941'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'30\\r\\n'"
nl|'\n'
string|"'DELETE /a/c/o\\r\\n'"
nl|'\n'
string|"'X-Timestamp: 1381679759.90941\\r\\n'"
nl|'\n'
string|"'\\r\\n\\r\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_send_put_initial_timeout
dedent|''
name|'def'
name|'test_send_put_initial_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'df'
op|'='
name|'self'
op|'.'
name|'_make_open_diskfile'
op|'('
op|')'
newline|'\n'
name|'df'
op|'.'
name|'_disk_chunk_size'
op|'='
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'send'
op|'='
name|'lambda'
name|'d'
op|':'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'node_timeout'
op|'='
number|'0.01'
newline|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'('
string|"'/a/c/o'"
op|','
name|'df'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'MessageTimeout'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'exc'
op|')'
op|','
string|"'0.01 seconds: send_put'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_send_put_chunk_timeout
dedent|''
name|'def'
name|'test_send_put_chunk_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'df'
op|'='
name|'self'
op|'.'
name|'_make_open_diskfile'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'node_timeout'
op|'='
number|'0.01'
newline|'\n'
nl|'\n'
name|'one_shot'
op|'='
op|'['
name|'None'
op|']'
newline|'\n'
nl|'\n'
DECL|function|mock_send
name|'def'
name|'mock_send'
op|'('
name|'data'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'one_shot'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'IndexError'
op|':'
newline|'\n'
indent|'                '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'send'
op|'='
name|'mock_send'
newline|'\n'
nl|'\n'
name|'exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'('
string|"'/a/c/o'"
op|','
name|'df'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exceptions'
op|'.'
name|'MessageTimeout'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'exc'
op|'='
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'exc'
op|')'
op|','
string|"'0.01 seconds: send_put chunk'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_send_put
dedent|''
name|'def'
name|'test_send_put'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ts_iter'
op|'='
name|'make_timestamp_iter'
op|'('
op|')'
newline|'\n'
name|'t1'
op|'='
name|'next'
op|'('
name|'ts_iter'
op|')'
newline|'\n'
name|'body'
op|'='
string|"'test'"
newline|'\n'
name|'extra_metadata'
op|'='
op|'{'
string|"'Some-Other-Header'"
op|':'
string|"'value'"
op|'}'
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'_make_open_diskfile'
op|'('
name|'body'
op|'='
name|'body'
op|','
name|'timestamp'
op|'='
name|'t1'
op|','
nl|'\n'
name|'extra_metadata'
op|'='
name|'extra_metadata'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'dict'
op|'('
name|'df'
op|'.'
name|'get_metadata'
op|'('
op|')'
op|')'
newline|'\n'
name|'expected'
op|'['
string|"'body'"
op|']'
op|'='
name|'body'
newline|'\n'
name|'expected'
op|'['
string|"'chunk_size'"
op|']'
op|'='
name|'len'
op|'('
name|'body'
op|')'
newline|'\n'
comment|'# .meta file metadata is not included in expected for data only PUT'
nl|'\n'
name|'t2'
op|'='
name|'next'
op|'('
name|'ts_iter'
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t2'
op|'.'
name|'internal'
op|','
string|"'X-Object-Meta-Fruit'"
op|':'
string|"'kiwi'"
op|'}'
newline|'\n'
name|'df'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'df'
op|'.'
name|'open'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_put'
op|'('
string|"'/a/c/o'"
op|','
name|'df'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'82\\r\\n'"
nl|'\n'
string|"'PUT /a/c/o\\r\\n'"
nl|'\n'
string|"'Content-Length: %(Content-Length)s\\r\\n'"
nl|'\n'
string|"'ETag: %(ETag)s\\r\\n'"
nl|'\n'
string|"'Some-Other-Header: value\\r\\n'"
nl|'\n'
string|"'X-Timestamp: %(X-Timestamp)s\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"'%(chunk_size)s\\r\\n'"
nl|'\n'
string|"'%(body)s\\r\\n'"
op|'%'
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_send_post
dedent|''
name|'def'
name|'test_send_post'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ts_iter'
op|'='
name|'make_timestamp_iter'
op|'('
op|')'
newline|'\n'
comment|'# create .data file'
nl|'\n'
name|'extra_metadata'
op|'='
op|'{'
string|"'X-Object-Meta-Foo'"
op|':'
string|"'old_value'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'test_sysmeta'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'test_content_type'"
op|'}'
newline|'\n'
name|'ts_0'
op|'='
name|'next'
op|'('
name|'ts_iter'
op|')'
newline|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'_make_open_diskfile'
op|'('
name|'extra_metadata'
op|'='
name|'extra_metadata'
op|','
nl|'\n'
name|'timestamp'
op|'='
name|'ts_0'
op|')'
newline|'\n'
comment|'# create .meta file'
nl|'\n'
name|'ts_1'
op|'='
name|'next'
op|'('
name|'ts_iter'
op|')'
newline|'\n'
name|'newer_metadata'
op|'='
op|'{'
string|"'X-Object-Meta-Foo'"
op|':'
string|"'new_value'"
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'ts_1'
op|'.'
name|'internal'
op|'}'
newline|'\n'
name|'df'
op|'.'
name|'write_metadata'
op|'('
name|'newer_metadata'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'with'
name|'df'
op|'.'
name|'open'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'send_post'
op|'('
string|"'/a/c/o'"
op|','
name|'df'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
nl|'\n'
string|"'4c\\r\\n'"
nl|'\n'
string|"'POST /a/c/o\\r\\n'"
nl|'\n'
string|"'X-Object-Meta-Foo: new_value\\r\\n'"
nl|'\n'
string|"'X-Timestamp: %s\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|'%'
name|'ts_1'
op|'.'
name|'internal'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disconnect_timeout
dedent|''
name|'def'
name|'test_disconnect_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'send'
op|'='
name|'lambda'
name|'d'
op|':'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'daemon'
op|'.'
name|'node_timeout'
op|'='
number|'0.01'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'disconnect'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'closed'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disconnect
dedent|''
name|'def'
name|'test_disconnect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'='
name|'FakeConnection'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sender'
op|'.'
name|'disconnect'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'sent'
op|')'
op|','
string|"'0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'closed'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestModuleMethods
dedent|''
dedent|''
name|'class'
name|'TestModuleMethods'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_encode_missing
indent|'    '
name|'def'
name|'test_encode_missing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'object_hash'
op|'='
string|"'9d41d8cd98f00b204e9800998ecf0abc'"
newline|'\n'
name|'ts_iter'
op|'='
name|'make_timestamp_iter'
op|'('
op|')'
newline|'\n'
name|'t_data'
op|'='
name|'next'
op|'('
name|'ts_iter'
op|')'
newline|'\n'
name|'t_meta'
op|'='
name|'next'
op|'('
name|'ts_iter'
op|')'
newline|'\n'
name|'d_meta_data'
op|'='
name|'t_meta'
op|'.'
name|'raw'
op|'-'
name|'t_data'
op|'.'
name|'raw'
newline|'\n'
nl|'\n'
comment|'# equal data and meta timestamps -> legacy single timestamp string'
nl|'\n'
name|'expected'
op|'='
string|"'%s %s'"
op|'%'
op|'('
name|'object_hash'
op|','
name|'t_data'
op|'.'
name|'internal'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'expected'
op|','
nl|'\n'
name|'ssync_sender'
op|'.'
name|'encode_missing'
op|'('
name|'object_hash'
op|','
name|'t_data'
op|','
name|'ts_meta'
op|'='
name|'t_data'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# newer meta timestamp -> hex data delta encoded as extra message part'
nl|'\n'
name|'expected'
op|'='
string|"'%s %s m:%x'"
op|'%'
op|'('
name|'object_hash'
op|','
name|'t_data'
op|'.'
name|'internal'
op|','
name|'d_meta_data'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'expected'
op|','
nl|'\n'
name|'ssync_sender'
op|'.'
name|'encode_missing'
op|'('
name|'object_hash'
op|','
name|'t_data'
op|','
name|'ts_meta'
op|'='
name|'t_meta'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# test encode and decode functions invert'
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'object_hash'"
op|':'
name|'object_hash'
op|','
string|"'ts_meta'"
op|':'
name|'t_meta'
op|','
nl|'\n'
string|"'ts_data'"
op|':'
name|'t_data'
op|'}'
newline|'\n'
name|'msg'
op|'='
name|'ssync_sender'
op|'.'
name|'encode_missing'
op|'('
op|'**'
name|'expected'
op|')'
newline|'\n'
name|'actual'
op|'='
name|'ssync_receiver'
op|'.'
name|'decode_missing'
op|'('
name|'msg'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'actual'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_decode_wanted
dedent|''
name|'def'
name|'test_decode_wanted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'parts'
op|'='
op|'['
string|"'d'"
op|']'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'data'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ssync_sender'
op|'.'
name|'decode_wanted'
op|'('
name|'parts'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
name|'parts'
op|'='
op|'['
string|"'m'"
op|']'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'meta'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ssync_sender'
op|'.'
name|'decode_wanted'
op|'('
name|'parts'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
name|'parts'
op|'='
op|'['
string|"'dm'"
op|']'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'data'"
op|':'
name|'True'
op|','
string|"'meta'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ssync_sender'
op|'.'
name|'decode_wanted'
op|'('
name|'parts'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
comment|"# you don't really expect these next few..."
nl|'\n'
name|'parts'
op|'='
op|'['
string|"'md'"
op|']'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'data'"
op|':'
name|'True'
op|','
string|"'meta'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ssync_sender'
op|'.'
name|'decode_wanted'
op|'('
name|'parts'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
name|'parts'
op|'='
op|'['
string|"'xcy'"
op|','
string|"'funny'"
op|','
op|'{'
string|"'business'"
op|':'
name|'True'
op|'}'
op|']'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'data'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ssync_sender'
op|'.'
name|'decode_wanted'
op|'('
name|'parts'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
