begin_unit
comment|'#! /usr/bin/env python'
nl|'\n'
comment|'# Copyright (c) 2015 Samuel Merritt <sam@swiftstack.com>'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'json'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'StringIO'
name|'import'
name|'StringIO'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'with_tempdir'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'cli'
op|'.'
name|'ring_builder_analyzer'
name|'import'
name|'parse_scenario'
op|','
name|'run_scenario'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestRunScenario
name|'class'
name|'TestRunScenario'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'with_tempdir'
newline|'\n'
DECL|member|test_it_runs
name|'def'
name|'test_it_runs'
op|'('
name|'self'
op|','
name|'tempdir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'builder_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
string|"'test.builder'"
op|')'
newline|'\n'
name|'scenario'
op|'='
op|'{'
nl|'\n'
string|"'replicas'"
op|':'
number|'3'
op|','
string|"'part_power'"
op|':'
number|'8'
op|','
string|"'random_seed'"
op|':'
number|'123'
op|','
string|"'overload'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rounds'"
op|':'
op|'['
op|'['
op|'['
string|"'add'"
op|','
string|"'r1z2-3.4.5.6:7/sda8'"
op|','
number|'100'
op|']'
op|','
nl|'\n'
op|'['
string|"'add'"
op|','
string|"'z2-3.4.5.6:7/sda9'"
op|','
number|'200'
op|']'
op|']'
op|','
nl|'\n'
op|'['
op|'['
string|"'set_weight'"
op|','
number|'0'
op|','
number|'150'
op|']'
op|']'
op|','
nl|'\n'
op|'['
op|'['
string|"'remove'"
op|','
number|'1'
op|']'
op|']'
op|','
nl|'\n'
op|'['
op|'['
string|"'save'"
op|','
name|'builder_path'
op|']'
op|']'
op|']'
op|'}'
newline|'\n'
name|'parsed'
op|'='
name|'parse_scenario'
op|'('
name|'json'
op|'.'
name|'dumps'
op|'('
name|'scenario'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'fake_stdout'
op|'='
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'sys.stdout'"
op|','
name|'fake_stdout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'run_scenario'
op|'('
name|'parsed'
op|')'
newline|'\n'
nl|'\n'
comment|'# Just test that it produced some output as it ran; the fact that'
nl|'\n'
comment|"# this doesn't crash and produces output that resembles something"
nl|'\n'
comment|'# useful is good enough.'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Rebalance'"
name|'in'
name|'fake_stdout'
op|'.'
name|'getvalue'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'builder_path'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestParseScenario
dedent|''
dedent|''
name|'class'
name|'TestParseScenario'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_good
indent|'    '
name|'def'
name|'test_good'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'scenario'
op|'='
op|'{'
nl|'\n'
string|"'replicas'"
op|':'
number|'3'
op|','
string|"'part_power'"
op|':'
number|'8'
op|','
string|"'random_seed'"
op|':'
number|'123'
op|','
string|"'overload'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rounds'"
op|':'
op|'['
op|'['
op|'['
string|"'add'"
op|','
string|"'r1z2-3.4.5.6:7/sda8'"
op|','
number|'100'
op|']'
op|','
nl|'\n'
op|'['
string|"'add'"
op|','
string|"'z2-3.4.5.6:7/sda9'"
op|','
number|'200'
op|']'
op|']'
op|','
nl|'\n'
op|'['
op|'['
string|"'set_weight'"
op|','
number|'0'
op|','
number|'150'
op|']'
op|']'
op|','
nl|'\n'
op|'['
op|'['
string|"'remove'"
op|','
number|'1'
op|']'
op|']'
op|']'
op|'}'
newline|'\n'
name|'parsed'
op|'='
name|'parse_scenario'
op|'('
name|'json'
op|'.'
name|'dumps'
op|'('
name|'scenario'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parsed'
op|'['
string|"'replicas'"
op|']'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parsed'
op|'['
string|"'part_power'"
op|']'
op|','
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parsed'
op|'['
string|"'random_seed'"
op|']'
op|','
number|'123'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parsed'
op|'['
string|"'overload'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'parsed'
op|'['
string|"'rounds'"
op|']'
op|','
op|'['
nl|'\n'
op|'['
op|'['
string|"'add'"
op|','
op|'{'
string|"'device'"
op|':'
string|"'sda8'"
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'3.4.5.6'"
op|','
nl|'\n'
string|"'meta'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'port'"
op|':'
number|'7'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'3.4.5.6'"
op|','
nl|'\n'
string|"'replication_port'"
op|':'
number|'7'
op|','
nl|'\n'
string|"'weight'"
op|':'
number|'100.0'
op|','
nl|'\n'
string|"'zone'"
op|':'
number|'2'
op|'}'
op|']'
op|','
nl|'\n'
op|'['
string|"'add'"
op|','
op|'{'
string|"'device'"
op|':'
string|"u'sda9'"
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"u'3.4.5.6'"
op|','
nl|'\n'
string|"'meta'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'port'"
op|':'
number|'7'
op|','
nl|'\n'
string|"'region'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'3.4.5.6'"
op|','
nl|'\n'
string|"'replication_port'"
op|':'
number|'7'
op|','
nl|'\n'
string|"'weight'"
op|':'
number|'200.0'
op|','
nl|'\n'
string|"'zone'"
op|':'
number|'2'
op|'}'
op|']'
op|']'
op|','
nl|'\n'
op|'['
op|'['
string|"'set_weight'"
op|','
number|'0'
op|','
number|'150.0'
op|']'
op|']'
op|','
nl|'\n'
op|'['
op|'['
string|"'remove'"
op|','
number|'1'
op|']'
op|']'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# The rest of this test class is just a catalog of the myriad ways that'
nl|'\n'
comment|'# the input can be malformed.'
nl|'\n'
DECL|member|test_invalid_json
dedent|''
name|'def'
name|'test_invalid_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
string|'"{"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_json_not_object
dedent|''
name|'def'
name|'test_json_not_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
string|'"[]"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
string|'"\\"stuff\\""'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_replicas
dedent|''
name|'def'
name|'test_bad_replicas'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'working_scenario'
op|'='
op|'{'
nl|'\n'
string|"'replicas'"
op|':'
number|'3'
op|','
string|"'part_power'"
op|':'
number|'8'
op|','
string|"'random_seed'"
op|':'
number|'123'
op|','
string|"'overload'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rounds'"
op|':'
op|'['
op|'['
op|'['
string|"'add'"
op|','
string|"'r1z2-3.4.5.6:7/sda8'"
op|','
number|'100'
op|']'
op|']'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'working_scenario'
op|')'
newline|'\n'
name|'del'
name|'busted'
op|'['
string|"'replicas'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'working_scenario'
op|','
name|'replicas'
op|'='
string|"'blahblah'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'working_scenario'
op|','
name|'replicas'
op|'='
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_part_power
dedent|''
name|'def'
name|'test_bad_part_power'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'working_scenario'
op|'='
op|'{'
nl|'\n'
string|"'replicas'"
op|':'
number|'3'
op|','
string|"'part_power'"
op|':'
number|'8'
op|','
string|"'random_seed'"
op|':'
number|'123'
op|','
string|"'overload'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rounds'"
op|':'
op|'['
op|'['
op|'['
string|"'add'"
op|','
string|"'r1z2-3.4.5.6:7/sda8'"
op|','
number|'100'
op|']'
op|']'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'working_scenario'
op|')'
newline|'\n'
name|'del'
name|'busted'
op|'['
string|"'part_power'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'working_scenario'
op|','
name|'part_power'
op|'='
string|"'blahblah'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'working_scenario'
op|','
name|'part_power'
op|'='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'working_scenario'
op|','
name|'part_power'
op|'='
number|'33'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_random_seed
dedent|''
name|'def'
name|'test_bad_random_seed'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'working_scenario'
op|'='
op|'{'
nl|'\n'
string|"'replicas'"
op|':'
number|'3'
op|','
string|"'part_power'"
op|':'
number|'8'
op|','
string|"'random_seed'"
op|':'
number|'123'
op|','
string|"'overload'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rounds'"
op|':'
op|'['
op|'['
op|'['
string|"'add'"
op|','
string|"'r1z2-3.4.5.6:7/sda8'"
op|','
number|'100'
op|']'
op|']'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'working_scenario'
op|')'
newline|'\n'
name|'del'
name|'busted'
op|'['
string|"'random_seed'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'working_scenario'
op|','
name|'random_seed'
op|'='
string|"'blahblah'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_overload
dedent|''
name|'def'
name|'test_bad_overload'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'working_scenario'
op|'='
op|'{'
nl|'\n'
string|"'replicas'"
op|':'
number|'3'
op|','
string|"'part_power'"
op|':'
number|'8'
op|','
string|"'random_seed'"
op|':'
number|'123'
op|','
string|"'overload'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'rounds'"
op|':'
op|'['
op|'['
op|'['
string|"'add'"
op|','
string|"'r1z2-3.4.5.6:7/sda8'"
op|','
number|'100'
op|']'
op|']'
op|']'
op|'}'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'working_scenario'
op|')'
newline|'\n'
name|'del'
name|'busted'
op|'['
string|"'overload'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'working_scenario'
op|','
name|'overload'
op|'='
string|"'blahblah'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'working_scenario'
op|','
name|'overload'
op|'='
op|'-'
number|'0.01'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_rounds
dedent|''
name|'def'
name|'test_bad_rounds'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base'
op|'='
op|'{'
nl|'\n'
string|"'replicas'"
op|':'
number|'3'
op|','
string|"'part_power'"
op|':'
number|'8'
op|','
string|"'random_seed'"
op|':'
number|'123'
op|','
string|"'overload'"
op|':'
number|'0'
op|'}'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'base'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'{'
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'bork'"
op|']'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_add
dedent|''
name|'def'
name|'test_bad_add'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base'
op|'='
op|'{'
nl|'\n'
string|"'replicas'"
op|':'
number|'3'
op|','
string|"'part_power'"
op|':'
number|'8'
op|','
string|"'random_seed'"
op|':'
number|'123'
op|','
string|"'overload'"
op|':'
number|'0'
op|'}'
newline|'\n'
nl|'\n'
comment|'# no dev'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'add'"
op|']'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# no weight'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'add'"
op|','
string|"'r1z2-1.2.3.4:6000/d7'"
op|']'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# too many fields'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'add'"
op|','
string|"'r1z2-1.2.3.4:6000/d7'"
op|','
number|'1'
op|','
number|'2'
op|']'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# can't parse"
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'add'"
op|','
string|"'not a good value'"
op|','
number|'100'
op|']'
op|']'
op|']'
op|')'
newline|'\n'
comment|"# N.B. the ValueError's coming out of ring.utils.parse_add_value"
nl|'\n'
comment|'# are already pretty good'
nl|'\n'
name|'expected'
op|'='
string|'"Invalid device specifier (round 0, command 0): "'
string|'"Invalid add value: not a good value"'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'parse_scenario'
op|'('
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'err'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
comment|'# negative weight'
nl|'\n'
dedent|''
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'add'"
op|','
string|"'r1z2-1.2.3.4:6000/d7'"
op|','
op|'-'
number|'1'
op|']'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_remove
dedent|''
name|'def'
name|'test_bad_remove'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base'
op|'='
op|'{'
nl|'\n'
string|"'replicas'"
op|':'
number|'3'
op|','
string|"'part_power'"
op|':'
number|'8'
op|','
string|"'random_seed'"
op|':'
number|'123'
op|','
string|"'overload'"
op|':'
number|'0'
op|'}'
newline|'\n'
nl|'\n'
comment|'# no dev'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'remove'"
op|']'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# bad dev id'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'remove'"
op|','
string|"'not an int'"
op|']'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# too many fields'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'remove'"
op|','
number|'1'
op|','
number|'2'
op|']'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_set_weight
dedent|''
name|'def'
name|'test_bad_set_weight'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base'
op|'='
op|'{'
nl|'\n'
string|"'replicas'"
op|':'
number|'3'
op|','
string|"'part_power'"
op|':'
number|'8'
op|','
string|"'random_seed'"
op|':'
number|'123'
op|','
string|"'overload'"
op|':'
number|'0'
op|'}'
newline|'\n'
nl|'\n'
comment|'# no dev'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'set_weight'"
op|']'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# no weight'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'set_weight'"
op|','
number|'0'
op|']'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# bad dev id'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'set_weight'"
op|','
string|"'not an int'"
op|','
number|'90'
op|']'
op|']'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
string|'"Invalid device ID in set_weight (round 0, command 0): "'
string|'"invalid literal for int() with base 10: \'not an int\'"'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'parse_scenario'
op|'('
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'e'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
comment|'# negative weight'
nl|'\n'
dedent|''
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'set_weight'"
op|','
number|'1'
op|','
op|'-'
number|'1'
op|']'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# bogus weight'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'set_weight'"
op|','
number|'1'
op|','
string|"'bogus'"
op|']'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_save
dedent|''
name|'def'
name|'test_bad_save'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'base'
op|'='
op|'{'
nl|'\n'
string|"'replicas'"
op|':'
number|'3'
op|','
string|"'part_power'"
op|':'
number|'8'
op|','
string|"'random_seed'"
op|':'
number|'123'
op|','
string|"'overload'"
op|':'
number|'0'
op|'}'
newline|'\n'
nl|'\n'
comment|'# no builder name'
nl|'\n'
name|'busted'
op|'='
name|'dict'
op|'('
name|'base'
op|','
name|'rounds'
op|'='
op|'['
op|'['
op|'['
string|"'save'"
op|']'
op|']'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'parse_scenario'
op|','
name|'json'
op|'.'
name|'dumps'
op|'('
name|'busted'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
