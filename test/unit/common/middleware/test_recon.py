begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'webob'
name|'import'
name|'Request'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
name|'import'
name|'recon'
newline|'\n'
name|'from'
name|'unittest'
name|'import'
name|'TestCase'
newline|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'contextmanager'
newline|'\n'
name|'from'
name|'posix'
name|'import'
name|'stat_result'
op|','
name|'statvfs_result'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'constraints'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeApp
name|'class'
name|'FakeApp'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__call__
indent|'    '
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|'"FAKE APP"'
newline|'\n'
nl|'\n'
DECL|function|start_response
dedent|''
dedent|''
name|'def'
name|'start_response'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|OpenAndReadTester
dedent|''
name|'class'
name|'OpenAndReadTester'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'output_iter'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'index'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'out_len'
op|'='
name|'len'
op|'('
name|'output_iter'
op|')'
op|'-'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'data'
op|'='
name|'output_iter'
newline|'\n'
name|'self'
op|'.'
name|'output_iter'
op|'='
name|'iter'
op|'('
name|'output_iter'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'read_calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'open_calls'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|next
dedent|''
name|'def'
name|'next'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'index'
op|'=='
name|'self'
op|'.'
name|'out_len'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'StopIteration'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'line'
op|'='
name|'self'
op|'.'
name|'data'
op|'['
name|'self'
op|'.'
name|'index'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'index'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'return'
name|'line'
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'read_calls'
op|'.'
name|'append'
op|'('
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'output_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"''"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|member|open
name|'def'
name|'open'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'open_calls'
op|'.'
name|'append'
op|'('
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
op|')'
newline|'\n'
name|'yield'
name|'self'
newline|'\n'
nl|'\n'
DECL|class|MockOS
dedent|''
dedent|''
name|'class'
name|'MockOS'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'ls_out'
op|'='
name|'None'
op|','
name|'pe_out'
op|'='
name|'None'
op|','
name|'statvfs_out'
op|'='
name|'None'
op|','
nl|'\n'
name|'lstat_out'
op|'='
op|'('
number|'1'
op|','
number|'1'
op|','
number|'5'
op|','
number|'4'
op|','
number|'5'
op|','
number|'5'
op|','
number|'55'
op|','
number|'55'
op|','
number|'55'
op|','
number|'55'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'ls_output'
op|'='
name|'ls_out'
newline|'\n'
name|'self'
op|'.'
name|'path_exists_output'
op|'='
name|'pe_out'
newline|'\n'
name|'self'
op|'.'
name|'statvfs_output'
op|'='
name|'statvfs_out'
newline|'\n'
name|'self'
op|'.'
name|'lstat_output_tuple'
op|'='
name|'lstat_out'
newline|'\n'
name|'self'
op|'.'
name|'listdir_calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'statvfs_calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'path_exists_calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'lstat_calls'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|fake_listdir
dedent|''
name|'def'
name|'fake_listdir'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'listdir_calls'
op|'.'
name|'append'
op|'('
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'ls_output'
newline|'\n'
nl|'\n'
DECL|member|fake_path_exists
dedent|''
name|'def'
name|'fake_path_exists'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'path_exists_calls'
op|'.'
name|'append'
op|'('
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'path_exists_output'
newline|'\n'
nl|'\n'
DECL|member|fake_statvfs
dedent|''
name|'def'
name|'fake_statvfs'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'statvfs_calls'
op|'.'
name|'append'
op|'('
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
op|')'
newline|'\n'
name|'return'
name|'statvfs_result'
op|'('
name|'self'
op|'.'
name|'statvfs_output'
op|')'
newline|'\n'
nl|'\n'
DECL|member|fake_lstat
dedent|''
name|'def'
name|'fake_lstat'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'lstat_calls'
op|'.'
name|'append'
op|'('
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
op|')'
newline|'\n'
name|'return'
name|'stat_result'
op|'('
name|'self'
op|'.'
name|'lstat_output_tuple'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestReconSuccess
dedent|''
dedent|''
name|'class'
name|'TestReconSuccess'
op|'('
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'recon'
op|'.'
name|'ReconMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mockos'
op|'='
name|'MockOS'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'real_listdir'
op|'='
name|'os'
op|'.'
name|'listdir'
newline|'\n'
name|'self'
op|'.'
name|'real_path_exists'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
newline|'\n'
name|'self'
op|'.'
name|'real_lstat'
op|'='
name|'os'
op|'.'
name|'lstat'
newline|'\n'
name|'self'
op|'.'
name|'real_statvfs'
op|'='
name|'os'
op|'.'
name|'statvfs'
newline|'\n'
name|'os'
op|'.'
name|'listdir'
op|'='
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'fake_listdir'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'='
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'fake_path_exists'
newline|'\n'
name|'os'
op|'.'
name|'lstat'
op|'='
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'fake_lstat'
newline|'\n'
name|'os'
op|'.'
name|'statvfs'
op|'='
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'fake_statvfs'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'os'
op|'.'
name|'listdir'
op|'='
name|'self'
op|'.'
name|'real_listdir'
newline|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'='
name|'self'
op|'.'
name|'real_path_exists'
newline|'\n'
name|'os'
op|'.'
name|'lstat'
op|'='
name|'self'
op|'.'
name|'real_lstat'
newline|'\n'
name|'os'
op|'.'
name|'statvfs'
op|'='
name|'self'
op|'.'
name|'real_statvfs'
newline|'\n'
name|'del'
name|'self'
op|'.'
name|'mockos'
newline|'\n'
nl|'\n'
DECL|member|test_get_mounted
dedent|''
name|'def'
name|'test_get_mounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mounts_content'
op|'='
op|'['
string|"'rootfs / rootfs rw 0 0'"
op|','
nl|'\n'
string|"'none /sys sysfs rw,nosuid,nodev,noexec,relatime 0 0'"
op|','
nl|'\n'
string|"'none /proc proc rw,nosuid,nodev,noexec,relatime 0 0'"
op|','
nl|'\n'
string|"'none /dev devtmpfs rw,relatime,size=248404k,nr_inodes=62101,mode=755 0 0'"
op|','
nl|'\n'
string|"'none /dev/pts devpts rw,nosuid,noexec,relatime,gid=5,mode=620,ptmxmode=000 0 0'"
op|','
nl|'\n'
string|"'/dev/disk/by-uuid/e5b143bd-9f31-49a7-b018-5e037dc59252 / ext4 rw,relatime,errors=remount-ro,barrier=1,data=ordered 0 0'"
op|','
nl|'\n'
string|"'none /sys/fs/fuse/connections fusectl rw,relatime 0 0'"
op|','
nl|'\n'
string|"'none /sys/kernel/debug debugfs rw,relatime 0 0'"
op|','
nl|'\n'
string|"'none /sys/kernel/security securityfs rw,relatime 0 0'"
op|','
nl|'\n'
string|"'none /dev/shm tmpfs rw,nosuid,nodev,relatime 0 0'"
op|','
nl|'\n'
string|"'none /var/run tmpfs rw,nosuid,relatime,mode=755 0 0'"
op|','
nl|'\n'
string|"'none /var/lock tmpfs rw,nosuid,nodev,noexec,relatime 0 0'"
op|','
nl|'\n'
string|"'none /lib/init/rw tmpfs rw,nosuid,relatime,mode=755 0 0'"
op|','
nl|'\n'
string|"'/dev/loop0 /mnt/sdb1 xfs rw,noatime,nodiratime,attr2,nobarrier,logbufs=8,noquota 0 0'"
op|','
nl|'\n'
string|"'rpc_pipefs /var/lib/nfs/rpc_pipefs rpc_pipefs rw,relatime 0 0'"
op|','
nl|'\n'
string|"'nfsd /proc/fs/nfsd nfsd rw,relatime 0 0'"
op|','
nl|'\n'
string|"'none /proc/fs/vmblock/mountPoint vmblock rw,relatime 0 0'"
op|','
nl|'\n'
string|"''"
op|']'
newline|'\n'
name|'mounted_resp'
op|'='
op|'['
op|'{'
string|"'device'"
op|':'
string|"'rootfs'"
op|','
string|"'path'"
op|':'
string|"'/'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'none'"
op|','
string|"'path'"
op|':'
string|"'/sys'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'none'"
op|','
string|"'path'"
op|':'
string|"'/proc'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'none'"
op|','
string|"'path'"
op|':'
string|"'/dev'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'none'"
op|','
string|"'path'"
op|':'
string|"'/dev/pts'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'/dev/disk/by-uuid/e5b143bd-9f31-49a7-b018-5e037dc59252'"
op|','
string|"'path'"
op|':'
string|"'/'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'none'"
op|','
string|"'path'"
op|':'
string|"'/sys/fs/fuse/connections'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'none'"
op|','
string|"'path'"
op|':'
string|"'/sys/kernel/debug'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'none'"
op|','
string|"'path'"
op|':'
string|"'/sys/kernel/security'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'none'"
op|','
string|"'path'"
op|':'
string|"'/dev/shm'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'none'"
op|','
string|"'path'"
op|':'
string|"'/var/run'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'none'"
op|','
string|"'path'"
op|':'
string|"'/var/lock'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'none'"
op|','
string|"'path'"
op|':'
string|"'/lib/init/rw'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'/dev/loop0'"
op|','
string|"'path'"
op|':'
string|"'/mnt/sdb1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'rpc_pipefs'"
op|','
string|"'path'"
op|':'
string|"'/var/lib/nfs/rpc_pipefs'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'nfsd'"
op|','
string|"'path'"
op|':'
string|"'/proc/fs/nfsd'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'none'"
op|','
string|"'path'"
op|':'
string|"'/proc/fs/vmblock/mountPoint'"
op|'}'
op|']'
newline|'\n'
name|'oart'
op|'='
name|'OpenAndReadTester'
op|'('
name|'mounts_content'
op|')'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_mounted'
op|'('
name|'openr'
op|'='
name|'oart'
op|'.'
name|'open'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'oart'
op|'.'
name|'open_calls'
op|','
op|'['
op|'('
op|'('
string|"'/proc/mounts'"
op|','
string|"'r'"
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'rv'
op|','
name|'mounted_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_load
dedent|''
name|'def'
name|'test_get_load'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oart'
op|'='
name|'OpenAndReadTester'
op|'('
op|'['
string|"'0.03 0.03 0.00 1/220 16306'"
op|']'
op|')'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_load'
op|'('
name|'openr'
op|'='
name|'oart'
op|'.'
name|'open'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'oart'
op|'.'
name|'read_calls'
op|','
op|'['
op|'('
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'oart'
op|'.'
name|'open_calls'
op|','
op|'['
op|'('
op|'('
string|"'/proc/loadavg'"
op|','
string|"'r'"
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'rv'
op|','
op|'{'
string|"'5m'"
op|':'
number|'0.029999999999999999'
op|','
string|"'15m'"
op|':'
number|'0.0'
op|','
nl|'\n'
string|"'processes'"
op|':'
number|'16306'
op|','
string|"'tasks'"
op|':'
string|"'1/220'"
op|','
nl|'\n'
string|"'1m'"
op|':'
number|'0.029999999999999999'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_mem
dedent|''
name|'def'
name|'test_get_mem'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'meminfo_content'
op|'='
op|'['
string|"'MemTotal:         505840 kB'"
op|','
nl|'\n'
string|"'MemFree:           26588 kB'"
op|','
nl|'\n'
string|"'Buffers:           44948 kB'"
op|','
nl|'\n'
string|"'Cached:           146376 kB'"
op|','
nl|'\n'
string|"'SwapCached:        14736 kB'"
op|','
nl|'\n'
string|"'Active:           194900 kB'"
op|','
nl|'\n'
string|"'Inactive:         193412 kB'"
op|','
nl|'\n'
string|"'Active(anon):      94208 kB'"
op|','
nl|'\n'
string|"'Inactive(anon):   102848 kB'"
op|','
nl|'\n'
string|"'Active(file):     100692 kB'"
op|','
nl|'\n'
string|"'Inactive(file):    90564 kB'"
op|','
nl|'\n'
string|"'Unevictable:           0 kB'"
op|','
nl|'\n'
string|"'Mlocked:               0 kB'"
op|','
nl|'\n'
string|"'SwapTotal:        407544 kB'"
op|','
nl|'\n'
string|"'SwapFree:         313436 kB'"
op|','
nl|'\n'
string|"'Dirty:               104 kB'"
op|','
nl|'\n'
string|"'Writeback:             0 kB'"
op|','
nl|'\n'
string|"'AnonPages:        185268 kB'"
op|','
nl|'\n'
string|"'Mapped:             9592 kB'"
op|','
nl|'\n'
string|"'Shmem:                68 kB'"
op|','
nl|'\n'
string|"'Slab:              61716 kB'"
op|','
nl|'\n'
string|"'SReclaimable:      46620 kB'"
op|','
nl|'\n'
string|"'SUnreclaim:        15096 kB'"
op|','
nl|'\n'
string|"'KernelStack:        1760 kB'"
op|','
nl|'\n'
string|"'PageTables:         8832 kB'"
op|','
nl|'\n'
string|"'NFS_Unstable:          0 kB'"
op|','
nl|'\n'
string|"'Bounce:                0 kB'"
op|','
nl|'\n'
string|"'WritebackTmp:          0 kB'"
op|','
nl|'\n'
string|"'CommitLimit:      660464 kB'"
op|','
nl|'\n'
string|"'Committed_AS:     565608 kB'"
op|','
nl|'\n'
string|"'VmallocTotal:   34359738367 kB'"
op|','
nl|'\n'
string|"'VmallocUsed:      266724 kB'"
op|','
nl|'\n'
string|"'VmallocChunk:   34359467156 kB'"
op|','
nl|'\n'
string|"'HardwareCorrupted:     0 kB'"
op|','
nl|'\n'
string|"'HugePages_Total:       0'"
op|','
nl|'\n'
string|"'HugePages_Free:        0'"
op|','
nl|'\n'
string|"'HugePages_Rsvd:        0'"
op|','
nl|'\n'
string|"'HugePages_Surp:        0'"
op|','
nl|'\n'
string|"'Hugepagesize:       2048 kB'"
op|','
nl|'\n'
string|"'DirectMap4k:       10240 kB'"
op|','
nl|'\n'
string|"'DirectMap2M:      514048 kB'"
op|','
nl|'\n'
string|"''"
op|']'
newline|'\n'
name|'meminfo_resp'
op|'='
op|'{'
string|"'WritebackTmp'"
op|':'
string|"'0 kB'"
op|','
nl|'\n'
string|"'SwapTotal'"
op|':'
string|"'407544 kB'"
op|','
nl|'\n'
string|"'Active(anon)'"
op|':'
string|"'94208 kB'"
op|','
nl|'\n'
string|"'SwapFree'"
op|':'
string|"'313436 kB'"
op|','
nl|'\n'
string|"'DirectMap4k'"
op|':'
string|"'10240 kB'"
op|','
nl|'\n'
string|"'KernelStack'"
op|':'
string|"'1760 kB'"
op|','
nl|'\n'
string|"'MemFree'"
op|':'
string|"'26588 kB'"
op|','
nl|'\n'
string|"'HugePages_Rsvd'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'Committed_AS'"
op|':'
string|"'565608 kB'"
op|','
nl|'\n'
string|"'Active(file)'"
op|':'
string|"'100692 kB'"
op|','
nl|'\n'
string|"'NFS_Unstable'"
op|':'
string|"'0 kB'"
op|','
nl|'\n'
string|"'VmallocChunk'"
op|':'
string|"'34359467156 kB'"
op|','
nl|'\n'
string|"'Writeback'"
op|':'
string|"'0 kB'"
op|','
nl|'\n'
string|"'Inactive(file)'"
op|':'
string|"'90564 kB'"
op|','
nl|'\n'
string|"'MemTotal'"
op|':'
string|"'505840 kB'"
op|','
nl|'\n'
string|"'VmallocUsed'"
op|':'
string|"'266724 kB'"
op|','
nl|'\n'
string|"'HugePages_Free'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'AnonPages'"
op|':'
string|"'185268 kB'"
op|','
nl|'\n'
string|"'Active'"
op|':'
string|"'194900 kB'"
op|','
nl|'\n'
string|"'Inactive(anon)'"
op|':'
string|"'102848 kB'"
op|','
nl|'\n'
string|"'CommitLimit'"
op|':'
string|"'660464 kB'"
op|','
nl|'\n'
string|"'Hugepagesize'"
op|':'
string|"'2048 kB'"
op|','
nl|'\n'
string|"'Cached'"
op|':'
string|"'146376 kB'"
op|','
nl|'\n'
string|"'SwapCached'"
op|':'
string|"'14736 kB'"
op|','
nl|'\n'
string|"'VmallocTotal'"
op|':'
string|"'34359738367 kB'"
op|','
nl|'\n'
string|"'Shmem'"
op|':'
string|"'68 kB'"
op|','
nl|'\n'
string|"'Mapped'"
op|':'
string|"'9592 kB'"
op|','
nl|'\n'
string|"'SUnreclaim'"
op|':'
string|"'15096 kB'"
op|','
nl|'\n'
string|"'Unevictable'"
op|':'
string|"'0 kB'"
op|','
nl|'\n'
string|"'SReclaimable'"
op|':'
string|"'46620 kB'"
op|','
nl|'\n'
string|"'Mlocked'"
op|':'
string|"'0 kB'"
op|','
nl|'\n'
string|"'DirectMap2M'"
op|':'
string|"'514048 kB'"
op|','
nl|'\n'
string|"'HugePages_Surp'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'Bounce'"
op|':'
string|"'0 kB'"
op|','
nl|'\n'
string|"'Inactive'"
op|':'
string|"'193412 kB'"
op|','
nl|'\n'
string|"'PageTables'"
op|':'
string|"'8832 kB'"
op|','
nl|'\n'
string|"'HardwareCorrupted'"
op|':'
string|"'0 kB'"
op|','
nl|'\n'
string|"'HugePages_Total'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'Slab'"
op|':'
string|"'61716 kB'"
op|','
nl|'\n'
string|"'Buffers'"
op|':'
string|"'44948 kB'"
op|','
nl|'\n'
string|"'Dirty'"
op|':'
string|"'104 kB'"
op|'}'
newline|'\n'
name|'oart'
op|'='
name|'OpenAndReadTester'
op|'('
name|'meminfo_content'
op|')'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_mem'
op|'('
name|'openr'
op|'='
name|'oart'
op|'.'
name|'open'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'oart'
op|'.'
name|'open_calls'
op|','
op|'['
op|'('
op|'('
string|"'/proc/meminfo'"
op|','
string|"'r'"
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'rv'
op|','
name|'meminfo_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_async_info
dedent|''
name|'def'
name|'test_get_async_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj_recon_content'
op|'='
string|'"""{"object_replication_time": 200.0, "async_pending": 5}"""'
newline|'\n'
name|'oart'
op|'='
name|'OpenAndReadTester'
op|'('
op|'['
name|'obj_recon_content'
op|']'
op|')'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_async_info'
op|'('
name|'openr'
op|'='
name|'oart'
op|'.'
name|'open'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'oart'
op|'.'
name|'read_calls'
op|','
op|'['
op|'('
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'oart'
op|'.'
name|'open_calls'
op|','
op|'['
op|'('
op|'('
string|"'/var/cache/swift/object.recon'"
op|','
string|"'r'"
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'rv'
op|','
op|'{'
string|"'async_pending'"
op|':'
number|'5'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_async_info_empty_file
dedent|''
name|'def'
name|'test_get_async_info_empty_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj_recon_content'
op|'='
string|'"""{"object_replication_time": 200.0}"""'
newline|'\n'
name|'oart'
op|'='
name|'OpenAndReadTester'
op|'('
op|'['
name|'obj_recon_content'
op|']'
op|')'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_async_info'
op|'('
name|'openr'
op|'='
name|'oart'
op|'.'
name|'open'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'oart'
op|'.'
name|'read_calls'
op|','
op|'['
op|'('
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'oart'
op|'.'
name|'open_calls'
op|','
op|'['
op|'('
op|'('
string|"'/var/cache/swift/object.recon'"
op|','
string|"'r'"
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'rv'
op|','
op|'{'
string|"'async_pending'"
op|':'
op|'-'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_replication_info
dedent|''
name|'def'
name|'test_get_replication_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj_recon_content'
op|'='
string|'"""{"object_replication_time": 200.0, "async_pending": 5}"""'
newline|'\n'
name|'oart'
op|'='
name|'OpenAndReadTester'
op|'('
op|'['
name|'obj_recon_content'
op|']'
op|')'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_replication_info'
op|'('
name|'openr'
op|'='
name|'oart'
op|'.'
name|'open'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'oart'
op|'.'
name|'read_calls'
op|','
op|'['
op|'('
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'oart'
op|'.'
name|'open_calls'
op|','
op|'['
op|'('
op|'('
string|"'/var/cache/swift/object.recon'"
op|','
string|"'r'"
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'rv'
op|','
op|'{'
string|"'object_replication_time'"
op|':'
number|'200.0'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_replication_info_empty_file
dedent|''
name|'def'
name|'test_get_replication_info_empty_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj_recon_content'
op|'='
string|'"""{"async_pending": 5}"""'
newline|'\n'
name|'oart'
op|'='
name|'OpenAndReadTester'
op|'('
op|'['
name|'obj_recon_content'
op|']'
op|')'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_replication_info'
op|'('
name|'openr'
op|'='
name|'oart'
op|'.'
name|'open'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'oart'
op|'.'
name|'read_calls'
op|','
op|'['
op|'('
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'oart'
op|'.'
name|'open_calls'
op|','
op|'['
op|'('
op|'('
string|"'/var/cache/swift/object.recon'"
op|','
string|"'r'"
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'rv'
op|','
op|'{'
string|"'object_replication_time'"
op|':'
op|'-'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_device_info
dedent|''
name|'def'
name|'test_get_device_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rv'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_device_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'rv'
op|','
string|"'/srv/node/'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_unmounted
dedent|''
name|'def'
name|'test_get_unmounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_checkmount_true
indent|'        '
name|'def'
name|'fake_checkmount_true'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'unmounted_resp'
op|'='
op|'['
op|'{'
string|"'device'"
op|':'
string|"'fakeone'"
op|','
string|"'mounted'"
op|':'
name|'False'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'device'"
op|':'
string|"'faketwo'"
op|','
string|"'mounted'"
op|':'
name|'False'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'ls_output'
op|'='
op|'['
string|"'fakeone'"
op|','
string|"'faketwo'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'path_exists_output'
op|'='
name|'False'
newline|'\n'
name|'real_checkmount'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'constraints'
op|'.'
name|'check_mount'
newline|'\n'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'constraints'
op|'.'
name|'check_mount'
op|'='
name|'fake_checkmount_true'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_unmounted'
op|'('
op|')'
newline|'\n'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'constraints'
op|'.'
name|'check_mount'
op|'='
name|'real_checkmount'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'listdir_calls'
op|','
op|'['
op|'('
op|'('
string|"'/srv/node/'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'rv'
op|','
name|'unmounted_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_diskusage
dedent|''
name|'def'
name|'test_get_diskusage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'#posix.statvfs_result(f_bsize=4096, f_frsize=4096, f_blocks=1963185,'
nl|'\n'
comment|'#                     f_bfree=1113075, f_bavail=1013351, f_files=498736,'
nl|'\n'
comment|'#                     f_ffree=397839, f_favail=397839, f_flag=0,'
nl|'\n'
comment|'#                     f_namemax=255)'
nl|'\n'
indent|'        '
name|'statvfs_content'
op|'='
op|'('
number|'4096'
op|','
number|'4096'
op|','
number|'1963185'
op|','
number|'1113075'
op|','
number|'1013351'
op|','
number|'498736'
op|','
number|'397839'
op|','
nl|'\n'
number|'397839'
op|','
number|'0'
op|','
number|'255'
op|')'
newline|'\n'
name|'du_resp'
op|'='
op|'['
op|'{'
string|"'device'"
op|':'
string|"'canhazdrive1'"
op|','
string|"'avail'"
op|':'
number|'4150685696'
op|','
nl|'\n'
string|"'mounted'"
op|':'
name|'True'
op|','
string|"'used'"
op|':'
number|'3890520064'
op|','
string|"'size'"
op|':'
number|'8041205760'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'ls_output'
op|'='
op|'['
string|"'canhazdrive1'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'statvfs_output'
op|'='
name|'statvfs_content'
newline|'\n'
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'path_exists_output'
op|'='
name|'True'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_diskusage'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'statvfs_calls'
op|','
op|'['
op|'('
op|'('
string|"'/srv/node/canhazdrive1'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'rv'
op|','
name|'du_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_diskusage_checkmount_fail
dedent|''
name|'def'
name|'test_get_diskusage_checkmount_fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'du_resp'
op|'='
op|'['
op|'{'
string|"'device'"
op|':'
string|"'canhazdrive1'"
op|','
string|"'avail'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'mounted'"
op|':'
name|'False'
op|','
string|"'used'"
op|':'
string|"''"
op|','
string|"'size'"
op|':'
string|"''"
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'ls_output'
op|'='
op|'['
string|"'canhazdrive1'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'path_exists_output'
op|'='
name|'False'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_diskusage'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'listdir_calls'
op|','
op|'['
op|'('
op|'('
string|"'/srv/node/'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'path_exists_calls'
op|','
op|'['
op|'('
op|'('
string|"'/srv/node/canhazdrive1'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'rv'
op|','
name|'du_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_quarantine_count
dedent|''
name|'def'
name|'test_get_quarantine_count'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'#posix.lstat_result(st_mode=1, st_ino=2, st_dev=3, st_nlink=4, '
nl|'\n'
comment|'#                   st_uid=5, st_gid=6, st_size=7, st_atime=8,'
nl|'\n'
comment|'#                   st_mtime=9, st_ctime=10)'
nl|'\n'
indent|'        '
name|'lstat_content'
op|'='
op|'('
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'4'
op|','
number|'5'
op|','
number|'6'
op|','
number|'7'
op|','
number|'8'
op|','
number|'9'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'ls_output'
op|'='
op|'['
string|"'sda'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'path_exists_output'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'mockos'
op|'.'
name|'lstat_output'
op|'='
name|'lstat_content'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_quarantine_count'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'rv'
op|','
op|'{'
string|"'objects'"
op|':'
number|'2'
op|','
string|"'accounts'"
op|':'
number|'2'
op|','
string|"'containers'"
op|':'
number|'2'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_socket_info
dedent|''
name|'def'
name|'test_get_socket_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sockstat_content'
op|'='
op|'['
string|"'sockets: used 271'"
op|','
nl|'\n'
string|"'TCP: inuse 30 orphan 0 tw 0 alloc 31 mem 0'"
op|','
nl|'\n'
string|"'UDP: inuse 16 mem 4'"
op|','
string|"'UDPLITE: inuse 0'"
op|','
nl|'\n'
string|"'RAW: inuse 0'"
op|','
string|"'FRAG: inuse 0 memory 0'"
op|','
nl|'\n'
string|"''"
op|']'
newline|'\n'
name|'sockstat6_content'
op|'='
op|'['
string|"'TCP6: inuse 1'"
op|','
nl|'\n'
string|"'UDP6: inuse 3'"
op|','
nl|'\n'
string|"'UDPLITE6: inuse 0'"
op|','
nl|'\n'
string|"'RAW6: inuse 0'"
op|','
nl|'\n'
string|"'FRAG6: inuse 0 memory 0'"
op|','
nl|'\n'
string|"''"
op|']'
newline|'\n'
name|'oart'
op|'='
name|'OpenAndReadTester'
op|'('
name|'sockstat_content'
op|')'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_socket_info'
op|'('
name|'openr'
op|'='
name|'oart'
op|'.'
name|'open'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'oart'
op|'.'
name|'open_calls'
op|','
op|'['
op|'('
op|'('
string|"'/proc/net/sockstat'"
op|','
string|"'r'"
op|')'
op|','
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'/proc/net/sockstat6'"
op|','
string|"'r'"
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
comment|'#todo verify parsed result of sockstat6'
nl|'\n'
comment|"#self.assertEquals(rv, {'time_wait': 0, 'tcp_in_use': 30, 'orphan': 0, 'tcp_mem_allocated_bytes': 0})"
nl|'\n'
nl|'\n'
DECL|class|FakeRecon
dedent|''
dedent|''
name|'class'
name|'FakeRecon'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|fake_mem
indent|'    '
name|'def'
name|'fake_mem'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'memtest'"
op|':'
string|'"1"'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|fake_load
dedent|''
name|'def'
name|'fake_load'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'loadtest'"
op|':'
string|'"1"'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|fake_async
dedent|''
name|'def'
name|'fake_async'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'asynctest'"
op|':'
string|'"1"'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|fake_replication
dedent|''
name|'def'
name|'fake_replication'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'replicationtest'"
op|':'
string|'"1"'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|fake_mounted
dedent|''
name|'def'
name|'fake_mounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'mountedtest'"
op|':'
string|'"1"'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|fake_unmounted
dedent|''
name|'def'
name|'fake_unmounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'unmountedtest'"
op|':'
string|'"1"'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|fake_diskusage
dedent|''
name|'def'
name|'fake_diskusage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'diskusagetest'"
op|':'
string|'"1"'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|fake_ringmd5
dedent|''
name|'def'
name|'fake_ringmd5'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'ringmd5test'"
op|':'
string|'"1"'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|fake_quarantined
dedent|''
name|'def'
name|'fake_quarantined'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'quarantinedtest'"
op|':'
string|'"1"'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|fake_sockstat
dedent|''
name|'def'
name|'fake_sockstat'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'{'
string|"'sockstattest'"
op|':'
string|'"1"'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|raise_IOError
dedent|''
name|'def'
name|'raise_IOError'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'IOError'
newline|'\n'
nl|'\n'
DECL|member|raise_ValueError
dedent|''
name|'def'
name|'raise_ValueError'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
newline|'\n'
nl|'\n'
DECL|class|TestHealthCheck
dedent|''
dedent|''
name|'class'
name|'TestHealthCheck'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'frecon'
op|'='
name|'FakeRecon'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'='
name|'recon'
op|'.'
name|'ReconMiddleware'
op|'('
name|'FakeApp'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_mem'
op|'='
name|'self'
op|'.'
name|'frecon'
op|'.'
name|'fake_mem'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_load'
op|'='
name|'self'
op|'.'
name|'frecon'
op|'.'
name|'fake_load'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_async_info'
op|'='
name|'self'
op|'.'
name|'frecon'
op|'.'
name|'fake_async'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_replication_info'
op|'='
name|'self'
op|'.'
name|'frecon'
op|'.'
name|'fake_replication'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_mounted'
op|'='
name|'self'
op|'.'
name|'frecon'
op|'.'
name|'fake_mounted'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_unmounted'
op|'='
name|'self'
op|'.'
name|'frecon'
op|'.'
name|'fake_unmounted'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_diskusage'
op|'='
name|'self'
op|'.'
name|'frecon'
op|'.'
name|'fake_diskusage'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_ring_md5'
op|'='
name|'self'
op|'.'
name|'frecon'
op|'.'
name|'fake_ringmd5'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_quarantine_count'
op|'='
name|'self'
op|'.'
name|'frecon'
op|'.'
name|'fake_quarantined'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_socket_info'
op|'='
name|'self'
op|'.'
name|'frecon'
op|'.'
name|'fake_sockstat'
newline|'\n'
nl|'\n'
DECL|member|test_recon_get_mem
dedent|''
name|'def'
name|'test_recon_get_mem'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_mem_resp'
op|'='
op|'['
string|'\'{"memtest": "1"}\''
op|']'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/recon/mem'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
name|'get_mem_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recon_get_load
dedent|''
name|'def'
name|'test_recon_get_load'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_load_resp'
op|'='
op|'['
string|'\'{"loadtest": "1"}\''
op|']'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/recon/load'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
name|'get_load_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recon_get_async
dedent|''
name|'def'
name|'test_recon_get_async'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_async_resp'
op|'='
op|'['
string|'\'{"asynctest": "1"}\''
op|']'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/recon/async'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
name|'get_async_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recon_get_async_ioerror
dedent|''
name|'def'
name|'test_recon_get_async_ioerror'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_async_info'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_async_info'
op|'='
name|'self'
op|'.'
name|'frecon'
op|'.'
name|'raise_IOError'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/recon/async'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_async_info'
op|'='
name|'orig'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
op|'['
string|"'Internal server error.'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recon_get_replication
dedent|''
name|'def'
name|'test_recon_get_replication'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_replication_resp'
op|'='
op|'['
string|'\'{"replicationtest": "1"}\''
op|']'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/recon/replication'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
name|'get_replication_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recon_get_replication_ioerror
dedent|''
name|'def'
name|'test_recon_get_replication_ioerror'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_replication_info'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_replication_info'
op|'='
name|'self'
op|'.'
name|'frecon'
op|'.'
name|'raise_IOError'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/recon/replication'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_async_info'
op|'='
name|'orig'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
op|'['
string|"'Internal server error.'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recon_get_mounted
dedent|''
name|'def'
name|'test_recon_get_mounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_mounted_resp'
op|'='
op|'['
string|'\'{"mountedtest": "1"}\''
op|']'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/recon/mounted'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
name|'get_mounted_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recon_get_unmounted
dedent|''
name|'def'
name|'test_recon_get_unmounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_unmounted_resp'
op|'='
op|'['
string|'\'{"unmountedtest": "1"}\''
op|']'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/recon/unmounted'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
name|'get_unmounted_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recon_get_diskusage
dedent|''
name|'def'
name|'test_recon_get_diskusage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_diskusage_resp'
op|'='
op|'['
string|'\'{"diskusagetest": "1"}\''
op|']'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/recon/diskusage'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
name|'get_diskusage_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recon_get_ringmd5
dedent|''
name|'def'
name|'test_recon_get_ringmd5'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_ringmd5_resp'
op|'='
op|'['
string|'\'{"ringmd5test": "1"}\''
op|']'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/recon/ringmd5'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
name|'get_ringmd5_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recon_get_quarantined
dedent|''
name|'def'
name|'test_recon_get_quarantined'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_quarantined_resp'
op|'='
op|'['
string|'\'{"quarantinedtest": "1"}\''
op|']'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/recon/quarantined'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
name|'get_quarantined_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recon_get_sockstat
dedent|''
name|'def'
name|'test_recon_get_sockstat'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'get_sockstat_resp'
op|'='
op|'['
string|'\'{"sockstattest": "1"}\''
op|']'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/recon/sockstat'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
name|'get_sockstat_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recon_invalid_path
dedent|''
name|'def'
name|'test_recon_invalid_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/recon/invalid'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
op|'['
string|"'Invalid path: /recon/invalid'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recon_failed_json_dumps
dedent|''
name|'def'
name|'test_recon_failed_json_dumps'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_replication_info'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_replication_info'
op|'='
name|'self'
op|'.'
name|'frecon'
op|'.'
name|'raise_ValueError'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/recon/replication'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_async_info'
op|'='
name|'orig'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
op|'['
string|"'Internal server error.'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_recon_pass
dedent|''
name|'def'
name|'test_recon_pass'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|','
string|"'FAKE APP'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
