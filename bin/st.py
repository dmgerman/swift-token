begin_unit
comment|'#!/usr/bin/python -u'
nl|'\n'
comment|'# Copyright (c) 2010 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
comment|'# Try to use installed swift.common.client...'
nl|'\n'
indent|'    '
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'client'
name|'import'
name|'get_auth'
op|','
name|'ClientException'
op|','
name|'Connection'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
comment|'# But if not installed, use an included copy.'
nl|'\n'
comment|'# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #'
nl|'\n'
comment|'# Inclusion of swift.common.client'
nl|'\n'
nl|'\n'
indent|'    '
string|'"""\n    Cloud Files client library used internally\n    """'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
name|'from'
name|'cStringIO'
name|'import'
name|'StringIO'
newline|'\n'
name|'from'
name|'httplib'
name|'import'
name|'HTTPConnection'
op|','
name|'HTTPException'
op|','
name|'HTTPSConnection'
newline|'\n'
name|'from'
name|'re'
name|'import'
name|'compile'
op|','
name|'DOTALL'
newline|'\n'
name|'from'
name|'tokenize'
name|'import'
name|'generate_tokens'
op|','
name|'STRING'
op|','
name|'NAME'
op|','
name|'OP'
newline|'\n'
name|'from'
name|'urllib'
name|'import'
name|'quote'
name|'as'
name|'_quote'
op|','
name|'unquote'
newline|'\n'
name|'from'
name|'urlparse'
name|'import'
name|'urlparse'
op|','
name|'urlunparse'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'from'
name|'eventlet'
name|'import'
name|'sleep'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'        '
name|'from'
name|'time'
name|'import'
name|'sleep'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|quote
dedent|''
name|'def'
name|'quote'
op|'('
name|'value'
op|','
name|'safe'
op|'='
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Patched version of urllib.quote that encodes utf8 strings before quoting\n        """'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'value'
op|'.'
name|'encode'
op|'('
string|"'utf8'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'_quote'
op|'('
name|'value'
op|','
name|'safe'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# look for a real json parser first'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
comment|'# simplejson is popular and pretty good'
nl|'\n'
indent|'        '
name|'from'
name|'simplejson'
name|'import'
name|'loads'
name|'as'
name|'json_loads'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
comment|'# 2.6 will have a json module in the stdlib'
nl|'\n'
indent|'            '
name|'from'
name|'json'
name|'import'
name|'loads'
name|'as'
name|'json_loads'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
comment|'# fall back on local parser otherwise'
nl|'\n'
DECL|variable|comments
indent|'            '
name|'comments'
op|'='
name|'compile'
op|'('
string|"r'/\\*.*\\*/|//[^\\r\\n]*'"
op|','
name|'DOTALL'
op|')'
newline|'\n'
nl|'\n'
DECL|function|json_loads
name|'def'
name|'json_loads'
op|'('
name|'string'
op|')'
op|':'
newline|'\n'
indent|'                '
string|"'''\n                Fairly competent json parser exploiting the python tokenizer and\n                eval(). -- From python-cloudfiles\n\n                _loads(serialized_json) -> object\n                '''"
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'res'
op|'='
op|'['
op|']'
newline|'\n'
name|'consts'
op|'='
op|'{'
string|"'true'"
op|':'
name|'True'
op|','
string|"'false'"
op|':'
name|'False'
op|','
string|"'null'"
op|':'
name|'None'
op|'}'
newline|'\n'
name|'string'
op|'='
string|"'('"
op|'+'
name|'comments'
op|'.'
name|'sub'
op|'('
string|"''"
op|','
name|'string'
op|')'
op|'+'
string|"')'"
newline|'\n'
name|'for'
name|'type'
op|','
name|'val'
op|','
name|'_'
op|','
name|'_'
op|','
name|'_'
name|'in'
name|'generate_tokens'
op|'('
name|'StringIO'
op|'('
name|'string'
op|')'
op|'.'
name|'readline'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'if'
op|'('
name|'type'
op|'=='
name|'OP'
name|'and'
name|'val'
name|'not'
name|'in'
string|"'[]{}:,()-'"
op|')'
name|'or'
op|'('
name|'type'
op|'=='
name|'NAME'
name|'and'
name|'val'
name|'not'
name|'in'
name|'consts'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'raise'
name|'AttributeError'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'type'
op|'=='
name|'STRING'
op|':'
newline|'\n'
indent|'                            '
name|'res'
op|'.'
name|'append'
op|'('
string|"'u'"
op|')'
newline|'\n'
name|'res'
op|'.'
name|'append'
op|'('
name|'val'
op|'.'
name|'replace'
op|'('
string|"'\\\\/'"
op|','
string|"'/'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                            '
name|'res'
op|'.'
name|'append'
op|'('
name|'val'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'eval'
op|'('
string|"''"
op|'.'
name|'join'
op|'('
name|'res'
op|')'
op|','
op|'{'
op|'}'
op|','
name|'consts'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'AttributeError'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ClientException
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'ClientException'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'        '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'msg'
op|','
name|'http_scheme'
op|'='
string|"''"
op|','
name|'http_host'
op|'='
string|"''"
op|','
name|'http_port'
op|'='
string|"''"
op|','
nl|'\n'
name|'http_path'
op|'='
string|"''"
op|','
name|'http_query'
op|'='
string|"''"
op|','
name|'http_status'
op|'='
number|'0'
op|','
name|'http_reason'
op|'='
string|"''"
op|','
nl|'\n'
name|'http_device'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'Exception'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'msg'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'msg'
op|'='
name|'msg'
newline|'\n'
name|'self'
op|'.'
name|'http_scheme'
op|'='
name|'http_scheme'
newline|'\n'
name|'self'
op|'.'
name|'http_host'
op|'='
name|'http_host'
newline|'\n'
name|'self'
op|'.'
name|'http_port'
op|'='
name|'http_port'
newline|'\n'
name|'self'
op|'.'
name|'http_path'
op|'='
name|'http_path'
newline|'\n'
name|'self'
op|'.'
name|'http_query'
op|'='
name|'http_query'
newline|'\n'
name|'self'
op|'.'
name|'http_status'
op|'='
name|'http_status'
newline|'\n'
name|'self'
op|'.'
name|'http_reason'
op|'='
name|'http_reason'
newline|'\n'
name|'self'
op|'.'
name|'http_device'
op|'='
name|'http_device'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'a'
op|'='
name|'self'
op|'.'
name|'msg'
newline|'\n'
name|'b'
op|'='
string|"''"
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'http_scheme'
op|':'
newline|'\n'
indent|'                '
name|'b'
op|'+='
string|"'%s://'"
op|'%'
name|'self'
op|'.'
name|'http_scheme'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'http_host'
op|':'
newline|'\n'
indent|'                '
name|'b'
op|'+='
name|'self'
op|'.'
name|'http_host'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'http_port'
op|':'
newline|'\n'
indent|'                '
name|'b'
op|'+='
string|"':%s'"
op|'%'
name|'self'
op|'.'
name|'http_port'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'http_path'
op|':'
newline|'\n'
indent|'                '
name|'b'
op|'+='
name|'self'
op|'.'
name|'http_path'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'http_query'
op|':'
newline|'\n'
indent|'                '
name|'b'
op|'+='
string|"'?%s'"
op|'%'
name|'self'
op|'.'
name|'http_query'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'http_status'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'b'
op|':'
newline|'\n'
indent|'                    '
name|'b'
op|'='
string|"'%s %s'"
op|'%'
op|'('
name|'b'
op|','
name|'self'
op|'.'
name|'http_status'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'b'
op|'='
name|'str'
op|'('
name|'self'
op|'.'
name|'http_status'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'http_reason'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'b'
op|':'
newline|'\n'
indent|'                    '
name|'b'
op|'='
string|"'%s %s'"
op|'%'
op|'('
name|'b'
op|','
name|'self'
op|'.'
name|'http_reason'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'b'
op|'='
string|"'- %s'"
op|'%'
name|'self'
op|'.'
name|'http_reason'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'http_device'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'b'
op|':'
newline|'\n'
indent|'                    '
name|'b'
op|'='
string|"'%s: device %s'"
op|'%'
op|'('
name|'b'
op|','
name|'self'
op|'.'
name|'http_device'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'b'
op|'='
string|"'device %s'"
op|'%'
name|'self'
op|'.'
name|'http_device'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'b'
name|'and'
string|"'%s: %s'"
op|'%'
op|'('
name|'a'
op|','
name|'b'
op|')'
name|'or'
name|'a'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|http_connection
dedent|''
dedent|''
name|'def'
name|'http_connection'
op|'('
name|'url'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Make an HTTPConnection or HTTPSConnection\n\n        :param url: url to connect to\n        :returns: tuple of (parsed url, connection object)\n        :raises ClientException: Unable to handle protocol scheme\n        """'
newline|'\n'
name|'parsed'
op|'='
name|'urlparse'
op|'('
name|'url'
op|')'
newline|'\n'
name|'if'
name|'parsed'
op|'.'
name|'scheme'
op|'=='
string|"'http'"
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'='
name|'HTTPConnection'
op|'('
name|'parsed'
op|'.'
name|'netloc'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'parsed'
op|'.'
name|'scheme'
op|'=='
string|"'https'"
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'='
name|'HTTPSConnection'
op|'('
name|'parsed'
op|'.'
name|'netloc'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ClientException'
op|'('
string|"'Cannot handle protocol scheme %s for url %s'"
op|'%'
nl|'\n'
op|'('
name|'parsed'
op|'.'
name|'scheme'
op|','
name|'repr'
op|'('
name|'url'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'parsed'
op|','
name|'conn'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_auth
dedent|''
name|'def'
name|'get_auth'
op|'('
name|'url'
op|','
name|'user'
op|','
name|'key'
op|','
name|'snet'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get authentication credentials\n\n        :param url: authentication URL\n        :param user: user to auth as\n        :param key: key or passowrd for auth\n        :param snet: use SERVICENET internal network default is False \n        :returns: tuple of (storage URL, storage token, auth token)\n        :raises ClientException: HTTP GET request to auth URL failed\n        """'
newline|'\n'
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_connection'
op|'('
name|'url'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'request'
op|'('
string|"'GET'"
op|','
name|'parsed'
op|'.'
name|'path'
op|','
string|"''"
op|','
nl|'\n'
op|'{'
string|"'X-Auth-User'"
op|':'
name|'user'
op|','
string|"'X-Auth-Key'"
op|':'
name|'key'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'<'
number|'200'
name|'or'
name|'resp'
op|'.'
name|'status'
op|'>='
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ClientException'
op|'('
string|"'Auth GET failed'"
op|','
name|'http_scheme'
op|'='
name|'parsed'
op|'.'
name|'scheme'
op|','
nl|'\n'
name|'http_host'
op|'='
name|'conn'
op|'.'
name|'host'
op|','
name|'http_port'
op|'='
name|'conn'
op|'.'
name|'port'
op|','
nl|'\n'
name|'http_path'
op|'='
name|'parsed'
op|'.'
name|'path'
op|','
name|'http_status'
op|'='
name|'resp'
op|'.'
name|'status'
op|','
nl|'\n'
name|'http_reason'
op|'='
name|'resp'
op|'.'
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'url'
op|'='
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'x-storage-url'"
op|')'
newline|'\n'
name|'if'
name|'snet'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|'='
name|'list'
op|'('
name|'urlparse'
op|'('
name|'url'
op|')'
op|')'
newline|'\n'
comment|'# Second item in the list is the netloc '
nl|'\n'
name|'parsed'
op|'['
number|'1'
op|']'
op|'='
string|"'snet-'"
op|'+'
name|'parsed'
op|'['
number|'1'
op|']'
newline|'\n'
name|'url'
op|'='
name|'urlunparse'
op|'('
name|'parsed'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'url'
op|','
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'x-storage-token'"
op|','
nl|'\n'
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'x-auth-token'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_account
dedent|''
name|'def'
name|'get_account'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'prefix'
op|'='
name|'None'
op|','
nl|'\n'
name|'http_conn'
op|'='
name|'None'
op|','
name|'full_listing'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get a listing of containers for the account.\n\n        :param url: storage URL\n        :param token: auth token\n        :param marker: marker query\n        :param limit: limit query\n        :param prefix: prefix query\n        :param http_conn: HTTP connection object (If None, it will create the\n                          conn object)\n        :param full_listing: if True, return a full listing, else returns a max\n                             of 10000 listings\n        :returns: a list of accounts\n        :raises ClientException: HTTP GET request failed\n        """'
newline|'\n'
name|'if'
name|'not'
name|'http_conn'
op|':'
newline|'\n'
indent|'            '
name|'http_conn'
op|'='
name|'http_connection'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'full_listing'
op|':'
newline|'\n'
indent|'            '
name|'rv'
op|'='
op|'['
op|']'
newline|'\n'
name|'listing'
op|'='
name|'get_account'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'marker'
op|','
name|'limit'
op|','
name|'prefix'
op|','
name|'http_conn'
op|')'
newline|'\n'
name|'while'
name|'listing'
op|':'
newline|'\n'
indent|'                '
name|'rv'
op|'.'
name|'extend'
op|'('
name|'listing'
op|')'
newline|'\n'
name|'marker'
op|'='
name|'listing'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'listing'
op|'='
name|'get_account'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'marker'
op|','
name|'limit'
op|','
name|'prefix'
op|','
name|'http_conn'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'rv'
newline|'\n'
dedent|''
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_conn'
newline|'\n'
name|'qs'
op|'='
string|"'format=json'"
newline|'\n'
name|'if'
name|'marker'
op|':'
newline|'\n'
indent|'            '
name|'qs'
op|'+='
string|"'&marker=%s'"
op|'%'
name|'quote'
op|'('
name|'marker'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'limit'
op|':'
newline|'\n'
indent|'            '
name|'qs'
op|'+='
string|"'&limit=%d'"
op|'%'
name|'limit'
newline|'\n'
dedent|''
name|'if'
name|'prefix'
op|':'
newline|'\n'
indent|'            '
name|'qs'
op|'+='
string|"'&prefix=%s'"
op|'%'
name|'quote'
op|'('
name|'prefix'
op|')'
newline|'\n'
dedent|''
name|'conn'
op|'.'
name|'request'
op|'('
string|"'GET'"
op|','
string|"'%s?%s'"
op|'%'
op|'('
name|'parsed'
op|'.'
name|'path'
op|','
name|'qs'
op|')'
op|','
string|"''"
op|','
nl|'\n'
op|'{'
string|"'X-Auth-Token'"
op|':'
name|'token'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'<'
number|'200'
name|'or'
name|'resp'
op|'.'
name|'status'
op|'>='
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'raise'
name|'ClientException'
op|'('
string|"'Account GET failed'"
op|','
name|'http_scheme'
op|'='
name|'parsed'
op|'.'
name|'scheme'
op|','
nl|'\n'
name|'http_host'
op|'='
name|'conn'
op|'.'
name|'host'
op|','
name|'http_port'
op|'='
name|'conn'
op|'.'
name|'port'
op|','
nl|'\n'
name|'http_path'
op|'='
name|'parsed'
op|'.'
name|'path'
op|','
name|'http_query'
op|'='
name|'qs'
op|','
name|'http_status'
op|'='
name|'resp'
op|'.'
name|'status'
op|','
nl|'\n'
name|'http_reason'
op|'='
name|'resp'
op|'.'
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status'
op|'=='
number|'204'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'return'
name|'json_loads'
op|'('
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|head_account
dedent|''
name|'def'
name|'head_account'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'http_conn'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get account stats.\n\n        :param url: storage URL\n        :param token: auth token\n        :param http_conn: HTTP connection object (If None, it will create the\n                          conn object)\n        :returns: a tuple of (container count, object count, bytes used)\n        :raises ClientException: HTTP HEAD request failed\n        """'
newline|'\n'
name|'if'
name|'http_conn'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_conn'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_connection'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'conn'
op|'.'
name|'request'
op|'('
string|"'HEAD'"
op|','
name|'parsed'
op|'.'
name|'path'
op|','
string|"''"
op|','
op|'{'
string|"'X-Auth-Token'"
op|':'
name|'token'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'<'
number|'200'
name|'or'
name|'resp'
op|'.'
name|'status'
op|'>='
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ClientException'
op|'('
string|"'Account HEAD failed'"
op|','
name|'http_scheme'
op|'='
name|'parsed'
op|'.'
name|'scheme'
op|','
nl|'\n'
name|'http_host'
op|'='
name|'conn'
op|'.'
name|'host'
op|','
name|'http_port'
op|'='
name|'conn'
op|'.'
name|'port'
op|','
nl|'\n'
name|'http_path'
op|'='
name|'parsed'
op|'.'
name|'path'
op|','
name|'http_status'
op|'='
name|'resp'
op|'.'
name|'status'
op|','
nl|'\n'
name|'http_reason'
op|'='
name|'resp'
op|'.'
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'int'
op|'('
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'x-account-container-count'"
op|','
number|'0'
op|')'
op|')'
op|','
name|'int'
op|'('
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'x-account-object-count'"
op|','
number|'0'
op|')'
op|')'
op|','
name|'int'
op|'('
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'x-account-bytes-used'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_container
dedent|''
name|'def'
name|'get_container'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'container'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'limit'
op|'='
name|'None'
op|','
nl|'\n'
name|'prefix'
op|'='
name|'None'
op|','
name|'delimiter'
op|'='
name|'None'
op|','
name|'http_conn'
op|'='
name|'None'
op|','
nl|'\n'
name|'full_listing'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get a listing of objects for the container.\n\n        :param url: storage URL\n        :param token: auth token\n        :param container: container name to get a listing for\n        :param marker: marker query\n        :param limit: limit query\n        :param prefix: prefix query\n        :param delimeter: string to delimit the queries on\n        :param http_conn: HTTP connection object (If None, it will create the\n                          conn object)\n        :param full_listing: if True, return a full listing, else returns a max\n                             of 10000 listings\n        :returns: a list of objects\n        :raises ClientException: HTTP GET request failed\n        """'
newline|'\n'
name|'if'
name|'not'
name|'http_conn'
op|':'
newline|'\n'
indent|'            '
name|'http_conn'
op|'='
name|'http_connection'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'full_listing'
op|':'
newline|'\n'
indent|'            '
name|'rv'
op|'='
op|'['
op|']'
newline|'\n'
name|'listing'
op|'='
name|'get_container'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'container'
op|','
name|'marker'
op|','
name|'limit'
op|','
name|'prefix'
op|','
nl|'\n'
name|'delimiter'
op|','
name|'http_conn'
op|')'
newline|'\n'
name|'while'
name|'listing'
op|':'
newline|'\n'
indent|'                '
name|'rv'
op|'.'
name|'extend'
op|'('
name|'listing'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'delimiter'
op|':'
newline|'\n'
indent|'                    '
name|'marker'
op|'='
name|'listing'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'name'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'marker'
op|'='
name|'listing'
op|'['
op|'-'
number|'1'
op|']'
op|'.'
name|'get'
op|'('
string|"'name'"
op|','
name|'listing'
op|'['
op|'-'
number|'1'
op|']'
op|'.'
name|'get'
op|'('
string|"'subdir'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'listing'
op|'='
name|'get_container'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'container'
op|','
name|'marker'
op|','
name|'limit'
op|','
nl|'\n'
name|'prefix'
op|','
name|'delimiter'
op|','
name|'http_conn'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'rv'
newline|'\n'
dedent|''
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_conn'
newline|'\n'
name|'path'
op|'='
string|"'%s/%s'"
op|'%'
op|'('
name|'parsed'
op|'.'
name|'path'
op|','
name|'quote'
op|'('
name|'container'
op|')'
op|')'
newline|'\n'
name|'qs'
op|'='
string|"'format=json'"
newline|'\n'
name|'if'
name|'marker'
op|':'
newline|'\n'
indent|'            '
name|'qs'
op|'+='
string|"'&marker=%s'"
op|'%'
name|'quote'
op|'('
name|'marker'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'limit'
op|':'
newline|'\n'
indent|'            '
name|'qs'
op|'+='
string|"'&limit=%d'"
op|'%'
name|'limit'
newline|'\n'
dedent|''
name|'if'
name|'prefix'
op|':'
newline|'\n'
indent|'            '
name|'qs'
op|'+='
string|"'&prefix=%s'"
op|'%'
name|'quote'
op|'('
name|'prefix'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'delimiter'
op|':'
newline|'\n'
indent|'            '
name|'qs'
op|'+='
string|"'&delimiter=%s'"
op|'%'
name|'quote'
op|'('
name|'delimiter'
op|')'
newline|'\n'
dedent|''
name|'conn'
op|'.'
name|'request'
op|'('
string|"'GET'"
op|','
string|"'%s?%s'"
op|'%'
op|'('
name|'path'
op|','
name|'qs'
op|')'
op|','
string|"''"
op|','
op|'{'
string|"'X-Auth-Token'"
op|':'
name|'token'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'<'
number|'200'
name|'or'
name|'resp'
op|'.'
name|'status'
op|'>='
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'raise'
name|'ClientException'
op|'('
string|"'Container GET failed'"
op|','
nl|'\n'
name|'http_scheme'
op|'='
name|'parsed'
op|'.'
name|'scheme'
op|','
name|'http_host'
op|'='
name|'conn'
op|'.'
name|'host'
op|','
nl|'\n'
name|'http_port'
op|'='
name|'conn'
op|'.'
name|'port'
op|','
name|'http_path'
op|'='
name|'path'
op|','
name|'http_query'
op|'='
name|'qs'
op|','
nl|'\n'
name|'http_status'
op|'='
name|'resp'
op|'.'
name|'status'
op|','
name|'http_reason'
op|'='
name|'resp'
op|'.'
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status'
op|'=='
number|'204'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'return'
name|'json_loads'
op|'('
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|head_container
dedent|''
name|'def'
name|'head_container'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'container'
op|','
name|'http_conn'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get container stats.\n\n        :param url: storage URL\n        :param token: auth token\n        :param container: container name to get stats for\n        :param http_conn: HTTP connection object (If None, it will create the\n                          conn object)\n        :returns: a tuple of (object count, bytes used)\n        :raises ClientException: HTTP HEAD request failed\n        """'
newline|'\n'
name|'if'
name|'http_conn'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_conn'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_connection'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'path'
op|'='
string|"'%s/%s'"
op|'%'
op|'('
name|'parsed'
op|'.'
name|'path'
op|','
name|'quote'
op|'('
name|'container'
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'request'
op|'('
string|"'HEAD'"
op|','
name|'path'
op|','
string|"''"
op|','
op|'{'
string|"'X-Auth-Token'"
op|':'
name|'token'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'<'
number|'200'
name|'or'
name|'resp'
op|'.'
name|'status'
op|'>='
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ClientException'
op|'('
string|"'Container HEAD failed'"
op|','
nl|'\n'
name|'http_scheme'
op|'='
name|'parsed'
op|'.'
name|'scheme'
op|','
name|'http_host'
op|'='
name|'conn'
op|'.'
name|'host'
op|','
nl|'\n'
name|'http_port'
op|'='
name|'conn'
op|'.'
name|'port'
op|','
name|'http_path'
op|'='
name|'path'
op|','
name|'http_status'
op|'='
name|'resp'
op|'.'
name|'status'
op|','
nl|'\n'
name|'http_reason'
op|'='
name|'resp'
op|'.'
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'int'
op|'('
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'x-container-object-count'"
op|','
number|'0'
op|')'
op|')'
op|','
name|'int'
op|'('
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'x-container-bytes-used'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|put_container
dedent|''
name|'def'
name|'put_container'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'container'
op|','
name|'http_conn'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a container\n\n        :param url: storage URL\n        :param token: auth token\n        :param container: container name to create\n        :param http_conn: HTTP connection object (If None, it will create the\n                          conn object)\n        :raises ClientException: HTTP PUT request failed\n        """'
newline|'\n'
name|'if'
name|'http_conn'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_conn'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_connection'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'path'
op|'='
string|"'%s/%s'"
op|'%'
op|'('
name|'parsed'
op|'.'
name|'path'
op|','
name|'quote'
op|'('
name|'container'
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'request'
op|'('
string|"'PUT'"
op|','
name|'path'
op|','
string|"''"
op|','
op|'{'
string|"'X-Auth-Token'"
op|':'
name|'token'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'<'
number|'200'
name|'or'
name|'resp'
op|'.'
name|'status'
op|'>='
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ClientException'
op|'('
string|"'Container PUT failed'"
op|','
nl|'\n'
name|'http_scheme'
op|'='
name|'parsed'
op|'.'
name|'scheme'
op|','
name|'http_host'
op|'='
name|'conn'
op|'.'
name|'host'
op|','
nl|'\n'
name|'http_port'
op|'='
name|'conn'
op|'.'
name|'port'
op|','
name|'http_path'
op|'='
name|'path'
op|','
name|'http_status'
op|'='
name|'resp'
op|'.'
name|'status'
op|','
nl|'\n'
name|'http_reason'
op|'='
name|'resp'
op|'.'
name|'reason'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|delete_container
dedent|''
dedent|''
name|'def'
name|'delete_container'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'container'
op|','
name|'http_conn'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Delete a container\n\n        :param url: storage URL\n        :param token: auth token\n        :param container: container name to delete\n        :param http_conn: HTTP connection object (If None, it will create the\n                          conn object)\n        :raises ClientException: HTTP DELETE request failed\n        """'
newline|'\n'
name|'if'
name|'http_conn'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_conn'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_connection'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'path'
op|'='
string|"'%s/%s'"
op|'%'
op|'('
name|'parsed'
op|'.'
name|'path'
op|','
name|'quote'
op|'('
name|'container'
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'request'
op|'('
string|"'DELETE'"
op|','
name|'path'
op|','
string|"''"
op|','
op|'{'
string|"'X-Auth-Token'"
op|':'
name|'token'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'<'
number|'200'
name|'or'
name|'resp'
op|'.'
name|'status'
op|'>='
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ClientException'
op|'('
string|"'Container DELETE failed'"
op|','
nl|'\n'
name|'http_scheme'
op|'='
name|'parsed'
op|'.'
name|'scheme'
op|','
name|'http_host'
op|'='
name|'conn'
op|'.'
name|'host'
op|','
nl|'\n'
name|'http_port'
op|'='
name|'conn'
op|'.'
name|'port'
op|','
name|'http_path'
op|'='
name|'path'
op|','
name|'http_status'
op|'='
name|'resp'
op|'.'
name|'status'
op|','
nl|'\n'
name|'http_reason'
op|'='
name|'resp'
op|'.'
name|'reason'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_object
dedent|''
dedent|''
name|'def'
name|'get_object'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'container'
op|','
name|'name'
op|','
name|'http_conn'
op|'='
name|'None'
op|','
nl|'\n'
name|'resp_chunk_size'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get an object\n\n        :param url: storage URL\n        :param token: auth token\n        :param container: container name that the object is in\n        :param name: object name to get\n        :param http_conn: HTTP connection object (If None, it will create the\n                          conn object)\n        :param resp_chunk_size: if defined, chunk size of data to read\n        :returns: a list of objects\n        :raises ClientException: HTTP GET request failed\n        """'
newline|'\n'
name|'if'
name|'http_conn'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_conn'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_connection'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'path'
op|'='
string|"'%s/%s/%s'"
op|'%'
op|'('
name|'parsed'
op|'.'
name|'path'
op|','
name|'quote'
op|'('
name|'container'
op|')'
op|','
name|'quote'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'request'
op|'('
string|"'GET'"
op|','
name|'path'
op|','
string|"''"
op|','
op|'{'
string|"'X-Auth-Token'"
op|':'
name|'token'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'<'
number|'200'
name|'or'
name|'resp'
op|'.'
name|'status'
op|'>='
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'raise'
name|'ClientException'
op|'('
string|"'Object GET failed'"
op|','
name|'http_scheme'
op|'='
name|'parsed'
op|'.'
name|'scheme'
op|','
nl|'\n'
name|'http_host'
op|'='
name|'conn'
op|'.'
name|'host'
op|','
name|'http_port'
op|'='
name|'conn'
op|'.'
name|'port'
op|','
name|'http_path'
op|'='
name|'path'
op|','
nl|'\n'
name|'http_status'
op|'='
name|'resp'
op|'.'
name|'status'
op|','
name|'http_reason'
op|'='
name|'resp'
op|'.'
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'resp'
op|'.'
name|'getheaders'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-object-meta-'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'metadata'
op|'['
name|'unquote'
op|'('
name|'key'
op|'['
name|'len'
op|'('
string|"'x-object-meta-'"
op|')'
op|':'
op|']'
op|')'
op|']'
op|'='
name|'unquote'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'resp_chunk_size'
op|':'
newline|'\n'
nl|'\n'
DECL|function|_object_body
indent|'            '
name|'def'
name|'_object_body'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'buf'
op|'='
name|'resp'
op|'.'
name|'read'
op|'('
name|'resp_chunk_size'
op|')'
newline|'\n'
name|'while'
name|'buf'
op|':'
newline|'\n'
indent|'                    '
name|'yield'
name|'buf'
newline|'\n'
name|'buf'
op|'='
name|'resp'
op|'.'
name|'read'
op|'('
name|'resp_chunk_size'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'object_body'
op|'='
name|'_object_body'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'object_body'
op|'='
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'content-type'"
op|')'
op|','
name|'int'
op|'('
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'content-length'"
op|','
number|'0'
op|')'
op|')'
op|','
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'last-modified'"
op|')'
op|','
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'etag'"
op|')'
op|'.'
name|'strip'
op|'('
string|'\'"\''
op|')'
op|','
name|'metadata'
op|','
name|'object_body'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|head_object
dedent|''
name|'def'
name|'head_object'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'container'
op|','
name|'name'
op|','
name|'http_conn'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get object info\n\n        :param url: storage URL\n        :param token: auth token\n        :param container: container name that the object is in\n        :param name: object name to get info for\n        :param http_conn: HTTP connection object (If None, it will create the\n                          conn object)\n        :returns: a tuple of (content type, content length, last modfied, etag,\n                  dictionary of metadata)\n        :raises ClientException: HTTP HEAD request failed\n        """'
newline|'\n'
name|'if'
name|'http_conn'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_conn'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_connection'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'path'
op|'='
string|"'%s/%s/%s'"
op|'%'
op|'('
name|'parsed'
op|'.'
name|'path'
op|','
name|'quote'
op|'('
name|'container'
op|')'
op|','
name|'quote'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'request'
op|'('
string|"'HEAD'"
op|','
name|'path'
op|','
string|"''"
op|','
op|'{'
string|"'X-Auth-Token'"
op|':'
name|'token'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'<'
number|'200'
name|'or'
name|'resp'
op|'.'
name|'status'
op|'>='
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ClientException'
op|'('
string|"'Object HEAD failed'"
op|','
name|'http_scheme'
op|'='
name|'parsed'
op|'.'
name|'scheme'
op|','
nl|'\n'
name|'http_host'
op|'='
name|'conn'
op|'.'
name|'host'
op|','
name|'http_port'
op|'='
name|'conn'
op|'.'
name|'port'
op|','
name|'http_path'
op|'='
name|'path'
op|','
nl|'\n'
name|'http_status'
op|'='
name|'resp'
op|'.'
name|'status'
op|','
name|'http_reason'
op|'='
name|'resp'
op|'.'
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'resp'
op|'.'
name|'getheaders'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-object-meta-'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'metadata'
op|'['
name|'unquote'
op|'('
name|'key'
op|'['
name|'len'
op|'('
string|"'x-object-meta-'"
op|')'
op|':'
op|']'
op|')'
op|']'
op|'='
name|'unquote'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'content-type'"
op|')'
op|','
name|'int'
op|'('
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'content-length'"
op|','
number|'0'
op|')'
op|')'
op|','
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'last-modified'"
op|')'
op|','
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'etag'"
op|')'
op|'.'
name|'strip'
op|'('
string|'\'"\''
op|')'
op|','
name|'metadata'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|put_object
dedent|''
name|'def'
name|'put_object'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'container'
op|','
name|'name'
op|','
name|'contents'
op|','
name|'metadata'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'content_length'
op|'='
name|'None'
op|','
name|'etag'
op|'='
name|'None'
op|','
name|'chunk_size'
op|'='
number|'65536'
op|','
nl|'\n'
name|'content_type'
op|'='
name|'None'
op|','
name|'http_conn'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Put an object\n\n        :param url: storage URL\n        :param token: auth token\n        :param container: container name that the object is in\n        :param name: object name to put\n        :param contents: file like object to read object data from\n        :param metadata: dictionary of object metadata\n        :param content_length: value to send as content-length header\n        :param etag: etag of contents\n        :param chunk_size: chunk size of data to write\n        :param content_type: value to send as content-type header\n        :param http_conn: HTTP connection object (If None, it will create the\n                          conn object)\n        :returns: etag from server response\n        :raises ClientException: HTTP PUT request failed\n        """'
newline|'\n'
name|'if'
name|'http_conn'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_conn'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_connection'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'path'
op|'='
string|"'%s/%s/%s'"
op|'%'
op|'('
name|'parsed'
op|'.'
name|'path'
op|','
name|'quote'
op|'('
name|'container'
op|')'
op|','
name|'quote'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Auth-Token'"
op|':'
name|'token'
op|'}'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'metadata'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'['
string|"'X-Object-Meta-%s'"
op|'%'
name|'quote'
op|'('
name|'key'
op|')'
op|']'
op|'='
name|'quote'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'etag'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'['
string|"'ETag'"
op|']'
op|'='
name|'etag'
op|'.'
name|'strip'
op|'('
string|'\'"\''
op|')'
newline|'\n'
dedent|''
name|'if'
name|'content_length'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
name|'str'
op|'('
name|'content_length'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'content_type'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
name|'content_type'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'contents'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
string|"'0'"
newline|'\n'
dedent|''
name|'if'
name|'hasattr'
op|'('
name|'contents'
op|','
string|"'read'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'putrequest'
op|'('
string|"'PUT'"
op|','
name|'path'
op|')'
newline|'\n'
name|'for'
name|'header'
op|','
name|'value'
name|'in'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'conn'
op|'.'
name|'putheader'
op|'('
name|'header'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'content_length'
op|':'
newline|'\n'
indent|'                '
name|'conn'
op|'.'
name|'putheader'
op|'('
string|"'Transfer-Encoding'"
op|','
string|"'chunked'"
op|')'
newline|'\n'
dedent|''
name|'conn'
op|'.'
name|'endheaders'
op|'('
op|')'
newline|'\n'
name|'chunk'
op|'='
name|'contents'
op|'.'
name|'read'
op|'('
name|'chunk_size'
op|')'
newline|'\n'
name|'while'
name|'chunk'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'content_length'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'send'
op|'('
string|"'%x\\r\\n%s\\r\\n'"
op|'%'
op|'('
name|'len'
op|'('
name|'chunk'
op|')'
op|','
name|'chunk'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'send'
op|'('
name|'chunk'
op|')'
newline|'\n'
dedent|''
name|'chunk'
op|'='
name|'contents'
op|'.'
name|'read'
op|'('
name|'chunk_size'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'content_length'
op|':'
newline|'\n'
indent|'                '
name|'conn'
op|'.'
name|'send'
op|'('
string|"'0\\r\\n\\r\\n'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'request'
op|'('
string|"'PUT'"
op|','
name|'path'
op|','
name|'contents'
op|','
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'<'
number|'200'
name|'or'
name|'resp'
op|'.'
name|'status'
op|'>='
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ClientException'
op|'('
string|"'Object PUT failed'"
op|','
name|'http_scheme'
op|'='
name|'parsed'
op|'.'
name|'scheme'
op|','
nl|'\n'
name|'http_host'
op|'='
name|'conn'
op|'.'
name|'host'
op|','
name|'http_port'
op|'='
name|'conn'
op|'.'
name|'port'
op|','
name|'http_path'
op|'='
name|'path'
op|','
nl|'\n'
name|'http_status'
op|'='
name|'resp'
op|'.'
name|'status'
op|','
name|'http_reason'
op|'='
name|'resp'
op|'.'
name|'reason'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'etag'"
op|')'
op|'.'
name|'strip'
op|'('
string|'\'"\''
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|post_object
dedent|''
name|'def'
name|'post_object'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'container'
op|','
name|'name'
op|','
name|'metadata'
op|','
name|'http_conn'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Change object metadata\n\n        :param url: storage URL\n        :param token: auth token\n        :param container: container name that the object is in\n        :param name: object name to change\n        :param metadata: dictionary of object metadata\n        :param http_conn: HTTP connection object (If None, it will create the\n                          conn object)\n        :raises ClientException: HTTP POST request failed\n        """'
newline|'\n'
name|'if'
name|'http_conn'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_conn'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_connection'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'path'
op|'='
string|"'%s/%s/%s'"
op|'%'
op|'('
name|'parsed'
op|'.'
name|'path'
op|','
name|'quote'
op|'('
name|'container'
op|')'
op|','
name|'quote'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Auth-Token'"
op|':'
name|'token'
op|'}'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'metadata'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'['
string|"'X-Object-Meta-%s'"
op|'%'
name|'quote'
op|'('
name|'key'
op|')'
op|']'
op|'='
name|'quote'
op|'('
name|'value'
op|')'
newline|'\n'
dedent|''
name|'conn'
op|'.'
name|'request'
op|'('
string|"'POST'"
op|','
name|'path'
op|','
string|"''"
op|','
name|'headers'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'<'
number|'200'
name|'or'
name|'resp'
op|'.'
name|'status'
op|'>='
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ClientException'
op|'('
string|"'Object POST failed'"
op|','
name|'http_scheme'
op|'='
name|'parsed'
op|'.'
name|'scheme'
op|','
nl|'\n'
name|'http_host'
op|'='
name|'conn'
op|'.'
name|'host'
op|','
name|'http_port'
op|'='
name|'conn'
op|'.'
name|'port'
op|','
name|'http_path'
op|'='
name|'path'
op|','
nl|'\n'
name|'http_status'
op|'='
name|'resp'
op|'.'
name|'status'
op|','
name|'http_reason'
op|'='
name|'resp'
op|'.'
name|'reason'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|delete_object
dedent|''
dedent|''
name|'def'
name|'delete_object'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'container'
op|','
name|'name'
op|','
name|'http_conn'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Delete object\n\n        :param url: storage URL\n        :param token: auth token\n        :param container: container name that the object is in\n        :param name: object name to delete\n        :param http_conn: HTTP connection object (If None, it will create the\n                          conn object)\n        :raises ClientException: HTTP DELETE request failed\n        """'
newline|'\n'
name|'if'
name|'http_conn'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_conn'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'parsed'
op|','
name|'conn'
op|'='
name|'http_connection'
op|'('
name|'url'
op|')'
newline|'\n'
dedent|''
name|'path'
op|'='
string|"'%s/%s/%s'"
op|'%'
op|'('
name|'parsed'
op|'.'
name|'path'
op|','
name|'quote'
op|'('
name|'container'
op|')'
op|','
name|'quote'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'request'
op|'('
string|"'DELETE'"
op|','
name|'path'
op|','
string|"''"
op|','
op|'{'
string|"'X-Auth-Token'"
op|':'
name|'token'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'<'
number|'200'
name|'or'
name|'resp'
op|'.'
name|'status'
op|'>='
number|'300'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ClientException'
op|'('
string|"'Object DELETE failed'"
op|','
nl|'\n'
name|'http_scheme'
op|'='
name|'parsed'
op|'.'
name|'scheme'
op|','
name|'http_host'
op|'='
name|'conn'
op|'.'
name|'host'
op|','
nl|'\n'
name|'http_port'
op|'='
name|'conn'
op|'.'
name|'port'
op|','
name|'http_path'
op|'='
name|'path'
op|','
name|'http_status'
op|'='
name|'resp'
op|'.'
name|'status'
op|','
nl|'\n'
name|'http_reason'
op|'='
name|'resp'
op|'.'
name|'reason'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Connection
dedent|''
dedent|''
name|'class'
name|'Connection'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Convenience class to make requests that will also retry the request"""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'authurl'
op|','
name|'user'
op|','
name|'key'
op|','
name|'retries'
op|'='
number|'5'
op|','
name|'preauthurl'
op|'='
name|'None'
op|','
nl|'\n'
name|'preauthtoken'
op|'='
name|'None'
op|','
name|'snet'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""\n            :param authurl: authenitcation URL\n            :param user: user name to authenticate as\n            :param key: key/password to authenticate with\n            :param retries: Number of times to retry the request before failing\n            :param preauthurl: storage URL (if you have already authenticated)\n            :param preauthtoken: authentication token (if you have already\n                                 authenticated)\n            :param snet: use SERVICENET internal network default is False \n            """'
newline|'\n'
name|'self'
op|'.'
name|'authurl'
op|'='
name|'authurl'
newline|'\n'
name|'self'
op|'.'
name|'user'
op|'='
name|'user'
newline|'\n'
name|'self'
op|'.'
name|'key'
op|'='
name|'key'
newline|'\n'
name|'self'
op|'.'
name|'retries'
op|'='
name|'retries'
newline|'\n'
name|'self'
op|'.'
name|'http_conn'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'url'
op|'='
name|'preauthurl'
newline|'\n'
name|'self'
op|'.'
name|'token'
op|'='
name|'preauthtoken'
newline|'\n'
name|'self'
op|'.'
name|'attempts'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'snet'
op|'='
name|'snet'
newline|'\n'
nl|'\n'
DECL|member|_retry
dedent|''
name|'def'
name|'_retry'
op|'('
name|'self'
op|','
name|'func'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'kwargs'
op|'['
string|"'http_conn'"
op|']'
op|'='
name|'self'
op|'.'
name|'http_conn'
newline|'\n'
name|'self'
op|'.'
name|'attempts'
op|'='
number|'0'
newline|'\n'
name|'backoff'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'self'
op|'.'
name|'attempts'
op|'<='
name|'self'
op|'.'
name|'retries'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'attempts'
op|'+='
number|'1'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'not'
name|'self'
op|'.'
name|'url'
name|'or'
name|'not'
name|'self'
op|'.'
name|'token'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|'='
name|'get_auth'
op|'('
name|'self'
op|'.'
name|'authurl'
op|','
name|'self'
op|'.'
name|'user'
op|','
name|'self'
op|'.'
name|'key'
op|','
name|'snet'
op|'='
name|'self'
op|'.'
name|'snet'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'http_conn'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'http_conn'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'http_conn'
op|'='
name|'http_connection'
op|'('
name|'self'
op|'.'
name|'url'
op|')'
newline|'\n'
name|'kwargs'
op|'['
string|"'http_conn'"
op|']'
op|'='
name|'self'
op|'.'
name|'http_conn'
newline|'\n'
dedent|''
name|'rv'
op|'='
name|'func'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'rv'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'socket'
op|'.'
name|'error'
op|','
name|'HTTPException'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'self'
op|'.'
name|'attempts'
op|'>'
name|'self'
op|'.'
name|'retries'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'http_conn'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'self'
op|'.'
name|'attempts'
op|'>'
name|'self'
op|'.'
name|'retries'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
newline|'\n'
dedent|''
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'=='
number|'401'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'url'
op|'='
name|'self'
op|'.'
name|'token'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'attempts'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'                            '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'elif'
number|'500'
op|'<='
name|'err'
op|'.'
name|'http_status'
op|'<='
number|'599'
op|':'
newline|'\n'
indent|'                        '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'sleep'
op|'('
name|'backoff'
op|')'
newline|'\n'
name|'backoff'
op|'*='
number|'2'
newline|'\n'
nl|'\n'
DECL|member|head_account
dedent|''
dedent|''
name|'def'
name|'head_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Wrapper for head_account"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_retry'
op|'('
name|'head_account'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_account
dedent|''
name|'def'
name|'get_account'
op|'('
name|'self'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'prefix'
op|'='
name|'None'
op|','
nl|'\n'
name|'full_listing'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Wrapper for get_account"""'
newline|'\n'
comment|'# TODO: With full_listing=True this will restart the entire listing'
nl|'\n'
comment|'# with each retry. Need to make a better version that just retries'
nl|'\n'
comment|'# where it left off.'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'_retry'
op|'('
name|'get_account'
op|','
name|'marker'
op|'='
name|'marker'
op|','
name|'limit'
op|'='
name|'limit'
op|','
nl|'\n'
name|'prefix'
op|'='
name|'prefix'
op|','
name|'full_listing'
op|'='
name|'full_listing'
op|')'
newline|'\n'
nl|'\n'
DECL|member|head_container
dedent|''
name|'def'
name|'head_container'
op|'('
name|'self'
op|','
name|'container'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Wrapper for head_container"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_retry'
op|'('
name|'head_container'
op|','
name|'container'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_container
dedent|''
name|'def'
name|'get_container'
op|'('
name|'self'
op|','
name|'container'
op|','
name|'marker'
op|'='
name|'None'
op|','
name|'limit'
op|'='
name|'None'
op|','
name|'prefix'
op|'='
name|'None'
op|','
nl|'\n'
name|'delimiter'
op|'='
name|'None'
op|','
name|'full_listing'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Wrapper for get_container"""'
newline|'\n'
comment|'# TODO: With full_listing=True this will restart the entire listing'
nl|'\n'
comment|'# with each retry. Need to make a better version that just retries'
nl|'\n'
comment|'# where it left off.'
nl|'\n'
name|'return'
name|'self'
op|'.'
name|'_retry'
op|'('
name|'get_container'
op|','
name|'container'
op|','
name|'marker'
op|'='
name|'marker'
op|','
nl|'\n'
name|'limit'
op|'='
name|'limit'
op|','
name|'prefix'
op|'='
name|'prefix'
op|','
name|'delimiter'
op|'='
name|'delimiter'
op|','
nl|'\n'
name|'full_listing'
op|'='
name|'full_listing'
op|')'
newline|'\n'
nl|'\n'
DECL|member|put_container
dedent|''
name|'def'
name|'put_container'
op|'('
name|'self'
op|','
name|'container'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Wrapper for put_container"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_retry'
op|'('
name|'put_container'
op|','
name|'container'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_container
dedent|''
name|'def'
name|'delete_container'
op|'('
name|'self'
op|','
name|'container'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Wrapper for delete_container"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_retry'
op|'('
name|'delete_container'
op|','
name|'container'
op|')'
newline|'\n'
nl|'\n'
DECL|member|head_object
dedent|''
name|'def'
name|'head_object'
op|'('
name|'self'
op|','
name|'container'
op|','
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Wrapper for head_object"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_retry'
op|'('
name|'head_object'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_object
dedent|''
name|'def'
name|'get_object'
op|'('
name|'self'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'resp_chunk_size'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Wrapper for get_object"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_retry'
op|'('
name|'get_object'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'resp_chunk_size'
op|'='
name|'resp_chunk_size'
op|')'
newline|'\n'
nl|'\n'
DECL|member|put_object
dedent|''
name|'def'
name|'put_object'
op|'('
name|'self'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'contents'
op|','
name|'metadata'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'content_length'
op|'='
name|'None'
op|','
name|'etag'
op|'='
name|'None'
op|','
name|'chunk_size'
op|'='
number|'65536'
op|','
nl|'\n'
name|'content_type'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Wrapper for put_object"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_retry'
op|'('
name|'put_object'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'contents'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'metadata'
op|','
name|'content_length'
op|'='
name|'content_length'
op|','
name|'etag'
op|'='
name|'etag'
op|','
nl|'\n'
name|'chunk_size'
op|'='
name|'chunk_size'
op|','
name|'content_type'
op|'='
name|'content_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|post_object
dedent|''
name|'def'
name|'post_object'
op|'('
name|'self'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Wrapper for post_object"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_retry'
op|'('
name|'post_object'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_object
dedent|''
name|'def'
name|'delete_object'
op|'('
name|'self'
op|','
name|'container'
op|','
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Wrapper for delete_object"""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_retry'
op|'('
name|'delete_object'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
nl|'\n'
comment|'# End inclusion of swift.common.client'
nl|'\n'
comment|'# # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # # #'
nl|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'from'
name|'errno'
name|'import'
name|'EEXIST'
op|','
name|'ENOENT'
newline|'\n'
name|'from'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
name|'from'
name|'optparse'
name|'import'
name|'OptionParser'
newline|'\n'
name|'from'
name|'os'
name|'import'
name|'environ'
op|','
name|'listdir'
op|','
name|'makedirs'
op|','
name|'utime'
newline|'\n'
name|'from'
name|'os'
op|'.'
name|'path'
name|'import'
name|'basename'
op|','
name|'dirname'
op|','
name|'getmtime'
op|','
name|'getsize'
op|','
name|'isdir'
op|','
name|'join'
newline|'\n'
name|'from'
name|'Queue'
name|'import'
name|'Empty'
op|','
name|'Queue'
newline|'\n'
name|'from'
name|'sys'
name|'import'
name|'argv'
op|','
name|'exit'
op|','
name|'stderr'
newline|'\n'
name|'from'
name|'threading'
name|'import'
name|'enumerate'
name|'as'
name|'threading_enumerate'
op|','
name|'Thread'
newline|'\n'
name|'from'
name|'time'
name|'import'
name|'sleep'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|mkdirs
name|'def'
name|'mkdirs'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'makedirs'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|','
name|'err'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'err'
op|'.'
name|'errno'
op|'!='
name|'EEXIST'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|QueueFunctionThread
dedent|''
dedent|''
dedent|''
name|'class'
name|'QueueFunctionThread'
op|'('
name|'Thread'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'queue'
op|','
name|'func'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Calls func for each item in queue; func is called with a queued\n            item as the first arg followed by *args and **kwargs. Use the abort\n            attribute to have the thread empty the queue (without processing)\n            and exit. """'
newline|'\n'
name|'Thread'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'abort'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'queue'
op|'='
name|'queue'
newline|'\n'
name|'self'
op|'.'
name|'func'
op|'='
name|'func'
newline|'\n'
name|'self'
op|'.'
name|'args'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'kwargs'
op|'='
name|'kwargs'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'item'
op|'='
name|'self'
op|'.'
name|'queue'
op|'.'
name|'get_nowait'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'abort'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'func'
op|'('
name|'item'
op|','
op|'*'
name|'self'
op|'.'
name|'args'
op|','
op|'**'
name|'self'
op|'.'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'queue'
op|'.'
name|'task_done'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Empty'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'abort'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'sleep'
op|'('
number|'0.01'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'st_delete_help'
op|'='
string|"'''\ndelete --all OR delete container [object] [object] ...\n    Deletes everything in the account (with --all), or everything in a\n    container, or a list of objects depending on the args given.'''"
op|'.'
name|'strip'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
DECL|function|st_delete
name|'def'
name|'st_delete'
op|'('
name|'options'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
op|'('
name|'not'
name|'args'
name|'and'
name|'not'
name|'options'
op|'.'
name|'yes_all'
op|')'
name|'or'
op|'('
name|'args'
name|'and'
name|'options'
op|'.'
name|'yes_all'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Usage: %s [options] %s'"
op|'%'
nl|'\n'
op|'('
name|'basename'
op|'('
name|'argv'
op|'['
number|'0'
op|']'
op|')'
op|','
name|'st_delete_help'
op|')'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'object_queue'
op|'='
name|'Queue'
op|'('
number|'10000'
op|')'
newline|'\n'
DECL|function|_delete_object
name|'def'
name|'_delete_object'
op|'('
op|'('
name|'container'
op|','
name|'obj'
op|')'
op|','
name|'conn'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'conn'
op|'.'
name|'delete_object'
op|'('
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'if'
name|'options'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
name|'options'
op|'.'
name|'yes_all'
name|'and'
name|'join'
op|'('
name|'container'
op|','
name|'obj'
op|')'
name|'or'
name|'obj'
newline|'\n'
name|'if'
name|'path'
op|'['
op|':'
number|'1'
op|']'
name|'in'
op|'('
string|"'/'"
op|','
string|"'\\\\'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'path'
op|'='
name|'path'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'options'
op|'.'
name|'print_queue'
op|'.'
name|'put'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Object %s not found'"
op|'%'
nl|'\n'
name|'repr'
op|'('
string|"'%s/%s'"
op|'%'
op|'('
name|'container'
op|','
name|'obj'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'container_queue'
op|'='
name|'Queue'
op|'('
number|'10000'
op|')'
newline|'\n'
DECL|function|_delete_container
name|'def'
name|'_delete_container'
op|'('
name|'container'
op|','
name|'conn'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'objects'
op|'='
op|'['
name|'o'
op|'['
string|"'name'"
op|']'
name|'for'
name|'o'
name|'in'
nl|'\n'
name|'conn'
op|'.'
name|'get_container'
op|'('
name|'container'
op|','
name|'marker'
op|'='
name|'marker'
op|')'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'objects'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'for'
name|'obj'
name|'in'
name|'objects'
op|':'
newline|'\n'
indent|'                    '
name|'object_queue'
op|'.'
name|'put'
op|'('
op|'('
name|'container'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
dedent|''
name|'marker'
op|'='
name|'objects'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
dedent|''
name|'while'
name|'not'
name|'object_queue'
op|'.'
name|'empty'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'sleep'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
name|'attempts'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'delete_container'
op|'('
name|'container'
op|')'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
number|'409'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
newline|'\n'
dedent|''
name|'if'
name|'attempts'
op|'>'
number|'10'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
newline|'\n'
dedent|''
name|'attempts'
op|'+='
number|'1'
newline|'\n'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Container %s not found'"
op|'%'
name|'repr'
op|'('
name|'container'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'url'
op|','
name|'token'
op|'='
name|'get_auth'
op|'('
name|'options'
op|'.'
name|'auth'
op|','
name|'options'
op|'.'
name|'user'
op|','
name|'options'
op|'.'
name|'key'
op|','
name|'snet'
op|'='
name|'options'
op|'.'
name|'snet'
op|')'
newline|'\n'
name|'create_connection'
op|'='
name|'lambda'
op|':'
name|'Connection'
op|'('
name|'options'
op|'.'
name|'auth'
op|','
name|'options'
op|'.'
name|'user'
op|','
nl|'\n'
name|'options'
op|'.'
name|'key'
op|','
name|'preauthurl'
op|'='
name|'url'
op|','
nl|'\n'
name|'preauthtoken'
op|'='
name|'token'
op|','
name|'snet'
op|'='
name|'options'
op|'.'
name|'snet'
op|')'
newline|'\n'
name|'object_threads'
op|'='
op|'['
name|'QueueFunctionThread'
op|'('
name|'object_queue'
op|','
name|'_delete_object'
op|','
nl|'\n'
name|'create_connection'
op|'('
op|')'
op|')'
name|'for'
name|'_'
name|'in'
name|'xrange'
op|'('
number|'10'
op|')'
op|']'
newline|'\n'
name|'for'
name|'thread'
name|'in'
name|'object_threads'
op|':'
newline|'\n'
indent|'        '
name|'thread'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
dedent|''
name|'container_threads'
op|'='
op|'['
name|'QueueFunctionThread'
op|'('
name|'container_queue'
op|','
nl|'\n'
name|'_delete_container'
op|','
name|'create_connection'
op|'('
op|')'
op|')'
name|'for'
name|'_'
name|'in'
name|'xrange'
op|'('
number|'10'
op|')'
op|']'
newline|'\n'
name|'for'
name|'thread'
name|'in'
name|'container_threads'
op|':'
newline|'\n'
indent|'        '
name|'thread'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'args'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'create_connection'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'containers'
op|'='
op|'['
name|'c'
op|'['
string|"'name'"
op|']'
name|'for'
name|'c'
name|'in'
name|'conn'
op|'.'
name|'get_account'
op|'('
name|'marker'
op|'='
name|'marker'
op|')'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'containers'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'for'
name|'container'
name|'in'
name|'containers'
op|':'
newline|'\n'
indent|'                    '
name|'container_queue'
op|'.'
name|'put'
op|'('
name|'container'
op|')'
newline|'\n'
dedent|''
name|'marker'
op|'='
name|'containers'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
dedent|''
name|'while'
name|'not'
name|'container_queue'
op|'.'
name|'empty'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'sleep'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
name|'while'
name|'not'
name|'object_queue'
op|'.'
name|'empty'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'sleep'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Account not found'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'len'
op|'('
name|'args'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'create_connection'
op|'('
op|')'
newline|'\n'
name|'_delete_container'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'conn'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'obj'
name|'in'
name|'args'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'object_queue'
op|'.'
name|'put'
op|'('
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'while'
name|'not'
name|'container_queue'
op|'.'
name|'empty'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sleep'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'thread'
name|'in'
name|'container_threads'
op|':'
newline|'\n'
indent|'        '
name|'thread'
op|'.'
name|'abort'
op|'='
name|'True'
newline|'\n'
name|'while'
name|'thread'
op|'.'
name|'isAlive'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'thread'
op|'.'
name|'join'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'while'
name|'not'
name|'object_queue'
op|'.'
name|'empty'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sleep'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'thread'
name|'in'
name|'object_threads'
op|':'
newline|'\n'
indent|'        '
name|'thread'
op|'.'
name|'abort'
op|'='
name|'True'
newline|'\n'
name|'while'
name|'thread'
op|'.'
name|'isAlive'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'thread'
op|'.'
name|'join'
op|'('
number|'0.01'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'st_download_help'
op|'='
string|"'''\ndownload --all OR download container [object] [object] ...\n    Downloads everything in the account (with --all), or everything in a\n    container, or a list of objects depending on the args given.'''"
op|'.'
name|'strip'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
DECL|function|st_download
name|'def'
name|'st_download'
op|'('
name|'options'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
op|'('
name|'not'
name|'args'
name|'and'
name|'not'
name|'options'
op|'.'
name|'yes_all'
op|')'
name|'or'
op|'('
name|'args'
name|'and'
name|'options'
op|'.'
name|'yes_all'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Usage: %s [options] %s'"
op|'%'
nl|'\n'
op|'('
name|'basename'
op|'('
name|'argv'
op|'['
number|'0'
op|']'
op|')'
op|','
name|'st_download_help'
op|')'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'object_queue'
op|'='
name|'Queue'
op|'('
number|'10000'
op|')'
newline|'\n'
DECL|function|_download_object
name|'def'
name|'_download_object'
op|'('
op|'('
name|'container'
op|','
name|'obj'
op|')'
op|','
name|'conn'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'content_type'
op|','
name|'content_length'
op|','
name|'_'
op|','
name|'etag'
op|','
name|'metadata'
op|','
name|'body'
op|'='
name|'conn'
op|'.'
name|'get_object'
op|'('
name|'container'
op|','
name|'obj'
op|','
name|'resp_chunk_size'
op|'='
number|'65536'
op|')'
newline|'\n'
name|'path'
op|'='
name|'options'
op|'.'
name|'yes_all'
name|'and'
name|'join'
op|'('
name|'container'
op|','
name|'obj'
op|')'
name|'or'
name|'obj'
newline|'\n'
name|'if'
name|'path'
op|'['
op|':'
number|'1'
op|']'
name|'in'
op|'('
string|"'/'"
op|','
string|"'\\\\'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'path'
op|'='
name|'path'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'content_type'
op|'.'
name|'split'
op|'('
string|"';'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
op|'=='
string|"'text/directory'"
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'isdir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'mkdirs'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
name|'read_length'
op|'='
number|'0'
newline|'\n'
name|'md5sum'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'for'
name|'chunk'
name|'in'
name|'body'
op|':'
newline|'\n'
indent|'                    '
name|'read_length'
op|'+='
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'md5sum'
op|'.'
name|'update'
op|'('
name|'chunk'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'dirpath'
op|'='
name|'dirname'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'dirpath'
name|'and'
name|'not'
name|'isdir'
op|'('
name|'dirpath'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'mkdirs'
op|'('
name|'dirpath'
op|')'
newline|'\n'
dedent|''
name|'fp'
op|'='
name|'open'
op|'('
name|'path'
op|','
string|"'wb'"
op|')'
newline|'\n'
name|'read_length'
op|'='
number|'0'
newline|'\n'
name|'md5sum'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'for'
name|'chunk'
name|'in'
name|'body'
op|':'
newline|'\n'
indent|'                    '
name|'fp'
op|'.'
name|'write'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'read_length'
op|'+='
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'md5sum'
op|'.'
name|'update'
op|'('
name|'chunk'
op|')'
newline|'\n'
dedent|''
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'md5sum'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|'!='
name|'etag'
op|':'
newline|'\n'
indent|'                '
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'%s: md5sum != etag, %s != %s'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'md5sum'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
name|'etag'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'read_length'
op|'!='
name|'content_length'
op|':'
newline|'\n'
indent|'                '
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
nl|'\n'
string|"'%s: read_length != content_length, %d != %d'"
op|'%'
nl|'\n'
op|'('
name|'path'
op|','
name|'read_length'
op|','
name|'content_length'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'mtime'"
name|'in'
name|'metadata'
op|':'
newline|'\n'
indent|'                '
name|'mtime'
op|'='
name|'float'
op|'('
name|'metadata'
op|'['
string|"'mtime'"
op|']'
op|')'
newline|'\n'
name|'utime'
op|'('
name|'path'
op|','
op|'('
name|'mtime'
op|','
name|'mtime'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'options'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                '
name|'options'
op|'.'
name|'print_queue'
op|'.'
name|'put'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Object %s not found'"
op|'%'
nl|'\n'
name|'repr'
op|'('
string|"'%s/%s'"
op|'%'
op|'('
name|'container'
op|','
name|'obj'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'container_queue'
op|'='
name|'Queue'
op|'('
number|'10000'
op|')'
newline|'\n'
DECL|function|_download_container
name|'def'
name|'_download_container'
op|'('
name|'container'
op|','
name|'conn'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'objects'
op|'='
op|'['
name|'o'
op|'['
string|"'name'"
op|']'
name|'for'
name|'o'
name|'in'
nl|'\n'
name|'conn'
op|'.'
name|'get_container'
op|'('
name|'container'
op|','
name|'marker'
op|'='
name|'marker'
op|')'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'objects'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'for'
name|'obj'
name|'in'
name|'objects'
op|':'
newline|'\n'
indent|'                    '
name|'object_queue'
op|'.'
name|'put'
op|'('
op|'('
name|'container'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
dedent|''
name|'marker'
op|'='
name|'objects'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Container %s not found'"
op|'%'
name|'repr'
op|'('
name|'container'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'url'
op|','
name|'token'
op|'='
name|'get_auth'
op|'('
name|'options'
op|'.'
name|'auth'
op|','
name|'options'
op|'.'
name|'user'
op|','
name|'options'
op|'.'
name|'key'
op|','
name|'snet'
op|'='
name|'options'
op|'.'
name|'snet'
op|')'
newline|'\n'
name|'create_connection'
op|'='
name|'lambda'
op|':'
name|'Connection'
op|'('
name|'options'
op|'.'
name|'auth'
op|','
name|'options'
op|'.'
name|'user'
op|','
nl|'\n'
name|'options'
op|'.'
name|'key'
op|','
name|'preauthurl'
op|'='
name|'url'
op|','
nl|'\n'
name|'preauthtoken'
op|'='
name|'token'
op|','
name|'snet'
op|'='
name|'options'
op|'.'
name|'snet'
op|')'
newline|'\n'
name|'object_threads'
op|'='
op|'['
name|'QueueFunctionThread'
op|'('
name|'object_queue'
op|','
name|'_download_object'
op|','
nl|'\n'
name|'create_connection'
op|'('
op|')'
op|')'
name|'for'
name|'_'
name|'in'
name|'xrange'
op|'('
number|'10'
op|')'
op|']'
newline|'\n'
name|'for'
name|'thread'
name|'in'
name|'object_threads'
op|':'
newline|'\n'
indent|'        '
name|'thread'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
dedent|''
name|'container_threads'
op|'='
op|'['
name|'QueueFunctionThread'
op|'('
name|'container_queue'
op|','
nl|'\n'
name|'_download_container'
op|','
name|'create_connection'
op|'('
op|')'
op|')'
name|'for'
name|'_'
name|'in'
name|'xrange'
op|'('
number|'10'
op|')'
op|']'
newline|'\n'
name|'for'
name|'thread'
name|'in'
name|'container_threads'
op|':'
newline|'\n'
indent|'        '
name|'thread'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'args'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'create_connection'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'containers'
op|'='
op|'['
name|'c'
op|'['
string|"'name'"
op|']'
nl|'\n'
name|'for'
name|'c'
name|'in'
name|'conn'
op|'.'
name|'get_account'
op|'('
name|'marker'
op|'='
name|'marker'
op|')'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'containers'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'for'
name|'container'
name|'in'
name|'containers'
op|':'
newline|'\n'
indent|'                    '
name|'container_queue'
op|'.'
name|'put'
op|'('
name|'container'
op|')'
newline|'\n'
dedent|''
name|'marker'
op|'='
name|'containers'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Account not found'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'len'
op|'('
name|'args'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'_download_container'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'create_connection'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'obj'
name|'in'
name|'args'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'object_queue'
op|'.'
name|'put'
op|'('
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'while'
name|'not'
name|'container_queue'
op|'.'
name|'empty'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sleep'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'thread'
name|'in'
name|'container_threads'
op|':'
newline|'\n'
indent|'        '
name|'thread'
op|'.'
name|'abort'
op|'='
name|'True'
newline|'\n'
name|'while'
name|'thread'
op|'.'
name|'isAlive'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'thread'
op|'.'
name|'join'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'while'
name|'not'
name|'object_queue'
op|'.'
name|'empty'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sleep'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'thread'
name|'in'
name|'object_threads'
op|':'
newline|'\n'
indent|'        '
name|'thread'
op|'.'
name|'abort'
op|'='
name|'True'
newline|'\n'
name|'while'
name|'thread'
op|'.'
name|'isAlive'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'thread'
op|'.'
name|'join'
op|'('
number|'0.01'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'st_list_help'
op|'='
string|"'''\nlist [options] [container]\n    Lists the containers for the account or the objects for a container. -p or\n    --prefix is an option that will only list items beginning with that prefix.\n    -d or --delimiter is option (for container listings only) that will roll up\n    items with the given delimiter (see Cloud Files general documentation for\n    what this means).\n'''"
op|'.'
name|'strip'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
DECL|function|st_list
name|'def'
name|'st_list'
op|'('
name|'options'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Usage: %s [options] %s'"
op|'%'
nl|'\n'
op|'('
name|'basename'
op|'('
name|'argv'
op|'['
number|'0'
op|']'
op|')'
op|','
name|'st_list_help'
op|')'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'conn'
op|'='
name|'Connection'
op|'('
name|'options'
op|'.'
name|'auth'
op|','
name|'options'
op|'.'
name|'user'
op|','
name|'options'
op|'.'
name|'key'
op|','
name|'snet'
op|'='
name|'options'
op|'.'
name|'snet'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'args'
op|':'
newline|'\n'
indent|'                '
name|'items'
op|'='
name|'conn'
op|'.'
name|'get_account'
op|'('
name|'marker'
op|'='
name|'marker'
op|','
name|'prefix'
op|'='
name|'options'
op|'.'
name|'prefix'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'items'
op|'='
name|'conn'
op|'.'
name|'get_container'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'marker'
op|'='
name|'marker'
op|','
nl|'\n'
name|'prefix'
op|'='
name|'options'
op|'.'
name|'prefix'
op|','
name|'delimiter'
op|'='
name|'options'
op|'.'
name|'delimiter'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'items'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'for'
name|'item'
name|'in'
name|'items'
op|':'
newline|'\n'
indent|'                '
name|'options'
op|'.'
name|'print_queue'
op|'.'
name|'put'
op|'('
name|'item'
op|'.'
name|'get'
op|'('
string|"'name'"
op|','
name|'item'
op|'.'
name|'get'
op|'('
string|"'subdir'"
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'marker'
op|'='
name|'items'
op|'['
op|'-'
number|'1'
op|']'
op|'.'
name|'get'
op|'('
string|"'name'"
op|','
name|'items'
op|'['
op|'-'
number|'1'
op|']'
op|'.'
name|'get'
op|'('
string|"'subdir'"
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'args'
op|':'
newline|'\n'
indent|'            '
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Account not found'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Container %s not found'"
op|'%'
name|'repr'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'st_stat_help'
op|'='
string|"'''\nstat [container] [object]\n    Displays information for the account, container, or object depending on the\n    args given (if any).'''"
op|'.'
name|'strip'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
DECL|function|st_stat
name|'def'
name|'st_stat'
op|'('
name|'options'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'conn'
op|'='
name|'Connection'
op|'('
name|'options'
op|'.'
name|'auth'
op|','
name|'options'
op|'.'
name|'user'
op|','
name|'options'
op|'.'
name|'key'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'args'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'container_count'
op|','
name|'object_count'
op|','
name|'bytes_used'
op|'='
name|'conn'
op|'.'
name|'head_account'
op|'('
op|')'
newline|'\n'
name|'options'
op|'.'
name|'print_queue'
op|'.'
name|'put'
op|'('
string|"'''\n   Account: %s\nContainers: %d\n   Objects: %d\n     Bytes: %d'''"
op|'.'
name|'strip'
op|'('
string|"'\\n'"
op|')'
op|'%'
op|'('
name|'conn'
op|'.'
name|'url'
op|'.'
name|'rsplit'
op|'('
string|"'/'"
op|','
number|'1'
op|')'
op|'['
op|'-'
number|'1'
op|']'
op|','
name|'container_count'
op|','
nl|'\n'
name|'object_count'
op|','
name|'bytes_used'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Account not found'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'len'
op|'('
name|'args'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'object_count'
op|','
name|'bytes_used'
op|'='
name|'conn'
op|'.'
name|'head_container'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'options'
op|'.'
name|'print_queue'
op|'.'
name|'put'
op|'('
string|"'''\n  Account: %s\nContainer: %s\n  Objects: %d\n    Bytes: %d'''"
op|'.'
name|'strip'
op|'('
string|"'\\n'"
op|')'
op|'%'
op|'('
name|'conn'
op|'.'
name|'url'
op|'.'
name|'rsplit'
op|'('
string|"'/'"
op|','
number|'1'
op|')'
op|'['
op|'-'
number|'1'
op|']'
op|','
name|'args'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'object_count'
op|','
name|'bytes_used'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Container %s not found'"
op|'%'
name|'repr'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'len'
op|'('
name|'args'
op|')'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'content_type'
op|','
name|'content_length'
op|','
name|'last_modified'
op|','
name|'etag'
op|','
name|'metadata'
op|'='
name|'conn'
op|'.'
name|'head_object'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'args'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'options'
op|'.'
name|'print_queue'
op|'.'
name|'put'
op|'('
string|"'''\n       Account: %s\n     Container: %s\n        Object: %s\n  Content Type: %s\nContent Length: %d\n Last Modified: %s\n          ETag: %s'''"
op|'.'
name|'strip'
op|'('
string|"'\\n'"
op|')'
op|'%'
op|'('
name|'conn'
op|'.'
name|'url'
op|'.'
name|'rsplit'
op|'('
string|"'/'"
op|','
number|'1'
op|')'
op|'['
op|'-'
number|'1'
op|']'
op|','
name|'args'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'args'
op|'['
number|'1'
op|']'
op|','
name|'content_type'
op|','
name|'content_length'
op|','
nl|'\n'
name|'last_modified'
op|','
name|'etag'
op|')'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'metadata'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'options'
op|'.'
name|'print_queue'
op|'.'
name|'put'
op|'('
string|"'%14s: %s'"
op|'%'
op|'('
string|"'Meta %s'"
op|'%'
name|'key'
op|','
name|'value'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Object %s not found'"
op|'%'
nl|'\n'
name|'repr'
op|'('
string|"'%s/%s'"
op|'%'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'args'
op|'['
number|'1'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Usage: %s [options] %s'"
op|'%'
nl|'\n'
op|'('
name|'basename'
op|'('
name|'argv'
op|'['
number|'0'
op|']'
op|')'
op|','
name|'st_stat_help'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'st_upload_help'
op|'='
string|"'''\nupload [options] container file_or_directory [file_or_directory] [...]\n    Uploads to the given container the files and directories specified by the\n    remaining args. -c or --changed is an option that will only upload files\n    that have changed since the last upload.'''"
op|'.'
name|'strip'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
DECL|function|st_upload
name|'def'
name|'st_upload'
op|'('
name|'options'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'len'
op|'('
name|'args'
op|')'
op|'<'
number|'2'
op|':'
newline|'\n'
indent|'        '
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Usage: %s [options] %s'"
op|'%'
nl|'\n'
op|'('
name|'basename'
op|'('
name|'argv'
op|'['
number|'0'
op|']'
op|')'
op|','
name|'st_upload_help'
op|')'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'file_queue'
op|'='
name|'Queue'
op|'('
number|'10000'
op|')'
newline|'\n'
DECL|function|_upload_file
name|'def'
name|'_upload_file'
op|'('
op|'('
name|'path'
op|','
name|'dir_marker'
op|')'
op|','
name|'conn'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'obj'
op|'='
name|'path'
newline|'\n'
name|'if'
name|'obj'
op|'.'
name|'startswith'
op|'('
string|"'./'"
op|')'
name|'or'
name|'obj'
op|'.'
name|'startswith'
op|'('
string|"'.\\\\'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'obj'
op|'='
name|'obj'
op|'['
number|'2'
op|':'
op|']'
newline|'\n'
dedent|''
name|'metadata'
op|'='
op|'{'
string|"'mtime'"
op|':'
name|'str'
op|'('
name|'getmtime'
op|'('
name|'path'
op|')'
op|')'
op|'}'
newline|'\n'
name|'if'
name|'dir_marker'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'options'
op|'.'
name|'changed'
op|':'
newline|'\n'
indent|'                    '
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'ct'
op|','
name|'cl'
op|','
name|'lm'
op|','
name|'et'
op|','
name|'md'
op|'='
name|'conn'
op|'.'
name|'head_object'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'obj'
op|')'
newline|'\n'
name|'if'
name|'ct'
op|'.'
name|'split'
op|'('
string|"';'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
op|'=='
string|"'text/directory'"
name|'and'
name|'cl'
op|'=='
number|'0'
name|'and'
name|'et'
op|'=='
string|"'d41d8cd98f00b204e9800998ecf8427e'"
name|'and'
name|'md'
op|'.'
name|'get'
op|'('
string|"'mtime'"
op|')'
op|'=='
name|'metadata'
op|'['
string|"'mtime'"
op|']'
op|':'
newline|'\n'
indent|'                            '
name|'return'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                            '
name|'raise'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'conn'
op|'.'
name|'put_object'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'obj'
op|','
string|"''"
op|','
name|'content_length'
op|'='
number|'0'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/directory'"
op|','
nl|'\n'
name|'metadata'
op|'='
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'options'
op|'.'
name|'changed'
op|':'
newline|'\n'
indent|'                    '
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'ct'
op|','
name|'cl'
op|','
name|'lm'
op|','
name|'et'
op|','
name|'md'
op|'='
name|'conn'
op|'.'
name|'head_object'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'obj'
op|')'
newline|'\n'
name|'if'
name|'cl'
op|'=='
name|'getsize'
op|'('
name|'path'
op|')'
name|'and'
name|'md'
op|'.'
name|'get'
op|'('
string|"'mtime'"
op|')'
op|'=='
name|'metadata'
op|'['
string|"'mtime'"
op|']'
op|':'
newline|'\n'
indent|'                            '
name|'return'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                            '
name|'raise'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'conn'
op|'.'
name|'put_object'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
name|'obj'
op|','
name|'open'
op|'('
name|'path'
op|','
string|"'rb'"
op|')'
op|','
nl|'\n'
name|'content_length'
op|'='
name|'getsize'
op|'('
name|'path'
op|')'
op|','
nl|'\n'
name|'metadata'
op|'='
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'options'
op|'.'
name|'verbose'
op|':'
newline|'\n'
indent|'                '
name|'options'
op|'.'
name|'print_queue'
op|'.'
name|'put'
op|'('
name|'obj'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'OSError'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'err'
op|'.'
name|'errno'
op|'!='
name|'ENOENT'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Local file %s not found'"
op|'%'
name|'repr'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
DECL|function|_upload_dir
dedent|''
dedent|''
name|'def'
name|'_upload_dir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'names'
op|'='
name|'listdir'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'names'
op|':'
newline|'\n'
indent|'            '
name|'file_queue'
op|'.'
name|'put'
op|'('
op|'('
name|'path'
op|','
name|'True'
op|')'
op|')'
comment|'# dir_marker = True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'name'
name|'in'
name|'listdir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'subpath'
op|'='
name|'join'
op|'('
name|'path'
op|','
name|'name'
op|')'
newline|'\n'
name|'if'
name|'isdir'
op|'('
name|'subpath'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'_upload_dir'
op|'('
name|'subpath'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'file_queue'
op|'.'
name|'put'
op|'('
op|'('
name|'subpath'
op|','
name|'False'
op|')'
op|')'
comment|'# dir_marker = False'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'url'
op|','
name|'token'
op|'='
name|'get_auth'
op|'('
name|'options'
op|'.'
name|'auth'
op|','
name|'options'
op|'.'
name|'user'
op|','
name|'options'
op|'.'
name|'key'
op|','
name|'snet'
op|'='
name|'options'
op|'.'
name|'snet'
op|')'
newline|'\n'
name|'create_connection'
op|'='
name|'lambda'
op|':'
name|'Connection'
op|'('
name|'options'
op|'.'
name|'auth'
op|','
name|'options'
op|'.'
name|'user'
op|','
nl|'\n'
name|'options'
op|'.'
name|'key'
op|','
name|'preauthurl'
op|'='
name|'url'
op|','
nl|'\n'
name|'preauthtoken'
op|'='
name|'token'
op|','
name|'snet'
op|'='
name|'options'
op|'.'
name|'snet'
op|')'
newline|'\n'
name|'file_threads'
op|'='
op|'['
name|'QueueFunctionThread'
op|'('
name|'file_queue'
op|','
name|'_upload_file'
op|','
nl|'\n'
name|'create_connection'
op|'('
op|')'
op|')'
name|'for'
name|'_'
name|'in'
name|'xrange'
op|'('
number|'10'
op|')'
op|']'
newline|'\n'
name|'for'
name|'thread'
name|'in'
name|'file_threads'
op|':'
newline|'\n'
indent|'        '
name|'thread'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
dedent|''
name|'conn'
op|'='
name|'create_connection'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'.'
name|'put_container'
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'for'
name|'arg'
name|'in'
name|'args'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'isdir'
op|'('
name|'arg'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'_upload_dir'
op|'('
name|'arg'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'file_queue'
op|'.'
name|'put'
op|'('
op|'('
name|'arg'
op|','
name|'False'
op|')'
op|')'
comment|'# dir_marker = False'
newline|'\n'
dedent|''
dedent|''
name|'while'
name|'not'
name|'file_queue'
op|'.'
name|'empty'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sleep'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'thread'
name|'in'
name|'file_threads'
op|':'
newline|'\n'
indent|'            '
name|'thread'
op|'.'
name|'abort'
op|'='
name|'True'
newline|'\n'
name|'while'
name|'thread'
op|'.'
name|'isAlive'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'thread'
op|'.'
name|'join'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
name|'ClientException'
op|','
name|'err'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
dedent|''
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'put'
op|'('
string|"'Account not found'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'parser'
op|'='
name|'OptionParser'
op|'('
name|'version'
op|'='
string|"'%prog 1.0'"
op|','
name|'usage'
op|'='
string|"'''\nUsage: %%prog [options] <command> [args]\n\nCommands:\n  %(st_stat_help)s\n  %(st_list_help)s\n  %(st_upload_help)s\n  %(st_download_help)s\n  %(st_delete_help)s\n\nExample:\n  %%prog -A https://auth.api.rackspacecloud.com/v1.0 -U user -K key stat\n'''"
op|'.'
name|'strip'
op|'('
string|"'\\n'"
op|')'
op|'%'
name|'globals'
op|'('
op|')'
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|"'-s'"
op|','
string|"'--snet'"
op|','
name|'action'
op|'='
string|"'store_true'"
op|','
name|'dest'
op|'='
string|"'snet'"
op|','
nl|'\n'
name|'default'
op|'='
name|'False'
op|','
name|'help'
op|'='
string|"'Use SERVICENET internal network'"
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|"'-q'"
op|','
string|"'--quiet'"
op|','
name|'action'
op|'='
string|"'store_false'"
op|','
name|'dest'
op|'='
string|"'verbose'"
op|','
nl|'\n'
name|'default'
op|'='
name|'True'
op|','
name|'help'
op|'='
string|"'Suppress status output'"
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|"'-a'"
op|','
string|"'--all'"
op|','
name|'action'
op|'='
string|"'store_true'"
op|','
name|'dest'
op|'='
string|"'yes_all'"
op|','
nl|'\n'
name|'default'
op|'='
name|'False'
op|','
name|'help'
op|'='
string|"'Indicate that you really want the '"
nl|'\n'
string|"'whole account for commands that require --all in such '"
nl|'\n'
string|"'a case'"
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|"'-c'"
op|','
string|"'--changed'"
op|','
name|'action'
op|'='
string|"'store_true'"
op|','
name|'dest'
op|'='
string|"'changed'"
op|','
nl|'\n'
name|'default'
op|'='
name|'False'
op|','
name|'help'
op|'='
string|"'For the upload command: will '"
nl|'\n'
string|"'only upload files that have changed since the last '"
nl|'\n'
string|"'upload'"
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|"'-p'"
op|','
string|"'--prefix'"
op|','
name|'dest'
op|'='
string|"'prefix'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'For the list command: will only list items '"
nl|'\n'
string|"'beginning with the prefix'"
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|"'-d'"
op|','
string|"'--delimiter'"
op|','
name|'dest'
op|'='
string|"'delimiter'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'For the list command on containers: will roll up '"
nl|'\n'
string|"'items with the given delimiter (see Cloud Files '"
nl|'\n'
string|"'general documentation for what this means).'"
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|"'-A'"
op|','
string|"'--auth'"
op|','
name|'dest'
op|'='
string|"'auth'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'URL for obtaining an auth token'"
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|"'-U'"
op|','
string|"'--user'"
op|','
name|'dest'
op|'='
string|"'user'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'User name for obtaining an auth token'"
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'add_option'
op|'('
string|"'-K'"
op|','
string|"'--key'"
op|','
name|'dest'
op|'='
string|"'key'"
op|','
nl|'\n'
name|'help'
op|'='
string|"'Key for obtaining an auth token'"
op|')'
newline|'\n'
DECL|variable|args
name|'args'
op|'='
name|'argv'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'args'
op|':'
newline|'\n'
indent|'        '
name|'args'
op|'.'
name|'append'
op|'('
string|"'-h'"
op|')'
newline|'\n'
dedent|''
op|'('
name|'options'
op|','
name|'args'
op|')'
op|'='
name|'parser'
op|'.'
name|'parse_args'
op|'('
name|'args'
op|')'
newline|'\n'
nl|'\n'
name|'required_help'
op|'='
string|"'''\nRequires ST_AUTH, ST_USER, and ST_KEY environment variables be set or\noverridden with -A, -U, or -K.'''"
op|'.'
name|'strip'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'for'
name|'attr'
name|'in'
op|'('
string|"'auth'"
op|','
string|"'user'"
op|','
string|"'key'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'getattr'
op|'('
name|'options'
op|','
name|'attr'
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'options'
op|','
name|'attr'
op|','
name|'environ'
op|'.'
name|'get'
op|'('
string|"'ST_%s'"
op|'%'
name|'attr'
op|'.'
name|'upper'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'getattr'
op|'('
name|'options'
op|','
name|'attr'
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'exit'
op|'('
name|'required_help'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|commands
dedent|''
dedent|''
dedent|''
name|'commands'
op|'='
op|'('
string|"'delete'"
op|','
string|"'download'"
op|','
string|"'list'"
op|','
string|"'stat'"
op|','
string|"'upload'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'args'
name|'or'
name|'args'
op|'['
number|'0'
op|']'
name|'not'
name|'in'
name|'commands'
op|':'
newline|'\n'
indent|'        '
name|'parser'
op|'.'
name|'print_usage'
op|'('
op|')'
newline|'\n'
name|'if'
name|'args'
op|':'
newline|'\n'
indent|'            '
name|'exit'
op|'('
string|"'no such command: %s'"
op|'%'
name|'args'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'exit'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'options'
op|'.'
name|'print_queue'
op|'='
name|'Queue'
op|'('
number|'10000'
op|')'
newline|'\n'
DECL|function|_print
name|'def'
name|'_print'
op|'('
name|'item'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'item'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'item'
op|'='
name|'item'
op|'.'
name|'encode'
op|'('
string|"'utf8'"
op|')'
newline|'\n'
dedent|''
name|'print'
name|'item'
newline|'\n'
DECL|variable|print_thread
dedent|''
name|'print_thread'
op|'='
name|'QueueFunctionThread'
op|'('
name|'options'
op|'.'
name|'print_queue'
op|','
name|'_print'
op|')'
newline|'\n'
name|'print_thread'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'options'
op|'.'
name|'error_queue'
op|'='
name|'Queue'
op|'('
number|'10000'
op|')'
newline|'\n'
DECL|function|_error
name|'def'
name|'_error'
op|'('
name|'item'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'item'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'item'
op|'='
name|'item'
op|'.'
name|'encode'
op|'('
string|"'utf8'"
op|')'
newline|'\n'
dedent|''
name|'print'
op|'>>'
name|'stderr'
op|','
name|'item'
newline|'\n'
DECL|variable|error_thread
dedent|''
name|'error_thread'
op|'='
name|'QueueFunctionThread'
op|'('
name|'options'
op|'.'
name|'error_queue'
op|','
name|'_error'
op|')'
newline|'\n'
name|'error_thread'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'globals'
op|'('
op|')'
op|'['
string|"'st_%s'"
op|'%'
name|'args'
op|'['
number|'0'
op|']'
op|']'
op|'('
name|'options'
op|','
name|'args'
op|'['
number|'1'
op|':'
op|']'
op|')'
newline|'\n'
name|'while'
name|'not'
name|'options'
op|'.'
name|'print_queue'
op|'.'
name|'empty'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sleep'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
name|'print_thread'
op|'.'
name|'abort'
op|'='
name|'True'
newline|'\n'
name|'while'
name|'print_thread'
op|'.'
name|'isAlive'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print_thread'
op|'.'
name|'join'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
name|'while'
name|'not'
name|'options'
op|'.'
name|'error_queue'
op|'.'
name|'empty'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sleep'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
name|'error_thread'
op|'.'
name|'abort'
op|'='
name|'True'
newline|'\n'
name|'while'
name|'error_thread'
op|'.'
name|'isAlive'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'error_thread'
op|'.'
name|'join'
op|'('
number|'0.01'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'thread'
name|'in'
name|'threading_enumerate'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'thread'
op|'.'
name|'abort'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'raise'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
