begin_unit
comment|'# Copyright (c) 2010-2013 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
name|'import'
name|'time'
newline|'\n'
name|'from'
name|'swift'
name|'import'
name|'gettext_'
name|'as'
name|'_'
newline|'\n'
nl|'\n'
name|'import'
name|'eventlet'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'cache_from_env'
op|','
name|'get_logger'
op|','
name|'register_swift_info'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'base'
name|'import'
name|'get_account_info'
op|','
name|'get_container_info'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'memcached'
name|'import'
name|'MemcacheConnectionError'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'Request'
op|','
name|'Response'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|interpret_conf_limits
name|'def'
name|'interpret_conf_limits'
op|'('
name|'conf'
op|','
name|'name_prefix'
op|','
name|'info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Parses general parms for rate limits looking for things that\n    start with the provided name_prefix within the provided conf\n    and returns lists for both internal use and for /info\n\n    :param conf: conf dict to parse\n    :param name_prefix: prefix of config parms to look for\n    :param info: set to return extra stuff for /info registration\n    """'
newline|'\n'
name|'conf_limits'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'conf_key'
name|'in'
name|'conf'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'conf_key'
op|'.'
name|'startswith'
op|'('
name|'name_prefix'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cont_size'
op|'='
name|'int'
op|'('
name|'conf_key'
op|'['
name|'len'
op|'('
name|'name_prefix'
op|')'
op|':'
op|']'
op|')'
newline|'\n'
name|'rate'
op|'='
name|'float'
op|'('
name|'conf'
op|'['
name|'conf_key'
op|']'
op|')'
newline|'\n'
name|'conf_limits'
op|'.'
name|'append'
op|'('
op|'('
name|'cont_size'
op|','
name|'rate'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'conf_limits'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'ratelimits'
op|'='
op|'['
op|']'
newline|'\n'
name|'conf_limits_info'
op|'='
name|'list'
op|'('
name|'conf_limits'
op|')'
newline|'\n'
name|'while'
name|'conf_limits'
op|':'
newline|'\n'
indent|'        '
name|'cur_size'
op|','
name|'cur_rate'
op|'='
name|'conf_limits'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'if'
name|'conf_limits'
op|':'
newline|'\n'
indent|'            '
name|'next_size'
op|','
name|'next_rate'
op|'='
name|'conf_limits'
op|'['
number|'0'
op|']'
newline|'\n'
name|'slope'
op|'='
op|'('
name|'float'
op|'('
name|'next_rate'
op|')'
op|'-'
name|'float'
op|'('
name|'cur_rate'
op|')'
op|')'
op|'/'
op|'('
name|'next_size'
op|'-'
name|'cur_size'
op|')'
newline|'\n'
nl|'\n'
DECL|function|new_scope
name|'def'
name|'new_scope'
op|'('
name|'cur_size'
op|','
name|'slope'
op|','
name|'cur_rate'
op|')'
op|':'
newline|'\n'
comment|'# making new scope for variables'
nl|'\n'
indent|'                '
name|'return'
name|'lambda'
name|'x'
op|':'
op|'('
name|'x'
op|'-'
name|'cur_size'
op|')'
op|'*'
name|'slope'
op|'+'
name|'cur_rate'
newline|'\n'
dedent|''
name|'line_func'
op|'='
name|'new_scope'
op|'('
name|'cur_size'
op|','
name|'slope'
op|','
name|'cur_rate'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'line_func'
op|'='
name|'lambda'
name|'x'
op|':'
name|'cur_rate'
newline|'\n'
nl|'\n'
dedent|''
name|'ratelimits'
op|'.'
name|'append'
op|'('
op|'('
name|'cur_size'
op|','
name|'cur_rate'
op|','
name|'line_func'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'info'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'ratelimits'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'ratelimits'
op|','
name|'conf_limits_info'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_maxrate
dedent|''
dedent|''
name|'def'
name|'get_maxrate'
op|'('
name|'ratelimits'
op|','
name|'size'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Returns number of requests allowed per second for given size.\n    """'
newline|'\n'
name|'last_func'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'size'
op|':'
newline|'\n'
indent|'        '
name|'size'
op|'='
name|'int'
op|'('
name|'size'
op|')'
newline|'\n'
name|'for'
name|'ratesize'
op|','
name|'rate'
op|','
name|'func'
name|'in'
name|'ratelimits'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'size'
op|'<'
name|'ratesize'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'last_func'
op|'='
name|'func'
newline|'\n'
dedent|''
name|'if'
name|'last_func'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'last_func'
op|'('
name|'size'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MaxSleepTimeHitError
dedent|''
name|'class'
name|'MaxSleepTimeHitError'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|RateLimitMiddleware
dedent|''
name|'class'
name|'RateLimitMiddleware'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Rate limiting middleware\n\n    Rate limits requests on both an Account and Container level.  Limits are\n    configurable.\n    """'
newline|'\n'
nl|'\n'
DECL|variable|BLACK_LIST_SLEEP
name|'BLACK_LIST_SLEEP'
op|'='
number|'1'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'conf'
op|','
name|'logger'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'app'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'logger'
name|'or'
name|'get_logger'
op|'('
name|'conf'
op|','
name|'log_route'
op|'='
string|"'ratelimit'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'memcache_client'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'account_ratelimit'
op|'='
name|'float'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'account_ratelimit'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'max_sleep_time_seconds'
op|'='
name|'float'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'max_sleep_time_seconds'"
op|','
number|'60'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_sleep_time_seconds'
op|'='
name|'float'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'log_sleep_time_seconds'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'clock_accuracy'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'clock_accuracy'"
op|','
number|'1000'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rate_buffer_seconds'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'rate_buffer_seconds'"
op|','
number|'5'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ratelimit_whitelist'
op|'='
op|'['
name|'acc'
op|'.'
name|'strip'
op|'('
op|')'
name|'for'
name|'acc'
name|'in'
nl|'\n'
name|'conf'
op|'.'
name|'get'
op|'('
string|"'account_whitelist'"
op|','
string|"''"
op|')'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
name|'if'
name|'acc'
op|'.'
name|'strip'
op|'('
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'ratelimit_blacklist'
op|'='
op|'['
name|'acc'
op|'.'
name|'strip'
op|'('
op|')'
name|'for'
name|'acc'
name|'in'
nl|'\n'
name|'conf'
op|'.'
name|'get'
op|'('
string|"'account_blacklist'"
op|','
string|"''"
op|')'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
name|'if'
name|'acc'
op|'.'
name|'strip'
op|'('
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'container_ratelimits'
op|'='
name|'interpret_conf_limits'
op|'('
nl|'\n'
name|'conf'
op|','
string|"'container_ratelimit_'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_listing_ratelimits'
op|'='
name|'interpret_conf_limits'
op|'('
nl|'\n'
name|'conf'
op|','
string|"'container_listing_ratelimit_'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_container_size
dedent|''
name|'def'
name|'get_container_size'
op|'('
name|'self'
op|','
name|'env'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rv'
op|'='
number|'0'
newline|'\n'
name|'container_info'
op|'='
name|'get_container_info'
op|'('
nl|'\n'
name|'env'
op|','
name|'self'
op|'.'
name|'app'
op|','
name|'swift_source'
op|'='
string|"'RL'"
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'container_info'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rv'
op|'='
name|'container_info'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'object_count'"
op|','
name|'container_info'
op|'.'
name|'get'
op|'('
string|"'container_size'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
DECL|member|get_ratelimitable_key_tuples
dedent|''
name|'def'
name|'get_ratelimitable_key_tuples'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'account_name'
op|','
nl|'\n'
name|'container_name'
op|'='
name|'None'
op|','
name|'obj_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns a list of key (used in memcache), ratelimit tuples. Keys\n        should be checked in order.\n\n        :param req: swob request\n        :param account_name: account name from path\n        :param container_name: container name from path\n        :param obj_name: object name from path\n        """'
newline|'\n'
name|'keys'
op|'='
op|'['
op|']'
newline|'\n'
comment|'# COPYs are not limited'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'account_ratelimit'
name|'and'
name|'account_name'
name|'and'
name|'container_name'
name|'and'
name|'not'
name|'obj_name'
name|'and'
name|'req'
op|'.'
name|'method'
name|'in'
op|'('
string|"'PUT'"
op|','
string|"'DELETE'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'keys'
op|'.'
name|'append'
op|'('
op|'('
string|'"ratelimit/%s"'
op|'%'
name|'account_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'account_ratelimit'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'account_name'
name|'and'
name|'container_name'
name|'and'
name|'obj_name'
name|'and'
name|'req'
op|'.'
name|'method'
name|'in'
op|'('
string|"'PUT'"
op|','
string|"'DELETE'"
op|','
string|"'POST'"
op|','
string|"'COPY'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'container_size'
op|'='
name|'self'
op|'.'
name|'get_container_size'
op|'('
name|'req'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'container_rate'
op|'='
name|'get_maxrate'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'container_ratelimits'
op|','
name|'container_size'
op|')'
newline|'\n'
name|'if'
name|'container_rate'
op|':'
newline|'\n'
indent|'                '
name|'keys'
op|'.'
name|'append'
op|'('
op|'('
nl|'\n'
string|'"ratelimit/%s/%s"'
op|'%'
op|'('
name|'account_name'
op|','
name|'container_name'
op|')'
op|','
nl|'\n'
name|'container_rate'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'account_name'
name|'and'
name|'container_name'
name|'and'
name|'not'
name|'obj_name'
name|'and'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'GET'"
op|':'
newline|'\n'
indent|'            '
name|'container_size'
op|'='
name|'self'
op|'.'
name|'get_container_size'
op|'('
name|'req'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'container_rate'
op|'='
name|'get_maxrate'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'container_listing_ratelimits'
op|','
name|'container_size'
op|')'
newline|'\n'
name|'if'
name|'container_rate'
op|':'
newline|'\n'
indent|'                '
name|'keys'
op|'.'
name|'append'
op|'('
op|'('
nl|'\n'
string|'"ratelimit_listing/%s/%s"'
op|'%'
op|'('
name|'account_name'
op|','
name|'container_name'
op|')'
op|','
nl|'\n'
name|'container_rate'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'account_name'
name|'and'
name|'req'
op|'.'
name|'method'
name|'in'
op|'('
string|"'PUT'"
op|','
string|"'DELETE'"
op|','
string|"'POST'"
op|','
string|"'COPY'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'account_info'
op|'='
name|'get_account_info'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'account_global_ratelimit'
op|'='
name|'account_info'
op|'.'
name|'get'
op|'('
string|"'sysmeta'"
op|','
op|'{'
op|'}'
op|')'
op|'.'
name|'get'
op|'('
string|"'global-write-ratelimit'"
op|')'
newline|'\n'
name|'if'
name|'account_global_ratelimit'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'account_global_ratelimit'
op|'='
name|'float'
op|'('
name|'account_global_ratelimit'
op|')'
newline|'\n'
name|'if'
name|'account_global_ratelimit'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                        '
name|'keys'
op|'.'
name|'append'
op|'('
op|'('
nl|'\n'
string|'"ratelimit/global-write/%s"'
op|'%'
name|'account_name'
op|','
nl|'\n'
name|'account_global_ratelimit'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'keys'
newline|'\n'
nl|'\n'
DECL|member|_get_sleep_time
dedent|''
name|'def'
name|'_get_sleep_time'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'max_rate'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''\n        Returns the amount of time (a float in seconds) that the app\n        should sleep.\n\n        :param key: a memcache key\n        :param max_rate: maximum rate allowed in requests per second\n        :raises: MaxSleepTimeHitError if max sleep time is exceeded.\n        '''"
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'now_m'
op|'='
name|'int'
op|'('
name|'round'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'*'
name|'self'
op|'.'
name|'clock_accuracy'
op|')'
op|')'
newline|'\n'
name|'time_per_request_m'
op|'='
name|'int'
op|'('
name|'round'
op|'('
name|'self'
op|'.'
name|'clock_accuracy'
op|'/'
name|'max_rate'
op|')'
op|')'
newline|'\n'
name|'running_time_m'
op|'='
name|'self'
op|'.'
name|'memcache_client'
op|'.'
name|'incr'
op|'('
nl|'\n'
name|'key'
op|','
name|'delta'
op|'='
name|'time_per_request_m'
op|')'
newline|'\n'
name|'need_to_sleep_m'
op|'='
number|'0'
newline|'\n'
name|'if'
op|'('
name|'now_m'
op|'-'
name|'running_time_m'
op|'>'
nl|'\n'
name|'self'
op|'.'
name|'rate_buffer_seconds'
op|'*'
name|'self'
op|'.'
name|'clock_accuracy'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'next_avail_time'
op|'='
name|'int'
op|'('
name|'now_m'
op|'+'
name|'time_per_request_m'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'memcache_client'
op|'.'
name|'set'
op|'('
name|'key'
op|','
name|'str'
op|'('
name|'next_avail_time'
op|')'
op|','
nl|'\n'
name|'serialize'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'need_to_sleep_m'
op|'='
name|'max'
op|'('
name|'running_time_m'
op|'-'
name|'now_m'
op|'-'
name|'time_per_request_m'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'max_sleep_m'
op|'='
name|'self'
op|'.'
name|'max_sleep_time_seconds'
op|'*'
name|'self'
op|'.'
name|'clock_accuracy'
newline|'\n'
name|'if'
name|'max_sleep_m'
op|'-'
name|'need_to_sleep_m'
op|'<='
name|'self'
op|'.'
name|'clock_accuracy'
op|'*'
number|'0.01'
op|':'
newline|'\n'
comment|'# treat as no-op decrement time'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'memcache_client'
op|'.'
name|'decr'
op|'('
name|'key'
op|','
name|'delta'
op|'='
name|'time_per_request_m'
op|')'
newline|'\n'
name|'raise'
name|'MaxSleepTimeHitError'
op|'('
nl|'\n'
string|'"Max Sleep Time Exceeded: %.2f"'
op|'%'
nl|'\n'
op|'('
name|'float'
op|'('
name|'need_to_sleep_m'
op|')'
op|'/'
name|'self'
op|'.'
name|'clock_accuracy'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'float'
op|'('
name|'need_to_sleep_m'
op|')'
op|'/'
name|'self'
op|'.'
name|'clock_accuracy'
newline|'\n'
dedent|''
name|'except'
name|'MemcacheConnectionError'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|handle_ratelimit
dedent|''
dedent|''
name|'def'
name|'handle_ratelimit'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'account_name'
op|','
name|'container_name'
op|','
name|'obj_name'
op|')'
op|':'
newline|'\n'
indent|'        '
string|"'''\n        Performs rate limiting and account white/black listing.  Sleeps\n        if necessary. If self.memcache_client is not set, immediately returns\n        None.\n\n        :param account_name: account name from path\n        :param container_name: container name from path\n        :param obj_name: object name from path\n        '''"
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'memcache_client'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'account_name'
name|'in'
name|'self'
op|'.'
name|'ratelimit_blacklist'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|"'Returning 497 because of blacklisting: %s'"
op|')'
op|','
nl|'\n'
name|'account_name'
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'BLACK_LIST_SLEEP'
op|')'
newline|'\n'
name|'return'
name|'Response'
op|'('
name|'status'
op|'='
string|"'497 Blacklisted'"
op|','
nl|'\n'
name|'body'
op|'='
string|"'Your account has been blacklisted'"
op|','
nl|'\n'
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'account_name'
name|'in'
name|'self'
op|'.'
name|'ratelimit_whitelist'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'for'
name|'key'
op|','
name|'max_rate'
name|'in'
name|'self'
op|'.'
name|'get_ratelimitable_key_tuples'
op|'('
nl|'\n'
name|'req'
op|','
name|'account_name'
op|','
name|'container_name'
op|'='
name|'container_name'
op|','
nl|'\n'
name|'obj_name'
op|'='
name|'obj_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'need_to_sleep'
op|'='
name|'self'
op|'.'
name|'_get_sleep_time'
op|'('
name|'key'
op|','
name|'max_rate'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'log_sleep_time_seconds'
name|'and'
name|'need_to_sleep'
op|'>'
name|'self'
op|'.'
name|'log_sleep_time_seconds'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'warning'
op|'('
nl|'\n'
name|'_'
op|'('
string|'"Ratelimit sleep log: %(sleep)s for "'
nl|'\n'
string|'"%(account)s/%(container)s/%(object)s"'
op|')'
op|','
nl|'\n'
op|'{'
string|"'sleep'"
op|':'
name|'need_to_sleep'
op|','
string|"'account'"
op|':'
name|'account_name'
op|','
nl|'\n'
string|"'container'"
op|':'
name|'container_name'
op|','
string|"'object'"
op|':'
name|'obj_name'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'need_to_sleep'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'eventlet'
op|'.'
name|'sleep'
op|'('
name|'need_to_sleep'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'MaxSleepTimeHitError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Returning 498 for %(meth)s to %(acc)s/%(cont)s/%(obj)s '"
nl|'\n'
string|"'. Ratelimit (Max Sleep) %(e)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'meth'"
op|':'
name|'req'
op|'.'
name|'method'
op|','
string|"'acc'"
op|':'
name|'account_name'
op|','
nl|'\n'
string|"'cont'"
op|':'
name|'container_name'
op|','
string|"'obj'"
op|':'
name|'obj_name'
op|','
string|"'e'"
op|':'
name|'str'
op|'('
name|'e'
op|')'
op|'}'
op|')'
newline|'\n'
name|'error_resp'
op|'='
name|'Response'
op|'('
name|'status'
op|'='
string|"'498 Rate Limited'"
op|','
nl|'\n'
name|'body'
op|'='
string|"'Slow down'"
op|','
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
name|'return'
name|'error_resp'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        WSGI entry point.\n        Wraps env in swob.Request object and passes it down.\n\n        :param env: WSGI environment dictionary\n        :param start_response: WSGI callable\n        """'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'('
name|'env'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'memcache_client'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'memcache_client'
op|'='
name|'cache_from_env'
op|'('
name|'env'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'memcache_client'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'warning'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Warning: Cannot ratelimit without a memcached client'"
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'app'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'version'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|'='
name|'req'
op|'.'
name|'split_path'
op|'('
number|'1'
op|','
number|'4'
op|','
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'app'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
dedent|''
name|'ratelimit_resp'
op|'='
name|'self'
op|'.'
name|'handle_ratelimit'
op|'('
name|'req'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'if'
name|'ratelimit_resp'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'app'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'ratelimit_resp'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|filter_factory
dedent|''
dedent|''
dedent|''
name|'def'
name|'filter_factory'
op|'('
name|'global_conf'
op|','
op|'**'
name|'local_conf'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    paste.deploy app factory for creating WSGI proxy apps.\n    """'
newline|'\n'
name|'conf'
op|'='
name|'global_conf'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'update'
op|'('
name|'local_conf'
op|')'
newline|'\n'
nl|'\n'
name|'account_ratelimit'
op|'='
name|'float'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'account_ratelimit'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'max_sleep_time_seconds'
op|'='
name|'float'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'max_sleep_time_seconds'"
op|','
number|'60'
op|')'
op|')'
newline|'\n'
name|'container_ratelimits'
op|','
name|'cont_limit_info'
op|'='
name|'interpret_conf_limits'
op|'('
nl|'\n'
name|'conf'
op|','
string|"'container_ratelimit_'"
op|','
name|'info'
op|'='
number|'1'
op|')'
newline|'\n'
name|'container_listing_ratelimits'
op|','
name|'cont_list_limit_info'
op|'='
name|'interpret_conf_limits'
op|'('
name|'conf'
op|','
string|"'container_listing_ratelimit_'"
op|','
name|'info'
op|'='
number|'1'
op|')'
newline|'\n'
comment|'# not all limits are exposed (intentionally)'
nl|'\n'
name|'register_swift_info'
op|'('
string|"'ratelimit'"
op|','
nl|'\n'
name|'account_ratelimit'
op|'='
name|'account_ratelimit'
op|','
nl|'\n'
name|'max_sleep_time_seconds'
op|'='
name|'max_sleep_time_seconds'
op|','
nl|'\n'
name|'container_ratelimits'
op|'='
name|'cont_limit_info'
op|','
nl|'\n'
name|'container_listing_ratelimits'
op|'='
name|'cont_list_limit_info'
op|')'
newline|'\n'
nl|'\n'
DECL|function|limit_filter
name|'def'
name|'limit_filter'
op|'('
name|'app'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'RateLimitMiddleware'
op|'('
name|'app'
op|','
name|'conf'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'limit_filter'
newline|'\n'
dedent|''
endmarker|''
end_unit
