begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'contextmanager'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'errno'
newline|'\n'
name|'import'
name|'math'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'from'
name|'mock'
name|'import'
name|'patch'
op|','
name|'call'
newline|'\n'
name|'from'
name|'shutil'
name|'import'
name|'rmtree'
op|','
name|'copy'
newline|'\n'
name|'from'
name|'tempfile'
name|'import'
name|'mkdtemp'
op|','
name|'NamedTemporaryFile'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'simplejson'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'container'
op|'.'
name|'backend'
name|'import'
name|'DATADIR'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'db_replicator'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
op|'('
name|'normalize_timestamp'
op|','
name|'hash_path'
op|','
nl|'\n'
name|'storage_directory'
op|')'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'DriveNotMounted'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'HTTPException'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
name|'import'
name|'unit'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
op|'.'
name|'common'
op|'.'
name|'test_db'
name|'import'
name|'ExampleBroker'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|TEST_ACCOUNT_NAME
name|'TEST_ACCOUNT_NAME'
op|'='
string|"'a c t'"
newline|'\n'
DECL|variable|TEST_CONTAINER_NAME
name|'TEST_CONTAINER_NAME'
op|'='
string|"'c o n'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|teardown_module
name|'def'
name|'teardown_module'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"clean up my monkey patching"'
newline|'\n'
name|'reload'
op|'('
name|'db_replicator'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|function|lock_parent_directory
name|'def'
name|'lock_parent_directory'
op|'('
name|'filename'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'yield'
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeRing
dedent|''
name|'class'
name|'FakeRing'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|class|Ring
indent|'    '
name|'class'
name|'Ring'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|devs
indent|'        '
name|'devs'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'reload_time'
op|'='
number|'15'
op|','
name|'ring_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|get_part
dedent|''
name|'def'
name|'get_part'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|'='
name|'None'
op|','
name|'obj'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|get_part_nodes
dedent|''
name|'def'
name|'get_part_nodes'
op|'('
name|'self'
op|','
name|'part'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_more_nodes
dedent|''
name|'def'
name|'get_more_nodes'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeRingWithSingleNode
dedent|''
dedent|''
dedent|''
name|'class'
name|'FakeRingWithSingleNode'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|class|Ring
indent|'    '
name|'class'
name|'Ring'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|devs
indent|'        '
name|'devs'
op|'='
op|'['
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
name|'weight'
op|'='
number|'10.0'
op|','
name|'zone'
op|'='
number|'1'
op|','
name|'ip'
op|'='
string|"'1.1.1.1'"
op|','
name|'port'
op|'='
number|'6000'
op|','
name|'device'
op|'='
string|"'sdb'"
op|','
nl|'\n'
name|'meta'
op|'='
string|"''"
op|','
name|'replication_ip'
op|'='
string|"'1.1.1.1'"
op|','
name|'replication_port'
op|'='
number|'6000'
nl|'\n'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'reload_time'
op|'='
number|'15'
op|','
name|'ring_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|get_part
dedent|''
name|'def'
name|'get_part'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|'='
name|'None'
op|','
name|'obj'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|get_part_nodes
dedent|''
name|'def'
name|'get_part_nodes'
op|'('
name|'self'
op|','
name|'part'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'devs'
newline|'\n'
nl|'\n'
DECL|member|get_more_nodes
dedent|''
name|'def'
name|'get_more_nodes'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
name|'d'
name|'for'
name|'d'
name|'in'
name|'self'
op|'.'
name|'devs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeRingWithNodes
dedent|''
dedent|''
dedent|''
name|'class'
name|'FakeRingWithNodes'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|class|Ring
indent|'    '
name|'class'
name|'Ring'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|devs
indent|'        '
name|'devs'
op|'='
op|'['
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
number|'1'
op|','
name|'weight'
op|'='
number|'10.0'
op|','
name|'zone'
op|'='
number|'1'
op|','
name|'ip'
op|'='
string|"'1.1.1.1'"
op|','
name|'port'
op|'='
number|'6000'
op|','
name|'device'
op|'='
string|"'sdb'"
op|','
nl|'\n'
DECL|variable|meta
name|'meta'
op|'='
string|"''"
nl|'\n'
op|')'
op|','
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
number|'2'
op|','
name|'weight'
op|'='
number|'10.0'
op|','
name|'zone'
op|'='
number|'2'
op|','
name|'ip'
op|'='
string|"'1.1.1.2'"
op|','
name|'port'
op|'='
number|'6000'
op|','
name|'device'
op|'='
string|"'sdb'"
op|','
nl|'\n'
DECL|variable|meta
name|'meta'
op|'='
string|"''"
nl|'\n'
op|')'
op|','
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
number|'3'
op|','
name|'weight'
op|'='
number|'10.0'
op|','
name|'zone'
op|'='
number|'3'
op|','
name|'ip'
op|'='
string|"'1.1.1.3'"
op|','
name|'port'
op|'='
number|'6000'
op|','
name|'device'
op|'='
string|"'sdb'"
op|','
nl|'\n'
DECL|variable|meta
name|'meta'
op|'='
string|"''"
nl|'\n'
op|')'
op|','
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
number|'4'
op|','
name|'weight'
op|'='
number|'10.0'
op|','
name|'zone'
op|'='
number|'4'
op|','
name|'ip'
op|'='
string|"'1.1.1.4'"
op|','
name|'port'
op|'='
number|'6000'
op|','
name|'device'
op|'='
string|"'sdb'"
op|','
nl|'\n'
DECL|variable|meta
name|'meta'
op|'='
string|"''"
nl|'\n'
op|')'
op|','
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
number|'5'
op|','
name|'weight'
op|'='
number|'10.0'
op|','
name|'zone'
op|'='
number|'5'
op|','
name|'ip'
op|'='
string|"'1.1.1.5'"
op|','
name|'port'
op|'='
number|'6000'
op|','
name|'device'
op|'='
string|"'sdb'"
op|','
nl|'\n'
DECL|variable|meta
name|'meta'
op|'='
string|"''"
nl|'\n'
op|')'
op|','
name|'dict'
op|'('
nl|'\n'
name|'id'
op|'='
number|'6'
op|','
name|'weight'
op|'='
number|'10.0'
op|','
name|'zone'
op|'='
number|'6'
op|','
name|'ip'
op|'='
string|"'1.1.1.6'"
op|','
name|'port'
op|'='
number|'6000'
op|','
name|'device'
op|'='
string|"'sdb'"
op|','
nl|'\n'
DECL|variable|meta
name|'meta'
op|'='
string|"''"
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'reload_time'
op|'='
number|'15'
op|','
name|'ring_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|get_part
dedent|''
name|'def'
name|'get_part'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|'='
name|'None'
op|','
name|'obj'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|get_part_nodes
dedent|''
name|'def'
name|'get_part_nodes'
op|'('
name|'self'
op|','
name|'part'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'devs'
op|'['
op|':'
number|'3'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_more_nodes
dedent|''
name|'def'
name|'get_more_nodes'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
name|'d'
name|'for'
name|'d'
name|'in'
name|'self'
op|'.'
name|'devs'
op|'['
number|'3'
op|':'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeProcess
dedent|''
dedent|''
dedent|''
name|'class'
name|'FakeProcess'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'codes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'codes'
op|'='
name|'iter'
op|'('
name|'codes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'args'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'kwargs'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'args'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'kwargs'
op|'='
name|'kwargs'
newline|'\n'
nl|'\n'
DECL|class|Failure
name|'class'
name|'Failure'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|communicate
indent|'            '
name|'def'
name|'communicate'
op|'('
name|'innerself'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'next'
op|'='
name|'self'
op|'.'
name|'codes'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'next'
op|','
name|'int'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'innerself'
op|'.'
name|'returncode'
op|'='
name|'next'
newline|'\n'
name|'return'
name|'next'
newline|'\n'
dedent|''
name|'raise'
name|'next'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'Failure'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|function|_mock_process
name|'def'
name|'_mock_process'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'orig_process'
op|'='
name|'db_replicator'
op|'.'
name|'subprocess'
op|'.'
name|'Popen'
newline|'\n'
name|'db_replicator'
op|'.'
name|'subprocess'
op|'.'
name|'Popen'
op|'='
name|'FakeProcess'
op|'('
op|'*'
name|'args'
op|')'
newline|'\n'
name|'yield'
name|'db_replicator'
op|'.'
name|'subprocess'
op|'.'
name|'Popen'
newline|'\n'
name|'db_replicator'
op|'.'
name|'subprocess'
op|'.'
name|'Popen'
op|'='
name|'orig_process'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ReplHttp
dedent|''
name|'class'
name|'ReplHttp'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'response'
op|'='
name|'None'
op|','
name|'set_status'
op|'='
number|'200'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'response'
op|'='
name|'response'
newline|'\n'
name|'self'
op|'.'
name|'set_status'
op|'='
name|'set_status'
newline|'\n'
DECL|variable|replicated
dedent|''
name|'replicated'
op|'='
name|'False'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
string|"'localhost'"
newline|'\n'
nl|'\n'
DECL|member|replicate
name|'def'
name|'replicate'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'replicated'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|class|Response
name|'class'
name|'Response'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|status
indent|'            '
name|'status'
op|'='
name|'self'
op|'.'
name|'set_status'
newline|'\n'
DECL|variable|data
name|'data'
op|'='
name|'self'
op|'.'
name|'response'
newline|'\n'
nl|'\n'
DECL|member|read
name|'def'
name|'read'
op|'('
name|'innerself'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'response'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'Response'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ChangingMtimesOs
dedent|''
dedent|''
name|'class'
name|'ChangingMtimesOs'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mtime'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mtime'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'mtime'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeBroker
dedent|''
dedent|''
name|'class'
name|'FakeBroker'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|db_file
indent|'    '
name|'db_file'
op|'='
name|'__file__'
newline|'\n'
DECL|variable|get_repl_missing_table
name|'get_repl_missing_table'
op|'='
name|'False'
newline|'\n'
DECL|variable|stub_replication_info
name|'stub_replication_info'
op|'='
name|'None'
newline|'\n'
DECL|variable|db_type
name|'db_type'
op|'='
string|"'container'"
newline|'\n'
DECL|variable|db_contains_type
name|'db_contains_type'
op|'='
string|"'object'"
newline|'\n'
DECL|variable|info
name|'info'
op|'='
op|'{'
string|"'account'"
op|':'
name|'TEST_ACCOUNT_NAME'
op|','
string|"'container'"
op|':'
name|'TEST_CONTAINER_NAME'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'locked'
op|'='
name|'False'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|member|lock
name|'def'
name|'lock'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'locked'
op|'='
name|'True'
newline|'\n'
name|'yield'
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'locked'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|get_sync
dedent|''
name|'def'
name|'get_sync'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
number|'5'
newline|'\n'
nl|'\n'
DECL|member|get_syncs
dedent|''
name|'def'
name|'get_syncs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_items_since
dedent|''
name|'def'
name|'get_items_since'
op|'('
name|'self'
op|','
name|'point'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'point'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'{'
string|"'ROWID'"
op|':'
number|'1'
op|'}'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'point'
op|'=='
op|'-'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'{'
string|"'ROWID'"
op|':'
number|'1'
op|'}'
op|','
op|'{'
string|"'ROWID'"
op|':'
number|'2'
op|'}'
op|']'
newline|'\n'
dedent|''
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|merge_syncs
dedent|''
name|'def'
name|'merge_syncs'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'args'
op|'='
name|'args'
newline|'\n'
nl|'\n'
DECL|member|merge_items
dedent|''
name|'def'
name|'merge_items'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'args'
op|'='
name|'args'
newline|'\n'
nl|'\n'
DECL|member|get_replication_info
dedent|''
name|'def'
name|'get_replication_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'get_repl_missing_table'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'no such table'"
op|')'
newline|'\n'
dedent|''
name|'info'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'info'
op|')'
newline|'\n'
name|'info'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'hash'"
op|':'
number|'12345'
op|','
nl|'\n'
string|"'delete_timestamp'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'put_timestamp'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'created_at'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'count'"
op|':'
number|'0'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'stub_replication_info'
op|':'
newline|'\n'
indent|'            '
name|'info'
op|'.'
name|'update'
op|'('
name|'self'
op|'.'
name|'stub_replication_info'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'info'
newline|'\n'
nl|'\n'
DECL|member|reclaim
dedent|''
name|'def'
name|'reclaim'
op|'('
name|'self'
op|','
name|'item_timestamp'
op|','
name|'sync_timestamp'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|newid
dedent|''
name|'def'
name|'newid'
op|'('
name|'self'
op|','
name|'remote_d'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|update_metadata
dedent|''
name|'def'
name|'update_metadata'
op|'('
name|'self'
op|','
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'metadata'
op|'='
name|'metadata'
newline|'\n'
nl|'\n'
DECL|member|merge_timestamps
dedent|''
name|'def'
name|'merge_timestamps'
op|'('
name|'self'
op|','
name|'created_at'
op|','
name|'put_timestamp'
op|','
name|'delete_timestamp'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'created_at'
op|'='
name|'created_at'
newline|'\n'
name|'self'
op|'.'
name|'put_timestamp'
op|'='
name|'put_timestamp'
newline|'\n'
name|'self'
op|'.'
name|'delete_timestamp'
op|'='
name|'delete_timestamp'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeAccountBroker
dedent|''
dedent|''
name|'class'
name|'FakeAccountBroker'
op|'('
name|'FakeBroker'
op|')'
op|':'
newline|'\n'
DECL|variable|db_type
indent|'    '
name|'db_type'
op|'='
string|"'account'"
newline|'\n'
DECL|variable|db_contains_type
name|'db_contains_type'
op|'='
string|"'container'"
newline|'\n'
DECL|variable|info
name|'info'
op|'='
op|'{'
string|"'account'"
op|':'
name|'TEST_ACCOUNT_NAME'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestReplicator
dedent|''
name|'class'
name|'TestReplicator'
op|'('
name|'db_replicator'
op|'.'
name|'Replicator'
op|')'
op|':'
newline|'\n'
DECL|variable|server_type
indent|'    '
name|'server_type'
op|'='
string|"'container'"
newline|'\n'
DECL|variable|ring_file
name|'ring_file'
op|'='
string|"'container.ring.gz'"
newline|'\n'
DECL|variable|brokerclass
name|'brokerclass'
op|'='
name|'FakeBroker'
newline|'\n'
DECL|variable|datadir
name|'datadir'
op|'='
name|'DATADIR'
newline|'\n'
DECL|variable|default_port
name|'default_port'
op|'='
number|'1000'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDBReplicator
dedent|''
name|'class'
name|'TestDBReplicator'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_replicator'
op|'.'
name|'ring'
op|'='
name|'FakeRing'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'delete_db_calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_patchers'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'patcher'
name|'in'
name|'self'
op|'.'
name|'_patchers'
op|':'
newline|'\n'
indent|'            '
name|'patcher'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_patch
dedent|''
dedent|''
name|'def'
name|'_patch'
op|'('
name|'self'
op|','
name|'patching_fn'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'patcher'
op|'='
name|'patching_fn'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'patched_thing'
op|'='
name|'patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_patchers'
op|'.'
name|'append'
op|'('
name|'patcher'
op|')'
newline|'\n'
name|'return'
name|'patched_thing'
newline|'\n'
nl|'\n'
DECL|member|stub_delete_db
dedent|''
name|'def'
name|'stub_delete_db'
op|'('
name|'self'
op|','
name|'broker'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'delete_db_calls'
op|'.'
name|'append'
op|'('
string|"'/path/to/file'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_repl_connection
dedent|''
name|'def'
name|'test_repl_connection'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
op|'{'
string|"'replication_ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'replication_port'"
op|':'
number|'80'
op|','
nl|'\n'
string|"'device'"
op|':'
string|"'sdb1'"
op|'}'
newline|'\n'
name|'conn'
op|'='
name|'db_replicator'
op|'.'
name|'ReplConnection'
op|'('
name|'node'
op|','
string|"'1234567890'"
op|','
string|"'abcdefg'"
op|','
nl|'\n'
name|'logging'
op|'.'
name|'getLogger'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|req
name|'def'
name|'req'
op|'('
name|'method'
op|','
name|'path'
op|','
name|'body'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'method'
op|','
string|"'REPLICATE'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
string|"'application/json'"
op|')'
newline|'\n'
nl|'\n'
DECL|class|Resp
dedent|''
name|'class'
name|'Resp'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|read
indent|'            '
name|'def'
name|'read'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"'data'"
newline|'\n'
dedent|''
dedent|''
name|'resp'
op|'='
name|'Resp'
op|'('
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'request'
op|'='
name|'req'
newline|'\n'
name|'conn'
op|'.'
name|'getresponse'
op|'='
name|'lambda'
op|'*'
name|'args'
op|':'
name|'resp'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conn'
op|'.'
name|'replicate'
op|'('
number|'1'
op|','
number|'2'
op|','
number|'3'
op|')'
op|','
name|'resp'
op|')'
newline|'\n'
nl|'\n'
DECL|function|other_req
name|'def'
name|'other_req'
op|'('
name|'method'
op|','
name|'path'
op|','
name|'body'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'blah'"
op|')'
newline|'\n'
dedent|''
name|'conn'
op|'.'
name|'request'
op|'='
name|'other_req'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conn'
op|'.'
name|'replicate'
op|'('
number|'1'
op|','
number|'2'
op|','
number|'3'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rsync_file
dedent|''
name|'def'
name|'test_rsync_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'with'
name|'_mock_process'
op|'('
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'False'
op|','
nl|'\n'
name|'replicator'
op|'.'
name|'_rsync_file'
op|'('
string|"'/some/file'"
op|','
string|"'remote:/some/file'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
number|'0'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'True'
op|','
nl|'\n'
name|'replicator'
op|'.'
name|'_rsync_file'
op|'('
string|"'/some/file'"
op|','
string|"'remote:/some/file'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rsync_file_popen_args
dedent|''
dedent|''
name|'def'
name|'test_rsync_file_popen_args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'with'
name|'_mock_process'
op|'('
number|'0'
op|')'
name|'as'
name|'process'
op|':'
newline|'\n'
indent|'            '
name|'replicator'
op|'.'
name|'_rsync_file'
op|'('
string|"'/some/file'"
op|','
string|"'remote:/some_file'"
op|')'
newline|'\n'
name|'exp_args'
op|'='
op|'('
op|'['
nl|'\n'
string|"'rsync'"
op|','
string|"'--quiet'"
op|','
string|"'--no-motd'"
op|','
nl|'\n'
string|"'--timeout=%s'"
op|'%'
name|'int'
op|'('
name|'math'
op|'.'
name|'ceil'
op|'('
name|'replicator'
op|'.'
name|'node_timeout'
op|')'
op|')'
op|','
nl|'\n'
string|"'--contimeout=%s'"
op|'%'
name|'int'
op|'('
name|'math'
op|'.'
name|'ceil'
op|'('
name|'replicator'
op|'.'
name|'conn_timeout'
op|')'
op|')'
op|','
nl|'\n'
string|"'--whole-file'"
op|','
string|"'/some/file'"
op|','
string|"'remote:/some_file'"
op|']'
op|','
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exp_args'
op|','
name|'process'
op|'.'
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rsync_file_popen_args_whole_file_false
dedent|''
dedent|''
name|'def'
name|'test_rsync_file_popen_args_whole_file_false'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'with'
name|'_mock_process'
op|'('
number|'0'
op|')'
name|'as'
name|'process'
op|':'
newline|'\n'
indent|'            '
name|'replicator'
op|'.'
name|'_rsync_file'
op|'('
string|"'/some/file'"
op|','
string|"'remote:/some_file'"
op|','
name|'False'
op|')'
newline|'\n'
name|'exp_args'
op|'='
op|'('
op|'['
nl|'\n'
string|"'rsync'"
op|','
string|"'--quiet'"
op|','
string|"'--no-motd'"
op|','
nl|'\n'
string|"'--timeout=%s'"
op|'%'
name|'int'
op|'('
name|'math'
op|'.'
name|'ceil'
op|'('
name|'replicator'
op|'.'
name|'node_timeout'
op|')'
op|')'
op|','
nl|'\n'
string|"'--contimeout=%s'"
op|'%'
name|'int'
op|'('
name|'math'
op|'.'
name|'ceil'
op|'('
name|'replicator'
op|'.'
name|'conn_timeout'
op|')'
op|')'
op|','
nl|'\n'
string|"'/some/file'"
op|','
string|"'remote:/some_file'"
op|']'
op|','
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exp_args'
op|','
name|'process'
op|'.'
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rsync_db
dedent|''
dedent|''
name|'def'
name|'test_rsync_db'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'_rsync_file'
op|'='
name|'lambda'
op|'*'
name|'args'
op|':'
name|'True'
newline|'\n'
name|'fake_device'
op|'='
op|'{'
string|"'replication_ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'device'"
op|':'
string|"'sda1'"
op|'}'
newline|'\n'
name|'replicator'
op|'.'
name|'_rsync_db'
op|'('
name|'FakeBroker'
op|'('
op|')'
op|','
name|'fake_device'
op|','
name|'ReplHttp'
op|'('
op|')'
op|','
string|"'abcd'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rsync_db_rsync_file_call
dedent|''
name|'def'
name|'test_rsync_db_rsync_file_call'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_device'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'port'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'replication_port'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'device'"
op|':'
string|"'sda1'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|mock_rsync_ip
name|'def'
name|'mock_rsync_ip'
op|'('
name|'ip'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'fake_device'
op|'['
string|"'ip'"
op|']'
op|','
name|'ip'
op|')'
newline|'\n'
name|'return'
string|"'rsync_ip(%s)'"
op|'%'
name|'ip'
newline|'\n'
nl|'\n'
DECL|class|MyTestReplicator
dedent|''
name|'class'
name|'MyTestReplicator'
op|'('
name|'TestReplicator'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'db_file'
op|','
name|'remote_file'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'MyTestReplicator'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'db_file'
op|'='
name|'db_file'
newline|'\n'
name|'self'
op|'.'
name|'remote_file'
op|'='
name|'remote_file'
newline|'\n'
nl|'\n'
DECL|member|_rsync_file
dedent|''
name|'def'
name|'_rsync_file'
op|'('
name|'self_'
op|','
name|'db_file'
op|','
name|'remote_file'
op|','
name|'whole_file'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self_'
op|'.'
name|'db_file'
op|','
name|'db_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self_'
op|'.'
name|'remote_file'
op|','
name|'remote_file'
op|')'
newline|'\n'
name|'self_'
op|'.'
name|'_rsync_file_called'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'patch'
op|'('
string|"'swift.common.db_replicator.rsync_ip'"
op|','
name|'mock_rsync_ip'
op|')'
op|':'
newline|'\n'
DECL|variable|broker
indent|'            '
name|'broker'
op|'='
name|'FakeBroker'
op|'('
op|')'
newline|'\n'
DECL|variable|remote_file
name|'remote_file'
op|'='
string|"'rsync_ip(127.0.0.1)::container/sda1/tmp/abcd'"
newline|'\n'
DECL|variable|replicator
name|'replicator'
op|'='
name|'MyTestReplicator'
op|'('
name|'broker'
op|'.'
name|'db_file'
op|','
name|'remote_file'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'_rsync_db'
op|'('
name|'broker'
op|','
name|'fake_device'
op|','
name|'ReplHttp'
op|'('
op|')'
op|','
string|"'abcd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'replicator'
op|'.'
name|'_rsync_file_called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'patch'
op|'('
string|"'swift.common.db_replicator.rsync_ip'"
op|','
name|'mock_rsync_ip'
op|')'
op|':'
newline|'\n'
DECL|variable|broker
indent|'            '
name|'broker'
op|'='
name|'FakeBroker'
op|'('
op|')'
newline|'\n'
DECL|variable|remote_file
name|'remote_file'
op|'='
string|"'rsync_ip(127.0.0.1)::container0/sda1/tmp/abcd'"
newline|'\n'
DECL|variable|replicator
name|'replicator'
op|'='
name|'MyTestReplicator'
op|'('
name|'broker'
op|'.'
name|'db_file'
op|','
name|'remote_file'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'vm_test_mode'
op|'='
name|'True'
newline|'\n'
name|'replicator'
op|'.'
name|'_rsync_db'
op|'('
name|'broker'
op|','
name|'fake_device'
op|','
name|'ReplHttp'
op|'('
op|')'
op|','
string|"'abcd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'replicator'
op|'.'
name|'_rsync_file_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rsync_db_rsync_file_failure
dedent|''
dedent|''
name|'def'
name|'test_rsync_db_rsync_file_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MyTestReplicator
indent|'        '
name|'class'
name|'MyTestReplicator'
op|'('
name|'TestReplicator'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'MyTestReplicator'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_rsync_file_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|_rsync_file
dedent|''
name|'def'
name|'_rsync_file'
op|'('
name|'self_'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'False'
op|','
name|'self_'
op|'.'
name|'_rsync_file_called'
op|','
nl|'\n'
string|"'_sync_file() should only be called once'"
op|')'
newline|'\n'
name|'self_'
op|'.'
name|'_rsync_file_called'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'lambda'
op|'*'
name|'args'
op|':'
name|'True'
op|')'
op|':'
newline|'\n'
DECL|variable|replicator
indent|'            '
name|'replicator'
op|'='
name|'MyTestReplicator'
op|'('
op|')'
newline|'\n'
DECL|variable|fake_device
name|'fake_device'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'replication_ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'device'"
op|':'
string|"'sda1'"
op|'}'
newline|'\n'
name|'replicator'
op|'.'
name|'_rsync_db'
op|'('
name|'FakeBroker'
op|'('
op|')'
op|','
name|'fake_device'
op|','
name|'ReplHttp'
op|'('
op|')'
op|','
string|"'abcd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'True'
op|','
name|'replicator'
op|'.'
name|'_rsync_file_called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rsync_db_change_after_sync
dedent|''
dedent|''
name|'def'
name|'test_rsync_db_change_after_sync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MyTestReplicator
indent|'        '
name|'class'
name|'MyTestReplicator'
op|'('
name|'TestReplicator'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'broker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'super'
op|'('
name|'MyTestReplicator'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'broker'
op|'='
name|'broker'
newline|'\n'
name|'self'
op|'.'
name|'_rsync_file_call_count'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|_rsync_file
dedent|''
name|'def'
name|'_rsync_file'
op|'('
name|'self_'
op|','
name|'db_file'
op|','
name|'remote_file'
op|','
name|'whole_file'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self_'
op|'.'
name|'_rsync_file_call_count'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'self_'
op|'.'
name|'_rsync_file_call_count'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'True'
op|','
name|'whole_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'False'
op|','
name|'self_'
op|'.'
name|'broker'
op|'.'
name|'locked'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'self_'
op|'.'
name|'_rsync_file_call_count'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'False'
op|','
name|'whole_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'True'
op|','
name|'self_'
op|'.'
name|'broker'
op|'.'
name|'locked'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'RuntimeError'
op|'('
string|"'_rsync_file() called too many times'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
comment|'# with journal file'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'lambda'
op|'*'
name|'args'
op|':'
name|'True'
op|')'
op|':'
newline|'\n'
DECL|variable|broker
indent|'            '
name|'broker'
op|'='
name|'FakeBroker'
op|'('
op|')'
newline|'\n'
DECL|variable|replicator
name|'replicator'
op|'='
name|'MyTestReplicator'
op|'('
name|'broker'
op|')'
newline|'\n'
DECL|variable|fake_device
name|'fake_device'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'replication_ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'device'"
op|':'
string|"'sda1'"
op|'}'
newline|'\n'
name|'replicator'
op|'.'
name|'_rsync_db'
op|'('
name|'broker'
op|','
name|'fake_device'
op|','
name|'ReplHttp'
op|'('
op|')'
op|','
string|"'abcd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'2'
op|','
name|'replicator'
op|'.'
name|'_rsync_file_call_count'
op|')'
newline|'\n'
nl|'\n'
comment|'# with new mtime'
nl|'\n'
dedent|''
name|'with'
name|'patch'
op|'('
string|"'os.path.exists'"
op|','
name|'lambda'
op|'*'
name|'args'
op|':'
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'patch'
op|'('
string|"'os.path.getmtime'"
op|','
name|'ChangingMtimesOs'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'broker'
op|'='
name|'FakeBroker'
op|'('
op|')'
newline|'\n'
name|'replicator'
op|'='
name|'MyTestReplicator'
op|'('
name|'broker'
op|')'
newline|'\n'
name|'fake_device'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'replication_ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'device'"
op|':'
string|"'sda1'"
op|'}'
newline|'\n'
name|'replicator'
op|'.'
name|'_rsync_db'
op|'('
name|'broker'
op|','
name|'fake_device'
op|','
name|'ReplHttp'
op|'('
op|')'
op|','
string|"'abcd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'2'
op|','
name|'replicator'
op|'.'
name|'_rsync_file_call_count'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_in_sync
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_in_sync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'replicator'
op|'.'
name|'_in_sync'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'point'"
op|':'
number|'0'
op|','
string|"'max_row'"
op|':'
number|'0'
op|','
string|"'hash'"
op|':'
string|"'b'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'point'"
op|':'
op|'-'
number|'1'
op|','
string|"'max_row'"
op|':'
number|'0'
op|','
string|"'hash'"
op|':'
string|"'b'"
op|'}'
op|','
nl|'\n'
name|'FakeBroker'
op|'('
op|')'
op|','
op|'-'
number|'1'
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'replicator'
op|'.'
name|'_in_sync'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'point'"
op|':'
op|'-'
number|'1'
op|','
string|"'max_row'"
op|':'
number|'0'
op|','
string|"'hash'"
op|':'
string|"'b'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'point'"
op|':'
op|'-'
number|'1'
op|','
string|"'max_row'"
op|':'
number|'10'
op|','
string|"'hash'"
op|':'
string|"'b'"
op|'}'
op|','
nl|'\n'
name|'FakeBroker'
op|'('
op|')'
op|','
op|'-'
number|'1'
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'bool'
op|'('
name|'replicator'
op|'.'
name|'_in_sync'
op|'('
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'point'"
op|':'
op|'-'
number|'1'
op|','
string|"'max_row'"
op|':'
number|'0'
op|','
string|"'hash'"
op|':'
string|"'c'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'point'"
op|':'
op|'-'
number|'1'
op|','
string|"'max_row'"
op|':'
number|'10'
op|','
string|"'hash'"
op|':'
string|"'d'"
op|'}'
op|','
nl|'\n'
name|'FakeBroker'
op|'('
op|')'
op|','
op|'-'
number|'1'
op|')'
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_once
dedent|''
name|'def'
name|'test_run_once'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_once_no_ips
dedent|''
name|'def'
name|'test_run_once_no_ips'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|','
name|'logger'
op|'='
name|'unit'
op|'.'
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'whataremyips'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'args'
op|':'
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'replicator'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'error'"
op|']'
op|','
nl|'\n'
op|'['
op|'('
op|'('
string|"'ERROR Failed to get my own IPs?'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_once_node_is_not_mounted
dedent|''
name|'def'
name|'test_run_once_node_is_not_mounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_replicator'
op|'.'
name|'ring'
op|'='
name|'FakeRingWithSingleNode'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'='
op|'{'
string|"'mount_check'"
op|':'
string|"'true'"
op|','
string|"'bind_port'"
op|':'
number|'6000'
op|'}'
newline|'\n'
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
name|'conf'
op|','
name|'logger'
op|'='
name|'unit'
op|'.'
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'replicator'
op|'.'
name|'mount_check'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'replicator'
op|'.'
name|'port'
op|','
number|'6000'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_ismount
name|'def'
name|'mock_ismount'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'path'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'replicator'
op|'.'
name|'root'
op|','
nl|'\n'
name|'replicator'
op|'.'
name|'ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|'['
string|"'device'"
op|']'
op|')'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'whataremyips'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'args'
op|':'
op|'['
string|"'1.1.1.1'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'ismount'"
op|','
name|'mock_ismount'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'warning'"
op|']'
op|','
nl|'\n'
op|'['
op|'('
op|'('
string|"'Skipping %(device)s as it is not mounted'"
op|'%'
nl|'\n'
name|'replicator'
op|'.'
name|'ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_once_node_is_mounted
dedent|''
name|'def'
name|'test_run_once_node_is_mounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_replicator'
op|'.'
name|'ring'
op|'='
name|'FakeRingWithSingleNode'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'='
op|'{'
string|"'mount_check'"
op|':'
string|"'true'"
op|','
string|"'bind_port'"
op|':'
number|'6000'
op|'}'
newline|'\n'
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
name|'conf'
op|','
name|'logger'
op|'='
name|'unit'
op|'.'
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'replicator'
op|'.'
name|'mount_check'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'replicator'
op|'.'
name|'port'
op|','
number|'6000'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_unlink_older_than
name|'def'
name|'mock_unlink_older_than'
op|'('
name|'path'
op|','
name|'mtime'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'path'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'replicator'
op|'.'
name|'root'
op|','
nl|'\n'
name|'replicator'
op|'.'
name|'ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
string|"'tmp'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'replicator'
op|'.'
name|'reclaim_age'
op|'>='
name|'mtime'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_spawn_n
dedent|''
name|'def'
name|'mock_spawn_n'
op|'('
name|'fn'
op|','
name|'part'
op|','
name|'object_file'
op|','
name|'node_id'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'123'"
op|','
name|'part'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'/srv/node/sda/c.db'"
op|','
name|'object_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'1'
op|','
name|'node_id'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'whataremyips'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'args'
op|':'
op|'['
string|"'1.1.1.1'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'ismount'"
op|','
name|'lambda'
op|'*'
name|'args'
op|':'
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'unlink_older_than'"
op|','
nl|'\n'
name|'mock_unlink_older_than'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'roundrobin_datadirs'"
op|','
nl|'\n'
name|'lambda'
op|'*'
name|'args'
op|':'
op|'['
op|'('
string|"'123'"
op|','
string|"'/srv/node/sda/c.db'"
op|','
number|'1'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'replicator'
op|'.'
name|'cpool'
op|','
string|"'spawn_n'"
op|','
name|'mock_spawn_n'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'patch'
op|'('
string|"'swift.common.db_replicator.os'"
op|','
nl|'\n'
name|'new'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'wraps'
op|'='
name|'os'
op|')'
op|')'
name|'as'
name|'mock_os'
op|':'
newline|'\n'
indent|'            '
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'replicator'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'.'
name|'assert_called_with'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'replicator'
op|'.'
name|'root'
op|','
nl|'\n'
name|'replicator'
op|'.'
name|'ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
name|'replicator'
op|'.'
name|'datadir'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_usync
dedent|''
dedent|''
name|'def'
name|'test_usync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_http'
op|'='
name|'ReplHttp'
op|'('
op|')'
newline|'\n'
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'_usync_db'
op|'('
number|'0'
op|','
name|'FakeBroker'
op|'('
op|')'
op|','
name|'fake_http'
op|','
string|"'12345'"
op|','
string|"'67890'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_usync_http_error_above_300
dedent|''
name|'def'
name|'test_usync_http_error_above_300'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_http'
op|'='
name|'ReplHttp'
op|'('
name|'set_status'
op|'='
number|'301'
op|')'
newline|'\n'
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
nl|'\n'
name|'replicator'
op|'.'
name|'_usync_db'
op|'('
number|'0'
op|','
name|'FakeBroker'
op|'('
op|')'
op|','
name|'fake_http'
op|','
string|"'12345'"
op|','
string|"'67890'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_usync_http_error_below_200
dedent|''
name|'def'
name|'test_usync_http_error_below_200'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'fake_http'
op|'='
name|'ReplHttp'
op|'('
name|'set_status'
op|'='
number|'101'
op|')'
newline|'\n'
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
nl|'\n'
name|'replicator'
op|'.'
name|'_usync_db'
op|'('
number|'0'
op|','
name|'FakeBroker'
op|'('
op|')'
op|','
name|'fake_http'
op|','
string|"'12345'"
op|','
string|"'67890'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_stats
dedent|''
name|'def'
name|'test_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# I'm not sure how to test that this logs the right thing,"
nl|'\n'
comment|'# but we can at least make sure it gets covered.'
nl|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'_zero_stats'
op|'('
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'_report_stats'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_replicate_object
dedent|''
name|'def'
name|'test_replicate_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_replicator'
op|'.'
name|'ring'
op|'='
name|'FakeRingWithNodes'
op|'('
op|')'
newline|'\n'
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'delete_db'
op|'='
name|'self'
op|'.'
name|'stub_delete_db'
newline|'\n'
name|'replicator'
op|'.'
name|'_replicate_object'
op|'('
string|"'0'"
op|','
string|"'/path/to/file'"
op|','
string|"'node_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
op|']'
op|','
name|'self'
op|'.'
name|'delete_db_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_replicate_object_quarantine
dedent|''
name|'def'
name|'test_replicate_object_quarantine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'replicator'
op|'.'
name|'brokerclass'
op|','
string|"'db_file'"
op|','
nl|'\n'
string|"'/a/b/c/d/e/hey'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'replicator'
op|'.'
name|'brokerclass'
op|','
nl|'\n'
string|"'get_repl_missing_table'"
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_renamer
name|'def'
name|'mock_renamer'
op|'('
name|'was'
op|','
name|'new'
op|','
name|'fsync'
op|'='
name|'False'
op|','
name|'cause_colision'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'cause_colision'
name|'and'
string|"'-'"
name|'not'
name|'in'
name|'new'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'EEXIST'
op|','
string|'"File already exists"'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'/a/b/c/d/e'"
op|','
name|'was'
op|')'
newline|'\n'
name|'if'
string|"'-'"
name|'in'
name|'new'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
nl|'\n'
name|'new'
op|'.'
name|'startswith'
op|'('
string|"'/a/quarantined/containers/e-'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'/a/quarantined/containers/e'"
op|','
name|'new'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_renamer_error
dedent|''
dedent|''
name|'def'
name|'mock_renamer_error'
op|'('
name|'was'
op|','
name|'new'
op|','
name|'fsync'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock_renamer'
op|'('
name|'was'
op|','
name|'new'
op|','
name|'fsync'
op|','
name|'cause_colision'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db_replicator'
op|','
string|"'renamer'"
op|','
name|'mock_renamer'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'replicator'
op|'.'
name|'_replicate_object'
op|'('
string|"'0'"
op|','
string|"'file'"
op|','
string|"'node_id'"
op|')'
newline|'\n'
comment|'# try the double quarantine'
nl|'\n'
dedent|''
name|'with'
name|'patch'
op|'.'
name|'object'
op|'('
name|'db_replicator'
op|','
string|"'renamer'"
op|','
name|'mock_renamer_error'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'replicator'
op|'.'
name|'_replicate_object'
op|'('
string|"'0'"
op|','
string|"'file'"
op|','
string|"'node_id'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_replicate_object_delete_because_deleted
dedent|''
dedent|''
name|'def'
name|'test_replicate_object_delete_because_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'replicator'
op|'.'
name|'delete_db'
op|'='
name|'self'
op|'.'
name|'stub_delete_db'
newline|'\n'
name|'replicator'
op|'.'
name|'brokerclass'
op|'.'
name|'stub_replication_info'
op|'='
op|'{'
nl|'\n'
string|"'delete_timestamp'"
op|':'
number|'2'
op|','
string|"'put_timestamp'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'replicator'
op|'.'
name|'_replicate_object'
op|'('
string|"'0'"
op|','
string|"'/path/to/file'"
op|','
string|"'node_id'"
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'replicator'
op|'.'
name|'brokerclass'
op|'.'
name|'stub_replication_info'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
string|"'/path/to/file'"
op|']'
op|','
name|'self'
op|'.'
name|'delete_db_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_replicate_object_delete_because_not_shouldbehere
dedent|''
name|'def'
name|'test_replicate_object_delete_because_not_shouldbehere'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'delete_db'
op|'='
name|'self'
op|'.'
name|'stub_delete_db'
newline|'\n'
name|'replicator'
op|'.'
name|'_replicate_object'
op|'('
string|"'0'"
op|','
string|"'/path/to/file'"
op|','
string|"'node_id'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
string|"'/path/to/file'"
op|']'
op|','
name|'self'
op|'.'
name|'delete_db_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_replicate_account_out_of_place
dedent|''
name|'def'
name|'test_replicate_account_out_of_place'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|','
name|'logger'
op|'='
name|'unit'
op|'.'
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'ring'
op|'='
name|'FakeRingWithNodes'
op|'('
op|')'
op|'.'
name|'Ring'
op|'('
string|"'path'"
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'brokerclass'
op|'='
name|'FakeAccountBroker'
newline|'\n'
name|'replicator'
op|'.'
name|'_repl_to_node'
op|'='
name|'lambda'
op|'*'
name|'args'
op|':'
name|'True'
newline|'\n'
name|'replicator'
op|'.'
name|'delete_db'
op|'='
name|'self'
op|'.'
name|'stub_delete_db'
newline|'\n'
comment|'# Correct node_id, wrong part'
nl|'\n'
name|'part'
op|'='
name|'replicator'
op|'.'
name|'ring'
op|'.'
name|'get_part'
op|'('
name|'TEST_ACCOUNT_NAME'
op|')'
op|'+'
number|'1'
newline|'\n'
name|'node_id'
op|'='
name|'replicator'
op|'.'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'part'
op|')'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'replicator'
op|'.'
name|'_replicate_object'
op|'('
name|'str'
op|'('
name|'part'
op|')'
op|','
string|"'/path/to/file'"
op|','
name|'node_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'/path/to/file'"
op|']'
op|','
name|'self'
op|'.'
name|'delete_db_calls'
op|')'
newline|'\n'
name|'error_msgs'
op|'='
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'expected'
op|'='
string|"'Found /path/to/file for /a%20c%20t when it should be '"
string|"'on partition 0; will replicate out and remove.'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'error_msgs'
op|','
op|'['
name|'expected'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_replicate_container_out_of_place
dedent|''
name|'def'
name|'test_replicate_container_out_of_place'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|','
name|'logger'
op|'='
name|'unit'
op|'.'
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'ring'
op|'='
name|'FakeRingWithNodes'
op|'('
op|')'
op|'.'
name|'Ring'
op|'('
string|"'path'"
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'_repl_to_node'
op|'='
name|'lambda'
op|'*'
name|'args'
op|':'
name|'True'
newline|'\n'
name|'replicator'
op|'.'
name|'delete_db'
op|'='
name|'self'
op|'.'
name|'stub_delete_db'
newline|'\n'
comment|'# Correct node_id, wrong part'
nl|'\n'
name|'part'
op|'='
name|'replicator'
op|'.'
name|'ring'
op|'.'
name|'get_part'
op|'('
nl|'\n'
name|'TEST_ACCOUNT_NAME'
op|','
name|'TEST_CONTAINER_NAME'
op|')'
op|'+'
number|'1'
newline|'\n'
name|'node_id'
op|'='
name|'replicator'
op|'.'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'part'
op|')'
op|'['
number|'0'
op|']'
op|'['
string|"'id'"
op|']'
newline|'\n'
name|'replicator'
op|'.'
name|'_replicate_object'
op|'('
name|'str'
op|'('
name|'part'
op|')'
op|','
string|"'/path/to/file'"
op|','
name|'node_id'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'/path/to/file'"
op|']'
op|','
name|'self'
op|'.'
name|'delete_db_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'error'"
op|']'
op|','
nl|'\n'
op|'['
op|'('
op|'('
string|"'Found /path/to/file for /a%20c%20t/c%20o%20n when it should '"
nl|'\n'
string|"'be on partition 0; will replicate out and remove.'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_db
dedent|''
name|'def'
name|'test_delete_db'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_replicator'
op|'.'
name|'lock_parent_directory'
op|'='
name|'lock_parent_directory'
newline|'\n'
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|','
name|'logger'
op|'='
name|'unit'
op|'.'
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'_zero_stats'
op|'('
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'extract_device'
op|'='
name|'lambda'
name|'_'
op|':'
string|"'some_device'"
newline|'\n'
nl|'\n'
name|'temp_dir'
op|'='
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'temp_suf_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'temp_dir'
op|','
string|"'16e'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'temp_suf_dir'
op|')'
newline|'\n'
name|'temp_hash_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'temp_suf_dir'
op|','
nl|'\n'
string|"'166e33924a08ede4204871468c11e16e'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'temp_hash_dir'
op|')'
newline|'\n'
name|'temp_file'
op|'='
name|'NamedTemporaryFile'
op|'('
name|'dir'
op|'='
name|'temp_hash_dir'
op|','
name|'delete'
op|'='
name|'False'
op|')'
newline|'\n'
name|'temp_hash_dir2'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'temp_suf_dir'
op|','
nl|'\n'
string|"'266e33924a08ede4204871468c11e16e'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'temp_hash_dir2'
op|')'
newline|'\n'
name|'temp_file2'
op|'='
name|'NamedTemporaryFile'
op|'('
name|'dir'
op|'='
name|'temp_hash_dir2'
op|','
name|'delete'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# sanity-checks'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_suf_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_hash_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_file'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_hash_dir2'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_file2'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'replicator'
op|'.'
name|'stats'
op|'['
string|"'remove'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'temp_file'
op|'.'
name|'db_file'
op|'='
name|'temp_file'
op|'.'
name|'name'
newline|'\n'
name|'replicator'
op|'.'
name|'delete_db'
op|'('
name|'temp_file'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_suf_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_hash_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_file'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_hash_dir2'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_file2'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
op|'('
string|"'removes.some_device'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|','
nl|'\n'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'increment'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'replicator'
op|'.'
name|'stats'
op|'['
string|"'remove'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'temp_file2'
op|'.'
name|'db_file'
op|'='
name|'temp_file2'
op|'.'
name|'name'
newline|'\n'
name|'replicator'
op|'.'
name|'delete_db'
op|'('
name|'temp_file2'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_suf_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_hash_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_file'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_hash_dir2'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'temp_file2'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|'('
op|'('
string|"'removes.some_device'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|'*'
number|'2'
op|','
nl|'\n'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'increment'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'replicator'
op|'.'
name|'stats'
op|'['
string|"'remove'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'rmtree'
op|'('
name|'temp_dir'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_extract_device
dedent|''
dedent|''
name|'def'
name|'test_extract_device'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
string|"'devices'"
op|':'
string|"'/some/root'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'some_device'"
op|','
name|'replicator'
op|'.'
name|'extract_device'
op|'('
nl|'\n'
string|"'/some/root/some_device/deeper/and/deeper'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'UNKNOWN'"
op|','
name|'replicator'
op|'.'
name|'extract_device'
op|'('
nl|'\n'
string|"'/some/foo/some_device/deeper/and/deeper'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dispatch_no_arg_pop
dedent|''
name|'def'
name|'test_dispatch_no_arg_pop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
name|'response'
op|'='
name|'rpc'
op|'.'
name|'dispatch'
op|'('
op|'('
string|"'a'"
op|','
op|')'
op|','
string|"'arg'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'Invalid object type'"
op|','
name|'response'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'400'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dispatch_drive_not_mounted
dedent|''
name|'def'
name|'test_dispatch_drive_not_mounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_ismount
name|'def'
name|'mock_ismount'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'/drive'"
op|','
name|'path'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'ismount'"
op|','
name|'mock_ismount'
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'rpc'
op|'.'
name|'dispatch'
op|'('
op|'('
string|"'drive'"
op|','
string|"'part'"
op|','
string|"'hash'"
op|')'
op|','
op|'['
string|"'method'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'507 drive is not mounted'"
op|','
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'507'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dispatch_unexpected_operation_db_does_not_exist
dedent|''
name|'def'
name|'test_dispatch_unexpected_operation_db_does_not_exist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_mkdirs
name|'def'
name|'mock_mkdirs'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'/drive/tmp'"
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'mkdirs'"
op|','
name|'mock_mkdirs'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'patch'
op|'('
string|"'swift.common.db_replicator.os'"
op|','
nl|'\n'
name|'new'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'wraps'
op|'='
name|'os'
op|')'
op|')'
name|'as'
name|'mock_os'
op|':'
newline|'\n'
indent|'            '
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
name|'response'
op|'='
name|'rpc'
op|'.'
name|'dispatch'
op|'('
op|'('
string|"'drive'"
op|','
string|"'part'"
op|','
string|"'hash'"
op|')'
op|','
op|'['
string|"'unexpected'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'404 Not Found'"
op|','
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'404'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dispatch_operation_unexpected
dedent|''
name|'def'
name|'test_dispatch_operation_unexpected'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'mkdirs'"
op|','
name|'lambda'
op|'*'
name|'args'
op|':'
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|function|unexpected_method
name|'def'
name|'unexpected_method'
op|'('
name|'broker'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'FakeBroker'
op|','
name|'broker'
op|'.'
name|'__class__'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'arg1'"
op|','
string|"'arg2'"
op|']'
op|','
name|'args'
op|')'
newline|'\n'
name|'return'
string|"'unexpected-called'"
newline|'\n'
nl|'\n'
dedent|''
name|'rpc'
op|'.'
name|'unexpected'
op|'='
name|'unexpected_method'
newline|'\n'
nl|'\n'
name|'with'
name|'patch'
op|'('
string|"'swift.common.db_replicator.os'"
op|','
nl|'\n'
name|'new'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'wraps'
op|'='
name|'os'
op|')'
op|')'
name|'as'
name|'mock_os'
op|':'
newline|'\n'
indent|'            '
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'response'
op|'='
name|'rpc'
op|'.'
name|'dispatch'
op|'('
op|'('
string|"'drive'"
op|','
string|"'part'"
op|','
string|"'hash'"
op|')'
op|','
nl|'\n'
op|'['
string|"'unexpected'"
op|','
string|"'arg1'"
op|','
string|"'arg2'"
op|']'
op|')'
newline|'\n'
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'assert_called_with'
op|'('
string|"'/part/ash/hash/hash.db'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'unexpected-called'"
op|','
name|'response'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dispatch_operation_rsync_then_merge
dedent|''
name|'def'
name|'test_dispatch_operation_rsync_then_merge'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'renamer'"
op|','
name|'lambda'
op|'*'
name|'args'
op|':'
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'patch'
op|'('
string|"'swift.common.db_replicator.os'"
op|','
nl|'\n'
name|'new'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'wraps'
op|'='
name|'os'
op|')'
op|')'
name|'as'
name|'mock_os'
op|':'
newline|'\n'
indent|'            '
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'response'
op|'='
name|'rpc'
op|'.'
name|'dispatch'
op|'('
op|'('
string|"'drive'"
op|','
string|"'part'"
op|','
string|"'hash'"
op|')'
op|','
nl|'\n'
op|'['
string|"'rsync_then_merge'"
op|','
string|"'arg1'"
op|','
string|"'arg2'"
op|']'
op|')'
newline|'\n'
name|'expected_calls'
op|'='
op|'['
name|'call'
op|'('
string|"'/part/ash/hash/hash.db'"
op|')'
op|','
nl|'\n'
name|'call'
op|'('
string|"'/drive/tmp/arg1'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'call_args_list'
op|','
nl|'\n'
name|'expected_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'204 No Content'"
op|','
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'204'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_dispatch_operation_complete_rsync
dedent|''
dedent|''
name|'def'
name|'test_dispatch_operation_complete_rsync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'renamer'"
op|','
name|'lambda'
op|'*'
name|'args'
op|':'
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'patch'
op|'('
string|"'swift.common.db_replicator.os'"
op|','
name|'new'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
nl|'\n'
name|'wraps'
op|'='
name|'os'
op|')'
op|')'
name|'as'
name|'mock_os'
op|':'
newline|'\n'
indent|'            '
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'True'
op|']'
newline|'\n'
name|'response'
op|'='
name|'rpc'
op|'.'
name|'dispatch'
op|'('
op|'('
string|"'drive'"
op|','
string|"'part'"
op|','
string|"'hash'"
op|')'
op|','
nl|'\n'
op|'['
string|"'complete_rsync'"
op|','
string|"'arg1'"
op|','
string|"'arg2'"
op|']'
op|')'
newline|'\n'
name|'expected_calls'
op|'='
op|'['
name|'call'
op|'('
string|"'/part/ash/hash/hash.db'"
op|')'
op|','
nl|'\n'
name|'call'
op|'('
string|"'/drive/tmp/arg1'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'call_args_list'
op|','
nl|'\n'
name|'expected_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'204 No Content'"
op|','
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'204'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rsync_then_merge_db_does_not_exist
dedent|''
dedent|''
name|'def'
name|'test_rsync_then_merge_db_does_not_exist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'patch'
op|'('
string|"'swift.common.db_replicator.os'"
op|','
nl|'\n'
name|'new'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'wraps'
op|'='
name|'os'
op|')'
op|')'
name|'as'
name|'mock_os'
op|':'
newline|'\n'
indent|'            '
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
name|'response'
op|'='
name|'rpc'
op|'.'
name|'rsync_then_merge'
op|'('
string|"'drive'"
op|','
string|"'/data/db.db'"
op|','
nl|'\n'
op|'('
string|"'arg1'"
op|','
string|"'arg2'"
op|')'
op|')'
newline|'\n'
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'assert_called_with'
op|'('
string|"'/data/db.db'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'404 Not Found'"
op|','
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'404'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rsync_then_merge_old_does_not_exist
dedent|''
dedent|''
name|'def'
name|'test_rsync_then_merge_old_does_not_exist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'patch'
op|'('
string|"'swift.common.db_replicator.os'"
op|','
nl|'\n'
name|'new'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'wraps'
op|'='
name|'os'
op|')'
op|')'
name|'as'
name|'mock_os'
op|':'
newline|'\n'
indent|'            '
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'True'
op|','
name|'False'
op|']'
newline|'\n'
name|'response'
op|'='
name|'rpc'
op|'.'
name|'rsync_then_merge'
op|'('
string|"'drive'"
op|','
string|"'/data/db.db'"
op|','
nl|'\n'
op|'('
string|"'arg1'"
op|','
string|"'arg2'"
op|')'
op|')'
newline|'\n'
name|'expected_calls'
op|'='
op|'['
name|'call'
op|'('
string|"'/data/db.db'"
op|')'
op|','
name|'call'
op|'('
string|"'/drive/tmp/arg1'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'call_args_list'
op|','
nl|'\n'
name|'expected_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'404 Not Found'"
op|','
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'404'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rsync_then_merge_with_objects
dedent|''
dedent|''
name|'def'
name|'test_rsync_then_merge_with_objects'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_renamer
name|'def'
name|'mock_renamer'
op|'('
name|'old'
op|','
name|'new'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'/drive/tmp/arg1'"
op|','
name|'old'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'/data/db.db'"
op|','
name|'new'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'renamer'"
op|','
name|'mock_renamer'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'patch'
op|'('
string|"'swift.common.db_replicator.os'"
op|','
nl|'\n'
name|'new'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'wraps'
op|'='
name|'os'
op|')'
op|')'
name|'as'
name|'mock_os'
op|':'
newline|'\n'
indent|'            '
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'response'
op|'='
name|'rpc'
op|'.'
name|'rsync_then_merge'
op|'('
string|"'drive'"
op|','
string|"'/data/db.db'"
op|','
nl|'\n'
op|'['
string|"'arg1'"
op|','
string|"'arg2'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'204 No Content'"
op|','
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'204'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_complete_rsync_db_does_not_exist
dedent|''
dedent|''
name|'def'
name|'test_complete_rsync_db_does_not_exist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'patch'
op|'('
string|"'swift.common.db_replicator.os'"
op|','
nl|'\n'
name|'new'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'wraps'
op|'='
name|'os'
op|')'
op|')'
name|'as'
name|'mock_os'
op|':'
newline|'\n'
indent|'            '
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'response'
op|'='
name|'rpc'
op|'.'
name|'complete_rsync'
op|'('
string|"'drive'"
op|','
string|"'/data/db.db'"
op|','
nl|'\n'
op|'['
string|"'arg1'"
op|','
string|"'arg2'"
op|']'
op|')'
newline|'\n'
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'assert_called_with'
op|'('
string|"'/data/db.db'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'404 Not Found'"
op|','
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'404'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_complete_rsync_old_file_does_not_exist
dedent|''
dedent|''
name|'def'
name|'test_complete_rsync_old_file_does_not_exist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'patch'
op|'('
string|"'swift.common.db_replicator.os'"
op|','
nl|'\n'
name|'new'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'wraps'
op|'='
name|'os'
op|')'
op|')'
name|'as'
name|'mock_os'
op|':'
newline|'\n'
indent|'            '
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
name|'response'
op|'='
name|'rpc'
op|'.'
name|'complete_rsync'
op|'('
string|"'drive'"
op|','
string|"'/data/db.db'"
op|','
nl|'\n'
op|'['
string|"'arg1'"
op|','
string|"'arg2'"
op|']'
op|')'
newline|'\n'
name|'expected_calls'
op|'='
op|'['
name|'call'
op|'('
string|"'/data/db.db'"
op|')'
op|','
name|'call'
op|'('
string|"'/drive/tmp/arg1'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'expected_calls'
op|','
nl|'\n'
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'call_args_list'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'404 Not Found'"
op|','
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'404'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_complete_rsync_rename
dedent|''
dedent|''
name|'def'
name|'test_complete_rsync_rename'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_exists
name|'def'
name|'mock_exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'path'
op|'=='
string|"'/data/db.db'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'/drive/tmp/arg1'"
op|','
name|'path'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|function|mock_renamer
dedent|''
name|'def'
name|'mock_renamer'
op|'('
name|'old'
op|','
name|'new'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'/drive/tmp/arg1'"
op|','
name|'old'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'/data/db.db'"
op|','
name|'new'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'renamer'"
op|','
name|'mock_renamer'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'patch'
op|'('
string|"'swift.common.db_replicator.os'"
op|','
nl|'\n'
name|'new'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'wraps'
op|'='
name|'os'
op|')'
op|')'
name|'as'
name|'mock_os'
op|':'
newline|'\n'
indent|'            '
name|'mock_os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'False'
op|','
name|'True'
op|']'
newline|'\n'
name|'response'
op|'='
name|'rpc'
op|'.'
name|'complete_rsync'
op|'('
string|"'drive'"
op|','
string|"'/data/db.db'"
op|','
nl|'\n'
op|'['
string|"'arg1'"
op|','
string|"'arg2'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'204 No Content'"
op|','
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'204'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_replicator_sync_with_broker_replication_missing_table
dedent|''
dedent|''
name|'def'
name|'test_replicator_sync_with_broker_replication_missing_table'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'logger'
op|'='
name|'unit'
op|'.'
name|'debug_logger'
op|'('
op|')'
newline|'\n'
name|'broker'
op|'='
name|'FakeBroker'
op|'('
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'get_repl_missing_table'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'called'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|mock_quarantine_db
name|'def'
name|'mock_quarantine_db'
op|'('
name|'object_file'
op|','
name|'server_type'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'.'
name|'append'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'db_file'
op|','
name|'object_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'broker'
op|'.'
name|'db_type'
op|','
name|'server_type'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'_patch'
op|'('
name|'patch'
op|'.'
name|'object'
op|','
name|'db_replicator'
op|','
string|"'quarantine_db'"
op|','
nl|'\n'
name|'mock_quarantine_db'
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'rpc'
op|'.'
name|'sync'
op|'('
name|'broker'
op|','
op|'('
string|"'remote_sync'"
op|','
string|"'hash_'"
op|','
string|"'id_'"
op|','
nl|'\n'
string|"'created_at'"
op|','
string|"'put_timestamp'"
op|','
nl|'\n'
string|"'delete_timestamp'"
op|','
string|"'metadata'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'404 Not Found'"
op|','
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'404'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'called'
op|','
op|'['
name|'True'
op|']'
op|')'
newline|'\n'
name|'errors'
op|'='
name|'rpc'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'errors'
op|','
nl|'\n'
op|'['
string|'"Unable to decode remote metadata \'metadata\'"'
op|','
nl|'\n'
string|'"Quarantining DB %s"'
op|'%'
name|'broker'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_replicator_sync
dedent|''
name|'def'
name|'test_replicator_sync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
name|'broker'
op|'='
name|'FakeBroker'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'response'
op|'='
name|'rpc'
op|'.'
name|'sync'
op|'('
name|'broker'
op|','
op|'('
name|'broker'
op|'.'
name|'get_sync'
op|'('
op|')'
op|'+'
number|'1'
op|','
number|'12345'
op|','
string|"'id_'"
op|','
nl|'\n'
string|"'created_at'"
op|','
string|"'put_timestamp'"
op|','
nl|'\n'
string|"'delete_timestamp'"
op|','
nl|'\n'
string|'\'{"meta1": "data1", "meta2": "data2"}\''
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'{'
string|"'meta1'"
op|':'
string|"'data1'"
op|','
string|"'meta2'"
op|':'
string|"'data2'"
op|'}'
op|','
nl|'\n'
name|'broker'
op|'.'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'created_at'"
op|','
name|'broker'
op|'.'
name|'created_at'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'put_timestamp'"
op|','
name|'broker'
op|'.'
name|'put_timestamp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'delete_timestamp'"
op|','
name|'broker'
op|'.'
name|'delete_timestamp'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'200 OK'"
op|','
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'200'
op|','
name|'response'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_rsync_then_merge
dedent|''
name|'def'
name|'test_rsync_then_merge'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'rsync_then_merge'
op|'('
string|"'sda1'"
op|','
string|"'/srv/swift/blah'"
op|','
op|'('
string|"'a'"
op|','
string|"'b'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_merge_items
dedent|''
name|'def'
name|'test_merge_items'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
name|'fake_broker'
op|'='
name|'FakeBroker'
op|'('
op|')'
newline|'\n'
name|'args'
op|'='
op|'('
string|"'a'"
op|','
string|"'b'"
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'merge_items'
op|'('
name|'fake_broker'
op|','
name|'args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'fake_broker'
op|'.'
name|'args'
op|','
name|'args'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_merge_syncs
dedent|''
name|'def'
name|'test_merge_syncs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
name|'fake_broker'
op|'='
name|'FakeBroker'
op|'('
op|')'
newline|'\n'
name|'args'
op|'='
op|'('
string|"'a'"
op|','
string|"'b'"
op|')'
newline|'\n'
name|'rpc'
op|'.'
name|'merge_syncs'
op|'('
name|'fake_broker'
op|','
name|'args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'fake_broker'
op|'.'
name|'args'
op|','
op|'('
name|'args'
op|'['
number|'0'
op|']'
op|','
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_complete_rsync_with_bad_input
dedent|''
name|'def'
name|'test_complete_rsync_with_bad_input'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drive'
op|'='
string|"'/some/root'"
newline|'\n'
name|'db_file'
op|'='
name|'__file__'
newline|'\n'
name|'args'
op|'='
op|'['
string|"'old_file'"
op|']'
newline|'\n'
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'rpc'
op|'.'
name|'complete_rsync'
op|'('
name|'drive'
op|','
name|'db_file'
op|','
name|'args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'resp'
op|','
name|'HTTPException'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'404'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'rpc'
op|'.'
name|'complete_rsync'
op|'('
name|'drive'
op|','
string|"'new_db_file'"
op|','
name|'args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'resp'
op|','
name|'HTTPException'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'404'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_complete_rsync
dedent|''
name|'def'
name|'test_complete_rsync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'drive'
op|'='
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'args'
op|'='
op|'['
string|"'old_file'"
op|']'
newline|'\n'
name|'rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
op|'('
string|"'/'"
op|','
string|"'/'"
op|','
name|'FakeBroker'
op|','
name|'False'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
string|"'%s/tmp'"
op|'%'
name|'drive'
op|')'
newline|'\n'
name|'old_file'
op|'='
string|"'%s/tmp/old_file'"
op|'%'
name|'drive'
newline|'\n'
name|'new_file'
op|'='
string|"'%s/new_db_file'"
op|'%'
name|'drive'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'fp'
op|'='
name|'open'
op|'('
name|'old_file'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'write'
op|'('
string|"'void'"
op|')'
newline|'\n'
name|'fp'
op|'.'
name|'close'
newline|'\n'
name|'resp'
op|'='
name|'rpc'
op|'.'
name|'complete_rsync'
op|'('
name|'drive'
op|','
name|'new_file'
op|','
name|'args'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'204'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'rmtree'
op|'('
name|'drive'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_roundrobin_datadirs
dedent|''
dedent|''
name|'def'
name|'test_roundrobin_datadirs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'listdir_calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'isdir_calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'exists_calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'shuffle_calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'rmdir_calls'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|_listdir
name|'def'
name|'_listdir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'listdir_calls'
op|'.'
name|'append'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'path'
op|'.'
name|'startswith'
op|'('
string|"'/srv/node/sda/containers'"
op|')'
name|'and'
name|'not'
name|'path'
op|'.'
name|'startswith'
op|'('
string|"'/srv/node/sdb/containers'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'path'
op|'='
name|'path'
op|'['
name|'len'
op|'('
string|"'/srv/node/sdx/containers'"
op|')'
op|':'
op|']'
newline|'\n'
name|'if'
name|'path'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
string|"'123'"
op|','
string|"'456'"
op|','
string|"'789'"
op|','
string|"'9999'"
op|']'
newline|'\n'
comment|'# 456 will pretend to be a file'
nl|'\n'
comment|'# 9999 will be an empty partition with no contents'
nl|'\n'
dedent|''
name|'elif'
name|'path'
op|'=='
string|"'/123'"
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
string|"'abc'"
op|','
string|"'def.db'"
op|']'
comment|'# def.db will pretend to be a file'
newline|'\n'
dedent|''
name|'elif'
name|'path'
op|'=='
string|"'/123/abc'"
op|':'
newline|'\n'
comment|'# 11111111111111111111111111111abc will pretend to be a file'
nl|'\n'
indent|'                '
name|'return'
op|'['
string|"'00000000000000000000000000000abc'"
op|','
nl|'\n'
string|"'11111111111111111111111111111abc'"
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'path'
op|'=='
string|"'/123/abc/00000000000000000000000000000abc'"
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
string|"'00000000000000000000000000000abc.db'"
op|','
nl|'\n'
comment|"# This other.db isn't in the right place, so should be"
nl|'\n'
comment|'# ignored later.'
nl|'\n'
string|"'000000000000000000000000000other.db'"
op|','
nl|'\n'
string|"'weird1'"
op|']'
comment|'# weird1 will pretend to be a dir, if asked'
newline|'\n'
dedent|''
name|'elif'
name|'path'
op|'=='
string|"'/789'"
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
string|"'ghi'"
op|','
string|"'jkl'"
op|']'
comment|'# jkl will pretend to be a file'
newline|'\n'
dedent|''
name|'elif'
name|'path'
op|'=='
string|"'/789/ghi'"
op|':'
newline|'\n'
comment|'# 33333333333333333333333333333ghi will pretend to be a file'
nl|'\n'
indent|'                '
name|'return'
op|'['
string|"'22222222222222222222222222222ghi'"
op|','
nl|'\n'
string|"'33333333333333333333333333333ghi'"
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'path'
op|'=='
string|"'/789/ghi/22222222222222222222222222222ghi'"
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
string|"'22222222222222222222222222222ghi.db'"
op|','
nl|'\n'
string|"'weird2'"
op|']'
comment|'# weird2 will pretend to be a dir, if asked'
newline|'\n'
dedent|''
name|'elif'
name|'path'
op|'=='
string|"'9999'"
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'['
op|']'
newline|'\n'
dedent|''
name|'return'
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|_isdir
dedent|''
name|'def'
name|'_isdir'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'isdir_calls'
op|'.'
name|'append'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'path'
op|'.'
name|'startswith'
op|'('
string|"'/srv/node/sda/containers'"
op|')'
name|'and'
name|'not'
name|'path'
op|'.'
name|'startswith'
op|'('
string|"'/srv/node/sdb/containers'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'path'
op|'='
name|'path'
op|'['
name|'len'
op|'('
string|"'/srv/node/sdx/containers'"
op|')'
op|':'
op|']'
newline|'\n'
name|'if'
name|'path'
name|'in'
op|'('
string|"'/123'"
op|','
string|"'/123/abc'"
op|','
nl|'\n'
string|"'/123/abc/00000000000000000000000000000abc'"
op|','
nl|'\n'
string|"'/123/abc/00000000000000000000000000000abc/weird1'"
op|','
nl|'\n'
string|"'/789'"
op|','
string|"'/789/ghi'"
op|','
nl|'\n'
string|"'/789/ghi/22222222222222222222222222222ghi'"
op|','
nl|'\n'
string|"'/789/ghi/22222222222222222222222222222ghi/weird2'"
op|','
nl|'\n'
string|"'/9999'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|function|_exists
dedent|''
name|'def'
name|'_exists'
op|'('
name|'arg'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'exists_calls'
op|'.'
name|'append'
op|'('
name|'arg'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|function|_shuffle
dedent|''
name|'def'
name|'_shuffle'
op|'('
name|'arg'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'shuffle_calls'
op|'.'
name|'append'
op|'('
name|'arg'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_rmdir
dedent|''
name|'def'
name|'_rmdir'
op|'('
name|'arg'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rmdir_calls'
op|'.'
name|'append'
op|'('
name|'arg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'orig_listdir'
op|'='
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'listdir'
newline|'\n'
name|'orig_isdir'
op|'='
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
newline|'\n'
name|'orig_exists'
op|'='
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
newline|'\n'
name|'orig_shuffle'
op|'='
name|'db_replicator'
op|'.'
name|'random'
op|'.'
name|'shuffle'
newline|'\n'
name|'orig_rmdir'
op|'='
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'rmdir'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'listdir'
op|'='
name|'_listdir'
newline|'\n'
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'='
name|'_isdir'
newline|'\n'
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'='
name|'_exists'
newline|'\n'
name|'db_replicator'
op|'.'
name|'random'
op|'.'
name|'shuffle'
op|'='
name|'_shuffle'
newline|'\n'
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'rmdir'
op|'='
name|'_rmdir'
newline|'\n'
nl|'\n'
name|'datadirs'
op|'='
op|'['
op|'('
string|"'/srv/node/sda/containers'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'/srv/node/sdb/containers'"
op|','
number|'2'
op|')'
op|']'
newline|'\n'
name|'results'
op|'='
name|'list'
op|'('
name|'db_replicator'
op|'.'
name|'roundrobin_datadirs'
op|'('
name|'datadirs'
op|')'
op|')'
newline|'\n'
comment|'# The results show that the .db files are returned, the devices'
nl|'\n'
comment|'# interleaved.'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'results'
op|','
op|'['
nl|'\n'
op|'('
string|"'123'"
op|','
string|"'/srv/node/sda/containers/123/abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc.db'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'123'"
op|','
string|"'/srv/node/sdb/containers/123/abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc.db'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'789'"
op|','
string|"'/srv/node/sda/containers/789/ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi.db'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'789'"
op|','
string|"'/srv/node/sdb/containers/789/ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi.db'"
op|','
number|'2'
op|')'
op|']'
op|')'
newline|'\n'
comment|'# The listdir calls show that we only listdir the dirs'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'listdir_calls'
op|','
op|'['
nl|'\n'
string|"'/srv/node/sda/containers'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/123'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/123/abc'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/123'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/123/abc'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/789'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/789/ghi'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/789'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/789/ghi'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/9999'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/9999'"
op|']'
op|')'
newline|'\n'
comment|'# The isdir calls show that we did ask about the things pretending'
nl|'\n'
comment|'# to be files at various levels.'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'isdir_calls'
op|','
op|'['
nl|'\n'
string|"'/srv/node/sda/containers/123'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/123/abc'"
op|','
nl|'\n'
op|'('
string|"'/srv/node/sda/containers/123/abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc'"
op|')'
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/123'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/123/abc'"
op|','
nl|'\n'
op|'('
string|"'/srv/node/sdb/containers/123/abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc'"
op|')'
op|','
nl|'\n'
op|'('
string|"'/srv/node/sda/containers/123/abc/'"
nl|'\n'
string|"'11111111111111111111111111111abc'"
op|')'
op|','
nl|'\n'
string|"'/srv/node/sda/containers/123/def.db'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/456'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/789'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/789/ghi'"
op|','
nl|'\n'
op|'('
string|"'/srv/node/sda/containers/789/ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi'"
op|')'
op|','
nl|'\n'
op|'('
string|"'/srv/node/sdb/containers/123/abc/'"
nl|'\n'
string|"'11111111111111111111111111111abc'"
op|')'
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/123/def.db'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/456'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/789'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/789/ghi'"
op|','
nl|'\n'
op|'('
string|"'/srv/node/sdb/containers/789/ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi'"
op|')'
op|','
nl|'\n'
op|'('
string|"'/srv/node/sda/containers/789/ghi/'"
nl|'\n'
string|"'33333333333333333333333333333ghi'"
op|')'
op|','
nl|'\n'
string|"'/srv/node/sda/containers/789/jkl'"
op|','
nl|'\n'
string|"'/srv/node/sda/containers/9999'"
op|','
nl|'\n'
op|'('
string|"'/srv/node/sdb/containers/789/ghi/'"
nl|'\n'
string|"'33333333333333333333333333333ghi'"
op|')'
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/789/jkl'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/9999'"
op|']'
op|')'
newline|'\n'
comment|'# The exists calls are the .db files we looked for as we walked the'
nl|'\n'
comment|'# structure.'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exists_calls'
op|','
op|'['
nl|'\n'
op|'('
string|"'/srv/node/sda/containers/123/abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc.db'"
op|')'
op|','
nl|'\n'
op|'('
string|"'/srv/node/sdb/containers/123/abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc/'"
nl|'\n'
string|"'00000000000000000000000000000abc.db'"
op|')'
op|','
nl|'\n'
op|'('
string|"'/srv/node/sda/containers/789/ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi.db'"
op|')'
op|','
nl|'\n'
op|'('
string|"'/srv/node/sdb/containers/789/ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi/'"
nl|'\n'
string|"'22222222222222222222222222222ghi.db'"
op|')'
op|']'
op|')'
newline|'\n'
comment|'# Shows that we called shuffle twice, once for each device.'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'shuffle_calls'
op|','
op|'['
op|'['
string|"'123'"
op|','
string|"'456'"
op|','
string|"'789'"
op|','
string|"'9999'"
op|']'
op|','
nl|'\n'
op|'['
string|"'123'"
op|','
string|"'456'"
op|','
string|"'789'"
op|','
string|"'9999'"
op|']'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Shows that we called removed the two empty partition directories.'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'rmdir_calls'
op|','
op|'['
string|"'/srv/node/sda/containers/9999'"
op|','
nl|'\n'
string|"'/srv/node/sdb/containers/9999'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'listdir'
op|'='
name|'orig_listdir'
newline|'\n'
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'='
name|'orig_isdir'
newline|'\n'
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'='
name|'orig_exists'
newline|'\n'
name|'db_replicator'
op|'.'
name|'random'
op|'.'
name|'shuffle'
op|'='
name|'orig_shuffle'
newline|'\n'
name|'db_replicator'
op|'.'
name|'os'
op|'.'
name|'rmdir'
op|'='
name|'orig_rmdir'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|'"swift.common.db_replicator.ReplConnection"'
op|','
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
op|')'
newline|'\n'
DECL|member|test_http_connect
name|'def'
name|'test_http_connect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'node'
op|'='
string|'"node"'
newline|'\n'
name|'partition'
op|'='
string|'"partition"'
newline|'\n'
name|'db_file'
op|'='
name|'__file__'
newline|'\n'
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'replicator'
op|'.'
name|'_http_connect'
op|'('
name|'node'
op|','
name|'partition'
op|','
name|'db_file'
op|')'
newline|'\n'
name|'db_replicator'
op|'.'
name|'ReplConnection'
op|'.'
name|'assert_has_calls'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'node'
op|','
name|'partition'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'db_file'
op|')'
op|'.'
name|'split'
op|'('
string|"'.'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'replicator'
op|'.'
name|'logger'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestReplToNode
dedent|''
dedent|''
name|'class'
name|'TestReplToNode'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_replicator'
op|'.'
name|'ring'
op|'='
name|'FakeRing'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'delete_db_calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'broker'
op|'='
name|'FakeBroker'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'='
name|'TestReplicator'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fake_node'
op|'='
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'device'"
op|':'
string|"'sda1'"
op|','
string|"'port'"
op|':'
number|'1000'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'fake_info'
op|'='
op|'{'
string|"'id'"
op|':'
string|"'a'"
op|','
string|"'point'"
op|':'
op|'-'
number|'1'
op|','
string|"'max_row'"
op|':'
number|'10'
op|','
string|"'hash'"
op|':'
string|"'b'"
op|','
nl|'\n'
string|"'created_at'"
op|':'
number|'100'
op|','
string|"'put_timestamp'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'delete_timestamp'"
op|':'
number|'0'
op|','
string|"'count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'metadata'"
op|':'
op|'{'
nl|'\n'
string|"'Test'"
op|':'
op|'('
string|"'Value'"
op|','
name|'normalize_timestamp'
op|'('
number|'1'
op|')'
op|')'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'logger'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_rsync_db'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_usync_db'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'http'
op|'='
name|'ReplHttp'
op|'('
string|'\'{"id": 3, "point": -1}\''
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_http_connect'
op|'='
name|'lambda'
op|'*'
name|'args'
op|':'
name|'self'
op|'.'
name|'http'
newline|'\n'
nl|'\n'
DECL|member|test_repl_to_node_usync_success
dedent|''
name|'def'
name|'test_repl_to_node_usync_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rinfo'
op|'='
op|'{'
string|'"id"'
op|':'
number|'3'
op|','
string|'"point"'
op|':'
op|'-'
number|'1'
op|','
string|'"max_row"'
op|':'
number|'5'
op|','
string|'"hash"'
op|':'
string|'"c"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'http'
op|'='
name|'ReplHttp'
op|'('
name|'simplejson'
op|'.'
name|'dumps'
op|'('
name|'rinfo'
op|')'
op|')'
newline|'\n'
name|'local_sync'
op|'='
name|'self'
op|'.'
name|'broker'
op|'.'
name|'get_sync'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_repl_to_node'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'fake_node'
op|','
name|'self'
op|'.'
name|'broker'
op|','
string|"'0'"
op|','
name|'self'
op|'.'
name|'fake_info'
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_usync_db'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'max'
op|'('
name|'rinfo'
op|'['
string|"'point'"
op|']'
op|','
name|'local_sync'
op|')'
op|','
name|'self'
op|'.'
name|'broker'
op|','
nl|'\n'
name|'self'
op|'.'
name|'http'
op|','
name|'rinfo'
op|'['
string|"'id'"
op|']'
op|','
name|'self'
op|'.'
name|'fake_info'
op|'['
string|"'id'"
op|']'
op|')'
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_repl_to_node_rsync_success
dedent|''
name|'def'
name|'test_repl_to_node_rsync_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rinfo'
op|'='
op|'{'
string|'"id"'
op|':'
number|'3'
op|','
string|'"point"'
op|':'
op|'-'
number|'1'
op|','
string|'"max_row"'
op|':'
number|'4'
op|','
string|'"hash"'
op|':'
string|'"c"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'http'
op|'='
name|'ReplHttp'
op|'('
name|'simplejson'
op|'.'
name|'dumps'
op|'('
name|'rinfo'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'broker'
op|'.'
name|'get_sync'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_repl_to_node'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'fake_node'
op|','
name|'self'
op|'.'
name|'broker'
op|','
string|"'0'"
op|','
name|'self'
op|'.'
name|'fake_info'
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'.'
name|'increment'
op|'('
string|"'remote_merges'"
op|')'
nl|'\n'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_rsync_db'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'broker'
op|','
name|'self'
op|'.'
name|'fake_node'
op|','
name|'self'
op|'.'
name|'http'
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_info'
op|'['
string|"'id'"
op|']'
op|','
nl|'\n'
name|'replicate_method'
op|'='
string|"'rsync_then_merge'"
op|','
nl|'\n'
name|'replicate_timeout'
op|'='
op|'('
name|'self'
op|'.'
name|'fake_info'
op|'['
string|"'count'"
op|']'
op|'/'
number|'2000'
op|')'
op|')'
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_repl_to_node_already_in_sync
dedent|''
name|'def'
name|'test_repl_to_node_already_in_sync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rinfo'
op|'='
op|'{'
string|'"id"'
op|':'
number|'3'
op|','
string|'"point"'
op|':'
op|'-'
number|'1'
op|','
string|'"max_row"'
op|':'
number|'10'
op|','
string|'"hash"'
op|':'
string|'"b"'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'http'
op|'='
name|'ReplHttp'
op|'('
name|'simplejson'
op|'.'
name|'dumps'
op|'('
name|'rinfo'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'broker'
op|'.'
name|'get_sync'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_repl_to_node'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'fake_node'
op|','
name|'self'
op|'.'
name|'broker'
op|','
string|"'0'"
op|','
name|'self'
op|'.'
name|'fake_info'
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_rsync_db'
op|'.'
name|'call_count'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_usync_db'
op|'.'
name|'call_count'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_repl_to_node_not_found
dedent|''
name|'def'
name|'test_repl_to_node_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'http'
op|'='
name|'ReplHttp'
op|'('
string|'\'{"id": 3, "point": -1}\''
op|','
name|'set_status'
op|'='
number|'404'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_repl_to_node'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'fake_node'
op|','
name|'self'
op|'.'
name|'broker'
op|','
string|"'0'"
op|','
name|'self'
op|'.'
name|'fake_info'
op|')'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'.'
name|'increment'
op|'('
string|"'rsyncs'"
op|')'
nl|'\n'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_rsync_db'
op|'.'
name|'assert_has_calls'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'broker'
op|','
name|'self'
op|'.'
name|'fake_node'
op|','
name|'self'
op|'.'
name|'http'
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_info'
op|'['
string|"'id'"
op|']'
op|')'
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_repl_to_node_drive_not_mounted
dedent|''
name|'def'
name|'test_repl_to_node_drive_not_mounted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'http'
op|'='
name|'ReplHttp'
op|'('
string|'\'{"id": 3, "point": -1}\''
op|','
name|'set_status'
op|'='
number|'507'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'DriveNotMounted'
op|','
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_repl_to_node'
op|','
nl|'\n'
name|'self'
op|'.'
name|'fake_node'
op|','
name|'FakeBroker'
op|'('
op|')'
op|','
string|"'0'"
op|','
name|'self'
op|'.'
name|'fake_info'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_repl_to_node_300_status
dedent|''
name|'def'
name|'test_repl_to_node_300_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'http'
op|'='
name|'ReplHttp'
op|'('
string|'\'{"id": 3, "point": -1}\''
op|','
name|'set_status'
op|'='
number|'300'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_repl_to_node'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'fake_node'
op|','
name|'FakeBroker'
op|'('
op|')'
op|','
string|"'0'"
op|','
name|'self'
op|'.'
name|'fake_info'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_repl_to_node_not_response
dedent|''
name|'def'
name|'test_repl_to_node_not_response'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'http'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'replicate'
op|'='
name|'mock'
op|'.'
name|'Mock'
op|'('
name|'return_value'
op|'='
name|'None'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'_repl_to_node'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'fake_node'
op|','
name|'FakeBroker'
op|'('
op|')'
op|','
string|"'0'"
op|','
name|'self'
op|'.'
name|'fake_info'
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeHTTPResponse
dedent|''
dedent|''
name|'class'
name|'FakeHTTPResponse'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'resp'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'resp'
op|'='
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|status
name|'def'
name|'status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'resp'
op|'.'
name|'status_int'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|data
name|'def'
name|'data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'resp'
op|'.'
name|'body'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|attach_fake_replication_rpc
dedent|''
dedent|''
name|'def'
name|'attach_fake_replication_rpc'
op|'('
name|'rpc'
op|','
name|'replicate_hook'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
DECL|class|FakeReplConnection
indent|'    '
name|'class'
name|'FakeReplConnection'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'        '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'partition'
op|','
name|'hash_'
op|','
name|'logger'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'='
name|'logger'
newline|'\n'
name|'self'
op|'.'
name|'node'
op|'='
name|'node'
newline|'\n'
name|'self'
op|'.'
name|'partition'
op|'='
name|'partition'
newline|'\n'
name|'self'
op|'.'
name|'path'
op|'='
string|"'/%s/%s/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'partition'
op|','
name|'hash_'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'='
name|'node'
op|'['
string|"'replication_ip'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|replicate
dedent|''
name|'def'
name|'replicate'
op|'('
name|'self'
op|','
name|'op'
op|','
op|'*'
name|'sync_args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'REPLICATE: %s, %s, %r'"
op|'%'
op|'('
name|'self'
op|'.'
name|'path'
op|','
name|'op'
op|','
name|'sync_args'
op|')'
newline|'\n'
name|'replicate_args'
op|'='
name|'self'
op|'.'
name|'path'
op|'.'
name|'lstrip'
op|'('
string|"'/'"
op|')'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'args'
op|'='
op|'['
name|'op'
op|']'
op|'+'
name|'list'
op|'('
name|'sync_args'
op|')'
newline|'\n'
name|'swob_response'
op|'='
name|'rpc'
op|'.'
name|'dispatch'
op|'('
name|'replicate_args'
op|','
name|'args'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'FakeHTTPResponse'
op|'('
name|'swob_response'
op|')'
newline|'\n'
name|'if'
name|'replicate_hook'
op|':'
newline|'\n'
indent|'                '
name|'replicate_hook'
op|'('
name|'op'
op|','
op|'*'
name|'sync_args'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'FakeReplConnection'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ExampleReplicator
dedent|''
name|'class'
name|'ExampleReplicator'
op|'('
name|'db_replicator'
op|'.'
name|'Replicator'
op|')'
op|':'
newline|'\n'
DECL|variable|server_type
indent|'    '
name|'server_type'
op|'='
string|"'fake'"
newline|'\n'
DECL|variable|brokerclass
name|'brokerclass'
op|'='
name|'ExampleBroker'
newline|'\n'
DECL|variable|datadir
name|'datadir'
op|'='
string|"'fake'"
newline|'\n'
DECL|variable|default_port
name|'default_port'
op|'='
number|'1000'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestReplicatorSync
dedent|''
name|'class'
name|'TestReplicatorSync'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# override in subclass'
nl|'\n'
DECL|variable|backend
indent|'    '
name|'backend'
op|'='
name|'ExampleReplicator'
op|'.'
name|'brokerclass'
newline|'\n'
DECL|variable|datadir
name|'datadir'
op|'='
name|'ExampleReplicator'
op|'.'
name|'datadir'
newline|'\n'
DECL|variable|replicator_daemon
name|'replicator_daemon'
op|'='
name|'ExampleReplicator'
newline|'\n'
DECL|variable|replicator_rpc
name|'replicator_rpc'
op|'='
name|'db_replicator'
op|'.'
name|'ReplicatorRpc'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'root'
op|'='
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rpc'
op|'='
name|'self'
op|'.'
name|'replicator_rpc'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'root'
op|','
name|'self'
op|'.'
name|'datadir'
op|','
name|'self'
op|'.'
name|'backend'
op|','
name|'False'
op|','
nl|'\n'
name|'logger'
op|'='
name|'unit'
op|'.'
name|'debug_logger'
op|'('
op|')'
op|')'
newline|'\n'
name|'FakeReplConnection'
op|'='
name|'attach_fake_replication_rpc'
op|'('
name|'self'
op|'.'
name|'rpc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_orig_ReplConnection'
op|'='
name|'db_replicator'
op|'.'
name|'ReplConnection'
newline|'\n'
name|'db_replicator'
op|'.'
name|'ReplConnection'
op|'='
name|'FakeReplConnection'
newline|'\n'
name|'self'
op|'.'
name|'_orig_Ring'
op|'='
name|'db_replicator'
op|'.'
name|'ring'
op|'.'
name|'Ring'
newline|'\n'
name|'self'
op|'.'
name|'_ring'
op|'='
name|'unit'
op|'.'
name|'FakeRing'
op|'('
op|')'
newline|'\n'
name|'db_replicator'
op|'.'
name|'ring'
op|'.'
name|'Ring'
op|'='
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'self'
op|'.'
name|'_get_ring'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'unit'
op|'.'
name|'debug_logger'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'db_replicator'
op|'.'
name|'ReplConnection'
op|'='
name|'self'
op|'.'
name|'_orig_ReplConnection'
newline|'\n'
name|'db_replicator'
op|'.'
name|'ring'
op|'.'
name|'Ring'
op|'='
name|'self'
op|'.'
name|'_orig_Ring'
newline|'\n'
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'root'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_ring
dedent|''
name|'def'
name|'_get_ring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_ring'
newline|'\n'
nl|'\n'
DECL|member|_get_broker
dedent|''
name|'def'
name|'_get_broker'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|'='
name|'None'
op|','
name|'node_index'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hash_'
op|'='
name|'hash_path'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'part'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'_ring'
op|'.'
name|'get_nodes'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'drive'
op|'='
name|'nodes'
op|'['
name|'node_index'
op|']'
op|'['
string|"'device'"
op|']'
newline|'\n'
name|'db_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'root'
op|','
name|'drive'
op|','
nl|'\n'
name|'storage_directory'
op|'('
name|'self'
op|'.'
name|'datadir'
op|','
name|'part'
op|','
name|'hash_'
op|')'
op|','
nl|'\n'
name|'hash_'
op|'+'
string|"'.db'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'backend'
op|'('
name|'db_path'
op|','
name|'account'
op|'='
name|'account'
op|','
name|'container'
op|'='
name|'container'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_get_broker_part_node
dedent|''
name|'def'
name|'_get_broker_part_node'
op|'('
name|'self'
op|','
name|'broker'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'part'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'_ring'
op|'.'
name|'get_nodes'
op|'('
name|'broker'
op|'.'
name|'account'
op|','
name|'broker'
op|'.'
name|'container'
op|')'
newline|'\n'
name|'storage_dir'
op|'='
name|'broker'
op|'.'
name|'db_file'
op|'['
name|'len'
op|'('
name|'self'
op|'.'
name|'root'
op|')'
op|':'
op|']'
op|'.'
name|'lstrip'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'sep'
op|')'
newline|'\n'
name|'broker_device'
op|'='
name|'storage_dir'
op|'.'
name|'split'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'sep'
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'node'
op|'['
string|"'device'"
op|']'
op|'=='
name|'broker_device'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'part'
op|','
name|'node'
newline|'\n'
nl|'\n'
DECL|member|_get_daemon
dedent|''
dedent|''
dedent|''
name|'def'
name|'_get_daemon'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'conf_updates'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
op|'{'
nl|'\n'
string|"'devices'"
op|':'
name|'self'
op|'.'
name|'root'
op|','
nl|'\n'
string|"'recon_cache_path'"
op|':'
name|'self'
op|'.'
name|'root'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'false'"
op|','
nl|'\n'
string|"'bind_port'"
op|':'
name|'node'
op|'['
string|"'replication_port'"
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'conf_updates'
op|':'
newline|'\n'
indent|'            '
name|'conf'
op|'.'
name|'update'
op|'('
name|'conf_updates'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'replicator_daemon'
op|'('
name|'conf'
op|','
name|'logger'
op|'='
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_run_once
dedent|''
name|'def'
name|'_run_once'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'conf_updates'
op|'='
name|'None'
op|','
name|'daemon'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'daemon'
op|'='
name|'daemon'
name|'or'
name|'self'
op|'.'
name|'_get_daemon'
op|'('
name|'node'
op|','
name|'conf_updates'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_rsync_file
name|'def'
name|'_rsync_file'
op|'('
name|'db_file'
op|','
name|'remote_file'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'remote_server'
op|','
name|'remote_path'
op|'='
name|'remote_file'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'1'
op|')'
newline|'\n'
name|'dest_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'root'
op|','
name|'remote_path'
op|')'
newline|'\n'
name|'copy'
op|'('
name|'db_file'
op|','
name|'dest_path'
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'daemon'
op|'.'
name|'_rsync_file'
op|'='
name|'_rsync_file'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.db_replicator.whataremyips'"
op|','
nl|'\n'
name|'new'
op|'='
name|'lambda'
op|':'
op|'['
name|'node'
op|'['
string|"'replication_ip'"
op|']'
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'daemon'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'daemon'
newline|'\n'
nl|'\n'
DECL|member|test_local_ids
dedent|''
name|'def'
name|'test_local_ids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'drive'
name|'in'
op|'('
string|"'sda'"
op|','
string|"'sdb'"
op|','
string|"'sdd'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'root'
op|','
name|'drive'
op|','
name|'self'
op|'.'
name|'datadir'
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'node'
name|'in'
name|'self'
op|'.'
name|'_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'daemon'
op|'='
name|'self'
op|'.'
name|'_run_once'
op|'('
name|'node'
op|')'
newline|'\n'
name|'if'
name|'node'
op|'['
string|"'device'"
op|']'
op|'=='
string|"'sdc'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'daemon'
op|'.'
name|'_local_device_ids'
op|','
name|'set'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'daemon'
op|'.'
name|'_local_device_ids'
op|','
nl|'\n'
name|'set'
op|'('
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_clean_up_after_deleted_brokers
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_clean_up_after_deleted_brokers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'self'
op|'.'
name|'_get_broker'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
name|'node_index'
op|'='
number|'0'
op|')'
newline|'\n'
name|'part'
op|','
name|'node'
op|'='
name|'self'
op|'.'
name|'_get_broker_part_node'
op|'('
name|'broker'
op|')'
newline|'\n'
name|'part'
op|'='
name|'str'
op|'('
name|'part'
op|')'
newline|'\n'
name|'daemon'
op|'='
name|'self'
op|'.'
name|'_run_once'
op|'('
name|'node'
op|')'
newline|'\n'
comment|'# create a super old broker and delete it!'
nl|'\n'
name|'forever_ago'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'daemon'
op|'.'
name|'reclaim_age'
newline|'\n'
name|'put_timestamp'
op|'='
name|'normalize_timestamp'
op|'('
name|'forever_ago'
op|'-'
number|'2'
op|')'
newline|'\n'
name|'delete_timestamp'
op|'='
name|'normalize_timestamp'
op|'('
name|'forever_ago'
op|'-'
number|'1'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'initialize'
op|'('
name|'put_timestamp'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'delete_db'
op|'('
name|'delete_timestamp'
op|')'
newline|'\n'
comment|"# if we have a container broker make sure it's reported"
nl|'\n'
name|'if'
name|'hasattr'
op|'('
name|'broker'
op|','
string|"'reported'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'info'
op|'='
name|'broker'
op|'.'
name|'get_info'
op|'('
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'reported'
op|'('
name|'info'
op|'['
string|"'put_timestamp'"
op|']'
op|','
nl|'\n'
name|'info'
op|'['
string|"'delete_timestamp'"
op|']'
op|','
nl|'\n'
name|'info'
op|'['
string|"'object_count'"
op|']'
op|','
nl|'\n'
name|'info'
op|'['
string|"'bytes_used'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'info'
op|'='
name|'broker'
op|'.'
name|'get_replication_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'daemon'
op|'.'
name|'report_up_to_date'
op|'('
name|'info'
op|')'
op|')'
newline|'\n'
comment|'# we have a part dir'
nl|'\n'
name|'part_root'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'root'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'self'
op|'.'
name|'datadir'
op|')'
newline|'\n'
name|'parts'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'part_root'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'part'
op|']'
op|','
name|'parts'
op|')'
newline|'\n'
comment|'# with a single suffix'
nl|'\n'
name|'suff'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'part_root'
op|','
name|'part'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'suff'
op|')'
op|')'
newline|'\n'
comment|'# running replicator will remove the deleted db'
nl|'\n'
name|'daemon'
op|'='
name|'self'
op|'.'
name|'_run_once'
op|'('
name|'node'
op|','
name|'daemon'
op|'='
name|'daemon'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'daemon'
op|'.'
name|'stats'
op|'['
string|"'remove'"
op|']'
op|')'
newline|'\n'
comment|"# we still have a part dir (but it's empty)"
nl|'\n'
name|'suff'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'part_root'
op|','
name|'part'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'suff'
op|')'
op|')'
newline|'\n'
comment|"# run it again and there's nothing to do..."
nl|'\n'
name|'daemon'
op|'='
name|'self'
op|'.'
name|'_run_once'
op|'('
name|'node'
op|','
name|'daemon'
op|'='
name|'daemon'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'daemon'
op|'.'
name|'stats'
op|'['
string|"'attempted'"
op|']'
op|')'
newline|'\n'
comment|'# but empty part dir is cleaned up!'
nl|'\n'
name|'parts'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'part_root'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'parts'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
