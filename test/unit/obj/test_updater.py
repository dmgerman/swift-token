begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'cPickle'
name|'as'
name|'pickle'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'itertools'
newline|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'closing'
newline|'\n'
name|'from'
name|'gzip'
name|'import'
name|'GzipFile'
newline|'\n'
name|'from'
name|'tempfile'
name|'import'
name|'mkdtemp'
newline|'\n'
name|'from'
name|'shutil'
name|'import'
name|'rmtree'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'FakeLogger'
newline|'\n'
name|'from'
name|'time'
name|'import'
name|'time'
newline|'\n'
name|'from'
name|'distutils'
op|'.'
name|'dir_util'
name|'import'
name|'mkpath'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'spawn'
op|','
name|'Timeout'
op|','
name|'listen'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'updater'
name|'as'
name|'object_updater'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
op|'.'
name|'diskfile'
name|'import'
op|'('
name|'ASYNCDIR_BASE'
op|','
name|'get_async_dir'
op|','
name|'DiskFileManager'
op|','
nl|'\n'
name|'get_tmp_dir'
op|')'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
name|'import'
name|'RingData'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'hash_path'
op|','
name|'normalize_timestamp'
op|','
name|'mkdirs'
op|','
name|'write_pickle'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'swob'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'debug_logger'
op|','
name|'patch_policies'
op|','
name|'mocked_http_conn'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'StoragePolicy'
op|','
name|'POLICIES'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|_mocked_policies
name|'_mocked_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'True'
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
op|'@'
name|'patch_policies'
op|'('
name|'_mocked_policies'
op|')'
newline|'\n'
DECL|class|TestObjectUpdater
name|'class'
name|'TestObjectUpdater'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'utils'
op|'.'
name|'HASH_PATH_SUFFIX'
op|'='
string|"'endcap'"
newline|'\n'
name|'utils'
op|'.'
name|'HASH_PATH_PREFIX'
op|'='
string|"''"
newline|'\n'
name|'self'
op|'.'
name|'testdir'
op|'='
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'ring_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'container.ring.gz'"
op|')'
newline|'\n'
name|'with'
name|'closing'
op|'('
name|'GzipFile'
op|'('
name|'ring_file'
op|','
string|"'wb'"
op|')'
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'pickle'
op|'.'
name|'dump'
op|'('
nl|'\n'
name|'RingData'
op|'('
op|'['
op|'['
number|'0'
op|','
number|'1'
op|','
number|'2'
op|','
number|'0'
op|','
number|'1'
op|','
number|'2'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'2'
op|','
number|'0'
op|','
number|'1'
op|','
number|'2'
op|','
number|'0'
op|']'
op|','
nl|'\n'
op|'['
number|'2'
op|','
number|'3'
op|','
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'1'
op|']'
op|']'
op|','
nl|'\n'
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'port'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device'"
op|':'
string|"'sda1'"
op|','
string|"'zone'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'port'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device'"
op|':'
string|"'sda1'"
op|','
string|"'zone'"
op|':'
number|'2'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'port'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'device'"
op|':'
string|"'sda1'"
op|','
string|"'zone'"
op|':'
number|'4'
op|'}'
op|']'
op|','
number|'30'
op|')'
op|','
nl|'\n'
name|'f'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'devices_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'devices'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'self'
op|'.'
name|'devices_dir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sda1'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices_dir'
op|','
string|"'sda1'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'self'
op|'.'
name|'sda1'
op|')'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sda1'
op|','
name|'get_tmp_dir'
op|'('
name|'int'
op|'('
name|'policy'
op|')'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'logger'
op|'='
name|'debug_logger'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
name|'ignore_errors'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_creation
dedent|''
name|'def'
name|'test_creation'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cu'
op|'='
name|'object_updater'
op|'.'
name|'ObjectUpdater'
op|'('
op|'{'
nl|'\n'
string|"'devices'"
op|':'
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'false'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
name|'self'
op|'.'
name|'testdir'
op|','
nl|'\n'
string|"'interval'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'concurrency'"
op|':'
string|"'2'"
op|','
nl|'\n'
string|"'node_timeout'"
op|':'
string|"'5'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'hasattr'
op|'('
name|'cu'
op|','
string|"'logger'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cu'
op|'.'
name|'logger'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'cu'
op|'.'
name|'devices'
op|','
name|'self'
op|'.'
name|'devices_dir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'cu'
op|'.'
name|'interval'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'cu'
op|'.'
name|'concurrency'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'cu'
op|'.'
name|'node_timeout'
op|','
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cu'
op|'.'
name|'get_container_ring'
op|'('
op|')'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.listdir'"
op|')'
newline|'\n'
DECL|member|test_listdir_with_exception
name|'def'
name|'test_listdir_with_exception'
op|'('
name|'self'
op|','
name|'mock_listdir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'e'
op|'='
name|'OSError'
op|'('
string|"'permission_denied'"
op|')'
newline|'\n'
name|'mock_listdir'
op|'.'
name|'side_effect'
op|'='
name|'e'
newline|'\n'
comment|'# setup updater'
nl|'\n'
name|'conf'
op|'='
op|'{'
nl|'\n'
string|"'devices'"
op|':'
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'false'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
name|'self'
op|'.'
name|'testdir'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'daemon'
op|'='
name|'object_updater'
op|'.'
name|'ObjectUpdater'
op|'('
name|'conf'
op|')'
newline|'\n'
name|'daemon'
op|'.'
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'paths'
op|'='
name|'daemon'
op|'.'
name|'_listdir'
op|'('
string|"'foo/bar'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'paths'
op|')'
newline|'\n'
name|'log_lines'
op|'='
name|'daemon'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'msg'
op|'='
op|'('
string|"'ERROR: Unable to access foo/bar: permission_denied'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'log_lines'
op|'['
number|'0'
op|']'
op|','
name|'msg'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'os.listdir'"
op|','
name|'return_value'
op|'='
op|'['
string|"'foo'"
op|','
string|"'bar'"
op|']'
op|')'
newline|'\n'
DECL|member|test_listdir_without_exception
name|'def'
name|'test_listdir_without_exception'
op|'('
name|'self'
op|','
name|'mock_listdir'
op|')'
op|':'
newline|'\n'
comment|'# setup updater'
nl|'\n'
indent|'        '
name|'conf'
op|'='
op|'{'
nl|'\n'
string|"'devices'"
op|':'
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'false'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
name|'self'
op|'.'
name|'testdir'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'daemon'
op|'='
name|'object_updater'
op|'.'
name|'ObjectUpdater'
op|'('
name|'conf'
op|')'
newline|'\n'
name|'daemon'
op|'.'
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'path'
op|'='
name|'daemon'
op|'.'
name|'_listdir'
op|'('
string|"'foo/bar/'"
op|')'
newline|'\n'
name|'log_lines'
op|'='
name|'daemon'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'log_lines'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'path'
op|','
op|'['
string|"'foo'"
op|','
string|"'bar'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_sweep
dedent|''
name|'def'
name|'test_object_sweep'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|check_with_idx
indent|'        '
name|'def'
name|'check_with_idx'
op|'('
name|'index'
op|','
name|'warn'
op|','
name|'should_skip'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'int'
op|'('
name|'index'
op|')'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'asyncdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sda1'
op|','
nl|'\n'
name|'ASYNCDIR_BASE'
op|'+'
string|'"-"'
op|'+'
name|'index'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'asyncdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sda1'
op|','
name|'ASYNCDIR_BASE'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'prefix_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'asyncdir'
op|','
string|"'abc'"
op|')'
newline|'\n'
name|'mkpath'
op|'('
name|'prefix_dir'
op|')'
newline|'\n'
nl|'\n'
comment|'# A non-directory where directory is expected should just be'
nl|'\n'
comment|'# skipped, but should not stop processing of subsequent'
nl|'\n'
comment|'# directories.'
nl|'\n'
name|'not_dirs'
op|'='
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sda1'
op|','
string|"'not_a_dir'"
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sda1'
op|','
nl|'\n'
name|'ASYNCDIR_BASE'
op|'+'
string|"'-'"
op|'+'
string|"'twentington'"
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sda1'
op|','
nl|'\n'
name|'ASYNCDIR_BASE'
op|'+'
string|"'-'"
op|'+'
name|'str'
op|'('
name|'int'
op|'('
name|'index'
op|')'
op|'+'
number|'100'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'not_dir'
name|'in'
name|'not_dirs'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'open'
op|'('
name|'not_dir'
op|','
string|"'w'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'objects'
op|'='
op|'{'
nl|'\n'
string|"'a'"
op|':'
op|'['
number|'1089.3'
op|','
number|'18.37'
op|','
number|'12.83'
op|','
number|'1.3'
op|']'
op|','
nl|'\n'
string|"'b'"
op|':'
op|'['
number|'49.4'
op|','
number|'49.3'
op|','
number|'49.2'
op|','
number|'49.1'
op|']'
op|','
nl|'\n'
string|"'c'"
op|':'
op|'['
number|'109984.123'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'expected'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'o'
op|','
name|'timestamps'
name|'in'
name|'objects'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'account'"
op|','
string|"'container'"
op|','
name|'o'
op|')'
newline|'\n'
name|'for'
name|'t'
name|'in'
name|'timestamps'
op|':'
newline|'\n'
indent|'                    '
name|'o_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'prefix_dir'
op|','
name|'ohash'
op|'+'
string|"'-'"
op|'+'
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'t'
op|')'
op|')'
newline|'\n'
name|'if'
name|'t'
op|'=='
name|'timestamps'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                        '
name|'expected'
op|'.'
name|'add'
op|'('
op|'('
name|'o_path'
op|','
name|'int'
op|'('
name|'index'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'write_pickle'
op|'('
op|'{'
op|'}'
op|','
name|'o_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'seen'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|MockObjectUpdater
name|'class'
name|'MockObjectUpdater'
op|'('
name|'object_updater'
op|'.'
name|'ObjectUpdater'
op|')'
op|':'
newline|'\n'
DECL|member|process_object_update
indent|'                '
name|'def'
name|'process_object_update'
op|'('
name|'self'
op|','
name|'update_path'
op|','
name|'device'
op|','
name|'idx'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'seen'
op|'.'
name|'add'
op|'('
op|'('
name|'update_path'
op|','
name|'idx'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'unlink'
op|'('
name|'update_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'cu'
op|'='
name|'MockObjectUpdater'
op|'('
op|'{'
nl|'\n'
string|"'devices'"
op|':'
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'false'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
name|'self'
op|'.'
name|'testdir'
op|','
nl|'\n'
string|"'interval'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'concurrency'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'node_timeout'"
op|':'
string|"'5'"
op|'}'
op|')'
newline|'\n'
name|'cu'
op|'.'
name|'logger'
op|'='
name|'mock_logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'cu'
op|'.'
name|'object_sweep'
op|'('
name|'self'
op|'.'
name|'sda1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_logger'
op|'.'
name|'warn'
op|'.'
name|'call_count'
op|','
name|'warn'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sda1'
op|','
string|"'not_a_dir'"
op|')'
op|')'
op|')'
newline|'\n'
name|'if'
name|'should_skip'
op|':'
newline|'\n'
comment|"# if we were supposed to skip over the dir, we didn't process"
nl|'\n'
comment|'# anything at all'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'prefix_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|')'
op|','
name|'seen'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'prefix_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'seen'
op|')'
newline|'\n'
nl|'\n'
comment|'# test cleanup: the tempdir gets cleaned up between runs, but this'
nl|'\n'
comment|'# way we can be called multiple times in a single test method'
nl|'\n'
dedent|''
name|'for'
name|'not_dir'
name|'in'
name|'not_dirs'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'not_dir'
op|')'
newline|'\n'
nl|'\n'
comment|'# first check with valid policies'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'pol'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'check_with_idx'
op|'('
name|'str'
op|'('
name|'pol'
op|'.'
name|'idx'
op|')'
op|','
number|'0'
op|','
name|'should_skip'
op|'='
name|'False'
op|')'
newline|'\n'
comment|'# now check with a bogus async dir policy and make sure we get'
nl|'\n'
comment|"# a warning indicating that the '99' policy isn't valid"
nl|'\n'
dedent|''
name|'check_with_idx'
op|'('
string|"'99'"
op|','
number|'1'
op|','
name|'should_skip'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'object_updater'
op|','
string|"'ismount'"
op|')'
newline|'\n'
DECL|member|test_run_once_with_disk_unmounted
name|'def'
name|'test_run_once_with_disk_unmounted'
op|'('
name|'self'
op|','
name|'mock_ismount'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_ismount'
op|'.'
name|'return_value'
op|'='
name|'False'
newline|'\n'
name|'cu'
op|'='
name|'object_updater'
op|'.'
name|'ObjectUpdater'
op|'('
op|'{'
nl|'\n'
string|"'devices'"
op|':'
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'false'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
name|'self'
op|'.'
name|'testdir'
op|','
nl|'\n'
string|"'interval'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'concurrency'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'node_timeout'"
op|':'
string|"'15'"
op|'}'
op|')'
newline|'\n'
name|'cu'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
name|'async_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sda1'
op|','
name|'get_async_dir'
op|'('
number|'0'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'async_dir'
op|')'
newline|'\n'
name|'cu'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'async_dir'
op|')'
op|')'
newline|'\n'
comment|'# mount_check == False means no call to ismount'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'mock_ismount'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
name|'cu'
op|'='
name|'object_updater'
op|'.'
name|'ObjectUpdater'
op|'('
op|'{'
nl|'\n'
string|"'devices'"
op|':'
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'TrUe'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
name|'self'
op|'.'
name|'testdir'
op|','
nl|'\n'
string|"'interval'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'concurrency'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'node_timeout'"
op|':'
string|"'15'"
op|'}'
op|','
name|'logger'
op|'='
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
name|'odd_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'async_dir'
op|','
string|"'not really supposed '"
nl|'\n'
string|"'to be here'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'odd_dir'
op|')'
newline|'\n'
name|'cu'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'async_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'odd_dir'
op|')'
op|')'
comment|'# skipped - not mounted!'
newline|'\n'
comment|'# mount_check == True means ismount was checked'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'sda1'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'mock_ismount'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cu'
op|'.'
name|'logger'
op|'.'
name|'get_increment_counts'
op|'('
op|')'
op|','
op|'{'
string|"'errors'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'object_updater'
op|','
string|"'ismount'"
op|')'
newline|'\n'
DECL|member|test_run_once
name|'def'
name|'test_run_once'
op|'('
name|'self'
op|','
name|'mock_ismount'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_ismount'
op|'.'
name|'return_value'
op|'='
name|'True'
newline|'\n'
name|'cu'
op|'='
name|'object_updater'
op|'.'
name|'ObjectUpdater'
op|'('
op|'{'
nl|'\n'
string|"'devices'"
op|':'
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'false'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
name|'self'
op|'.'
name|'testdir'
op|','
nl|'\n'
string|"'interval'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'concurrency'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'node_timeout'"
op|':'
string|"'15'"
op|'}'
op|','
name|'logger'
op|'='
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
name|'cu'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
name|'async_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sda1'
op|','
name|'get_async_dir'
op|'('
number|'0'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'async_dir'
op|')'
newline|'\n'
name|'cu'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'async_dir'
op|')'
op|')'
newline|'\n'
comment|'# mount_check == False means no call to ismount'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'mock_ismount'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
name|'cu'
op|'='
name|'object_updater'
op|'.'
name|'ObjectUpdater'
op|'('
op|'{'
nl|'\n'
string|"'devices'"
op|':'
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'TrUe'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
name|'self'
op|'.'
name|'testdir'
op|','
nl|'\n'
string|"'interval'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'concurrency'"
op|':'
string|"'1'"
op|','
nl|'\n'
string|"'node_timeout'"
op|':'
string|"'15'"
op|'}'
op|','
name|'logger'
op|'='
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
name|'odd_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'async_dir'
op|','
string|"'not really supposed '"
nl|'\n'
string|"'to be here'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'odd_dir'
op|')'
newline|'\n'
name|'cu'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'async_dir'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'odd_dir'
op|')'
op|')'
newline|'\n'
comment|'# mount_check == True means ismount was checked'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'sda1'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'mock_ismount'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'odir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'async_dir'
op|','
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'odir'
op|')'
newline|'\n'
name|'older_op_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
nl|'\n'
name|'odir'
op|','
nl|'\n'
string|"'%s-%s'"
op|'%'
op|'('
name|'ohash'
op|','
name|'normalize_timestamp'
op|'('
name|'time'
op|'('
op|')'
op|'-'
number|'1'
op|')'
op|')'
op|')'
newline|'\n'
name|'op_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
nl|'\n'
name|'odir'
op|','
nl|'\n'
string|"'%s-%s'"
op|'%'
op|'('
name|'ohash'
op|','
name|'normalize_timestamp'
op|'('
name|'time'
op|'('
op|')'
op|')'
op|')'
op|')'
newline|'\n'
name|'for'
name|'path'
name|'in'
op|'('
name|'op_path'
op|','
name|'older_op_path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'open'
op|'('
name|'path'
op|','
string|"'wb'"
op|')'
name|'as'
name|'async_pending'
op|':'
newline|'\n'
indent|'                '
name|'pickle'
op|'.'
name|'dump'
op|'('
op|'{'
string|"'op'"
op|':'
string|"'PUT'"
op|','
string|"'account'"
op|':'
string|"'a'"
op|','
nl|'\n'
string|"'container'"
op|':'
string|"'c'"
op|','
nl|'\n'
string|"'obj'"
op|':'
string|"'o'"
op|','
string|"'headers'"
op|':'
op|'{'
nl|'\n'
string|"'X-Container-Timestamp'"
op|':'
nl|'\n'
name|'normalize_timestamp'
op|'('
number|'0'
op|')'
op|'}'
op|'}'
op|','
nl|'\n'
name|'async_pending'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'cu'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'older_op_path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'op_path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cu'
op|'.'
name|'logger'
op|'.'
name|'get_increment_counts'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'failures'"
op|':'
number|'1'
op|','
string|"'unlinks'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
nl|'\n'
name|'pickle'
op|'.'
name|'load'
op|'('
name|'open'
op|'('
name|'op_path'
op|')'
op|')'
op|'.'
name|'get'
op|'('
string|"'successes'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'bindsock'
op|'='
name|'listen'
op|'('
op|'('
string|"'127.0.0.1'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|accepter
name|'def'
name|'accepter'
op|'('
name|'sock'
op|','
name|'return_code'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'Timeout'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'inc'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
string|"'rb'"
op|')'
newline|'\n'
name|'out'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
string|"'wb'"
op|')'
newline|'\n'
name|'out'
op|'.'
name|'write'
op|'('
string|"'HTTP/1.1 %d OK\\r\\nContent-Length: 0\\r\\n\\r\\n'"
op|'%'
nl|'\n'
name|'return_code'
op|')'
newline|'\n'
name|'out'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'inc'
op|'.'
name|'readline'
op|'('
op|')'
op|','
nl|'\n'
string|"'PUT /sda1/0/a/c/o HTTP/1.1\\r\\n'"
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
name|'line'
op|'='
name|'inc'
op|'.'
name|'readline'
op|'('
op|')'
newline|'\n'
name|'while'
name|'line'
name|'and'
name|'line'
op|'!='
string|"'\\r\\n'"
op|':'
newline|'\n'
indent|'                        '
name|'headers'
op|'['
name|'line'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
op|'['
number|'0'
op|']'
op|']'
op|'='
name|'line'
op|'.'
name|'split'
op|'('
string|"':'"
op|')'
op|'['
number|'1'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
name|'line'
op|'='
name|'inc'
op|'.'
name|'readline'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'x-container-timestamp'"
name|'in'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
name|'in'
nl|'\n'
name|'headers'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'BaseException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'err'
newline|'\n'
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|function|accept
dedent|''
name|'def'
name|'accept'
op|'('
name|'return_codes'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'codes'
op|'='
name|'iter'
op|'('
name|'return_codes'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'events'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
name|'len'
op|'('
name|'return_codes'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'Timeout'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'sock'
op|','
name|'addr'
op|'='
name|'bindsock'
op|'.'
name|'accept'
op|'('
op|')'
newline|'\n'
name|'events'
op|'.'
name|'append'
op|'('
nl|'\n'
name|'spawn'
op|'('
name|'accepter'
op|','
name|'sock'
op|','
name|'codes'
op|'.'
name|'next'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'event'
name|'in'
name|'events'
op|':'
newline|'\n'
indent|'                    '
name|'err'
op|'='
name|'event'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'if'
name|'err'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
name|'err'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
name|'BaseException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'err'
newline|'\n'
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'event'
op|'='
name|'spawn'
op|'('
name|'accept'
op|','
op|'['
number|'201'
op|','
number|'500'
op|','
number|'500'
op|']'
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'cu'
op|'.'
name|'get_container_ring'
op|'('
op|')'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'dev'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
name|'bindsock'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'cu'
op|'.'
name|'logger'
op|'.'
name|'_clear'
op|'('
op|')'
newline|'\n'
name|'cu'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
name|'err'
op|'='
name|'event'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'if'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'op_path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cu'
op|'.'
name|'logger'
op|'.'
name|'get_increment_counts'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'failures'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'pickle'
op|'.'
name|'load'
op|'('
name|'open'
op|'('
name|'op_path'
op|')'
op|')'
op|'.'
name|'get'
op|'('
string|"'successes'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'event'
op|'='
name|'spawn'
op|'('
name|'accept'
op|','
op|'['
number|'404'
op|','
number|'500'
op|']'
op|')'
newline|'\n'
name|'cu'
op|'.'
name|'logger'
op|'.'
name|'_clear'
op|'('
op|')'
newline|'\n'
name|'cu'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
name|'err'
op|'='
name|'event'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'if'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'op_path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cu'
op|'.'
name|'logger'
op|'.'
name|'get_increment_counts'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'failures'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'0'
op|','
number|'1'
op|']'
op|','
nl|'\n'
name|'pickle'
op|'.'
name|'load'
op|'('
name|'open'
op|'('
name|'op_path'
op|')'
op|')'
op|'.'
name|'get'
op|'('
string|"'successes'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'event'
op|'='
name|'spawn'
op|'('
name|'accept'
op|','
op|'['
number|'201'
op|']'
op|')'
newline|'\n'
name|'cu'
op|'.'
name|'logger'
op|'.'
name|'_clear'
op|'('
op|')'
newline|'\n'
name|'cu'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
name|'err'
op|'='
name|'event'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'if'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'err'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'op_path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'cu'
op|'.'
name|'logger'
op|'.'
name|'get_increment_counts'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'unlinks'"
op|':'
number|'1'
op|','
string|"'successes'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_obj_put_legacy_updates
dedent|''
name|'def'
name|'test_obj_put_legacy_updates'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ts'
op|'='
op|'('
name|'normalize_timestamp'
op|'('
name|'t'
op|')'
name|'for'
name|'t'
name|'in'
nl|'\n'
name|'itertools'
op|'.'
name|'count'
op|'('
name|'int'
op|'('
name|'time'
op|'('
op|')'
op|')'
op|')'
op|')'
newline|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'get_by_index'
op|'('
number|'0'
op|')'
newline|'\n'
comment|'# setup updater'
nl|'\n'
name|'conf'
op|'='
op|'{'
nl|'\n'
string|"'devices'"
op|':'
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'false'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
name|'self'
op|'.'
name|'testdir'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'async_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sda1'
op|','
name|'get_async_dir'
op|'('
name|'policy'
op|'.'
name|'idx'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'async_dir'
op|')'
newline|'\n'
nl|'\n'
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|'='
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
newline|'\n'
comment|'# write an async'
nl|'\n'
name|'for'
name|'op'
name|'in'
op|'('
string|"'PUT'"
op|','
string|"'DELETE'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'_clear'
op|'('
op|')'
newline|'\n'
name|'daemon'
op|'='
name|'object_updater'
op|'.'
name|'ObjectUpdater'
op|'('
name|'conf'
op|','
name|'logger'
op|'='
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
name|'dfmanager'
op|'='
name|'DiskFileManager'
op|'('
name|'conf'
op|','
name|'daemon'
op|'.'
name|'logger'
op|')'
newline|'\n'
comment|"# don't include storage-policy-index in headers_out pickle"
nl|'\n'
name|'headers_out'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
op|'{'
nl|'\n'
string|"'x-size'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'x-content-type'"
op|':'
string|"'text/plain'"
op|','
nl|'\n'
string|"'x-etag'"
op|':'
string|"'d41d8cd98f00b204e9800998ecf8427e'"
op|','
nl|'\n'
string|"'x-timestamp'"
op|':'
name|'ts'
op|'.'
name|'next'
op|'('
op|')'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'data'
op|'='
op|'{'
string|"'op'"
op|':'
name|'op'
op|','
string|"'account'"
op|':'
name|'account'
op|','
string|"'container'"
op|':'
name|'container'
op|','
nl|'\n'
string|"'obj'"
op|':'
name|'obj'
op|','
string|"'headers'"
op|':'
name|'headers_out'
op|'}'
newline|'\n'
name|'dfmanager'
op|'.'
name|'pickle_async_update'
op|'('
name|'self'
op|'.'
name|'sda1'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'data'
op|','
name|'ts'
op|'.'
name|'next'
op|'('
op|')'
op|','
name|'policy'
op|'.'
name|'idx'
op|')'
newline|'\n'
nl|'\n'
name|'request_log'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|capture
name|'def'
name|'capture'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'request_log'
op|'.'
name|'append'
op|'('
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# run once'
nl|'\n'
dedent|''
name|'fake_status_codes'
op|'='
op|'['
number|'200'
op|','
number|'200'
op|','
number|'200'
op|']'
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
op|'*'
name|'fake_status_codes'
op|','
name|'give_connect'
op|'='
name|'capture'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'daemon'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'fake_status_codes'
op|')'
op|','
name|'len'
op|'('
name|'request_log'
op|')'
op|')'
newline|'\n'
name|'for'
name|'request_args'
op|','
name|'request_kwargs'
name|'in'
name|'request_log'
op|':'
newline|'\n'
indent|'                '
name|'ip'
op|','
name|'part'
op|','
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|','
name|'qs'
op|','
name|'ssl'
op|'='
name|'request_args'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method'
op|','
name|'op'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|','
nl|'\n'
name|'str'
op|'('
name|'policy'
op|'.'
name|'idx'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'daemon'
op|'.'
name|'logger'
op|'.'
name|'get_increment_counts'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'successes'"
op|':'
number|'1'
op|','
string|"'unlinks'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'async_pendings'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_obj_put_async_updates
dedent|''
dedent|''
name|'def'
name|'test_obj_put_async_updates'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ts'
op|'='
op|'('
name|'normalize_timestamp'
op|'('
name|'t'
op|')'
name|'for'
name|'t'
name|'in'
nl|'\n'
name|'itertools'
op|'.'
name|'count'
op|'('
name|'int'
op|'('
name|'time'
op|'('
op|')'
op|')'
op|')'
op|')'
newline|'\n'
name|'policy'
op|'='
name|'random'
op|'.'
name|'choice'
op|'('
name|'list'
op|'('
name|'POLICIES'
op|')'
op|')'
newline|'\n'
comment|'# setup updater'
nl|'\n'
name|'conf'
op|'='
op|'{'
nl|'\n'
string|"'devices'"
op|':'
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'false'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
name|'self'
op|'.'
name|'testdir'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'daemon'
op|'='
name|'object_updater'
op|'.'
name|'ObjectUpdater'
op|'('
name|'conf'
op|','
name|'logger'
op|'='
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
name|'async_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'sda1'
op|','
name|'get_async_dir'
op|'('
name|'policy'
op|'.'
name|'idx'
op|')'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'async_dir'
op|')'
newline|'\n'
nl|'\n'
comment|'# write an async'
nl|'\n'
name|'dfmanager'
op|'='
name|'DiskFileManager'
op|'('
name|'conf'
op|','
name|'daemon'
op|'.'
name|'logger'
op|')'
newline|'\n'
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|'='
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
newline|'\n'
name|'op'
op|'='
string|"'PUT'"
newline|'\n'
name|'headers_out'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
op|'{'
nl|'\n'
string|"'x-size'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'x-content-type'"
op|':'
string|"'text/plain'"
op|','
nl|'\n'
string|"'x-etag'"
op|':'
string|"'d41d8cd98f00b204e9800998ecf8427e'"
op|','
nl|'\n'
string|"'x-timestamp'"
op|':'
name|'ts'
op|'.'
name|'next'
op|'('
op|')'
op|','
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'policy'
op|'.'
name|'idx'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'data'
op|'='
op|'{'
string|"'op'"
op|':'
name|'op'
op|','
string|"'account'"
op|':'
name|'account'
op|','
string|"'container'"
op|':'
name|'container'
op|','
nl|'\n'
string|"'obj'"
op|':'
name|'obj'
op|','
string|"'headers'"
op|':'
name|'headers_out'
op|'}'
newline|'\n'
name|'dfmanager'
op|'.'
name|'pickle_async_update'
op|'('
name|'self'
op|'.'
name|'sda1'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'data'
op|','
name|'ts'
op|'.'
name|'next'
op|'('
op|')'
op|','
name|'policy'
op|'.'
name|'idx'
op|')'
newline|'\n'
nl|'\n'
name|'request_log'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|capture
name|'def'
name|'capture'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'request_log'
op|'.'
name|'append'
op|'('
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# run once'
nl|'\n'
dedent|''
name|'fake_status_codes'
op|'='
op|'['
nl|'\n'
number|'200'
op|','
comment|'# object update success'
nl|'\n'
number|'200'
op|','
comment|'# object update success'
nl|'\n'
number|'200'
op|','
comment|'# object update conflict'
nl|'\n'
op|']'
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
op|'*'
name|'fake_status_codes'
op|','
name|'give_connect'
op|'='
name|'capture'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'daemon'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'fake_status_codes'
op|')'
op|','
name|'len'
op|'('
name|'request_log'
op|')'
op|')'
newline|'\n'
name|'for'
name|'request_args'
op|','
name|'request_kwargs'
name|'in'
name|'request_log'
op|':'
newline|'\n'
indent|'            '
name|'ip'
op|','
name|'part'
op|','
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|','
name|'qs'
op|','
name|'ssl'
op|'='
name|'request_args'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method'
op|','
string|"'PUT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|','
nl|'\n'
name|'str'
op|'('
name|'policy'
op|'.'
name|'idx'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'daemon'
op|'.'
name|'logger'
op|'.'
name|'get_increment_counts'
op|'('
op|')'
op|','
nl|'\n'
op|'{'
string|"'successes'"
op|':'
number|'1'
op|','
string|"'unlinks'"
op|':'
number|'1'
op|','
string|"'async_pendings'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
