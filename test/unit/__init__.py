begin_unit
string|'""" Swift tests """'
newline|'\n'
nl|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'copy'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'from'
name|'sys'
name|'import'
name|'exc_info'
newline|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'contextmanager'
newline|'\n'
name|'from'
name|'collections'
name|'import'
name|'defaultdict'
newline|'\n'
name|'from'
name|'tempfile'
name|'import'
name|'NamedTemporaryFile'
newline|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'green'
name|'import'
name|'socket'
newline|'\n'
name|'from'
name|'tempfile'
name|'import'
name|'mkdtemp'
newline|'\n'
name|'from'
name|'shutil'
name|'import'
name|'rmtree'
newline|'\n'
name|'from'
name|'test'
name|'import'
name|'get_config'
newline|'\n'
name|'from'
name|'ConfigParser'
name|'import'
name|'MissingSectionHeaderError'
newline|'\n'
name|'from'
name|'StringIO'
name|'import'
name|'StringIO'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'readconf'
op|','
name|'TRUE_VALUES'
newline|'\n'
name|'from'
name|'logging'
name|'import'
name|'Handler'
newline|'\n'
name|'import'
name|'logging'
op|'.'
name|'handlers'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|readuntil2crlfs
name|'def'
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rv'
op|'='
string|"''"
newline|'\n'
name|'lc'
op|'='
string|"''"
newline|'\n'
name|'crlfs'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'crlfs'
op|'<'
number|'2'
op|':'
newline|'\n'
indent|'        '
name|'c'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
number|'1'
op|')'
newline|'\n'
name|'rv'
op|'='
name|'rv'
op|'+'
name|'c'
newline|'\n'
name|'if'
name|'c'
op|'=='
string|"'\\r'"
name|'and'
name|'lc'
op|'!='
string|"'\\n'"
op|':'
newline|'\n'
indent|'            '
name|'crlfs'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'if'
name|'lc'
op|'=='
string|"'\\r'"
name|'and'
name|'c'
op|'=='
string|"'\\n'"
op|':'
newline|'\n'
indent|'            '
name|'crlfs'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'lc'
op|'='
name|'c'
newline|'\n'
dedent|''
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|connect_tcp
dedent|''
name|'def'
name|'connect_tcp'
op|'('
name|'hostport'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'rv'
op|'='
name|'socket'
op|'.'
name|'socket'
op|'('
op|')'
newline|'\n'
name|'rv'
op|'.'
name|'connect'
op|'('
name|'hostport'
op|')'
newline|'\n'
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|function|tmpfile
name|'def'
name|'tmpfile'
op|'('
name|'content'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'with'
name|'NamedTemporaryFile'
op|'('
string|"'w'"
op|','
name|'delete'
op|'='
name|'False'
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'        '
name|'file_name'
op|'='
name|'f'
op|'.'
name|'name'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
name|'str'
op|'('
name|'content'
op|')'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'file_name'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'        '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'file_name'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|xattr_data
dedent|''
dedent|''
name|'xattr_data'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_get_inode
name|'def'
name|'_get_inode'
op|'('
name|'fd'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'fd'
op|','
name|'int'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'fd'
op|'='
name|'fd'
op|'.'
name|'fileno'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'os'
op|'.'
name|'stat'
op|'('
name|'fd'
op|')'
op|'.'
name|'st_ino'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'os'
op|'.'
name|'fstat'
op|'('
name|'fd'
op|')'
op|'.'
name|'st_ino'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_setxattr
dedent|''
name|'def'
name|'_setxattr'
op|'('
name|'fd'
op|','
name|'k'
op|','
name|'v'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'inode'
op|'='
name|'_get_inode'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'data'
op|'='
name|'xattr_data'
op|'.'
name|'get'
op|'('
name|'inode'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'data'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
name|'xattr_data'
op|'['
name|'inode'
op|']'
op|'='
name|'data'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_getxattr
dedent|''
name|'def'
name|'_getxattr'
op|'('
name|'fd'
op|','
name|'k'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'inode'
op|'='
name|'_get_inode'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'data'
op|'='
name|'xattr_data'
op|'.'
name|'get'
op|'('
name|'inode'
op|','
op|'{'
op|'}'
op|')'
op|'.'
name|'get'
op|'('
name|'k'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'data'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'IOError'
newline|'\n'
dedent|''
name|'return'
name|'data'
newline|'\n'
nl|'\n'
dedent|''
name|'import'
name|'xattr'
newline|'\n'
name|'xattr'
op|'.'
name|'setxattr'
op|'='
name|'_setxattr'
newline|'\n'
name|'xattr'
op|'.'
name|'getxattr'
op|'='
name|'_getxattr'
newline|'\n'
nl|'\n'
nl|'\n'
op|'@'
name|'contextmanager'
newline|'\n'
DECL|function|temptree
name|'def'
name|'temptree'
op|'('
name|'files'
op|','
name|'contents'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
comment|'# generate enough contents to fill the files'
nl|'\n'
indent|'    '
name|'c'
op|'='
name|'len'
op|'('
name|'files'
op|')'
newline|'\n'
name|'contents'
op|'='
op|'('
name|'list'
op|'('
name|'contents'
op|')'
op|'+'
op|'['
string|"''"
op|']'
op|'*'
name|'c'
op|')'
op|'['
op|':'
name|'c'
op|']'
newline|'\n'
name|'tempdir'
op|'='
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'for'
name|'path'
op|','
name|'content'
name|'in'
name|'zip'
op|'('
name|'files'
op|','
name|'contents'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isabs'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
string|"'.'"
op|'+'
name|'path'
newline|'\n'
dedent|''
name|'new_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
name|'path'
op|')'
newline|'\n'
name|'subdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'new_path'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'subdir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'subdir'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'open'
op|'('
name|'new_path'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
name|'str'
op|'('
name|'content'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'tempdir'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'        '
name|'rmtree'
op|'('
name|'tempdir'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|NullLoggingHandler
dedent|''
dedent|''
name|'class'
name|'NullLoggingHandler'
op|'('
name|'logging'
op|'.'
name|'Handler'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|emit
indent|'    '
name|'def'
name|'emit'
op|'('
name|'self'
op|','
name|'record'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeLogger
dedent|''
dedent|''
name|'class'
name|'FakeLogger'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
comment|'# a thread safe logger'
nl|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_clear'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'level'
op|'='
name|'logging'
op|'.'
name|'NOTSET'
newline|'\n'
name|'if'
string|"'facility'"
name|'in'
name|'kwargs'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'facility'
op|'='
name|'kwargs'
op|'['
string|"'facility'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|_clear
dedent|''
dedent|''
name|'def'
name|'_clear'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'log_dict'
op|'='
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_store_in
dedent|''
name|'def'
name|'_store_in'
op|'('
name|'store_name'
op|')'
op|':'
newline|'\n'
DECL|function|stub_fn
indent|'        '
name|'def'
name|'stub_fn'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'log_dict'
op|'['
name|'store_name'
op|']'
op|'.'
name|'append'
op|'('
op|'('
name|'args'
op|','
name|'kwargs'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'stub_fn'
newline|'\n'
nl|'\n'
DECL|variable|error
dedent|''
name|'error'
op|'='
name|'_store_in'
op|'('
string|"'error'"
op|')'
newline|'\n'
DECL|variable|info
name|'info'
op|'='
name|'_store_in'
op|'('
string|"'info'"
op|')'
newline|'\n'
DECL|variable|warning
name|'warning'
op|'='
name|'_store_in'
op|'('
string|"'warning'"
op|')'
newline|'\n'
DECL|variable|debug
name|'debug'
op|'='
name|'_store_in'
op|'('
string|"'debug'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|exception
name|'def'
name|'exception'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'log_dict'
op|'['
string|"'exception'"
op|']'
op|'.'
name|'append'
op|'('
op|'('
name|'args'
op|','
name|'kwargs'
op|','
name|'str'
op|'('
name|'exc_info'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# mock out the StatsD logging methods:'
nl|'\n'
DECL|variable|increment
dedent|''
name|'increment'
op|'='
name|'_store_in'
op|'('
string|"'increment'"
op|')'
newline|'\n'
DECL|variable|decrement
name|'decrement'
op|'='
name|'_store_in'
op|'('
string|"'decrement'"
op|')'
newline|'\n'
DECL|variable|timing
name|'timing'
op|'='
name|'_store_in'
op|'('
string|"'timing'"
op|')'
newline|'\n'
DECL|variable|timing_since
name|'timing_since'
op|'='
name|'_store_in'
op|'('
string|"'timing_since'"
op|')'
newline|'\n'
DECL|variable|update_stats
name|'update_stats'
op|'='
name|'_store_in'
op|'('
string|"'update_stats'"
op|')'
newline|'\n'
DECL|variable|set_statsd_prefix
name|'set_statsd_prefix'
op|'='
name|'_store_in'
op|'('
string|"'set_statsd_prefix'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_increments
name|'def'
name|'get_increments'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
op|'['
name|'call'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
name|'for'
name|'call'
name|'in'
name|'self'
op|'.'
name|'log_dict'
op|'['
string|"'increment'"
op|']'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_increment_counts
dedent|''
name|'def'
name|'get_increment_counts'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'counts'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'metric'
name|'in'
name|'self'
op|'.'
name|'get_increments'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'metric'
name|'not'
name|'in'
name|'counts'
op|':'
newline|'\n'
indent|'                '
name|'counts'
op|'['
name|'metric'
op|']'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'counts'
op|'['
name|'metric'
op|']'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'return'
name|'counts'
newline|'\n'
nl|'\n'
DECL|member|setFormatter
dedent|''
name|'def'
name|'setFormatter'
op|'('
name|'self'
op|','
name|'obj'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'formatter'
op|'='
name|'obj'
newline|'\n'
nl|'\n'
DECL|member|close
dedent|''
name|'def'
name|'close'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|set_name
dedent|''
name|'def'
name|'set_name'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
comment|"# don't touch _handlers"
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'_name'
op|'='
name|'name'
newline|'\n'
nl|'\n'
DECL|member|acquire
dedent|''
name|'def'
name|'acquire'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|release
dedent|''
name|'def'
name|'release'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|createLock
dedent|''
name|'def'
name|'createLock'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|emit
dedent|''
name|'def'
name|'emit'
op|'('
name|'self'
op|','
name|'record'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|handle
dedent|''
name|'def'
name|'handle'
op|'('
name|'self'
op|','
name|'record'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|flush
dedent|''
name|'def'
name|'flush'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|handleError
dedent|''
name|'def'
name|'handleError'
op|'('
name|'self'
op|','
name|'record'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|original_syslog_handler
dedent|''
dedent|''
name|'original_syslog_handler'
op|'='
name|'logging'
op|'.'
name|'handlers'
op|'.'
name|'SysLogHandler'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_syslog_handler
name|'def'
name|'fake_syslog_handler'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'attr'
name|'in'
name|'dir'
op|'('
name|'original_syslog_handler'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'attr'
op|'.'
name|'startswith'
op|'('
string|"'LOG'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'FakeLogger'
op|','
name|'attr'
op|','
nl|'\n'
name|'copy'
op|'.'
name|'copy'
op|'('
name|'getattr'
op|'('
name|'logging'
op|'.'
name|'handlers'
op|'.'
name|'SysLogHandler'
op|','
name|'attr'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'FakeLogger'
op|'.'
name|'priority_map'
op|'='
name|'copy'
op|'.'
name|'deepcopy'
op|'('
name|'logging'
op|'.'
name|'handlers'
op|'.'
name|'SysLogHandler'
op|'.'
name|'priority_map'
op|')'
newline|'\n'
nl|'\n'
name|'logging'
op|'.'
name|'handlers'
op|'.'
name|'SysLogHandler'
op|'='
name|'FakeLogger'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'if'
name|'get_config'
op|'('
string|"'unit_test'"
op|')'
op|'.'
name|'get'
op|'('
string|"'fake_syslog'"
op|','
string|"'False'"
op|')'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
name|'TRUE_VALUES'
op|':'
newline|'\n'
indent|'    '
name|'fake_syslog_handler'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MockTrue
dedent|''
name|'class'
name|'MockTrue'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Instances of MockTrue evaluate like True\n    Any attr accessed on an instance of MockTrue will return a MockTrue\n    instance. Any method called on an instance of MockTrue will return\n    a MockTrue instance.\n\n    >>> thing = MockTrue()\n    >>> thing\n    True\n    >>> thing == True # True == True\n    True\n    >>> thing == False # True == False\n    False\n    >>> thing != True # True != True\n    False\n    >>> thing != False # True != False\n    True\n    >>> thing.attribute\n    True\n    >>> thing.method()\n    True\n    >>> thing.attribute.method()\n    True\n    >>> thing.method().attribute\n    True\n\n    """'
newline|'\n'
nl|'\n'
DECL|member|__getattribute__
name|'def'
name|'__getattribute__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'repr'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__eq__
dedent|''
name|'def'
name|'__eq__'
op|'('
name|'self'
op|','
name|'other'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'other'
name|'is'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|__ne__
dedent|''
name|'def'
name|'__ne__'
op|'('
name|'self'
op|','
name|'other'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'other'
name|'is'
name|'not'
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|function|mock
name|'def'
name|'mock'
op|'('
name|'update'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'returns'
op|'='
op|'['
op|']'
newline|'\n'
name|'deletes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'update'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'imports'
op|'='
name|'key'
op|'.'
name|'split'
op|'('
string|"'.'"
op|')'
newline|'\n'
name|'attr'
op|'='
name|'imports'
op|'.'
name|'pop'
op|'('
op|'-'
number|'1'
op|')'
newline|'\n'
name|'module'
op|'='
name|'__import__'
op|'('
name|'imports'
op|'['
number|'0'
op|']'
op|','
name|'fromlist'
op|'='
name|'imports'
op|'['
number|'1'
op|':'
op|']'
op|')'
newline|'\n'
name|'for'
name|'modname'
name|'in'
name|'imports'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'module'
op|'='
name|'getattr'
op|'('
name|'module'
op|','
name|'modname'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'hasattr'
op|'('
name|'module'
op|','
name|'attr'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'returns'
op|'.'
name|'append'
op|'('
op|'('
name|'module'
op|','
name|'attr'
op|','
name|'getattr'
op|'('
name|'module'
op|','
name|'attr'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'deletes'
op|'.'
name|'append'
op|'('
op|'('
name|'module'
op|','
name|'attr'
op|')'
op|')'
newline|'\n'
dedent|''
name|'setattr'
op|'('
name|'module'
op|','
name|'attr'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'yield'
name|'True'
newline|'\n'
name|'for'
name|'module'
op|','
name|'attr'
op|','
name|'value'
name|'in'
name|'returns'
op|':'
newline|'\n'
indent|'        '
name|'setattr'
op|'('
name|'module'
op|','
name|'attr'
op|','
name|'value'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'module'
op|','
name|'attr'
name|'in'
name|'deletes'
op|':'
newline|'\n'
indent|'        '
name|'delattr'
op|'('
name|'module'
op|','
name|'attr'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
