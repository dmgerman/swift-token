begin_unit
comment|'# -*- coding: utf-8 -*-'
nl|'\n'
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'__future__'
name|'import'
name|'print_function'
newline|'\n'
name|'import'
name|'email'
op|'.'
name|'parser'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'math'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'pickle'
newline|'\n'
name|'import'
name|'rfc822'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'closing'
op|','
name|'contextmanager'
op|','
name|'nested'
newline|'\n'
name|'from'
name|'gzip'
name|'import'
name|'GzipFile'
newline|'\n'
name|'from'
name|'shutil'
name|'import'
name|'rmtree'
newline|'\n'
name|'import'
name|'gc'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'from'
name|'textwrap'
name|'import'
name|'dedent'
newline|'\n'
name|'from'
name|'urllib'
name|'import'
name|'quote'
newline|'\n'
name|'from'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
name|'from'
name|'pyeclib'
op|'.'
name|'ec_iface'
name|'import'
name|'ECDriverError'
newline|'\n'
name|'from'
name|'tempfile'
name|'import'
name|'mkdtemp'
op|','
name|'NamedTemporaryFile'
newline|'\n'
name|'import'
name|'weakref'
newline|'\n'
name|'import'
name|'operator'
newline|'\n'
name|'import'
name|'functools'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'diskfile'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'sleep'
op|','
name|'spawn'
op|','
name|'wsgi'
op|','
name|'listen'
op|','
name|'Timeout'
newline|'\n'
name|'from'
name|'six'
name|'import'
name|'BytesIO'
newline|'\n'
name|'from'
name|'six'
name|'import'
name|'StringIO'
newline|'\n'
name|'from'
name|'six'
op|'.'
name|'moves'
name|'import'
name|'range'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'hash_path'
op|','
name|'json'
op|','
name|'storage_directory'
op|','
name|'parse_content_type'
op|','
name|'iter_multipart_mime_documents'
op|','
name|'public'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
op|'('
nl|'\n'
name|'connect_tcp'
op|','
name|'readuntil2crlfs'
op|','
name|'FakeLogger'
op|','
name|'fake_http_connect'
op|','
name|'FakeRing'
op|','
nl|'\n'
name|'FakeMemcache'
op|','
name|'debug_logger'
op|','
name|'patch_policies'
op|','
name|'write_fake_ring'
op|','
nl|'\n'
name|'mocked_http_conn'
op|')'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'proxy'
name|'import'
name|'server'
name|'as'
name|'proxy_server'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'obj'
name|'import'
name|'ReplicatedObjectController'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'account'
name|'import'
name|'server'
name|'as'
name|'account_server'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'container'
name|'import'
name|'server'
name|'as'
name|'container_server'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'server'
name|'as'
name|'object_server'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
name|'import'
name|'proxy_logging'
op|','
name|'versioned_writes'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
op|'.'
name|'acl'
name|'import'
name|'parse_acl'
op|','
name|'format_acl'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'ChunkReadTimeout'
op|','
name|'DiskFileNotExist'
op|','
name|'APIVersionError'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'utils'
op|','
name|'constraints'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
name|'import'
name|'RingData'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'mkdirs'
op|','
name|'normalize_timestamp'
op|','
name|'NullLogger'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'wsgi'
name|'import'
name|'monkey_patch_mimetools'
op|','
name|'loadapp'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
name|'import'
name|'base'
name|'as'
name|'proxy_base'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'base'
name|'import'
name|'get_container_memcache_key'
op|','
name|'get_account_memcache_key'
op|','
name|'cors_validation'
newline|'\n'
name|'import'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
newline|'\n'
name|'import'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'obj'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'Request'
op|','
name|'Response'
op|','
name|'HTTPUnauthorized'
op|','
name|'HTTPException'
op|','
name|'HeaderKeyDict'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'storage_policy'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'StoragePolicy'
op|','
name|'ECStoragePolicy'
op|','
name|'StoragePolicyCollection'
op|','
name|'POLICIES'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'request_helpers'
name|'import'
name|'get_sys_meta_prefix'
newline|'\n'
nl|'\n'
comment|'# mocks'
nl|'\n'
name|'logging'
op|'.'
name|'getLogger'
op|'('
op|')'
op|'.'
name|'addHandler'
op|'('
name|'logging'
op|'.'
name|'StreamHandler'
op|'('
name|'sys'
op|'.'
name|'stdout'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|STATIC_TIME
name|'STATIC_TIME'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'_test_coros'
op|'='
name|'_test_servers'
op|'='
name|'_test_sockets'
op|'='
name|'_orig_container_listing_limit'
op|'='
name|'_testdir'
op|'='
name|'_orig_SysLogHandler'
op|'='
name|'_orig_POLICIES'
op|'='
name|'_test_POLICIES'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|do_setup
name|'def'
name|'do_setup'
op|'('
name|'the_object_server'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'utils'
op|'.'
name|'HASH_PATH_SUFFIX'
op|'='
string|"'endcap'"
newline|'\n'
name|'global'
name|'_testdir'
op|','
name|'_test_servers'
op|','
name|'_test_sockets'
op|','
name|'_orig_container_listing_limit'
op|','
name|'_test_coros'
op|','
name|'_orig_SysLogHandler'
op|','
name|'_orig_POLICIES'
op|','
name|'_test_POLICIES'
newline|'\n'
name|'_orig_POLICIES'
op|'='
name|'storage_policy'
op|'.'
name|'_POLICIES'
newline|'\n'
name|'_orig_SysLogHandler'
op|'='
name|'utils'
op|'.'
name|'SysLogHandler'
newline|'\n'
name|'utils'
op|'.'
name|'SysLogHandler'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'monkey_patch_mimetools'
op|'('
op|')'
newline|'\n'
comment|"# Since we're starting up a lot here, we're going to test more than"
nl|'\n'
comment|"# just chunked puts; we're also going to test parts of"
nl|'\n'
comment|"# proxy_server.Application we couldn't get to easily otherwise."
nl|'\n'
name|'_testdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mkdtemp'
op|'('
op|')'
op|','
string|"'tmp_test_proxy_server_chunked'"
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'_testdir'
op|')'
newline|'\n'
name|'rmtree'
op|'('
name|'_testdir'
op|')'
newline|'\n'
name|'for'
name|'drive'
name|'in'
op|'('
string|"'sda1'"
op|','
string|"'sdb1'"
op|','
string|"'sdc1'"
op|','
string|"'sdd1'"
op|','
string|"'sde1'"
op|','
nl|'\n'
string|"'sdf1'"
op|','
string|"'sdg1'"
op|','
string|"'sdh1'"
op|','
string|"'sdi1'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mkdirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'_testdir'
op|','
name|'drive'
op|','
string|"'tmp'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'conf'
op|'='
op|'{'
string|"'devices'"
op|':'
name|'_testdir'
op|','
string|"'swift_dir'"
op|':'
name|'_testdir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'false'"
op|','
string|"'allowed_headers'"
op|':'
nl|'\n'
string|"'content-encoding, x-object-manifest, content-disposition, foo'"
op|','
nl|'\n'
string|"'allow_versions'"
op|':'
string|"'t'"
op|'}'
newline|'\n'
name|'prolis'
op|'='
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'acc1lis'
op|'='
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'acc2lis'
op|'='
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'con1lis'
op|'='
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'con2lis'
op|'='
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'obj1lis'
op|'='
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'obj2lis'
op|'='
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'obj3lis'
op|'='
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'objsocks'
op|'='
op|'['
name|'obj1lis'
op|','
name|'obj2lis'
op|','
name|'obj3lis'
op|']'
newline|'\n'
name|'_test_sockets'
op|'='
op|'('
name|'prolis'
op|','
name|'acc1lis'
op|','
name|'acc2lis'
op|','
name|'con1lis'
op|','
name|'con2lis'
op|','
name|'obj1lis'
op|','
name|'obj2lis'
op|','
name|'obj3lis'
op|')'
newline|'\n'
name|'account_ring_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'_testdir'
op|','
string|"'account.ring.gz'"
op|')'
newline|'\n'
name|'account_devs'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'port'"
op|':'
name|'acc1lis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'port'"
op|':'
name|'acc2lis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'write_fake_ring'
op|'('
name|'account_ring_path'
op|','
op|'*'
name|'account_devs'
op|')'
newline|'\n'
name|'container_ring_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'_testdir'
op|','
string|"'container.ring.gz'"
op|')'
newline|'\n'
name|'container_devs'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'port'"
op|':'
name|'con1lis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'port'"
op|':'
name|'con2lis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'write_fake_ring'
op|'('
name|'container_ring_path'
op|','
op|'*'
name|'container_devs'
op|')'
newline|'\n'
name|'storage_policy'
op|'.'
name|'_POLICIES'
op|'='
name|'StoragePolicyCollection'
op|'('
op|'['
nl|'\n'
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'two'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'ECStoragePolicy'
op|'('
number|'3'
op|','
string|"'ec'"
op|','
name|'ec_type'
op|'='
string|"'jerasure_rs_vand'"
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'2'
op|','
name|'ec_nparity'
op|'='
number|'1'
op|','
name|'ec_segment_size'
op|'='
number|'4096'
op|')'
op|']'
op|')'
newline|'\n'
name|'obj_rings'
op|'='
op|'{'
nl|'\n'
number|'0'
op|':'
op|'('
string|"'sda1'"
op|','
string|"'sdb1'"
op|')'
op|','
nl|'\n'
number|'1'
op|':'
op|'('
string|"'sdc1'"
op|','
string|"'sdd1'"
op|')'
op|','
nl|'\n'
number|'2'
op|':'
op|'('
string|"'sde1'"
op|','
string|"'sdf1'"
op|')'
op|','
nl|'\n'
comment|'# sdg1, sdh1, sdi1 taken by policy 3 (see below)'
nl|'\n'
op|'}'
newline|'\n'
name|'for'
name|'policy_index'
op|','
name|'devices'
name|'in'
name|'obj_rings'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'='
name|'POLICIES'
op|'['
name|'policy_index'
op|']'
newline|'\n'
name|'obj_ring_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'_testdir'
op|','
name|'policy'
op|'.'
name|'ring_name'
op|'+'
string|"'.ring.gz'"
op|')'
newline|'\n'
name|'obj_devs'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'port'"
op|':'
name|'objsock'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|','
string|"'device'"
op|':'
name|'dev'
op|'}'
nl|'\n'
name|'for'
name|'objsock'
op|','
name|'dev'
name|'in'
name|'zip'
op|'('
name|'objsocks'
op|','
name|'devices'
op|')'
op|']'
newline|'\n'
name|'write_fake_ring'
op|'('
name|'obj_ring_path'
op|','
op|'*'
name|'obj_devs'
op|')'
newline|'\n'
nl|'\n'
comment|"# write_fake_ring can't handle a 3-element ring, and the EC policy needs"
nl|'\n'
comment|'# at least 3 devs to work with, so we do it manually'
nl|'\n'
dedent|''
name|'devs'
op|'='
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'device'"
op|':'
string|"'sdg1'"
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'port'"
op|':'
name|'obj1lis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'device'"
op|':'
string|"'sdh1'"
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'port'"
op|':'
name|'obj2lis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'device'"
op|':'
string|"'sdi1'"
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'port'"
op|':'
name|'obj3lis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|'}'
op|']'
newline|'\n'
name|'pol3_replica2part2dev_id'
op|'='
op|'['
op|'['
number|'0'
op|','
number|'1'
op|','
number|'2'
op|','
number|'0'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'2'
op|','
number|'0'
op|','
number|'1'
op|']'
op|','
nl|'\n'
op|'['
number|'2'
op|','
number|'0'
op|','
number|'1'
op|','
number|'2'
op|']'
op|']'
newline|'\n'
name|'obj3_ring_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'_testdir'
op|','
name|'POLICIES'
op|'['
number|'3'
op|']'
op|'.'
name|'ring_name'
op|'+'
string|"'.ring.gz'"
op|')'
newline|'\n'
name|'part_shift'
op|'='
number|'30'
newline|'\n'
name|'with'
name|'closing'
op|'('
name|'GzipFile'
op|'('
name|'obj3_ring_path'
op|','
string|"'wb'"
op|')'
op|')'
name|'as'
name|'fh'
op|':'
newline|'\n'
indent|'        '
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'RingData'
op|'('
name|'pol3_replica2part2dev_id'
op|','
name|'devs'
op|','
name|'part_shift'
op|')'
op|','
name|'fh'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'prosrv'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
name|'conf'
op|','
name|'FakeMemcacheReturnsNone'
op|'('
op|')'
op|','
nl|'\n'
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'proxy'"
op|')'
op|')'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
comment|'# make sure all the rings are loaded'
nl|'\n'
indent|'        '
name|'prosrv'
op|'.'
name|'get_object_ring'
op|'('
name|'policy'
op|'.'
name|'idx'
op|')'
newline|'\n'
comment|"# don't lose this one!"
nl|'\n'
dedent|''
name|'_test_POLICIES'
op|'='
name|'storage_policy'
op|'.'
name|'_POLICIES'
newline|'\n'
name|'acc1srv'
op|'='
name|'account_server'
op|'.'
name|'AccountController'
op|'('
nl|'\n'
name|'conf'
op|','
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'acct1'"
op|')'
op|')'
newline|'\n'
name|'acc2srv'
op|'='
name|'account_server'
op|'.'
name|'AccountController'
op|'('
nl|'\n'
name|'conf'
op|','
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'acct2'"
op|')'
op|')'
newline|'\n'
name|'con1srv'
op|'='
name|'container_server'
op|'.'
name|'ContainerController'
op|'('
nl|'\n'
name|'conf'
op|','
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'cont1'"
op|')'
op|')'
newline|'\n'
name|'con2srv'
op|'='
name|'container_server'
op|'.'
name|'ContainerController'
op|'('
nl|'\n'
name|'conf'
op|','
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'cont2'"
op|')'
op|')'
newline|'\n'
name|'obj1srv'
op|'='
name|'the_object_server'
op|'.'
name|'ObjectController'
op|'('
nl|'\n'
name|'conf'
op|','
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'obj1'"
op|')'
op|')'
newline|'\n'
name|'obj2srv'
op|'='
name|'the_object_server'
op|'.'
name|'ObjectController'
op|'('
nl|'\n'
name|'conf'
op|','
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'obj2'"
op|')'
op|')'
newline|'\n'
name|'obj3srv'
op|'='
name|'the_object_server'
op|'.'
name|'ObjectController'
op|'('
nl|'\n'
name|'conf'
op|','
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'obj3'"
op|')'
op|')'
newline|'\n'
name|'_test_servers'
op|'='
op|'('
name|'prosrv'
op|','
name|'acc1srv'
op|','
name|'acc2srv'
op|','
name|'con1srv'
op|','
name|'con2srv'
op|','
name|'obj1srv'
op|','
name|'obj2srv'
op|','
name|'obj3srv'
op|')'
newline|'\n'
name|'nl'
op|'='
name|'NullLogger'
op|'('
op|')'
newline|'\n'
name|'logging_prosv'
op|'='
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
name|'prosrv'
op|','
name|'conf'
op|','
nl|'\n'
name|'logger'
op|'='
name|'prosrv'
op|'.'
name|'logger'
op|')'
newline|'\n'
name|'prospa'
op|'='
name|'spawn'
op|'('
name|'wsgi'
op|'.'
name|'server'
op|','
name|'prolis'
op|','
name|'logging_prosv'
op|','
name|'nl'
op|')'
newline|'\n'
name|'acc1spa'
op|'='
name|'spawn'
op|'('
name|'wsgi'
op|'.'
name|'server'
op|','
name|'acc1lis'
op|','
name|'acc1srv'
op|','
name|'nl'
op|')'
newline|'\n'
name|'acc2spa'
op|'='
name|'spawn'
op|'('
name|'wsgi'
op|'.'
name|'server'
op|','
name|'acc2lis'
op|','
name|'acc2srv'
op|','
name|'nl'
op|')'
newline|'\n'
name|'con1spa'
op|'='
name|'spawn'
op|'('
name|'wsgi'
op|'.'
name|'server'
op|','
name|'con1lis'
op|','
name|'con1srv'
op|','
name|'nl'
op|')'
newline|'\n'
name|'con2spa'
op|'='
name|'spawn'
op|'('
name|'wsgi'
op|'.'
name|'server'
op|','
name|'con2lis'
op|','
name|'con2srv'
op|','
name|'nl'
op|')'
newline|'\n'
name|'obj1spa'
op|'='
name|'spawn'
op|'('
name|'wsgi'
op|'.'
name|'server'
op|','
name|'obj1lis'
op|','
name|'obj1srv'
op|','
name|'nl'
op|')'
newline|'\n'
name|'obj2spa'
op|'='
name|'spawn'
op|'('
name|'wsgi'
op|'.'
name|'server'
op|','
name|'obj2lis'
op|','
name|'obj2srv'
op|','
name|'nl'
op|')'
newline|'\n'
name|'obj3spa'
op|'='
name|'spawn'
op|'('
name|'wsgi'
op|'.'
name|'server'
op|','
name|'obj3lis'
op|','
name|'obj3srv'
op|','
name|'nl'
op|')'
newline|'\n'
name|'_test_coros'
op|'='
op|'('
name|'prospa'
op|','
name|'acc1spa'
op|','
name|'acc2spa'
op|','
name|'con1spa'
op|','
name|'con2spa'
op|','
name|'obj1spa'
op|','
name|'obj2spa'
op|','
name|'obj3spa'
op|')'
newline|'\n'
comment|'# Create account'
nl|'\n'
name|'ts'
op|'='
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'prosrv'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'a'"
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'obj'
op|'.'
name|'http_connect'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
name|'partition'
op|','
string|"'PUT'"
op|','
string|"'/a'"
op|','
nl|'\n'
op|'{'
string|"'X-Timestamp'"
op|':'
name|'ts'
op|','
nl|'\n'
string|"'x-trans-id'"
op|':'
string|"'test'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'assert'
op|'('
name|'resp'
op|'.'
name|'status'
op|'=='
number|'201'
op|')'
newline|'\n'
comment|'# Create another account'
nl|'\n'
comment|'# used for account-to-account tests'
nl|'\n'
dedent|''
name|'ts'
op|'='
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'prosrv'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'a1'"
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'obj'
op|'.'
name|'http_connect'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
name|'partition'
op|','
string|"'PUT'"
op|','
nl|'\n'
string|"'/a1'"
op|','
nl|'\n'
op|'{'
string|"'X-Timestamp'"
op|':'
name|'ts'
op|','
nl|'\n'
string|"'x-trans-id'"
op|':'
string|"'test'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'assert'
op|'('
name|'resp'
op|'.'
name|'status'
op|'=='
number|'201'
op|')'
newline|'\n'
comment|'# Create containers, 1 per test policy'
nl|'\n'
dedent|''
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/c HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Auth-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'assert'
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|'=='
name|'exp'
op|','
string|'"Expected \'%s\', encountered \'%s\'"'
op|'%'
op|'('
nl|'\n'
name|'exp'
op|','
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|')'
newline|'\n'
comment|'# Create container in other account'
nl|'\n'
comment|'# used for account-to-account tests'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a1/c1 HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Auth-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'assert'
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|'=='
name|'exp'
op|','
string|'"Expected \'%s\', encountered \'%s\'"'
op|'%'
op|'('
nl|'\n'
name|'exp'
op|','
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
nl|'\n'
string|"'PUT /v1/a/c1 HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Auth-Token: t\\r\\nX-Storage-Policy: one\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'assert'
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|'=='
name|'exp'
op|','
string|'"Expected \'%s\', encountered \'%s\'"'
op|'%'
op|'('
name|'exp'
op|','
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
nl|'\n'
string|"'PUT /v1/a/c2 HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Auth-Token: t\\r\\nX-Storage-Policy: two\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'assert'
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|'=='
name|'exp'
op|','
string|'"Expected \'%s\', encountered \'%s\'"'
op|'%'
op|'('
name|'exp'
op|','
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|unpatch_policies
dedent|''
name|'def'
name|'unpatch_policies'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    This will unset a TestCase level patch_policies to use the module level\n    policies setup for the _test_servers instead.\n\n    N.B. You should NEVER modify the _test_server policies or rings during a\n    test because they persist for the life of the entire module!\n    """'
newline|'\n'
op|'@'
name|'functools'
op|'.'
name|'wraps'
op|'('
name|'f'
op|')'
newline|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'patch_policies'
op|'('
name|'_test_POLICIES'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'f'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|setup
dedent|''
name|'def'
name|'setup'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'do_setup'
op|'('
name|'object_server'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|teardown
dedent|''
name|'def'
name|'teardown'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'for'
name|'server'
name|'in'
name|'_test_coros'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
dedent|''
name|'rmtree'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'_testdir'
op|')'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'SysLogHandler'
op|'='
name|'_orig_SysLogHandler'
newline|'\n'
name|'storage_policy'
op|'.'
name|'_POLICIES'
op|'='
name|'_orig_POLICIES'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|sortHeaderNames
dedent|''
name|'def'
name|'sortHeaderNames'
op|'('
name|'headerNames'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Return the given string of header names sorted.\n\n    headerName: a comma-delimited list of header names\n    """'
newline|'\n'
name|'headers'
op|'='
op|'['
name|'a'
op|'.'
name|'strip'
op|'('
op|')'
name|'for'
name|'a'
name|'in'
name|'headerNames'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
name|'if'
name|'a'
op|'.'
name|'strip'
op|'('
op|')'
op|']'
newline|'\n'
name|'headers'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'return'
string|"', '"
op|'.'
name|'join'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|parse_headers_string
dedent|''
name|'def'
name|'parse_headers_string'
op|'('
name|'headers_str'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'headers_dict'
op|'='
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'headers_str'
op|'.'
name|'split'
op|'('
string|"'\\r\\n'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"': '"
name|'in'
name|'line'
op|':'
newline|'\n'
indent|'            '
name|'header'
op|','
name|'value'
op|'='
name|'line'
op|'.'
name|'split'
op|'('
string|"': '"
op|','
number|'1'
op|')'
newline|'\n'
name|'headers_dict'
op|'['
name|'header'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'headers_dict'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|node_error_count
dedent|''
name|'def'
name|'node_error_count'
op|'('
name|'proxy_app'
op|','
name|'ring_node'
op|')'
op|':'
newline|'\n'
comment|"# Reach into the proxy's internals to get the error count for a"
nl|'\n'
comment|'# particular node'
nl|'\n'
indent|'    '
name|'node_key'
op|'='
name|'proxy_app'
op|'.'
name|'_error_limit_node_key'
op|'('
name|'ring_node'
op|')'
newline|'\n'
name|'return'
name|'proxy_app'
op|'.'
name|'_error_limiting'
op|'.'
name|'get'
op|'('
name|'node_key'
op|','
op|'{'
op|'}'
op|')'
op|'.'
name|'get'
op|'('
string|"'errors'"
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|node_last_error
dedent|''
name|'def'
name|'node_last_error'
op|'('
name|'proxy_app'
op|','
name|'ring_node'
op|')'
op|':'
newline|'\n'
comment|"# Reach into the proxy's internals to get the last error for a"
nl|'\n'
comment|'# particular node'
nl|'\n'
indent|'    '
name|'node_key'
op|'='
name|'proxy_app'
op|'.'
name|'_error_limit_node_key'
op|'('
name|'ring_node'
op|')'
newline|'\n'
name|'return'
name|'proxy_app'
op|'.'
name|'_error_limiting'
op|'.'
name|'get'
op|'('
name|'node_key'
op|','
op|'{'
op|'}'
op|')'
op|'.'
name|'get'
op|'('
string|"'last_error'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|set_node_errors
dedent|''
name|'def'
name|'set_node_errors'
op|'('
name|'proxy_app'
op|','
name|'ring_node'
op|','
name|'value'
op|','
name|'last_error'
op|')'
op|':'
newline|'\n'
comment|"# Set the node's error count to value"
nl|'\n'
indent|'    '
name|'node_key'
op|'='
name|'proxy_app'
op|'.'
name|'_error_limit_node_key'
op|'('
name|'ring_node'
op|')'
newline|'\n'
name|'stats'
op|'='
name|'proxy_app'
op|'.'
name|'_error_limiting'
op|'.'
name|'setdefault'
op|'('
name|'node_key'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'stats'
op|'['
string|"'errors'"
op|']'
op|'='
name|'value'
newline|'\n'
name|'stats'
op|'['
string|"'last_error'"
op|']'
op|'='
name|'last_error'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeMemcacheReturnsNone
dedent|''
name|'class'
name|'FakeMemcacheReturnsNone'
op|'('
name|'FakeMemcache'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|get
indent|'    '
name|'def'
name|'get'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
comment|"# Returns None as the timestamp of the container; assumes we're only"
nl|'\n'
comment|'# using the FakeMemcache for container existence checks.'
nl|'\n'
indent|'        '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|function|save_globals
name|'def'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'orig_http_connect'
op|'='
name|'getattr'
op|'('
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'base'
op|','
string|"'http_connect'"
op|','
nl|'\n'
name|'None'
op|')'
newline|'\n'
name|'orig_account_info'
op|'='
name|'getattr'
op|'('
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'Controller'
op|','
nl|'\n'
string|"'account_info'"
op|','
name|'None'
op|')'
newline|'\n'
name|'orig_container_info'
op|'='
name|'getattr'
op|'('
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'Controller'
op|','
nl|'\n'
string|"'container_info'"
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'True'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'        '
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'Controller'
op|'.'
name|'account_info'
op|'='
name|'orig_account_info'
newline|'\n'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'base'
op|'.'
name|'http_connect'
op|'='
name|'orig_http_connect'
newline|'\n'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'obj'
op|'.'
name|'http_connect'
op|'='
name|'orig_http_connect'
newline|'\n'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'account'
op|'.'
name|'http_connect'
op|'='
name|'orig_http_connect'
newline|'\n'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'container'
op|'.'
name|'http_connect'
op|'='
name|'orig_http_connect'
newline|'\n'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'Controller'
op|'.'
name|'container_info'
op|'='
name|'orig_container_info'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|set_http_connect
dedent|''
dedent|''
name|'def'
name|'set_http_connect'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'new_connect'
op|'='
name|'fake_http_connect'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'base'
op|'.'
name|'http_connect'
op|'='
name|'new_connect'
newline|'\n'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'obj'
op|'.'
name|'http_connect'
op|'='
name|'new_connect'
newline|'\n'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'account'
op|'.'
name|'http_connect'
op|'='
name|'new_connect'
newline|'\n'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'container'
op|'.'
name|'http_connect'
op|'='
name|'new_connect'
newline|'\n'
name|'return'
name|'new_connect'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_make_callback_func
dedent|''
name|'def'
name|'_make_callback_func'
op|'('
name|'calls'
op|')'
op|':'
newline|'\n'
DECL|function|callback
indent|'    '
name|'def'
name|'callback'
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'method'
op|','
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
name|'None'
op|','
name|'query_string'
op|'='
name|'None'
op|','
name|'ssl'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'context'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'context'
op|'['
string|"'method'"
op|']'
op|'='
name|'method'
newline|'\n'
name|'context'
op|'['
string|"'path'"
op|']'
op|'='
name|'path'
newline|'\n'
name|'context'
op|'['
string|"'headers'"
op|']'
op|'='
name|'headers'
name|'or'
op|'{'
op|'}'
newline|'\n'
name|'calls'
op|'.'
name|'append'
op|'('
name|'context'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'callback'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_limit_max_file_size
dedent|''
name|'def'
name|'_limit_max_file_size'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    This will limit constraints.MAX_FILE_SIZE for the duration of the\n    wrapped function, based on whether MAX_FILE_SIZE exceeds the\n    sys.maxsize limit on the system running the tests.\n\n    This allows successful testing on 32 bit systems.\n    """'
newline|'\n'
op|'@'
name|'functools'
op|'.'
name|'wraps'
op|'('
name|'f'
op|')'
newline|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_max_file_size'
op|'='
name|'constraints'
op|'.'
name|'MAX_FILE_SIZE'
newline|'\n'
name|'if'
name|'constraints'
op|'.'
name|'MAX_FILE_SIZE'
op|'>='
name|'sys'
op|'.'
name|'maxsize'
op|':'
newline|'\n'
indent|'            '
name|'test_max_file_size'
op|'='
op|'('
number|'2'
op|'**'
number|'30'
op|'+'
number|'2'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'constraints'
op|','
string|"'MAX_FILE_SIZE'"
op|','
nl|'\n'
name|'test_max_file_size'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'f'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# tests'
nl|'\n'
DECL|class|TestController
dedent|''
name|'class'
name|'TestController'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'memcache'
op|'='
name|'FakeMemcache'
op|'('
op|')'
newline|'\n'
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'memcache'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'self'
op|'.'
name|'account_ring'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'self'
op|'.'
name|'container_ring'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'='
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'Controller'
op|'('
name|'app'
op|')'
newline|'\n'
nl|'\n'
DECL|class|FakeReq
name|'class'
name|'FakeReq'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'url'
op|'='
string|'"/foo/bar"'
newline|'\n'
name|'self'
op|'.'
name|'method'
op|'='
string|'"METHOD"'
newline|'\n'
nl|'\n'
DECL|member|as_referer
dedent|''
name|'def'
name|'as_referer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'method'
op|'+'
string|"' '"
op|'+'
name|'self'
op|'.'
name|'url'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'account'
op|'='
string|"'some_account'"
newline|'\n'
name|'self'
op|'.'
name|'container'
op|'='
string|"'some_container'"
newline|'\n'
name|'self'
op|'.'
name|'request'
op|'='
name|'FakeReq'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'read_acl'
op|'='
string|"'read_acl'"
newline|'\n'
name|'self'
op|'.'
name|'write_acl'
op|'='
string|"'write_acl'"
newline|'\n'
nl|'\n'
DECL|member|test_transfer_headers
dedent|''
name|'def'
name|'test_transfer_headers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'src_headers'
op|'='
op|'{'
string|"'x-remove-base-meta-owner'"
op|':'
string|"'x'"
op|','
nl|'\n'
string|"'x-base-meta-size'"
op|':'
string|"'151M'"
op|','
nl|'\n'
string|"'new-owner'"
op|':'
string|"'Kun'"
op|'}'
newline|'\n'
name|'dst_headers'
op|'='
op|'{'
string|"'x-base-meta-owner'"
op|':'
string|"'Gareth'"
op|','
nl|'\n'
string|"'x-base-meta-size'"
op|':'
string|"'150M'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'transfer_headers'
op|'('
name|'src_headers'
op|','
name|'dst_headers'
op|')'
newline|'\n'
name|'expected_headers'
op|'='
op|'{'
string|"'x-base-meta-owner'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'x-base-meta-size'"
op|':'
string|"'151M'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dst_headers'
op|','
name|'expected_headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_account_info_return
dedent|''
name|'def'
name|'check_account_info_return'
op|'('
name|'self'
op|','
name|'partition'
op|','
name|'nodes'
op|','
name|'is_none'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'is_none'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|','
name|'n'
op|'='
name|'None'
op|','
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|','
name|'n'
op|'='
name|'self'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
name|'self'
op|'.'
name|'account'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'p'
op|','
name|'partition'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'n'
op|','
name|'nodes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_account_info_container_count
dedent|''
name|'def'
name|'test_account_info_container_count'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
name|'count'
op|'='
number|'123'
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|','
name|'count'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count'
op|','
number|'123'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
name|'count'
op|'='
string|"'123'"
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|','
name|'count'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count'
op|','
number|'123'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cache_key'
op|'='
name|'get_account_memcache_key'
op|'('
name|'self'
op|'.'
name|'account'
op|')'
newline|'\n'
name|'account_info'
op|'='
op|'{'
string|"'status'"
op|':'
number|'200'
op|','
string|"'container_count'"
op|':'
number|'1234'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'memcache'
op|'.'
name|'set'
op|'('
name|'cache_key'
op|','
name|'account_info'
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|','
name|'count'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count'
op|','
number|'1234'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cache_key'
op|'='
name|'get_account_memcache_key'
op|'('
name|'self'
op|'.'
name|'account'
op|')'
newline|'\n'
name|'account_info'
op|'='
op|'{'
string|"'status'"
op|':'
number|'200'
op|','
string|"'container_count'"
op|':'
string|"'1234'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'memcache'
op|'.'
name|'set'
op|'('
name|'cache_key'
op|','
name|'account_info'
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|','
name|'count'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count'
op|','
number|'1234'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_make_requests
dedent|''
dedent|''
name|'def'
name|'test_make_requests'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|','
name|'count'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
name|'raise_timeout_exc'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'_make_request'
op|'('
nl|'\n'
name|'nodes'
op|','
name|'partition'
op|','
string|"'POST'"
op|','
string|"'/'"
op|','
string|"''"
op|','
string|"''"
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'thread_locals'
op|')'
newline|'\n'
nl|'\n'
comment|'# tests if 200 is cached and used'
nl|'\n'
DECL|member|test_account_info_200
dedent|''
dedent|''
name|'def'
name|'test_account_info_200'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|','
name|'count'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_account_info_return'
op|'('
name|'partition'
op|','
name|'nodes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count'
op|','
number|'12345'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test the internal representation in memcache'
nl|'\n'
comment|"# 'container_count' changed from int to str"
nl|'\n'
name|'cache_key'
op|'='
name|'get_account_memcache_key'
op|'('
name|'self'
op|'.'
name|'account'
op|')'
newline|'\n'
name|'container_info'
op|'='
op|'{'
string|"'status'"
op|':'
number|'200'
op|','
nl|'\n'
string|"'container_count'"
op|':'
string|"'12345'"
op|','
nl|'\n'
string|"'total_object_count'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'bytes'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'meta'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'sysmeta'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'container_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'memcache'
op|'.'
name|'get'
op|'('
name|'cache_key'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|','
name|'count'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_account_info_return'
op|'('
name|'partition'
op|','
name|'nodes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count'
op|','
number|'12345'
op|')'
newline|'\n'
nl|'\n'
comment|'# tests if 404 is cached and used'
nl|'\n'
DECL|member|test_account_info_404
dedent|''
dedent|''
name|'def'
name|'test_account_info_404'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|','
name|'count'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_account_info_return'
op|'('
name|'partition'
op|','
name|'nodes'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test the internal representation in memcache'
nl|'\n'
comment|"# 'container_count' changed from 0 to None"
nl|'\n'
name|'cache_key'
op|'='
name|'get_account_memcache_key'
op|'('
name|'self'
op|'.'
name|'account'
op|')'
newline|'\n'
name|'account_info'
op|'='
op|'{'
string|"'status'"
op|':'
number|'404'
op|','
nl|'\n'
string|"'container_count'"
op|':'
name|'None'
op|','
comment|'# internally keep None'
nl|'\n'
string|"'total_object_count'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'bytes'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'meta'"
op|':'
op|'{'
op|'}'
op|','
nl|'\n'
string|"'sysmeta'"
op|':'
op|'{'
op|'}'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'account_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'memcache'
op|'.'
name|'get'
op|'('
name|'cache_key'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|','
name|'count'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_account_info_return'
op|'('
name|'partition'
op|','
name|'nodes'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
comment|'# tests if some http status codes are not cached'
nl|'\n'
DECL|member|test_account_info_no_cache
dedent|''
dedent|''
name|'def'
name|'test_account_info_no_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|test
indent|'        '
name|'def'
name|'test'
op|'('
op|'*'
name|'status_list'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
op|'*'
name|'status_list'
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|','
name|'count'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'memcache'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_account_info_return'
op|'('
name|'partition'
op|','
name|'nodes'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# We cache if we have two 404 responses - fail if only one'
nl|'\n'
indent|'            '
name|'test'
op|'('
number|'503'
op|','
number|'503'
op|','
number|'404'
op|')'
newline|'\n'
name|'test'
op|'('
number|'504'
op|','
number|'404'
op|','
number|'503'
op|')'
newline|'\n'
name|'test'
op|'('
number|'404'
op|','
number|'507'
op|','
number|'503'
op|')'
newline|'\n'
name|'test'
op|'('
number|'503'
op|','
number|'503'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_account_info_no_account
dedent|''
dedent|''
name|'def'
name|'test_account_info_no_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'set_http_connect'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|','
name|'count'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_account_info_return'
op|'('
name|'partition'
op|','
name|'nodes'
op|','
name|'is_none'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'count'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|check_container_info_return
dedent|''
dedent|''
name|'def'
name|'check_container_info_return'
op|'('
name|'self'
op|','
name|'ret'
op|','
name|'is_none'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'is_none'
op|':'
newline|'\n'
indent|'            '
name|'partition'
op|','
name|'nodes'
op|','
name|'read_acl'
op|','
name|'write_acl'
op|'='
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'partition'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
name|'self'
op|'.'
name|'account'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container'
op|')'
newline|'\n'
name|'read_acl'
op|','
name|'write_acl'
op|'='
name|'self'
op|'.'
name|'read_acl'
op|','
name|'self'
op|'.'
name|'write_acl'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'partition'
op|','
name|'ret'
op|'['
string|"'partition'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'nodes'
op|','
name|'ret'
op|'['
string|"'nodes'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'read_acl'
op|','
name|'ret'
op|'['
string|"'read_acl'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'write_acl'
op|','
name|'ret'
op|'['
string|"'write_acl'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_container_info_invalid_account
dedent|''
name|'def'
name|'test_container_info_invalid_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|account_info
indent|'        '
name|'def'
name|'account_info'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'request'
op|','
name|'autocreate'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'Controller'
op|'.'
name|'account_info'
op|'='
name|'account_info'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_info'
op|'('
name|'self'
op|'.'
name|'account'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container'
op|','
nl|'\n'
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_container_info_return'
op|'('
name|'ret'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# tests if 200 is cached and used'
nl|'\n'
DECL|member|test_container_info_200
dedent|''
dedent|''
name|'def'
name|'test_container_info_200'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
op|'{'
string|"'x-container-read'"
op|':'
name|'self'
op|'.'
name|'read_acl'
op|','
nl|'\n'
string|"'x-container-write'"
op|':'
name|'self'
op|'.'
name|'write_acl'
op|'}'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
comment|'# account_info is found'
nl|'\n'
number|'200'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
comment|'# container_info is found'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_container_info_return'
op|'('
name|'ret'
op|')'
newline|'\n'
nl|'\n'
name|'cache_key'
op|'='
name|'get_container_memcache_key'
op|'('
name|'self'
op|'.'
name|'account'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container'
op|')'
newline|'\n'
name|'cache_value'
op|'='
name|'self'
op|'.'
name|'memcache'
op|'.'
name|'get'
op|'('
name|'cache_key'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'cache_value'
op|','
name|'dict'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'cache_value'
op|'.'
name|'get'
op|'('
string|"'status'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_container_info_return'
op|'('
name|'ret'
op|')'
newline|'\n'
nl|'\n'
comment|'# tests if 404 is cached and used'
nl|'\n'
DECL|member|test_container_info_404
dedent|''
dedent|''
name|'def'
name|'test_container_info_404'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|account_info
indent|'        '
name|'def'
name|'account_info'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'True'
op|','
name|'True'
op|','
number|'0'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'503'
op|','
number|'204'
op|','
comment|'# account_info found'
nl|'\n'
number|'504'
op|','
number|'404'
op|','
number|'404'
op|')'
comment|"# container_info 'NotFound'"
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_container_info_return'
op|'('
name|'ret'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'cache_key'
op|'='
name|'get_container_memcache_key'
op|'('
name|'self'
op|'.'
name|'account'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container'
op|')'
newline|'\n'
name|'cache_value'
op|'='
name|'self'
op|'.'
name|'memcache'
op|'.'
name|'get'
op|'('
name|'cache_key'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'cache_value'
op|','
name|'dict'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'404'
op|','
name|'cache_value'
op|'.'
name|'get'
op|'('
string|"'status'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_container_info_return'
op|'('
name|'ret'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'503'
op|','
number|'404'
op|','
number|'404'
op|')'
comment|"# account_info 'NotFound'"
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_container_info_return'
op|'('
name|'ret'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'cache_key'
op|'='
name|'get_container_memcache_key'
op|'('
name|'self'
op|'.'
name|'account'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container'
op|')'
newline|'\n'
name|'cache_value'
op|'='
name|'self'
op|'.'
name|'memcache'
op|'.'
name|'get'
op|'('
name|'cache_key'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'cache_value'
op|','
name|'dict'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'404'
op|','
name|'cache_value'
op|'.'
name|'get'
op|'('
string|"'status'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_container_info_return'
op|'('
name|'ret'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# tests if some http status codes are not cached'
nl|'\n'
DECL|member|test_container_info_no_cache
dedent|''
dedent|''
name|'def'
name|'test_container_info_no_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|test
indent|'        '
name|'def'
name|'test'
op|'('
op|'*'
name|'status_list'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
op|'*'
name|'status_list'
op|')'
newline|'\n'
name|'ret'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'request'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'memcache'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'check_container_info_return'
op|'('
name|'ret'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# We cache if we have two 404 responses - fail if only one'
nl|'\n'
indent|'            '
name|'test'
op|'('
number|'503'
op|','
number|'503'
op|','
number|'404'
op|')'
newline|'\n'
name|'test'
op|'('
number|'504'
op|','
number|'404'
op|','
number|'503'
op|')'
newline|'\n'
name|'test'
op|'('
number|'404'
op|','
number|'507'
op|','
number|'503'
op|')'
newline|'\n'
name|'test'
op|'('
number|'503'
op|','
number|'503'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'patch_policies'
op|'('
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|','
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
op|']'
op|')'
newline|'\n'
DECL|class|TestProxyServer
name|'class'
name|'TestProxyServer'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_get_object_ring
indent|'    '
name|'def'
name|'test_get_object_ring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'baseapp'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
op|'}'
op|','
nl|'\n'
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'with'
name|'patch_policies'
op|'('
op|'['
nl|'\n'
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'a'"
op|','
name|'False'
op|','
name|'object_ring'
op|'='
number|'123'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'b'"
op|','
name|'True'
op|','
name|'object_ring'
op|'='
number|'456'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'d'"
op|','
name|'False'
op|','
name|'object_ring'
op|'='
number|'789'
op|')'
nl|'\n'
op|']'
op|')'
op|':'
newline|'\n'
comment|'# None means legacy so always use policy 0'
nl|'\n'
indent|'            '
name|'ring'
op|'='
name|'baseapp'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ring'
op|','
number|'123'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'baseapp'
op|'.'
name|'get_object_ring'
op|'('
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ring'
op|','
number|'123'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'baseapp'
op|'.'
name|'get_object_ring'
op|'('
string|"'0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ring'
op|','
number|'123'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'baseapp'
op|'.'
name|'get_object_ring'
op|'('
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ring'
op|','
number|'456'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'baseapp'
op|'.'
name|'get_object_ring'
op|'('
string|"'2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ring'
op|','
number|'789'
op|')'
newline|'\n'
comment|'# illegal values'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'baseapp'
op|'.'
name|'get_object_ring'
op|','
string|"'99'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'baseapp'
op|'.'
name|'get_object_ring'
op|','
string|"'asdf'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unhandled_exception
dedent|''
dedent|''
name|'def'
name|'test_unhandled_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|MyApp
indent|'        '
name|'class'
name|'MyApp'
op|'('
name|'proxy_server'
op|'.'
name|'Application'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|get_controller
indent|'            '
name|'def'
name|'get_controller'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'this shouldn\\'t be caught'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'app'
op|'='
name|'MyApp'
op|'('
name|'None'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/account'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_internal_method_request
dedent|''
name|'def'
name|'test_internal_method_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'baseapp'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
op|'}'
op|','
nl|'\n'
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'baseapp'
op|'.'
name|'handle_request'
op|'('
nl|'\n'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'__init__'"
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status'
op|','
string|"'405 Method Not Allowed'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_inexistent_method_request
dedent|''
name|'def'
name|'test_inexistent_method_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'baseapp'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
op|'}'
op|','
nl|'\n'
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'baseapp'
op|'.'
name|'handle_request'
op|'('
nl|'\n'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'!invalid'"
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status'
op|','
string|"'405 Method Not Allowed'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_calls_authorize_allow
dedent|''
name|'def'
name|'test_calls_authorize_allow'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|authorize
name|'def'
name|'authorize'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|')'
newline|'\n'
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
name|'None'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'authorize'
newline|'\n'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_calls_authorize_deny
dedent|''
name|'def'
name|'test_calls_authorize_deny'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|authorize
name|'def'
name|'authorize'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
name|'None'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'authorize'
newline|'\n'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_negative_content_length
dedent|''
name|'def'
name|'test_negative_content_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'swift_dir'
op|'='
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'baseapp'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
string|"'swift_dir'"
op|':'
name|'swift_dir'
op|'}'
op|','
nl|'\n'
name|'FakeMemcache'
op|'('
op|')'
op|','
name|'FakeLogger'
op|'('
op|')'
op|','
nl|'\n'
name|'FakeRing'
op|'('
op|')'
op|','
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'baseapp'
op|'.'
name|'handle_request'
op|'('
nl|'\n'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'CONTENT_LENGTH'"
op|':'
string|"'-1'"
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status'
op|','
string|"'400 Bad Request'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
string|"'Invalid Content-Length'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'baseapp'
op|'.'
name|'handle_request'
op|'('
nl|'\n'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'CONTENT_LENGTH'"
op|':'
string|"'-123'"
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status'
op|','
string|"'400 Bad Request'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
string|"'Invalid Content-Length'"
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'rmtree'
op|'('
name|'swift_dir'
op|','
name|'ignore_errors'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_adds_transaction_id
dedent|''
dedent|''
name|'def'
name|'test_adds_transaction_id'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'swift_dir'
op|'='
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'baseapp'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
string|"'swift_dir'"
op|':'
name|'swift_dir'
op|'}'
op|','
nl|'\n'
name|'FakeMemcache'
op|'('
op|')'
op|','
name|'logger'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeLogger'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'baseapp'
op|'.'
name|'handle_request'
op|'('
nl|'\n'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/info'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'HTTP_X_TRANS_ID_EXTRA'"
op|':'
string|"'sardine'"
op|','
nl|'\n'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
op|')'
newline|'\n'
comment|"# This is kind of a hokey way to get the transaction ID; it'd be"
nl|'\n'
comment|'# better to examine response headers, but the catch_errors'
nl|'\n'
comment|"# middleware is what sets the X-Trans-Id header, and we don't have"
nl|'\n'
comment|'# that available here.'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'logger'
op|'.'
name|'txn_id'
op|'.'
name|'endswith'
op|'('
string|"'-sardine'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'rmtree'
op|'('
name|'swift_dir'
op|','
name|'ignore_errors'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_adds_transaction_id_length_limit
dedent|''
dedent|''
name|'def'
name|'test_adds_transaction_id_length_limit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'swift_dir'
op|'='
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'baseapp'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
string|"'swift_dir'"
op|':'
name|'swift_dir'
op|'}'
op|','
nl|'\n'
name|'FakeMemcache'
op|'('
op|')'
op|','
name|'logger'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeLogger'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'baseapp'
op|'.'
name|'handle_request'
op|'('
nl|'\n'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/info'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'HTTP_X_TRANS_ID_EXTRA'"
op|':'
string|"'a'"
op|'*'
number|'1000'
op|','
nl|'\n'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'logger'
op|'.'
name|'txn_id'
op|'.'
name|'endswith'
op|'('
nl|'\n'
string|"'-aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'rmtree'
op|'('
name|'swift_dir'
op|','
name|'ignore_errors'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_denied_host_header
dedent|''
dedent|''
name|'def'
name|'test_denied_host_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'swift_dir'
op|'='
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'baseapp'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
string|"'swift_dir'"
op|':'
name|'swift_dir'
op|','
nl|'\n'
string|"'deny_host_headers'"
op|':'
nl|'\n'
string|"'invalid_host.com'"
op|'}'
op|','
nl|'\n'
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeLogger'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'baseapp'
op|'.'
name|'handle_request'
op|'('
nl|'\n'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'HTTP_HOST'"
op|':'
string|"'invalid_host.com'"
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status'
op|','
string|"'403 Forbidden'"
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'rmtree'
op|'('
name|'swift_dir'
op|','
name|'ignore_errors'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_node_timing
dedent|''
dedent|''
name|'def'
name|'test_node_timing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'baseapp'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
string|"'sorting_method'"
op|':'
string|"'timing'"
op|'}'
op|','
nl|'\n'
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'baseapp'
op|'.'
name|'node_timings'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/account'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'baseapp'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'baseapp'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'503'
op|')'
comment|"# couldn't connect to anything"
newline|'\n'
name|'exp_timings'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'baseapp'
op|'.'
name|'node_timings'
op|','
name|'exp_timings'
op|')'
newline|'\n'
nl|'\n'
name|'times'
op|'='
op|'['
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|']'
newline|'\n'
name|'exp_timings'
op|'='
op|'{'
string|"'127.0.0.1'"
op|':'
op|'('
number|'0.1'
op|','
name|'times'
op|'['
number|'0'
op|']'
op|'+'
name|'baseapp'
op|'.'
name|'timing_expiry'
op|')'
op|'}'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.proxy.server.time'"
op|','
name|'lambda'
op|':'
name|'times'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'baseapp'
op|'.'
name|'set_node_timing'
op|'('
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|'}'
op|','
number|'0.1'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'baseapp'
op|'.'
name|'node_timings'
op|','
name|'exp_timings'
op|')'
newline|'\n'
nl|'\n'
name|'nodes'
op|'='
op|'['
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|'}'
op|','
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.2'"
op|'}'
op|','
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.3'"
op|'}'
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.proxy.server.shuffle'"
op|','
name|'lambda'
name|'l'
op|':'
name|'l'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'res'
op|'='
name|'baseapp'
op|'.'
name|'sort_nodes'
op|'('
name|'nodes'
op|')'
newline|'\n'
dedent|''
name|'exp_sorting'
op|'='
op|'['
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.2'"
op|'}'
op|','
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.3'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|','
name|'exp_sorting'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_node_affinity
dedent|''
name|'def'
name|'test_node_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'baseapp'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
string|"'sorting_method'"
op|':'
string|"'affinity'"
op|','
nl|'\n'
string|"'read_affinity'"
op|':'
string|"'r1=1'"
op|'}'
op|','
nl|'\n'
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'nodes'
op|'='
op|'['
op|'{'
string|"'region'"
op|':'
number|'2'
op|','
string|"'zone'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'region'"
op|':'
number|'1'
op|','
string|"'zone'"
op|':'
number|'2'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.2'"
op|'}'
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.proxy.server.shuffle'"
op|','
name|'lambda'
name|'x'
op|':'
name|'x'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'app_sorted'
op|'='
name|'baseapp'
op|'.'
name|'sort_nodes'
op|'('
name|'nodes'
op|')'
newline|'\n'
name|'exp_sorted'
op|'='
op|'['
op|'{'
string|"'region'"
op|':'
number|'1'
op|','
string|"'zone'"
op|':'
number|'2'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'region'"
op|':'
number|'2'
op|','
string|"'zone'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exp_sorted'
op|','
name|'app_sorted'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_info_defaults
dedent|''
dedent|''
name|'def'
name|'test_info_defaults'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
op|'}'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'app'
op|'.'
name|'expose_info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|'.'
name|'disallowed_sections'
op|','
name|'list'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'app'
op|'.'
name|'disallowed_sections'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'swift.valid_api_versions'"
op|']'
op|','
nl|'\n'
name|'app'
op|'.'
name|'disallowed_sections'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'app'
op|'.'
name|'admin_key'
name|'is'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_info_controller
dedent|''
name|'def'
name|'test_get_info_controller'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/info'"
op|')'
newline|'\n'
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
op|'}'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'controller'
op|','
name|'path_parts'
op|'='
name|'app'
op|'.'
name|'get_controller'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'version'"
name|'in'
name|'path_parts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'path_parts'
op|'['
string|"'version'"
op|']'
name|'is'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'disallowed_sections'"
name|'in'
name|'path_parts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'expose_info'"
name|'in'
name|'path_parts'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'admin_key'"
name|'in'
name|'path_parts'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'controller'
op|'.'
name|'__name__'
op|','
string|"'InfoController'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_error_limit_methods
dedent|''
name|'def'
name|'test_error_limit_methods'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
op|'}'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'logger'
op|'='
name|'logger'
op|')'
newline|'\n'
name|'node'
op|'='
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_part_nodes'
op|'('
number|'0'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
comment|'# error occurred'
nl|'\n'
name|'app'
op|'.'
name|'error_occurred'
op|'('
name|'node'
op|','
string|"'test msg'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'test msg'"
name|'in'
nl|'\n'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
op|'['
op|'-'
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'node_error_count'
op|'('
name|'app'
op|','
name|'node'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# exception occurred'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'kaboom1!'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e1'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'.'
name|'exception_occurred'
op|'('
name|'node'
op|','
string|"'test1'"
op|','
string|"'test1 msg'"
op|')'
newline|'\n'
dedent|''
name|'line'
op|'='
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'test1 server'"
name|'in'
name|'line'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'test1 msg'"
name|'in'
name|'line'
op|')'
newline|'\n'
name|'log_args'
op|','
name|'log_kwargs'
op|'='
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'error'"
op|']'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'log_kwargs'
op|'['
string|"'exc_info'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'log_kwargs'
op|'['
string|"'exc_info'"
op|']'
op|'['
number|'1'
op|']'
op|','
name|'e1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'node_error_count'
op|'('
name|'app'
op|','
name|'node'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# warning exception occurred'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'kaboom2!'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e2'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'.'
name|'exception_occurred'
op|'('
name|'node'
op|','
string|"'test2'"
op|','
string|"'test2 msg'"
op|','
nl|'\n'
name|'level'
op|'='
name|'logging'
op|'.'
name|'WARNING'
op|')'
newline|'\n'
dedent|''
name|'line'
op|'='
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'warning'"
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'test2 server'"
name|'in'
name|'line'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'test2 msg'"
name|'in'
name|'line'
op|')'
newline|'\n'
name|'log_args'
op|','
name|'log_kwargs'
op|'='
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'warning'"
op|']'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'log_kwargs'
op|'['
string|"'exc_info'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'log_kwargs'
op|'['
string|"'exc_info'"
op|']'
op|'['
number|'1'
op|']'
op|','
name|'e2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'node_error_count'
op|'('
name|'app'
op|','
name|'node'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# custom exception occurred'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'kaboom3!'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'e3'
op|':'
newline|'\n'
indent|'            '
name|'e3_info'
op|'='
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'kaboom4!'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'app'
op|'.'
name|'exception_occurred'
op|'('
name|'node'
op|','
string|"'test3'"
op|','
string|"'test3 msg'"
op|','
nl|'\n'
name|'level'
op|'='
name|'logging'
op|'.'
name|'WARNING'
op|','
name|'exc_info'
op|'='
name|'e3_info'
op|')'
newline|'\n'
dedent|''
name|'line'
op|'='
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'warning'"
op|')'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'test3 server'"
name|'in'
name|'line'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'test3 msg'"
name|'in'
name|'line'
op|')'
newline|'\n'
name|'log_args'
op|','
name|'log_kwargs'
op|'='
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'warning'"
op|']'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'log_kwargs'
op|'['
string|"'exc_info'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'log_kwargs'
op|'['
string|"'exc_info'"
op|']'
op|'['
number|'1'
op|']'
op|','
name|'e3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'node_error_count'
op|'('
name|'app'
op|','
name|'node'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_valid_api_version
dedent|''
name|'def'
name|'test_valid_api_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
op|'}'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# The version string is only checked for account, container and object'
nl|'\n'
comment|'# requests; the raised APIVersionError returns a 404 to the client'
nl|'\n'
name|'for'
name|'path'
name|'in'
op|'['
nl|'\n'
string|"'/v2/a'"
op|','
nl|'\n'
string|"'/v2/a/c'"
op|','
nl|'\n'
string|"'/v2/a/c/o'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'APIVersionError'
op|','
name|'app'
op|'.'
name|'get_controller'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
comment|'# Default valid API versions are ok'
nl|'\n'
dedent|''
name|'for'
name|'path'
name|'in'
op|'['
nl|'\n'
string|"'/v1/a'"
op|','
nl|'\n'
string|"'/v1/a/c'"
op|','
nl|'\n'
string|"'/v1/a/c/o'"
op|','
nl|'\n'
string|"'/v1.0/a'"
op|','
nl|'\n'
string|"'/v1.0/a/c'"
op|','
nl|'\n'
string|"'/v1.0/a/c/o'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|')'
newline|'\n'
name|'controller'
op|','
name|'path_parts'
op|'='
name|'app'
op|'.'
name|'get_controller'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'controller'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure settings valid API version constraint works'
nl|'\n'
dedent|''
name|'for'
name|'version'
name|'in'
op|'['
string|'"42"'
op|','
number|'42'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'NamedTemporaryFile'
op|'('
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                    '
name|'f'
op|'.'
name|'write'
op|'('
string|"'[swift-constraints]\\n'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'valid_api_versions = %s\\n'"
op|'%'
name|'version'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'utils'
op|','
string|"'SWIFT_CONF_FILE'"
op|','
name|'f'
op|'.'
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'constraints'
op|'.'
name|'reload_constraints'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/%s/a'"
op|'%'
name|'version'
op|')'
newline|'\n'
name|'controller'
op|','
name|'_'
op|'='
name|'app'
op|'.'
name|'get_controller'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'controller'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
nl|'\n'
comment|'# In this case v1 is invalid'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'APIVersionError'
op|','
name|'app'
op|'.'
name|'get_controller'
op|','
name|'req'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'constraints'
op|'.'
name|'reload_constraints'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Check that the valid_api_versions is not exposed by default'
nl|'\n'
dedent|''
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/info'"
op|')'
newline|'\n'
name|'controller'
op|','
name|'path_parts'
op|'='
name|'app'
op|'.'
name|'get_controller'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'swift.valid_api_versions'"
name|'in'
nl|'\n'
name|'path_parts'
op|'.'
name|'get'
op|'('
string|"'disallowed_sections'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'patch_policies'
op|'('
op|'['
nl|'\n'
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'is_default'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|')'
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
DECL|class|TestProxyServerLoading
name|'class'
name|'TestProxyServerLoading'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_orig_hash_suffix'
op|'='
name|'utils'
op|'.'
name|'HASH_PATH_SUFFIX'
newline|'\n'
name|'utils'
op|'.'
name|'HASH_PATH_SUFFIX'
op|'='
string|"'endcap'"
newline|'\n'
name|'self'
op|'.'
name|'tempdir'
op|'='
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'tempdir'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'HASH_PATH_SUFFIX'
op|'='
name|'self'
op|'.'
name|'_orig_hash_suffix'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'policy'
op|'.'
name|'object_ring'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|test_load_policy_rings
dedent|''
dedent|''
name|'def'
name|'test_load_policy_rings'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'policy'
op|'.'
name|'object_ring'
op|')'
newline|'\n'
dedent|''
name|'conf_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'tempdir'
op|','
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'conf_body'
op|'='
string|'"""\n        [DEFAULT]\n        swift_dir = %s\n\n        [pipeline:main]\n        pipeline = catch_errors cache proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n\n        [filter:cache]\n        use = egg:swift#memcache\n\n        [filter:catch_errors]\n        use = egg:swift#catch_errors\n        """'
op|'%'
name|'self'
op|'.'
name|'tempdir'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_path'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
name|'dedent'
op|'('
name|'conf_body'
op|')'
op|')'
newline|'\n'
dedent|''
name|'account_ring_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'tempdir'
op|','
string|"'account.ring.gz'"
op|')'
newline|'\n'
name|'write_fake_ring'
op|'('
name|'account_ring_path'
op|')'
newline|'\n'
name|'container_ring_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'tempdir'
op|','
string|"'container.ring.gz'"
op|')'
newline|'\n'
name|'write_fake_ring'
op|'('
name|'container_ring_path'
op|')'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'object_ring_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'tempdir'
op|','
nl|'\n'
name|'policy'
op|'.'
name|'ring_name'
op|'+'
string|"'.ring.gz'"
op|')'
newline|'\n'
name|'write_fake_ring'
op|'('
name|'object_ring_path'
op|')'
newline|'\n'
dedent|''
name|'app'
op|'='
name|'loadapp'
op|'('
name|'conf_path'
op|')'
newline|'\n'
comment|'# find the end of the pipeline'
nl|'\n'
name|'while'
name|'hasattr'
op|'('
name|'app'
op|','
string|"'app'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'app'
op|'.'
name|'app'
newline|'\n'
nl|'\n'
comment|'# validate loaded rings'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'serialized_path'
op|','
nl|'\n'
name|'account_ring_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'serialized_path'
op|','
nl|'\n'
name|'container_ring_path'
op|')'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policy'
op|'.'
name|'object_ring'
op|','
nl|'\n'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'int'
op|'('
name|'policy'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_missing_rings
dedent|''
dedent|''
name|'def'
name|'test_missing_rings'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'tempdir'
op|','
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'conf_body'
op|'='
string|'"""\n        [DEFAULT]\n        swift_dir = %s\n\n        [pipeline:main]\n        pipeline = catch_errors cache proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n\n        [filter:cache]\n        use = egg:swift#memcache\n\n        [filter:catch_errors]\n        use = egg:swift#catch_errors\n        """'
op|'%'
name|'self'
op|'.'
name|'tempdir'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_path'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
name|'dedent'
op|'('
name|'conf_body'
op|')'
op|')'
newline|'\n'
dedent|''
name|'ring_paths'
op|'='
op|'['
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'tempdir'
op|','
string|"'account.ring.gz'"
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'tempdir'
op|','
string|"'container.ring.gz'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'policy'
op|'.'
name|'object_ring'
op|')'
newline|'\n'
name|'object_ring_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'tempdir'
op|','
nl|'\n'
name|'policy'
op|'.'
name|'ring_name'
op|'+'
string|"'.ring.gz'"
op|')'
newline|'\n'
name|'ring_paths'
op|'.'
name|'append'
op|'('
name|'object_ring_path'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'policy'
op|'.'
name|'object_ring'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'ring_path'
name|'in'
name|'ring_paths'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'ring_path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'IOError'
op|','
name|'loadapp'
op|','
name|'conf_path'
op|')'
newline|'\n'
name|'write_fake_ring'
op|'('
name|'ring_path'
op|')'
newline|'\n'
comment|'# all rings exist, app should load'
nl|'\n'
dedent|''
name|'loadapp'
op|'('
name|'conf_path'
op|')'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'policy'
op|'.'
name|'object_ring'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'patch_policies'
op|'('
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|','
nl|'\n'
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'base_port'
op|'='
number|'3000'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
DECL|class|TestObjectController
name|'class'
name|'TestObjectController'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
nl|'\n'
name|'None'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'proxy-ut'"
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'set_replicas'
op|'('
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'set_replicas'
op|'('
number|'3'
op|')'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'policy'
op|'.'
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'base_port'
op|'='
number|'3000'
op|')'
newline|'\n'
nl|'\n'
DECL|member|put_container
dedent|''
dedent|''
name|'def'
name|'put_container'
op|'('
name|'self'
op|','
name|'policy_name'
op|','
name|'container_name'
op|')'
op|':'
newline|'\n'
comment|'# Note: only works if called with unpatched policies'
nl|'\n'
indent|'        '
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/%s HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'X-Storage-Policy: %s\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|'%'
op|'('
name|'container_name'
op|','
name|'policy_name'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 2'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assert_status_map
dedent|''
name|'def'
name|'assert_status_map'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'statuses'
op|','
name|'expected'
op|','
name|'raise_exc'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'raise_exc'
op|':'
newline|'\n'
indent|'                '
name|'kwargs'
op|'['
string|"'raise_exc'"
op|']'
op|'='
name|'raise_exc'
newline|'\n'
nl|'\n'
dedent|''
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'res'
op|'='
name|'method'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'HTTPException'
name|'as'
name|'res'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
comment|'# repeat test'
nl|'\n'
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'res'
op|'='
name|'method'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'HTTPException'
name|'as'
name|'res'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_policy_IO
name|'def'
name|'test_policy_IO'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|check_file
indent|'        '
name|'def'
name|'check_file'
op|'('
name|'policy'
op|','
name|'cont'
op|','
name|'devs'
op|','
name|'check_val'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'partition'
op|','
name|'nodes'
op|'='
name|'policy'
op|'.'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'a'"
op|','
name|'cont'
op|','
string|"'o'"
op|')'
newline|'\n'
name|'conf'
op|'='
op|'{'
string|"'devices'"
op|':'
name|'_testdir'
op|','
string|"'mount_check'"
op|':'
string|"'false'"
op|'}'
newline|'\n'
name|'df_mgr'
op|'='
name|'diskfile'
op|'.'
name|'DiskFileManager'
op|'('
name|'conf'
op|','
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'file'
op|'='
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
name|'dev'
op|','
name|'partition'
op|','
string|"'a'"
op|','
nl|'\n'
name|'cont'
op|','
string|"'o'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'policy'
op|')'
newline|'\n'
name|'if'
name|'check_val'
name|'is'
name|'True'
op|':'
newline|'\n'
indent|'                    '
name|'file'
op|'.'
name|'open'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'prosrv'
op|'='
name|'_test_servers'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
comment|'# check policy 0: put file on c, read it back, check loc on disk'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'obj'
op|'='
string|"'test_object0'"
newline|'\n'
name|'path'
op|'='
string|"'/v1/a/c/o'"
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT %s HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: %s\\r\\n'"
nl|'\n'
string|"'Content-Type: text/plain\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'path'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
nl|'\n'
string|"'text/plain'"
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'body'
op|','
name|'obj'
op|')'
newline|'\n'
nl|'\n'
name|'check_file'
op|'('
name|'POLICIES'
op|'['
number|'0'
op|']'
op|','
string|"'c'"
op|','
op|'['
string|"'sda1'"
op|','
string|"'sdb1'"
op|']'
op|','
name|'True'
op|')'
newline|'\n'
name|'check_file'
op|'('
name|'POLICIES'
op|'['
number|'0'
op|']'
op|','
string|"'c'"
op|','
op|'['
string|"'sdc1'"
op|','
string|"'sdd1'"
op|','
string|"'sde1'"
op|','
string|"'sdf1'"
op|']'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# check policy 1: put file on c1, read it back, check loc on disk'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'path'
op|'='
string|"'/v1/a/c1/o'"
newline|'\n'
name|'obj'
op|'='
string|"'test_object1'"
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT %s HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: %s\\r\\n'"
nl|'\n'
string|"'Content-Type: text/plain\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'path'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
nl|'\n'
string|"'text/plain'"
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'body'
op|','
name|'obj'
op|')'
newline|'\n'
nl|'\n'
name|'check_file'
op|'('
name|'POLICIES'
op|'['
number|'1'
op|']'
op|','
string|"'c1'"
op|','
op|'['
string|"'sdc1'"
op|','
string|"'sdd1'"
op|']'
op|','
name|'True'
op|')'
newline|'\n'
name|'check_file'
op|'('
name|'POLICIES'
op|'['
number|'1'
op|']'
op|','
string|"'c1'"
op|','
op|'['
string|"'sda1'"
op|','
string|"'sdb1'"
op|','
string|"'sde1'"
op|','
string|"'sdf1'"
op|']'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# check policy 2: put file on c2, read it back, check loc on disk'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'path'
op|'='
string|"'/v1/a/c2/o'"
newline|'\n'
name|'obj'
op|'='
string|"'test_object2'"
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT %s HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: %s\\r\\n'"
nl|'\n'
string|"'Content-Type: text/plain\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'path'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
nl|'\n'
string|"'text/plain'"
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'body'
op|','
name|'obj'
op|')'
newline|'\n'
nl|'\n'
name|'check_file'
op|'('
name|'POLICIES'
op|'['
number|'2'
op|']'
op|','
string|"'c2'"
op|','
op|'['
string|"'sde1'"
op|','
string|"'sdf1'"
op|']'
op|','
name|'True'
op|')'
newline|'\n'
name|'check_file'
op|'('
name|'POLICIES'
op|'['
number|'2'
op|']'
op|','
string|"'c2'"
op|','
op|'['
string|"'sda1'"
op|','
string|"'sdb1'"
op|','
string|"'sdc1'"
op|','
string|"'sdd1'"
op|']'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_policy_IO_override
name|'def'
name|'test_policy_IO_override'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'hasattr'
op|'('
name|'_test_servers'
op|'['
op|'-'
number|'1'
op|']'
op|','
string|"'_filesystem'"
op|')'
op|':'
newline|'\n'
comment|'# ironically, the _filesystem attribute on the object server means'
nl|'\n'
comment|'# the in-memory diskfile is in use, so this test does not apply'
nl|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'prosrv'
op|'='
name|'_test_servers'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
comment|'# validate container policy is 1'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c1'"
op|','
name|'method'
op|'='
string|"'HEAD'"
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'204'
op|')'
comment|'# sanity check'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'POLICIES'
op|'['
number|'1'
op|']'
op|'.'
name|'name'
op|','
name|'res'
op|'.'
name|'headers'
op|'['
string|"'x-storage-policy'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# check overrides: put it in policy 2 (not where the container says)'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c1/wrong-o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'BytesIO'
op|'('
string|'b"hello"'
op|')'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
string|"'5'"
op|','
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
string|"'2'"
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
comment|'# sanity check'
newline|'\n'
nl|'\n'
comment|"# go to disk to make sure it's there"
nl|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'prosrv'
op|'.'
name|'get_object_ring'
op|'('
number|'2'
op|')'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
string|"'a'"
op|','
string|"'c1'"
op|','
string|"'wrong-o'"
op|')'
newline|'\n'
name|'node'
op|'='
name|'nodes'
op|'['
number|'0'
op|']'
newline|'\n'
name|'conf'
op|'='
op|'{'
string|"'devices'"
op|':'
name|'_testdir'
op|','
string|"'mount_check'"
op|':'
string|"'false'"
op|'}'
newline|'\n'
name|'df_mgr'
op|'='
name|'diskfile'
op|'.'
name|'DiskFileManager'
op|'('
name|'conf'
op|','
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'df'
op|'='
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'partition'
op|','
string|"'a'"
op|','
nl|'\n'
string|"'c1'"
op|','
string|"'wrong-o'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'with'
name|'df'
op|'.'
name|'open'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'contents'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'reader'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'contents'
op|','
string|'"hello"'
op|')'
newline|'\n'
nl|'\n'
comment|"# can't get it from the normal place"
nl|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c1/wrong-o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
comment|'# sanity check'
newline|'\n'
nl|'\n'
comment|'# but we can get it from policy 2'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c1/wrong-o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|','
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
string|"'2'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'body'
op|','
string|"'hello'"
op|')'
newline|'\n'
nl|'\n'
comment|'# and we can delete it the same way'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c1/wrong-o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|','
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
string|"'2'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'204'
op|')'
newline|'\n'
nl|'\n'
name|'df'
op|'='
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'partition'
op|','
string|"'a'"
op|','
nl|'\n'
string|"'c1'"
op|','
string|"'wrong-o'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'.'
name|'open'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileNotExist'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'float'
op|'('
name|'e'
op|'.'
name|'timestamp'
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'did not raise DiskFileNotExist'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_GET_newest_large_file
name|'def'
name|'test_GET_newest_large_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'prosrv'
op|'='
name|'_test_servers'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'obj'
op|'='
string|"'a'"
op|'*'
op|'('
number|'1024'
op|'*'
number|'1024'
op|')'
newline|'\n'
name|'path'
op|'='
string|"'/v1/a/c/o.large'"
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT %s HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: %s\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'path'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
nl|'\n'
string|"'application/octet-stream'"
op|','
nl|'\n'
string|"'X-Newest'"
op|':'
string|"'true'"
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'body'
op|','
name|'obj'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_GET_ranges
name|'def'
name|'test_GET_ranges'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'prosrv'
op|'='
name|'_test_servers'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'obj'
op|'='
op|'('
string|"''"
op|'.'
name|'join'
op|'('
nl|'\n'
op|'('
string|"'beans lots of beans lots of beans lots of beans yeah %04d '"
op|'%'
name|'i'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'100'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'path'
op|'='
string|"'/v1/a/c/o.beans'"
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT %s HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: %s\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'path'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
comment|'# one byte range'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
name|'path'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/octet-stream'"
op|','
nl|'\n'
string|"'Range'"
op|':'
string|"'bytes=10-200'"
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'body'
op|','
name|'obj'
op|'['
number|'10'
op|':'
number|'201'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# multiple byte ranges'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
name|'path'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/octet-stream'"
op|','
nl|'\n'
string|"'Range'"
op|':'
string|"'bytes=10-200,1000-1099,4123-4523'"
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'206'
op|')'
newline|'\n'
name|'ct'
op|','
name|'params'
op|'='
name|'parse_content_type'
op|'('
name|'res'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ct'
op|','
string|"'multipart/byteranges'"
op|')'
newline|'\n'
nl|'\n'
name|'boundary'
op|'='
name|'dict'
op|'('
name|'params'
op|')'
op|'.'
name|'get'
op|'('
string|"'boundary'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'boundary'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'got_mime_docs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'mime_doc_fh'
name|'in'
name|'iter_multipart_mime_documents'
op|'('
name|'StringIO'
op|'('
name|'res'
op|'.'
name|'body'
op|')'
op|','
nl|'\n'
name|'boundary'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
name|'HeaderKeyDict'
op|'('
name|'rfc822'
op|'.'
name|'Message'
op|'('
name|'mime_doc_fh'
op|','
number|'0'
op|')'
op|'.'
name|'items'
op|'('
op|')'
op|')'
newline|'\n'
name|'body'
op|'='
name|'mime_doc_fh'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'got_mime_docs'
op|'.'
name|'append'
op|'('
op|'('
name|'headers'
op|','
name|'body'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_mime_docs'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
nl|'\n'
name|'first_range_headers'
op|'='
name|'got_mime_docs'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'first_range_body'
op|'='
name|'got_mime_docs'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'first_range_headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|"'bytes 10-200/5800'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'first_range_body'
op|','
name|'obj'
op|'['
number|'10'
op|':'
number|'201'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'second_range_headers'
op|'='
name|'got_mime_docs'
op|'['
number|'1'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'second_range_body'
op|'='
name|'got_mime_docs'
op|'['
number|'1'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'second_range_headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|"'bytes 1000-1099/5800'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'second_range_body'
op|','
name|'obj'
op|'['
number|'1000'
op|':'
number|'1100'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'second_range_headers'
op|'='
name|'got_mime_docs'
op|'['
number|'2'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'second_range_body'
op|'='
name|'got_mime_docs'
op|'['
number|'2'
op|']'
op|'['
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'second_range_headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|"'bytes 4123-4523/5800'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'second_range_body'
op|','
name|'obj'
op|'['
number|'4123'
op|':'
number|'4524'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_GET_ranges_resuming
name|'def'
name|'test_GET_ranges_resuming'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'prosrv'
op|'='
name|'_test_servers'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'obj'
op|'='
op|'('
string|"''"
op|'.'
name|'join'
op|'('
nl|'\n'
op|'('
string|"'Smurf! The smurfing smurf is completely smurfed. %03d '"
op|'%'
name|'i'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1000'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'path'
op|'='
string|"'/v1/a/c/o.smurfs'"
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT %s HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: %s\\r\\n'"
nl|'\n'
string|"'Content-Type: application/smurftet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'path'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'kaboomed'
op|'='
op|'['
number|'0'
op|']'
newline|'\n'
name|'bytes_before_timeout'
op|'='
op|'['
name|'None'
op|']'
newline|'\n'
nl|'\n'
DECL|class|FileLikeKaboom
name|'class'
name|'FileLikeKaboom'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'inner_file_like'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'inner_file_like'
op|'='
name|'inner_file_like'
newline|'\n'
nl|'\n'
comment|'# close(), etc.'
nl|'\n'
DECL|member|__getattr__
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'attr'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'getattr'
op|'('
name|'self'
op|'.'
name|'inner_file_like'
op|','
name|'attr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|readline
dedent|''
name|'def'
name|'readline'
op|'('
name|'self'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'bytes_before_timeout'
op|'['
number|'0'
op|']'
op|'<='
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'kaboomed'
op|'['
number|'0'
op|']'
op|'+='
number|'1'
newline|'\n'
name|'raise'
name|'ChunkReadTimeout'
op|'('
name|'None'
op|')'
newline|'\n'
dedent|''
name|'result'
op|'='
name|'self'
op|'.'
name|'inner_file_like'
op|'.'
name|'readline'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'result'
op|')'
op|'>'
name|'bytes_before_timeout'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'result'
op|'='
name|'result'
op|'['
op|':'
name|'bytes_before_timeout'
op|'['
number|'0'
op|']'
op|']'
newline|'\n'
dedent|''
name|'bytes_before_timeout'
op|'['
number|'0'
op|']'
op|'-='
name|'len'
op|'('
name|'result'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|','
name|'length'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'result'
op|'='
name|'self'
op|'.'
name|'inner_file_like'
op|'.'
name|'read'
op|'('
name|'length'
op|')'
newline|'\n'
name|'if'
name|'bytes_before_timeout'
op|'['
number|'0'
op|']'
op|'<='
number|'0'
op|':'
newline|'\n'
indent|'                    '
name|'kaboomed'
op|'['
number|'0'
op|']'
op|'+='
number|'1'
newline|'\n'
name|'raise'
name|'ChunkReadTimeout'
op|'('
name|'None'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'result'
op|')'
op|'>'
name|'bytes_before_timeout'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'result'
op|'='
name|'result'
op|'['
op|':'
name|'bytes_before_timeout'
op|'['
number|'0'
op|']'
op|']'
newline|'\n'
dedent|''
name|'bytes_before_timeout'
op|'['
number|'0'
op|']'
op|'-='
name|'len'
op|'('
name|'result'
op|')'
newline|'\n'
name|'return'
name|'result'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'orig_hrtdi'
op|'='
name|'proxy_base'
op|'.'
name|'http_response_to_document_iters'
newline|'\n'
nl|'\n'
comment|'# Use this to mock out http_response_to_document_iters. On the first'
nl|'\n'
comment|'# call, the result will be sabotaged to blow up with'
nl|'\n'
comment|'# ChunkReadTimeout after some number of bytes are read. On'
nl|'\n'
comment|'# subsequent calls, no sabotage will be added.'
nl|'\n'
nl|'\n'
DECL|function|sabotaged_hrtdi
name|'def'
name|'sabotaged_hrtdi'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resp_parts'
op|'='
name|'orig_hrtdi'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
name|'for'
name|'sb'
op|','
name|'eb'
op|','
name|'l'
op|','
name|'h'
op|','
name|'range_file'
name|'in'
name|'resp_parts'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'bytes_before_timeout'
op|'['
number|'0'
op|']'
op|'<='
number|'0'
op|':'
newline|'\n'
comment|'# simulate being unable to read MIME part of'
nl|'\n'
comment|'# multipart/byteranges response'
nl|'\n'
indent|'                    '
name|'kaboomed'
op|'['
number|'0'
op|']'
op|'+='
number|'1'
newline|'\n'
name|'raise'
name|'ChunkReadTimeout'
op|'('
name|'None'
op|')'
newline|'\n'
dedent|''
name|'boomer'
op|'='
name|'FileLikeKaboom'
op|'('
name|'range_file'
op|')'
newline|'\n'
name|'yield'
name|'sb'
op|','
name|'eb'
op|','
name|'l'
op|','
name|'h'
op|','
name|'boomer'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'sabotaged'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|single_sabotage_hrtdi
name|'def'
name|'single_sabotage_hrtdi'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'sabotaged'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'sabotaged'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'sabotaged_hrtdi'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'orig_hrtdi'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
nl|'\n'
comment|'# We want sort of an end-to-end test of object resuming, so what we'
nl|'\n'
comment|'# do is mock out stuff so the proxy thinks it only read a certain'
nl|'\n'
comment|'# number of bytes before it got a timeout.'
nl|'\n'
dedent|''
dedent|''
name|'bytes_before_timeout'
op|'['
number|'0'
op|']'
op|'='
number|'300'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'proxy_base'
op|','
string|"'http_response_to_document_iters'"
op|','
nl|'\n'
name|'single_sabotage_hrtdi'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
name|'path'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/octet-stream'"
op|','
nl|'\n'
string|"'Range'"
op|':'
string|"'bytes=0-500'"
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'body'
op|'='
name|'res'
op|'.'
name|'body'
comment|'# read the whole thing'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kaboomed'
op|'['
number|'0'
op|']'
op|','
number|'1'
op|')'
comment|'# sanity check'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'body'
op|')'
op|','
number|'501'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
name|'obj'
op|'['
op|':'
number|'501'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Sanity-check for multi-range resume: make sure we actually break'
nl|'\n'
comment|'# in the middle of the second byterange. This test is partially'
nl|'\n'
comment|'# about what happens when all the object servers break at once, and'
nl|'\n'
comment|'# partially about validating all these mocks we do. After all, the'
nl|'\n'
comment|"# point of resuming is that the client can't tell anything went"
nl|'\n'
comment|"# wrong, so we need a test where we can't resume and something"
nl|'\n'
comment|'# *does* go wrong so we can observe it.'
nl|'\n'
name|'bytes_before_timeout'
op|'['
number|'0'
op|']'
op|'='
number|'700'
newline|'\n'
name|'kaboomed'
op|'['
number|'0'
op|']'
op|'='
number|'0'
newline|'\n'
name|'sabotaged'
op|'['
number|'0'
op|']'
op|'='
name|'False'
newline|'\n'
name|'prosrv'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
comment|'# clear out errors'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'proxy_base'
op|','
string|"'http_response_to_document_iters'"
op|','
nl|'\n'
name|'sabotaged_hrtdi'
op|')'
op|':'
comment|'# perma-broken'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
name|'path'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=0-500,1000-1500,2000-2500'"
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'body'
op|'='
string|"''"
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'chunk'
name|'in'
name|'res'
op|'.'
name|'app_iter'
op|':'
newline|'\n'
indent|'                    '
name|'body'
op|'+='
name|'chunk'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'kaboomed'
op|'['
number|'0'
op|']'
op|'>'
number|'0'
op|')'
comment|'# sanity check'
newline|'\n'
nl|'\n'
name|'ct'
op|','
name|'params'
op|'='
name|'parse_content_type'
op|'('
name|'res'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ct'
op|','
string|"'multipart/byteranges'"
op|')'
comment|'# sanity check'
newline|'\n'
name|'boundary'
op|'='
name|'dict'
op|'('
name|'params'
op|')'
op|'.'
name|'get'
op|'('
string|"'boundary'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'boundary'
name|'is'
name|'not'
name|'None'
op|')'
comment|'# sanity check'
newline|'\n'
name|'got_byteranges'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'mime_doc_fh'
name|'in'
name|'iter_multipart_mime_documents'
op|'('
name|'StringIO'
op|'('
name|'body'
op|')'
op|','
nl|'\n'
name|'boundary'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rfc822'
op|'.'
name|'Message'
op|'('
name|'mime_doc_fh'
op|','
number|'0'
op|')'
newline|'\n'
name|'body'
op|'='
name|'mime_doc_fh'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'got_byteranges'
op|'.'
name|'append'
op|'('
name|'body'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|'['
number|'0'
op|']'
op|')'
op|','
number|'501'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|'['
number|'1'
op|']'
op|')'
op|','
number|'199'
op|')'
comment|'# partial'
newline|'\n'
nl|'\n'
comment|'# Multi-range resume, resuming in the middle of the first byterange'
nl|'\n'
name|'bytes_before_timeout'
op|'['
number|'0'
op|']'
op|'='
number|'300'
newline|'\n'
name|'kaboomed'
op|'['
number|'0'
op|']'
op|'='
number|'0'
newline|'\n'
name|'sabotaged'
op|'['
number|'0'
op|']'
op|'='
name|'False'
newline|'\n'
name|'prosrv'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
comment|'# clear out errors'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'proxy_base'
op|','
string|"'http_response_to_document_iters'"
op|','
nl|'\n'
name|'single_sabotage_hrtdi'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
name|'path'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=0-500,1000-1500,2000-2500'"
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'res'
op|'.'
name|'app_iter'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kaboomed'
op|'['
number|'0'
op|']'
op|','
number|'1'
op|')'
comment|'# sanity check'
newline|'\n'
nl|'\n'
name|'ct'
op|','
name|'params'
op|'='
name|'parse_content_type'
op|'('
name|'res'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ct'
op|','
string|"'multipart/byteranges'"
op|')'
comment|'# sanity check'
newline|'\n'
name|'boundary'
op|'='
name|'dict'
op|'('
name|'params'
op|')'
op|'.'
name|'get'
op|'('
string|"'boundary'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'boundary'
name|'is'
name|'not'
name|'None'
op|')'
comment|'# sanity check'
newline|'\n'
name|'got_byteranges'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'mime_doc_fh'
name|'in'
name|'iter_multipart_mime_documents'
op|'('
name|'StringIO'
op|'('
name|'body'
op|')'
op|','
nl|'\n'
name|'boundary'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rfc822'
op|'.'
name|'Message'
op|'('
name|'mime_doc_fh'
op|','
number|'0'
op|')'
newline|'\n'
name|'body'
op|'='
name|'mime_doc_fh'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'got_byteranges'
op|'.'
name|'append'
op|'('
name|'body'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|'['
number|'0'
op|']'
op|')'
op|','
number|'501'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'0'
op|']'
op|','
name|'obj'
op|'['
op|':'
number|'501'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|'['
number|'1'
op|']'
op|')'
op|','
number|'501'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'1'
op|']'
op|','
name|'obj'
op|'['
number|'1000'
op|':'
number|'1501'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|'['
number|'2'
op|']'
op|')'
op|','
number|'501'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'2'
op|']'
op|','
name|'obj'
op|'['
number|'2000'
op|':'
number|'2501'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Multi-range resume, first GET dies in the middle of the second set'
nl|'\n'
comment|'# of MIME headers'
nl|'\n'
name|'bytes_before_timeout'
op|'['
number|'0'
op|']'
op|'='
number|'501'
newline|'\n'
name|'kaboomed'
op|'['
number|'0'
op|']'
op|'='
number|'0'
newline|'\n'
name|'sabotaged'
op|'['
number|'0'
op|']'
op|'='
name|'False'
newline|'\n'
name|'prosrv'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
comment|'# clear out errors'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'proxy_base'
op|','
string|"'http_response_to_document_iters'"
op|','
nl|'\n'
name|'single_sabotage_hrtdi'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
name|'path'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=0-500,1000-1500,2000-2500'"
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'res'
op|'.'
name|'app_iter'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'kaboomed'
op|'['
number|'0'
op|']'
op|'>='
number|'1'
op|')'
comment|'# sanity check'
newline|'\n'
nl|'\n'
name|'ct'
op|','
name|'params'
op|'='
name|'parse_content_type'
op|'('
name|'res'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ct'
op|','
string|"'multipart/byteranges'"
op|')'
comment|'# sanity check'
newline|'\n'
name|'boundary'
op|'='
name|'dict'
op|'('
name|'params'
op|')'
op|'.'
name|'get'
op|'('
string|"'boundary'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'boundary'
name|'is'
name|'not'
name|'None'
op|')'
comment|'# sanity check'
newline|'\n'
name|'got_byteranges'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'mime_doc_fh'
name|'in'
name|'iter_multipart_mime_documents'
op|'('
name|'StringIO'
op|'('
name|'body'
op|')'
op|','
nl|'\n'
name|'boundary'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rfc822'
op|'.'
name|'Message'
op|'('
name|'mime_doc_fh'
op|','
number|'0'
op|')'
newline|'\n'
name|'body'
op|'='
name|'mime_doc_fh'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'got_byteranges'
op|'.'
name|'append'
op|'('
name|'body'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|'['
number|'0'
op|']'
op|')'
op|','
number|'501'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'0'
op|']'
op|','
name|'obj'
op|'['
op|':'
number|'501'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|'['
number|'1'
op|']'
op|')'
op|','
number|'501'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'1'
op|']'
op|','
name|'obj'
op|'['
number|'1000'
op|':'
number|'1501'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|'['
number|'2'
op|']'
op|')'
op|','
number|'501'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'2'
op|']'
op|','
name|'obj'
op|'['
number|'2000'
op|':'
number|'2501'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Multi-range resume, first GET dies in the middle of the second'
nl|'\n'
comment|'# byterange'
nl|'\n'
name|'bytes_before_timeout'
op|'['
number|'0'
op|']'
op|'='
number|'750'
newline|'\n'
name|'kaboomed'
op|'['
number|'0'
op|']'
op|'='
number|'0'
newline|'\n'
name|'sabotaged'
op|'['
number|'0'
op|']'
op|'='
name|'False'
newline|'\n'
name|'prosrv'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
comment|'# clear out errors'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'proxy_base'
op|','
string|"'http_response_to_document_iters'"
op|','
nl|'\n'
name|'single_sabotage_hrtdi'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
name|'path'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=0-500,1000-1500,2000-2500'"
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'res'
op|'.'
name|'app_iter'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'kaboomed'
op|'['
number|'0'
op|']'
op|'>='
number|'1'
op|')'
comment|'# sanity check'
newline|'\n'
nl|'\n'
name|'ct'
op|','
name|'params'
op|'='
name|'parse_content_type'
op|'('
name|'res'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ct'
op|','
string|"'multipart/byteranges'"
op|')'
comment|'# sanity check'
newline|'\n'
name|'boundary'
op|'='
name|'dict'
op|'('
name|'params'
op|')'
op|'.'
name|'get'
op|'('
string|"'boundary'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'boundary'
name|'is'
name|'not'
name|'None'
op|')'
comment|'# sanity check'
newline|'\n'
name|'got_byteranges'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'mime_doc_fh'
name|'in'
name|'iter_multipart_mime_documents'
op|'('
name|'StringIO'
op|'('
name|'body'
op|')'
op|','
nl|'\n'
name|'boundary'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rfc822'
op|'.'
name|'Message'
op|'('
name|'mime_doc_fh'
op|','
number|'0'
op|')'
newline|'\n'
name|'body'
op|'='
name|'mime_doc_fh'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'got_byteranges'
op|'.'
name|'append'
op|'('
name|'body'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|'['
number|'0'
op|']'
op|')'
op|','
number|'501'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'0'
op|']'
op|','
name|'obj'
op|'['
op|':'
number|'501'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|'['
number|'1'
op|']'
op|')'
op|','
number|'501'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'1'
op|']'
op|','
name|'obj'
op|'['
number|'1000'
op|':'
number|'1501'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|'['
number|'2'
op|']'
op|')'
op|','
number|'501'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'2'
op|']'
op|','
name|'obj'
op|'['
number|'2000'
op|':'
number|'2501'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_PUT_ec
name|'def'
name|'test_PUT_ec'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'3'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'put_container'
op|'('
string|'"ec"'
op|','
string|'"ec-con"'
op|')'
newline|'\n'
nl|'\n'
name|'obj'
op|'='
string|"'abCD'"
op|'*'
number|'10'
comment|"# small, so we don't get multiple EC stripes"
newline|'\n'
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/ec-con/o1 HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|'\'Etag: "%s"\\r\\n\''
nl|'\n'
string|"'Content-Length: %d\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'md5'
op|'('
name|'obj'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
name|'len'
op|'('
name|'obj'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'ecd'
op|'='
name|'policy'
op|'.'
name|'pyeclib_driver'
newline|'\n'
name|'expected_pieces'
op|'='
name|'set'
op|'('
name|'ecd'
op|'.'
name|'encode'
op|'('
name|'obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# go to disk to make sure it's there and all erasure-coded"
nl|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'policy'
op|'.'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'a'"
op|','
string|"'ec-con'"
op|','
string|"'o1'"
op|')'
newline|'\n'
name|'conf'
op|'='
op|'{'
string|"'devices'"
op|':'
name|'_testdir'
op|','
string|"'mount_check'"
op|':'
string|"'false'"
op|'}'
newline|'\n'
name|'df_mgr'
op|'='
name|'diskfile'
op|'.'
name|'DiskFileRouter'
op|'('
name|'conf'
op|','
name|'FakeLogger'
op|'('
op|')'
op|')'
op|'['
name|'policy'
op|']'
newline|'\n'
nl|'\n'
name|'got_pieces'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'got_indices'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'got_durable'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node_index'
op|','
name|'node'
name|'in'
name|'enumerate'
op|'('
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'partition'
op|','
nl|'\n'
string|"'a'"
op|','
string|"'ec-con'"
op|','
string|"'o1'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'policy'
op|')'
newline|'\n'
name|'with'
name|'df'
op|'.'
name|'open'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'meta'
op|'='
name|'df'
op|'.'
name|'get_metadata'
op|'('
op|')'
newline|'\n'
name|'contents'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'reader'
op|'('
op|')'
op|')'
newline|'\n'
name|'got_pieces'
op|'.'
name|'add'
op|'('
name|'contents'
op|')'
newline|'\n'
nl|'\n'
comment|'# check presence for a .durable file for the timestamp'
nl|'\n'
name|'durable_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
nl|'\n'
name|'_testdir'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'storage_directory'
op|'('
nl|'\n'
name|'diskfile'
op|'.'
name|'get_data_dir'
op|'('
name|'policy'
op|')'
op|','
nl|'\n'
name|'partition'
op|','
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'ec-con'"
op|','
string|"'o1'"
op|')'
op|')'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'Timestamp'
op|'('
name|'df'
op|'.'
name|'timestamp'
op|')'
op|'.'
name|'internal'
op|'+'
string|"'.durable'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isfile'
op|'('
name|'durable_file'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'got_durable'
op|'.'
name|'append'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'lmeta'
op|'='
name|'dict'
op|'('
op|'('
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
op|','
name|'v'
op|')'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'meta'
op|'.'
name|'items'
op|'('
op|')'
op|')'
newline|'\n'
name|'got_indices'
op|'.'
name|'add'
op|'('
nl|'\n'
name|'lmeta'
op|'['
string|"'x-object-sysmeta-ec-frag-index'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'lmeta'
op|'['
string|"'x-object-sysmeta-ec-etag'"
op|']'
op|','
nl|'\n'
name|'md5'
op|'('
name|'obj'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'lmeta'
op|'['
string|"'x-object-sysmeta-ec-content-length'"
op|']'
op|','
nl|'\n'
name|'str'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'lmeta'
op|'['
string|"'x-object-sysmeta-ec-segment-size'"
op|']'
op|','
nl|'\n'
string|"'4096'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'lmeta'
op|'['
string|"'x-object-sysmeta-ec-scheme'"
op|']'
op|','
nl|'\n'
string|"'jerasure_rs_vand 2+1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'lmeta'
op|'['
string|"'etag'"
op|']'
op|','
nl|'\n'
name|'md5'
op|'('
name|'contents'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_pieces'
op|','
name|'got_pieces'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'('
string|"'0'"
op|','
string|"'1'"
op|','
string|"'2'"
op|')'
op|')'
op|','
name|'got_indices'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify at least 2 puts made it all the way to the end of 2nd'
nl|'\n'
comment|'# phase, ie at least 2 .durable statuses were written'
nl|'\n'
name|'num_durable_puts'
op|'='
name|'sum'
op|'('
name|'d'
name|'is'
name|'True'
name|'for'
name|'d'
name|'in'
name|'got_durable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'num_durable_puts'
op|'>='
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_PUT_ec_multiple_segments
name|'def'
name|'test_PUT_ec_multiple_segments'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ec_policy'
op|'='
name|'POLICIES'
op|'['
number|'3'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'put_container'
op|'('
string|'"ec"'
op|','
string|'"ec-con"'
op|')'
newline|'\n'
nl|'\n'
name|'pyeclib_header_size'
op|'='
name|'len'
op|'('
name|'ec_policy'
op|'.'
name|'pyeclib_driver'
op|'.'
name|'encode'
op|'('
string|'""'
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'segment_size'
op|'='
name|'ec_policy'
op|'.'
name|'ec_segment_size'
newline|'\n'
nl|'\n'
comment|'# Big enough to have multiple segments. Also a multiple of the'
nl|'\n'
comment|'# segment size to get coverage of that path too.'
nl|'\n'
name|'obj'
op|'='
string|"'ABC'"
op|'*'
name|'segment_size'
newline|'\n'
nl|'\n'
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/ec-con/o2 HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'Content-Length: %d\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
comment|"# it's a 2+1 erasure code, so each fragment archive should be half"
nl|'\n'
comment|'# the length of the object, plus three inline pyeclib metadata'
nl|'\n'
comment|'# things (one per segment)'
nl|'\n'
name|'expected_length'
op|'='
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|'/'
number|'2'
op|'+'
name|'pyeclib_header_size'
op|'*'
number|'3'
op|')'
newline|'\n'
nl|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'ec_policy'
op|'.'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
string|"'a'"
op|','
string|"'ec-con'"
op|','
string|"'o2'"
op|')'
newline|'\n'
nl|'\n'
name|'conf'
op|'='
op|'{'
string|"'devices'"
op|':'
name|'_testdir'
op|','
string|"'mount_check'"
op|':'
string|"'false'"
op|'}'
newline|'\n'
name|'df_mgr'
op|'='
name|'diskfile'
op|'.'
name|'DiskFileRouter'
op|'('
name|'conf'
op|','
name|'FakeLogger'
op|'('
op|')'
op|')'
op|'['
name|'ec_policy'
op|']'
newline|'\n'
nl|'\n'
name|'got_durable'
op|'='
op|'['
op|']'
newline|'\n'
name|'fragment_archives'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'partition'
op|','
string|"'a'"
op|','
nl|'\n'
string|"'ec-con'"
op|','
string|"'o2'"
op|','
name|'policy'
op|'='
name|'ec_policy'
op|')'
newline|'\n'
name|'with'
name|'df'
op|'.'
name|'open'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'contents'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'reader'
op|'('
op|')'
op|')'
newline|'\n'
name|'fragment_archives'
op|'.'
name|'append'
op|'('
name|'contents'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'contents'
op|')'
op|','
name|'expected_length'
op|')'
newline|'\n'
nl|'\n'
comment|'# check presence for a .durable file for the timestamp'
nl|'\n'
name|'durable_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
nl|'\n'
name|'_testdir'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'storage_directory'
op|'('
nl|'\n'
name|'diskfile'
op|'.'
name|'get_data_dir'
op|'('
name|'ec_policy'
op|')'
op|','
nl|'\n'
name|'partition'
op|','
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'ec-con'"
op|','
string|"'o2'"
op|')'
op|')'
op|','
nl|'\n'
name|'utils'
op|'.'
name|'Timestamp'
op|'('
name|'df'
op|'.'
name|'timestamp'
op|')'
op|'.'
name|'internal'
op|'+'
string|"'.durable'"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isfile'
op|'('
name|'durable_file'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'got_durable'
op|'.'
name|'append'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
comment|'# Verify that we can decode each individual fragment and that they'
nl|'\n'
comment|'# are all the correct size'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'fragment_size'
op|'='
name|'ec_policy'
op|'.'
name|'fragment_size'
newline|'\n'
name|'nfragments'
op|'='
name|'int'
op|'('
nl|'\n'
name|'math'
op|'.'
name|'ceil'
op|'('
name|'float'
op|'('
name|'len'
op|'('
name|'fragment_archives'
op|'['
number|'0'
op|']'
op|')'
op|')'
op|'/'
name|'fragment_size'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'fragment_index'
name|'in'
name|'range'
op|'('
name|'nfragments'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fragment_start'
op|'='
name|'fragment_index'
op|'*'
name|'fragment_size'
newline|'\n'
name|'fragment_end'
op|'='
op|'('
name|'fragment_index'
op|'+'
number|'1'
op|')'
op|'*'
name|'fragment_size'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'frags'
op|'='
op|'['
name|'fa'
op|'['
name|'fragment_start'
op|':'
name|'fragment_end'
op|']'
nl|'\n'
name|'for'
name|'fa'
name|'in'
name|'fragment_archives'
op|']'
newline|'\n'
name|'seg'
op|'='
name|'ec_policy'
op|'.'
name|'pyeclib_driver'
op|'.'
name|'decode'
op|'('
name|'frags'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ECDriverError'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Failed to decode fragments %d; this probably "'
nl|'\n'
string|'"means the fragments are not the sizes they "'
nl|'\n'
string|'"should be"'
op|'%'
name|'fragment_index'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'segment_start'
op|'='
name|'fragment_index'
op|'*'
name|'segment_size'
newline|'\n'
name|'segment_end'
op|'='
op|'('
name|'fragment_index'
op|'+'
number|'1'
op|')'
op|'*'
name|'segment_size'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'seg'
op|','
name|'obj'
op|'['
name|'segment_start'
op|':'
name|'segment_end'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify at least 2 puts made it all the way to the end of 2nd'
nl|'\n'
comment|'# phase, ie at least 2 .durable statuses were written'
nl|'\n'
dedent|''
name|'num_durable_puts'
op|'='
name|'sum'
op|'('
name|'d'
name|'is'
name|'True'
name|'for'
name|'d'
name|'in'
name|'got_durable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'num_durable_puts'
op|'>='
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_PUT_ec_object_etag_mismatch
name|'def'
name|'test_PUT_ec_object_etag_mismatch'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ec_policy'
op|'='
name|'POLICIES'
op|'['
number|'3'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'put_container'
op|'('
string|'"ec"'
op|','
string|'"ec-con"'
op|')'
newline|'\n'
nl|'\n'
name|'obj'
op|'='
string|"'90:6A:02:60:B1:08-96da3e706025537fc42464916427727e'"
newline|'\n'
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'prosrv'
op|'='
name|'_test_servers'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/ec-con/o3 HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'Etag: %s\\r\\n'"
nl|'\n'
string|"'Content-Length: %d\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'md5'
op|'('
string|"'something else'"
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
name|'len'
op|'('
name|'obj'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 422'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
comment|'# nothing should have made it to disk on the object servers'
nl|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'prosrv'
op|'.'
name|'get_object_ring'
op|'('
number|'3'
op|')'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
string|"'a'"
op|','
string|"'ec-con'"
op|','
string|"'o3'"
op|')'
newline|'\n'
name|'conf'
op|'='
op|'{'
string|"'devices'"
op|':'
name|'_testdir'
op|','
string|"'mount_check'"
op|':'
string|"'false'"
op|'}'
newline|'\n'
nl|'\n'
name|'df_mgr'
op|'='
name|'diskfile'
op|'.'
name|'DiskFileRouter'
op|'('
name|'conf'
op|','
name|'FakeLogger'
op|'('
op|')'
op|')'
op|'['
name|'ec_policy'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'partition'
op|','
nl|'\n'
string|"'a'"
op|','
string|"'ec-con'"
op|','
string|"'o3'"
op|','
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'DiskFileNotExist'
op|','
name|'df'
op|'.'
name|'open'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_PUT_ec_fragment_archive_etag_mismatch
name|'def'
name|'test_PUT_ec_fragment_archive_etag_mismatch'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ec_policy'
op|'='
name|'POLICIES'
op|'['
number|'3'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'put_container'
op|'('
string|'"ec"'
op|','
string|'"ec-con"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Cause a hash mismatch by feeding one particular MD5 hasher some'
nl|'\n'
comment|'# extra data. The goal here is to get exactly one of the hashers in'
nl|'\n'
comment|'# an object server.'
nl|'\n'
name|'countdown'
op|'='
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
DECL|function|busted_md5_constructor
name|'def'
name|'busted_md5_constructor'
op|'('
name|'initial_str'
op|'='
string|'""'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'hasher'
op|'='
name|'md5'
op|'('
name|'initial_str'
op|')'
newline|'\n'
name|'if'
name|'countdown'
op|'['
number|'0'
op|']'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'hasher'
op|'.'
name|'update'
op|'('
string|"'wrong'"
op|')'
newline|'\n'
dedent|''
name|'countdown'
op|'['
number|'0'
op|']'
op|'-='
number|'1'
newline|'\n'
name|'return'
name|'hasher'
newline|'\n'
nl|'\n'
dedent|''
name|'obj'
op|'='
string|"'uvarovite-esurience-cerated-symphysic'"
newline|'\n'
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'prosrv'
op|'='
name|'_test_servers'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.server.md5'"
op|','
name|'busted_md5_constructor'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/ec-con/pimento HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'Etag: %s\\r\\n'"
nl|'\n'
string|"'Content-Length: %d\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'md5'
op|'('
name|'obj'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
name|'len'
op|'('
name|'obj'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
dedent|''
name|'exp'
op|'='
string|"'HTTP/1.1 503'"
comment|'# no quorum'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
comment|'# 2/3 of the fragment archives should have landed on disk'
nl|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'prosrv'
op|'.'
name|'get_object_ring'
op|'('
number|'3'
op|')'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
string|"'a'"
op|','
string|"'ec-con'"
op|','
string|"'pimento'"
op|')'
newline|'\n'
name|'conf'
op|'='
op|'{'
string|"'devices'"
op|':'
name|'_testdir'
op|','
string|"'mount_check'"
op|':'
string|"'false'"
op|'}'
newline|'\n'
nl|'\n'
name|'df_mgr'
op|'='
name|'diskfile'
op|'.'
name|'DiskFileRouter'
op|'('
name|'conf'
op|','
name|'FakeLogger'
op|'('
op|')'
op|')'
op|'['
name|'ec_policy'
op|']'
newline|'\n'
nl|'\n'
name|'found'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'partition'
op|','
nl|'\n'
string|"'a'"
op|','
string|"'ec-con'"
op|','
string|"'pimento'"
op|','
nl|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
comment|"# diskfile open won't succeed because no durable was written,"
nl|'\n'
comment|'# so look under the hood for data files.'
nl|'\n'
indent|'                '
name|'files'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'num_data_files'
op|'='
name|'len'
op|'('
op|'['
name|'f'
name|'for'
name|'f'
name|'in'
name|'files'
name|'if'
name|'f'
op|'.'
name|'endswith'
op|'('
string|"'.data'"
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'num_data_files'
op|')'
newline|'\n'
name|'found'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'found'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_PUT_ec_if_none_match
name|'def'
name|'test_PUT_ec_if_none_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'put_container'
op|'('
string|'"ec"'
op|','
string|'"ec-con"'
op|')'
newline|'\n'
nl|'\n'
name|'obj'
op|'='
string|"'ananepionic-lepidophyllous-ropewalker-neglectful'"
newline|'\n'
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/ec-con/inm HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|'\'Etag: "%s"\\r\\n\''
nl|'\n'
string|"'Content-Length: %d\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'md5'
op|'('
name|'obj'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
name|'len'
op|'('
name|'obj'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/ec-con/inm HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'If-None-Match: *\\r\\n'"
nl|'\n'
string|'\'Etag: "%s"\\r\\n\''
nl|'\n'
string|"'Content-Length: %d\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'md5'
op|'('
name|'obj'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
name|'len'
op|'('
name|'obj'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 412'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_GET_ec
name|'def'
name|'test_GET_ec'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'put_container'
op|'('
string|'"ec"'
op|','
string|'"ec-con"'
op|')'
newline|'\n'
nl|'\n'
name|'obj'
op|'='
string|"'0123456'"
op|'*'
number|'11'
op|'*'
number|'17'
newline|'\n'
nl|'\n'
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/ec-con/go-get-it HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'Content-Length: %d\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'X-Object-Meta-Color: chartreuse\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/ec-con/go-get-it HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
name|'parse_headers_string'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|')'
op|','
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'md5'
op|'('
name|'obj'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
name|'headers'
op|'['
string|"'Etag'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'chartreuse'"
op|','
name|'headers'
op|'['
string|"'X-Object-Meta-Color'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'gotten_obj'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'buf'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
number|'64'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'buf'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'gotten_obj'
op|'+='
name|'buf'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'obj'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_conditional_GET_ec
name|'def'
name|'test_conditional_GET_ec'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'put_container'
op|'('
string|'"ec"'
op|','
string|'"ec-con"'
op|')'
newline|'\n'
nl|'\n'
name|'obj'
op|'='
string|"'this object has an etag and is otherwise unimportant'"
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
name|'obj'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'not_etag'
op|'='
name|'md5'
op|'('
name|'obj'
op|'+'
string|'"blahblah"'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'prosrv'
op|'='
name|'_test_servers'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/ec-con/conditionals HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'Content-Length: %d\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'verb'
name|'in'
op|'('
string|"'GET'"
op|','
string|"'HEAD'"
op|')'
op|':'
newline|'\n'
comment|'# If-Match'
nl|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/ec-con/conditionals'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'verb'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-Match'"
op|':'
name|'etag'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/ec-con/conditionals'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'verb'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-Match'"
op|':'
name|'not_etag'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'412'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/ec-con/conditionals'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'verb'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-Match'"
op|':'
string|'"*"'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
comment|'# If-None-Match'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/ec-con/conditionals'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'verb'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-None-Match'"
op|':'
name|'etag'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'304'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/ec-con/conditionals'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'verb'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-None-Match'"
op|':'
name|'not_etag'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/ec-con/conditionals'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'verb'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-None-Match'"
op|':'
string|'"*"'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'304'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_GET_ec_big
name|'def'
name|'test_GET_ec_big'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'put_container'
op|'('
string|'"ec"'
op|','
string|'"ec-con"'
op|')'
newline|'\n'
nl|'\n'
comment|'# our EC segment size is 4 KiB, so this is multiple (3) segments;'
nl|'\n'
comment|"# we'll verify that with a sanity check"
nl|'\n'
name|'obj'
op|'='
string|"'a moose once bit my sister'"
op|'*'
number|'400'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'len'
op|'('
name|'obj'
op|')'
op|'>'
name|'POLICIES'
op|'.'
name|'get_by_name'
op|'('
string|'"ec"'
op|')'
op|'.'
name|'ec_segment_size'
op|'*'
number|'2'
op|','
nl|'\n'
string|'"object is too small for proper testing"'
op|')'
newline|'\n'
nl|'\n'
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/ec-con/big-obj-get HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'Content-Length: %d\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/ec-con/big-obj-get HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
name|'parse_headers_string'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|')'
op|','
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'md5'
op|'('
name|'obj'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
name|'headers'
op|'['
string|"'Etag'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'gotten_obj'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'buf'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
number|'64'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'buf'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'gotten_obj'
op|'+='
name|'buf'
newline|'\n'
comment|'# This may look like a redundant test, but when things fail, this'
nl|'\n'
comment|'# has a useful failure message while the subsequent one spews piles'
nl|'\n'
comment|"# of garbage and demolishes your terminal's scrollback buffer."
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|','
name|'len'
op|'('
name|'obj'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'obj'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_GET_ec_failure_handling
name|'def'
name|'test_GET_ec_failure_handling'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'put_container'
op|'('
string|'"ec"'
op|','
string|'"ec-con"'
op|')'
newline|'\n'
nl|'\n'
name|'obj'
op|'='
string|"'look at this object; it is simply amazing '"
op|'*'
number|'500'
newline|'\n'
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/ec-con/crash-test-dummy HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'Content-Length: %d\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
DECL|function|explodey_iter
name|'def'
name|'explodey_iter'
op|'('
name|'inner_iter'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'next'
op|'('
name|'inner_iter'
op|')'
newline|'\n'
name|'raise'
name|'Exception'
op|'('
string|'"doom ba doom"'
op|')'
newline|'\n'
nl|'\n'
DECL|function|explodey_doc_parts_iter
dedent|''
name|'def'
name|'explodey_doc_parts_iter'
op|'('
name|'inner_iter_iter'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'item'
name|'in'
name|'inner_iter_iter'
op|':'
newline|'\n'
indent|'                '
name|'item'
op|'='
name|'item'
op|'.'
name|'copy'
op|'('
op|')'
comment|'# paranoia about mutable data'
newline|'\n'
name|'item'
op|'['
string|"'part_iter'"
op|']'
op|'='
name|'explodey_iter'
op|'('
name|'item'
op|'['
string|"'part_iter'"
op|']'
op|')'
newline|'\n'
name|'yield'
name|'item'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'real_ec_app_iter'
op|'='
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'obj'
op|'.'
name|'ECAppIter'
newline|'\n'
nl|'\n'
DECL|function|explodey_ec_app_iter
name|'def'
name|'explodey_ec_app_iter'
op|'('
name|'path'
op|','
name|'policy'
op|','
name|'iterators'
op|','
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
comment|'# Each thing in `iterators` here is a document-parts iterator,'
nl|'\n'
comment|'# and we want to fail after getting a little into each part.'
nl|'\n'
comment|'#'
nl|'\n'
comment|"# That way, we ensure we've started streaming the response to"
nl|'\n'
comment|'# the client when things go wrong.'
nl|'\n'
indent|'            '
name|'return'
name|'real_ec_app_iter'
op|'('
nl|'\n'
name|'path'
op|','
name|'policy'
op|','
nl|'\n'
op|'['
name|'explodey_doc_parts_iter'
op|'('
name|'i'
op|')'
name|'for'
name|'i'
name|'in'
name|'iterators'
op|']'
op|','
nl|'\n'
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|'"swift.proxy.controllers.obj.ECAppIter"'
op|','
nl|'\n'
name|'explodey_ec_app_iter'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/ec-con/crash-test-dummy HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
name|'parse_headers_string'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|')'
op|','
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'md5'
op|'('
name|'obj'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
name|'headers'
op|'['
string|"'Etag'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'gotten_obj'
op|'='
string|"''"
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'Timeout'
op|'('
number|'300'
op|')'
op|':'
comment|"# don't hang the testrun when this fails"
newline|'\n'
indent|'                    '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                        '
name|'buf'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
number|'64'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'buf'
op|':'
newline|'\n'
indent|'                            '
name|'break'
newline|'\n'
dedent|''
name|'gotten_obj'
op|'+='
name|'buf'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
name|'Timeout'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"GET hung when connection failed"'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure we failed partway through, otherwise the mocks could'
nl|'\n'
comment|'# get out of date without anyone noticing'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
number|'0'
op|'<'
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|'<'
name|'len'
op|'('
name|'obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_HEAD_ec
name|'def'
name|'test_HEAD_ec'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'put_container'
op|'('
string|'"ec"'
op|','
string|'"ec-con"'
op|')'
newline|'\n'
nl|'\n'
name|'obj'
op|'='
string|"'0123456'"
op|'*'
number|'11'
op|'*'
number|'17'
newline|'\n'
nl|'\n'
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/ec-con/go-head-it HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'Content-Length: %d\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'X-Object-Meta-Color: chartreuse\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'HEAD /v1/a/ec-con/go-head-it HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
name|'parse_headers_string'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'str'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|')'
op|','
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'md5'
op|'('
name|'obj'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
name|'headers'
op|'['
string|"'Etag'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'chartreuse'"
op|','
name|'headers'
op|'['
string|"'X-Object-Meta-Color'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_GET_ec_404
name|'def'
name|'test_GET_ec_404'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'put_container'
op|'('
string|'"ec"'
op|','
string|'"ec-con"'
op|')'
newline|'\n'
nl|'\n'
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/ec-con/yes-we-have-no-bananas HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 404'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_HEAD_ec_404
name|'def'
name|'test_HEAD_ec_404'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'put_container'
op|'('
string|'"ec"'
op|','
string|'"ec-con"'
op|')'
newline|'\n'
nl|'\n'
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'HEAD /v1/a/ec-con/yes-we-have-no-bananas HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 404'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_expect_header_zero_content_length
dedent|''
name|'def'
name|'test_PUT_expect_header_zero_content_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_errors'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|test_connect
name|'def'
name|'test_connect'
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'method'
op|','
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
name|'None'
op|','
name|'query_string'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'path'
op|'=='
string|"'/a/c/o.jpg'"
op|':'
newline|'\n'
indent|'                '
name|'if'
string|"'expect'"
name|'in'
name|'headers'
name|'or'
string|"'Expect'"
name|'in'
name|'headers'
op|':'
newline|'\n'
indent|'                    '
name|'test_errors'
op|'.'
name|'append'
op|'('
string|"'Expect was in headers for object '"
nl|'\n'
string|"'server!'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
comment|"# The (201, Exception('test')) tuples in there have the effect of"
nl|'\n'
comment|'# changing the status of the initial expect response.  The default'
nl|'\n'
comment|'# expect response from FakeConn for 201 is 100.'
nl|'\n'
comment|"# But the object server won't send a 100 continue line if the"
nl|'\n'
comment|"# client doesn't send a expect 100 header (as is the case with"
nl|'\n'
comment|'# zero byte PUTs as validated by this test), nevertheless the'
nl|'\n'
comment|'# object controller calls getexpect without prejudice.  In this'
nl|'\n'
comment|'# case the status from the response shows up early in getexpect'
nl|'\n'
comment|'# instead of having to wait until getresponse.  The Exception is'
nl|'\n'
comment|'# in there to ensure that the object controller also *uses* the'
nl|'\n'
comment|'# result of getexpect instead of calling getresponse in which case'
nl|'\n'
comment|'# our FakeConn will blow up.'
nl|'\n'
name|'success_codes'
op|'='
op|'['
op|'('
number|'201'
op|','
name|'Exception'
op|'('
string|"'test'"
op|')'
op|')'
op|']'
op|'*'
number|'3'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
op|'*'
name|'success_codes'
op|','
nl|'\n'
name|'give_connect'
op|'='
name|'test_connect'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o.jpg'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_errors'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|'.'
name|'status'
op|'.'
name|'startswith'
op|'('
string|"'201 '"
op|')'
op|','
name|'res'
op|'.'
name|'status'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_expect_header_nonzero_content_length
dedent|''
dedent|''
name|'def'
name|'test_PUT_expect_header_nonzero_content_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_errors'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|test_connect
name|'def'
name|'test_connect'
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'method'
op|','
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
name|'None'
op|','
name|'query_string'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'path'
op|'=='
string|"'/a/c/o.jpg'"
op|':'
newline|'\n'
indent|'                '
name|'if'
string|"'Expect'"
name|'not'
name|'in'
name|'headers'
op|':'
newline|'\n'
indent|'                    '
name|'test_errors'
op|'.'
name|'append'
op|'('
string|"'Expect was not in headers for '"
nl|'\n'
string|"'non-zero byte PUT!'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o.jpg'"
op|')'
newline|'\n'
comment|'# the (100, 201) tuples in there are just being extra explicit'
nl|'\n'
comment|'# about the FakeConn returning the 100 Continue status when the'
nl|'\n'
comment|"# object controller calls getexpect.  Which is FakeConn's default"
nl|'\n'
comment|'# for 201 if no expect_status is specified.'
nl|'\n'
name|'success_codes'
op|'='
op|'['
op|'('
number|'100'
op|','
number|'201'
op|')'
op|']'
op|'*'
number|'3'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
op|'*'
name|'success_codes'
op|','
nl|'\n'
name|'give_connect'
op|'='
name|'test_connect'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o.jpg'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'1'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
string|"'a'"
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_errors'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|'.'
name|'status'
op|'.'
name|'startswith'
op|'('
string|"'201 '"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_respects_write_affinity
dedent|''
dedent|''
name|'def'
name|'test_PUT_respects_write_affinity'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'written_to'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|test_connect
name|'def'
name|'test_connect'
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'method'
op|','
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
name|'None'
op|','
name|'query_string'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'path'
op|'=='
string|"'/a/c/o.jpg'"
op|':'
newline|'\n'
indent|'                '
name|'written_to'
op|'.'
name|'append'
op|'('
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
DECL|function|is_r0
indent|'            '
name|'def'
name|'is_r0'
op|'('
name|'node'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'node'
op|'['
string|"'region'"
op|']'
op|'=='
number|'0'
newline|'\n'
nl|'\n'
dedent|''
name|'object_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'object_ring'
op|'.'
name|'max_more_nodes'
op|'='
number|'100'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'write_affinity_is_local_fn'
op|'='
name|'is_r0'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'write_affinity_node_count'
op|'='
name|'lambda'
name|'r'
op|':'
number|'3'
newline|'\n'
nl|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o.jpg'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
name|'give_connect'
op|'='
name|'test_connect'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o.jpg'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'1'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
string|"'a'"
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|'.'
name|'status'
op|'.'
name|'startswith'
op|'('
string|"'201 '"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'written_to'
op|')'
op|')'
newline|'\n'
name|'for'
name|'ip'
op|','
name|'port'
op|','
name|'device'
name|'in'
name|'written_to'
op|':'
newline|'\n'
comment|'# this is kind of a hokey test, but in FakeRing, the port is even'
nl|'\n'
comment|'# when the region is 0, and odd when the region is 1, so this test'
nl|'\n'
comment|'# asserts that we only wrote to nodes in region 0.'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'port'
op|'%'
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_respects_write_affinity_with_507s
dedent|''
dedent|''
name|'def'
name|'test_PUT_respects_write_affinity_with_507s'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'written_to'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|test_connect
name|'def'
name|'test_connect'
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'method'
op|','
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
name|'None'
op|','
name|'query_string'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'path'
op|'=='
string|"'/a/c/o.jpg'"
op|':'
newline|'\n'
indent|'                '
name|'written_to'
op|'.'
name|'append'
op|'('
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
DECL|function|is_r0
indent|'            '
name|'def'
name|'is_r0'
op|'('
name|'node'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'node'
op|'['
string|"'region'"
op|']'
op|'=='
number|'0'
newline|'\n'
nl|'\n'
dedent|''
name|'object_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'object_ring'
op|'.'
name|'max_more_nodes'
op|'='
number|'100'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'write_affinity_is_local_fn'
op|'='
name|'is_r0'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'write_affinity_node_count'
op|'='
name|'lambda'
name|'r'
op|':'
number|'3'
newline|'\n'
nl|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o.jpg'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_limit'
op|'('
nl|'\n'
name|'object_ring'
op|'.'
name|'get_part_nodes'
op|'('
number|'1'
op|')'
op|'['
number|'0'
op|']'
op|','
string|"'test'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
comment|'# account, container'
nl|'\n'
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
comment|'# 3 working backends'
nl|'\n'
name|'give_connect'
op|'='
name|'test_connect'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o.jpg'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'1'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
string|"'a'"
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res'
op|'.'
name|'status'
op|'.'
name|'startswith'
op|'('
string|"'201 '"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'written_to'
op|')'
op|')'
newline|'\n'
comment|'# this is kind of a hokey test, but in FakeRing, the port is even when'
nl|'\n'
comment|'# the region is 0, and odd when the region is 1, so this test asserts'
nl|'\n'
comment|'# that we wrote to 2 nodes in region 0, then went to 1 non-r0 node.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'written_to'
op|'['
number|'0'
op|']'
op|'['
number|'1'
op|']'
op|'%'
number|'2'
op|')'
comment|"# it's (ip, port, device)"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'written_to'
op|'['
number|'1'
op|']'
op|'['
number|'1'
op|']'
op|'%'
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
number|'0'
op|','
name|'written_to'
op|'['
number|'2'
op|']'
op|'['
number|'1'
op|']'
op|'%'
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_PUT_no_etag_fallocate
name|'def'
name|'test_PUT_no_etag_fallocate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.diskfile.fallocate'"
op|')'
name|'as'
name|'mock_fallocate'
op|':'
newline|'\n'
indent|'            '
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'obj'
op|'='
string|"'hemoleucocytic-surfactant'"
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/c/o HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'Content-Length: %d\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
dedent|''
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
comment|'# one for each obj server; this test has 2'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'mock_fallocate'
op|'.'
name|'mock_calls'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_PUT_message_length_using_content_length
name|'def'
name|'test_PUT_message_length_using_content_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'obj'
op|'='
string|"'j'"
op|'*'
number|'20'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/c/o.content-length HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: %s\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'str'
op|'('
name|'len'
op|'('
name|'obj'
op|')'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_PUT_message_length_using_transfer_encoding
name|'def'
name|'test_PUT_message_length_using_transfer_encoding'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/c/o.chunked HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'Transfer-Encoding: chunked\\r\\n\\r\\n'"
nl|'\n'
string|"'2\\r\\n'"
nl|'\n'
string|"'oh\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' say\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' can\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' you\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' see\\r\\n'"
nl|'\n'
string|"'3\\r\\n'"
nl|'\n'
string|"' by\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' the\\r\\n'"
nl|'\n'
string|"'8\\r\\n'"
nl|'\n'
string|"' dawns\\'\\n\\r\\n'"
nl|'\n'
string|"'0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_PUT_message_length_using_both
name|'def'
name|'test_PUT_message_length_using_both'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/c/o.chunked HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'Content-Length: 33\\r\\n'"
nl|'\n'
string|"'Transfer-Encoding: chunked\\r\\n\\r\\n'"
nl|'\n'
string|"'2\\r\\n'"
nl|'\n'
string|"'oh\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' say\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' can\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' you\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' see\\r\\n'"
nl|'\n'
string|"'3\\r\\n'"
nl|'\n'
string|"' by\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' the\\r\\n'"
nl|'\n'
string|"'8\\r\\n'"
nl|'\n'
string|"' dawns\\'\\n\\r\\n'"
nl|'\n'
string|"'0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_PUT_bad_message_length
name|'def'
name|'test_PUT_bad_message_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/c/o.chunked HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'Content-Length: 33\\r\\n'"
nl|'\n'
string|"'Transfer-Encoding: gzip\\r\\n\\r\\n'"
nl|'\n'
string|"'2\\r\\n'"
nl|'\n'
string|"'oh\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' say\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' can\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' you\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' see\\r\\n'"
nl|'\n'
string|"'3\\r\\n'"
nl|'\n'
string|"' by\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' the\\r\\n'"
nl|'\n'
string|"'8\\r\\n'"
nl|'\n'
string|"' dawns\\'\\n\\r\\n'"
nl|'\n'
string|"'0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 400'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_PUT_message_length_unsup_xfr_encoding
name|'def'
name|'test_PUT_message_length_unsup_xfr_encoding'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/c/o.chunked HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'Content-Length: 33\\r\\n'"
nl|'\n'
string|"'Transfer-Encoding: gzip,chunked\\r\\n\\r\\n'"
nl|'\n'
string|"'2\\r\\n'"
nl|'\n'
string|"'oh\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' say\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' can\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' you\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' see\\r\\n'"
nl|'\n'
string|"'3\\r\\n'"
nl|'\n'
string|"' by\\r\\n'"
nl|'\n'
string|"'4\\r\\n'"
nl|'\n'
string|"' the\\r\\n'"
nl|'\n'
string|"'8\\r\\n'"
nl|'\n'
string|"' dawns\\'\\n\\r\\n'"
nl|'\n'
string|"'0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 501'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_PUT_message_length_too_large
name|'def'
name|'test_PUT_message_length_too_large'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.constraints.MAX_FILE_SIZE'"
op|','
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/c/o.chunked HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'Content-Length: 33\\r\\n\\r\\n'"
nl|'\n'
string|"'oh say can you see by the dawns\\'\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 413'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_PUT_last_modified
name|'def'
name|'test_PUT_last_modified'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/c/o.last_modified HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\nConnection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\nContent-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'lm_hdr'
op|'='
string|"'Last-Modified: '"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'last_modified_put'
op|'='
op|'['
name|'line'
name|'for'
name|'line'
name|'in'
name|'headers'
op|'.'
name|'split'
op|'('
string|"'\\r\\n'"
op|')'
nl|'\n'
name|'if'
name|'lm_hdr'
name|'in'
name|'line'
op|']'
op|'['
number|'0'
op|']'
op|'['
name|'len'
op|'('
name|'lm_hdr'
op|')'
op|':'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'HEAD /v1/a/c/o.last_modified HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\nConnection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'last_modified_head'
op|'='
op|'['
name|'line'
name|'for'
name|'line'
name|'in'
name|'headers'
op|'.'
name|'split'
op|'('
string|"'\\r\\n'"
op|')'
nl|'\n'
name|'if'
name|'lm_hdr'
name|'in'
name|'line'
op|']'
op|'['
number|'0'
op|']'
op|'['
name|'len'
op|'('
name|'lm_hdr'
op|')'
op|':'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'last_modified_put'
op|','
name|'last_modified_head'
op|')'
newline|'\n'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/c/o.last_modified HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\nConnection: close\\r\\n'"
nl|'\n'
string|"'If-Modified-Since: %s\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n\\r\\n'"
op|'%'
name|'last_modified_put'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 304'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/c/o.last_modified HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\nConnection: close\\r\\n'"
nl|'\n'
string|"'If-Unmodified-Since: %s\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n\\r\\n'"
op|'%'
name|'last_modified_put'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_auto_content_type
dedent|''
name|'def'
name|'test_PUT_auto_content_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_content_type
name|'def'
name|'test_content_type'
op|'('
name|'filename'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
comment|'# The three responses here are for account_info() (HEAD to'
nl|'\n'
comment|'# account server), container_info() (HEAD to container server)'
nl|'\n'
comment|'# and three calls to _connect_put_node() (PUT to three object'
nl|'\n'
comment|'# servers)'
nl|'\n'
indent|'                '
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
name|'give_content_type'
op|'='
name|'lambda'
name|'content_type'
op|':'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'content_type'
op|','
nl|'\n'
name|'next'
op|'('
name|'expected'
op|')'
op|')'
op|')'
newline|'\n'
comment|'# We need into include a transfer-encoding to get past'
nl|'\n'
comment|'# constraints.check_object_creation()'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/%s'"
op|'%'
name|'filename'
op|','
op|'{'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'transfer-encoding'"
op|':'
string|"'chunked'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
comment|"# If we don't check the response here we could miss problems"
nl|'\n'
comment|'# in PUT()'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'test_content_type'
op|'('
string|"'test.jpg'"
op|','
name|'iter'
op|'('
op|'['
string|"''"
op|','
string|"''"
op|','
string|"'image/jpeg'"
op|','
nl|'\n'
string|"'image/jpeg'"
op|','
string|"'image/jpeg'"
op|']'
op|')'
op|')'
newline|'\n'
name|'test_content_type'
op|'('
string|"'test.html'"
op|','
name|'iter'
op|'('
op|'['
string|"''"
op|','
string|"''"
op|','
string|"'text/html'"
op|','
nl|'\n'
string|"'text/html'"
op|','
string|"'text/html'"
op|']'
op|')'
op|')'
newline|'\n'
name|'test_content_type'
op|'('
string|"'test.css'"
op|','
name|'iter'
op|'('
op|'['
string|"''"
op|','
string|"''"
op|','
string|"'text/css'"
op|','
nl|'\n'
string|"'text/css'"
op|','
string|"'text/css'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_custom_mime_types_files
dedent|''
dedent|''
name|'def'
name|'test_custom_mime_types_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'swift_dir'
op|'='
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'swift_dir'
op|','
string|"'mime.types'"
op|')'
op|','
string|"'w'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                '
name|'fp'
op|'.'
name|'write'
op|'('
string|"'foo/bar foo\\n'"
op|')'
newline|'\n'
dedent|''
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
string|"'swift_dir'"
op|':'
name|'swift_dir'
op|'}'
op|','
nl|'\n'
name|'FakeMemcache'
op|'('
op|')'
op|','
name|'FakeLogger'
op|'('
op|')'
op|','
nl|'\n'
name|'FakeRing'
op|'('
op|')'
op|','
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'proxy_server'
op|'.'
name|'mimetypes'
op|'.'
name|'guess_type'
op|'('
string|"'blah.foo'"
op|')'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'foo/bar'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'proxy_server'
op|'.'
name|'mimetypes'
op|'.'
name|'guess_type'
op|'('
string|"'blah.jpg'"
op|')'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'image/jpeg'"
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'rmtree'
op|'('
name|'swift_dir'
op|','
name|'ignore_errors'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT
dedent|''
dedent|''
name|'def'
name|'test_PUT'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_status_map
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o.jpg'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'str'
op|'('
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'expected'
op|')'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'500'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'204'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'204'
op|','
number|'500'
op|','
number|'404'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'202'
op|','
number|'204'
op|')'
op|','
number|'204'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_connect_exceptions
dedent|''
dedent|''
name|'def'
name|'test_PUT_connect_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_status_map
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o.jpg'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'HTTPException'
name|'as'
name|'res'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
name|'expected'
op|'='
name|'str'
op|'('
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'expected'
op|')'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
op|'-'
number|'1'
op|')'
op|','
number|'201'
op|')'
comment|'# connect exc'
newline|'\n'
comment|'# connect errors'
nl|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
name|'Timeout'
op|'('
op|')'
op|','
number|'201'
op|','
number|'201'
op|','
op|')'
op|','
number|'201'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
name|'Exception'
op|'('
op|')'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
comment|'# expect errors'
nl|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
op|'('
name|'Timeout'
op|'('
op|')'
op|','
name|'None'
op|')'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
op|'('
name|'Exception'
op|'('
op|')'
op|','
name|'None'
op|')'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
comment|'# response errors'
nl|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
op|'('
number|'100'
op|','
name|'Timeout'
op|'('
op|')'
op|')'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
op|'('
number|'100'
op|','
name|'Exception'
op|'('
op|')'
op|')'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'507'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|')'
comment|'# error limited'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
op|'-'
number|'1'
op|','
number|'201'
op|','
op|'-'
number|'1'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'503'
op|','
op|'-'
number|'1'
op|','
number|'503'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_send_exceptions
dedent|''
dedent|''
name|'def'
name|'test_PUT_send_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_status_map
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o.jpg'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"'some data'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'HTTPException'
name|'as'
name|'res'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
name|'expected'
op|'='
name|'str'
op|'('
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'expected'
op|')'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
op|'-'
number|'1'
op|','
number|'201'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
op|'-'
number|'1'
op|','
op|'-'
number|'1'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'503'
op|','
number|'503'
op|','
op|'-'
number|'1'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_max_size
dedent|''
dedent|''
name|'def'
name|'test_PUT_max_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
op|'}'
op|','
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'Content-Length'"
op|':'
name|'str'
op|'('
name|'constraints'
op|'.'
name|'MAX_FILE_SIZE'
op|'+'
number|'1'
op|')'
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'413'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_bad_content_type
dedent|''
dedent|''
name|'def'
name|'test_PUT_bad_content_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
op|'}'
op|','
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'Content-Length'"
op|':'
number|'0'
op|','
string|"'Content-Type'"
op|':'
string|"'foo/bar;swift_hey=45'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_getresponse_exceptions
dedent|''
dedent|''
name|'def'
name|'test_PUT_getresponse_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_status_map
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o.jpg'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'HTTPException'
name|'as'
name|'res'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
name|'expected'
op|'='
name|'str'
op|'('
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'str'
op|'('
name|'expected'
op|')'
op|')'
op|']'
op|','
nl|'\n'
name|'str'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
op|'-'
number|'1'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
op|'-'
number|'1'
op|','
op|'-'
number|'1'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'503'
op|','
number|'503'
op|','
op|'-'
number|'1'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST
dedent|''
dedent|''
name|'def'
name|'test_POST'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_post_as_copy'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|test_status_map
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
op|'}'
op|','
name|'method'
op|'='
string|"'POST'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'str'
op|'('
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'expected'
op|')'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'202'
op|','
number|'202'
op|')'
op|','
number|'202'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'202'
op|','
number|'500'
op|')'
op|','
number|'202'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'500'
op|','
number|'500'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'404'
op|','
number|'500'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'500'
op|','
number|'500'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'patch_policies'
op|'('
op|'['
nl|'\n'
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'is_default'
op|'='
name|'True'
op|','
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
DECL|member|test_POST_backend_headers
name|'def'
name|'test_POST_backend_headers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# reset the router post patch_policies'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'obj_controller_router'
op|'='
name|'proxy_server'
op|'.'
name|'ObjectControllerRouter'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_post_as_copy'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'sort_nodes'
op|'='
name|'lambda'
name|'nodes'
op|':'
name|'nodes'
newline|'\n'
name|'backend_requests'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|capture_requests
name|'def'
name|'capture_requests'
op|'('
name|'ip'
op|','
name|'port'
op|','
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|','
op|'*'
name|'args'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'backend_requests'
op|'.'
name|'append'
op|'('
op|'('
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
op|'}'
op|','
name|'method'
op|'='
string|"'POST'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Object-Meta-Color'"
op|':'
string|"'Blue'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# we want the container_info response to says a policy index of 1'
nl|'\n'
name|'resp_headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
number|'1'
op|'}'
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
nl|'\n'
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'202'
op|','
number|'202'
op|','
nl|'\n'
name|'headers'
op|'='
name|'resp_headers'
op|','
name|'give_connect'
op|'='
name|'capture_requests'
nl|'\n'
op|')'
name|'as'
name|'fake_conn'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'fake_conn'
op|'.'
name|'code_iter'
op|'.'
name|'next'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'backend_requests'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
nl|'\n'
DECL|function|check_request
name|'def'
name|'check_request'
op|'('
name|'req'
op|','
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req_method'
op|','
name|'req_path'
op|','
name|'req_headers'
op|'='
name|'req'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'method'
op|','
name|'req_method'
op|')'
newline|'\n'
comment|'# caller can ignore leading path parts'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'req_path'
op|'.'
name|'endswith'
op|'('
name|'path'
op|')'
op|','
nl|'\n'
string|"'expected path to end with %s, it was %s'"
op|'%'
op|'('
nl|'\n'
name|'path'
op|','
name|'req_path'
op|')'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'headers'
name|'or'
op|'{'
op|'}'
newline|'\n'
comment|'# caller can ignore some headers'
nl|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req_headers'
op|'['
name|'k'
op|']'
op|','
name|'v'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'account_request'
op|'='
name|'backend_requests'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'check_request'
op|'('
name|'account_request'
op|','
name|'method'
op|'='
string|"'HEAD'"
op|','
name|'path'
op|'='
string|"'/sda/0/a'"
op|')'
newline|'\n'
name|'container_request'
op|'='
name|'backend_requests'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'check_request'
op|'('
name|'container_request'
op|','
name|'method'
op|'='
string|"'HEAD'"
op|','
name|'path'
op|'='
string|"'/sda/0/a/c'"
op|')'
newline|'\n'
comment|'# make sure backend requests included expected container headers'
nl|'\n'
name|'container_headers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'request'
name|'in'
name|'backend_requests'
op|':'
newline|'\n'
indent|'            '
name|'req_headers'
op|'='
name|'request'
op|'['
number|'2'
op|']'
newline|'\n'
name|'device'
op|'='
name|'req_headers'
op|'['
string|"'x-container-device'"
op|']'
newline|'\n'
name|'host'
op|'='
name|'req_headers'
op|'['
string|"'x-container-host'"
op|']'
newline|'\n'
name|'container_headers'
op|'['
name|'device'
op|']'
op|'='
name|'host'
newline|'\n'
name|'expectations'
op|'='
op|'{'
nl|'\n'
string|"'method'"
op|':'
string|"'POST'"
op|','
nl|'\n'
string|"'path'"
op|':'
string|"'/0/a/c/o'"
op|','
nl|'\n'
string|"'headers'"
op|':'
op|'{'
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'Connection'"
op|':'
string|"'close'"
op|','
nl|'\n'
string|"'User-Agent'"
op|':'
string|"'proxy-server %s'"
op|'%'
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
op|','
nl|'\n'
string|"'Host'"
op|':'
string|"'localhost:80'"
op|','
nl|'\n'
string|"'Referer'"
op|':'
string|"'POST http://localhost/v1/a/c/o'"
op|','
nl|'\n'
string|"'X-Object-Meta-Color'"
op|':'
string|"'Blue'"
op|','
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
string|"'1'"
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'check_request'
op|'('
name|'request'
op|','
op|'**'
name|'expectations'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'expected'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'i'
op|','
name|'device'
name|'in'
name|'enumerate'
op|'('
op|'['
string|"'sda'"
op|','
string|"'sdb'"
op|','
string|"'sdc'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'expected'
op|'['
name|'device'
op|']'
op|'='
string|"'10.0.0.%d:100%d'"
op|'%'
op|'('
name|'i'
op|','
name|'i'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'container_headers'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
comment|'# and again with policy override'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'backend_requests'
op|'='
op|'['
op|']'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
op|'}'
op|','
name|'method'
op|'='
string|"'POST'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Object-Meta-Color'"
op|':'
string|"'Blue'"
op|','
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
nl|'\n'
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'202'
op|','
number|'202'
op|','
nl|'\n'
name|'headers'
op|'='
name|'resp_headers'
op|','
name|'give_connect'
op|'='
name|'capture_requests'
nl|'\n'
op|')'
name|'as'
name|'fake_conn'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'fake_conn'
op|'.'
name|'code_iter'
op|'.'
name|'next'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'backend_requests'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
name|'for'
name|'request'
name|'in'
name|'backend_requests'
op|'['
number|'2'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'expectations'
op|'='
op|'{'
nl|'\n'
string|"'method'"
op|':'
string|"'POST'"
op|','
nl|'\n'
string|"'path'"
op|':'
string|"'/0/a/c/o'"
op|','
comment|'# ignore device bit'
nl|'\n'
string|"'headers'"
op|':'
op|'{'
nl|'\n'
string|"'X-Object-Meta-Color'"
op|':'
string|"'Blue'"
op|','
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
string|"'0'"
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'check_request'
op|'('
name|'request'
op|','
op|'**'
name|'expectations'
op|')'
newline|'\n'
nl|'\n'
comment|'# and this time with post as copy'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_post_as_copy'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'backend_requests'
op|'='
op|'['
op|']'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
op|'}'
op|','
name|'method'
op|'='
string|"'POST'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Object-Meta-Color'"
op|':'
string|"'Blue'"
op|','
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
nl|'\n'
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
name|'headers'
op|'='
name|'resp_headers'
op|','
name|'give_connect'
op|'='
name|'capture_requests'
nl|'\n'
op|')'
name|'as'
name|'fake_conn'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'fake_conn'
op|'.'
name|'code_iter'
op|'.'
name|'next'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'backend_requests'
op|')'
op|','
number|'8'
op|')'
newline|'\n'
name|'policy0'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
string|"'0'"
op|'}'
newline|'\n'
name|'policy1'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
string|"'1'"
op|'}'
newline|'\n'
name|'expected'
op|'='
op|'['
nl|'\n'
comment|'# account info'
nl|'\n'
op|'{'
string|"'method'"
op|':'
string|"'HEAD'"
op|','
string|"'path'"
op|':'
string|"'/0/a'"
op|'}'
op|','
nl|'\n'
comment|'# container info'
nl|'\n'
op|'{'
string|"'method'"
op|':'
string|"'HEAD'"
op|','
string|"'path'"
op|':'
string|"'/0/a/c'"
op|'}'
op|','
nl|'\n'
comment|'# x-newests'
nl|'\n'
op|'{'
string|"'method'"
op|':'
string|"'GET'"
op|','
string|"'path'"
op|':'
string|"'/0/a/c/o'"
op|','
string|"'headers'"
op|':'
name|'policy1'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'method'"
op|':'
string|"'GET'"
op|','
string|"'path'"
op|':'
string|"'/0/a/c/o'"
op|','
string|"'headers'"
op|':'
name|'policy1'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'method'"
op|':'
string|"'GET'"
op|','
string|"'path'"
op|':'
string|"'/0/a/c/o'"
op|','
string|"'headers'"
op|':'
name|'policy1'
op|'}'
op|','
nl|'\n'
comment|'# new writes'
nl|'\n'
op|'{'
string|"'method'"
op|':'
string|"'PUT'"
op|','
string|"'path'"
op|':'
string|"'/0/a/c/o'"
op|','
string|"'headers'"
op|':'
name|'policy0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'method'"
op|':'
string|"'PUT'"
op|','
string|"'path'"
op|':'
string|"'/0/a/c/o'"
op|','
string|"'headers'"
op|':'
name|'policy0'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'method'"
op|':'
string|"'PUT'"
op|','
string|"'path'"
op|':'
string|"'/0/a/c/o'"
op|','
string|"'headers'"
op|':'
name|'policy0'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'request'
op|','
name|'expectations'
name|'in'
name|'zip'
op|'('
name|'backend_requests'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'check_request'
op|'('
name|'request'
op|','
op|'**'
name|'expectations'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_as_copy
dedent|''
dedent|''
name|'def'
name|'test_POST_as_copy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
DECL|function|test_status_map
indent|'            '
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'str'
op|'('
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'expected'
op|')'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'202'
op|','
number|'202'
op|')'
op|','
number|'202'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'202'
op|','
number|'500'
op|')'
op|','
number|'202'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'500'
op|','
number|'500'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'404'
op|','
number|'500'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'500'
op|','
number|'500'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_DELETE
dedent|''
dedent|''
name|'def'
name|'test_DELETE'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
DECL|function|test_status_map
indent|'            '
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'str'
op|'('
name|'expected'
op|')'
op|')'
op|']'
op|','
nl|'\n'
name|'str'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'204'
op|','
number|'204'
op|','
number|'204'
op|')'
op|','
number|'204'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'204'
op|','
number|'204'
op|','
number|'500'
op|')'
op|','
number|'204'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'204'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'204'
op|','
number|'500'
op|','
number|'500'
op|','
number|'404'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'400'
op|','
number|'400'
op|','
number|'400'
op|')'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_HEAD
dedent|''
dedent|''
name|'def'
name|'test_HEAD'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
DECL|function|test_status_map
indent|'            '
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'str'
op|'('
name|'expected'
op|')'
op|')'
op|']'
op|','
nl|'\n'
name|'str'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
name|'if'
name|'expected'
op|'<'
number|'400'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'x-works'"
name|'in'
name|'res'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'headers'
op|'['
string|"'x-works'"
op|']'
op|','
string|"'yes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'accept-ranges'"
name|'in'
name|'res'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'headers'
op|'['
string|"'accept-ranges'"
op|']'
op|','
string|"'bytes'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'200'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'500'
op|','
number|'404'
op|')'
op|','
number|'200'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'304'
op|','
number|'500'
op|','
number|'404'
op|')'
op|','
number|'304'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'500'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'500'
op|','
number|'500'
op|','
number|'500'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_HEAD_newest
dedent|''
dedent|''
name|'def'
name|'test_HEAD_newest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
DECL|function|test_status_map
indent|'            '
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|','
name|'timestamps'
op|','
nl|'\n'
name|'expected_timestamp'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
name|'timestamps'
op|'='
name|'timestamps'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'x-newest'"
op|':'
string|"'true'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'str'
op|'('
name|'expected'
op|')'
op|')'
op|']'
op|','
nl|'\n'
name|'str'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'last-modified'"
op|')'
op|','
nl|'\n'
name|'expected_timestamp'
op|')'
newline|'\n'
nl|'\n'
comment|'#                acct cont obj  obj  obj'
nl|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
string|"'1'"
op|','
nl|'\n'
string|"'2'"
op|','
string|"'3'"
op|')'
op|','
string|"'3'"
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
string|"'1'"
op|','
nl|'\n'
string|"'3'"
op|','
string|"'2'"
op|')'
op|','
string|"'3'"
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
string|"'1'"
op|','
nl|'\n'
string|"'3'"
op|','
string|"'1'"
op|')'
op|','
string|"'3'"
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
string|"'3'"
op|','
nl|'\n'
string|"'3'"
op|','
string|"'1'"
op|')'
op|','
string|"'3'"
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
string|"'1'"
op|')'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
string|"'1'"
op|')'
op|','
string|"'1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_GET_newest
dedent|''
dedent|''
name|'def'
name|'test_GET_newest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
DECL|function|test_status_map
indent|'            '
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|','
name|'timestamps'
op|','
nl|'\n'
name|'expected_timestamp'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
name|'timestamps'
op|'='
name|'timestamps'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'x-newest'"
op|':'
string|"'true'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'str'
op|'('
name|'expected'
op|')'
op|')'
op|']'
op|','
nl|'\n'
name|'str'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'last-modified'"
op|')'
op|','
nl|'\n'
name|'expected_timestamp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
string|"'1'"
op|','
nl|'\n'
string|"'2'"
op|','
string|"'3'"
op|')'
op|','
string|"'3'"
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
string|"'1'"
op|','
nl|'\n'
string|"'3'"
op|','
string|"'2'"
op|')'
op|','
string|"'3'"
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
string|"'1'"
op|','
nl|'\n'
string|"'3'"
op|','
string|"'1'"
op|')'
op|','
string|"'3'"
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
string|"'3'"
op|','
nl|'\n'
string|"'3'"
op|','
string|"'1'"
op|')'
op|','
string|"'3'"
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
name|'None'
op|','
nl|'\n'
name|'None'
op|','
string|"'1'"
op|')'
op|','
string|"'1'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
DECL|function|test_status_map
indent|'            '
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|','
name|'timestamps'
op|','
nl|'\n'
name|'expected_timestamp'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
name|'timestamps'
op|'='
name|'timestamps'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'str'
op|'('
name|'expected'
op|')'
op|')'
op|']'
op|','
nl|'\n'
name|'str'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'last-modified'"
op|')'
op|','
nl|'\n'
name|'expected_timestamp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
string|"'1'"
op|','
nl|'\n'
string|"'2'"
op|','
string|"'3'"
op|')'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
string|"'1'"
op|','
nl|'\n'
string|"'3'"
op|','
string|"'2'"
op|')'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
string|"'1'"
op|','
nl|'\n'
string|"'3'"
op|','
string|"'1'"
op|')'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
string|"'3'"
op|','
nl|'\n'
string|"'3'"
op|','
string|"'1'"
op|')'
op|','
string|"'3'"
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
op|'('
string|"'0'"
op|','
string|"'0'"
op|','
name|'None'
op|','
nl|'\n'
string|"'1'"
op|','
string|"'2'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_meta_val_len
dedent|''
dedent|''
name|'def'
name|'test_POST_meta_val_len'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'limit'
op|'='
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_post_as_copy'
op|'='
name|'False'
newline|'\n'
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'202'
op|','
number|'202'
op|')'
newline|'\n'
comment|'#                acct cont obj  obj  obj'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|','
nl|'\n'
string|"'X-Object-Meta-Foo'"
op|':'
string|"'x'"
op|'*'
name|'limit'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'202'
op|','
number|'202'
op|','
number|'202'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|','
nl|'\n'
string|"'X-Object-Meta-Foo'"
op|':'
string|"'x'"
op|'*'
op|'('
name|'limit'
op|'+'
number|'1'
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_as_copy_meta_val_len
dedent|''
dedent|''
name|'def'
name|'test_POST_as_copy_meta_val_len'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'limit'
op|'='
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'202'
op|','
number|'202'
op|')'
newline|'\n'
comment|'#                acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|','
nl|'\n'
string|"'X-Object-Meta-Foo'"
op|':'
string|"'x'"
op|'*'
name|'limit'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'202'
op|','
number|'202'
op|','
number|'202'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|','
nl|'\n'
string|"'X-Object-Meta-Foo'"
op|':'
string|"'x'"
op|'*'
op|'('
name|'limit'
op|'+'
number|'1'
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_meta_key_len
dedent|''
dedent|''
name|'def'
name|'test_POST_meta_key_len'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'limit'
op|'='
name|'constraints'
op|'.'
name|'MAX_META_NAME_LENGTH'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_post_as_copy'
op|'='
name|'False'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'202'
op|','
number|'202'
op|')'
newline|'\n'
comment|'#                acct cont obj  obj  obj'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|','
nl|'\n'
op|'('
string|"'X-Object-Meta-'"
op|'+'
string|"'x'"
op|'*'
name|'limit'
op|')'
op|':'
string|"'x'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'202'
op|','
number|'202'
op|','
number|'202'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|','
nl|'\n'
op|'('
string|"'X-Object-Meta-'"
op|'+'
string|"'x'"
op|'*'
op|'('
name|'limit'
op|'+'
number|'1'
op|')'
op|')'
op|':'
string|"'x'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_as_copy_meta_key_len
dedent|''
dedent|''
name|'def'
name|'test_POST_as_copy_meta_key_len'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'limit'
op|'='
name|'constraints'
op|'.'
name|'MAX_META_NAME_LENGTH'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'202'
op|','
number|'202'
op|')'
newline|'\n'
comment|'#                acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|','
nl|'\n'
op|'('
string|"'X-Object-Meta-'"
op|'+'
string|"'x'"
op|'*'
name|'limit'
op|')'
op|':'
string|"'x'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'202'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'202'
op|','
number|'202'
op|','
number|'202'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|','
nl|'\n'
op|'('
string|"'X-Object-Meta-'"
op|'+'
string|"'x'"
op|'*'
op|'('
name|'limit'
op|'+'
number|'1'
op|')'
op|')'
op|':'
string|"'x'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_meta_count
dedent|''
dedent|''
name|'def'
name|'test_POST_meta_count'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'limit'
op|'='
name|'constraints'
op|'.'
name|'MAX_META_COUNT'
newline|'\n'
name|'headers'
op|'='
name|'dict'
op|'('
nl|'\n'
op|'('
op|'('
string|"'X-Object-Meta-'"
op|'+'
name|'str'
op|'('
name|'i'
op|')'
op|','
string|"'a'"
op|')'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'limit'
op|'+'
number|'1'
op|')'
op|')'
op|')'
newline|'\n'
name|'headers'
op|'.'
name|'update'
op|'('
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|'}'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'202'
op|','
number|'202'
op|','
number|'202'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_meta_size
dedent|''
dedent|''
name|'def'
name|'test_POST_meta_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'limit'
op|'='
name|'constraints'
op|'.'
name|'MAX_META_OVERALL_SIZE'
newline|'\n'
name|'count'
op|'='
name|'limit'
op|'/'
number|'256'
comment|'# enough to cause the limit to be reached'
newline|'\n'
name|'headers'
op|'='
name|'dict'
op|'('
nl|'\n'
op|'('
op|'('
string|"'X-Object-Meta-'"
op|'+'
name|'str'
op|'('
name|'i'
op|')'
op|','
string|"'a'"
op|'*'
number|'256'
op|')'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'count'
op|'+'
number|'1'
op|')'
op|')'
op|')'
newline|'\n'
name|'headers'
op|'.'
name|'update'
op|'('
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|'}'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'202'
op|','
number|'202'
op|','
number|'202'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_not_autodetect_content_type
dedent|''
dedent|''
name|'def'
name|'test_PUT_not_autodetect_content_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'something/right'"
op|','
string|"'Content-Length'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'it_worked'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|verify_content_type
name|'def'
name|'verify_content_type'
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|','
name|'partition'
op|','
nl|'\n'
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|'='
name|'None'
op|','
nl|'\n'
name|'query_string'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'path'
op|'=='
string|"'/a/c/o.html'"
op|':'
newline|'\n'
indent|'                    '
name|'it_worked'
op|'.'
name|'append'
op|'('
nl|'\n'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'.'
name|'startswith'
op|'('
string|"'something/right'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'set_http_connect'
op|'('
number|'204'
op|','
number|'204'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
name|'give_connect'
op|'='
name|'verify_content_type'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o.html'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'it_worked'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'all'
op|'('
name|'it_worked'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_autodetect_content_type
dedent|''
dedent|''
name|'def'
name|'test_PUT_autodetect_content_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'something/wrong'"
op|','
string|"'Content-Length'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'X-Detect-Content-Type'"
op|':'
string|"'True'"
op|'}'
newline|'\n'
name|'it_worked'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|verify_content_type
name|'def'
name|'verify_content_type'
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|','
name|'partition'
op|','
nl|'\n'
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|'='
name|'None'
op|','
nl|'\n'
name|'query_string'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'path'
op|'=='
string|"'/a/c/o.html'"
op|':'
newline|'\n'
indent|'                    '
name|'it_worked'
op|'.'
name|'append'
op|'('
nl|'\n'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'.'
name|'startswith'
op|'('
string|"'text/html'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'set_http_connect'
op|'('
number|'204'
op|','
number|'204'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
name|'give_connect'
op|'='
name|'verify_content_type'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o.html'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'it_worked'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'all'
op|'('
name|'it_worked'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_client_timeout
dedent|''
dedent|''
name|'def'
name|'test_client_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'object_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'object_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
nl|'\n'
DECL|class|SlowBody
dedent|''
name|'class'
name|'SlowBody'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'                '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'sent'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|','
name|'size'
op|'='
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'self'
op|'.'
name|'sent'
op|'<'
number|'4'
op|':'
newline|'\n'
indent|'                        '
name|'sleep'
op|'('
number|'0.1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sent'
op|'+='
number|'1'
newline|'\n'
name|'return'
string|"' '"
newline|'\n'
dedent|''
name|'return'
string|"''"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'SlowBody'
op|'('
op|')'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'4'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#                acct cont obj  obj  obj'
nl|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'client_timeout'
op|'='
number|'0.05'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'SlowBody'
op|'('
op|')'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'4'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#                obj  obj  obj'
nl|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'408'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_client_disconnect
dedent|''
dedent|''
name|'def'
name|'test_client_disconnect'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'object_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'object_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
nl|'\n'
DECL|class|SlowBody
dedent|''
name|'class'
name|'SlowBody'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'                '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'sent'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|','
name|'size'
op|'='
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'Exception'
op|'('
string|"'Disconnected'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'SlowBody'
op|'('
op|')'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'4'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#                acct cont obj  obj  obj'
nl|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'499'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_node_read_timeout
dedent|''
dedent|''
name|'def'
name|'test_node_read_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'object_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'object_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
name|'slow'
op|'='
number|'0.1'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'sent_size'
op|'='
number|'0'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'got_exc'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'resp'
op|'.'
name|'body'
newline|'\n'
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'                '
name|'got_exc'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'not'
name|'got_exc'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'recoverable_node_timeout'
op|'='
number|'0.1'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
name|'slow'
op|'='
number|'1.0'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'got_exc'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'resp'
op|'.'
name|'body'
newline|'\n'
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'                '
name|'got_exc'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'got_exc'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_node_read_timeout_retry
dedent|''
dedent|''
name|'def'
name|'test_node_read_timeout_retry'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'object_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'object_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'recoverable_node_timeout'
op|'='
number|'0.1'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
name|'slow'
op|'='
op|'['
number|'1.0'
op|','
number|'1.0'
op|','
number|'1.0'
op|']'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'got_exc'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|','
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'                '
name|'got_exc'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'got_exc'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
name|'body'
op|'='
string|"'lalala'"
op|','
nl|'\n'
name|'slow'
op|'='
op|'['
number|'1.0'
op|','
number|'1.0'
op|']'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'got_exc'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
string|"'lalala'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'                '
name|'got_exc'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'not'
name|'got_exc'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
name|'body'
op|'='
string|"'lalala'"
op|','
nl|'\n'
name|'slow'
op|'='
op|'['
number|'1.0'
op|','
number|'1.0'
op|']'
op|','
name|'etags'
op|'='
op|'['
string|"'a'"
op|','
string|"'a'"
op|','
string|"'a'"
op|']'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'got_exc'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
string|"'lalala'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'                '
name|'got_exc'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'not'
name|'got_exc'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
name|'body'
op|'='
string|"'lalala'"
op|','
nl|'\n'
name|'slow'
op|'='
op|'['
number|'1.0'
op|','
number|'1.0'
op|']'
op|','
name|'etags'
op|'='
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'a'"
op|']'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'got_exc'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
string|"'lalala'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'                '
name|'got_exc'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'not'
name|'got_exc'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
name|'body'
op|'='
string|"'lalala'"
op|','
nl|'\n'
name|'slow'
op|'='
op|'['
number|'1.0'
op|','
number|'1.0'
op|']'
op|','
name|'etags'
op|'='
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'b'"
op|']'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'got_exc'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'resp'
op|'.'
name|'body'
newline|'\n'
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'                '
name|'got_exc'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'got_exc'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_node_write_timeout
dedent|''
dedent|''
name|'def'
name|'test_node_write_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'object_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'object_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'4'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"'    '"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
name|'slow'
op|'='
number|'0.1'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|'='
number|'0.1'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'4'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"'    '"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
name|'slow'
op|'='
number|'1.0'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_node_request_setting
dedent|''
dedent|''
name|'def'
name|'test_node_request_setting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'baseapp'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
string|"'request_node_count'"
op|':'
string|"'3'"
op|'}'
op|','
nl|'\n'
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'baseapp'
op|'.'
name|'request_node_count'
op|'('
number|'3'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iter_nodes
dedent|''
name|'def'
name|'test_iter_nodes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'object_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'object_ring'
op|'.'
name|'max_more_nodes'
op|'='
number|'2'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|','
nl|'\n'
string|"'object'"
op|')'
newline|'\n'
name|'collected_nodes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'object_ring'
op|','
nl|'\n'
name|'partition'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'collected_nodes'
op|'.'
name|'append'
op|'('
name|'node'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'collected_nodes'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
nl|'\n'
name|'object_ring'
op|'.'
name|'max_more_nodes'
op|'='
number|'20'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'request_node_count'
op|'='
name|'lambda'
name|'r'
op|':'
number|'20'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|','
nl|'\n'
string|"'object'"
op|')'
newline|'\n'
name|'collected_nodes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'object_ring'
op|','
nl|'\n'
name|'partition'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'collected_nodes'
op|'.'
name|'append'
op|'('
name|'node'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'collected_nodes'
op|')'
op|','
number|'9'
op|')'
newline|'\n'
nl|'\n'
comment|'# zero error-limited primary nodes -> no handoff warnings'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'log_handoffs'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'request_node_count'
op|'='
name|'lambda'
name|'r'
op|':'
number|'7'
newline|'\n'
name|'object_ring'
op|'.'
name|'max_more_nodes'
op|'='
number|'20'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|','
nl|'\n'
string|"'object'"
op|')'
newline|'\n'
name|'collected_nodes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'object_ring'
op|','
name|'partition'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'collected_nodes'
op|'.'
name|'append'
op|'('
name|'node'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'collected_nodes'
op|')'
op|','
number|'7'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'warning'"
op|']'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'get_increments'
op|'('
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# one error-limited primary node -> one handoff warning'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'log_handoffs'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'request_node_count'
op|'='
name|'lambda'
name|'r'
op|':'
number|'7'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
comment|'# clear out errors'
newline|'\n'
name|'set_node_errors'
op|'('
name|'self'
op|'.'
name|'app'
op|','
name|'object_ring'
op|'.'
name|'_devs'
op|'['
number|'0'
op|']'
op|','
number|'999'
op|','
nl|'\n'
name|'last_error'
op|'='
op|'('
number|'2'
op|'**'
number|'63'
op|'-'
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'collected_nodes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'object_ring'
op|','
name|'partition'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'collected_nodes'
op|'.'
name|'append'
op|'('
name|'node'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'collected_nodes'
op|')'
op|','
number|'7'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'warning'"
op|']'
op|','
op|'['
nl|'\n'
op|'('
op|'('
string|"'Handoff requested (5)'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'get_increments'
op|'('
op|')'
op|','
nl|'\n'
op|'['
string|"'handoff_count'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# two error-limited primary nodes -> two handoff warnings'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'log_handoffs'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'request_node_count'
op|'='
name|'lambda'
name|'r'
op|':'
number|'7'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
comment|'# clear out errors'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'2'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'set_node_errors'
op|'('
name|'self'
op|'.'
name|'app'
op|','
name|'object_ring'
op|'.'
name|'_devs'
op|'['
name|'i'
op|']'
op|','
number|'999'
op|','
nl|'\n'
name|'last_error'
op|'='
op|'('
number|'2'
op|'**'
number|'63'
op|'-'
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'collected_nodes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'object_ring'
op|','
name|'partition'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'collected_nodes'
op|'.'
name|'append'
op|'('
name|'node'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'collected_nodes'
op|')'
op|','
number|'7'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'warning'"
op|']'
op|','
op|'['
nl|'\n'
op|'('
op|'('
string|"'Handoff requested (5)'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'Handoff requested (6)'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'get_increments'
op|'('
op|')'
op|','
nl|'\n'
op|'['
string|"'handoff_count'"
op|','
nl|'\n'
string|"'handoff_count'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# all error-limited primary nodes -> four handoff warnings,'
nl|'\n'
comment|'# plus a handoff-all metric'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'log_handoffs'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'request_node_count'
op|'='
name|'lambda'
name|'r'
op|':'
number|'10'
newline|'\n'
name|'object_ring'
op|'.'
name|'set_replicas'
op|'('
number|'4'
op|')'
comment|'# otherwise we run out of handoffs'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
comment|'# clear out errors'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'4'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'set_node_errors'
op|'('
name|'self'
op|'.'
name|'app'
op|','
name|'object_ring'
op|'.'
name|'_devs'
op|'['
name|'i'
op|']'
op|','
number|'999'
op|','
nl|'\n'
name|'last_error'
op|'='
op|'('
number|'2'
op|'**'
number|'63'
op|'-'
number|'1'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'collected_nodes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'object_ring'
op|','
name|'partition'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'collected_nodes'
op|'.'
name|'append'
op|'('
name|'node'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'collected_nodes'
op|')'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'warning'"
op|']'
op|','
op|'['
nl|'\n'
op|'('
op|'('
string|"'Handoff requested (7)'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'Handoff requested (8)'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'Handoff requested (9)'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'Handoff requested (10)'"
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'get_increments'
op|'('
op|')'
op|','
nl|'\n'
op|'['
string|"'handoff_count'"
op|','
nl|'\n'
string|"'handoff_count'"
op|','
nl|'\n'
string|"'handoff_count'"
op|','
nl|'\n'
string|"'handoff_count'"
op|','
nl|'\n'
string|"'handoff_all_count'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'object_ring'
op|'.'
name|'max_more_nodes'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|test_iter_nodes_calls_sort_nodes
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_iter_nodes_calls_sort_nodes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'sort_nodes'"
op|')'
name|'as'
name|'sort_nodes'
op|':'
newline|'\n'
indent|'            '
name|'object_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'object_ring'
op|','
number|'0'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'sort_nodes'
op|'.'
name|'assert_called_once_with'
op|'('
nl|'\n'
name|'object_ring'
op|'.'
name|'get_part_nodes'
op|'('
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iter_nodes_skips_error_limited
dedent|''
dedent|''
name|'def'
name|'test_iter_nodes_skips_error_limited'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'sort_nodes'"
op|','
name|'lambda'
name|'n'
op|':'
name|'n'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'object_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'first_nodes'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'object_ring'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'second_nodes'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'object_ring'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'first_nodes'
op|'['
number|'0'
op|']'
name|'in'
name|'second_nodes'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_limit'
op|'('
name|'first_nodes'
op|'['
number|'0'
op|']'
op|','
string|"'test'"
op|')'
newline|'\n'
name|'second_nodes'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'object_ring'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'first_nodes'
op|'['
number|'0'
op|']'
name|'not'
name|'in'
name|'second_nodes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iter_nodes_gives_extra_if_error_limited_inline
dedent|''
dedent|''
name|'def'
name|'test_iter_nodes_gives_extra_if_error_limited_inline'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'object_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'with'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'sort_nodes'"
op|','
name|'lambda'
name|'n'
op|':'
name|'n'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'request_node_count'"
op|','
nl|'\n'
name|'lambda'
name|'r'
op|':'
number|'6'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'object_ring'
op|','
string|"'max_more_nodes'"
op|','
number|'99'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'first_nodes'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'object_ring'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'second_nodes'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'object_ring'
op|','
number|'0'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'second_nodes'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_limit'
op|'('
name|'node'
op|','
string|"'test'"
op|')'
newline|'\n'
dedent|''
name|'second_nodes'
op|'.'
name|'append'
op|'('
name|'node'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'first_nodes'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'second_nodes'
op|')'
op|','
number|'7'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iter_nodes_with_custom_node_iter
dedent|''
dedent|''
name|'def'
name|'test_iter_nodes_with_custom_node_iter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'object_ring'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'node_list'
op|'='
op|'['
name|'dict'
op|'('
name|'id'
op|'='
name|'n'
op|','
name|'ip'
op|'='
string|"'1.2.3.4'"
op|','
name|'port'
op|'='
name|'n'
op|','
name|'device'
op|'='
string|"'D'"
op|')'
nl|'\n'
name|'for'
name|'n'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|']'
newline|'\n'
name|'with'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'sort_nodes'"
op|','
name|'lambda'
name|'n'
op|':'
name|'n'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'request_node_count'"
op|','
nl|'\n'
name|'lambda'
name|'r'
op|':'
number|'3'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'got_nodes'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'object_ring'
op|','
number|'0'
op|','
nl|'\n'
name|'node_iter'
op|'='
name|'iter'
op|'('
name|'node_list'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'node_list'
op|'['
op|':'
number|'3'
op|']'
op|','
name|'got_nodes'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'sort_nodes'"
op|','
name|'lambda'
name|'n'
op|':'
name|'n'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'request_node_count'"
op|','
nl|'\n'
name|'lambda'
name|'r'
op|':'
number|'1000000'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'got_nodes'
op|'='
name|'list'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'iter_nodes'
op|'('
name|'object_ring'
op|','
number|'0'
op|','
nl|'\n'
name|'node_iter'
op|'='
name|'iter'
op|'('
name|'node_list'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'node_list'
op|','
name|'got_nodes'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_best_response_sets_headers
dedent|''
name|'def'
name|'test_best_response_sets_headers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'best_response'
op|'('
name|'req'
op|','
op|'['
number|'200'
op|']'
op|'*'
number|'3'
op|','
op|'['
string|"'OK'"
op|']'
op|'*'
number|'3'
op|','
op|'['
string|"''"
op|']'
op|'*'
number|'3'
op|','
nl|'\n'
string|"'Object'"
op|','
name|'headers'
op|'='
op|'['
op|'{'
string|"'X-Test'"
op|':'
string|"'1'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Test'"
op|':'
string|"'2'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Test'"
op|':'
string|"'3'"
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'X-Test'"
op|']'
op|','
string|"'1'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_best_response_sets_etag
dedent|''
name|'def'
name|'test_best_response_sets_etag'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'best_response'
op|'('
name|'req'
op|','
op|'['
number|'200'
op|']'
op|'*'
number|'3'
op|','
op|'['
string|"'OK'"
op|']'
op|'*'
number|'3'
op|','
op|'['
string|"''"
op|']'
op|'*'
number|'3'
op|','
nl|'\n'
string|"'Object'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'etag'
op|','
name|'None'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'best_response'
op|'('
name|'req'
op|','
op|'['
number|'200'
op|']'
op|'*'
number|'3'
op|','
op|'['
string|"'OK'"
op|']'
op|'*'
number|'3'
op|','
op|'['
string|"''"
op|']'
op|'*'
number|'3'
op|','
nl|'\n'
string|"'Object'"
op|','
nl|'\n'
name|'etag'
op|'='
string|"'68b329da9893e34099c7d8ad5cb9c940'"
nl|'\n'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'etag'
op|','
string|"'68b329da9893e34099c7d8ad5cb9c940'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_proxy_passes_content_type
dedent|''
name|'def'
name|'test_proxy_passes_content_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'content_type'
op|','
string|"'x-application/test'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'content_length'
op|','
number|'0'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
name|'slow'
op|'='
name|'True'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'content_length'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_proxy_passes_content_length_on_head
dedent|''
dedent|''
name|'def'
name|'test_proxy_passes_content_length_on_head'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'HEAD'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'content_length'
op|','
number|'0'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
name|'slow'
op|'='
name|'True'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'HEAD'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'content_length'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_error_limiting
dedent|''
dedent|''
name|'def'
name|'test_error_limiting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'sort_nodes'
op|'='
name|'lambda'
name|'l'
op|':'
name|'l'
newline|'\n'
name|'object_ring'
op|'='
name|'controller'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'200'
op|','
number|'200'
op|','
number|'503'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
nl|'\n'
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'node_error_count'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'object_ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'node_last_error'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'object_ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|')'
nl|'\n'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
name|'for'
name|'_junk'
name|'in'
name|'range'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_suppression_limit'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'200'
op|','
number|'200'
op|','
number|'503'
op|','
number|'503'
op|','
nl|'\n'
number|'503'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'node_error_count'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'object_ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_suppression_limit'
op|'+'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
nl|'\n'
number|'503'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'node_last_error'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'object_ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|')'
nl|'\n'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
number|'201'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'POST'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'202'
op|','
nl|'\n'
number|'202'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'DELETE'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'204'
op|','
number|'204'
op|','
number|'204'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_suppression_interval'
op|'='
op|'-'
number|'300'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
nl|'\n'
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'BaseException'
op|','
nl|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|','
name|'controller'
op|'.'
name|'DELETE'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'204'
op|','
number|'204'
op|','
number|'204'
op|')'
op|','
number|'503'
op|','
nl|'\n'
name|'raise_exc'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_error_limiting_survives_ring_reload
dedent|''
dedent|''
name|'def'
name|'test_error_limiting_survives_ring_reload'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'sort_nodes'
op|'='
name|'lambda'
name|'l'
op|':'
name|'l'
newline|'\n'
name|'object_ring'
op|'='
name|'controller'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'200'
op|','
number|'200'
op|','
number|'503'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
nl|'\n'
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'node_error_count'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'object_ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'node_last_error'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'object_ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|')'
nl|'\n'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
name|'for'
name|'_junk'
name|'in'
name|'range'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_suppression_limit'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'200'
op|','
number|'200'
op|','
number|'503'
op|','
number|'503'
op|','
nl|'\n'
number|'503'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'node_error_count'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'object_ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_suppression_limit'
op|'+'
number|'1'
op|')'
newline|'\n'
nl|'\n'
comment|'# wipe out any state in the ring'
nl|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'                '
name|'policy'
op|'.'
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'base_port'
op|'='
number|'3000'
op|')'
newline|'\n'
nl|'\n'
comment|'# and we still get an error, which proves that the'
nl|'\n'
comment|'# error-limiting info survived a ring reload'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
nl|'\n'
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_error_limiting
dedent|''
dedent|''
name|'def'
name|'test_PUT_error_limiting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'sort_nodes'
op|'='
name|'lambda'
name|'l'
op|':'
name|'l'
newline|'\n'
name|'object_ring'
op|'='
name|'controller'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
comment|'# acc con obj obj obj'
nl|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'200'
op|','
number|'200'
op|','
number|'503'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
nl|'\n'
number|'200'
op|')'
newline|'\n'
nl|'\n'
comment|'# 2, not 1, because assert_status_map() calls the method twice'
nl|'\n'
name|'odevs'
op|'='
name|'object_ring'
op|'.'
name|'devs'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'node_error_count'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'odevs'
op|'['
number|'0'
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'node_error_count'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'odevs'
op|'['
number|'1'
op|']'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'node_error_count'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'odevs'
op|'['
number|'2'
op|']'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'node_last_error'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'odevs'
op|'['
number|'0'
op|']'
op|')'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'node_last_error'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'odevs'
op|'['
number|'1'
op|']'
op|')'
name|'is'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'node_last_error'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'odevs'
op|'['
number|'2'
op|']'
op|')'
name|'is'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_error_limiting_last_node
dedent|''
dedent|''
name|'def'
name|'test_PUT_error_limiting_last_node'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'sort_nodes'
op|'='
name|'lambda'
name|'l'
op|':'
name|'l'
newline|'\n'
name|'object_ring'
op|'='
name|'controller'
op|'.'
name|'app'
op|'.'
name|'get_object_ring'
op|'('
name|'None'
op|')'
newline|'\n'
comment|'# acc con obj obj obj'
nl|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'503'
op|')'
op|','
nl|'\n'
number|'200'
op|')'
newline|'\n'
nl|'\n'
comment|'# 2, not 1, because assert_status_map() calls the method twice'
nl|'\n'
name|'odevs'
op|'='
name|'object_ring'
op|'.'
name|'devs'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'node_error_count'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'odevs'
op|'['
number|'0'
op|']'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'node_error_count'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'odevs'
op|'['
number|'1'
op|']'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'node_error_count'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'odevs'
op|'['
number|'2'
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'node_last_error'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'odevs'
op|'['
number|'0'
op|']'
op|')'
name|'is'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'node_last_error'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'odevs'
op|'['
number|'1'
op|']'
op|')'
name|'is'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'node_last_error'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'odevs'
op|'['
number|'2'
op|']'
op|')'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_acc_or_con_missing_returns_404
dedent|''
dedent|''
name|'def'
name|'test_acc_or_con_missing_returns_404'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'='
name|'FakeMemcacheReturnsNone'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
string|"'DELETE'"
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
comment|'#                acct acct acct'
nl|'\n'
comment|'# make sure to use a fresh request without cached env'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
string|"'DELETE'"
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'503'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
comment|'#                acct acct acct'
nl|'\n'
comment|'# make sure to use a fresh request without cached env'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
string|"'DELETE'"
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'503'
op|','
number|'503'
op|','
number|'404'
op|')'
newline|'\n'
comment|'#                acct acct acct'
nl|'\n'
comment|'# make sure to use a fresh request without cached env'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
string|"'DELETE'"
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'503'
op|','
number|'503'
op|','
number|'503'
op|')'
newline|'\n'
comment|'#                acct acct acct'
nl|'\n'
comment|'# make sure to use a fresh request without cached env'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
string|"'DELETE'"
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'204'
op|','
number|'204'
op|','
number|'204'
op|')'
newline|'\n'
comment|'#                acct cont obj  obj  obj'
nl|'\n'
comment|'# make sure to use a fresh request without cached env'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
string|"'DELETE'"
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'204'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
comment|'#                acct cont cont cont'
nl|'\n'
comment|'# make sure to use a fresh request without cached env'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
string|"'DELETE'"
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'503'
op|','
number|'503'
op|','
number|'503'
op|')'
newline|'\n'
comment|'#                acct cont cont cont'
nl|'\n'
comment|'# make sure to use a fresh request without cached env'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
string|"'DELETE'"
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'set_node_errors'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
name|'dev'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_suppression_limit'
op|'+'
number|'1'
op|','
nl|'\n'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'set_http_connect'
op|'('
number|'200'
op|')'
newline|'\n'
comment|"#                acct [isn't actually called since everything"
nl|'\n'
comment|'#                      is error limited]'
nl|'\n'
comment|'# make sure to use a fresh request without cached env'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
string|"'DELETE'"
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'set_node_errors'
op|'('
name|'self'
op|'.'
name|'app'
op|','
name|'dev'
op|','
number|'0'
op|','
name|'last_error'
op|'='
name|'None'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'set_node_errors'
op|'('
name|'self'
op|'.'
name|'app'
op|','
name|'dev'
op|','
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_suppression_limit'
op|'+'
number|'1'
op|','
nl|'\n'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
comment|"#                acct cont [isn't actually called since"
nl|'\n'
comment|'#                           everything is error limited]'
nl|'\n'
comment|'# make sure to use a fresh request without cached env'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
string|"'DELETE'"
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_POST_requires_container_exist
dedent|''
dedent|''
name|'def'
name|'test_PUT_POST_requires_container_exist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_post_as_copy'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'='
name|'FakeMemcacheReturnsNone'
op|'('
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'POST'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_POST_as_copy_requires_container_exist
dedent|''
dedent|''
name|'def'
name|'test_PUT_POST_as_copy_requires_container_exist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'='
name|'FakeMemcacheReturnsNone'
op|'('
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'POST'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_metadata
dedent|''
dedent|''
name|'def'
name|'test_bad_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#                acct cont obj  obj  obj'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Object-Meta-'"
op|'+'
op|'('
nl|'\n'
string|"'a'"
op|'*'
name|'constraints'
op|'.'
name|'MAX_META_NAME_LENGTH'
op|')'
op|':'
string|"'v'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Object-Meta-'"
op|'+'
op|'('
nl|'\n'
string|"'a'"
op|'*'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_NAME_LENGTH'
op|'+'
number|'1'
op|')'
op|')'
op|':'
string|"'v'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Object-Meta-Too-Long'"
op|':'
string|"'a'"
op|'*'
nl|'\n'
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Object-Meta-Too-Long'"
op|':'
string|"'a'"
op|'*'
nl|'\n'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
op|'+'
number|'1'
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|'}'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_COUNT'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'['
string|"'X-Object-Meta-%d'"
op|'%'
name|'x'
op|']'
op|'='
string|"'v'"
newline|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|'}'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_COUNT'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'['
string|"'X-Object-Meta-%d'"
op|'%'
name|'x'
op|']'
op|'='
string|"'v'"
newline|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|'}'
newline|'\n'
name|'header_value'
op|'='
string|"'a'"
op|'*'
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
newline|'\n'
name|'size'
op|'='
number|'0'
newline|'\n'
name|'x'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'size'
op|'<'
name|'constraints'
op|'.'
name|'MAX_META_OVERALL_SIZE'
op|'-'
number|'4'
op|'-'
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
op|':'
newline|'\n'
indent|'                '
name|'size'
op|'+='
number|'4'
op|'+'
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
newline|'\n'
name|'headers'
op|'['
string|"'X-Object-Meta-%04d'"
op|'%'
name|'x'
op|']'
op|'='
name|'header_value'
newline|'\n'
name|'x'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'if'
name|'constraints'
op|'.'
name|'MAX_META_OVERALL_SIZE'
op|'-'
name|'size'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'['
string|"'X-Object-Meta-a'"
op|']'
op|'='
string|"'a'"
op|'*'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_OVERALL_SIZE'
op|'-'
name|'size'
op|'-'
number|'1'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'X-Object-Meta-a'"
op|']'
op|'='
string|"'a'"
op|'*'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_OVERALL_SIZE'
op|'-'
name|'size'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|member|controller_context
name|'def'
name|'controller_context'
op|'('
name|'self'
op|','
name|'req'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_v'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|'='
name|'utils'
op|'.'
name|'split_path'
op|'('
name|'req'
op|'.'
name|'path'
op|','
number|'4'
op|','
number|'4'
op|','
name|'True'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'new_connect'
op|'='
name|'set_http_connect'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'yield'
name|'controller'
newline|'\n'
name|'unused_status_list'
op|'='
op|'['
op|']'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'unused_status_list'
op|'.'
name|'append'
op|'('
name|'next'
op|'('
name|'new_connect'
op|'.'
name|'code_iter'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'unused_status_list'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'self'
op|'.'
name|'fail'
op|'('
string|"'UN-USED STATUS CODES: %r'"
op|'%'
nl|'\n'
name|'unused_status_list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_basic_put_with_x_copy_from
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_basic_put_with_x_copy_from'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'c/o'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_basic_put_with_x_copy_from_account
dedent|''
name|'def'
name|'test_basic_put_with_x_copy_from_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a1/c1/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'c/o'"
op|','
nl|'\n'
string|"'X-Copy-From-Account'"
op|':'
string|"'a'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont acc1 con1 objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from-account'"
op|']'
op|','
string|"'a'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_basic_put_with_x_copy_from_across_container
dedent|''
name|'def'
name|'test_basic_put_with_x_copy_from_across_container'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'c2/o'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont conc objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c2/o'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_basic_put_with_x_copy_from_across_container_and_account
dedent|''
name|'def'
name|'test_basic_put_with_x_copy_from_across_container_and_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a1/c1/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'c2/o'"
op|','
nl|'\n'
string|"'X-Copy-From-Account'"
op|':'
string|"'a'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont acc1 con1 objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c2/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from-account'"
op|']'
op|','
string|"'a'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_non_zero_content_length
dedent|''
name|'def'
name|'test_copy_non_zero_content_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'c/o'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
comment|'#                acct cont'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_non_zero_content_length_with_account
dedent|''
name|'def'
name|'test_copy_non_zero_content_length_with_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a1/c1/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'c/o'"
op|','
nl|'\n'
string|"'X-Copy-From-Account'"
op|':'
string|"'a'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
comment|'#                acct cont'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_with_slashes_in_x_copy_from
dedent|''
name|'def'
name|'test_copy_with_slashes_in_x_copy_from'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# extra source path parsing'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'c/o/o2'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o/o2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_with_slashes_in_x_copy_from_and_account
dedent|''
name|'def'
name|'test_copy_with_slashes_in_x_copy_from_and_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# extra source path parsing'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a1/c1/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'c/o/o2'"
op|','
nl|'\n'
string|"'X-Copy-From-Account'"
op|':'
string|"'a'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont acc1 con1 objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o/o2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from-account'"
op|']'
op|','
string|"'a'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_with_spaces_in_x_copy_from
dedent|''
name|'def'
name|'test_copy_with_spaces_in_x_copy_from'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# space in soure path'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'c/o%20o2'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o%20o2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_with_spaces_in_x_copy_from_and_account
dedent|''
name|'def'
name|'test_copy_with_spaces_in_x_copy_from_and_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# space in soure path'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a1/c1/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'c/o%20o2'"
op|','
nl|'\n'
string|"'X-Copy-From-Account'"
op|':'
string|"'a'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont acc1 con1 objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o%20o2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from-account'"
op|']'
op|','
string|"'a'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_with_leading_slash_in_x_copy_from
dedent|''
name|'def'
name|'test_copy_with_leading_slash_in_x_copy_from'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# repeat tests with leading /'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c/o'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_with_leading_slash_in_x_copy_from_and_account
dedent|''
name|'def'
name|'test_copy_with_leading_slash_in_x_copy_from_and_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# repeat tests with leading /'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a1/c1/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c/o'"
op|','
nl|'\n'
string|"'X-Copy-From-Account'"
op|':'
string|"'a'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont acc1 con1 objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from-account'"
op|']'
op|','
string|"'a'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_with_leading_slash_and_slashes_in_x_copy_from
dedent|''
name|'def'
name|'test_copy_with_leading_slash_and_slashes_in_x_copy_from'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c/o/o2'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o/o2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_with_leading_slash_and_slashes_in_x_copy_from_acct
dedent|''
name|'def'
name|'test_copy_with_leading_slash_and_slashes_in_x_copy_from_acct'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a1/c1/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c/o/o2'"
op|','
nl|'\n'
string|"'X-Copy-From-Account'"
op|':'
string|"'a'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont acc1 con1 objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o/o2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from-account'"
op|']'
op|','
string|"'a'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_with_no_object_in_x_copy_from
dedent|''
name|'def'
name|'test_copy_with_no_object_in_x_copy_from'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
comment|'#              acct cont'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'HTTPException'
name|'as'
name|'resp'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|','
number|'4'
op|')'
comment|'# client error'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Invalid X-Copy-From did not raise '"
nl|'\n'
string|"'client error'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_with_no_object_in_x_copy_from_and_account
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_copy_with_no_object_in_x_copy_from_and_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a1/c1/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c'"
op|','
nl|'\n'
string|"'X-Copy-From-Account'"
op|':'
string|"'a'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
comment|'#              acct cont'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'HTTPException'
name|'as'
name|'resp'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|','
number|'4'
op|')'
comment|'# client error'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Invalid X-Copy-From did not raise '"
nl|'\n'
string|"'client error'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_server_error_reading_source
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_copy_server_error_reading_source'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c/o'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'503'
op|','
number|'503'
op|','
number|'503'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_server_error_reading_source_and_account
dedent|''
name|'def'
name|'test_copy_server_error_reading_source_and_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a1/c1/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c/o'"
op|','
nl|'\n'
string|"'X-Copy-From-Account'"
op|':'
string|"'a'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'503'
op|','
number|'503'
op|','
number|'503'
op|')'
newline|'\n'
comment|'#              acct cont acct cont objc objc objc'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_not_found_reading_source
dedent|''
name|'def'
name|'test_copy_not_found_reading_source'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c/o'"
op|'}'
op|')'
newline|'\n'
comment|'# not found'
nl|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_not_found_reading_source_and_account
dedent|''
name|'def'
name|'test_copy_not_found_reading_source_and_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a1/c1/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c/o'"
op|','
nl|'\n'
string|"'X-Copy-From-Account'"
op|':'
string|"'a'"
op|'}'
op|')'
newline|'\n'
comment|'# not found'
nl|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
comment|'#              acct cont acct cont objc objc objc'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_with_some_missing_sources
dedent|''
name|'def'
name|'test_copy_with_some_missing_sources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c/o'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_with_some_missing_sources_and_account
dedent|''
name|'def'
name|'test_copy_with_some_missing_sources_and_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a1/c1/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c/o'"
op|','
nl|'\n'
string|"'X-Copy-From-Account'"
op|':'
string|"'a'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_with_object_metadata
dedent|''
name|'def'
name|'test_copy_with_object_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c/o'"
op|','
nl|'\n'
string|"'X-Object-Meta-Ours'"
op|':'
string|"'okay'"
op|'}'
op|')'
newline|'\n'
comment|'# test object metadata'
nl|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-object-meta-test'"
op|')'
op|','
string|"'testing'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-object-meta-ours'"
op|')'
op|','
string|"'okay'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-delete-at'"
op|')'
op|','
string|"'9876543210'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_with_object_metadata_and_account
dedent|''
name|'def'
name|'test_copy_with_object_metadata_and_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a1/c1/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c/o'"
op|','
nl|'\n'
string|"'X-Object-Meta-Ours'"
op|':'
string|"'okay'"
op|','
nl|'\n'
string|"'X-Copy-From-Account'"
op|':'
string|"'a'"
op|'}'
op|')'
newline|'\n'
comment|'# test object metadata'
nl|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-object-meta-test'"
op|')'
op|','
string|"'testing'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-object-meta-ours'"
op|')'
op|','
string|"'okay'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-delete-at'"
op|')'
op|','
string|"'9876543210'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'_limit_max_file_size'
newline|'\n'
DECL|member|test_copy_source_larger_than_max_file_size
name|'def'
name|'test_copy_source_larger_than_max_file_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Copy-From'"
op|':'
string|"'/c/o'"
op|'}'
op|')'
newline|'\n'
comment|'# copy-from object is too large to fit in target object'
nl|'\n'
nl|'\n'
DECL|class|LargeResponseBody
name|'class'
name|'LargeResponseBody'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__len__
indent|'            '
name|'def'
name|'__len__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'constraints'
op|'.'
name|'MAX_FILE_SIZE'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"''"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'copy_from_obj_body'
op|'='
name|'LargeResponseBody'
op|'('
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc'
nl|'\n'
name|'kwargs'
op|'='
name|'dict'
op|'('
name|'body'
op|'='
name|'copy_from_obj_body'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'HTTPException'
name|'as'
name|'resp'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'413'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_basic_COPY
dedent|''
dedent|''
name|'def'
name|'test_basic_COPY'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'c/o2'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_basic_COPY_account
dedent|''
name|'def'
name|'test_basic_COPY_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'c1/o2'"
op|','
nl|'\n'
string|"'Destination-Account'"
op|':'
string|"'a1'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from-account'"
op|']'
op|','
string|"'a'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_across_containers
dedent|''
name|'def'
name|'test_COPY_across_containers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'c2/o'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont c2   objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_source_with_slashes_in_name
dedent|''
name|'def'
name|'test_COPY_source_with_slashes_in_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o/o2'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'c/o'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o/o2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_account_source_with_slashes_in_name
dedent|''
name|'def'
name|'test_COPY_account_source_with_slashes_in_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o/o2'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'c1/o'"
op|','
nl|'\n'
string|"'Destination-Account'"
op|':'
string|"'a1'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o/o2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from-account'"
op|']'
op|','
string|"'a'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_destination_leading_slash
dedent|''
name|'def'
name|'test_COPY_destination_leading_slash'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c/o'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_account_destination_leading_slash
dedent|''
name|'def'
name|'test_COPY_account_destination_leading_slash'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c1/o'"
op|','
nl|'\n'
string|"'Destination-Account'"
op|':'
string|"'a1'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from-account'"
op|']'
op|','
string|"'a'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_source_with_slashes_destination_leading_slash
dedent|''
name|'def'
name|'test_COPY_source_with_slashes_destination_leading_slash'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o/o2'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c/o'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o/o2'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_account_source_with_slashes_destination_leading_slash
dedent|''
name|'def'
name|'test_COPY_account_source_with_slashes_destination_leading_slash'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o/o2'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c1/o'"
op|','
nl|'\n'
string|"'Destination-Account'"
op|':'
string|"'a1'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from'"
op|']'
op|','
string|"'c/o/o2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from-account'"
op|']'
op|','
string|"'a'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_no_object_in_destination
dedent|''
name|'def'
name|'test_COPY_no_object_in_destination'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'c_o'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'['
op|']'
comment|'# no requests needed'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'HTTPException'
op|','
name|'controller'
op|'.'
name|'COPY'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_account_no_object_in_destination
dedent|''
dedent|''
name|'def'
name|'test_COPY_account_no_object_in_destination'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'c_o'"
op|','
nl|'\n'
string|"'Destination-Account'"
op|':'
string|"'a1'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'['
op|']'
comment|'# no requests needed'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'HTTPException'
op|','
name|'controller'
op|'.'
name|'COPY'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_server_error_reading_source
dedent|''
dedent|''
name|'def'
name|'test_COPY_server_error_reading_source'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c/o'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'503'
op|','
number|'503'
op|','
number|'503'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_account_server_error_reading_source
dedent|''
name|'def'
name|'test_COPY_account_server_error_reading_source'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c1/o'"
op|','
nl|'\n'
string|"'Destination-Account'"
op|':'
string|"'a1'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'503'
op|','
number|'503'
op|','
number|'503'
op|')'
newline|'\n'
comment|'#              acct cont acct cont objc objc objc'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_not_found_reading_source
dedent|''
name|'def'
name|'test_COPY_not_found_reading_source'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c/o'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
comment|'#                acct cont objc objc objc'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_account_not_found_reading_source
dedent|''
name|'def'
name|'test_COPY_account_not_found_reading_source'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c1/o'"
op|','
nl|'\n'
string|"'Destination-Account'"
op|':'
string|"'a1'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
comment|'#              acct cont acct cont objc objc objc'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_with_some_missing_sources
dedent|''
name|'def'
name|'test_COPY_with_some_missing_sources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c/o'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#                acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_account_with_some_missing_sources
dedent|''
name|'def'
name|'test_COPY_account_with_some_missing_sources'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c1/o'"
op|','
nl|'\n'
string|"'Destination-Account'"
op|':'
string|"'a1'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_with_metadata
dedent|''
name|'def'
name|'test_COPY_with_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c/o'"
op|','
nl|'\n'
string|"'X-Object-Meta-Ours'"
op|':'
string|"'okay'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#                acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-object-meta-test'"
op|')'
op|','
nl|'\n'
string|"'testing'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-object-meta-ours'"
op|')'
op|','
string|"'okay'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-delete-at'"
op|')'
op|','
string|"'9876543210'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_account_with_metadata
dedent|''
name|'def'
name|'test_COPY_account_with_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c1/o'"
op|','
nl|'\n'
string|"'X-Object-Meta-Ours'"
op|':'
string|"'okay'"
op|','
nl|'\n'
string|"'Destination-Account'"
op|':'
string|"'a1'"
op|'}'
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
comment|'#              acct cont acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-object-meta-test'"
op|')'
op|','
nl|'\n'
string|"'testing'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-object-meta-ours'"
op|')'
op|','
string|"'okay'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-delete-at'"
op|')'
op|','
string|"'9876543210'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'_limit_max_file_size'
newline|'\n'
DECL|member|test_COPY_source_larger_than_max_file_size
name|'def'
name|'test_COPY_source_larger_than_max_file_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c/o'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|class|LargeResponseBody
name|'class'
name|'LargeResponseBody'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__len__
indent|'            '
name|'def'
name|'__len__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'constraints'
op|'.'
name|'MAX_FILE_SIZE'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"''"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'copy_from_obj_body'
op|'='
name|'LargeResponseBody'
op|'('
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc'
nl|'\n'
name|'kwargs'
op|'='
name|'dict'
op|'('
name|'body'
op|'='
name|'copy_from_obj_body'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'HTTPException'
name|'as'
name|'resp'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'413'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'_limit_max_file_size'
newline|'\n'
DECL|member|test_COPY_account_source_larger_than_max_file_size
name|'def'
name|'test_COPY_account_source_larger_than_max_file_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c1/o'"
op|','
nl|'\n'
string|"'Destination-Account'"
op|':'
string|"'a1'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|class|LargeResponseBody
name|'class'
name|'LargeResponseBody'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__len__
indent|'            '
name|'def'
name|'__len__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'constraints'
op|'.'
name|'MAX_FILE_SIZE'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
string|"''"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'copy_from_obj_body'
op|'='
name|'LargeResponseBody'
op|'('
op|')'
newline|'\n'
name|'status_list'
op|'='
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
comment|'#              acct cont objc objc objc'
nl|'\n'
name|'kwargs'
op|'='
name|'dict'
op|'('
name|'body'
op|'='
name|'copy_from_obj_body'
op|')'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'controller_context'
op|'('
name|'req'
op|','
op|'*'
name|'status_list'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
name|'as'
name|'controller'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'HTTPException'
name|'as'
name|'resp'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'413'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_newest
dedent|''
name|'def'
name|'test_COPY_newest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c/o'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'account'
op|'='
string|"'a'"
newline|'\n'
name|'controller'
op|'.'
name|'object_name'
op|'='
string|"'o'"
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
comment|'# act cont objc objc objc obj  obj  obj'
nl|'\n'
name|'timestamps'
op|'='
op|'('
string|"'1'"
op|','
string|"'1'"
op|','
string|"'1'"
op|','
string|"'3'"
op|','
string|"'2'"
op|','
string|"'4'"
op|','
string|"'4'"
op|','
nl|'\n'
string|"'4'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from-last-modified'"
op|']'
op|','
nl|'\n'
string|"'3'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_account_newest
dedent|''
dedent|''
name|'def'
name|'test_COPY_account_newest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c1/o'"
op|','
nl|'\n'
string|"'Destination-Account'"
op|':'
string|"'a1'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'account'
op|'='
string|"'a'"
newline|'\n'
name|'controller'
op|'.'
name|'object_name'
op|'='
string|"'o'"
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
comment|'# act cont acct cont objc objc objc obj  obj  obj'
nl|'\n'
name|'timestamps'
op|'='
op|'('
string|"'1'"
op|','
string|"'1'"
op|','
string|"'1'"
op|','
string|"'1'"
op|','
string|"'3'"
op|','
string|"'2'"
op|','
string|"'1'"
op|','
nl|'\n'
string|"'4'"
op|','
string|"'4'"
op|','
string|"'4'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-copied-from-last-modified'"
op|']'
op|','
nl|'\n'
string|"'3'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_delete_at
dedent|''
dedent|''
name|'def'
name|'test_COPY_delete_at'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'backend_requests'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|capture_requests
name|'def'
name|'capture_requests'
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'method'
op|','
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
name|'None'
op|','
name|'query_string'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'backend_requests'
op|'.'
name|'append'
op|'('
op|'('
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
name|'give_connect'
op|'='
name|'capture_requests'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c/o'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'201'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
comment|'# sanity'
newline|'\n'
name|'for'
name|'method'
op|','
name|'path'
op|','
name|'given_headers'
name|'in'
name|'backend_requests'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'method'
op|'!='
string|"'PUT'"
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'given_headers'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At'"
op|')'
op|','
nl|'\n'
string|"'9876543210'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'X-Delete-At-Host'"
name|'in'
name|'given_headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'X-Delete-At-Device'"
name|'in'
name|'given_headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'X-Delete-At-Partition'"
name|'in'
name|'given_headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'X-Delete-At-Container'"
name|'in'
name|'given_headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_account_delete_at
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_COPY_account_delete_at'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'backend_requests'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|capture_requests
name|'def'
name|'capture_requests'
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'method'
op|','
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
name|'None'
op|','
name|'query_string'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'backend_requests'
op|'.'
name|'append'
op|'('
op|'('
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
name|'give_connect'
op|'='
name|'capture_requests'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'/c1/o'"
op|','
nl|'\n'
string|"'Destination-Account'"
op|':'
string|"'a1'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'201'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
comment|'# sanity'
newline|'\n'
name|'for'
name|'method'
op|','
name|'path'
op|','
name|'given_headers'
name|'in'
name|'backend_requests'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'method'
op|'!='
string|"'PUT'"
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'given_headers'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At'"
op|')'
op|','
nl|'\n'
string|"'9876543210'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'X-Delete-At-Host'"
name|'in'
name|'given_headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'X-Delete-At-Device'"
name|'in'
name|'given_headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'X-Delete-At-Partition'"
name|'in'
name|'given_headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'X-Delete-At-Container'"
name|'in'
name|'given_headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_chunked_put
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_chunked_put'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|ChunkedFile
indent|'        '
name|'class'
name|'ChunkedFile'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'bytes'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'bytes'
op|'='
name|'bytes'
newline|'\n'
name|'self'
op|'.'
name|'read_bytes'
op|'='
number|'0'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|bytes_left
name|'def'
name|'bytes_left'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'bytes'
op|'-'
name|'self'
op|'.'
name|'read_bytes'
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|','
name|'amt'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'read_bytes'
op|'>='
name|'self'
op|'.'
name|'bytes'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'StopIteration'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'amt'
op|':'
newline|'\n'
indent|'                    '
name|'amt'
op|'='
name|'self'
op|'.'
name|'bytes_left'
newline|'\n'
dedent|''
name|'data'
op|'='
string|"'a'"
op|'*'
name|'min'
op|'('
name|'amt'
op|','
name|'self'
op|'.'
name|'bytes_left'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'read_bytes'
op|'+='
name|'len'
op|'('
name|'data'
op|')'
newline|'\n'
name|'return'
name|'data'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
DECL|variable|controller
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
DECL|variable|req
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Transfer-Encoding'"
op|':'
string|"'chunked'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'body_file'
op|'='
name|'ChunkedFile'
op|'('
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
DECL|variable|res
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|','
number|'2'
op|')'
comment|'# success'
newline|'\n'
nl|'\n'
comment|'# test 413 entity to large'
nl|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
DECL|variable|req
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Transfer-Encoding'"
op|':'
string|"'chunked'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'body_file'
op|'='
name|'ChunkedFile'
op|'('
number|'11'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.constraints.MAX_FILE_SIZE'"
op|','
number|'10'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'413'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_chunked_put_bad_version
name|'def'
name|'test_chunked_put_bad_version'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check bad version'
nl|'\n'
indent|'        '
op|'('
name|'prolis'
op|','
name|'acc1lis'
op|','
name|'acc2lis'
op|','
name|'con1lis'
op|','
name|'con2lis'
op|','
name|'obj1lis'
op|','
nl|'\n'
name|'obj2lis'
op|','
name|'obj3lis'
op|')'
op|'='
name|'_test_sockets'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v0 HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nContent-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 412'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_chunked_put_bad_path
name|'def'
name|'test_chunked_put_bad_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check bad path'
nl|'\n'
indent|'        '
op|'('
name|'prolis'
op|','
name|'acc1lis'
op|','
name|'acc2lis'
op|','
name|'con1lis'
op|','
name|'con2lis'
op|','
name|'obj1lis'
op|','
nl|'\n'
name|'obj2lis'
op|','
name|'obj3lis'
op|')'
op|'='
name|'_test_sockets'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET invalid HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nContent-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 404'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_chunked_put_bad_utf8
name|'def'
name|'test_chunked_put_bad_utf8'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check invalid utf-8'
nl|'\n'
indent|'        '
op|'('
name|'prolis'
op|','
name|'acc1lis'
op|','
name|'acc2lis'
op|','
name|'con1lis'
op|','
name|'con2lis'
op|','
name|'obj1lis'
op|','
nl|'\n'
name|'obj2lis'
op|','
name|'obj3lis'
op|')'
op|'='
name|'_test_sockets'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a%80 HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Auth-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 412'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_chunked_put_bad_path_no_controller
name|'def'
name|'test_chunked_put_bad_path_no_controller'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check bad path, no controller'
nl|'\n'
indent|'        '
op|'('
name|'prolis'
op|','
name|'acc1lis'
op|','
name|'acc2lis'
op|','
name|'con1lis'
op|','
name|'con2lis'
op|','
name|'obj1lis'
op|','
nl|'\n'
name|'obj2lis'
op|','
name|'obj3lis'
op|')'
op|'='
name|'_test_sockets'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1 HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Auth-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 412'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_chunked_put_bad_method
name|'def'
name|'test_chunked_put_bad_method'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check bad method'
nl|'\n'
indent|'        '
op|'('
name|'prolis'
op|','
name|'acc1lis'
op|','
name|'acc2lis'
op|','
name|'con1lis'
op|','
name|'con2lis'
op|','
name|'obj1lis'
op|','
nl|'\n'
name|'obj2lis'
op|','
name|'obj3lis'
op|')'
op|'='
name|'_test_sockets'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'LICK /v1/a HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Auth-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 405'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_chunked_put_unhandled_exception
name|'def'
name|'test_chunked_put_unhandled_exception'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Check unhandled exception'
nl|'\n'
indent|'        '
op|'('
name|'prosrv'
op|','
name|'acc1srv'
op|','
name|'acc2srv'
op|','
name|'con1srv'
op|','
name|'con2srv'
op|','
name|'obj1srv'
op|','
nl|'\n'
name|'obj2srv'
op|','
name|'obj3srv'
op|')'
op|'='
name|'_test_servers'
newline|'\n'
op|'('
name|'prolis'
op|','
name|'acc1lis'
op|','
name|'acc2lis'
op|','
name|'con1lis'
op|','
name|'con2lis'
op|','
name|'obj1lis'
op|','
nl|'\n'
name|'obj2lis'
op|','
name|'obj3lis'
op|')'
op|'='
name|'_test_sockets'
newline|'\n'
name|'orig_update_request'
op|'='
name|'prosrv'
op|'.'
name|'update_request'
newline|'\n'
nl|'\n'
DECL|function|broken_update_request
name|'def'
name|'broken_update_request'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'fake: this should be printed'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'prosrv'
op|'.'
name|'update_request'
op|'='
name|'broken_update_request'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'HEAD /v1/a HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Auth-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 500'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'prosrv'
op|'.'
name|'update_request'
op|'='
name|'orig_update_request'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_chunked_put_head_account
name|'def'
name|'test_chunked_put_head_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Head account, just a double check and really is here to test'
nl|'\n'
comment|"# the part Application.log_request that 'enforces' a"
nl|'\n'
comment|'# content_length on the response.'
nl|'\n'
indent|'        '
op|'('
name|'prolis'
op|','
name|'acc1lis'
op|','
name|'acc2lis'
op|','
name|'con1lis'
op|','
name|'con2lis'
op|','
name|'obj1lis'
op|','
nl|'\n'
name|'obj2lis'
op|','
name|'obj3lis'
op|')'
op|'='
name|'_test_sockets'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'HEAD /v1/a HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Auth-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 204'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'\\r\\nContent-Length: 0\\r\\n'"
name|'in'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_chunked_put_utf8_all_the_way_down
name|'def'
name|'test_chunked_put_utf8_all_the_way_down'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Test UTF-8 Unicode all the way through the system'
nl|'\n'
indent|'        '
name|'ustr'
op|'='
string|"'\\xe1\\xbc\\xb8\\xce\\xbf\\xe1\\xbd\\xba \\xe1\\xbc\\xb0\\xce'"
string|"'\\xbf\\xe1\\xbd\\xbb\\xce\\x87 \\xcf\\x84\\xe1\\xbd\\xb0 \\xcf'"
string|"'\\x80\\xe1\\xbd\\xb1\\xce\\xbd\\xcf\\x84\\xca\\xbc \\xe1\\xbc'"
string|"'\\x82\\xce\\xbd \\xe1\\xbc\\x90\\xce\\xbe\\xe1\\xbd\\xb5\\xce'"
string|"'\\xba\\xce\\xbf\\xce\\xb9 \\xcf\\x83\\xce\\xb1\\xcf\\x86\\xe1'"
string|"'\\xbf\\x86.Test'"
newline|'\n'
name|'ustr_short'
op|'='
string|"'\\xe1\\xbc\\xb8\\xce\\xbf\\xe1\\xbd\\xbatest'"
newline|'\n'
comment|'# Create ustr container'
nl|'\n'
op|'('
name|'prolis'
op|','
name|'acc1lis'
op|','
name|'acc2lis'
op|','
name|'con1lis'
op|','
name|'con2lis'
op|','
name|'obj1lis'
op|','
nl|'\n'
name|'obj2lis'
op|','
name|'obj3lis'
op|')'
op|'='
name|'_test_sockets'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/%s HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|'%'
name|'quote'
op|'('
name|'ustr'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
comment|'# List account with ustr container (test plain)'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'containers'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'ustr'
name|'in'
name|'containers'
op|')'
newline|'\n'
comment|'# List account with ustr container (test json)'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a?format=json HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\nConnection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\nContent-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'listing'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'ustr'
op|'.'
name|'decode'
op|'('
string|"'utf8'"
op|')'
name|'in'
op|'['
name|'l'
op|'['
string|"'name'"
op|']'
name|'for'
name|'l'
name|'in'
name|'listing'
op|']'
op|')'
newline|'\n'
comment|'# List account with ustr container (test xml)'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a?format=xml HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\nConnection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\nContent-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'<name>%s</name>'"
op|'%'
name|'ustr'
name|'in'
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# Create ustr object with ustr metadata in ustr container'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/%s/%s HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'X-Object-Meta-%s: %s\\r\\nContent-Length: 0\\r\\n\\r\\n'"
op|'%'
nl|'\n'
op|'('
name|'quote'
op|'('
name|'ustr'
op|')'
op|','
name|'quote'
op|'('
name|'ustr'
op|')'
op|','
name|'quote'
op|'('
name|'ustr_short'
op|')'
op|','
nl|'\n'
name|'quote'
op|'('
name|'ustr'
op|')'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
comment|'# List ustr container with ustr object (test plain)'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/%s HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|'%'
name|'quote'
op|'('
name|'ustr'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'objects'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'ustr'
name|'in'
name|'objects'
op|')'
newline|'\n'
comment|'# List ustr container with ustr object (test json)'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/%s?format=json HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\nConnection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\nContent-Length: 0\\r\\n\\r\\n'"
op|'%'
nl|'\n'
name|'quote'
op|'('
name|'ustr'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'listing'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'listing'
op|'['
number|'0'
op|']'
op|'['
string|"'name'"
op|']'
op|','
name|'ustr'
op|'.'
name|'decode'
op|'('
string|"'utf8'"
op|')'
op|')'
newline|'\n'
comment|'# List ustr container with ustr object (test xml)'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/%s?format=xml HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\nConnection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\nContent-Length: 0\\r\\n\\r\\n'"
op|'%'
nl|'\n'
name|'quote'
op|'('
name|'ustr'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'<name>%s</name>'"
op|'%'
name|'ustr'
name|'in'
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# Retrieve ustr object with ustr metadata'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/%s/%s HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|'%'
nl|'\n'
op|'('
name|'quote'
op|'('
name|'ustr'
op|')'
op|','
name|'quote'
op|'('
name|'ustr'
op|')'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'\\r\\nX-Object-Meta-%s: %s\\r\\n'"
op|'%'
nl|'\n'
op|'('
name|'quote'
op|'('
name|'ustr_short'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
op|','
name|'quote'
op|'('
name|'ustr'
op|')'
op|')'
name|'in'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_chunked_put_chunked_put
name|'def'
name|'test_chunked_put_chunked_put'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Do chunked object put'
nl|'\n'
indent|'        '
op|'('
name|'prolis'
op|','
name|'acc1lis'
op|','
name|'acc2lis'
op|','
name|'con1lis'
op|','
name|'con2lis'
op|','
name|'obj1lis'
op|','
nl|'\n'
name|'obj2lis'
op|','
name|'obj3lis'
op|')'
op|'='
name|'_test_sockets'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
comment|'# Also happens to assert that x-storage-token is taken as a'
nl|'\n'
comment|'# replacement for x-auth-token.'
nl|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/c/o/chunky HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Transfer-Encoding: chunked\\r\\n\\r\\n'"
nl|'\n'
string|"'2\\r\\noh\\r\\n4\\r\\n hai\\r\\nf\\r\\n123456789abcdef\\r\\n'"
nl|'\n'
string|"'0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
comment|'# Ensure we get what we put'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/c/o/chunky HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Auth-Token: t\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'body'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"'oh hai123456789abcdef'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_conditional_range_get
name|'def'
name|'test_conditional_range_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'prolis'
op|','
name|'acc1lis'
op|','
name|'acc2lis'
op|','
name|'con1lis'
op|','
name|'con2lis'
op|','
name|'obj1lis'
op|','
name|'obj2lis'
op|','
nl|'\n'
name|'obj3lis'
op|')'
op|'='
name|'_test_sockets'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# make a container'
nl|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/con HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
comment|'# put an object in it'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/con/o HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 10\\r\\n'"
nl|'\n'
string|"'Content-Type: text/plain\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
nl|'\n'
string|"'abcdefghij\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
comment|'# request with both If-None-Match and Range'
nl|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
string|'"abcdefghij"'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/con/o HTTP/1.1\\r\\n'"
op|'+'
nl|'\n'
string|"'Host: localhost\\r\\n'"
op|'+'
nl|'\n'
string|"'Connection: close\\r\\n'"
op|'+'
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
op|'+'
nl|'\n'
string|'\'If-None-Match: "\''
op|'+'
name|'etag'
op|'+'
string|'\'"\\r\\n\''
op|'+'
nl|'\n'
string|"'Range: bytes=3-8\\r\\n'"
op|'+'
nl|'\n'
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 304'"
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_mismatched_etags
dedent|''
name|'def'
name|'test_mismatched_etags'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# no etag supplied, object servers return success w/ diff values'
nl|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
name|'etags'
op|'='
op|'['
name|'None'
op|','
nl|'\n'
string|"'68b329da9893e34099c7d8ad5cb9c940'"
op|','
nl|'\n'
string|"'68b329da9893e34099c7d8ad5cb9c940'"
op|','
nl|'\n'
string|"'68b329da9893e34099c7d8ad5cb9c941'"
op|']'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|','
number|'5'
op|')'
comment|'# server error'
newline|'\n'
nl|'\n'
comment|'# req supplies etag, object servers return 422 - mismatch'
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'ETag'"
op|':'
string|"'68b329da9893e34099c7d8ad5cb9c940'"
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'422'
op|','
number|'422'
op|','
number|'503'
op|','
nl|'\n'
name|'etags'
op|'='
op|'['
string|"'68b329da9893e34099c7d8ad5cb9c940'"
op|','
nl|'\n'
string|"'68b329da9893e34099c7d8ad5cb9c941'"
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
name|'None'
op|']'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|','
number|'4'
op|')'
comment|'# client error'
newline|'\n'
nl|'\n'
DECL|member|test_response_get_accept_ranges_header
dedent|''
dedent|''
name|'def'
name|'test_response_get_accept_ranges_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'GET'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'accept-ranges'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'accept-ranges'"
op|']'
op|','
string|"'bytes'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_response_head_accept_ranges_header
dedent|''
dedent|''
name|'def'
name|'test_response_head_accept_ranges_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'HEAD'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'accept-ranges'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'accept-ranges'"
op|']'
op|','
string|"'bytes'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_GET_calls_authorize
dedent|''
dedent|''
name|'def'
name|'test_GET_calls_authorize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|authorize
name|'def'
name|'authorize'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'authorize'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'GET'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_HEAD_calls_authorize
dedent|''
name|'def'
name|'test_HEAD_calls_authorize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|authorize
name|'def'
name|'authorize'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'authorize'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'HEAD'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_calls_authorize
dedent|''
name|'def'
name|'test_POST_calls_authorize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|authorize
name|'def'
name|'authorize'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_post_as_copy'
op|'='
name|'False'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|'}'
op|','
name|'body'
op|'='
string|"'12345'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'authorize'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'POST'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_as_copy_calls_authorize
dedent|''
name|'def'
name|'test_POST_as_copy_calls_authorize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|authorize
name|'def'
name|'authorize'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|'}'
op|','
name|'body'
op|'='
string|"'12345'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'authorize'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'POST'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_calls_authorize
dedent|''
name|'def'
name|'test_PUT_calls_authorize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|authorize
name|'def'
name|'authorize'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|'}'
op|','
name|'body'
op|'='
string|"'12345'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'authorize'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_COPY_calls_authorize
dedent|''
name|'def'
name|'test_COPY_calls_authorize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|authorize
name|'def'
name|'authorize'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Destination'"
op|':'
string|"'c/o'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'authorize'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'COPY'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_converts_delete_after_to_delete_at
dedent|''
name|'def'
name|'test_POST_converts_delete_after_to_delete_at'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_post_as_copy'
op|'='
name|'False'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'202'
op|','
number|'202'
op|','
number|'202'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'orig_time'
op|'='
name|'time'
op|'.'
name|'time'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'t'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'time'
op|'.'
name|'time'
op|'='
name|'lambda'
op|':'
name|'t'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
op|'{'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'foo/bar'"
op|','
nl|'\n'
string|"'X-Delete-After'"
op|':'
string|"'60'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'POST'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|','
string|"'202 Fake'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-delete-at'"
op|')'
op|','
nl|'\n'
name|'str'
op|'('
name|'int'
op|'('
name|'t'
op|'+'
number|'60'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'time'
op|'.'
name|'time'
op|'='
name|'orig_time'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'unpatch_policies'
newline|'\n'
DECL|member|test_leak_1
name|'def'
name|'test_leak_1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'_request_instances'
op|'='
name|'weakref'
op|'.'
name|'WeakKeyDictionary'
op|'('
op|')'
newline|'\n'
name|'_orig_init'
op|'='
name|'Request'
op|'.'
name|'__init__'
newline|'\n'
nl|'\n'
DECL|function|request_init
name|'def'
name|'request_init'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'_orig_init'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'_request_instances'
op|'['
name|'self'
op|']'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'Request'
op|','
string|'"__init__"'
op|','
name|'request_init'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'prosrv'
op|'='
name|'_test_servers'
op|'['
number|'0'
op|']'
newline|'\n'
name|'obj_len'
op|'='
name|'prosrv'
op|'.'
name|'client_chunk_size'
op|'*'
number|'2'
newline|'\n'
comment|'# PUT test file'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/c/test_leak_1 HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Auth-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: %s\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'obj_len'
op|','
string|"'a'"
op|'*'
name|'obj_len'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
comment|'# Remember Request instance count, make sure the GC is run for'
nl|'\n'
comment|'# pythons without reference counting.'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'4'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'sleep'
op|'('
number|'0'
op|')'
comment|'# let eventlet do its thing'
newline|'\n'
name|'gc'
op|'.'
name|'collect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
dedent|''
name|'before_request_instances'
op|'='
name|'len'
op|'('
name|'_request_instances'
op|')'
newline|'\n'
comment|'# GET test file, but disconnect early'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/c/test_leak_1 HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Auth-Token: t\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'read'
op|'('
number|'1'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'sock'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
comment|'# Make sure the GC is run again for pythons without reference'
nl|'\n'
comment|'# counting'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'4'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'sleep'
op|'('
number|'0'
op|')'
comment|'# let eventlet do its thing'
newline|'\n'
name|'gc'
op|'.'
name|'collect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'sleep'
op|'('
number|'0'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'before_request_instances'
op|','
name|'len'
op|'('
name|'_request_instances'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_OPTIONS
dedent|''
dedent|''
name|'def'
name|'test_OPTIONS'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o.jpg'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|my_empty_container_info
name|'def'
name|'my_empty_container_info'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'controller'
op|'.'
name|'container_info'
op|'='
name|'my_empty_container_info'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o.jpg'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'http://foo.com'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'401'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|function|my_empty_origin_container_info
name|'def'
name|'my_empty_origin_container_info'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'cors'"
op|':'
op|'{'
string|"'allow_origin'"
op|':'
name|'None'
op|'}'
op|'}'
newline|'\n'
dedent|''
name|'controller'
op|'.'
name|'container_info'
op|'='
name|'my_empty_origin_container_info'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o.jpg'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'http://foo.com'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'401'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|function|my_container_info
name|'def'
name|'my_container_info'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
nl|'\n'
string|"'cors'"
op|':'
op|'{'
nl|'\n'
string|"'allow_origin'"
op|':'
string|"'http://foo.bar:8080 https://foo.bar'"
op|','
nl|'\n'
string|"'max_age'"
op|':'
string|"'999'"
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'controller'
op|'.'
name|'container_info'
op|'='
name|'my_container_info'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o.jpg'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'https://foo.bar'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"'https://foo.bar'"
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-origin'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'verb'
name|'in'
string|"'OPTIONS COPY GET POST PUT DELETE HEAD'"
op|'.'
name|'split'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'verb'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-methods'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'len'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-methods'"
op|']'
op|'.'
name|'split'
op|'('
string|"', '"
op|')'
op|')'
op|','
nl|'\n'
number|'7'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'999'"
op|','
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-max-age'"
op|']'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o.jpg'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'https://foo.bar'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'401'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o.jpg'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'for'
name|'verb'
name|'in'
string|"'OPTIONS COPY GET POST PUT DELETE HEAD'"
op|'.'
name|'split'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'verb'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Allow'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Allow'"
op|']'
op|'.'
name|'split'
op|'('
string|"', '"
op|')'
op|')'
op|','
number|'7'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o.jpg'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'http://foo.com'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'401'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o.jpg'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'http://foo.bar'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'cors_allow_origin'
op|'='
op|'['
string|"'http://foo.bar'"
op|','
op|']'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|function|my_container_info_wildcard
name|'def'
name|'my_container_info_wildcard'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
nl|'\n'
string|"'cors'"
op|':'
op|'{'
nl|'\n'
string|"'allow_origin'"
op|':'
string|"'*'"
op|','
nl|'\n'
string|"'max_age'"
op|':'
string|"'999'"
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'controller'
op|'.'
name|'container_info'
op|'='
name|'my_container_info_wildcard'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o.jpg'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'https://bar.baz'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'*'"
op|','
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-origin'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'verb'
name|'in'
string|"'OPTIONS COPY GET POST PUT DELETE HEAD'"
op|'.'
name|'split'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'verb'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-methods'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'len'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-methods'"
op|']'
op|'.'
name|'split'
op|'('
string|"', '"
op|')'
op|')'
op|','
nl|'\n'
number|'7'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'999'"
op|','
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-max-age'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_CORS_valid
dedent|''
dedent|''
name|'def'
name|'test_CORS_valid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|stubContainerInfo
name|'def'
name|'stubContainerInfo'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
nl|'\n'
string|"'cors'"
op|':'
op|'{'
nl|'\n'
string|"'allow_origin'"
op|':'
string|"'http://not.foo.bar'"
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'controller'
op|'.'
name|'container_info'
op|'='
name|'stubContainerInfo'
newline|'\n'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'strict_cors_mode'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|objectGET
name|'def'
name|'objectGET'
op|'('
name|'controller'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'Response'
op|'('
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Object-Meta-Color'"
op|':'
string|"'red'"
op|','
nl|'\n'
string|"'X-Super-Secret'"
op|':'
string|"'hush'"
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o.jpg'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'http://foo.bar'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'cors_validation'
op|'('
name|'objectGET'
op|')'
op|'('
name|'controller'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'http://foo.bar'"
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-origin'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'red'"
op|','
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-object-meta-color'"
op|']'
op|')'
newline|'\n'
comment|'# X-Super-Secret is in the response, but not "exposed"'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'hush'"
op|','
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-super-secret'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'access-control-expose-headers'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'exposed'
op|'='
name|'set'
op|'('
nl|'\n'
name|'h'
op|'.'
name|'strip'
op|'('
op|')'
name|'for'
name|'h'
name|'in'
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-expose-headers'"
op|']'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
op|')'
newline|'\n'
name|'expected_exposed'
op|'='
name|'set'
op|'('
op|'['
string|"'cache-control'"
op|','
string|"'content-language'"
op|','
nl|'\n'
string|"'content-type'"
op|','
string|"'expires'"
op|','
string|"'last-modified'"
op|','
nl|'\n'
string|"'pragma'"
op|','
string|"'etag'"
op|','
string|"'x-timestamp'"
op|','
nl|'\n'
string|"'x-trans-id'"
op|','
string|"'x-object-meta-color'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_exposed'
op|','
name|'exposed'
op|')'
newline|'\n'
nl|'\n'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'strict_cors_mode'
op|'='
name|'True'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o.jpg'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'http://foo.bar'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'cors_validation'
op|'('
name|'objectGET'
op|')'
op|'('
name|'controller'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'access-control-allow-origin'"
name|'not'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_CORS_valid_with_obj_headers
dedent|''
dedent|''
name|'def'
name|'test_CORS_valid_with_obj_headers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|stubContainerInfo
name|'def'
name|'stubContainerInfo'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
nl|'\n'
string|"'cors'"
op|':'
op|'{'
nl|'\n'
string|"'allow_origin'"
op|':'
string|"'http://foo.bar'"
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'controller'
op|'.'
name|'container_info'
op|'='
name|'stubContainerInfo'
newline|'\n'
nl|'\n'
DECL|function|objectGET
name|'def'
name|'objectGET'
op|'('
name|'controller'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'Response'
op|'('
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Object-Meta-Color'"
op|':'
string|"'red'"
op|','
nl|'\n'
string|"'X-Super-Secret'"
op|':'
string|"'hush'"
op|','
nl|'\n'
string|"'Access-Control-Allow-Origin'"
op|':'
string|"'http://obj.origin'"
op|','
nl|'\n'
string|"'Access-Control-Expose-Headers'"
op|':'
string|"'x-trans-id'"
nl|'\n'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o.jpg'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'http://foo.bar'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'cors_validation'
op|'('
name|'objectGET'
op|')'
op|'('
name|'controller'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'http://obj.origin'"
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-origin'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'x-trans-id'"
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-expose-headers'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_gather_x_container_headers
dedent|''
dedent|''
name|'def'
name|'_gather_x_container_headers'
op|'('
name|'self'
op|','
name|'controller_call'
op|','
name|'req'
op|','
op|'*'
name|'connect_args'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'header_list'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'header_list'"
op|','
op|'['
string|"'X-Container-Device'"
op|','
nl|'\n'
string|"'X-Container-Host'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|']'
op|')'
newline|'\n'
name|'seen_headers'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|capture_headers
name|'def'
name|'capture_headers'
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'method'
op|','
nl|'\n'
name|'path'
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'query_string'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'captured'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'header'
name|'in'
name|'header_list'
op|':'
newline|'\n'
indent|'                '
name|'captured'
op|'['
name|'header'
op|']'
op|'='
name|'headers'
op|'.'
name|'get'
op|'('
name|'header'
op|')'
newline|'\n'
dedent|''
name|'seen_headers'
op|'.'
name|'append'
op|'('
name|'captured'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
op|'*'
name|'connect_args'
op|','
name|'give_connect'
op|'='
name|'capture_headers'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller_call'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|')'
comment|'# sanity check'
newline|'\n'
nl|'\n'
comment|"# don't care about the account/container HEADs, so chuck"
nl|'\n'
comment|'# the first two requests'
nl|'\n'
name|'return'
name|'sorted'
op|'('
name|'seen_headers'
op|'['
number|'2'
op|':'
op|']'
op|','
nl|'\n'
name|'key'
op|'='
name|'lambda'
name|'d'
op|':'
name|'d'
op|'.'
name|'get'
op|'('
name|'header_list'
op|'['
number|'0'
op|']'
op|')'
name|'or'
string|"'z'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_x_container_headers_with_equal_replicas
dedent|''
dedent|''
name|'def'
name|'test_PUT_x_container_headers_with_equal_replicas'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|'}'
op|','
name|'body'
op|'='
string|"'12345'"
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'seen_headers'
op|'='
name|'self'
op|'.'
name|'_gather_x_container_headers'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'PUT'
op|','
name|'req'
op|','
nl|'\n'
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
comment|'# HEAD HEAD PUT PUT PUT'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'seen_headers'
op|','
op|'['
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'10.0.0.0:1000'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
string|"'sda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'10.0.0.1:1001'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
string|"'sdb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'10.0.0.2:1002'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
string|"'sdc'"
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_x_container_headers_with_fewer_container_replicas
dedent|''
name|'def'
name|'test_PUT_x_container_headers_with_fewer_container_replicas'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'set_replicas'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|'}'
op|','
name|'body'
op|'='
string|"'12345'"
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'seen_headers'
op|'='
name|'self'
op|'.'
name|'_gather_x_container_headers'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'PUT'
op|','
name|'req'
op|','
nl|'\n'
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
comment|'# HEAD HEAD PUT PUT PUT'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'seen_headers'
op|','
op|'['
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'10.0.0.0:1000'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
string|"'sda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'10.0.0.1:1001'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
string|"'sdb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
name|'None'
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_x_container_headers_with_more_container_replicas
dedent|''
name|'def'
name|'test_PUT_x_container_headers_with_more_container_replicas'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'set_replicas'
op|'('
number|'4'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|'}'
op|','
name|'body'
op|'='
string|"'12345'"
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'seen_headers'
op|'='
name|'self'
op|'.'
name|'_gather_x_container_headers'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'PUT'
op|','
name|'req'
op|','
nl|'\n'
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
comment|'# HEAD HEAD PUT PUT PUT'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'seen_headers'
op|','
op|'['
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'10.0.0.0:1000,10.0.0.3:1003'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
string|"'sda,sdd'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'10.0.0.1:1001'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
string|"'sdb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'10.0.0.2:1002'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
string|"'sdc'"
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_x_container_headers_with_more_container_replicas
dedent|''
name|'def'
name|'test_POST_x_container_headers_with_more_container_replicas'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'set_replicas'
op|'('
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_post_as_copy'
op|'='
name|'False'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/stuff'"
op|'}'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'seen_headers'
op|'='
name|'self'
op|'.'
name|'_gather_x_container_headers'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'POST'
op|','
name|'req'
op|','
nl|'\n'
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
comment|'# HEAD HEAD POST POST POST'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'seen_headers'
op|','
op|'['
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'10.0.0.0:1000,10.0.0.3:1003'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
string|"'sda,sdd'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'10.0.0.1:1001'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
string|"'sdb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'10.0.0.2:1002'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
string|"'sdc'"
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_DELETE_x_container_headers_with_more_container_replicas
dedent|''
name|'def'
name|'test_DELETE_x_container_headers_with_more_container_replicas'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'set_replicas'
op|'('
number|'4'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/stuff'"
op|'}'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'seen_headers'
op|'='
name|'self'
op|'.'
name|'_gather_x_container_headers'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'DELETE'
op|','
name|'req'
op|','
nl|'\n'
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
comment|'# HEAD HEAD DELETE DELETE DELETE'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'seen_headers'
op|','
op|'['
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'10.0.0.0:1000,10.0.0.3:1003'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
string|"'sda,sdd'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'10.0.0.1:1001'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
string|"'sdb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'10.0.0.2:1002'"
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
string|"'sdc'"
op|'}'
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.time'"
op|','
name|'new'
op|'='
name|'lambda'
op|':'
name|'STATIC_TIME'
op|')'
newline|'\n'
DECL|member|test_PUT_x_delete_at_with_fewer_container_replicas
name|'def'
name|'test_PUT_x_delete_at_with_fewer_container_replicas'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'set_replicas'
op|'('
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'delete_at_timestamp'
op|'='
name|'int'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
number|'100000'
newline|'\n'
name|'delete_at_container'
op|'='
name|'utils'
op|'.'
name|'get_expirer_container'
op|'('
nl|'\n'
name|'delete_at_timestamp'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'expiring_objects_container_divisor'
op|','
nl|'\n'
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/stuff'"
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Delete-At'"
op|':'
name|'str'
op|'('
name|'delete_at_timestamp'
op|')'
op|'}'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'seen_headers'
op|'='
name|'self'
op|'.'
name|'_gather_x_container_headers'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'PUT'
op|','
name|'req'
op|','
nl|'\n'
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
comment|'# HEAD HEAD PUT PUT PUT'
nl|'\n'
name|'header_list'
op|'='
op|'('
string|"'X-Delete-At-Host'"
op|','
string|"'X-Delete-At-Device'"
op|','
nl|'\n'
string|"'X-Delete-At-Partition'"
op|','
string|"'X-Delete-At-Container'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'seen_headers'
op|','
op|'['
nl|'\n'
op|'{'
string|"'X-Delete-At-Host'"
op|':'
string|"'10.0.0.0:1000'"
op|','
nl|'\n'
string|"'X-Delete-At-Container'"
op|':'
name|'delete_at_container'
op|','
nl|'\n'
string|"'X-Delete-At-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Delete-At-Device'"
op|':'
string|"'sda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Delete-At-Host'"
op|':'
string|"'10.0.0.1:1001'"
op|','
nl|'\n'
string|"'X-Delete-At-Container'"
op|':'
name|'delete_at_container'
op|','
nl|'\n'
string|"'X-Delete-At-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Delete-At-Device'"
op|':'
string|"'sdb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Delete-At-Host'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'X-Delete-At-Container'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'X-Delete-At-Partition'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'X-Delete-At-Device'"
op|':'
name|'None'
op|'}'
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.time'"
op|','
name|'new'
op|'='
name|'lambda'
op|':'
name|'STATIC_TIME'
op|')'
newline|'\n'
DECL|member|test_PUT_x_delete_at_with_more_container_replicas
name|'def'
name|'test_PUT_x_delete_at_with_more_container_replicas'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'set_replicas'
op|'('
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'expiring_objects_account'
op|'='
string|"'expires'"
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'expiring_objects_container_divisor'
op|'='
number|'60'
newline|'\n'
nl|'\n'
name|'delete_at_timestamp'
op|'='
name|'int'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
number|'100000'
newline|'\n'
name|'delete_at_container'
op|'='
name|'utils'
op|'.'
name|'get_expirer_container'
op|'('
nl|'\n'
name|'delete_at_timestamp'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'expiring_objects_container_divisor'
op|','
nl|'\n'
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/stuff'"
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'X-Delete-At'"
op|':'
name|'str'
op|'('
name|'delete_at_timestamp'
op|')'
op|'}'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'ReplicatedObjectController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'seen_headers'
op|'='
name|'self'
op|'.'
name|'_gather_x_container_headers'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'PUT'
op|','
name|'req'
op|','
nl|'\n'
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
comment|'# HEAD HEAD PUT PUT PUT'
nl|'\n'
name|'header_list'
op|'='
op|'('
string|"'X-Delete-At-Host'"
op|','
string|"'X-Delete-At-Device'"
op|','
nl|'\n'
string|"'X-Delete-At-Partition'"
op|','
string|"'X-Delete-At-Container'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'seen_headers'
op|','
op|'['
nl|'\n'
op|'{'
string|"'X-Delete-At-Host'"
op|':'
string|"'10.0.0.0:1000,10.0.0.3:1003'"
op|','
nl|'\n'
string|"'X-Delete-At-Container'"
op|':'
name|'delete_at_container'
op|','
nl|'\n'
string|"'X-Delete-At-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Delete-At-Device'"
op|':'
string|"'sda,sdd'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Delete-At-Host'"
op|':'
string|"'10.0.0.1:1001'"
op|','
nl|'\n'
string|"'X-Delete-At-Container'"
op|':'
name|'delete_at_container'
op|','
nl|'\n'
string|"'X-Delete-At-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Delete-At-Device'"
op|':'
string|"'sdb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Delete-At-Host'"
op|':'
string|"'10.0.0.2:1002'"
op|','
nl|'\n'
string|"'X-Delete-At-Container'"
op|':'
name|'delete_at_container'
op|','
nl|'\n'
string|"'X-Delete-At-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Delete-At-Device'"
op|':'
string|"'sdc'"
op|'}'
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestECMismatchedFA
dedent|''
dedent|''
name|'class'
name|'TestECMismatchedFA'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|tearDown
indent|'    '
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'prosrv'
op|'='
name|'_test_servers'
op|'['
number|'0'
op|']'
newline|'\n'
comment|"# don't leak error limits and poison other tests"
nl|'\n'
name|'prosrv'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_mixing_different_objects_fragment_archives
dedent|''
name|'def'
name|'test_mixing_different_objects_fragment_archives'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'('
name|'prosrv'
op|','
name|'acc1srv'
op|','
name|'acc2srv'
op|','
name|'con1srv'
op|','
name|'con2srv'
op|','
name|'obj1srv'
op|','
nl|'\n'
name|'obj2srv'
op|','
name|'obj3srv'
op|')'
op|'='
name|'_test_servers'
newline|'\n'
name|'ec_policy'
op|'='
name|'POLICIES'
op|'['
number|'3'
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'public'
newline|'\n'
DECL|function|bad_disk
name|'def'
name|'bad_disk'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'Response'
op|'('
name|'status'
op|'='
number|'507'
op|','
name|'body'
op|'='
string|'"borken"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'ensure_container'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|'"/v1/a/ec-crazytown"'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|'"REQUEST_METHOD"'
op|':'
string|'"PUT"'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|'"X-Storage-Policy"'
op|':'
string|'"ec"'
op|','
string|'"X-Auth-Token"'
op|':'
string|'"t"'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'ensure_container'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'resp'
op|'.'
name|'status_int'
name|'in'
op|'('
number|'201'
op|','
number|'202'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'obj1'
op|'='
string|'"first version..."'
newline|'\n'
name|'put_req1'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|'"/v1/a/ec-crazytown/obj"'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|'"REQUEST_METHOD"'
op|':'
string|'"PUT"'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|'"X-Auth-Token"'
op|':'
string|'"t"'
op|'}'
op|')'
newline|'\n'
name|'put_req1'
op|'.'
name|'body'
op|'='
name|'obj1'
newline|'\n'
nl|'\n'
name|'obj2'
op|'='
string|'u"versi\xc3\xb3n segundo"'
op|'.'
name|'encode'
op|'('
string|'"utf-8"'
op|')'
newline|'\n'
name|'put_req2'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|'"/v1/a/ec-crazytown/obj"'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|'"REQUEST_METHOD"'
op|':'
string|'"PUT"'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|'"X-Auth-Token"'
op|':'
string|'"t"'
op|'}'
op|')'
newline|'\n'
name|'put_req2'
op|'.'
name|'body'
op|'='
name|'obj2'
newline|'\n'
nl|'\n'
comment|"# pyeclib has checks for unequal-length; we don't want to trip those"
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'obj1'
op|')'
op|','
name|'len'
op|'('
name|'obj2'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Server obj1 will have the first version of the object (obj2 also'
nl|'\n'
comment|'# gets it, but that gets stepped on later)'
nl|'\n'
name|'prosrv'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'with'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'obj3srv'
op|','
string|"'PUT'"
op|','
name|'bad_disk'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'swift.common.storage_policy.ECStoragePolicy.quorum'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'type'
op|'('
name|'ec_policy'
op|')'
op|'.'
name|'quorum'
op|'='
name|'mock'
op|'.'
name|'PropertyMock'
op|'('
name|'return_value'
op|'='
number|'2'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'put_req1'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
nl|'\n'
comment|'# Servers obj2 and obj3 will have the second version of the object.'
nl|'\n'
name|'prosrv'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'with'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'obj1srv'
op|','
string|"'PUT'"
op|','
name|'bad_disk'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'swift.common.storage_policy.ECStoragePolicy.quorum'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'type'
op|'('
name|'ec_policy'
op|')'
op|'.'
name|'quorum'
op|'='
name|'mock'
op|'.'
name|'PropertyMock'
op|'('
name|'return_value'
op|'='
number|'2'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'put_req2'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
nl|'\n'
comment|'# A GET that only sees 1 fragment archive should fail'
nl|'\n'
name|'get_req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/v1/a/ec-crazytown/obj"'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|'"REQUEST_METHOD"'
op|':'
string|'"GET"'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|'"X-Auth-Token"'
op|':'
string|'"t"'
op|'}'
op|')'
newline|'\n'
name|'prosrv'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'with'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'obj1srv'
op|','
string|"'GET'"
op|','
name|'bad_disk'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'obj2srv'
op|','
string|"'GET'"
op|','
name|'bad_disk'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'get_req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
comment|'# A GET that sees 2 matching FAs will work'
nl|'\n'
name|'get_req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/v1/a/ec-crazytown/obj"'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|'"REQUEST_METHOD"'
op|':'
string|'"GET"'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|'"X-Auth-Token"'
op|':'
string|'"t"'
op|'}'
op|')'
newline|'\n'
name|'prosrv'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'obj1srv'
op|','
string|"'GET'"
op|','
name|'bad_disk'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'get_req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
name|'obj2'
op|')'
newline|'\n'
nl|'\n'
comment|'# A GET that sees 2 mismatching FAs will fail'
nl|'\n'
name|'get_req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/v1/a/ec-crazytown/obj"'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|'"REQUEST_METHOD"'
op|':'
string|'"GET"'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|'"X-Auth-Token"'
op|':'
string|'"t"'
op|'}'
op|')'
newline|'\n'
name|'prosrv'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'obj2srv'
op|','
string|"'GET'"
op|','
name|'bad_disk'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'get_req'
op|'.'
name|'get_response'
op|'('
name|'prosrv'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestObjectECRangedGET
dedent|''
dedent|''
name|'class'
name|'TestObjectECRangedGET'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
nl|'\n'
name|'None'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'proxy-ut'"
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|setUpClass
name|'def'
name|'setUpClass'
op|'('
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cls'
op|'.'
name|'obj_name'
op|'='
string|"'range-get-test'"
newline|'\n'
name|'cls'
op|'.'
name|'tiny_obj_name'
op|'='
string|"'range-get-test-tiny'"
newline|'\n'
name|'cls'
op|'.'
name|'aligned_obj_name'
op|'='
string|"'range-get-test-aligned'"
newline|'\n'
nl|'\n'
comment|'# Note: only works if called with unpatched policies'
nl|'\n'
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/ec-con HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'X-Storage-Policy: ec\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 2'"
newline|'\n'
name|'assert'
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|'=='
name|'exp'
op|','
string|'"container PUT failed"'
newline|'\n'
nl|'\n'
name|'seg_size'
op|'='
name|'POLICIES'
op|'.'
name|'get_by_name'
op|'('
string|'"ec"'
op|')'
op|'.'
name|'ec_segment_size'
newline|'\n'
name|'cls'
op|'.'
name|'seg_size'
op|'='
name|'seg_size'
newline|'\n'
comment|'# EC segment size is 4 KiB, hence this gives 4 segments, which we'
nl|'\n'
comment|'# then verify with a quick sanity check'
nl|'\n'
name|'cls'
op|'.'
name|'obj'
op|'='
string|"' my hovercraft is full of eels '"
op|'.'
name|'join'
op|'('
nl|'\n'
name|'str'
op|'('
name|'s'
op|')'
name|'for'
name|'s'
name|'in'
name|'range'
op|'('
number|'431'
op|')'
op|')'
newline|'\n'
name|'assert'
name|'seg_size'
op|'*'
number|'4'
op|'>'
name|'len'
op|'('
name|'cls'
op|'.'
name|'obj'
op|')'
op|'>'
name|'seg_size'
op|'*'
number|'3'
op|','
string|'"object is wrong number of segments"'
newline|'\n'
nl|'\n'
name|'cls'
op|'.'
name|'tiny_obj'
op|'='
string|"'tiny, tiny object'"
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'cls'
op|'.'
name|'tiny_obj'
op|')'
op|'<'
name|'seg_size'
op|','
string|'"tiny_obj too large"'
newline|'\n'
nl|'\n'
name|'cls'
op|'.'
name|'aligned_obj'
op|'='
string|'""'
op|'.'
name|'join'
op|'('
nl|'\n'
string|'"abcdEFGHijkl%04d"'
op|'%'
name|'x'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
number|'512'
op|')'
op|')'
newline|'\n'
name|'assert'
name|'len'
op|'('
name|'cls'
op|'.'
name|'aligned_obj'
op|')'
op|'%'
name|'seg_size'
op|'=='
number|'0'
op|','
string|'"aligned obj not aligned"'
newline|'\n'
nl|'\n'
name|'for'
name|'obj_name'
op|','
name|'obj'
name|'in'
op|'('
op|'('
name|'cls'
op|'.'
name|'obj_name'
op|','
name|'cls'
op|'.'
name|'obj'
op|')'
op|','
nl|'\n'
op|'('
name|'cls'
op|'.'
name|'tiny_obj_name'
op|','
name|'cls'
op|'.'
name|'tiny_obj'
op|')'
op|','
nl|'\n'
op|'('
name|'cls'
op|'.'
name|'aligned_obj_name'
op|','
name|'cls'
op|'.'
name|'aligned_obj'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/ec-con/%s HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'Content-Length: %d\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Type: donuts\\r\\n'"
nl|'\n'
string|"'\\r\\n%s'"
op|'%'
op|'('
name|'obj_name'
op|','
name|'len'
op|'('
name|'obj'
op|')'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'assert'
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|'=='
name|'exp'
op|','
string|'"object PUT failed %s"'
op|'%'
name|'obj_name'
newline|'\n'
nl|'\n'
DECL|member|_get_obj
dedent|''
dedent|''
name|'def'
name|'_get_obj'
op|'('
name|'self'
op|','
name|'range_value'
op|','
name|'obj_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'obj_name'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'obj_name'
op|'='
name|'self'
op|'.'
name|'obj_name'
newline|'\n'
nl|'\n'
dedent|''
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/ec-con/%s HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Range: %s\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|'%'
op|'('
name|'obj_name'
op|','
name|'range_value'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
comment|'# e.g. "HTTP/1.1 206 Partial Content\\r\\n..."'
nl|'\n'
name|'status_code'
op|'='
name|'int'
op|'('
name|'headers'
op|'['
number|'9'
op|':'
number|'12'
op|']'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'parse_headers_string'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'gotten_obj'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'buf'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
number|'64'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'buf'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'gotten_obj'
op|'+='
name|'buf'
newline|'\n'
nl|'\n'
comment|'# if we get this wrong, clients will either get truncated data or'
nl|'\n'
comment|"# they'll hang waiting for bytes that aren't coming, so it warrants"
nl|'\n'
comment|'# being asserted for every test case'
nl|'\n'
dedent|''
name|'if'
string|"'Content-Length'"
name|'in'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'int'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|')'
op|','
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# likewise, if we say MIME and don't send MIME or vice versa,"
nl|'\n'
comment|'# clients will be horribly confused'
nl|'\n'
dedent|''
name|'if'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'Content-Type'"
op|','
string|"''"
op|')'
op|'.'
name|'startswith'
op|'('
string|"'multipart/byteranges'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|'['
op|':'
number|'2'
op|']'
op|','
string|'"--"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|"# In general, this isn't true, as you can start an object with"
nl|'\n'
comment|'# "--". However, in this test, we don\'t start any objects with'
nl|'\n'
comment|'# "--", or even include "--" in their contents anywhere.'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'gotten_obj'
op|'['
op|':'
number|'2'
op|']'
op|','
string|'"--"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
op|'('
name|'status_code'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_parse_multipart
dedent|''
name|'def'
name|'_parse_multipart'
op|'('
name|'self'
op|','
name|'content_type'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'parser'
op|'='
name|'email'
op|'.'
name|'parser'
op|'.'
name|'FeedParser'
op|'('
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'feed'
op|'('
string|'"Content-Type: %s\\r\\n\\r\\n"'
op|'%'
name|'content_type'
op|')'
newline|'\n'
name|'parser'
op|'.'
name|'feed'
op|'('
name|'body'
op|')'
newline|'\n'
name|'root_message'
op|'='
name|'parser'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'root_message'
op|'.'
name|'is_multipart'
op|'('
op|')'
op|')'
newline|'\n'
name|'byteranges'
op|'='
name|'root_message'
op|'.'
name|'get_payload'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'root_message'
op|'.'
name|'defects'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'message'
name|'in'
name|'enumerate'
op|'('
name|'byteranges'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'message'
op|'.'
name|'defects'
op|','
string|'"Part %d had defects"'
op|'%'
name|'i'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'message'
op|'.'
name|'is_multipart'
op|'('
op|')'
op|','
nl|'\n'
string|'"Nested multipart at %d"'
op|'%'
name|'i'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'byteranges'
newline|'\n'
nl|'\n'
DECL|member|test_bogus
dedent|''
name|'def'
name|'test_bogus'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
string|'"tacos=3-5"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unaligned
dedent|''
name|'def'
name|'test_unaligned'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# One segment's worth of data, but straddling two segment boundaries"
nl|'\n'
comment|'# (so it has data from three segments)'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
string|'"bytes=3783-7878"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|'"4096"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|'"bytes 3783-7878/14513"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|','
number|'4096'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
number|'3783'
op|':'
number|'7879'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aligned_left
dedent|''
name|'def'
name|'test_aligned_left'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# First byte is aligned to a segment boundary, last byte is not'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
string|'"bytes=0-5500"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|'"5501"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|'"bytes 0-5500/14513"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|','
number|'5501'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
op|':'
number|'5501'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aligned_range
dedent|''
name|'def'
name|'test_aligned_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ranged GET that wants exactly one segment'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
string|'"bytes=4096-8191"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|'"4096"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|'"bytes 4096-8191/14513"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|','
number|'4096'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
number|'4096'
op|':'
number|'8192'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aligned_range_end
dedent|''
name|'def'
name|'test_aligned_range_end'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ranged GET that wants exactly the last segment'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
string|'"bytes=12288-14512"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|'"2225"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|'"bytes 12288-14512/14513"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|','
number|'2225'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
number|'12288'
op|':'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aligned_range_aligned_obj
dedent|''
name|'def'
name|'test_aligned_range_aligned_obj'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ranged GET that wants exactly the last segment, which is full-size'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
string|'"bytes=4096-8191"'
op|','
nl|'\n'
name|'self'
op|'.'
name|'aligned_obj_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|'"4096"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|'"bytes 4096-8191/8192"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|','
number|'4096'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'aligned_obj'
op|'['
number|'4096'
op|':'
number|'8192'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_byte_0
dedent|''
name|'def'
name|'test_byte_0'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Just the first byte, but it's index 0, so that's easy to get wrong"
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
string|'"bytes=0-0"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|'"1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|'"bytes 0-0/14513"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unsatisfiable
dedent|''
name|'def'
name|'test_unsatisfiable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Goes just one byte too far off the end of the object, so it's"
nl|'\n'
comment|'# unsatisfiable'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'_junk'
op|','
name|'_junk'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=%d-%d"'
op|'%'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|'+'
number|'100'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'416'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_off_end
dedent|''
name|'def'
name|'test_off_end'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Ranged GET that's mostly off the end of the object, but overlaps"
nl|'\n'
comment|'# it in just the last byte'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=%d-%d"'
op|'%'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|'-'
number|'1'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|'+'
number|'100'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|"'bytes 14512-14512/14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
op|'-'
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_aligned_off_end
dedent|''
name|'def'
name|'test_aligned_off_end'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ranged GET that starts on a segment boundary but asks for a whole lot'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=%d-%d"'
op|'%'
op|'('
number|'8192'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|'+'
number|'100'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'6321'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|"'bytes 8192-14512/14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
number|'8192'
op|':'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_way_off_end
dedent|''
name|'def'
name|'test_way_off_end'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Ranged GET that's mostly off the end of the object, but overlaps"
nl|'\n'
comment|"# it in just the last byte, and wants multiple segments' worth off"
nl|'\n'
comment|'# the end'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=%d-%d"'
op|'%'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|'-'
number|'1'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|'*'
number|'1000'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|"'bytes 14512-14512/14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
op|'-'
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_boundaries
dedent|''
name|'def'
name|'test_boundaries'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Wants the last byte of segment 1 + the first byte of segment 2'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
string|'"bytes=4095-4096"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'2'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|"'bytes 4095-4096/14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
number|'4095'
op|':'
number|'4097'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_until_end
dedent|''
name|'def'
name|'test_until_end'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Wants the last byte of segment 1 + the rest'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
string|'"bytes=4095-"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'10418'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|"'bytes 4095-14512/14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
number|'4095'
op|':'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_small_suffix
dedent|''
name|'def'
name|'test_small_suffix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Small range-suffix GET: the last 100 bytes (less than one segment)'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
string|'"bytes=-100"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'100'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|"'bytes 14413-14512/14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|','
number|'100'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
op|'-'
number|'100'
op|':'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_small_suffix_aligned
dedent|''
name|'def'
name|'test_small_suffix_aligned'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Small range-suffix GET: the last 100 bytes, last segment is'
nl|'\n'
comment|'# full-size'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
string|'"bytes=-100"'
op|','
nl|'\n'
name|'self'
op|'.'
name|'aligned_obj_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'100'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|"'bytes 8092-8191/8192'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|','
number|'100'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_suffix_two_segs
dedent|''
name|'def'
name|'test_suffix_two_segs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Ask for enough data that we need the last two segments. The last'
nl|'\n'
comment|'# segment is short, though, so this ensures we compensate for that.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Note that the total range size is less than one full-size segment.'
nl|'\n'
indent|'        '
name|'suffix_len'
op|'='
name|'len'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|'%'
name|'self'
op|'.'
name|'seg_size'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
string|'"bytes=-%d"'
op|'%'
name|'suffix_len'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
name|'str'
op|'('
name|'suffix_len'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|"'bytes %d-%d/%d'"
op|'%'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|'-'
name|'suffix_len'
op|','
nl|'\n'
name|'len'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|'-'
number|'1'
op|','
nl|'\n'
name|'len'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|','
name|'suffix_len'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_large_suffix
dedent|''
name|'def'
name|'test_large_suffix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Large range-suffix GET: the last 5000 bytes (more than one segment)'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
string|'"bytes=-5000"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'5000'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|"'bytes 9513-14512/14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|','
number|'5000'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
op|'-'
number|'5000'
op|':'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_overlarge_suffix
dedent|''
name|'def'
name|'test_overlarge_suffix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# The last N+1 bytes of an N-byte object'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=-%d"'
op|'%'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|"'bytes 0-14512/14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'obj'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_small_suffix_tiny_object
dedent|''
name|'def'
name|'test_small_suffix_tiny_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=-5"'
op|','
name|'self'
op|'.'
name|'tiny_obj_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'5'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|"'bytes 12-16/17'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'tiny_obj'
op|'['
number|'12'
op|':'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_overlarge_suffix_tiny_object
dedent|''
name|'def'
name|'test_overlarge_suffix_tiny_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=-1234567890"'
op|','
name|'self'
op|'.'
name|'tiny_obj_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'17'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Range'"
op|']'
op|','
string|"'bytes 0-16/17'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'tiny_obj'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'tiny_obj'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multiple_ranges
dedent|''
name|'def'
name|'test_multiple_ranges'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=0-100,4490-5010"'
op|','
name|'self'
op|'.'
name|'obj_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Content-Length"'
op|']'
op|','
name|'str'
op|'('
name|'len'
op|'('
name|'gotten_obj'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'content_type'
op|','
name|'content_type_params'
op|'='
name|'parse_content_type'
op|'('
nl|'\n'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|')'
newline|'\n'
name|'content_type_params'
op|'='
name|'dict'
op|'('
name|'content_type_params'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'content_type'
op|','
string|"'multipart/byteranges'"
op|')'
newline|'\n'
name|'boundary'
op|'='
name|'content_type_params'
op|'.'
name|'get'
op|'('
string|"'boundary'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'boundary'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'got_byteranges'
op|'='
name|'self'
op|'.'
name|'_parse_multipart'
op|'('
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
nl|'\n'
name|'gotten_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'first_byterange'
op|','
name|'second_byterange'
op|'='
name|'got_byteranges'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'first_byterange'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|"'bytes 0-100/14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'first_byterange'
op|'.'
name|'get_payload'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
op|':'
number|'101'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'second_byterange'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|"'bytes 4490-5010/14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'second_byterange'
op|'.'
name|'get_payload'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
number|'4490'
op|':'
number|'5011'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multiple_ranges_overlapping_in_segment
dedent|''
name|'def'
name|'test_multiple_ranges_overlapping_in_segment'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=0-9,20-29,40-49,60-69,80-89"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'got_byteranges'
op|'='
name|'self'
op|'.'
name|'_parse_multipart'
op|'('
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
nl|'\n'
name|'gotten_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|')'
op|','
number|'5'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multiple_ranges_off_end
dedent|''
name|'def'
name|'test_multiple_ranges_off_end'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=0-10,14500-14513"'
op|')'
comment|'# there is no byte 14513, only 0-14512'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'got_byteranges'
op|'='
name|'self'
op|'.'
name|'_parse_multipart'
op|'('
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
nl|'\n'
name|'gotten_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'0'
op|']'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|'"bytes 0-10/14513"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'1'
op|']'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|'"bytes 14500-14512/14513"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multiple_ranges_suffix_off_end
dedent|''
name|'def'
name|'test_multiple_ranges_suffix_off_end'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=0-10,-13"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'got_byteranges'
op|'='
name|'self'
op|'.'
name|'_parse_multipart'
op|'('
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
nl|'\n'
name|'gotten_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'0'
op|']'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|'"bytes 0-10/14513"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'1'
op|']'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|'"bytes 14500-14512/14513"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multiple_ranges_one_barely_unsatisfiable
dedent|''
name|'def'
name|'test_multiple_ranges_one_barely_unsatisfiable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# The thing about 14515-14520 is that it comes from the last segment'
nl|'\n'
comment|'# in the object. When we turn this range into a fragment range,'
nl|'\n'
comment|"# it'll be for the last fragment, so the object servers see"
nl|'\n'
comment|'# something satisfiable.'
nl|'\n'
comment|'#'
nl|'\n'
comment|"# Basically, we'll get 3 byteranges from the object server, but we"
nl|'\n'
comment|'# have to filter out the unsatisfiable one on our own.'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=0-10,14515-14520,40-50"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
name|'got_byteranges'
op|'='
name|'self'
op|'.'
name|'_parse_multipart'
op|'('
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
nl|'\n'
name|'gotten_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'0'
op|']'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|'"bytes 0-10/14513"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'0'
op|']'
op|'.'
name|'get_payload'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
number|'0'
op|':'
number|'11'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'1'
op|']'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|'"bytes 40-50/14513"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'got_byteranges'
op|'['
number|'1'
op|']'
op|'.'
name|'get_payload'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
number|'40'
op|':'
number|'51'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multiple_ranges_some_unsatisfiable
dedent|''
name|'def'
name|'test_multiple_ranges_some_unsatisfiable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=0-100,4090-5010,999999-9999999"'
op|','
name|'self'
op|'.'
name|'obj_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
nl|'\n'
name|'content_type'
op|','
name|'content_type_params'
op|'='
name|'parse_content_type'
op|'('
nl|'\n'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|')'
newline|'\n'
name|'content_type_params'
op|'='
name|'dict'
op|'('
name|'content_type_params'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'content_type'
op|','
string|"'multipart/byteranges'"
op|')'
newline|'\n'
name|'boundary'
op|'='
name|'content_type_params'
op|'.'
name|'get'
op|'('
string|"'boundary'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'boundary'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'got_byteranges'
op|'='
name|'self'
op|'.'
name|'_parse_multipart'
op|'('
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
nl|'\n'
name|'gotten_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'first_byterange'
op|','
name|'second_byterange'
op|'='
name|'got_byteranges'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'first_byterange'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|"'bytes 0-100/14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'first_byterange'
op|'.'
name|'get_payload'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
op|':'
number|'101'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'second_byterange'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|"'bytes 4090-5010/14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'second_byterange'
op|'.'
name|'get_payload'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
number|'4090'
op|':'
number|'5011'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_two_ranges_one_unsatisfiable
dedent|''
name|'def'
name|'test_two_ranges_one_unsatisfiable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=0-100,999999-9999999"'
op|','
name|'self'
op|'.'
name|'obj_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
nl|'\n'
name|'content_type'
op|','
name|'content_type_params'
op|'='
name|'parse_content_type'
op|'('
nl|'\n'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# According to RFC 7233, this could be either a multipart/byteranges'
nl|'\n'
comment|'# response with one part or it could be a single-part response (just'
nl|'\n'
comment|"# the bytes, no MIME). We're locking it down here: single-part"
nl|'\n'
comment|"# response. That's what replicated objects do, and we don't want any"
nl|'\n'
comment|'# client-visible differences between EC objects and replicated ones.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'content_type'
op|','
string|"'donuts'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
op|':'
number|'101'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_two_ranges_one_unsatisfiable_same_segment
dedent|''
name|'def'
name|'test_two_ranges_one_unsatisfiable_same_segment'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Like test_two_ranges_one_unsatisfiable(), but where both ranges'
nl|'\n'
comment|'# fall within the same EC segment.'
nl|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=14500-14510,14520-14530"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
nl|'\n'
name|'content_type'
op|','
name|'content_type_params'
op|'='
name|'parse_content_type'
op|'('
nl|'\n'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'content_type'
op|','
string|"'donuts'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'gotten_obj'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
number|'14500'
op|':'
number|'14511'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multiple_ranges_some_unsatisfiable_out_of_order
dedent|''
name|'def'
name|'test_multiple_ranges_some_unsatisfiable_out_of_order'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'status'
op|','
name|'headers'
op|','
name|'gotten_obj'
op|'='
name|'self'
op|'.'
name|'_get_obj'
op|'('
nl|'\n'
string|'"bytes=0-100,99999998-99999999,4090-5010"'
op|','
name|'self'
op|'.'
name|'obj_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'206'
op|')'
newline|'\n'
nl|'\n'
name|'content_type'
op|','
name|'content_type_params'
op|'='
name|'parse_content_type'
op|'('
nl|'\n'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|')'
newline|'\n'
name|'content_type_params'
op|'='
name|'dict'
op|'('
name|'content_type_params'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'content_type'
op|','
string|"'multipart/byteranges'"
op|')'
newline|'\n'
name|'boundary'
op|'='
name|'content_type_params'
op|'.'
name|'get'
op|'('
string|"'boundary'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'boundary'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'got_byteranges'
op|'='
name|'self'
op|'.'
name|'_parse_multipart'
op|'('
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
nl|'\n'
name|'gotten_obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'got_byteranges'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'first_byterange'
op|','
name|'second_byterange'
op|'='
name|'got_byteranges'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'first_byterange'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|"'bytes 0-100/14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'first_byterange'
op|'.'
name|'get_payload'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
op|':'
number|'101'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'second_byterange'
op|'['
string|"'Content-Range'"
op|']'
op|','
nl|'\n'
string|"'bytes 4090-5010/14513'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'second_byterange'
op|'.'
name|'get_payload'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'obj'
op|'['
number|'4090'
op|':'
number|'5011'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'patch_policies'
op|'('
op|'['
nl|'\n'
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|','
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'base_port'
op|'='
number|'3000'
op|')'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'False'
op|','
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'base_port'
op|'='
number|'3000'
op|')'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'two'"
op|','
name|'False'
op|','
name|'True'
op|','
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'base_port'
op|'='
number|'3000'
op|')'
op|')'
nl|'\n'
op|']'
op|')'
newline|'\n'
DECL|class|TestContainerController
name|'class'
name|'TestContainerController'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"Test swift.proxy_server.ContainerController"'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
nl|'\n'
name|'None'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
name|'base_port'
op|'='
number|'2000'
op|')'
op|','
nl|'\n'
name|'logger'
op|'='
name|'debug_logger'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_convert_policy_to_index
dedent|''
name|'def'
name|'test_convert_policy_to_index'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'controller'
op|'='
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
nl|'\n'
string|"'a'"
op|','
string|"'c'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'zero'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'ZeRo'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'one'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'OnE'"
op|':'
number|'1'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'for'
name|'name'
op|','
name|'index'
name|'in'
name|'expected'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/a/c'"
op|','
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|','
nl|'\n'
string|"'X-Storage-Policy'"
op|':'
name|'name'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'controller'
op|'.'
name|'_convert_policy_to_index'
op|'('
name|'req'
op|')'
op|','
name|'index'
op|')'
newline|'\n'
comment|'# default test'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/a/c'"
op|','
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'controller'
op|'.'
name|'_convert_policy_to_index'
op|'('
name|'req'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# negative test'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/a/c'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|','
nl|'\n'
string|"'X-Storage-Policy'"
op|':'
string|"'nada'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'HTTPException'
op|','
name|'controller'
op|'.'
name|'_convert_policy_to_index'
op|','
nl|'\n'
name|'req'
op|')'
newline|'\n'
comment|'# storage policy two is deprecated'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/a/c'"
op|','
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|','
nl|'\n'
string|"'X-Storage-Policy'"
op|':'
string|"'two'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'HTTPException'
op|','
name|'controller'
op|'.'
name|'_convert_policy_to_index'
op|','
nl|'\n'
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_convert_index_to_name
dedent|''
name|'def'
name|'test_convert_index_to_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'='
name|'random'
op|'.'
name|'choice'
op|'('
name|'list'
op|'('
name|'POLICIES'
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|')'
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
nl|'\n'
number|'200'
op|','
number|'200'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'int'
op|'('
name|'policy'
op|')'
op|'}'
op|','
nl|'\n'
op|')'
name|'as'
name|'fake_conn'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'fake_conn'
op|'.'
name|'code_iter'
op|'.'
name|'next'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'X-Storage-Policy'"
op|']'
op|','
name|'policy'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_convert_index_to_name_when_container_not_found
dedent|''
name|'def'
name|'test_no_convert_index_to_name_when_container_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'='
name|'random'
op|'.'
name|'choice'
op|'('
name|'list'
op|'('
name|'POLICIES'
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|')'
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
nl|'\n'
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
nl|'\n'
name|'int'
op|'('
name|'policy'
op|')'
op|'}'
op|')'
name|'as'
name|'fake_conn'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'fake_conn'
op|'.'
name|'code_iter'
op|'.'
name|'next'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'X-Storage-Policy'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_error_convert_index_to_name
dedent|''
name|'def'
name|'test_error_convert_index_to_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|')'
newline|'\n'
name|'with'
name|'mocked_http_conn'
op|'('
nl|'\n'
number|'200'
op|','
number|'200'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
string|"'-1'"
op|'}'
op|')'
name|'as'
name|'fake_conn'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'fake_conn'
op|'.'
name|'code_iter'
op|'.'
name|'next'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'X-Storage-Policy'"
op|']'
op|','
name|'None'
op|')'
newline|'\n'
name|'error_lines'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'error_lines'
op|')'
op|')'
newline|'\n'
name|'for'
name|'msg'
name|'in'
name|'error_lines'
op|':'
newline|'\n'
indent|'            '
name|'expected'
op|'='
string|'"Could not translate "'
string|'"X-Backend-Storage-Policy-Index (\'-1\')"'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'expected'
name|'in'
name|'msg'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_transfer_headers
dedent|''
dedent|''
name|'def'
name|'test_transfer_headers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'src_headers'
op|'='
op|'{'
string|"'x-remove-versions-location'"
op|':'
string|"'x'"
op|','
nl|'\n'
string|"'x-container-read'"
op|':'
string|"'*:user'"
op|','
nl|'\n'
string|"'x-remove-container-sync-key'"
op|':'
string|"'x'"
op|'}'
newline|'\n'
name|'dst_headers'
op|'='
op|'{'
string|"'x-versions-location'"
op|':'
string|"'backup'"
op|'}'
newline|'\n'
name|'controller'
op|'='
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
nl|'\n'
string|"'a'"
op|','
string|"'c'"
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'transfer_headers'
op|'('
name|'src_headers'
op|','
name|'dst_headers'
op|')'
newline|'\n'
name|'expected_headers'
op|'='
op|'{'
string|"'x-versions-location'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'x-container-read'"
op|':'
string|"'*:user'"
op|','
nl|'\n'
string|"'x-container-sync-key'"
op|':'
string|"''"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'dst_headers'
op|','
name|'expected_headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assert_status_map
dedent|''
name|'def'
name|'assert_status_map'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'statuses'
op|','
name|'expected'
op|','
nl|'\n'
name|'raise_exc'
op|'='
name|'False'
op|','
name|'missing_container'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'kwargs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'raise_exc'
op|':'
newline|'\n'
indent|'                '
name|'kwargs'
op|'['
string|"'raise_exc'"
op|']'
op|'='
name|'raise_exc'
newline|'\n'
dedent|''
name|'kwargs'
op|'['
string|"'missing_container'"
op|']'
op|'='
name|'missing_container'
newline|'\n'
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'method'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
name|'expected'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'method'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_HEAD_GET
dedent|''
dedent|''
name|'def'
name|'test_HEAD_GET'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_status_map
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|','
nl|'\n'
name|'c_expected'
op|'='
name|'None'
op|','
name|'a_expected'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'HEAD'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'str'
op|'('
name|'expected'
op|')'
op|')'
op|']'
op|','
nl|'\n'
name|'str'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
name|'if'
name|'expected'
op|'<'
number|'400'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'x-works'"
name|'in'
name|'res'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'headers'
op|'['
string|"'x-works'"
op|']'
op|','
string|"'yes'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'c_expected'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'swift.container/a/c'"
name|'in'
name|'res'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'res'
op|'.'
name|'environ'
op|'['
string|"'swift.container/a/c'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
name|'c_expected'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'swift.container/a/c'"
name|'not'
name|'in'
name|'res'
op|'.'
name|'environ'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'a_expected'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'swift.account/a'"
name|'in'
name|'res'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'environ'
op|'['
string|"'swift.account/a'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
name|'a_expected'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'swift.account/a'"
name|'not'
name|'in'
name|'res'
op|'.'
name|'environ'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'GET'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'str'
op|'('
name|'expected'
op|')'
op|')'
op|']'
op|','
nl|'\n'
name|'str'
op|'('
name|'expected'
op|')'
op|')'
newline|'\n'
name|'if'
name|'expected'
op|'<'
number|'400'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'x-works'"
name|'in'
name|'res'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'headers'
op|'['
string|"'x-works'"
op|']'
op|','
string|"'yes'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'c_expected'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'swift.container/a/c'"
name|'in'
name|'res'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'res'
op|'.'
name|'environ'
op|'['
string|"'swift.container/a/c'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
name|'c_expected'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'swift.container/a/c'"
name|'not'
name|'in'
name|'res'
op|'.'
name|'environ'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'a_expected'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'swift.account/a'"
name|'in'
name|'res'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'environ'
op|'['
string|"'swift.account/a'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
name|'a_expected'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'swift.account/a'"
name|'not'
name|'in'
name|'res'
op|'.'
name|'environ'
op|')'
newline|'\n'
comment|'# In all the following tests cache 200 for account'
nl|'\n'
comment|'# return and ache vary for container'
nl|'\n'
comment|'# return 200 and cache 200 for and container'
nl|'\n'
dedent|''
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'200'
op|','
number|'500'
op|','
number|'404'
op|')'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
comment|"# return 304 don't cache container"
nl|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'304'
op|','
number|'500'
op|','
number|'404'
op|')'
op|','
number|'304'
op|','
name|'None'
op|','
number|'200'
op|')'
newline|'\n'
comment|'# return 404 and cache 404 for container'
nl|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|','
number|'404'
op|','
number|'200'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'500'
op|')'
op|','
number|'404'
op|','
number|'404'
op|','
number|'200'
op|')'
newline|'\n'
comment|"# return 503, don't cache container"
nl|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'500'
op|','
number|'500'
op|','
number|'500'
op|')'
op|','
number|'503'
op|','
name|'None'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|')'
newline|'\n'
nl|'\n'
comment|'# In all the following tests cache 404 for account'
nl|'\n'
comment|"# return 404 (as account is not found) and don't cache container"
nl|'\n'
name|'test_status_map'
op|'('
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|','
name|'None'
op|','
number|'404'
op|')'
newline|'\n'
comment|'# This should make no difference'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|'='
name|'True'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|','
name|'None'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_policy_headers
dedent|''
dedent|''
name|'def'
name|'test_PUT_policy_headers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'backend_requests'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|capture_requests
name|'def'
name|'capture_requests'
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'method'
op|','
nl|'\n'
name|'path'
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'query_string'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'method'
op|'=='
string|"'PUT'"
op|':'
newline|'\n'
indent|'                '
name|'backend_requests'
op|'.'
name|'append'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_policy
dedent|''
dedent|''
name|'def'
name|'test_policy'
op|'('
name|'requested_policy'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'mock_conn'
op|'='
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
name|'give_connect'
op|'='
name|'capture_requests'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/test'"
op|','
name|'method'
op|'='
string|"'PUT'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'requested_policy'
op|':'
newline|'\n'
indent|'                    '
name|'expected_policy'
op|'='
name|'requested_policy'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Storage-Policy'"
op|']'
op|'='
name|'policy'
op|'.'
name|'name'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'expected_policy'
op|'='
name|'POLICIES'
op|'.'
name|'default'
newline|'\n'
dedent|''
name|'res'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'if'
name|'expected_policy'
op|'.'
name|'is_deprecated'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'len'
op|'('
name|'backend_requests'
op|')'
op|')'
newline|'\n'
name|'expected'
op|'='
string|"'is deprecated'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'expected'
name|'in'
name|'res'
op|'.'
name|'body'
op|','
nl|'\n'
string|"'%r did not include %r'"
op|'%'
op|'('
nl|'\n'
name|'res'
op|'.'
name|'body'
op|','
name|'expected'
op|')'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'expected_policy'
op|'.'
name|'object_ring'
op|'.'
name|'replicas'
op|','
nl|'\n'
name|'len'
op|'('
name|'backend_requests'
op|')'
op|')'
newline|'\n'
name|'for'
name|'headers'
name|'in'
name|'backend_requests'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'not'
name|'requested_policy'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
name|'in'
nl|'\n'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
string|"'X-Backend-Storage-Policy-Default'"
name|'in'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'int'
op|'('
name|'expected_policy'
op|')'
op|','
nl|'\n'
name|'int'
op|'('
name|'headers'
op|'['
string|"'X-Backend-Storage-Policy-Default'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
name|'in'
nl|'\n'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'int'
op|'('
name|'headers'
nl|'\n'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|')'
op|','
nl|'\n'
name|'int'
op|'('
name|'policy'
op|')'
op|')'
newline|'\n'
comment|'# make sure all mocked responses are consumed'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'mock_conn'
op|'.'
name|'code_iter'
op|'.'
name|'next'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'test_policy'
op|'('
name|'None'
op|')'
comment|'# no policy header'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'backend_requests'
op|'='
op|'['
op|']'
comment|'# reset backend requests'
newline|'\n'
name|'test_policy'
op|'('
name|'policy'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT
dedent|''
dedent|''
name|'def'
name|'test_PUT'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_status_map
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'str'
op|'('
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'expected'
op|')'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'500'
op|')'
op|','
number|'201'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'204'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'204'
op|','
number|'500'
op|','
number|'404'
op|')'
op|','
number|'503'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|'='
name|'True'
newline|'\n'
comment|'# fail to retrieve account info'
nl|'\n'
name|'test_status_map'
op|'('
nl|'\n'
op|'('
number|'503'
op|','
number|'503'
op|','
number|'503'
op|')'
op|','
comment|'# account_info fails on 503'
nl|'\n'
number|'404'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'# account fail after creation'
nl|'\n'
name|'test_status_map'
op|'('
nl|'\n'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|','
comment|'# account_info fails on 404'
nl|'\n'
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
comment|'# PUT account'
nl|'\n'
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
comment|'# account_info fail'
nl|'\n'
number|'404'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
nl|'\n'
op|'('
number|'503'
op|','
number|'503'
op|','
number|'404'
op|','
comment|'# account_info fails on 404'
nl|'\n'
number|'503'
op|','
number|'503'
op|','
number|'503'
op|','
comment|'# PUT account'
nl|'\n'
number|'503'
op|','
number|'503'
op|','
number|'404'
op|')'
op|','
comment|'# account_info fail'
nl|'\n'
number|'404'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'# put fails'
nl|'\n'
name|'test_status_map'
op|'('
nl|'\n'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|','
comment|'# account_info fails on 404'
nl|'\n'
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
comment|'# PUT account'
nl|'\n'
number|'200'
op|','
comment|'# account_info success'
nl|'\n'
number|'503'
op|','
number|'503'
op|','
number|'201'
op|')'
op|','
comment|'# put container fail'
nl|'\n'
number|'503'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'# all goes according to plan'
nl|'\n'
name|'test_status_map'
op|'('
nl|'\n'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|','
comment|'# account_info fails on 404'
nl|'\n'
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
comment|'# PUT account'
nl|'\n'
number|'200'
op|','
comment|'# account_info success'
nl|'\n'
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
comment|'# put container success'
nl|'\n'
number|'201'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
nl|'\n'
op|'('
number|'503'
op|','
number|'404'
op|','
number|'404'
op|','
comment|'# account_info fails on 404'
nl|'\n'
number|'503'
op|','
number|'201'
op|','
number|'201'
op|','
comment|'# PUT account'
nl|'\n'
number|'503'
op|','
number|'200'
op|','
comment|'# account_info success'
nl|'\n'
number|'503'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
comment|'# put container success'
nl|'\n'
number|'201'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_autocreate_account_with_sysmeta
dedent|''
dedent|''
name|'def'
name|'test_PUT_autocreate_account_with_sysmeta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# x-account-sysmeta headers in a container PUT request should be'
nl|'\n'
comment|'# transferred to the account autocreate PUT request'
nl|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_status_map
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|','
name|'headers'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
op|'{'
op|'}'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'str'
op|'('
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'expected'
op|')'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|'='
name|'True'
newline|'\n'
name|'calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'callback'
op|'='
name|'_make_callback_func'
op|'('
name|'calls'
op|')'
newline|'\n'
name|'key'
op|','
name|'value'
op|'='
string|"'X-Account-Sysmeta-Blah'"
op|','
string|"'something'"
newline|'\n'
name|'headers'
op|'='
op|'{'
name|'key'
op|':'
name|'value'
op|'}'
newline|'\n'
nl|'\n'
comment|'# all goes according to plan'
nl|'\n'
name|'test_status_map'
op|'('
nl|'\n'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|','
comment|'# account_info fails on 404'
nl|'\n'
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
comment|'# PUT account'
nl|'\n'
number|'200'
op|','
comment|'# account_info success'
nl|'\n'
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
comment|'# put container success'
nl|'\n'
number|'201'
op|','
name|'missing_container'
op|'='
name|'True'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|','
nl|'\n'
name|'give_connect'
op|'='
name|'callback'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'len'
op|'('
name|'calls'
op|')'
op|')'
newline|'\n'
name|'for'
name|'call'
name|'in'
name|'calls'
op|'['
number|'3'
op|':'
number|'6'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/account'"
op|','
name|'call'
op|'['
string|"'path'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'call'
op|'['
string|"'headers'"
op|']'
op|','
nl|'\n'
string|"'%s call, key %s missing in headers %s'"
op|'%'
nl|'\n'
op|'('
name|'call'
op|'['
string|"'method'"
op|']'
op|','
name|'key'
op|','
name|'call'
op|'['
string|"'headers'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'call'
op|'['
string|"'headers'"
op|']'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_POST'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_status_map
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'POST'
op|'('
name|'req'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'str'
op|'('
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'expected'
op|')'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'500'
op|')'
op|','
number|'201'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'204'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'200'
op|','
number|'204'
op|','
number|'500'
op|','
number|'404'
op|')'
op|','
number|'503'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|'='
name|'True'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|','
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_max_containers_per_account
dedent|''
dedent|''
name|'def'
name|'test_PUT_max_containers_per_account'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'max_containers_per_account'
op|'='
number|'12346'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|','
nl|'\n'
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'max_containers_per_account'
op|'='
number|'12345'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|','
nl|'\n'
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container_new'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'403'
op|','
nl|'\n'
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'max_containers_per_account'
op|'='
number|'12345'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'max_containers_whitelist'
op|'='
op|'['
string|"'account'"
op|']'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|','
nl|'\n'
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_max_container_name_length
dedent|''
dedent|''
name|'def'
name|'test_PUT_max_container_name_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'limit'
op|'='
name|'constraints'
op|'.'
name|'MAX_CONTAINER_NAME_LENGTH'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'1'"
op|'*'
name|'limit'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|','
nl|'\n'
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'2'"
op|'*'
op|'('
name|'limit'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'400'
op|','
nl|'\n'
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_connect_exceptions
dedent|''
dedent|''
name|'def'
name|'test_PUT_connect_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
op|'-'
number|'1'
op|')'
op|','
number|'201'
op|','
nl|'\n'
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'200'
op|','
number|'201'
op|','
op|'-'
number|'1'
op|','
op|'-'
number|'1'
op|')'
op|','
number|'503'
op|','
nl|'\n'
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'200'
op|','
number|'503'
op|','
number|'503'
op|','
op|'-'
number|'1'
op|')'
op|','
number|'503'
op|','
nl|'\n'
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_acc_missing_returns_404
dedent|''
dedent|''
name|'def'
name|'test_acc_missing_returns_404'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'meth'
name|'in'
op|'('
string|"'DELETE'"
op|','
string|"'PUT'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'='
name|'FakeMemcacheReturnsNone'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'_error_limiting'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
nl|'\n'
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'if'
name|'meth'
op|'=='
string|"'PUT'"
op|':'
newline|'\n'
indent|'                    '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
nl|'\n'
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'meth'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'meth'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
comment|'# Make sure it is a blank request wthout env caching'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'meth'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'meth'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'503'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
comment|'# Make sure it is a blank request wthout env caching'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'meth'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'meth'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'503'
op|','
number|'404'
op|','
name|'raise_exc'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'# Make sure it is a blank request wthout env caching'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'meth'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'meth'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                    '
name|'set_node_errors'
op|'('
name|'self'
op|'.'
name|'app'
op|','
name|'dev'
op|','
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_suppression_limit'
op|'+'
number|'1'
op|','
nl|'\n'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
comment|'# Make sure it is a blank request wthout env caching'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'meth'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'meth'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_put_locking
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_put_locking'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|MockMemcache
indent|'        '
name|'class'
name|'MockMemcache'
op|'('
name|'FakeMemcache'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'allow_lock'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'allow_lock'
op|'='
name|'allow_lock'
newline|'\n'
name|'super'
op|'('
name|'MockMemcache'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|member|soft_lock
name|'def'
name|'soft_lock'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'timeout'
op|'='
number|'0'
op|','
name|'retries'
op|'='
number|'5'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'allow_lock'
op|':'
newline|'\n'
indent|'                    '
name|'yield'
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'NotImplementedError'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
DECL|variable|controller
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'='
name|'MockMemcache'
op|'('
name|'allow_lock'
op|'='
name|'True'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|variable|req
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
DECL|variable|res
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_error_limiting
dedent|''
dedent|''
name|'def'
name|'test_error_limiting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'container_ring'
op|'='
name|'controller'
op|'.'
name|'app'
op|'.'
name|'container_ring'
newline|'\n'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'sort_nodes'
op|'='
name|'lambda'
name|'l'
op|':'
name|'l'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'200'
op|','
number|'503'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
nl|'\n'
name|'missing_container'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'node_error_count'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'container_ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'node_last_error'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'container_ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|')'
nl|'\n'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
name|'for'
name|'_junk'
name|'in'
name|'range'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_suppression_limit'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'503'
op|','
number|'503'
op|','
number|'503'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'node_error_count'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'container_ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_suppression_limit'
op|'+'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'node_last_error'
op|'('
name|'controller'
op|'.'
name|'app'
op|','
name|'container_ring'
op|'.'
name|'devs'
op|'['
number|'0'
op|']'
op|')'
nl|'\n'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'503'
op|','
nl|'\n'
name|'missing_container'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'DELETE'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'204'
op|','
number|'204'
op|','
number|'204'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_suppression_interval'
op|'='
op|'-'
number|'300'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
number|'200'
op|')'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'DELETE'
op|','
op|'('
number|'200'
op|','
number|'204'
op|','
number|'204'
op|','
number|'204'
op|')'
op|','
nl|'\n'
number|'404'
op|','
name|'raise_exc'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_DELETE
dedent|''
dedent|''
name|'def'
name|'test_DELETE'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'DELETE'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'204'
op|','
number|'204'
op|','
number|'204'
op|')'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'DELETE'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'204'
op|','
number|'204'
op|','
number|'503'
op|')'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'DELETE'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'204'
op|','
number|'503'
op|','
number|'503'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'DELETE'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'204'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'DELETE'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'DELETE'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'204'
op|','
number|'503'
op|','
number|'404'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'='
name|'FakeMemcacheReturnsNone'
op|'('
op|')'
newline|'\n'
comment|'# 200: Account check, 404x3: Container check'
nl|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'DELETE'
op|','
nl|'\n'
op|'('
number|'200'
op|','
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_response_get_accept_ranges_header
dedent|''
dedent|''
name|'def'
name|'test_response_get_accept_ranges_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
name|'body'
op|'='
string|"'{}'"
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c?format=json'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'GET'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'accept-ranges'"
name|'in'
name|'res'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'headers'
op|'['
string|"'accept-ranges'"
op|']'
op|','
string|"'bytes'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_response_head_accept_ranges_header
dedent|''
dedent|''
name|'def'
name|'test_response_head_accept_ranges_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
name|'body'
op|'='
string|"'{}'"
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c?format=json'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'HEAD'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'accept-ranges'"
name|'in'
name|'res'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'headers'
op|'['
string|"'accept-ranges'"
op|']'
op|','
string|"'bytes'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_metadata
dedent|''
dedent|''
name|'def'
name|'test_PUT_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'metadata_helper'
op|'('
string|"'PUT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_metadata
dedent|''
name|'def'
name|'test_POST_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'metadata_helper'
op|'('
string|"'POST'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|metadata_helper
dedent|''
name|'def'
name|'metadata_helper'
op|'('
name|'self'
op|','
name|'method'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'test_header'
op|','
name|'test_value'
name|'in'
op|'('
nl|'\n'
op|'('
string|"'X-Container-Meta-TestHeader'"
op|','
string|"'TestValue'"
op|')'
op|','
nl|'\n'
op|'('
string|"'X-Container-Meta-TestHeader'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
op|'('
string|"'X-Remove-Container-Meta-TestHeader'"
op|','
string|"'anything'"
op|')'
op|','
nl|'\n'
op|'('
string|"'X-Container-Read'"
op|','
string|"'.r:*'"
op|')'
op|','
nl|'\n'
op|'('
string|"'X-Remove-Container-Read'"
op|','
string|"'anything'"
op|')'
op|','
nl|'\n'
op|'('
string|"'X-Container-Write'"
op|','
string|"'anyone'"
op|')'
op|','
nl|'\n'
op|'('
string|"'X-Remove-Container-Write'"
op|','
string|"'anything'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'test_errors'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|test_connect
name|'def'
name|'test_connect'
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'method'
op|','
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
name|'None'
op|','
name|'query_string'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'path'
op|'=='
string|"'/a/c'"
op|':'
newline|'\n'
indent|'                    '
name|'find_header'
op|'='
name|'test_header'
newline|'\n'
name|'find_value'
op|'='
name|'test_value'
newline|'\n'
name|'if'
name|'find_header'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-remove-'"
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'find_header'
op|'='
name|'find_header'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'replace'
op|'('
string|"'-remove'"
op|','
string|"''"
op|','
number|'1'
op|')'
newline|'\n'
name|'find_value'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
name|'find_header'
op|'.'
name|'lower'
op|'('
op|')'
name|'and'
name|'v'
op|'=='
name|'find_value'
op|':'
newline|'\n'
indent|'                            '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'test_errors'
op|'.'
name|'append'
op|'('
string|"'%s: %s not in %s'"
op|'%'
nl|'\n'
op|'('
name|'find_header'
op|','
name|'find_value'
op|','
name|'headers'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
name|'give_connect'
op|'='
name|'test_connect'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|','
string|"'swift_owner'"
op|':'
name|'True'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
name|'test_header'
op|':'
name|'test_value'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_errors'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_bad_metadata
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_PUT_bad_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'bad_metadata_helper'
op|'('
string|"'PUT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_bad_metadata
dedent|''
name|'def'
name|'test_POST_bad_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'bad_metadata_helper'
op|'('
string|"'POST'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|bad_metadata_helper
dedent|''
name|'def'
name|'bad_metadata_helper'
op|'('
name|'self'
op|','
name|'method'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Container-Meta-'"
op|'+'
nl|'\n'
op|'('
string|"'a'"
op|'*'
name|'constraints'
op|'.'
name|'MAX_META_NAME_LENGTH'
op|')'
op|':'
string|"'v'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Container-Meta-'"
op|'+'
nl|'\n'
op|'('
string|"'a'"
op|'*'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_NAME_LENGTH'
op|'+'
number|'1'
op|')'
op|')'
op|':'
string|"'v'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Container-Meta-Too-Long'"
op|':'
nl|'\n'
string|"'a'"
op|'*'
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Container-Meta-Too-Long'"
op|':'
nl|'\n'
string|"'a'"
op|'*'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
op|'+'
number|'1'
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_COUNT'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'['
string|"'X-Container-Meta-%d'"
op|'%'
name|'x'
op|']'
op|'='
string|"'v'"
newline|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_COUNT'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'['
string|"'X-Container-Meta-%d'"
op|'%'
name|'x'
op|']'
op|'='
string|"'v'"
newline|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'header_value'
op|'='
string|"'a'"
op|'*'
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
newline|'\n'
name|'size'
op|'='
number|'0'
newline|'\n'
name|'x'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'size'
op|'<'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_OVERALL_SIZE'
op|'-'
number|'4'
nl|'\n'
op|'-'
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'size'
op|'+='
number|'4'
op|'+'
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
newline|'\n'
name|'headers'
op|'['
string|"'X-Container-Meta-%04d'"
op|'%'
name|'x'
op|']'
op|'='
name|'header_value'
newline|'\n'
name|'x'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'if'
name|'constraints'
op|'.'
name|'MAX_META_OVERALL_SIZE'
op|'-'
name|'size'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'['
string|"'X-Container-Meta-a'"
op|']'
op|'='
string|"'a'"
op|'*'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_OVERALL_SIZE'
op|'-'
name|'size'
op|'-'
number|'1'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'X-Container-Meta-a'"
op|']'
op|'='
string|"'a'"
op|'*'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_OVERALL_SIZE'
op|'-'
name|'size'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_calls_clean_acl
dedent|''
dedent|''
name|'def'
name|'test_POST_calls_clean_acl'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|clean_acl
name|'def'
name|'clean_acl'
op|'('
name|'header'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
name|'raise'
name|'ValueError'
op|'('
string|"'fake error'"
op|')'
newline|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Container-Read'"
op|':'
string|"'.r:*'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.clean_acl'"
op|']'
op|'='
name|'clean_acl'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'POST'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'False'
newline|'\n'
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Container-Write'"
op|':'
string|"'.r:*'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.clean_acl'"
op|']'
op|'='
name|'clean_acl'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'POST'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_calls_clean_acl
dedent|''
name|'def'
name|'test_PUT_calls_clean_acl'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|clean_acl
name|'def'
name|'clean_acl'
op|'('
name|'header'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
name|'raise'
name|'ValueError'
op|'('
string|"'fake error'"
op|')'
newline|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Container-Read'"
op|':'
string|"'.r:*'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.clean_acl'"
op|']'
op|'='
name|'clean_acl'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'False'
newline|'\n'
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Container-Write'"
op|':'
string|"'.r:*'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.clean_acl'"
op|']'
op|'='
name|'clean_acl'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_GET_no_content
dedent|''
name|'def'
name|'test_GET_no_content'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'204'
op|','
number|'204'
op|','
number|'204'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'GET'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'res'
op|'.'
name|'environ'
op|'['
string|"'swift.container/a/c'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'content_length'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'transfer-encoding'"
name|'not'
name|'in'
name|'res'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_GET_calls_authorize
dedent|''
dedent|''
name|'def'
name|'test_GET_calls_authorize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|authorize
name|'def'
name|'authorize'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'authorize'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'GET'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'environ'
op|'['
string|"'swift.container/a/c'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_HEAD_calls_authorize
dedent|''
name|'def'
name|'test_HEAD_calls_authorize'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'called'
op|'='
op|'['
name|'False'
op|']'
newline|'\n'
nl|'\n'
DECL|function|authorize
name|'def'
name|'authorize'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'='
name|'True'
newline|'\n'
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|','
nl|'\n'
string|"'container'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'authorize'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'HEAD'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'called'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unauthorized_requests_when_account_not_found
dedent|''
name|'def'
name|'test_unauthorized_requests_when_account_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# verify unauthorized container requests always return response'
nl|'\n'
comment|'# from swift.authorize'
nl|'\n'
indent|'        '
name|'called'
op|'='
op|'['
number|'0'
op|','
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|function|authorize
name|'def'
name|'authorize'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|function|account_info
dedent|''
name|'def'
name|'account_info'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'1'
op|']'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'None'
op|','
name|'None'
op|','
name|'None'
newline|'\n'
nl|'\n'
DECL|function|_do_test
dedent|''
name|'def'
name|'_do_test'
op|'('
name|'method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'Controller'
op|'.'
name|'account_info'
op|'='
name|'account_info'
newline|'\n'
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
name|'None'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'authorize'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'app'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'res'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'method'
name|'in'
op|'('
string|"'PUT'"
op|','
string|"'POST'"
op|','
string|"'DELETE'"
op|')'
op|':'
newline|'\n'
comment|'# no delay_denial on method, expect one call to authorize'
nl|'\n'
indent|'            '
name|'called'
op|'='
op|'['
number|'0'
op|','
number|'0'
op|']'
newline|'\n'
name|'res'
op|'='
name|'_do_test'
op|'('
name|'method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'401'
op|','
name|'res'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'1'
op|','
number|'0'
op|']'
op|','
name|'called'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'method'
name|'in'
op|'('
string|"'HEAD'"
op|','
string|"'GET'"
op|')'
op|':'
newline|'\n'
comment|'# delay_denial on method, expect two calls to authorize'
nl|'\n'
indent|'            '
name|'called'
op|'='
op|'['
number|'0'
op|','
number|'0'
op|']'
newline|'\n'
name|'res'
op|'='
name|'_do_test'
op|'('
name|'method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'401'
op|','
name|'res'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'2'
op|','
number|'1'
op|']'
op|','
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_authorized_requests_when_account_not_found
dedent|''
dedent|''
name|'def'
name|'test_authorized_requests_when_account_not_found'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# verify authorized container requests always return 404 when'
nl|'\n'
comment|'# account not found'
nl|'\n'
indent|'        '
name|'called'
op|'='
op|'['
number|'0'
op|','
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|function|authorize
name|'def'
name|'authorize'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'0'
op|']'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
DECL|function|account_info
dedent|''
name|'def'
name|'account_info'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'called'
op|'['
number|'1'
op|']'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'None'
op|','
name|'None'
op|','
name|'None'
newline|'\n'
nl|'\n'
DECL|function|_do_test
dedent|''
name|'def'
name|'_do_test'
op|'('
name|'method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'Controller'
op|'.'
name|'account_info'
op|'='
name|'account_info'
newline|'\n'
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
name|'None'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'='
name|'authorize'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'app'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'res'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'method'
name|'in'
op|'('
string|"'PUT'"
op|','
string|"'POST'"
op|','
string|"'DELETE'"
op|','
string|"'HEAD'"
op|','
string|"'GET'"
op|')'
op|':'
newline|'\n'
comment|'# expect one call to authorize'
nl|'\n'
indent|'            '
name|'called'
op|'='
op|'['
number|'0'
op|','
number|'0'
op|']'
newline|'\n'
name|'res'
op|'='
name|'_do_test'
op|'('
name|'method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'404'
op|','
name|'res'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'1'
op|','
number|'1'
op|']'
op|','
name|'called'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_OPTIONS_get_info_drops_origin
dedent|''
dedent|''
name|'def'
name|'test_OPTIONS_get_info_drops_origin'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|')'
newline|'\n'
nl|'\n'
name|'count'
op|'='
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|function|my_get_info
name|'def'
name|'my_get_info'
op|'('
name|'app'
op|','
name|'env'
op|','
name|'account'
op|','
name|'container'
op|'='
name|'None'
op|','
nl|'\n'
name|'ret_not_found'
op|'='
name|'False'
op|','
name|'swift_source'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'count'
op|'['
number|'0'
op|']'
op|'>'
number|'11'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'count'
op|'['
number|'0'
op|']'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'not'
name|'container'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'{'
string|"'some'"
op|':'
string|"'stuff'"
op|'}'
newline|'\n'
dedent|''
name|'return'
name|'proxy_base'
op|'.'
name|'was_get_info'
op|'('
nl|'\n'
name|'app'
op|','
name|'env'
op|','
name|'account'
op|','
name|'container'
op|','
name|'ret_not_found'
op|','
name|'swift_source'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'proxy_base'
op|'.'
name|'was_get_info'
op|'='
name|'proxy_base'
op|'.'
name|'get_info'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'proxy_base'
op|','
string|"'get_info'"
op|','
name|'my_get_info'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'proxy_base'
op|'.'
name|'get_info'
op|'='
name|'my_get_info'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'http://foo.com'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'count'
op|'['
number|'0'
op|']'
op|'<'
number|'11'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_OPTIONS
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_OPTIONS'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|my_empty_container_info
name|'def'
name|'my_empty_container_info'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'controller'
op|'.'
name|'container_info'
op|'='
name|'my_empty_container_info'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'http://foo.com'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'401'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|function|my_empty_origin_container_info
name|'def'
name|'my_empty_origin_container_info'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
string|"'cors'"
op|':'
op|'{'
string|"'allow_origin'"
op|':'
name|'None'
op|'}'
op|'}'
newline|'\n'
dedent|''
name|'controller'
op|'.'
name|'container_info'
op|'='
name|'my_empty_origin_container_info'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'http://foo.com'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'401'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|function|my_container_info
name|'def'
name|'my_container_info'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
nl|'\n'
string|"'cors'"
op|':'
op|'{'
nl|'\n'
string|"'allow_origin'"
op|':'
string|"'http://foo.bar:8080 https://foo.bar'"
op|','
nl|'\n'
string|"'max_age'"
op|':'
string|"'999'"
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'controller'
op|'.'
name|'container_info'
op|'='
name|'my_container_info'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'https://foo.bar'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"'https://foo.bar'"
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-origin'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'verb'
name|'in'
string|"'OPTIONS GET POST PUT DELETE HEAD'"
op|'.'
name|'split'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'verb'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-methods'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'len'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-methods'"
op|']'
op|'.'
name|'split'
op|'('
string|"', '"
op|')'
op|')'
op|','
nl|'\n'
number|'6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'999'"
op|','
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-max-age'"
op|']'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'https://foo.bar'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'401'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'for'
name|'verb'
name|'in'
string|"'OPTIONS GET POST PUT DELETE HEAD'"
op|'.'
name|'split'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'verb'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Allow'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Allow'"
op|']'
op|'.'
name|'split'
op|'('
string|"', '"
op|')'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'http://foo.bar'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'401'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'http://foo.bar'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'cors_allow_origin'
op|'='
op|'['
string|"'http://foo.bar'"
op|','
op|']'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|function|my_container_info_wildcard
name|'def'
name|'my_container_info_wildcard'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
nl|'\n'
string|"'cors'"
op|':'
op|'{'
nl|'\n'
string|"'allow_origin'"
op|':'
string|"'*'"
op|','
nl|'\n'
string|"'max_age'"
op|':'
string|"'999'"
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'controller'
op|'.'
name|'container_info'
op|'='
name|'my_container_info_wildcard'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o.jpg'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'https://bar.baz'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'*'"
op|','
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-origin'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'verb'
name|'in'
string|"'OPTIONS GET POST PUT DELETE HEAD'"
op|'.'
name|'split'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'verb'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-methods'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'len'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-methods'"
op|']'
op|'.'
name|'split'
op|'('
string|"', '"
op|')'
op|')'
op|','
nl|'\n'
number|'6'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'999'"
op|','
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-max-age'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c/o.jpg'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'https://bar.baz'"
op|','
nl|'\n'
string|"'Access-Control-Request-Headers'"
op|':'
nl|'\n'
string|"'x-foo, x-bar, x-auth-token'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
op|'}'
nl|'\n'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'sortHeaderNames'
op|'('
string|"'x-foo, x-bar, x-auth-token'"
op|')'
op|','
nl|'\n'
name|'sortHeaderNames'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-headers'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_CORS_valid
dedent|''
dedent|''
name|'def'
name|'test_CORS_valid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|stubContainerInfo
name|'def'
name|'stubContainerInfo'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'{'
nl|'\n'
string|"'cors'"
op|':'
op|'{'
nl|'\n'
string|"'allow_origin'"
op|':'
string|"'http://foo.bar'"
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'controller'
op|'.'
name|'container_info'
op|'='
name|'stubContainerInfo'
newline|'\n'
nl|'\n'
DECL|function|containerGET
name|'def'
name|'containerGET'
op|'('
name|'controller'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'Response'
op|'('
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Container-Meta-Color'"
op|':'
string|"'red'"
op|','
nl|'\n'
string|"'X-Super-Secret'"
op|':'
string|"'hush'"
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c'"
op|','
nl|'\n'
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'http://foo.bar'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'cors_validation'
op|'('
name|'containerGET'
op|')'
op|'('
name|'controller'
op|','
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'http://foo.bar'"
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-allow-origin'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'red'"
op|','
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-container-meta-color'"
op|']'
op|')'
newline|'\n'
comment|'# X-Super-Secret is in the response, but not "exposed"'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'hush'"
op|','
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-super-secret'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'access-control-expose-headers'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'exposed'
op|'='
name|'set'
op|'('
nl|'\n'
name|'h'
op|'.'
name|'strip'
op|'('
op|')'
name|'for'
name|'h'
name|'in'
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'access-control-expose-headers'"
op|']'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
op|')'
newline|'\n'
name|'expected_exposed'
op|'='
name|'set'
op|'('
op|'['
string|"'cache-control'"
op|','
string|"'content-language'"
op|','
nl|'\n'
string|"'content-type'"
op|','
string|"'expires'"
op|','
string|"'last-modified'"
op|','
nl|'\n'
string|"'pragma'"
op|','
string|"'etag'"
op|','
string|"'x-timestamp'"
op|','
nl|'\n'
string|"'x-trans-id'"
op|','
string|"'x-container-meta-color'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_exposed'
op|','
name|'exposed'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_gather_x_account_headers
dedent|''
dedent|''
name|'def'
name|'_gather_x_account_headers'
op|'('
name|'self'
op|','
name|'controller_call'
op|','
name|'req'
op|','
op|'*'
name|'connect_args'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'seen_headers'
op|'='
op|'['
op|']'
newline|'\n'
name|'to_capture'
op|'='
op|'('
string|"'X-Account-Partition'"
op|','
string|"'X-Account-Host'"
op|','
nl|'\n'
string|"'X-Account-Device'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|capture_headers
name|'def'
name|'capture_headers'
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'method'
op|','
nl|'\n'
name|'path'
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'query_string'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'captured'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'header'
name|'in'
name|'to_capture'
op|':'
newline|'\n'
indent|'                '
name|'captured'
op|'['
name|'header'
op|']'
op|'='
name|'headers'
op|'.'
name|'get'
op|'('
name|'header'
op|')'
newline|'\n'
dedent|''
name|'seen_headers'
op|'.'
name|'append'
op|'('
name|'captured'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
op|'*'
name|'connect_args'
op|','
name|'give_connect'
op|'='
name|'capture_headers'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller_call'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|')'
comment|'# sanity check'
newline|'\n'
nl|'\n'
comment|"# don't care about the account HEAD, so throw away the"
nl|'\n'
comment|'# first element'
nl|'\n'
name|'return'
name|'sorted'
op|'('
name|'seen_headers'
op|'['
number|'1'
op|':'
op|']'
op|','
nl|'\n'
name|'key'
op|'='
name|'lambda'
name|'d'
op|':'
name|'d'
op|'['
string|"'X-Account-Host'"
op|']'
name|'or'
string|"'Z'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_x_account_headers_with_fewer_account_replicas
dedent|''
dedent|''
name|'def'
name|'test_PUT_x_account_headers_with_fewer_account_replicas'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'set_replicas'
op|'('
number|'2'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'headers'
op|'='
op|'{'
string|"''"
op|':'
string|"''"
op|'}'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|')'
newline|'\n'
nl|'\n'
name|'seen_headers'
op|'='
name|'self'
op|'.'
name|'_gather_x_account_headers'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'PUT'
op|','
name|'req'
op|','
nl|'\n'
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
comment|'# HEAD PUT PUT PUT'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'seen_headers'
op|','
op|'['
nl|'\n'
op|'{'
string|"'X-Account-Host'"
op|':'
string|"'10.0.0.0:1000'"
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
string|"'sda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Account-Host'"
op|':'
string|"'10.0.0.1:1001'"
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
string|"'sdb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Account-Host'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
name|'None'
op|'}'
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_x_account_headers_with_more_account_replicas
dedent|''
name|'def'
name|'test_PUT_x_account_headers_with_more_account_replicas'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'set_replicas'
op|'('
number|'4'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'headers'
op|'='
op|'{'
string|"''"
op|':'
string|"''"
op|'}'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|')'
newline|'\n'
nl|'\n'
name|'seen_headers'
op|'='
name|'self'
op|'.'
name|'_gather_x_account_headers'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'PUT'
op|','
name|'req'
op|','
nl|'\n'
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
comment|'# HEAD PUT PUT PUT'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'seen_headers'
op|','
op|'['
nl|'\n'
op|'{'
string|"'X-Account-Host'"
op|':'
string|"'10.0.0.0:1000,10.0.0.3:1003'"
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
string|"'sda,sdd'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Account-Host'"
op|':'
string|"'10.0.0.1:1001'"
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
string|"'sdb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Account-Host'"
op|':'
string|"'10.0.0.2:1002'"
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
string|"'sdc'"
op|'}'
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_DELETE_x_account_headers_with_fewer_account_replicas
dedent|''
name|'def'
name|'test_DELETE_x_account_headers_with_fewer_account_replicas'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'set_replicas'
op|'('
number|'2'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'headers'
op|'='
op|'{'
string|"''"
op|':'
string|"''"
op|'}'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|')'
newline|'\n'
nl|'\n'
name|'seen_headers'
op|'='
name|'self'
op|'.'
name|'_gather_x_account_headers'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'DELETE'
op|','
name|'req'
op|','
nl|'\n'
number|'200'
op|','
number|'204'
op|','
number|'204'
op|','
number|'204'
op|')'
comment|'# HEAD DELETE DELETE DELETE'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'seen_headers'
op|','
op|'['
nl|'\n'
op|'{'
string|"'X-Account-Host'"
op|':'
string|"'10.0.0.0:1000'"
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
string|"'sda'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Account-Host'"
op|':'
string|"'10.0.0.1:1001'"
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
string|"'sdb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Account-Host'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
name|'None'
op|'}'
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_DELETE_x_account_headers_with_more_account_replicas
dedent|''
name|'def'
name|'test_DELETE_x_account_headers_with_more_account_replicas'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'set_replicas'
op|'('
number|'4'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'headers'
op|'='
op|'{'
string|"''"
op|':'
string|"''"
op|'}'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'ContainerController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|','
string|"'c'"
op|')'
newline|'\n'
nl|'\n'
name|'seen_headers'
op|'='
name|'self'
op|'.'
name|'_gather_x_account_headers'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'DELETE'
op|','
name|'req'
op|','
nl|'\n'
number|'200'
op|','
number|'204'
op|','
number|'204'
op|','
number|'204'
op|')'
comment|'# HEAD DELETE DELETE DELETE'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'seen_headers'
op|','
op|'['
nl|'\n'
op|'{'
string|"'X-Account-Host'"
op|':'
string|"'10.0.0.0:1000,10.0.0.3:1003'"
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
string|"'sda,sdd'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Account-Host'"
op|':'
string|"'10.0.0.1:1001'"
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
string|"'sdb'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'X-Account-Host'"
op|':'
string|"'10.0.0.2:1002'"
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
string|"'sdc'"
op|'}'
nl|'\n'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_backed_x_timestamp_header
dedent|''
name|'def'
name|'test_PUT_backed_x_timestamp_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'timestamps'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|capture_timestamps
name|'def'
name|'capture_timestamps'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
name|'kwargs'
op|'['
string|"'headers'"
op|']'
newline|'\n'
name|'timestamps'
op|'.'
name|'append'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Timestamp'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'method'
op|'='
string|"'PUT'"
op|','
name|'headers'
op|'='
op|'{'
string|"''"
op|':'
string|"''"
op|'}'
op|')'
newline|'\n'
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'new_connect'
op|'='
name|'set_http_connect'
op|'('
number|'200'
op|','
comment|'# account existence check'
nl|'\n'
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
name|'give_connect'
op|'='
name|'capture_timestamps'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
comment|'# sanity'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'new_connect'
op|'.'
name|'code_iter'
op|'.'
name|'next'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|')'
newline|'\n'
nl|'\n'
name|'timestamps'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
comment|'# account existence check'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'timestamps'
op|')'
op|')'
newline|'\n'
name|'for'
name|'timestamp'
name|'in'
name|'timestamps'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'timestamp'
op|','
name|'timestamps'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'re'
op|'.'
name|'match'
op|'('
string|"'[0-9]{10}\\.[0-9]{5}'"
op|','
name|'timestamp'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_DELETE_backed_x_timestamp_header
dedent|''
dedent|''
name|'def'
name|'test_DELETE_backed_x_timestamp_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'timestamps'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|capture_timestamps
name|'def'
name|'capture_timestamps'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
name|'kwargs'
op|'['
string|"'headers'"
op|']'
newline|'\n'
name|'timestamps'
op|'.'
name|'append'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Timestamp'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'method'
op|'='
string|"'DELETE'"
op|','
name|'headers'
op|'='
op|'{'
string|"''"
op|':'
string|"''"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'new_connect'
op|'='
name|'set_http_connect'
op|'('
number|'200'
op|','
comment|'# account existence check'
nl|'\n'
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
nl|'\n'
name|'give_connect'
op|'='
name|'capture_timestamps'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
comment|'# sanity'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'new_connect'
op|'.'
name|'code_iter'
op|'.'
name|'next'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|')'
newline|'\n'
nl|'\n'
name|'timestamps'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
comment|'# account existence check'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'timestamps'
op|')'
op|')'
newline|'\n'
name|'for'
name|'timestamp'
name|'in'
name|'timestamps'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'timestamp'
op|','
name|'timestamps'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'re'
op|'.'
name|'match'
op|'('
string|"'[0-9]{10}\\.[0-9]{5}'"
op|','
name|'timestamp'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_node_read_timeout_retry_to_container
dedent|''
dedent|''
name|'def'
name|'test_node_read_timeout_retry_to_container'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|'='
number|'0.1'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
name|'body'
op|'='
string|"'abcdef'"
op|','
name|'slow'
op|'='
op|'['
number|'1.0'
op|','
number|'1.0'
op|']'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'got_exc'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'resp'
op|'.'
name|'body'
newline|'\n'
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'                '
name|'got_exc'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'got_exc'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'patch_policies'
op|'('
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|','
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
op|']'
op|')'
newline|'\n'
DECL|class|TestAccountController
name|'class'
name|'TestAccountController'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
name|'None'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assert_status_map
dedent|''
name|'def'
name|'assert_status_map'
op|'('
name|'self'
op|','
name|'method'
op|','
name|'statuses'
op|','
name|'expected'
op|','
name|'env_expected'
op|'='
name|'None'
op|','
nl|'\n'
name|'headers'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'headers'
name|'or'
op|'{'
op|'}'
newline|'\n'
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a'"
op|','
op|'{'
op|'}'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'method'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
name|'expected'
op|')'
newline|'\n'
name|'if'
name|'env_expected'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'environ'
op|'['
string|"'swift.account/a'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
name|'env_expected'
op|')'
newline|'\n'
dedent|''
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'method'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status_int'
op|','
name|'expected'
op|')'
newline|'\n'
name|'if'
name|'env_expected'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'environ'
op|'['
string|"'swift.account/a'"
op|']'
op|'['
string|"'status'"
op|']'
op|','
nl|'\n'
name|'env_expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_OPTIONS
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_OPTIONS'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|'='
name|'False'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/account'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'for'
name|'verb'
name|'in'
string|"'OPTIONS GET POST HEAD'"
op|'.'
name|'split'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'verb'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Allow'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Allow'"
op|']'
op|'.'
name|'split'
op|'('
string|"', '"
op|')'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test a CORS OPTIONS request (i.e. including Origin and'
nl|'\n'
comment|'# Access-Control-Request-Method headers)'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|'='
name|'False'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/account'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Origin'"
op|':'
string|"'http://foo.com'"
op|','
nl|'\n'
string|"'Access-Control-Request-Method'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'for'
name|'verb'
name|'in'
string|"'OPTIONS GET POST HEAD'"
op|'.'
name|'split'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'verb'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Allow'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Allow'"
op|']'
op|'.'
name|'split'
op|'('
string|"', '"
op|')'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|'='
name|'True'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/account'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'OPTIONS'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'OPTIONS'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'for'
name|'verb'
name|'in'
string|"'OPTIONS GET POST PUT DELETE HEAD'"
op|'.'
name|'split'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'verb'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Allow'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Allow'"
op|']'
op|'.'
name|'split'
op|'('
string|"', '"
op|')'
op|')'
op|','
number|'6'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_GET
dedent|''
dedent|''
name|'def'
name|'test_GET'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
comment|'# GET returns after the first successful call to an Account Server'
nl|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
op|'('
number|'200'
op|','
op|')'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
op|'('
number|'503'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
op|'('
number|'503'
op|','
number|'503'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
op|'('
number|'204'
op|','
op|')'
op|','
number|'204'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
op|'('
number|'503'
op|','
number|'204'
op|')'
op|','
number|'204'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
op|'('
number|'503'
op|','
number|'503'
op|','
number|'204'
op|')'
op|','
number|'204'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
op|'('
number|'404'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
op|'('
number|'404'
op|','
number|'404'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
op|'('
number|'404'
op|','
number|'503'
op|','
number|'204'
op|')'
op|','
number|'204'
op|','
number|'204'
op|')'
newline|'\n'
comment|'# If Account servers fail, if autocreate = False, return majority'
nl|'\n'
comment|'# response'
nl|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
op|'('
number|'404'
op|','
number|'404'
op|','
number|'503'
op|')'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
op|'('
number|'404'
op|','
number|'503'
op|','
number|'503'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'='
name|'FakeMemcacheReturnsNone'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_GET_autocreate
dedent|''
dedent|''
name|'def'
name|'test_GET_autocreate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'='
name|'FakeMemcacheReturnsNone'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|')'
newline|'\n'
comment|'# Repeat the test for autocreate = False and 404 by all'
nl|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
nl|'\n'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
nl|'\n'
op|'('
number|'404'
op|','
number|'503'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
comment|'# When autocreate is True, if none of the nodes respond 2xx'
nl|'\n'
comment|'# And quorum of the nodes responded 404,'
nl|'\n'
comment|'# ALL nodes are asked to create the account'
nl|'\n'
comment|'# If successful, the GET request is repeated.'
nl|'\n'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
nl|'\n'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
nl|'\n'
op|'('
number|'404'
op|','
number|'503'
op|','
number|'404'
op|')'
op|','
number|'204'
op|')'
newline|'\n'
nl|'\n'
comment|'# We always return 503 if no majority between 4xx, 3xx or 2xx found'
nl|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'GET'
op|','
nl|'\n'
op|'('
number|'500'
op|','
number|'500'
op|','
number|'400'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_HEAD
dedent|''
dedent|''
name|'def'
name|'test_HEAD'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Same behaviour as GET'
nl|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'200'
op|','
op|')'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'503'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'503'
op|','
number|'503'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'204'
op|','
op|')'
op|','
number|'204'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'503'
op|','
number|'204'
op|')'
op|','
number|'204'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'204'
op|','
number|'503'
op|','
number|'503'
op|')'
op|','
number|'204'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'204'
op|','
op|')'
op|','
number|'204'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'404'
op|','
number|'404'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'404'
op|','
number|'200'
op|')'
op|','
number|'200'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'404'
op|','
number|'404'
op|','
number|'503'
op|')'
op|','
number|'404'
op|','
number|'404'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'404'
op|','
number|'503'
op|','
number|'503'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
op|'('
number|'404'
op|','
number|'503'
op|','
number|'204'
op|')'
op|','
number|'204'
op|','
number|'204'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_HEAD_autocreate
dedent|''
dedent|''
name|'def'
name|'test_HEAD_autocreate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Same behaviour as GET'
nl|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'='
name|'FakeMemcacheReturnsNone'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
nl|'\n'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
nl|'\n'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
nl|'\n'
op|'('
number|'500'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'204'
op|')'
newline|'\n'
comment|'# We always return 503 if no majority between 4xx, 3xx or 2xx found'
nl|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'HEAD'
op|','
nl|'\n'
op|'('
number|'500'
op|','
number|'500'
op|','
number|'400'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_autocreate
dedent|''
dedent|''
name|'def'
name|'test_POST_autocreate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'='
name|'FakeMemcacheReturnsNone'
op|'('
op|')'
newline|'\n'
comment|'# first test with autocreate being False'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'POST'
op|','
nl|'\n'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
comment|'# next turn it on and test account being created than updated'
nl|'\n'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'POST'
op|','
nl|'\n'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|','
number|'202'
op|','
number|'202'
op|','
number|'202'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
comment|'# account_info  PUT account  POST account'
nl|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'POST'
op|','
nl|'\n'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'503'
op|','
number|'201'
op|','
number|'201'
op|','
number|'503'
op|','
number|'204'
op|','
number|'204'
op|','
number|'504'
op|')'
op|','
number|'204'
op|')'
newline|'\n'
comment|'# what if create fails'
nl|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'POST'
op|','
nl|'\n'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|','
number|'403'
op|','
number|'403'
op|','
number|'403'
op|','
number|'400'
op|','
number|'400'
op|','
number|'400'
op|')'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_autocreate_with_sysmeta
dedent|''
dedent|''
name|'def'
name|'test_POST_autocreate_with_sysmeta'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'='
name|'FakeMemcacheReturnsNone'
op|'('
op|')'
newline|'\n'
comment|'# first test with autocreate being False'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'POST'
op|','
nl|'\n'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|')'
op|','
number|'404'
op|')'
newline|'\n'
comment|'# next turn it on and test account being created than updated'
nl|'\n'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'account_autocreate'
op|'='
name|'True'
newline|'\n'
name|'calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'callback'
op|'='
name|'_make_callback_func'
op|'('
name|'calls'
op|')'
newline|'\n'
name|'key'
op|','
name|'value'
op|'='
string|"'X-Account-Sysmeta-Blah'"
op|','
string|"'something'"
newline|'\n'
name|'headers'
op|'='
op|'{'
name|'key'
op|':'
name|'value'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
nl|'\n'
name|'controller'
op|'.'
name|'POST'
op|','
nl|'\n'
op|'('
number|'404'
op|','
number|'404'
op|','
number|'404'
op|','
number|'202'
op|','
number|'202'
op|','
number|'202'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|','
nl|'\n'
comment|'#  POST       , autocreate PUT, POST again'
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|','
nl|'\n'
name|'give_connect'
op|'='
name|'callback'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'9'
op|','
name|'len'
op|'('
name|'calls'
op|')'
op|')'
newline|'\n'
name|'for'
name|'call'
name|'in'
name|'calls'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'call'
op|'['
string|"'headers'"
op|']'
op|','
nl|'\n'
string|"'%s call, key %s missing in headers %s'"
op|'%'
nl|'\n'
op|'('
name|'call'
op|'['
string|"'method'"
op|']'
op|','
name|'key'
op|','
name|'call'
op|'['
string|"'headers'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'value'
op|','
name|'call'
op|'['
string|"'headers'"
op|']'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_connection_refused
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_connection_refused'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
number|'1'
comment|"# can't connect on this port"
newline|'\n'
dedent|''
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/account'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'HEAD'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_other_socket_error
dedent|''
name|'def'
name|'test_other_socket_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'='
op|'-'
number|'1'
comment|'# invalid port number'
newline|'\n'
dedent|''
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/account'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'controller'
op|'.'
name|'HEAD'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_response_get_accept_ranges_header
dedent|''
name|'def'
name|'test_response_get_accept_ranges_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
name|'body'
op|'='
string|"'{}'"
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a?format=json'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'GET'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'accept-ranges'"
name|'in'
name|'res'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'headers'
op|'['
string|"'accept-ranges'"
op|']'
op|','
string|"'bytes'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_response_head_accept_ranges_header
dedent|''
dedent|''
name|'def'
name|'test_response_head_accept_ranges_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
name|'body'
op|'='
string|"'{}'"
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a?format=json'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'HEAD'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'.'
name|'body'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'accept-ranges'"
name|'in'
name|'res'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'headers'
op|'['
string|"'accept-ranges'"
op|']'
op|','
string|"'bytes'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT
dedent|''
dedent|''
name|'def'
name|'test_PUT'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_status_map
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'str'
op|'('
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'expected'
op|')'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'405'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|'='
name|'True'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'201'
op|','
number|'201'
op|','
number|'500'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'201'
op|','
number|'500'
op|','
number|'500'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'204'
op|','
number|'500'
op|','
number|'404'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_max_account_name_length
dedent|''
dedent|''
name|'def'
name|'test_PUT_max_account_name_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|'='
name|'True'
newline|'\n'
name|'limit'
op|'='
name|'constraints'
op|'.'
name|'MAX_ACCOUNT_NAME_LENGTH'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'1'"
op|'*'
name|'limit'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|','
string|"'2'"
op|'*'
op|'('
name|'limit'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_connect_exceptions
dedent|''
dedent|''
name|'def'
name|'test_PUT_connect_exceptions'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|'='
name|'True'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'201'
op|','
number|'201'
op|','
op|'-'
number|'1'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'201'
op|','
op|'-'
number|'1'
op|','
op|'-'
number|'1'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'503'
op|','
number|'503'
op|','
op|'-'
number|'1'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_status
dedent|''
dedent|''
name|'def'
name|'test_PUT_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|'='
name|'True'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status_map'
op|'('
name|'controller'
op|'.'
name|'PUT'
op|','
op|'('
number|'201'
op|','
number|'201'
op|','
number|'202'
op|')'
op|','
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_metadata
dedent|''
dedent|''
name|'def'
name|'test_PUT_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'metadata_helper'
op|'('
string|"'PUT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_metadata
dedent|''
name|'def'
name|'test_POST_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'metadata_helper'
op|'('
string|"'POST'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|metadata_helper
dedent|''
name|'def'
name|'metadata_helper'
op|'('
name|'self'
op|','
name|'method'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'test_header'
op|','
name|'test_value'
name|'in'
op|'('
nl|'\n'
op|'('
string|"'X-Account-Meta-TestHeader'"
op|','
string|"'TestValue'"
op|')'
op|','
nl|'\n'
op|'('
string|"'X-Account-Meta-TestHeader'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
op|'('
string|"'X-Remove-Account-Meta-TestHeader'"
op|','
string|"'anything'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'test_errors'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|test_connect
name|'def'
name|'test_connect'
op|'('
name|'ipaddr'
op|','
name|'port'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'method'
op|','
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
name|'None'
op|','
name|'query_string'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'path'
op|'=='
string|"'/a'"
op|':'
newline|'\n'
indent|'                    '
name|'find_header'
op|'='
name|'test_header'
newline|'\n'
name|'find_value'
op|'='
name|'test_value'
newline|'\n'
name|'if'
name|'find_header'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-remove-'"
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'find_header'
op|'='
name|'find_header'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'replace'
op|'('
string|"'-remove'"
op|','
string|"''"
op|','
number|'1'
op|')'
newline|'\n'
name|'find_value'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
name|'find_header'
op|'.'
name|'lower'
op|'('
op|')'
name|'and'
name|'v'
op|'=='
name|'find_value'
op|':'
newline|'\n'
indent|'                            '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'test_errors'
op|'.'
name|'append'
op|'('
string|"'%s: %s not in %s'"
op|'%'
nl|'\n'
op|'('
name|'find_header'
op|','
name|'find_value'
op|','
name|'headers'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|'='
name|'True'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|','
name|'give_connect'
op|'='
name|'test_connect'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
name|'test_header'
op|':'
name|'test_value'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_errors'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_PUT_bad_metadata
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_PUT_bad_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'bad_metadata_helper'
op|'('
string|"'PUT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_POST_bad_metadata
dedent|''
name|'def'
name|'test_POST_bad_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'bad_metadata_helper'
op|'('
string|"'POST'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|bad_metadata_helper
dedent|''
name|'def'
name|'bad_metadata_helper'
op|'('
name|'self'
op|','
name|'method'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|'='
name|'True'
newline|'\n'
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'a'"
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Account-Meta-'"
op|'+'
nl|'\n'
op|'('
string|"'a'"
op|'*'
name|'constraints'
op|'.'
name|'MAX_META_NAME_LENGTH'
op|')'
op|':'
string|"'v'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Account-Meta-'"
op|'+'
nl|'\n'
op|'('
string|"'a'"
op|'*'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_NAME_LENGTH'
op|'+'
number|'1'
op|')'
op|')'
op|':'
string|"'v'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Account-Meta-Too-Long'"
op|':'
nl|'\n'
string|"'a'"
op|'*'
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Account-Meta-Too-Long'"
op|':'
nl|'\n'
string|"'a'"
op|'*'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
op|'+'
number|'1'
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_COUNT'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'['
string|"'X-Account-Meta-%d'"
op|'%'
name|'x'
op|']'
op|'='
string|"'v'"
newline|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_COUNT'
op|'+'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'['
string|"'X-Account-Meta-%d'"
op|'%'
name|'x'
op|']'
op|'='
string|"'v'"
newline|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'header_value'
op|'='
string|"'a'"
op|'*'
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
newline|'\n'
name|'size'
op|'='
number|'0'
newline|'\n'
name|'x'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'size'
op|'<'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_OVERALL_SIZE'
op|'-'
number|'4'
nl|'\n'
op|'-'
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'size'
op|'+='
number|'4'
op|'+'
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
newline|'\n'
name|'headers'
op|'['
string|"'X-Account-Meta-%04d'"
op|'%'
name|'x'
op|']'
op|'='
name|'header_value'
newline|'\n'
name|'x'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'if'
name|'constraints'
op|'.'
name|'MAX_META_OVERALL_SIZE'
op|'-'
name|'size'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'['
string|"'X-Account-Meta-a'"
op|']'
op|'='
string|"'a'"
op|'*'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_OVERALL_SIZE'
op|'-'
name|'size'
op|'-'
number|'1'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'201'
op|')'
newline|'\n'
name|'set_http_connect'
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'X-Account-Meta-a'"
op|']'
op|'='
string|"'a'"
op|'*'
op|'('
name|'constraints'
op|'.'
name|'MAX_META_OVERALL_SIZE'
op|'-'
name|'size'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
name|'method'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'method'
op|')'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_DELETE
dedent|''
dedent|''
name|'def'
name|'test_DELETE'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_status_map
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a'"
op|','
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'DELETE'
op|'('
name|'req'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'str'
op|'('
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'expected'
op|')'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'405'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|'='
name|'True'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'201'
op|','
number|'201'
op|','
number|'500'
op|')'
op|','
number|'201'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'201'
op|','
number|'500'
op|','
number|'500'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'204'
op|','
number|'500'
op|','
number|'404'
op|')'
op|','
number|'503'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_DELETE_with_query_string
dedent|''
dedent|''
name|'def'
name|'test_DELETE_with_query_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Extra safety in case someone typos a query string for an'
nl|'\n'
comment|'# account-level DELETE request that was really meant to be caught by'
nl|'\n'
comment|'# some middleware.'
nl|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'controller'
op|'='
name|'proxy_server'
op|'.'
name|'AccountController'
op|'('
name|'self'
op|'.'
name|'app'
op|','
string|"'account'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|test_status_map
name|'def'
name|'test_status_map'
op|'('
name|'statuses'
op|','
name|'expected'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'set_http_connect'
op|'('
op|'*'
name|'statuses'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'store'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a?whoops'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'DELETE'"
op|'}'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'update_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'res'
op|'='
name|'controller'
op|'.'
name|'DELETE'
op|'('
name|'req'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'str'
op|'('
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'res'
op|'.'
name|'status'
op|'['
op|':'
name|'len'
op|'('
name|'expected'
op|')'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
dedent|''
name|'test_status_map'
op|'('
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|'='
name|'True'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'201'
op|','
number|'201'
op|','
number|'201'
op|')'
op|','
number|'400'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'201'
op|','
number|'201'
op|','
number|'500'
op|')'
op|','
number|'400'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'201'
op|','
number|'500'
op|','
number|'500'
op|')'
op|','
number|'400'
op|')'
newline|'\n'
name|'test_status_map'
op|'('
op|'('
number|'204'
op|','
number|'500'
op|','
number|'404'
op|')'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'patch_policies'
op|'('
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|','
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
op|']'
op|')'
newline|'\n'
DECL|class|TestAccountControllerFakeGetResponse
name|'class'
name|'TestAccountControllerFakeGetResponse'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Test all the faked-out GET responses for accounts that don\'t exist. They\n    have to match the responses for empty accounts that really exist.\n    """'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
op|'{'
string|"'account_autocreate'"
op|':'
string|"'yes'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
name|'conf'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'='
name|'FakeMemcacheReturnsNone'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_GET_autocreate_accept_json
dedent|''
name|'def'
name|'test_GET_autocreate_accept_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
op|'*'
op|'('
op|'['
number|'404'
op|']'
op|'*'
number|'100'
op|')'
op|')'
comment|'# nonexistent: all backends 404'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/a'"
op|','
name|'headers'
op|'='
op|'{'
string|"'Accept'"
op|':'
string|"'application/json'"
op|'}'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'PATH_INFO'"
op|':'
string|"'/v1/a'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'application/json; charset=utf-8'"
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"[]"'
op|','
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_GET_autocreate_format_json
dedent|''
dedent|''
name|'def'
name|'test_GET_autocreate_format_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
op|'*'
op|'('
op|'['
number|'404'
op|']'
op|'*'
number|'100'
op|')'
op|')'
comment|'# nonexistent: all backends 404'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a?format=json'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'PATH_INFO'"
op|':'
string|"'/v1/a'"
op|','
nl|'\n'
string|"'QUERY_STRING'"
op|':'
string|"'format=json'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'application/json; charset=utf-8'"
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"[]"'
op|','
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_GET_autocreate_accept_xml
dedent|''
dedent|''
name|'def'
name|'test_GET_autocreate_accept_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
op|'*'
op|'('
op|'['
number|'404'
op|']'
op|'*'
number|'100'
op|')'
op|')'
comment|'# nonexistent: all backends 404'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a'"
op|','
name|'headers'
op|'='
op|'{'
string|'"Accept"'
op|':'
string|'"text/xml"'
op|'}'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'PATH_INFO'"
op|':'
string|"'/v1/a'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'text/xml; charset=utf-8'"
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|')'
newline|'\n'
name|'empty_xml_listing'
op|'='
op|'('
string|'\'<?xml version="1.0" encoding="UTF-8"?>\\n\''
nl|'\n'
string|'\'<account name="a">\\n</account>\''
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'empty_xml_listing'
op|','
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_GET_autocreate_format_xml
dedent|''
dedent|''
name|'def'
name|'test_GET_autocreate_format_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
op|'*'
op|'('
op|'['
number|'404'
op|']'
op|'*'
number|'100'
op|')'
op|')'
comment|'# nonexistent: all backends 404'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a?format=xml'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'PATH_INFO'"
op|':'
string|"'/v1/a'"
op|','
nl|'\n'
string|"'QUERY_STRING'"
op|':'
string|"'format=xml'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'200'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'application/xml; charset=utf-8'"
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|')'
newline|'\n'
name|'empty_xml_listing'
op|'='
op|'('
string|'\'<?xml version="1.0" encoding="UTF-8"?>\\n\''
nl|'\n'
string|'\'<account name="a">\\n</account>\''
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'empty_xml_listing'
op|','
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_GET_autocreate_accept_unknown
dedent|''
dedent|''
name|'def'
name|'test_GET_autocreate_accept_unknown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
op|'*'
op|'('
op|'['
number|'404'
op|']'
op|'*'
number|'100'
op|')'
op|')'
comment|'# nonexistent: all backends 404'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a'"
op|','
name|'headers'
op|'='
op|'{'
string|'"Accept"'
op|':'
string|'"mystery/meat"'
op|'}'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'PATH_INFO'"
op|':'
string|"'/v1/a'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'406'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_GET_autocreate_format_invalid_utf8
dedent|''
dedent|''
name|'def'
name|'test_GET_autocreate_format_invalid_utf8'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'set_http_connect'
op|'('
op|'*'
op|'('
op|'['
number|'404'
op|']'
op|'*'
number|'100'
op|')'
op|')'
comment|'# nonexistent: all backends 404'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a?format=\\xff\\xfe'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'PATH_INFO'"
op|':'
string|"'/v1/a'"
op|','
nl|'\n'
string|"'QUERY_STRING'"
op|':'
string|"'format=\\xff\\xfe'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'400'
op|','
name|'resp'
op|'.'
name|'status_int'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_account_acl_header_access
dedent|''
dedent|''
name|'def'
name|'test_account_acl_header_access'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'acl'
op|'='
op|'{'
nl|'\n'
string|"'admin'"
op|':'
op|'['
string|"'AUTH_alice'"
op|']'
op|','
nl|'\n'
string|"'read-write'"
op|':'
op|'['
string|"'AUTH_bob'"
op|']'
op|','
nl|'\n'
string|"'read-only'"
op|':'
op|'['
string|"'AUTH_carol'"
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'prefix'
op|'='
name|'get_sys_meta_prefix'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'privileged_headers'
op|'='
op|'{'
op|'('
name|'prefix'
op|'+'
string|"'core-access-control'"
op|')'
op|':'
name|'format_acl'
op|'('
nl|'\n'
name|'version'
op|'='
number|'2'
op|','
name|'acl_dict'
op|'='
name|'acl'
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
nl|'\n'
name|'None'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'save_globals'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# Mock account server will provide privileged information (ACLs)'
nl|'\n'
indent|'            '
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
name|'headers'
op|'='
name|'privileged_headers'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
comment|'# Not a swift_owner -- ACLs should NOT be in response'
nl|'\n'
name|'header'
op|'='
string|"'X-Account-Access-Control'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'header'
name|'not'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|','
string|"'%r was in %r'"
op|'%'
op|'('
nl|'\n'
name|'header'
op|','
name|'resp'
op|'.'
name|'headers'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Same setup -- mock acct server will provide ACLs'
nl|'\n'
name|'set_http_connect'
op|'('
number|'200'
op|','
number|'200'
op|','
number|'200'
op|','
name|'headers'
op|'='
name|'privileged_headers'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'swift_owner'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
comment|'# For a swift_owner, the ACLs *should* be in response'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'header'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|','
string|"'%r not in %r'"
op|'%'
op|'('
nl|'\n'
name|'header'
op|','
name|'resp'
op|'.'
name|'headers'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_account_acls_through_delegation
dedent|''
dedent|''
name|'def'
name|'test_account_acls_through_delegation'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# Define a way to grab the requests sent out from the AccountController'
nl|'\n'
comment|"# to the Account Server, and a way to inject responses we'd like the"
nl|'\n'
comment|'# Account Server to return.'
nl|'\n'
indent|'        '
name|'resps_to_send'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'contextmanager'
newline|'\n'
DECL|function|patch_account_controller_method
name|'def'
name|'patch_account_controller_method'
op|'('
name|'verb'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'old_method'
op|'='
name|'getattr'
op|'('
name|'proxy_server'
op|'.'
name|'AccountController'
op|','
name|'verb'
op|')'
newline|'\n'
name|'new_method'
op|'='
name|'lambda'
name|'self'
op|','
name|'req'
op|','
op|'*'
name|'_'
op|','
op|'**'
name|'__'
op|':'
name|'resps_to_send'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'setattr'
op|'('
name|'proxy_server'
op|'.'
name|'AccountController'
op|','
name|'verb'
op|','
name|'new_method'
op|')'
newline|'\n'
name|'yield'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'setattr'
op|'('
name|'proxy_server'
op|'.'
name|'AccountController'
op|','
name|'verb'
op|','
name|'old_method'
op|')'
newline|'\n'
nl|'\n'
DECL|function|make_test_request
dedent|''
dedent|''
name|'def'
name|'make_test_request'
op|'('
name|'http_method'
op|','
name|'swift_owner'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'env'
op|'='
op|'{'
nl|'\n'
string|"'REQUEST_METHOD'"
op|':'
name|'http_method'
op|','
nl|'\n'
string|"'swift_owner'"
op|':'
name|'swift_owner'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'acl'
op|'='
op|'{'
nl|'\n'
string|"'admin'"
op|':'
op|'['
string|"'foo'"
op|']'
op|','
nl|'\n'
string|"'read-write'"
op|':'
op|'['
string|"'bar'"
op|']'
op|','
nl|'\n'
string|"'read-only'"
op|':'
op|'['
string|"'bas'"
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'headers'
op|'='
op|'{'
op|'}'
name|'if'
name|'http_method'
name|'in'
op|'('
string|"'GET'"
op|','
string|"'HEAD'"
op|')'
name|'else'
op|'{'
nl|'\n'
string|"'x-account-access-control'"
op|':'
name|'format_acl'
op|'('
name|'version'
op|'='
number|'2'
op|','
name|'acl_dict'
op|'='
name|'acl'
op|')'
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'return'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a'"
op|','
name|'environ'
op|'='
name|'env'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
nl|'\n'
comment|'# Our AccountController will invoke methods to communicate with the'
nl|'\n'
comment|'# Account Server, and they will return responses like these:'
nl|'\n'
DECL|function|make_canned_response
dedent|''
name|'def'
name|'make_canned_response'
op|'('
name|'http_method'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'acl'
op|'='
op|'{'
nl|'\n'
string|"'admin'"
op|':'
op|'['
string|"'foo'"
op|']'
op|','
nl|'\n'
string|"'read-write'"
op|':'
op|'['
string|"'bar'"
op|']'
op|','
nl|'\n'
string|"'read-only'"
op|':'
op|'['
string|"'bas'"
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'x-account-sysmeta-core-access-control'"
op|':'
name|'format_acl'
op|'('
nl|'\n'
name|'version'
op|'='
number|'2'
op|','
name|'acl_dict'
op|'='
name|'acl'
op|')'
op|'}'
newline|'\n'
name|'canned_resp'
op|'='
name|'Response'
op|'('
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'canned_resp'
op|'.'
name|'environ'
op|'='
op|'{'
nl|'\n'
string|"'PATH_INFO'"
op|':'
string|"'/acct'"
op|','
nl|'\n'
string|"'REQUEST_METHOD'"
op|':'
name|'http_method'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'resps_to_send'
op|'.'
name|'append'
op|'('
name|'canned_resp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'app'
op|'='
name|'proxy_server'
op|'.'
name|'Application'
op|'('
nl|'\n'
name|'None'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'allow_account_management'
op|'='
name|'True'
newline|'\n'
nl|'\n'
name|'ext_header'
op|'='
string|"'x-account-access-control'"
newline|'\n'
name|'with'
name|'patch_account_controller_method'
op|'('
string|"'GETorHEAD_base'"
op|')'
op|':'
newline|'\n'
comment|'# GET/HEAD requests should remap sysmeta headers from acct server'
nl|'\n'
indent|'            '
name|'for'
name|'verb'
name|'in'
op|'('
string|"'GET'"
op|','
string|"'HEAD'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'make_canned_response'
op|'('
name|'verb'
op|')'
newline|'\n'
name|'req'
op|'='
name|'make_test_request'
op|'('
name|'verb'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'h'
op|'='
name|'parse_acl'
op|'('
name|'version'
op|'='
number|'2'
op|','
name|'data'
op|'='
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
name|'ext_header'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'h'
op|'['
string|"'admin'"
op|']'
op|','
op|'['
string|"'foo'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'h'
op|'['
string|"'read-write'"
op|']'
op|','
op|'['
string|"'bar'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'h'
op|'['
string|"'read-only'"
op|']'
op|','
op|'['
string|"'bas'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|"# swift_owner = False: GET/HEAD shouldn't return sensitive info"
nl|'\n'
name|'make_canned_response'
op|'('
name|'verb'
op|')'
newline|'\n'
name|'req'
op|'='
name|'make_test_request'
op|'('
name|'verb'
op|','
name|'swift_owner'
op|'='
name|'False'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'h'
op|'='
name|'resp'
op|'.'
name|'headers'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
name|'h'
op|'.'
name|'get'
op|'('
name|'ext_header'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# swift_owner unset: GET/HEAD shouldn't return sensitive info"
nl|'\n'
name|'make_canned_response'
op|'('
name|'verb'
op|')'
newline|'\n'
name|'req'
op|'='
name|'make_test_request'
op|'('
name|'verb'
op|','
name|'swift_owner'
op|'='
name|'False'
op|')'
newline|'\n'
name|'del'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift_owner'"
op|']'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'h'
op|'='
name|'resp'
op|'.'
name|'headers'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
name|'h'
op|'.'
name|'get'
op|'('
name|'ext_header'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Verify that PUT/POST requests remap sysmeta headers from acct server'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'patch_account_controller_method'
op|'('
string|"'make_requests'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'make_canned_response'
op|'('
string|"'PUT'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'make_test_request'
op|'('
string|"'PUT'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'h'
op|'='
name|'parse_acl'
op|'('
name|'version'
op|'='
number|'2'
op|','
name|'data'
op|'='
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
name|'ext_header'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'h'
op|'['
string|"'admin'"
op|']'
op|','
op|'['
string|"'foo'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'h'
op|'['
string|"'read-write'"
op|']'
op|','
op|'['
string|"'bar'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'h'
op|'['
string|"'read-only'"
op|']'
op|','
op|'['
string|"'bas'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'make_canned_response'
op|'('
string|"'POST'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'make_test_request'
op|'('
string|"'POST'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'app'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
name|'h'
op|'='
name|'parse_acl'
op|'('
name|'version'
op|'='
number|'2'
op|','
name|'data'
op|'='
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
name|'ext_header'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'h'
op|'['
string|"'admin'"
op|']'
op|','
op|'['
string|"'foo'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'h'
op|'['
string|"'read-write'"
op|']'
op|','
op|'['
string|"'bar'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'h'
op|'['
string|"'read-only'"
op|']'
op|','
op|'['
string|"'bas'"
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeObjectController
dedent|''
dedent|''
dedent|''
name|'class'
name|'FakeObjectController'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'self'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'self'
newline|'\n'
name|'self'
op|'.'
name|'account_name'
op|'='
string|"'a'"
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
string|"'c'"
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
string|"'o'"
newline|'\n'
name|'self'
op|'.'
name|'trans_id'
op|'='
string|"'tx1'"
newline|'\n'
name|'self'
op|'.'
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'node_timeout'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'rate_limit_after_segment'
op|'='
number|'3'
newline|'\n'
name|'self'
op|'.'
name|'rate_limit_segments_per_sec'
op|'='
number|'2'
newline|'\n'
name|'self'
op|'.'
name|'GETorHEAD_base_args'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|exception
dedent|''
name|'def'
name|'exception'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'exception_args'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'exception_info'
op|'='
name|'sys'
op|'.'
name|'exc_info'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|GETorHEAD_base
dedent|''
name|'def'
name|'GETorHEAD_base'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'GETorHEAD_base_args'
op|'.'
name|'append'
op|'('
name|'args'
op|')'
newline|'\n'
name|'req'
op|'='
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
name|'path'
op|'='
name|'args'
op|'['
number|'4'
op|']'
newline|'\n'
name|'body'
op|'='
name|'data'
op|'='
name|'path'
op|'['
op|'-'
number|'1'
op|']'
op|'*'
name|'int'
op|'('
name|'path'
op|'['
op|'-'
number|'1'
op|']'
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'range'
op|':'
newline|'\n'
indent|'            '
name|'r'
op|'='
name|'req'
op|'.'
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
name|'len'
op|'('
name|'data'
op|')'
op|')'
newline|'\n'
name|'if'
name|'r'
op|':'
newline|'\n'
indent|'                '
op|'('
name|'start'
op|','
name|'stop'
op|')'
op|'='
name|'r'
op|'['
number|'0'
op|']'
newline|'\n'
name|'body'
op|'='
name|'data'
op|'['
name|'start'
op|':'
name|'stop'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'resp'
op|'='
name|'Response'
op|'('
name|'app_iter'
op|'='
name|'iter'
op|'('
name|'body'
op|')'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
DECL|member|iter_nodes
dedent|''
name|'def'
name|'iter_nodes'
op|'('
name|'self'
op|','
name|'ring'
op|','
name|'partition'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'node'
name|'in'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'partition'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'node'
newline|'\n'
dedent|''
name|'for'
name|'node'
name|'in'
name|'ring'
op|'.'
name|'get_more_nodes'
op|'('
name|'partition'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'node'
newline|'\n'
nl|'\n'
DECL|member|sort_nodes
dedent|''
dedent|''
name|'def'
name|'sort_nodes'
op|'('
name|'self'
op|','
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'nodes'
newline|'\n'
nl|'\n'
DECL|member|set_node_timing
dedent|''
name|'def'
name|'set_node_timing'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'timing'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestProxyObjectPerformance
dedent|''
dedent|''
name|'class'
name|'TestProxyObjectPerformance'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This is just a simple test that can be used to verify and debug the'
nl|'\n'
comment|'# various data paths between the proxy server and the object'
nl|'\n'
comment|'# server. Used as a play ground to debug buffer sizes for sockets.'
nl|'\n'
indent|'        '
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
comment|'# Client is transmitting in 2 MB chunks'
nl|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
string|"'wb'"
op|','
number|'2'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|')'
newline|'\n'
comment|'# Small, fast for testing'
nl|'\n'
name|'obj_len'
op|'='
number|'2'
op|'*'
number|'64'
op|'*'
number|'1024'
newline|'\n'
comment|'# Use 1 GB or more for measurements'
nl|'\n'
comment|'# obj_len = 2 * 512 * 1024 * 1024'
nl|'\n'
name|'self'
op|'.'
name|'path'
op|'='
string|"'/v1/a/c/o.large'"
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT %s HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: %s\\r\\n'"
nl|'\n'
string|"'Content-Type: application/octet-stream\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|'%'
op|'('
name|'self'
op|'.'
name|'path'
op|','
name|'str'
op|'('
name|'obj_len'
op|')'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'a'"
op|'*'
name|'obj_len'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'obj_len'
op|'='
name|'obj_len'
newline|'\n'
nl|'\n'
DECL|member|test_GET_debug_large_file
dedent|''
name|'def'
name|'test_GET_debug_large_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
comment|'# Client is reading in 2 MB chunks'
nl|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
string|"'wb'"
op|','
number|'2'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET %s HTTP/1.1\\r\\n'"
nl|'\n'
string|"'Host: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|'%'
name|'self'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'total'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'buf'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
number|'100000'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'buf'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'total'
op|'+='
name|'len'
op|'('
name|'buf'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'total'
op|','
name|'self'
op|'.'
name|'obj_len'
op|')'
newline|'\n'
nl|'\n'
name|'end'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'print'
op|'('
string|'"Run %02d took %07.03f"'
op|'%'
op|'('
name|'i'
op|','
name|'end'
op|'-'
name|'start'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'patch_policies'
op|'('
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'migrated'"
op|','
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'ernie'"
op|','
name|'True'
op|','
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'deprecated'"
op|','
name|'is_deprecated'
op|'='
name|'True'
op|','
nl|'\n'
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'3'
op|','
string|"'bert'"
op|','
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
op|']'
op|')'
newline|'\n'
DECL|class|TestSwiftInfo
name|'class'
name|'TestSwiftInfo'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'utils'
op|'.'
name|'_swift_info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'utils'
op|'.'
name|'_swift_admin_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|test_registered_defaults
dedent|''
name|'def'
name|'test_registered_defaults'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'proxy_server'
op|'.'
name|'Application'
op|'('
op|'{'
op|'}'
op|','
name|'FakeMemcache'
op|'('
op|')'
op|','
nl|'\n'
name|'account_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'FakeRing'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'si'
op|'='
name|'utils'
op|'.'
name|'get_swift_info'
op|'('
op|')'
op|'['
string|"'swift'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'version'"
name|'in'
name|'si'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'si'
op|'['
string|"'max_file_size'"
op|']'
op|','
name|'constraints'
op|'.'
name|'MAX_FILE_SIZE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'si'
op|'['
string|"'max_meta_name_length'"
op|']'
op|','
nl|'\n'
name|'constraints'
op|'.'
name|'MAX_META_NAME_LENGTH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'si'
op|'['
string|"'max_meta_value_length'"
op|']'
op|','
nl|'\n'
name|'constraints'
op|'.'
name|'MAX_META_VALUE_LENGTH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'si'
op|'['
string|"'max_meta_count'"
op|']'
op|','
name|'constraints'
op|'.'
name|'MAX_META_COUNT'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'si'
op|'['
string|"'max_header_size'"
op|']'
op|','
name|'constraints'
op|'.'
name|'MAX_HEADER_SIZE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'si'
op|'['
string|"'max_meta_overall_size'"
op|']'
op|','
nl|'\n'
name|'constraints'
op|'.'
name|'MAX_META_OVERALL_SIZE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'si'
op|'['
string|"'account_listing_limit'"
op|']'
op|','
nl|'\n'
name|'constraints'
op|'.'
name|'ACCOUNT_LISTING_LIMIT'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'si'
op|'['
string|"'container_listing_limit'"
op|']'
op|','
nl|'\n'
name|'constraints'
op|'.'
name|'CONTAINER_LISTING_LIMIT'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'si'
op|'['
string|"'max_account_name_length'"
op|']'
op|','
nl|'\n'
name|'constraints'
op|'.'
name|'MAX_ACCOUNT_NAME_LENGTH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'si'
op|'['
string|"'max_container_name_length'"
op|']'
op|','
nl|'\n'
name|'constraints'
op|'.'
name|'MAX_CONTAINER_NAME_LENGTH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'si'
op|'['
string|"'max_object_name_length'"
op|']'
op|','
nl|'\n'
name|'constraints'
op|'.'
name|'MAX_OBJECT_NAME_LENGTH'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'strict_cors_mode'"
name|'in'
name|'si'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'si'
op|'['
string|"'allow_account_management'"
op|']'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'si'
op|'['
string|"'account_autocreate'"
op|']'
op|','
name|'False'
op|')'
newline|'\n'
comment|'# This setting is by default excluded by disallowed_sections'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'si'
op|'['
string|"'valid_api_versions'"
op|']'
op|','
nl|'\n'
name|'constraints'
op|'.'
name|'VALID_API_VERSIONS'
op|')'
newline|'\n'
comment|'# this next test is deliberately brittle in order to alert if'
nl|'\n'
comment|'# other items are added to swift info'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'si'
op|')'
op|','
number|'18'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'policies'"
name|'in'
name|'si'
op|')'
newline|'\n'
name|'sorted_pols'
op|'='
name|'sorted'
op|'('
name|'si'
op|'['
string|"'policies'"
op|']'
op|','
name|'key'
op|'='
name|'operator'
op|'.'
name|'itemgetter'
op|'('
string|"'name'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'sorted_pols'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'sorted_pols'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'policy'
op|'['
string|"'name'"
op|']'
op|','
string|"'deprecated'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted_pols'
op|'['
number|'0'
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'bert'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted_pols'
op|'['
number|'1'
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'ernie'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted_pols'
op|'['
number|'2'
op|']'
op|'['
string|"'name'"
op|']'
op|','
string|"'migrated'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSocketObjectVersions
dedent|''
dedent|''
name|'class'
name|'TestSocketObjectVersions'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'prolis'
op|'='
name|'prolis'
op|'='
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_orig_prolis'
op|'='
name|'_test_sockets'
op|'['
number|'0'
op|']'
newline|'\n'
name|'allowed_headers'
op|'='
string|"', '"
op|'.'
name|'join'
op|'('
op|'['
nl|'\n'
string|"'content-encoding'"
op|','
nl|'\n'
string|"'x-object-manifest'"
op|','
nl|'\n'
string|"'content-disposition'"
op|','
nl|'\n'
string|"'foo'"
nl|'\n'
op|']'
op|')'
newline|'\n'
name|'conf'
op|'='
op|'{'
string|"'devices'"
op|':'
name|'_testdir'
op|','
string|"'swift_dir'"
op|':'
name|'_testdir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'false'"
op|','
string|"'allowed_headers'"
op|':'
name|'allowed_headers'
op|'}'
newline|'\n'
name|'prosrv'
op|'='
name|'versioned_writes'
op|'.'
name|'VersionedWritesMiddleware'
op|'('
nl|'\n'
name|'proxy_logging'
op|'.'
name|'ProxyLoggingMiddleware'
op|'('
nl|'\n'
name|'_test_servers'
op|'['
number|'0'
op|']'
op|','
name|'conf'
op|','
nl|'\n'
name|'logger'
op|'='
name|'_test_servers'
op|'['
number|'0'
op|']'
op|'.'
name|'logger'
op|')'
op|','
nl|'\n'
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'coro'
op|'='
name|'spawn'
op|'('
name|'wsgi'
op|'.'
name|'server'
op|','
name|'prolis'
op|','
name|'prosrv'
op|','
name|'NullLogger'
op|'('
op|')'
op|')'
newline|'\n'
comment|"# replace global prosrv with one that's filtered with version"
nl|'\n'
comment|'# middleware'
nl|'\n'
name|'global'
name|'_test_sockets'
newline|'\n'
name|'self'
op|'.'
name|'sockets'
op|'='
name|'list'
op|'('
name|'_test_sockets'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'sockets'
op|'['
number|'0'
op|']'
op|'='
name|'prolis'
newline|'\n'
name|'_test_sockets'
op|'='
name|'tuple'
op|'('
name|'self'
op|'.'
name|'sockets'
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'coro'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
comment|'# put the global state back'
nl|'\n'
name|'global'
name|'_test_sockets'
newline|'\n'
name|'self'
op|'.'
name|'sockets'
op|'['
number|'0'
op|']'
op|'='
name|'self'
op|'.'
name|'_orig_prolis'
newline|'\n'
name|'_test_sockets'
op|'='
name|'tuple'
op|'('
name|'self'
op|'.'
name|'sockets'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_version_manifest
dedent|''
name|'def'
name|'test_version_manifest'
op|'('
name|'self'
op|','
name|'oc'
op|'='
string|"'versions'"
op|','
name|'vc'
op|'='
string|"'vers'"
op|','
name|'o'
op|'='
string|"'name'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'versions_to_create'
op|'='
number|'3'
newline|'\n'
comment|'# Create a container for our versioned object testing'
nl|'\n'
op|'('
name|'prolis'
op|','
name|'acc1lis'
op|','
name|'acc2lis'
op|','
name|'con1lis'
op|','
name|'con2lis'
op|','
name|'obj1lis'
op|','
nl|'\n'
name|'obj2lis'
op|','
name|'obj3lis'
op|')'
op|'='
name|'_test_sockets'
newline|'\n'
name|'pre'
op|'='
name|'quote'
op|'('
string|"'%03x'"
op|'%'
name|'len'
op|'('
name|'o'
op|')'
op|')'
newline|'\n'
name|'osub'
op|'='
string|"'%s/sub'"
op|'%'
name|'o'
newline|'\n'
name|'presub'
op|'='
name|'quote'
op|'('
string|"'%03x'"
op|'%'
name|'len'
op|'('
name|'osub'
op|')'
op|')'
newline|'\n'
name|'osub'
op|'='
name|'quote'
op|'('
name|'osub'
op|')'
newline|'\n'
name|'presub'
op|'='
name|'quote'
op|'('
name|'presub'
op|')'
newline|'\n'
name|'oc'
op|'='
name|'quote'
op|'('
name|'oc'
op|')'
newline|'\n'
name|'vc'
op|'='
name|'quote'
op|'('
name|'vc'
op|')'
newline|'\n'
nl|'\n'
DECL|function|put_container
name|'def'
name|'put_container'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/%s HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\nX-Versions-Location: %s\\r\\n\\r\\n'"
nl|'\n'
op|'%'
op|'('
name|'oc'
op|','
name|'vc'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'headers'
newline|'\n'
nl|'\n'
dedent|''
name|'headers'
op|'='
name|'put_container'
op|'('
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_container
name|'def'
name|'get_container'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/%s HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n\\r\\n\\r\\n'"
op|'%'
name|'oc'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'body'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'headers'
op|','
name|'body'
newline|'\n'
nl|'\n'
comment|'# check that the header was set'
nl|'\n'
dedent|''
name|'headers'
op|','
name|'body'
op|'='
name|'get_container'
op|'('
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 2'"
comment|'# 2xx series response'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'X-Versions-Location: %s'"
op|'%'
name|'vc'
name|'in'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|function|put_version_container
name|'def'
name|'put_version_container'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/%s HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|'%'
name|'vc'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'headers'
newline|'\n'
nl|'\n'
comment|'# make the container for the object versions'
nl|'\n'
dedent|''
name|'headers'
op|'='
name|'put_version_container'
op|'('
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
DECL|function|put
name|'def'
name|'put'
op|'('
name|'version'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/%s/%s HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Storage-Token: '"
nl|'\n'
string|"'t\\r\\nContent-Length: 5\\r\\nContent-Type: text/jibberish%s'"
nl|'\n'
string|"'\\r\\n\\r\\n%05d\\r\\n'"
op|'%'
op|'('
name|'oc'
op|','
name|'o'
op|','
name|'version'
op|','
name|'version'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'headers'
newline|'\n'
nl|'\n'
DECL|function|get
dedent|''
name|'def'
name|'get'
op|'('
name|'container'
op|'='
name|'oc'
op|','
name|'obj'
op|'='
name|'o'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/%s/%s HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Auth-Token: t\\r\\n'"
nl|'\n'
string|"'\\r\\n'"
op|'%'
op|'('
name|'container'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'body'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'headers'
op|','
name|'body'
newline|'\n'
nl|'\n'
comment|'# Create the versioned file'
nl|'\n'
dedent|''
name|'headers'
op|'='
name|'put'
op|'('
number|'0'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
comment|'# Create the object versions'
nl|'\n'
name|'for'
name|'version'
name|'in'
name|'range'
op|'('
number|'1'
op|','
name|'versions_to_create'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sleep'
op|'('
number|'.01'
op|')'
comment|'# guarantee that the timestamp changes'
newline|'\n'
name|'headers'
op|'='
name|'put'
op|'('
name|'version'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure retrieving the manifest file gets the latest version'
nl|'\n'
name|'headers'
op|','
name|'body'
op|'='
name|'get'
op|'('
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Content-Type: text/jibberish%s'"
op|'%'
name|'version'
name|'in'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'X-Object-Meta-Foo: barbaz'"
name|'not'
name|'in'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"'%05d'"
op|'%'
name|'version'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_version_container
dedent|''
name|'def'
name|'get_version_container'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/%s HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\n'"
nl|'\n'
string|"'X-Storage-Token: t\\r\\n\\r\\n'"
op|'%'
name|'vc'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'body'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'headers'
op|','
name|'body'
newline|'\n'
nl|'\n'
comment|'# Ensure we have the right number of versions saved'
nl|'\n'
dedent|''
name|'headers'
op|','
name|'body'
op|'='
name|'get_version_container'
op|'('
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'versions'
op|'='
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'body'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
name|'if'
name|'x'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'versions'
op|')'
op|','
name|'versions_to_create'
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|function|delete
name|'def'
name|'delete'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'DELETE /v1/a/%s/%s HTTP/1.1\\r\\nHost: localhost\\r'"
nl|'\n'
string|"'\\nConnection: close\\r\\nX-Storage-Token: t\\r\\n\\r\\n'"
nl|'\n'
op|'%'
op|'('
name|'oc'
op|','
name|'o'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'headers'
newline|'\n'
nl|'\n'
DECL|function|copy
dedent|''
name|'def'
name|'copy'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'COPY /v1/a/%s/%s HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Auth-Token: '"
nl|'\n'
string|"'t\\r\\nDestination: %s/copied_name\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\n\\r\\n'"
op|'%'
op|'('
name|'oc'
op|','
name|'o'
op|','
name|'oc'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'headers'
newline|'\n'
nl|'\n'
comment|'# copy a version and make sure the version info is stripped'
nl|'\n'
dedent|''
name|'headers'
op|'='
name|'copy'
op|'('
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 2'"
comment|'# 2xx series response to the COPY'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_copy
name|'def'
name|'get_copy'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/%s/copied_name HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\n'"
nl|'\n'
string|"'X-Auth-Token: t\\r\\n\\r\\n'"
op|'%'
name|'oc'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'body'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'headers'
op|','
name|'body'
newline|'\n'
nl|'\n'
dedent|''
name|'headers'
op|','
name|'body'
op|'='
name|'get_copy'
op|'('
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"'%05d'"
op|'%'
name|'version'
op|')'
newline|'\n'
nl|'\n'
DECL|function|post
name|'def'
name|'post'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'POST /v1/a/%s/%s HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Auth-Token: '"
nl|'\n'
string|"'t\\r\\nContent-Type: foo/bar\\r\\nContent-Length: 0\\r\\n'"
nl|'\n'
string|"'X-Object-Meta-Bar: foo\\r\\n\\r\\n'"
op|'%'
op|'('
name|'oc'
op|','
name|'o'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'return'
name|'headers'
newline|'\n'
nl|'\n'
comment|"# post and make sure it's updated"
nl|'\n'
dedent|''
name|'headers'
op|'='
name|'post'
op|'('
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 2'"
comment|'# 2xx series response to the POST'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
name|'headers'
op|','
name|'body'
op|'='
name|'get'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Content-Type: foo/bar'"
name|'in'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'X-Object-Meta-Bar: foo'"
name|'in'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"'%05d'"
op|'%'
name|'version'
op|')'
newline|'\n'
nl|'\n'
comment|'# check container listing'
nl|'\n'
name|'headers'
op|','
name|'body'
op|'='
name|'get_container'
op|'('
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
comment|'# Delete the object versions'
nl|'\n'
name|'for'
name|'segment'
name|'in'
name|'range'
op|'('
name|'versions_to_create'
op|'-'
number|'1'
op|','
number|'0'
op|','
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'headers'
op|'='
name|'delete'
op|'('
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 2'"
comment|'# 2xx series response'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure retrieving the manifest file gets the latest version'
nl|'\n'
name|'headers'
op|','
name|'body'
op|'='
name|'get'
op|'('
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 200'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Content-Type: text/jibberish%s'"
op|'%'
op|'('
name|'segment'
op|'-'
number|'1'
op|')'
nl|'\n'
name|'in'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"'%05d'"
op|'%'
op|'('
name|'segment'
op|'-'
number|'1'
op|')'
op|')'
newline|'\n'
comment|'# Ensure we have the right number of versions saved'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/%s?prefix=%s%s/ HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Auth-Token: t\\r\\n\\r'"
nl|'\n'
string|"'\\n'"
op|'%'
op|'('
name|'vc'
op|','
name|'pre'
op|','
name|'o'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 2'"
comment|'# 2xx series response'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'body'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'versions'
op|'='
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'body'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
name|'if'
name|'x'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'versions'
op|')'
op|','
name|'segment'
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
comment|'# there is now one version left (in the manifest)'
nl|'\n'
comment|'# Ensure we have no saved versions'
nl|'\n'
dedent|''
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/%s?prefix=%s%s/ HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Auth-Token: t\\r\\n\\r\\n'"
nl|'\n'
op|'%'
op|'('
name|'vc'
op|','
name|'pre'
op|','
name|'o'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 204 No Content'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
comment|'# delete the last version'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'DELETE /v1/a/%s/%s HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Storage-Token: t\\r\\n\\r\\n'"
op|'%'
op|'('
name|'oc'
op|','
name|'o'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 2'"
comment|'# 2xx series response'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
comment|"# Ensure it's all gone"
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/%s/%s HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Auth-Token: t\\r\\n\\r\\n'"
nl|'\n'
op|'%'
op|'('
name|'oc'
op|','
name|'o'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 404'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
comment|'# make sure manifest files will be ignored'
nl|'\n'
name|'for'
name|'_junk'
name|'in'
name|'range'
op|'('
number|'1'
op|','
name|'versions_to_create'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sleep'
op|'('
number|'.01'
op|')'
comment|'# guarantee that the timestamp changes'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/%s/%s HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Storage-Token: '"
nl|'\n'
string|"'t\\r\\nContent-Length: 0\\r\\n'"
nl|'\n'
string|"'Content-Type: text/jibberish0\\r\\n'"
nl|'\n'
string|"'Foo: barbaz\\r\\nX-Object-Manifest: %s/%s/\\r\\n\\r\\n'"
nl|'\n'
op|'%'
op|'('
name|'oc'
op|','
name|'o'
op|','
name|'oc'
op|','
name|'o'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/%s?prefix=%s%s/ HTTP/1.1\\r\\nhost: '"
nl|'\n'
string|"'localhost\\r\\nconnection: close\\r\\nx-auth-token: t\\r\\n\\r\\n'"
nl|'\n'
op|'%'
op|'('
name|'vc'
op|','
name|'pre'
op|','
name|'o'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 204 No Content'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
comment|"# DELETE v1/a/c/obj shouldn't delete v1/a/c/obj/sub versions"
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/%s/%s HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Storage-Token: '"
nl|'\n'
string|"'t\\r\\nContent-Length: 5\\r\\nContent-Type: text/jibberish0\\r\\n'"
nl|'\n'
string|"'Foo: barbaz\\r\\n\\r\\n00000\\r\\n'"
op|'%'
op|'('
name|'oc'
op|','
name|'o'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/%s/%s HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Storage-Token: '"
nl|'\n'
string|"'t\\r\\nContent-Length: 5\\r\\nContent-Type: text/jibberish0\\r\\n'"
nl|'\n'
string|"'Foo: barbaz\\r\\n\\r\\n00001\\r\\n'"
op|'%'
op|'('
name|'oc'
op|','
name|'o'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/%s/%s HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Storage-Token: '"
nl|'\n'
string|"'t\\r\\nContent-Length: 4\\r\\nContent-Type: text/jibberish0\\r\\n'"
nl|'\n'
string|"'Foo: barbaz\\r\\n\\r\\nsub1\\r\\n'"
op|'%'
op|'('
name|'oc'
op|','
name|'osub'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/%s/%s HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Storage-Token: '"
nl|'\n'
string|"'t\\r\\nContent-Length: 4\\r\\nContent-Type: text/jibberish0\\r\\n'"
nl|'\n'
string|"'Foo: barbaz\\r\\n\\r\\nsub2\\r\\n'"
op|'%'
op|'('
name|'oc'
op|','
name|'osub'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'DELETE /v1/a/%s/%s HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Storage-Token: t\\r\\n\\r\\n'"
op|'%'
op|'('
name|'oc'
op|','
name|'o'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 2'"
comment|'# 2xx series response'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'GET /v1/a/%s?prefix=%s%s/ HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Auth-Token: t\\r\\n\\r\\n'"
nl|'\n'
op|'%'
op|'('
name|'vc'
op|','
name|'presub'
op|','
name|'osub'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 2'"
comment|'# 2xx series response'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
name|'body'
op|'='
name|'fd'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'versions'
op|'='
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'body'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
name|'if'
name|'x'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'versions'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
comment|"# Check for when the versions target container doesn't exist"
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/%swhoops HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Storage-Token: t\\r\\n'"
nl|'\n'
string|"'Content-Length: 0\\r\\nX-Versions-Location: none\\r\\n\\r\\n'"
op|'%'
name|'oc'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
comment|'# Create the versioned file'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/%swhoops/foo HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Storage-Token: '"
nl|'\n'
string|"'t\\r\\nContent-Length: 5\\r\\n\\r\\n00000\\r\\n'"
op|'%'
name|'oc'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 201'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
comment|'# Create another version'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'PUT /v1/a/%swhoops/foo HTTP/1.1\\r\\nHost: '"
nl|'\n'
string|"'localhost\\r\\nConnection: close\\r\\nX-Storage-Token: '"
nl|'\n'
string|"'t\\r\\nContent-Length: 5\\r\\n\\r\\n00001\\r\\n'"
op|'%'
name|'oc'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 412'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
comment|'# Delete the object'
nl|'\n'
name|'sock'
op|'='
name|'connect_tcp'
op|'('
op|'('
string|"'localhost'"
op|','
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'fd'
op|'='
name|'sock'
op|'.'
name|'makefile'
op|'('
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'write'
op|'('
string|"'DELETE /v1/a/%swhoops/foo HTTP/1.1\\r\\nHost: localhost\\r\\n'"
nl|'\n'
string|"'Connection: close\\r\\nX-Storage-Token: t\\r\\n\\r\\n'"
op|'%'
name|'oc'
op|')'
newline|'\n'
name|'fd'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'='
name|'readuntil2crlfs'
op|'('
name|'fd'
op|')'
newline|'\n'
name|'exp'
op|'='
string|"'HTTP/1.1 2'"
comment|'# 2xx response'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
op|':'
name|'len'
op|'('
name|'exp'
op|')'
op|']'
op|','
name|'exp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_version_manifest_utf8
dedent|''
name|'def'
name|'test_version_manifest_utf8'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oc'
op|'='
string|"'0_oc_non_ascii\\xc2\\xa3'"
newline|'\n'
name|'vc'
op|'='
string|"'0_vc_non_ascii\\xc2\\xa3'"
newline|'\n'
name|'o'
op|'='
string|"'0_o_non_ascii\\xc2\\xa3'"
newline|'\n'
name|'self'
op|'.'
name|'test_version_manifest'
op|'('
name|'oc'
op|','
name|'vc'
op|','
name|'o'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_version_manifest_utf8_container
dedent|''
name|'def'
name|'test_version_manifest_utf8_container'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oc'
op|'='
string|"'1_oc_non_ascii\\xc2\\xa3'"
newline|'\n'
name|'vc'
op|'='
string|"'1_vc_ascii'"
newline|'\n'
name|'o'
op|'='
string|"'1_o_ascii'"
newline|'\n'
name|'self'
op|'.'
name|'test_version_manifest'
op|'('
name|'oc'
op|','
name|'vc'
op|','
name|'o'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_version_manifest_utf8_version_container
dedent|''
name|'def'
name|'test_version_manifest_utf8_version_container'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oc'
op|'='
string|"'2_oc_ascii'"
newline|'\n'
name|'vc'
op|'='
string|"'2_vc_non_ascii\\xc2\\xa3'"
newline|'\n'
name|'o'
op|'='
string|"'2_o_ascii'"
newline|'\n'
name|'self'
op|'.'
name|'test_version_manifest'
op|'('
name|'oc'
op|','
name|'vc'
op|','
name|'o'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_version_manifest_utf8_containers
dedent|''
name|'def'
name|'test_version_manifest_utf8_containers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oc'
op|'='
string|"'3_oc_non_ascii\\xc2\\xa3'"
newline|'\n'
name|'vc'
op|'='
string|"'3_vc_non_ascii\\xc2\\xa3'"
newline|'\n'
name|'o'
op|'='
string|"'3_o_ascii'"
newline|'\n'
name|'self'
op|'.'
name|'test_version_manifest'
op|'('
name|'oc'
op|','
name|'vc'
op|','
name|'o'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_version_manifest_utf8_object
dedent|''
name|'def'
name|'test_version_manifest_utf8_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oc'
op|'='
string|"'4_oc_ascii'"
newline|'\n'
name|'vc'
op|'='
string|"'4_vc_ascii'"
newline|'\n'
name|'o'
op|'='
string|"'4_o_non_ascii\\xc2\\xa3'"
newline|'\n'
name|'self'
op|'.'
name|'test_version_manifest'
op|'('
name|'oc'
op|','
name|'vc'
op|','
name|'o'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_version_manifest_utf8_version_container_utf_object
dedent|''
name|'def'
name|'test_version_manifest_utf8_version_container_utf_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oc'
op|'='
string|"'5_oc_ascii'"
newline|'\n'
name|'vc'
op|'='
string|"'5_vc_non_ascii\\xc2\\xa3'"
newline|'\n'
name|'o'
op|'='
string|"'5_o_non_ascii\\xc2\\xa3'"
newline|'\n'
name|'self'
op|'.'
name|'test_version_manifest'
op|'('
name|'oc'
op|','
name|'vc'
op|','
name|'o'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_version_manifest_utf8_container_utf_object
dedent|''
name|'def'
name|'test_version_manifest_utf8_container_utf_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oc'
op|'='
string|"'6_oc_non_ascii\\xc2\\xa3'"
newline|'\n'
name|'vc'
op|'='
string|"'6_vc_ascii'"
newline|'\n'
name|'o'
op|'='
string|"'6_o_non_ascii\\xc2\\xa3'"
newline|'\n'
name|'self'
op|'.'
name|'test_version_manifest'
op|'('
name|'oc'
op|','
name|'vc'
op|','
name|'o'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'setup'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'        '
name|'teardown'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
