begin_unit
comment|'# Copyright (c) 2013 Christian Schwede <christian.schwede@enovance.com>'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'nested'
newline|'\n'
name|'import'
name|'json'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'string'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'urlparse'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'green'
name|'import'
name|'urllib2'
newline|'\n'
name|'from'
name|'six'
name|'import'
name|'StringIO'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'cli'
name|'import'
name|'recon'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
name|'import'
name|'builder'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestHelpers
name|'class'
name|'TestHelpers'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_seconds2timeunit
indent|'    '
name|'def'
name|'test_seconds2timeunit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'seconds2timeunit'
op|'('
number|'10'
op|')'
op|','
op|'('
number|'10'
op|','
string|"'seconds'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'seconds2timeunit'
op|'('
number|'600'
op|')'
op|','
op|'('
number|'10'
op|','
string|"'minutes'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'seconds2timeunit'
op|'('
number|'36000'
op|')'
op|','
op|'('
number|'10'
op|','
string|"'hours'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'seconds2timeunit'
op|'('
number|'60'
op|'*'
number|'60'
op|'*'
number|'24'
op|'*'
number|'10'
op|')'
op|','
nl|'\n'
op|'('
number|'10'
op|','
string|"'days'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_size_suffix
dedent|''
name|'def'
name|'test_size_suffix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'2'
op|')'
op|','
string|"'500 bytes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'3'
op|')'
op|','
string|"'5 kB'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'6'
op|')'
op|','
string|"'5 MB'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'9'
op|')'
op|','
string|"'5 GB'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'12'
op|')'
op|','
string|"'5 TB'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'15'
op|')'
op|','
string|"'5 PB'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'18'
op|')'
op|','
string|"'5 EB'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'21'
op|')'
op|','
string|"'5 ZB'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestScout
dedent|''
dedent|''
name|'class'
name|'TestScout'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|','
op|'*'
name|'_args'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'scout_instance'
op|'='
name|'recon'
op|'.'
name|'Scout'
op|'('
string|'"type"'
op|','
name|'suppress_errors'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'url'
op|'='
string|"'http://127.0.0.1:8080/recon/type'"
newline|'\n'
name|'self'
op|'.'
name|'server_type_url'
op|'='
string|"'http://127.0.0.1:8080/'"
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'eventlet.green.urllib2.urlopen'"
op|')'
newline|'\n'
DECL|member|test_scout_ok
name|'def'
name|'test_scout_ok'
op|'('
name|'self'
op|','
name|'mock_urlopen'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_urlopen'
op|'.'
name|'return_value'
op|'.'
name|'read'
op|'='
name|'lambda'
op|':'
name|'json'
op|'.'
name|'dumps'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'url'
op|','
name|'content'
op|','
name|'status'
op|','
name|'ts_start'
op|','
name|'ts_end'
op|'='
name|'self'
op|'.'
name|'scout_instance'
op|'.'
name|'scout'
op|'('
nl|'\n'
op|'('
string|'"127.0.0.1"'
op|','
string|'"8080"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'url'
op|','
name|'self'
op|'.'
name|'url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'content'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'eventlet.green.urllib2.urlopen'"
op|')'
newline|'\n'
DECL|member|test_scout_url_error
name|'def'
name|'test_scout_url_error'
op|'('
name|'self'
op|','
name|'mock_urlopen'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_urlopen'
op|'.'
name|'side_effect'
op|'='
name|'urllib2'
op|'.'
name|'URLError'
op|'('
string|'""'
op|')'
newline|'\n'
name|'url'
op|','
name|'content'
op|','
name|'status'
op|','
name|'ts_start'
op|','
name|'ts_end'
op|'='
name|'self'
op|'.'
name|'scout_instance'
op|'.'
name|'scout'
op|'('
nl|'\n'
op|'('
string|'"127.0.0.1"'
op|','
string|'"8080"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'content'
op|','
name|'urllib2'
op|'.'
name|'URLError'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'url'
op|','
name|'self'
op|'.'
name|'url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'eventlet.green.urllib2.urlopen'"
op|')'
newline|'\n'
DECL|member|test_scout_http_error
name|'def'
name|'test_scout_http_error'
op|'('
name|'self'
op|','
name|'mock_urlopen'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_urlopen'
op|'.'
name|'side_effect'
op|'='
name|'urllib2'
op|'.'
name|'HTTPError'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'url'
op|','
number|'404'
op|','
string|'"Internal error"'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'url'
op|','
name|'content'
op|','
name|'status'
op|','
name|'ts_start'
op|','
name|'ts_end'
op|'='
name|'self'
op|'.'
name|'scout_instance'
op|'.'
name|'scout'
op|'('
nl|'\n'
op|'('
string|'"127.0.0.1"'
op|','
string|'"8080"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'url'
op|','
name|'self'
op|'.'
name|'url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'content'
op|','
name|'urllib2'
op|'.'
name|'HTTPError'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'eventlet.green.urllib2.urlopen'"
op|')'
newline|'\n'
DECL|member|test_scout_server_type_ok
name|'def'
name|'test_scout_server_type_ok'
op|'('
name|'self'
op|','
name|'mock_urlopen'
op|')'
op|':'
newline|'\n'
DECL|function|getheader
indent|'        '
name|'def'
name|'getheader'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'d'
op|'='
op|'{'
string|"'Server'"
op|':'
string|"'server-type'"
op|'}'
newline|'\n'
name|'return'
name|'d'
op|'.'
name|'get'
op|'('
name|'name'
op|')'
newline|'\n'
dedent|''
name|'mock_urlopen'
op|'.'
name|'return_value'
op|'.'
name|'info'
op|'.'
name|'return_value'
op|'.'
name|'getheader'
op|'='
name|'getheader'
newline|'\n'
name|'url'
op|','
name|'content'
op|','
name|'status'
op|'='
name|'self'
op|'.'
name|'scout_instance'
op|'.'
name|'scout_server_type'
op|'('
nl|'\n'
op|'('
string|'"127.0.0.1"'
op|','
string|'"8080"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'url'
op|','
name|'self'
op|'.'
name|'server_type_url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'content'
op|','
string|"'server-type'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'eventlet.green.urllib2.urlopen'"
op|')'
newline|'\n'
DECL|member|test_scout_server_type_url_error
name|'def'
name|'test_scout_server_type_url_error'
op|'('
name|'self'
op|','
name|'mock_urlopen'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_urlopen'
op|'.'
name|'side_effect'
op|'='
name|'urllib2'
op|'.'
name|'URLError'
op|'('
string|'""'
op|')'
newline|'\n'
name|'url'
op|','
name|'content'
op|','
name|'status'
op|'='
name|'self'
op|'.'
name|'scout_instance'
op|'.'
name|'scout_server_type'
op|'('
nl|'\n'
op|'('
string|'"127.0.0.1"'
op|','
string|'"8080"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'content'
op|','
name|'urllib2'
op|'.'
name|'URLError'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'url'
op|','
name|'self'
op|'.'
name|'server_type_url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'eventlet.green.urllib2.urlopen'"
op|')'
newline|'\n'
DECL|member|test_scout_server_type_http_error
name|'def'
name|'test_scout_server_type_http_error'
op|'('
name|'self'
op|','
name|'mock_urlopen'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_urlopen'
op|'.'
name|'side_effect'
op|'='
name|'urllib2'
op|'.'
name|'HTTPError'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'server_type_url'
op|','
number|'404'
op|','
string|'"Internal error"'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'url'
op|','
name|'content'
op|','
name|'status'
op|'='
name|'self'
op|'.'
name|'scout_instance'
op|'.'
name|'scout_server_type'
op|'('
nl|'\n'
op|'('
string|'"127.0.0.1"'
op|','
string|'"8080"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'url'
op|','
name|'self'
op|'.'
name|'server_type_url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'content'
op|','
name|'urllib2'
op|'.'
name|'HTTPError'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestRecon
dedent|''
dedent|''
name|'class'
name|'TestRecon'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|','
op|'*'
name|'_args'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'recon_instance'
op|'='
name|'recon'
op|'.'
name|'SwiftRecon'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'swift_dir'
op|'='
name|'tempfile'
op|'.'
name|'gettempdir'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ring_name'
op|'='
string|'"test_object_%s"'
op|'%'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'random'
op|'.'
name|'choice'
op|'('
name|'string'
op|'.'
name|'digits'
op|')'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
number|'6'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tmpfile_name'
op|'='
string|'"%s/%s.ring.gz"'
op|'%'
op|'('
name|'self'
op|'.'
name|'swift_dir'
op|','
name|'self'
op|'.'
name|'ring_name'
op|')'
newline|'\n'
nl|'\n'
name|'utils'
op|'.'
name|'HASH_PATH_SUFFIX'
op|'='
string|"'endcap'"
newline|'\n'
name|'utils'
op|'.'
name|'HASH_PATH_PREFIX'
op|'='
string|"'startcap'"
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|','
op|'*'
name|'_args'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'remove'
op|'('
name|'self'
op|'.'
name|'tmpfile_name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_gen_stats
dedent|''
dedent|''
name|'def'
name|'test_gen_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stats'
op|'='
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'_gen_stats'
op|'('
op|'('
number|'1'
op|','
number|'4'
op|','
number|'10'
op|','
name|'None'
op|')'
op|','
string|"'Sample'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'Sample'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'average'"
op|')'
op|','
number|'5.0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'high'"
op|')'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'reported'"
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'low'"
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'total'"
op|')'
op|','
number|'15'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'number_none'"
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'perc_none'"
op|')'
op|','
number|'25.0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ptime
dedent|''
name|'def'
name|'test_ptime'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.localtime'"
op|')'
name|'as'
name|'mock_localtime'
op|':'
newline|'\n'
indent|'            '
name|'mock_localtime'
op|'.'
name|'return_value'
op|'='
name|'time'
op|'.'
name|'struct_time'
op|'('
nl|'\n'
op|'('
number|'2013'
op|','
number|'12'
op|','
number|'17'
op|','
number|'10'
op|','
number|'0'
op|','
number|'0'
op|','
number|'1'
op|','
number|'351'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'timestamp'
op|'='
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'_ptime'
op|'('
number|'1387274400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'timestamp'
op|','
string|'"2013-12-17 10:00:00"'
op|')'
newline|'\n'
name|'mock_localtime'
op|'.'
name|'assert_called_with'
op|'('
number|'1387274400'
op|')'
newline|'\n'
nl|'\n'
name|'timestamp2'
op|'='
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'_ptime'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'timestamp2'
op|','
string|'"2013-12-17 10:00:00"'
op|')'
newline|'\n'
name|'mock_localtime'
op|'.'
name|'assert_called_with'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_devices
dedent|''
dedent|''
name|'def'
name|'test_get_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ringbuilder'
op|'='
name|'builder'
op|'.'
name|'RingBuilder'
op|'('
number|'2'
op|','
number|'3'
op|','
number|'1'
op|')'
newline|'\n'
name|'ringbuilder'
op|'.'
name|'add_dev'
op|'('
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'weight'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'port'"
op|':'
number|'10000'
op|','
nl|'\n'
string|"'device'"
op|':'
string|"'sda1'"
op|','
string|"'region'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'ringbuilder'
op|'.'
name|'add_dev'
op|'('
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'zone'"
op|':'
number|'1'
op|','
string|"'weight'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'port'"
op|':'
number|'10001'
op|','
nl|'\n'
string|"'device'"
op|':'
string|"'sda1'"
op|','
string|"'region'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'ringbuilder'
op|'.'
name|'add_dev'
op|'('
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'weight'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'port'"
op|':'
number|'10002'
op|','
nl|'\n'
string|"'device'"
op|':'
string|"'sda1'"
op|','
string|"'region'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'ringbuilder'
op|'.'
name|'add_dev'
op|'('
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
string|"'zone'"
op|':'
number|'1'
op|','
string|"'weight'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'port'"
op|':'
number|'10003'
op|','
nl|'\n'
string|"'device'"
op|':'
string|"'sda1'"
op|','
string|"'region'"
op|':'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'ringbuilder'
op|'.'
name|'rebalance'
op|'('
op|')'
newline|'\n'
name|'ringbuilder'
op|'.'
name|'get_ring'
op|'('
op|')'
op|'.'
name|'save'
op|'('
name|'self'
op|'.'
name|'tmpfile_name'
op|')'
newline|'\n'
nl|'\n'
name|'ips'
op|'='
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'get_devices'
op|'('
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'swift_dir'
op|','
name|'self'
op|'.'
name|'ring_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'set'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'10000'
op|')'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'10001'
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.1'"
op|','
number|'10002'
op|')'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'10003'
op|')'
op|']'
op|')'
op|','
name|'ips'
op|')'
newline|'\n'
nl|'\n'
name|'ips'
op|'='
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'get_devices'
op|'('
nl|'\n'
number|'0'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'swift_dir'
op|','
name|'self'
op|'.'
name|'ring_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'set'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'10000'
op|')'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'10001'
op|')'
op|']'
op|')'
op|','
name|'ips'
op|')'
newline|'\n'
nl|'\n'
name|'ips'
op|'='
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'get_devices'
op|'('
nl|'\n'
number|'1'
op|','
name|'None'
op|','
name|'self'
op|'.'
name|'swift_dir'
op|','
name|'self'
op|'.'
name|'ring_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'set'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'10002'
op|')'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'10003'
op|')'
op|']'
op|')'
op|','
name|'ips'
op|')'
newline|'\n'
nl|'\n'
name|'ips'
op|'='
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'get_devices'
op|'('
nl|'\n'
number|'0'
op|','
number|'0'
op|','
name|'self'
op|'.'
name|'swift_dir'
op|','
name|'self'
op|'.'
name|'ring_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'10000'
op|')'
op|']'
op|')'
op|','
name|'ips'
op|')'
newline|'\n'
nl|'\n'
name|'ips'
op|'='
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'get_devices'
op|'('
nl|'\n'
number|'1'
op|','
number|'1'
op|','
name|'self'
op|'.'
name|'swift_dir'
op|','
name|'self'
op|'.'
name|'ring_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'10003'
op|')'
op|']'
op|')'
op|','
name|'ips'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_ringmd5
dedent|''
name|'def'
name|'test_get_ringmd5'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'server_type'
name|'in'
op|'('
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|','
string|"'object-1'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'ring_name'
op|'='
string|"'%s.ring.gz'"
op|'%'
name|'server_type'
newline|'\n'
name|'ring_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'swift_dir'
op|','
name|'ring_name'
op|')'
newline|'\n'
name|'open'
op|'('
name|'ring_file'
op|','
string|"'w'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'empty_file_hash'
op|'='
string|"'d41d8cd98f00b204e9800998ecf8427e'"
newline|'\n'
name|'hosts'
op|'='
op|'['
op|'('
string|'"127.0.0.1"'
op|','
string|'"8080"'
op|')'
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.cli.recon.Scout'"
op|')'
name|'as'
name|'mock_scout'
op|':'
newline|'\n'
indent|'            '
name|'scout_instance'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'url'
op|'='
string|"'http://%s:%s/recon/ringmd5'"
op|'%'
name|'hosts'
op|'['
number|'0'
op|']'
newline|'\n'
name|'response'
op|'='
op|'{'
nl|'\n'
string|"'/etc/swift/account.ring.gz'"
op|':'
name|'empty_file_hash'
op|','
nl|'\n'
string|"'/etc/swift/container.ring.gz'"
op|':'
name|'empty_file_hash'
op|','
nl|'\n'
string|"'/etc/swift/object.ring.gz'"
op|':'
name|'empty_file_hash'
op|','
nl|'\n'
string|"'/etc/swift/object-1.ring.gz'"
op|':'
name|'empty_file_hash'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'scout_instance'
op|'.'
name|'scout'
op|'.'
name|'return_value'
op|'='
op|'('
name|'url'
op|','
name|'response'
op|','
name|'status'
op|','
number|'0'
op|','
number|'0'
op|')'
newline|'\n'
name|'mock_scout'
op|'.'
name|'return_value'
op|'='
name|'scout_instance'
newline|'\n'
name|'stdout'
op|'='
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'mock_hash'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'patches'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'sys.stdout'"
op|','
name|'new'
op|'='
name|'stdout'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.cli.recon.md5'"
op|','
name|'new'
op|'='
name|'mock_hash'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'with'
name|'nested'
op|'('
op|'*'
name|'patches'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'mock_hash'
op|'.'
name|'return_value'
op|'.'
name|'hexdigest'
op|'.'
name|'return_value'
op|'='
name|'empty_file_hash'
newline|'\n'
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'get_ringmd5'
op|'('
name|'hosts'
op|','
name|'self'
op|'.'
name|'swift_dir'
op|')'
newline|'\n'
dedent|''
name|'output'
op|'='
name|'stdout'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
string|"'1/1 hosts matched'"
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'output'
op|'.'
name|'splitlines'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
string|"'!!'"
name|'in'
name|'line'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Unexpected Error in output: %r'"
op|'%'
name|'line'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'expected'
name|'in'
name|'line'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Did not find expected substring %r '"
nl|'\n'
string|"'in output:\\n%s'"
op|'%'
op|'('
name|'expected'
op|','
name|'output'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'ring'
name|'in'
op|'('
string|"'account'"
op|','
string|"'container'"
op|','
string|"'object'"
op|','
string|"'object-1'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'remove'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'swift_dir'
op|','
string|'"%s.ring.gz"'
op|'%'
name|'ring'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quarantine_check
dedent|''
dedent|''
name|'def'
name|'test_quarantine_check'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hosts'
op|'='
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'6010'
op|')'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'6020'
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.1'"
op|','
number|'6030'
op|')'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'6040'
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.1'"
op|','
number|'6050'
op|')'
op|']'
newline|'\n'
comment|'# sample json response from http://<host>:<port>/recon/quarantined'
nl|'\n'
name|'responses'
op|'='
op|'{'
number|'6010'
op|':'
op|'{'
string|"'accounts'"
op|':'
number|'0'
op|','
string|"'containers'"
op|':'
number|'0'
op|','
string|"'objects'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'policies'"
op|':'
op|'{'
string|"'0'"
op|':'
op|'{'
string|"'objects'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|"'1'"
op|':'
op|'{'
string|"'objects'"
op|':'
number|'1'
op|'}'
op|'}'
op|'}'
op|','
nl|'\n'
number|'6020'
op|':'
op|'{'
string|"'accounts'"
op|':'
number|'1'
op|','
string|"'containers'"
op|':'
number|'1'
op|','
string|"'objects'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'policies'"
op|':'
op|'{'
string|"'0'"
op|':'
op|'{'
string|"'objects'"
op|':'
number|'1'
op|'}'
op|','
nl|'\n'
string|"'1'"
op|':'
op|'{'
string|"'objects'"
op|':'
number|'2'
op|'}'
op|'}'
op|'}'
op|','
nl|'\n'
number|'6030'
op|':'
op|'{'
string|"'accounts'"
op|':'
number|'2'
op|','
string|"'containers'"
op|':'
number|'2'
op|','
string|"'objects'"
op|':'
number|'5'
op|','
nl|'\n'
string|"'policies'"
op|':'
op|'{'
string|"'0'"
op|':'
op|'{'
string|"'objects'"
op|':'
number|'2'
op|'}'
op|','
nl|'\n'
string|"'1'"
op|':'
op|'{'
string|"'objects'"
op|':'
number|'3'
op|'}'
op|'}'
op|'}'
op|','
nl|'\n'
number|'6040'
op|':'
op|'{'
string|"'accounts'"
op|':'
number|'3'
op|','
string|"'containers'"
op|':'
number|'3'
op|','
string|"'objects'"
op|':'
number|'7'
op|','
nl|'\n'
string|"'policies'"
op|':'
op|'{'
string|"'0'"
op|':'
op|'{'
string|"'objects'"
op|':'
number|'3'
op|'}'
op|','
nl|'\n'
string|"'1'"
op|':'
op|'{'
string|"'objects'"
op|':'
number|'4'
op|'}'
op|'}'
op|'}'
op|','
nl|'\n'
comment|'# A server without storage policies enabled'
nl|'\n'
number|'6050'
op|':'
op|'{'
string|"'accounts'"
op|':'
number|'0'
op|','
string|"'containers'"
op|':'
number|'0'
op|','
string|"'objects'"
op|':'
number|'4'
op|'}'
op|'}'
newline|'\n'
comment|'# <low> <high> <avg> <total> <Failed> <no_result> <reported>'
nl|'\n'
name|'expected'
op|'='
op|'{'
string|"'objects_0'"
op|':'
op|'('
number|'0'
op|','
number|'3'
op|','
number|'1.5'
op|','
number|'6'
op|','
number|'0.0'
op|','
number|'0'
op|','
number|'4'
op|')'
op|','
nl|'\n'
string|"'objects_1'"
op|':'
op|'('
number|'1'
op|','
number|'4'
op|','
number|'2.5'
op|','
number|'10'
op|','
number|'0.0'
op|','
number|'0'
op|','
number|'4'
op|')'
op|','
nl|'\n'
string|"'objects'"
op|':'
op|'('
number|'1'
op|','
number|'7'
op|','
number|'4.0'
op|','
number|'20'
op|','
number|'0.0'
op|','
number|'0'
op|','
number|'5'
op|')'
op|','
nl|'\n'
string|"'accounts'"
op|':'
op|'('
number|'0'
op|','
number|'3'
op|','
number|'1.2'
op|','
number|'6'
op|','
number|'0.0'
op|','
number|'0'
op|','
number|'5'
op|')'
op|','
nl|'\n'
string|"'containers'"
op|':'
op|'('
number|'0'
op|','
number|'3'
op|','
number|'1.2'
op|','
number|'6'
op|','
number|'0.0'
op|','
number|'0'
op|','
number|'5'
op|')'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|mock_scout_quarantine
name|'def'
name|'mock_scout_quarantine'
op|'('
name|'app'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'url'
op|'='
string|"'http://%s:%s/recon/quarantined'"
op|'%'
name|'host'
newline|'\n'
name|'response'
op|'='
name|'responses'
op|'['
name|'host'
op|'['
number|'1'
op|']'
op|']'
newline|'\n'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'return'
name|'url'
op|','
name|'response'
op|','
name|'status'
op|','
number|'0'
op|','
number|'0'
newline|'\n'
nl|'\n'
dedent|''
name|'stdout'
op|'='
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'patches'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.cli.recon.Scout.scout'"
op|','
name|'mock_scout_quarantine'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'sys.stdout'"
op|','
name|'new'
op|'='
name|'stdout'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'with'
name|'nested'
op|'('
op|'*'
name|'patches'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'quarantine_check'
op|'('
name|'hosts'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'output'
op|'='
name|'stdout'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
name|'r'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"\\[quarantined_(.*)\\](.*)"'
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'output'
op|'.'
name|'splitlines'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'r'
op|'.'
name|'match'
op|'('
name|'line'
op|')'
newline|'\n'
name|'if'
name|'m'
op|':'
newline|'\n'
indent|'                '
name|'ex'
op|'='
name|'expected'
op|'.'
name|'pop'
op|'('
name|'m'
op|'.'
name|'group'
op|'('
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'m'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
op|','
nl|'\n'
string|'" low: %s, high: %s, avg: %s, total: %s,"'
nl|'\n'
string|'" Failed: %s%%, no_result: %s, reported: %s"'
nl|'\n'
op|'%'
name|'ex'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_drive_audit_check
dedent|''
name|'def'
name|'test_drive_audit_check'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hosts'
op|'='
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'6010'
op|')'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'6020'
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.1'"
op|','
number|'6030'
op|')'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'6040'
op|')'
op|']'
newline|'\n'
comment|'# sample json response from http://<host>:<port>/recon/driveaudit'
nl|'\n'
name|'responses'
op|'='
op|'{'
number|'6010'
op|':'
op|'{'
string|"'drive_audit_errors'"
op|':'
number|'15'
op|'}'
op|','
nl|'\n'
number|'6020'
op|':'
op|'{'
string|"'drive_audit_errors'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
number|'6030'
op|':'
op|'{'
string|"'drive_audit_errors'"
op|':'
number|'257'
op|'}'
op|','
nl|'\n'
number|'6040'
op|':'
op|'{'
string|"'drive_audit_errors'"
op|':'
number|'56'
op|'}'
op|'}'
newline|'\n'
comment|'# <low> <high> <avg> <total> <Failed> <no_result> <reported>'
nl|'\n'
name|'expected'
op|'='
op|'('
number|'0'
op|','
number|'257'
op|','
number|'82.0'
op|','
number|'328'
op|','
number|'0.0'
op|','
number|'0'
op|','
number|'4'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_scout_driveaudit
name|'def'
name|'mock_scout_driveaudit'
op|'('
name|'app'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'url'
op|'='
string|"'http://%s:%s/recon/driveaudit'"
op|'%'
name|'host'
newline|'\n'
name|'response'
op|'='
name|'responses'
op|'['
name|'host'
op|'['
number|'1'
op|']'
op|']'
newline|'\n'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'return'
name|'url'
op|','
name|'response'
op|','
name|'status'
op|','
number|'0'
op|','
number|'0'
newline|'\n'
nl|'\n'
dedent|''
name|'stdout'
op|'='
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'patches'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.cli.recon.Scout.scout'"
op|','
name|'mock_scout_driveaudit'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'sys.stdout'"
op|','
name|'new'
op|'='
name|'stdout'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'with'
name|'nested'
op|'('
op|'*'
name|'patches'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'driveaudit_check'
op|'('
name|'hosts'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'output'
op|'='
name|'stdout'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
name|'r'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
string|'"\\[drive_audit_errors(.*)\\](.*)"'
op|')'
newline|'\n'
name|'lines'
op|'='
name|'output'
op|'.'
name|'splitlines'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'lines'
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'lines'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'='
name|'r'
op|'.'
name|'match'
op|'('
name|'line'
op|')'
newline|'\n'
name|'if'
name|'m'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'m'
op|'.'
name|'group'
op|'('
number|'2'
op|')'
op|','
nl|'\n'
string|'" low: %s, high: %s, avg: %s, total: %s,"'
nl|'\n'
string|'" Failed: %s%%, no_result: %s, reported: %s"'
nl|'\n'
op|'%'
name|'expected'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestReconCommands
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestReconCommands'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'recon'
op|'='
name|'recon'
op|'.'
name|'SwiftRecon'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'hosts'
op|'='
name|'set'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'10000'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|mock_responses
dedent|''
name|'def'
name|'mock_responses'
op|'('
name|'self'
op|','
name|'resps'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_urlopen
indent|'        '
name|'def'
name|'fake_urlopen'
op|'('
name|'url'
op|','
name|'timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'scheme'
op|','
name|'netloc'
op|','
name|'path'
op|','
name|'_'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'urlparse'
op|'.'
name|'urlparse'
op|'('
name|'url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'scheme'
op|','
string|"'http'"
op|')'
comment|"# can't handle anything else"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'path'
op|'.'
name|'startswith'
op|'('
string|"'/recon/'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|"':'"
name|'in'
name|'netloc'
op|':'
newline|'\n'
indent|'                '
name|'host'
op|','
name|'port'
op|'='
name|'netloc'
op|'.'
name|'split'
op|'('
string|"':'"
op|','
number|'1'
op|')'
newline|'\n'
name|'port'
op|'='
name|'int'
op|'('
name|'port'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'host'
op|'='
name|'netloc'
newline|'\n'
name|'port'
op|'='
number|'80'
newline|'\n'
nl|'\n'
dedent|''
name|'response_body'
op|'='
name|'resps'
op|'['
op|'('
name|'host'
op|','
name|'port'
op|','
name|'path'
op|'['
number|'7'
op|':'
op|']'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'side_effect'
op|'='
op|'['
name|'response_body'
op|']'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'eventlet.green.urllib2.urlopen'"
op|','
name|'fake_urlopen'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_type_check
dedent|''
name|'def'
name|'test_server_type_check'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hosts'
op|'='
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'6010'
op|')'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'6011'
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.1'"
op|','
number|'6012'
op|')'
op|']'
newline|'\n'
nl|'\n'
comment|'# sample json response from http://<host>:<port>/'
nl|'\n'
name|'responses'
op|'='
op|'{'
number|'6010'
op|':'
string|"'object-server'"
op|','
number|'6011'
op|':'
string|"'container-server'"
op|','
nl|'\n'
number|'6012'
op|':'
string|"'account-server'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|mock_scout_server_type
name|'def'
name|'mock_scout_server_type'
op|'('
name|'app'
op|','
name|'host'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'url'
op|'='
string|"'http://%s:%s/'"
op|'%'
op|'('
name|'host'
op|'['
number|'0'
op|']'
op|','
name|'host'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'response'
op|'='
name|'responses'
op|'['
name|'host'
op|'['
number|'1'
op|']'
op|']'
newline|'\n'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'return'
name|'url'
op|','
name|'response'
op|','
name|'status'
newline|'\n'
nl|'\n'
dedent|''
name|'stdout'
op|'='
name|'StringIO'
op|'('
op|')'
newline|'\n'
name|'patches'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.cli.recon.Scout.scout_server_type'"
op|','
nl|'\n'
name|'mock_scout_server_type'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'sys.stdout'"
op|','
name|'new'
op|'='
name|'stdout'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'res_object'
op|'='
string|"'Invalid: http://127.0.0.1:6010/ is object-server'"
newline|'\n'
name|'res_container'
op|'='
string|"'Invalid: http://127.0.0.1:6011/ is container-server'"
newline|'\n'
name|'res_account'
op|'='
string|"'Invalid: http://127.0.0.1:6012/ is account-server'"
newline|'\n'
name|'valid'
op|'='
string|'"1/1 hosts ok, 0 error[s] while checking hosts."'
newline|'\n'
nl|'\n'
comment|'# Test for object server type - default'
nl|'\n'
name|'with'
name|'nested'
op|'('
op|'*'
name|'patches'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'recon'
op|'.'
name|'server_type_check'
op|'('
name|'hosts'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'output'
op|'='
name|'stdout'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res_container'
name|'in'
name|'output'
op|'.'
name|'splitlines'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res_account'
name|'in'
name|'output'
op|'.'
name|'splitlines'
op|'('
op|')'
op|')'
newline|'\n'
name|'stdout'
op|'.'
name|'truncate'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test ok for object server type - default'
nl|'\n'
name|'with'
name|'nested'
op|'('
op|'*'
name|'patches'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'recon'
op|'.'
name|'server_type_check'
op|'('
op|'['
name|'hosts'
op|'['
number|'0'
op|']'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'output'
op|'='
name|'stdout'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'valid'
name|'in'
name|'output'
op|'.'
name|'splitlines'
op|'('
op|')'
op|')'
newline|'\n'
name|'stdout'
op|'.'
name|'truncate'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test for account server type'
nl|'\n'
name|'with'
name|'nested'
op|'('
op|'*'
name|'patches'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'recon'
op|'.'
name|'server_type'
op|'='
string|"'account'"
newline|'\n'
name|'self'
op|'.'
name|'recon'
op|'.'
name|'server_type_check'
op|'('
name|'hosts'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'output'
op|'='
name|'stdout'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res_container'
name|'in'
name|'output'
op|'.'
name|'splitlines'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res_object'
name|'in'
name|'output'
op|'.'
name|'splitlines'
op|'('
op|')'
op|')'
newline|'\n'
name|'stdout'
op|'.'
name|'truncate'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test ok for account server type'
nl|'\n'
name|'with'
name|'nested'
op|'('
op|'*'
name|'patches'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'recon'
op|'.'
name|'server_type'
op|'='
string|"'account'"
newline|'\n'
name|'self'
op|'.'
name|'recon'
op|'.'
name|'server_type_check'
op|'('
op|'['
name|'hosts'
op|'['
number|'2'
op|']'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'output'
op|'='
name|'stdout'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'valid'
name|'in'
name|'output'
op|'.'
name|'splitlines'
op|'('
op|')'
op|')'
newline|'\n'
name|'stdout'
op|'.'
name|'truncate'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test for container server type'
nl|'\n'
name|'with'
name|'nested'
op|'('
op|'*'
name|'patches'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'recon'
op|'.'
name|'server_type'
op|'='
string|"'container'"
newline|'\n'
name|'self'
op|'.'
name|'recon'
op|'.'
name|'server_type_check'
op|'('
name|'hosts'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'output'
op|'='
name|'stdout'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res_account'
name|'in'
name|'output'
op|'.'
name|'splitlines'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'res_object'
name|'in'
name|'output'
op|'.'
name|'splitlines'
op|'('
op|')'
op|')'
newline|'\n'
name|'stdout'
op|'.'
name|'truncate'
op|'('
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# Test ok for container server type'
nl|'\n'
name|'with'
name|'nested'
op|'('
op|'*'
name|'patches'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'recon'
op|'.'
name|'server_type'
op|'='
string|"'container'"
newline|'\n'
name|'self'
op|'.'
name|'recon'
op|'.'
name|'server_type_check'
op|'('
op|'['
name|'hosts'
op|'['
number|'1'
op|']'
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'output'
op|'='
name|'stdout'
op|'.'
name|'getvalue'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'valid'
name|'in'
name|'output'
op|'.'
name|'splitlines'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_swiftconfmd5
dedent|''
name|'def'
name|'test_get_swiftconfmd5'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hosts'
op|'='
name|'set'
op|'('
op|'['
op|'('
string|"'10.1.1.1'"
op|','
number|'10000'
op|')'
op|','
nl|'\n'
op|'('
string|"'10.2.2.2'"
op|','
number|'10000'
op|')'
op|']'
op|')'
newline|'\n'
name|'cksum'
op|'='
string|"'729cf900f2876dead617d088ece7fe8c'"
newline|'\n'
nl|'\n'
name|'responses'
op|'='
op|'{'
nl|'\n'
op|'('
string|"'10.1.1.1'"
op|','
number|'10000'
op|','
string|"'swiftconfmd5'"
op|')'
op|':'
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
op|'{'
string|"'/etc/swift/swift.conf'"
op|':'
name|'cksum'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|"'10.2.2.2'"
op|','
number|'10000'
op|','
string|"'swiftconfmd5'"
op|')'
op|':'
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
op|'{'
string|"'/etc/swift/swift.conf'"
op|':'
name|'cksum'
op|'}'
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'printed'
op|'='
op|'['
op|']'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'mock_responses'
op|'('
name|'responses'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'recon'
op|','
string|"'_md5_file'"
op|','
name|'lambda'
name|'_'
op|':'
name|'cksum'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'recon'
op|'.'
name|'get_swiftconfmd5'
op|'('
name|'hosts'
op|','
name|'printfn'
op|'='
name|'printed'
op|'.'
name|'append'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'output'
op|'='
string|"'\\n'"
op|'.'
name|'join'
op|'('
name|'printed'
op|')'
op|'+'
string|"'\\n'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|'"2/2 hosts matched"'
name|'in'
name|'output'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_swiftconfmd5_mismatch
dedent|''
name|'def'
name|'test_get_swiftconfmd5_mismatch'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hosts'
op|'='
name|'set'
op|'('
op|'['
op|'('
string|"'10.1.1.1'"
op|','
number|'10000'
op|')'
op|','
nl|'\n'
op|'('
string|"'10.2.2.2'"
op|','
number|'10000'
op|')'
op|']'
op|')'
newline|'\n'
name|'cksum'
op|'='
string|"'29d5912b1fcfcc1066a7f51412769c1d'"
newline|'\n'
nl|'\n'
name|'responses'
op|'='
op|'{'
nl|'\n'
op|'('
string|"'10.1.1.1'"
op|','
number|'10000'
op|','
string|"'swiftconfmd5'"
op|')'
op|':'
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
op|'{'
string|"'/etc/swift/swift.conf'"
op|':'
name|'cksum'
op|'}'
op|')'
op|','
nl|'\n'
op|'('
string|"'10.2.2.2'"
op|','
number|'10000'
op|','
string|"'swiftconfmd5'"
op|')'
op|':'
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
op|'{'
string|"'/etc/swift/swift.conf'"
op|':'
string|"'bogus'"
op|'}'
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'printed'
op|'='
op|'['
op|']'
newline|'\n'
name|'with'
name|'self'
op|'.'
name|'mock_responses'
op|'('
name|'responses'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'self'
op|'.'
name|'recon'
op|','
string|"'_md5_file'"
op|','
name|'lambda'
name|'_'
op|':'
name|'cksum'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'recon'
op|'.'
name|'get_swiftconfmd5'
op|'('
name|'hosts'
op|','
name|'printfn'
op|'='
name|'printed'
op|'.'
name|'append'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'output'
op|'='
string|"'\\n'"
op|'.'
name|'join'
op|'('
name|'printed'
op|')'
op|'+'
string|"'\\n'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|'"1/2 hosts matched"'
name|'in'
name|'output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|'"http://10.2.2.2:10000/recon/swiftconfmd5 (bogus) "'
nl|'\n'
string|'"doesn\'t match on disk md5sum"'
name|'in'
name|'output'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_auditor_check
dedent|''
name|'def'
name|'test_object_auditor_check'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Recon middleware response from an object server'
nl|'\n'
DECL|function|dummy_request
indent|'        '
name|'def'
name|'dummy_request'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'values'
op|'='
op|'{'
nl|'\n'
string|"'passes'"
op|':'
number|'0'
op|','
string|"'errors'"
op|':'
number|'0'
op|','
string|"'audit_time'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'start_time'"
op|':'
number|'0'
op|','
string|"'quarantined'"
op|':'
number|'0'
op|','
string|"'bytes_processed'"
op|':'
number|'0'
op|'}'
newline|'\n'
nl|'\n'
name|'return'
op|'['
op|'('
string|"'http://127.0.0.1:6010/recon/auditor/object'"
op|','
op|'{'
nl|'\n'
string|"'object_auditor_stats_ALL'"
op|':'
name|'values'
op|','
nl|'\n'
string|"'object_auditor_stats_ZBF'"
op|':'
name|'values'
op|','
nl|'\n'
op|'}'
op|','
number|'200'
op|','
number|'0'
op|','
number|'0'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'response'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
DECL|function|catch_print
name|'def'
name|'catch_print'
op|'('
name|'computed'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'['
name|'computed'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|']'
op|'='
name|'computed'
newline|'\n'
nl|'\n'
dedent|''
name|'cli'
op|'='
name|'recon'
op|'.'
name|'SwiftRecon'
op|'('
op|')'
newline|'\n'
name|'cli'
op|'.'
name|'pool'
op|'.'
name|'imap'
op|'='
name|'dummy_request'
newline|'\n'
name|'cli'
op|'.'
name|'_print_stats'
op|'='
name|'catch_print'
newline|'\n'
nl|'\n'
name|'cli'
op|'.'
name|'object_auditor_check'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'6010'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Now check that output contains all keys and names'
nl|'\n'
name|'keys'
op|'='
op|'['
string|"'average'"
op|','
string|"'number_none'"
op|','
string|"'high'"
op|','
nl|'\n'
string|"'reported'"
op|','
string|"'low'"
op|','
string|"'total'"
op|','
string|"'perc_none'"
op|']'
newline|'\n'
nl|'\n'
name|'names'
op|'='
op|'['
nl|'\n'
string|"'ALL_audit_time_last_path'"
op|','
nl|'\n'
string|"'ALL_quarantined_last_path'"
op|','
nl|'\n'
string|"'ALL_errors_last_path'"
op|','
nl|'\n'
string|"'ALL_passes_last_path'"
op|','
nl|'\n'
string|"'ALL_bytes_processed_last_path'"
op|','
nl|'\n'
string|"'ZBF_audit_time_last_path'"
op|','
nl|'\n'
string|"'ZBF_quarantined_last_path'"
op|','
nl|'\n'
string|"'ZBF_errors_last_path'"
op|','
nl|'\n'
string|"'ZBF_bytes_processed_last_path'"
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'name'
name|'in'
name|'names'
op|':'
newline|'\n'
indent|'            '
name|'computed'
op|'='
name|'response'
op|'.'
name|'get'
op|'('
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'computed'
op|')'
newline|'\n'
name|'for'
name|'key'
name|'in'
name|'keys'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'key'
name|'in'
name|'computed'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_disk_usage
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_disk_usage'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|dummy_request
indent|'        '
name|'def'
name|'dummy_request'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
op|'('
string|"'http://127.0.0.1:6010/recon/diskusage'"
op|','
op|'['
nl|'\n'
op|'{'
string|'"device"'
op|':'
string|'"sdb1"'
op|','
string|'"mounted"'
op|':'
name|'True'
op|','
nl|'\n'
string|'"avail"'
op|':'
number|'10'
op|','
string|'"used"'
op|':'
number|'90'
op|','
string|'"size"'
op|':'
number|'100'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"device"'
op|':'
string|'"sdc1"'
op|','
string|'"mounted"'
op|':'
name|'True'
op|','
nl|'\n'
string|'"avail"'
op|':'
number|'15'
op|','
string|'"used"'
op|':'
number|'85'
op|','
string|'"size"'
op|':'
number|'100'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"device"'
op|':'
string|'"sdd1"'
op|','
string|'"mounted"'
op|':'
name|'True'
op|','
nl|'\n'
string|'"avail"'
op|':'
number|'15'
op|','
string|'"used"'
op|':'
number|'85'
op|','
string|'"size"'
op|':'
number|'100'
op|'}'
op|']'
op|','
nl|'\n'
number|'200'
op|','
nl|'\n'
number|'0'
op|','
nl|'\n'
number|'0'
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'cli'
op|'='
name|'recon'
op|'.'
name|'SwiftRecon'
op|'('
op|')'
newline|'\n'
name|'cli'
op|'.'
name|'pool'
op|'.'
name|'imap'
op|'='
name|'dummy_request'
newline|'\n'
nl|'\n'
name|'default_calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'Distribution Graph:'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"' 85%    2 **********************************'"
op|'+'
nl|'\n'
string|"'***********************************'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"' 90%    1 **********************************'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'Disk usage: space used: 260 of 300'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'Disk usage: space free: 40 of 300'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'Disk usage: lowest: 85.0%, '"
op|'+'
nl|'\n'
string|"'highest: 90.0%, avg: 86.6666666667%'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'='"
op|'*'
number|'79'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'__builtin__.print'"
op|')'
name|'as'
name|'mock_print'
op|':'
newline|'\n'
indent|'            '
name|'cli'
op|'.'
name|'disk_usage'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'6010'
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_print'
op|'.'
name|'assert_has_calls'
op|'('
name|'default_calls'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'__builtin__.print'"
op|')'
name|'as'
name|'mock_print'
op|':'
newline|'\n'
indent|'            '
name|'expected_calls'
op|'='
name|'default_calls'
op|'+'
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'LOWEST 5'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'85.00%  127.0.0.1       sdc1'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'85.00%  127.0.0.1       sdd1'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'90.00%  127.0.0.1       sdb1'"
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'cli'
op|'.'
name|'disk_usage'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'6010'
op|')'
op|']'
op|','
number|'0'
op|','
number|'5'
op|')'
newline|'\n'
name|'mock_print'
op|'.'
name|'assert_has_calls'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'__builtin__.print'"
op|')'
name|'as'
name|'mock_print'
op|':'
newline|'\n'
indent|'            '
name|'expected_calls'
op|'='
name|'default_calls'
op|'+'
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'TOP 5'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'90.00%  127.0.0.1       sdb1'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'85.00%  127.0.0.1       sdc1'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'85.00%  127.0.0.1       sdd1'"
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'cli'
op|'.'
name|'disk_usage'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'6010'
op|')'
op|']'
op|','
number|'5'
op|','
number|'0'
op|')'
newline|'\n'
name|'mock_print'
op|'.'
name|'assert_has_calls'
op|'('
name|'expected_calls'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'__builtin__.print'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.time'"
op|')'
newline|'\n'
DECL|member|test_object_replication_check
name|'def'
name|'test_object_replication_check'
op|'('
name|'self'
op|','
name|'mock_now'
op|','
name|'mock_print'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'now'
op|'='
number|'1430000000.0'
newline|'\n'
nl|'\n'
DECL|function|dummy_request
name|'def'
name|'dummy_request'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
nl|'\n'
op|'('
string|"'http://127.0.0.1:6010/recon/replication/object'"
op|','
nl|'\n'
op|'{'
string|'"object_replication_time"'
op|':'
number|'61'
op|','
nl|'\n'
string|'"object_replication_last"'
op|':'
name|'now'
op|'}'
op|','
nl|'\n'
number|'200'
op|','
nl|'\n'
number|'0'
op|','
nl|'\n'
number|'0'
op|')'
op|','
nl|'\n'
op|'('
string|"'http://127.0.0.1:6020/recon/replication/object'"
op|','
nl|'\n'
op|'{'
string|'"object_replication_time"'
op|':'
number|'23'
op|','
nl|'\n'
string|'"object_replication_last"'
op|':'
name|'now'
op|'}'
op|','
nl|'\n'
number|'200'
op|','
nl|'\n'
number|'0'
op|','
nl|'\n'
number|'0'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'cli'
op|'='
name|'recon'
op|'.'
name|'SwiftRecon'
op|'('
op|')'
newline|'\n'
name|'cli'
op|'.'
name|'pool'
op|'.'
name|'imap'
op|'='
name|'dummy_request'
newline|'\n'
nl|'\n'
name|'default_calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'[replication_time] low: 23, high: 61, avg: 42.0, '"
op|'+'
nl|'\n'
string|"'total: 84, Failed: 0.0%, no_result: 0, reported: 2'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'Oldest completion was 2015-04-25 22:13:20 '"
op|'+'
nl|'\n'
string|"'(42 seconds ago) by 127.0.0.1:6010.'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'Most recent completion was 2015-04-25 22:13:20 '"
op|'+'
nl|'\n'
string|"'(42 seconds ago) by 127.0.0.1:6010.'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'mock_now'
op|'.'
name|'return_value'
op|'='
name|'now'
op|'+'
number|'42'
newline|'\n'
name|'cli'
op|'.'
name|'object_replication_check'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'6010'
op|')'
op|','
nl|'\n'
op|'('
string|"'127.0.0.1'"
op|','
number|'6020'
op|')'
op|']'
op|')'
newline|'\n'
name|'mock_print'
op|'.'
name|'assert_has_calls'
op|'('
name|'default_calls'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'__builtin__.print'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.time'"
op|')'
newline|'\n'
DECL|member|test_replication_check
name|'def'
name|'test_replication_check'
op|'('
name|'self'
op|','
name|'mock_now'
op|','
name|'mock_print'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'now'
op|'='
number|'1430000000.0'
newline|'\n'
nl|'\n'
DECL|function|dummy_request
name|'def'
name|'dummy_request'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
nl|'\n'
op|'('
string|"'http://127.0.0.1:6011/recon/replication/container'"
op|','
nl|'\n'
op|'{'
string|'"replication_last"'
op|':'
name|'now'
op|','
nl|'\n'
string|'"replication_stats"'
op|':'
op|'{'
nl|'\n'
string|'"no_change"'
op|':'
number|'2'
op|','
string|'"rsync"'
op|':'
number|'0'
op|','
string|'"success"'
op|':'
number|'3'
op|','
string|'"failure"'
op|':'
number|'1'
op|','
nl|'\n'
string|'"attempted"'
op|':'
number|'0'
op|','
string|'"ts_repl"'
op|':'
number|'0'
op|','
string|'"remove"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"remote_merge"'
op|':'
number|'0'
op|','
string|'"diff_capped"'
op|':'
number|'0'
op|','
string|'"start"'
op|':'
name|'now'
op|','
nl|'\n'
string|'"hashmatch"'
op|':'
number|'0'
op|','
string|'"diff"'
op|':'
number|'0'
op|','
string|'"empty"'
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|'"replication_time"'
op|':'
number|'42'
op|'}'
op|','
nl|'\n'
number|'200'
op|','
nl|'\n'
number|'0'
op|','
nl|'\n'
number|'0'
op|')'
op|','
nl|'\n'
op|'('
string|"'http://127.0.0.1:6021/recon/replication/container'"
op|','
nl|'\n'
op|'{'
string|'"replication_last"'
op|':'
name|'now'
op|','
nl|'\n'
string|'"replication_stats"'
op|':'
op|'{'
nl|'\n'
string|'"no_change"'
op|':'
number|'0'
op|','
string|'"rsync"'
op|':'
number|'0'
op|','
string|'"success"'
op|':'
number|'1'
op|','
string|'"failure"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"attempted"'
op|':'
number|'0'
op|','
string|'"ts_repl"'
op|':'
number|'0'
op|','
string|'"remove"'
op|':'
number|'0'
op|','
nl|'\n'
string|'"remote_merge"'
op|':'
number|'0'
op|','
string|'"diff_capped"'
op|':'
number|'0'
op|','
string|'"start"'
op|':'
name|'now'
op|','
nl|'\n'
string|'"hashmatch"'
op|':'
number|'0'
op|','
string|'"diff"'
op|':'
number|'0'
op|','
string|'"empty"'
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|'"replication_time"'
op|':'
number|'23'
op|'}'
op|','
nl|'\n'
number|'200'
op|','
nl|'\n'
number|'0'
op|','
nl|'\n'
number|'0'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'cli'
op|'='
name|'recon'
op|'.'
name|'SwiftRecon'
op|'('
op|')'
newline|'\n'
name|'cli'
op|'.'
name|'pool'
op|'.'
name|'imap'
op|'='
name|'dummy_request'
newline|'\n'
nl|'\n'
name|'default_calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'[replication_failure] low: 0, high: 1, avg: 0.5, '"
op|'+'
nl|'\n'
string|"'total: 1, Failed: 0.0%, no_result: 0, reported: 2'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'[replication_success] low: 1, high: 3, avg: 2.0, '"
op|'+'
nl|'\n'
string|"'total: 4, Failed: 0.0%, no_result: 0, reported: 2'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'[replication_time] low: 23, high: 42, avg: 32.5, '"
op|'+'
nl|'\n'
string|"'total: 65, Failed: 0.0%, no_result: 0, reported: 2'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'[replication_attempted] low: 0, high: 0, avg: 0.0, '"
op|'+'
nl|'\n'
string|"'total: 0, Failed: 0.0%, no_result: 0, reported: 2'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'Oldest completion was 2015-04-25 22:13:20 '"
op|'+'
nl|'\n'
string|"'(42 seconds ago) by 127.0.0.1:6011.'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'Most recent completion was 2015-04-25 22:13:20 '"
op|'+'
nl|'\n'
string|"'(42 seconds ago) by 127.0.0.1:6011.'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'mock_now'
op|'.'
name|'return_value'
op|'='
name|'now'
op|'+'
number|'42'
newline|'\n'
name|'cli'
op|'.'
name|'replication_check'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'6011'
op|')'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'6021'
op|')'
op|']'
op|')'
newline|'\n'
comment|'# We need any_order=True because the order of calls depends on the dict'
nl|'\n'
comment|"# that is returned from the recon middleware, thus can't rely on it"
nl|'\n'
name|'mock_print'
op|'.'
name|'assert_has_calls'
op|'('
name|'default_calls'
op|','
name|'any_order'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'__builtin__.print'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.time'"
op|')'
newline|'\n'
DECL|member|test_load_check
name|'def'
name|'test_load_check'
op|'('
name|'self'
op|','
name|'mock_now'
op|','
name|'mock_print'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'now'
op|'='
number|'1430000000.0'
newline|'\n'
nl|'\n'
DECL|function|dummy_request
name|'def'
name|'dummy_request'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
nl|'\n'
op|'('
string|"'http://127.0.0.1:6010/recon/load'"
op|','
nl|'\n'
op|'{'
string|'"1m"'
op|':'
number|'0.2'
op|','
string|'"5m"'
op|':'
number|'0.4'
op|','
string|'"15m"'
op|':'
number|'0.25'
op|','
nl|'\n'
string|'"processes"'
op|':'
number|'10000'
op|','
string|'"tasks"'
op|':'
string|'"1/128"'
op|'}'
op|','
nl|'\n'
number|'200'
op|','
nl|'\n'
number|'0'
op|','
nl|'\n'
number|'0'
op|')'
op|','
nl|'\n'
op|'('
string|"'http://127.0.0.1:6020/recon/load'"
op|','
nl|'\n'
op|'{'
string|'"1m"'
op|':'
number|'0.4'
op|','
string|'"5m"'
op|':'
number|'0.8'
op|','
string|'"15m"'
op|':'
number|'0.75'
op|','
nl|'\n'
string|'"processes"'
op|':'
number|'9000'
op|','
string|'"tasks"'
op|':'
string|'"1/200"'
op|'}'
op|','
nl|'\n'
number|'200'
op|','
nl|'\n'
number|'0'
op|','
nl|'\n'
number|'0'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'cli'
op|'='
name|'recon'
op|'.'
name|'SwiftRecon'
op|'('
op|')'
newline|'\n'
name|'cli'
op|'.'
name|'pool'
op|'.'
name|'imap'
op|'='
name|'dummy_request'
newline|'\n'
nl|'\n'
name|'default_calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'[5m_load_avg] low: 0, high: 0, avg: 0.6, total: 1, '"
op|'+'
nl|'\n'
string|"'Failed: 0.0%, no_result: 0, reported: 2'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'[15m_load_avg] low: 0, high: 0, avg: 0.5, total: 1, '"
op|'+'
nl|'\n'
string|"'Failed: 0.0%, no_result: 0, reported: 2'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'[1m_load_avg] low: 0, high: 0, avg: 0.3, total: 0, '"
op|'+'
nl|'\n'
string|"'Failed: 0.0%, no_result: 0, reported: 2'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'mock_now'
op|'.'
name|'return_value'
op|'='
name|'now'
op|'+'
number|'42'
newline|'\n'
name|'cli'
op|'.'
name|'load_check'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'6010'
op|')'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'6020'
op|')'
op|']'
op|')'
newline|'\n'
comment|'# We need any_order=True because the order of calls depends on the dict'
nl|'\n'
comment|"# that is returned from the recon middleware, thus can't rely on it"
nl|'\n'
name|'mock_print'
op|'.'
name|'assert_has_calls'
op|'('
name|'default_calls'
op|','
name|'any_order'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'__builtin__.print'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.time'"
op|')'
newline|'\n'
DECL|member|test_time_check
name|'def'
name|'test_time_check'
op|'('
name|'self'
op|','
name|'mock_now'
op|','
name|'mock_print'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'now'
op|'='
number|'1430000000.0'
newline|'\n'
name|'mock_now'
op|'.'
name|'return_value'
op|'='
name|'now'
newline|'\n'
nl|'\n'
DECL|function|dummy_request
name|'def'
name|'dummy_request'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
nl|'\n'
op|'('
string|"'http://127.0.0.1:6010/recon/load'"
op|','
nl|'\n'
name|'now'
op|','
nl|'\n'
number|'200'
op|','
nl|'\n'
name|'now'
op|'-'
number|'0.5'
op|','
nl|'\n'
name|'now'
op|'+'
number|'0.5'
op|')'
op|','
nl|'\n'
op|'('
string|"'http://127.0.0.1:6020/recon/load'"
op|','
nl|'\n'
name|'now'
op|','
nl|'\n'
number|'200'
op|','
nl|'\n'
name|'now'
op|','
nl|'\n'
name|'now'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'cli'
op|'='
name|'recon'
op|'.'
name|'SwiftRecon'
op|'('
op|')'
newline|'\n'
name|'cli'
op|'.'
name|'pool'
op|'.'
name|'imap'
op|'='
name|'dummy_request'
newline|'\n'
nl|'\n'
name|'default_calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'2/2 hosts matched, 0 error[s] while checking hosts.'"
op|')'
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'cli'
op|'.'
name|'time_check'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'6010'
op|')'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'6020'
op|')'
op|']'
op|')'
newline|'\n'
comment|'# We need any_order=True because the order of calls depends on the dict'
nl|'\n'
comment|"# that is returned from the recon middleware, thus can't rely on it"
nl|'\n'
name|'mock_print'
op|'.'
name|'assert_has_calls'
op|'('
name|'default_calls'
op|','
name|'any_order'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'__builtin__.print'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.time'"
op|')'
newline|'\n'
DECL|member|test_time_check_mismatch
name|'def'
name|'test_time_check_mismatch'
op|'('
name|'self'
op|','
name|'mock_now'
op|','
name|'mock_print'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'now'
op|'='
number|'1430000000.0'
newline|'\n'
name|'mock_now'
op|'.'
name|'return_value'
op|'='
name|'now'
newline|'\n'
nl|'\n'
DECL|function|dummy_request
name|'def'
name|'dummy_request'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
nl|'\n'
op|'('
string|"'http://127.0.0.1:6010/recon/time'"
op|','
nl|'\n'
name|'now'
op|','
nl|'\n'
number|'200'
op|','
nl|'\n'
name|'now'
op|'+'
number|'0.5'
op|','
nl|'\n'
name|'now'
op|'+'
number|'1.3'
op|')'
op|','
nl|'\n'
op|'('
string|"'http://127.0.0.1:6020/recon/time'"
op|','
nl|'\n'
name|'now'
op|','
nl|'\n'
number|'200'
op|','
nl|'\n'
name|'now'
op|','
nl|'\n'
name|'now'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'cli'
op|'='
name|'recon'
op|'.'
name|'SwiftRecon'
op|'('
op|')'
newline|'\n'
name|'cli'
op|'.'
name|'pool'
op|'.'
name|'imap'
op|'='
name|'dummy_request'
newline|'\n'
nl|'\n'
name|'default_calls'
op|'='
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|'"!! http://127.0.0.1:6010/recon/time current time is "'
nl|'\n'
string|'"2015-04-25 22:13:21, but remote is "'
nl|'\n'
string|'"2015-04-25 22:13:20, differs by 1.30 sec"'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'1/2 hosts matched, 0 error[s] while checking hosts.'"
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
DECL|function|mock_localtime
name|'def'
name|'mock_localtime'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'time'
op|'.'
name|'gmtime'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|'"time.localtime"'
op|','
name|'mock_localtime'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cli'
op|'.'
name|'time_check'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'6010'
op|')'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'6020'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# We need any_order=True because the order of calls depends on the dict'
nl|'\n'
comment|"# that is returned from the recon middleware, thus can't rely on it"
nl|'\n'
dedent|''
name|'mock_print'
op|'.'
name|'assert_has_calls'
op|'('
name|'default_calls'
op|','
name|'any_order'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
