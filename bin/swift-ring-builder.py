begin_unit
comment|'#!/usr/bin/python -uO'
nl|'\n'
comment|'# Copyright (c) 2010 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'cPickle'
name|'as'
name|'pickle'
newline|'\n'
name|'from'
name|'errno'
name|'import'
name|'EEXIST'
newline|'\n'
name|'from'
name|'gzip'
name|'import'
name|'GzipFile'
newline|'\n'
name|'from'
name|'os'
name|'import'
name|'mkdir'
newline|'\n'
name|'from'
name|'os'
op|'.'
name|'path'
name|'import'
name|'basename'
op|','
name|'dirname'
op|','
name|'exists'
op|','
name|'join'
name|'as'
name|'pathjoin'
newline|'\n'
name|'from'
name|'sys'
name|'import'
name|'argv'
op|','
name|'exit'
newline|'\n'
name|'from'
name|'time'
name|'import'
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
name|'import'
name|'RingBuilder'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|MAJOR_VERSION
name|'MAJOR_VERSION'
op|'='
number|'1'
newline|'\n'
DECL|variable|MINOR_VERSION
name|'MINOR_VERSION'
op|'='
number|'1'
newline|'\n'
DECL|variable|EXIT_RING_CHANGED
name|'EXIT_RING_CHANGED'
op|'='
number|'0'
newline|'\n'
DECL|variable|EXIT_RING_UNCHANGED
name|'EXIT_RING_UNCHANGED'
op|'='
number|'1'
newline|'\n'
DECL|variable|EXIT_ERROR
name|'EXIT_ERROR'
op|'='
number|'2'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|search_devs
name|'def'
name|'search_devs'
op|'('
name|'builder'
op|','
name|'search_value'
op|')'
op|':'
newline|'\n'
comment|'# d<device_id>z<zone>-<ip>:<port>/<device_name>_<meta>'
nl|'\n'
indent|'    '
name|'orig_search_value'
op|'='
name|'search_value'
newline|'\n'
name|'match'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'search_value'
op|'.'
name|'startswith'
op|'('
string|"'d'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'search_value'
op|')'
name|'and'
name|'search_value'
op|'['
name|'i'
op|']'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'match'
op|'.'
name|'append'
op|'('
op|'('
string|"'id'"
op|','
name|'int'
op|'('
name|'search_value'
op|'['
number|'1'
op|':'
name|'i'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
name|'search_value'
op|'='
name|'search_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'search_value'
op|'.'
name|'startswith'
op|'('
string|"'z'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'search_value'
op|')'
name|'and'
name|'search_value'
op|'['
name|'i'
op|']'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'match'
op|'.'
name|'append'
op|'('
op|'('
string|"'zone'"
op|','
name|'int'
op|'('
name|'search_value'
op|'['
number|'1'
op|':'
name|'i'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
name|'search_value'
op|'='
name|'search_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'search_value'
op|'.'
name|'startswith'
op|'('
string|"'-'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'search_value'
op|'='
name|'search_value'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'search_value'
op|')'
name|'and'
name|'search_value'
op|'['
number|'0'
op|']'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'search_value'
op|')'
name|'and'
name|'search_value'
op|'['
name|'i'
op|']'
name|'in'
string|"'0123456789.'"
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'match'
op|'.'
name|'append'
op|'('
op|'('
string|"'ip'"
op|','
name|'search_value'
op|'['
op|':'
name|'i'
op|']'
op|')'
op|')'
newline|'\n'
name|'search_value'
op|'='
name|'search_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'search_value'
op|'.'
name|'startswith'
op|'('
string|"':'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'search_value'
op|')'
name|'and'
name|'search_value'
op|'['
name|'i'
op|']'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'match'
op|'.'
name|'append'
op|'('
op|'('
string|"'port'"
op|','
name|'int'
op|'('
name|'search_value'
op|'['
number|'1'
op|':'
name|'i'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
name|'search_value'
op|'='
name|'search_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'search_value'
op|'.'
name|'startswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'search_value'
op|')'
name|'and'
name|'search_value'
op|'['
name|'i'
op|']'
op|'!='
string|"'_'"
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'match'
op|'.'
name|'append'
op|'('
op|'('
string|"'device'"
op|','
name|'search_value'
op|'['
number|'1'
op|':'
name|'i'
op|']'
op|')'
op|')'
newline|'\n'
name|'search_value'
op|'='
name|'search_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'search_value'
op|'.'
name|'startswith'
op|'('
string|"'_'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'match'
op|'.'
name|'append'
op|'('
op|'('
string|"'meta'"
op|','
name|'search_value'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
name|'search_value'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'if'
name|'search_value'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'ValueError'
op|'('
string|"'Invalid <search-value>: %s'"
op|'%'
name|'repr'
op|'('
name|'orig_search_value'
op|')'
op|')'
newline|'\n'
dedent|''
name|'devs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'builder'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'dev'
op|':'
newline|'\n'
indent|'            '
name|'continue'
newline|'\n'
dedent|''
name|'matched'
op|'='
name|'True'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'match'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
op|'=='
string|"'meta'"
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'value'
name|'not'
name|'in'
name|'dev'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'matched'
op|'='
name|'False'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'dev'
op|'.'
name|'get'
op|'('
name|'key'
op|')'
op|'!='
name|'value'
op|':'
newline|'\n'
indent|'                '
name|'matched'
op|'='
name|'False'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'matched'
op|':'
newline|'\n'
indent|'            '
name|'devs'
op|'.'
name|'append'
op|'('
name|'dev'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'devs'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
name|'SEARCH_VALUE_HELP'
op|'='
string|'\'\'\'\n    The <search-value> can be of the form:\n    d<device_id>z<zone>-<ip>:<port>/<device_name>_<meta>\n    Any part is optional, but you must include at least one part.\n    Examples:\n        d74              Matches the device id 74\n        z1               Matches devices in zone 1\n        z1-1.2.3.4       Matches devices in zone 1 with the ip 1.2.3.4\n        1.2.3.4          Matches devices in any zone with the ip 1.2.3.4\n        z1:5678          Matches devices in zone 1 using port 5678\n        :5678            Matches devices that use port 5678\n        /sdb1            Matches devices with the device name sdb1\n        _shiny           Matches devices with shiny in the meta data\n        _"snet: 5.6.7.8" Matches devices with snet: 5.6.7.8 in the meta data\n    Most specific example:\n        d74z1-1.2.3.4:5678/sdb1_"snet: 5.6.7.8"\n    Nerd explanation:\n        All items require their single character prefix except the ip, in which\n        case the - is optional unless the device id or zone is also included.\n\'\'\''
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'CREATE_HELP'
op|'='
string|"'''\nring_builder <builder_file> create <part_power> <replicas> <min_part_hours>\n    Creates <builder_file> with 2^<part_power> partitions and <replicas>.\n    <min_part_hours> is number of hours to restrict moving a partition more\n    than once.\n'''"
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'SEARCH_HELP'
op|'='
string|"'''\nring_builder <builder_file> search <search-value>\n    Shows information about matching devices.\n\n    %(SEARCH_VALUE_HELP)s\n'''"
op|'.'
name|'strip'
op|'('
op|')'
op|'%'
name|'globals'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'ADD_HELP'
op|'='
string|"'''\nring_builder <builder_file> add z<zone>-<ip>:<port>/<device_name>_<meta> <wght>\n    Adds a device to the ring with the given information. No partitions will be\n    assigned to the new device until after running 'rebalance'. This is so you\n    can make multiple device changes and rebalance them all just once.\n'''"
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'SET_WEIGHT_HELP'
op|'='
string|"'''\nring_builder <builder_file> set_weight <search-value> <weight>\n    Resets the device's weight. No partitions will be reassigned to or from the\n    device until after running 'rebalance'. This is so you can make multiple\n    device changes and rebalance them all just once.\n\n    %(SEARCH_VALUE_HELP)s\n'''"
op|'.'
name|'strip'
op|'('
op|')'
op|'%'
name|'globals'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'SET_INFO_HELP'
op|'='
string|'\'\'\'\nring_builder <builder_file> set_info <search-value>\n                                     <ip>:<port>/<device_name>_<meta>\n    Resets the device\'s information. This information isn\'t used to assign\n    partitions, so you can use \'write_ring\' afterward to rewrite the current\n    ring with the newer device information. Any of the parts are optional\n    in the final <ip>:<port>/<device_name>_<meta> parameter; just give what you\n    want to change. For instance set_info d74 _"snet: 5.6.7.8" would just\n    update the meta data for device id 74.\n\n    %(SEARCH_VALUE_HELP)s\n\'\'\''
op|'.'
name|'strip'
op|'('
op|')'
op|'%'
name|'globals'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'REMOVE_HELP'
op|'='
string|"'''\nring_builder <builder_file> remove <search-value>\n    Removes the device(s) from the ring. This should normally just be used for\n    a device that has failed. For a device you wish to decommission, it's best\n    to set its weight to 0, wait for it to drain all its data, then use this\n    remove command. This will not take effect until after running 'rebalance'.\n    This is so you can make multiple device changes and rebalance them all just\n    once.\n\n    %(SEARCH_VALUE_HELP)s\n'''"
op|'.'
name|'strip'
op|'('
op|')'
op|'%'
name|'globals'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'SET_MIN_PART_HOURS_HELP'
op|'='
string|"'''\nring_builder <builder_file> set_min_part_hours <hours>\n    Changes the <min_part_hours> to the given <hours>. This should be set to\n    however long a full replication/update cycle takes. We're working on a way\n    to determine this more easily than scanning logs.\n'''"
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'2'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'''\nring_builder %(MAJOR_VERSION)s.%(MINOR_VERSION)s\n\n%(CREATE_HELP)s\n\nring_builder <builder_file>\n    Shows information about the ring and the devices within.\n\n%(SEARCH_HELP)s\n\n%(ADD_HELP)s\n\n%(SET_WEIGHT_HELP)s\n\n%(SET_INFO_HELP)s\n\n%(REMOVE_HELP)s\n\nring_builder <builder_file> rebalance\n    Attempts to rebalance the ring by reassigning partitions that haven't been\n    recently reassigned.\n\nring_builder <builder_file> validate\n    Just runs the validation routines on the ring.\n\nring_builder <builder_file> write_ring\n    Just rewrites the distributable ring file. This is done automatically after\n    a successful rebalance, so really this is only useful after one or more\n    'set_info' calls when no rebalance is needed but you want to send out the\n    new device information.\n\n%(SET_MIN_PART_HOURS_HELP)s\n\nQuick list: create search add set_weight set_info remove rebalance write_ring\n            set_min_part_hours\nExit codes: 0 = ring changed, 1 = ring did not change, 2 = error\n'''"
op|'.'
name|'strip'
op|'('
op|')'
op|'%'
name|'globals'
op|'('
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'exists'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|')'
op|':'
newline|'\n'
DECL|variable|builder
indent|'        '
name|'builder'
op|'='
name|'pickle'
op|'.'
name|'load'
op|'('
name|'open'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|','
string|"'rb'"
op|')'
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'builder'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'dev'
name|'and'
string|"'meta'"
name|'not'
name|'in'
name|'dev'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
string|"'meta'"
op|']'
op|'='
string|"''"
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'elif'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'3'
name|'or'
name|'argv'
op|'['
number|'2'
op|']'
op|'!='
string|"'create'"
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'Ring Builder file does not exist: %s'"
op|'%'
name|'argv'
op|'['
number|'1'
op|']'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'argv'
op|'['
number|'2'
op|']'
op|'=='
string|"'create'"
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'6'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'CREATE_HELP'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
DECL|variable|builder
dedent|''
name|'builder'
op|'='
name|'RingBuilder'
op|'('
name|'int'
op|'('
name|'argv'
op|'['
number|'3'
op|']'
op|')'
op|','
name|'int'
op|'('
name|'argv'
op|'['
number|'4'
op|']'
op|')'
op|','
name|'int'
op|'('
name|'argv'
op|'['
number|'5'
op|']'
op|')'
op|')'
newline|'\n'
DECL|variable|backup_dir
name|'backup_dir'
op|'='
name|'pathjoin'
op|'('
name|'dirname'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|')'
op|','
string|"'backups'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'mkdir'
op|'('
name|'backup_dir'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'err'
op|'.'
name|'errno'
op|'!='
name|'EEXIST'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'builder'
op|','
name|'open'
op|'('
name|'pathjoin'
op|'('
name|'backup_dir'
op|','
nl|'\n'
string|"'%d.'"
op|'%'
name|'time'
op|'('
op|')'
op|'+'
name|'basename'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|')'
op|')'
op|','
string|"'wb'"
op|')'
op|','
name|'protocol'
op|'='
number|'2'
op|')'
newline|'\n'
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'builder'
op|','
name|'open'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|','
string|"'wb'"
op|')'
op|','
name|'protocol'
op|'='
number|'2'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_CHANGED'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|backup_dir
dedent|''
name|'backup_dir'
op|'='
name|'pathjoin'
op|'('
name|'dirname'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|')'
op|','
string|"'backups'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'mkdir'
op|'('
name|'backup_dir'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|','
name|'err'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'err'
op|'.'
name|'errno'
op|'!='
name|'EEXIST'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
nl|'\n'
DECL|variable|ring_file
dedent|''
dedent|''
name|'ring_file'
op|'='
name|'argv'
op|'['
number|'1'
op|']'
newline|'\n'
name|'if'
name|'ring_file'
op|'.'
name|'endswith'
op|'('
string|"'.builder'"
op|')'
op|':'
newline|'\n'
DECL|variable|ring_file
indent|'        '
name|'ring_file'
op|'='
name|'ring_file'
op|'['
op|':'
op|'-'
name|'len'
op|'('
string|"'.builder'"
op|')'
op|']'
newline|'\n'
dedent|''
name|'ring_file'
op|'+='
string|"'.ring.gz'"
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'        '
name|'print'
string|"'%s, build version %d'"
op|'%'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|','
name|'builder'
op|'.'
name|'version'
op|')'
newline|'\n'
DECL|variable|zones
name|'zones'
op|'='
number|'0'
newline|'\n'
DECL|variable|balance
name|'balance'
op|'='
number|'0'
newline|'\n'
name|'if'
name|'builder'
op|'.'
name|'devs'
op|':'
newline|'\n'
DECL|variable|zones
indent|'            '
name|'zones'
op|'='
name|'len'
op|'('
name|'set'
op|'('
name|'d'
op|'['
string|"'zone'"
op|']'
name|'for'
name|'d'
name|'in'
name|'builder'
op|'.'
name|'devs'
name|'if'
name|'d'
name|'is'
name|'not'
name|'None'
op|')'
op|')'
newline|'\n'
DECL|variable|balance
name|'balance'
op|'='
name|'builder'
op|'.'
name|'get_balance'
op|'('
op|')'
newline|'\n'
dedent|''
name|'print'
string|"'%d partitions, %d replicas, %d zones, %d devices, %.02f '"
string|"'balance'"
op|'%'
op|'('
name|'builder'
op|'.'
name|'parts'
op|','
name|'builder'
op|'.'
name|'replicas'
op|','
name|'zones'
op|','
nl|'\n'
name|'len'
op|'('
op|'['
name|'d'
name|'for'
name|'d'
name|'in'
name|'builder'
op|'.'
name|'devs'
name|'if'
name|'d'
op|']'
op|')'
op|','
name|'balance'
op|')'
newline|'\n'
name|'print'
string|"'The minimum number of hours before a partition can be '"
string|"'reassigned is %s'"
op|'%'
name|'builder'
op|'.'
name|'min_part_hours'
newline|'\n'
name|'if'
name|'builder'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'Devices:    id  zone      ip address  port      name '"
string|"'weight partitions balance meta'"
newline|'\n'
name|'weighted_parts'
op|'='
name|'builder'
op|'.'
name|'parts'
op|'*'
name|'builder'
op|'.'
name|'replicas'
op|'/'
DECL|variable|weighted_parts
name|'sum'
op|'('
name|'d'
op|'['
string|"'weight'"
op|']'
name|'for'
name|'d'
name|'in'
name|'builder'
op|'.'
name|'devs'
name|'if'
name|'d'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'builder'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'dev'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'dev'
op|'['
string|"'weight'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'dev'
op|'['
string|"'parts'"
op|']'
op|':'
newline|'\n'
DECL|variable|balance
indent|'                        '
name|'balance'
op|'='
number|'999.99'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
DECL|variable|balance
indent|'                        '
name|'balance'
op|'='
number|'0'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'balance'
op|'='
number|'100.0'
op|'*'
name|'dev'
op|'['
string|"'parts'"
op|']'
op|'/'
DECL|variable|balance
op|'('
name|'dev'
op|'['
string|"'weight'"
op|']'
op|'*'
name|'weighted_parts'
op|')'
op|'-'
number|'100.0'
newline|'\n'
dedent|''
name|'print'
string|"'         %5d %5d %15s %5d %9s %6.02f %10s %7.02f %s'"
op|'%'
op|'('
name|'dev'
op|'['
string|"'id'"
op|']'
op|','
name|'dev'
op|'['
string|"'zone'"
op|']'
op|','
name|'dev'
op|'['
string|"'ip'"
op|']'
op|','
name|'dev'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'dev'
op|'['
string|"'device'"
op|']'
op|','
name|'dev'
op|'['
string|"'weight'"
op|']'
op|','
name|'dev'
op|'['
string|"'parts'"
op|']'
op|','
name|'balance'
op|','
nl|'\n'
name|'dev'
op|'['
string|"'meta'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'argv'
op|'['
number|'2'
op|']'
op|'=='
string|"'search'"
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'4'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'SEARCH_HELP'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
DECL|variable|devs
dedent|''
name|'devs'
op|'='
name|'search_devs'
op|'('
name|'builder'
op|','
name|'argv'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'No matching devices found'"
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
name|'print'
string|"'Devices:    id  zone      ip address  port      name '"
string|"'weight partitions balance meta'"
newline|'\n'
name|'weighted_parts'
op|'='
name|'builder'
op|'.'
name|'parts'
op|'*'
name|'builder'
op|'.'
name|'replicas'
op|'/'
DECL|variable|weighted_parts
name|'sum'
op|'('
name|'d'
op|'['
string|"'weight'"
op|']'
name|'for'
name|'d'
name|'in'
name|'builder'
op|'.'
name|'devs'
name|'if'
name|'d'
name|'is'
name|'not'
name|'None'
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'dev'
op|'['
string|"'weight'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'dev'
op|'['
string|"'parts'"
op|']'
op|':'
newline|'\n'
DECL|variable|balance
indent|'                    '
name|'balance'
op|'='
number|'999.99'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
DECL|variable|balance
indent|'                    '
name|'balance'
op|'='
number|'0'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'balance'
op|'='
number|'100.0'
op|'*'
name|'dev'
op|'['
string|"'parts'"
op|']'
op|'/'
DECL|variable|balance
op|'('
name|'dev'
op|'['
string|"'weight'"
op|']'
op|'*'
name|'weighted_parts'
op|')'
op|'-'
number|'100.0'
newline|'\n'
dedent|''
name|'print'
string|"'         %5d %5d %15s %5d %9s %6.02f %10s %7.02f %s'"
op|'%'
op|'('
name|'dev'
op|'['
string|"'id'"
op|']'
op|','
name|'dev'
op|'['
string|"'zone'"
op|']'
op|','
name|'dev'
op|'['
string|"'ip'"
op|']'
op|','
name|'dev'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'dev'
op|'['
string|"'device'"
op|']'
op|','
name|'dev'
op|'['
string|"'weight'"
op|']'
op|','
name|'dev'
op|'['
string|"'parts'"
op|']'
op|','
name|'balance'
op|','
nl|'\n'
name|'dev'
op|'['
string|"'meta'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'argv'
op|'['
number|'2'
op|']'
op|'=='
string|"'add'"
op|':'
newline|'\n'
comment|'# add z<zone>-<ip>:<port>/<device_name>_<meta> <wght>'
nl|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'5'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'ADD_HELP'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'argv'
op|'['
number|'3'
op|']'
op|'.'
name|'startswith'
op|'('
string|"'z'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'Invalid add value: %s'"
op|'%'
name|'argv'
op|'['
number|'3'
op|']'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
DECL|variable|i
dedent|''
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'argv'
op|'['
number|'3'
op|']'
op|')'
name|'and'
name|'argv'
op|'['
number|'3'
op|']'
op|'['
name|'i'
op|']'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'+='
number|'1'
newline|'\n'
DECL|variable|zone
dedent|''
name|'zone'
op|'='
name|'int'
op|'('
name|'argv'
op|'['
number|'3'
op|']'
op|'['
number|'1'
op|':'
name|'i'
op|']'
op|')'
newline|'\n'
DECL|variable|rest
name|'rest'
op|'='
name|'argv'
op|'['
number|'3'
op|']'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'rest'
op|'.'
name|'startswith'
op|'('
string|"'-'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'Invalid add value: %s'"
op|'%'
name|'argv'
op|'['
number|'3'
op|']'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
DECL|variable|i
dedent|''
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'rest'
op|')'
name|'and'
name|'rest'
op|'['
name|'i'
op|']'
name|'in'
string|"'0123456789.'"
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'+='
number|'1'
newline|'\n'
DECL|variable|ip
dedent|''
name|'ip'
op|'='
name|'rest'
op|'['
number|'1'
op|':'
name|'i'
op|']'
newline|'\n'
DECL|variable|rest
name|'rest'
op|'='
name|'rest'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'rest'
op|'.'
name|'startswith'
op|'('
string|"':'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'Invalid add value: %s'"
op|'%'
name|'argv'
op|'['
number|'3'
op|']'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
DECL|variable|i
dedent|''
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'rest'
op|')'
name|'and'
name|'rest'
op|'['
name|'i'
op|']'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'+='
number|'1'
newline|'\n'
DECL|variable|port
dedent|''
name|'port'
op|'='
name|'int'
op|'('
name|'rest'
op|'['
number|'1'
op|':'
name|'i'
op|']'
op|')'
newline|'\n'
DECL|variable|rest
name|'rest'
op|'='
name|'rest'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'rest'
op|'.'
name|'startswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'Invalid add value: %s'"
op|'%'
name|'argv'
op|'['
number|'3'
op|']'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
DECL|variable|i
dedent|''
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'rest'
op|')'
name|'and'
name|'rest'
op|'['
name|'i'
op|']'
op|'!='
string|"'_'"
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'+='
number|'1'
newline|'\n'
DECL|variable|device_name
dedent|''
name|'device_name'
op|'='
name|'rest'
op|'['
number|'1'
op|':'
name|'i'
op|']'
newline|'\n'
DECL|variable|rest
name|'rest'
op|'='
name|'rest'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|meta
name|'meta'
op|'='
string|"''"
newline|'\n'
name|'if'
name|'rest'
op|'.'
name|'startswith'
op|'('
string|"'_'"
op|')'
op|':'
newline|'\n'
DECL|variable|meta
indent|'            '
name|'meta'
op|'='
name|'rest'
op|'['
number|'1'
op|':'
op|']'
newline|'\n'
nl|'\n'
DECL|variable|weight
dedent|''
name|'weight'
op|'='
name|'float'
op|'('
name|'argv'
op|'['
number|'4'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'dev'
name|'in'
name|'builder'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'dev'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'dev'
op|'['
string|"'ip'"
op|']'
op|'=='
name|'ip'
name|'and'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'=='
name|'port'
name|'and'
name|'dev'
op|'['
string|"'device'"
op|']'
op|'=='
name|'device_name'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'Device %d already uses %s:%d/%s.'"
op|'%'
op|'('
name|'dev'
op|'['
string|"'id'"
op|']'
op|','
name|'dev'
op|'['
string|"'ip'"
op|']'
op|','
name|'dev'
op|'['
string|"'port'"
op|']'
op|','
name|'dev'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|next_dev_id
dedent|''
dedent|''
name|'next_dev_id'
op|'='
number|'0'
newline|'\n'
name|'if'
name|'builder'
op|'.'
name|'devs'
op|':'
newline|'\n'
DECL|variable|next_dev_id
indent|'            '
name|'next_dev_id'
op|'='
name|'max'
op|'('
name|'d'
op|'['
string|"'id'"
op|']'
name|'for'
name|'d'
name|'in'
name|'builder'
op|'.'
name|'devs'
name|'if'
name|'d'
op|')'
op|'+'
number|'1'
newline|'\n'
dedent|''
name|'builder'
op|'.'
name|'add_dev'
op|'('
op|'{'
string|"'id'"
op|':'
name|'next_dev_id'
op|','
string|"'zone'"
op|':'
name|'zone'
op|','
string|"'ip'"
op|':'
name|'ip'
op|','
nl|'\n'
string|"'port'"
op|':'
name|'port'
op|','
string|"'device'"
op|':'
name|'device_name'
op|','
string|"'weight'"
op|':'
name|'weight'
op|','
nl|'\n'
string|"'meta'"
op|':'
name|'meta'
op|'}'
op|')'
newline|'\n'
name|'print'
string|'\'Device z%s-%s:%s/%s_"%s" with %s weight got id %s\''
op|'%'
op|'('
name|'zone'
op|','
name|'ip'
op|','
name|'port'
op|','
name|'device_name'
op|','
name|'meta'
op|','
name|'weight'
op|','
name|'next_dev_id'
op|')'
newline|'\n'
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'builder'
op|','
name|'open'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|','
string|"'wb'"
op|')'
op|','
name|'protocol'
op|'='
number|'2'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'argv'
op|'['
number|'2'
op|']'
op|'=='
string|"'set_weight'"
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'!='
number|'5'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'SET_WEIGHT_HELP'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
DECL|variable|devs
dedent|''
name|'devs'
op|'='
name|'search_devs'
op|'('
name|'builder'
op|','
name|'argv'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
DECL|variable|weight
name|'weight'
op|'='
name|'float'
op|'('
name|'argv'
op|'['
number|'4'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'No matching devices found'"
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'devs'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'Matched more than one device:'"
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'    d%(id)sz%(zone)s-%(ip)s:%(port)s/%(device)s_'"
string|'\'"%(meta)s"\''
op|'%'
name|'dev'
newline|'\n'
dedent|''
name|'if'
name|'raw_input'
op|'('
string|"'Are you sure you want to update the weight for '"
nl|'\n'
string|"'these %s devices? (y/N) '"
op|'%'
name|'len'
op|'('
name|'devs'
op|')'
op|')'
op|'!='
string|"'y'"
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'Aborting device modifications'"
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'builder'
op|'.'
name|'set_dev_weight'
op|'('
name|'dev'
op|'['
string|"'id'"
op|']'
op|','
name|'weight'
op|')'
newline|'\n'
name|'print'
string|'\'d%(id)sz%(zone)s-%(ip)s:%(port)s/%(device)s_"%(meta)s" \''
string|"'weight set to %(weight)s'"
op|'%'
name|'dev'
newline|'\n'
dedent|''
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'builder'
op|','
name|'open'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|','
string|"'wb'"
op|')'
op|','
name|'protocol'
op|'='
number|'2'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'argv'
op|'['
number|'2'
op|']'
op|'=='
string|"'set_info'"
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'!='
number|'5'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'SET_INFO_HELP'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
DECL|variable|devs
dedent|''
name|'devs'
op|'='
name|'search_devs'
op|'('
name|'builder'
op|','
name|'argv'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
DECL|variable|change_value
name|'change_value'
op|'='
name|'argv'
op|'['
number|'4'
op|']'
newline|'\n'
DECL|variable|change
name|'change'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
name|'change_value'
op|'['
number|'0'
op|']'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
DECL|variable|i
indent|'            '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
name|'change_value'
op|'['
name|'i'
op|']'
name|'in'
string|"'0123456789.'"
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'change'
op|'.'
name|'append'
op|'('
op|'('
string|"'ip'"
op|','
name|'change_value'
op|'['
op|':'
name|'i'
op|']'
op|')'
op|')'
newline|'\n'
DECL|variable|change_value
name|'change_value'
op|'='
name|'change_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'change_value'
op|'.'
name|'startswith'
op|'('
string|"':'"
op|')'
op|':'
newline|'\n'
DECL|variable|i
indent|'            '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
name|'change_value'
op|'['
name|'i'
op|']'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'change'
op|'.'
name|'append'
op|'('
op|'('
string|"'port'"
op|','
name|'int'
op|'('
name|'change_value'
op|'['
number|'1'
op|':'
name|'i'
op|']'
op|')'
op|')'
op|')'
newline|'\n'
DECL|variable|change_value
name|'change_value'
op|'='
name|'change_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'change_value'
op|'.'
name|'startswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
DECL|variable|i
indent|'            '
name|'i'
op|'='
number|'1'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'change_value'
op|')'
name|'and'
name|'change_value'
op|'['
name|'i'
op|']'
op|'!='
string|"'_'"
op|':'
newline|'\n'
indent|'                '
name|'i'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'change'
op|'.'
name|'append'
op|'('
op|'('
string|"'device'"
op|','
name|'change_value'
op|'['
number|'1'
op|':'
name|'i'
op|']'
op|')'
op|')'
newline|'\n'
DECL|variable|change_value
name|'change_value'
op|'='
name|'change_value'
op|'['
name|'i'
op|':'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'change_value'
op|'.'
name|'startswith'
op|'('
string|"'_'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'change'
op|'.'
name|'append'
op|'('
op|'('
string|"'meta'"
op|','
name|'change_value'
op|'['
number|'1'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
DECL|variable|change_value
name|'change_value'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'if'
name|'change_value'
name|'or'
name|'not'
name|'change'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|"'Invalid set info change value: %s'"
op|'%'
nl|'\n'
name|'repr'
op|'('
name|'argv'
op|'['
number|'4'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'No matching devices found'"
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'devs'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'Matched more than one device:'"
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'    d%(id)sz%(zone)s-%(ip)s:%(port)s/%(device)s_'"
string|'\'"%(meta)s"\''
op|'%'
name|'dev'
newline|'\n'
dedent|''
name|'if'
name|'raw_input'
op|'('
string|"'Are you sure you want to update the info for '"
nl|'\n'
string|"'these %s devices? (y/N) '"
op|'%'
name|'len'
op|'('
name|'devs'
op|')'
op|')'
op|'!='
string|"'y'"
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'Aborting device modifications'"
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'orig_dev_string'
op|'='
DECL|variable|orig_dev_string
string|'\'d%(id)sz%(zone)s-%(ip)s:%(port)s/%(device)s_"%(meta)s"\''
op|'%'
name|'dev'
newline|'\n'
DECL|variable|test_dev
name|'test_dev'
op|'='
name|'dict'
op|'('
name|'dev'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'change'
op|':'
newline|'\n'
indent|'                '
name|'test_dev'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'for'
name|'check_dev'
name|'in'
name|'builder'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'check_dev'
name|'or'
name|'check_dev'
op|'['
string|"'id'"
op|']'
op|'=='
name|'test_dev'
op|'['
string|"'id'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'check_dev'
op|'['
string|"'ip'"
op|']'
op|'=='
name|'test_dev'
op|'['
string|"'ip'"
op|']'
name|'and'
name|'check_dev'
op|'['
string|"'port'"
op|']'
op|'=='
name|'test_dev'
op|'['
string|"'port'"
op|']'
name|'and'
name|'check_dev'
op|'['
string|"'device'"
op|']'
op|'=='
name|'test_dev'
op|'['
string|"'device'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'print'
string|"'Device %d already uses %s:%d/%s.'"
op|'%'
op|'('
name|'check_dev'
op|'['
string|"'id'"
op|']'
op|','
name|'check_dev'
op|'['
string|"'ip'"
op|']'
op|','
name|'check_dev'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'check_dev'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'change'
op|':'
newline|'\n'
indent|'                '
name|'dev'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
name|'new_dev_string'
op|'='
DECL|variable|new_dev_string
string|'\'d%(id)sz%(zone)s-%(ip)s:%(port)s/%(device)s_"%(meta)s"\''
op|'%'
name|'dev'
newline|'\n'
name|'print'
string|"'Device %s is now %s'"
op|'%'
op|'('
name|'orig_dev_string'
op|','
name|'new_dev_string'
op|')'
newline|'\n'
dedent|''
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'builder'
op|','
name|'open'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|','
string|"'wb'"
op|')'
op|','
name|'protocol'
op|'='
number|'2'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'argv'
op|'['
number|'2'
op|']'
op|'=='
string|"'remove'"
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'4'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'REMOVE_HELP'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
DECL|variable|devs
dedent|''
name|'devs'
op|'='
name|'search_devs'
op|'('
name|'builder'
op|','
name|'argv'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'No matching devices found'"
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'devs'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'Matched more than one device:'"
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'    d%(id)sz%(zone)s-%(ip)s:%(port)s/%(device)s_'"
string|'\'"%(meta)s"\''
op|'%'
name|'dev'
newline|'\n'
dedent|''
name|'if'
name|'raw_input'
op|'('
string|"'Are you sure you want to remove these %s devices? '"
nl|'\n'
string|"'(y/N) '"
op|'%'
name|'len'
op|'('
name|'devs'
op|')'
op|')'
op|'!='
string|"'y'"
op|':'
newline|'\n'
indent|'                '
name|'print'
string|"'Aborting device removals'"
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'dev'
name|'in'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'builder'
op|'.'
name|'remove_dev'
op|'('
name|'dev'
op|'['
string|"'id'"
op|']'
op|')'
newline|'\n'
name|'print'
string|'\'d%(id)sz%(zone)s-%(ip)s:%(port)s/%(device)s_"%(meta)s" \''
string|"'marked for removal and will be removed next rebalance.'"
op|'%'
name|'dev'
newline|'\n'
dedent|''
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'builder'
op|','
name|'open'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|','
string|"'wb'"
op|')'
op|','
name|'protocol'
op|'='
number|'2'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'argv'
op|'['
number|'2'
op|']'
op|'=='
string|"'rebalance'"
op|':'
newline|'\n'
DECL|variable|devs_changed
indent|'        '
name|'devs_changed'
op|'='
name|'builder'
op|'.'
name|'devs_changed'
newline|'\n'
DECL|variable|last_balance
name|'last_balance'
op|'='
name|'builder'
op|'.'
name|'get_balance'
op|'('
op|')'
newline|'\n'
name|'parts'
op|','
name|'balance'
op|'='
name|'builder'
op|'.'
name|'rebalance'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'parts'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'No partitions could be reassigned.'"
newline|'\n'
name|'print'
string|"'Either none need to be or none can be due to '"
string|"'min_part_hours [%s].'"
op|'%'
name|'builder'
op|'.'
name|'min_part_hours'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'devs_changed'
name|'and'
name|'abs'
op|'('
name|'last_balance'
op|'-'
name|'balance'
op|')'
op|'<'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'Cowardly refusing to save rebalance as it did not change '"
string|"'at least 1%.'"
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
dedent|''
name|'builder'
op|'.'
name|'validate'
op|'('
op|')'
newline|'\n'
name|'print'
string|"'Reassigned %d (%.02f%%) partitions. Balance is now %.02f.'"
op|'%'
op|'('
name|'parts'
op|','
number|'100.0'
op|'*'
name|'parts'
op|'/'
name|'builder'
op|'.'
name|'parts'
op|','
name|'balance'
op|')'
newline|'\n'
name|'if'
name|'balance'
op|'>'
number|'5'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|"'-'"
op|'*'
number|'79'
newline|'\n'
name|'print'
string|"'NOTE: Balance of %.02f indicates you should push this '"
op|'%'
name|'balance'
newline|'\n'
name|'print'
string|"'      ring, wait at least %d hours, and rebalance/repush.'"
op|'%'
name|'builder'
op|'.'
name|'min_part_hours'
newline|'\n'
name|'print'
string|"'-'"
op|'*'
number|'79'
newline|'\n'
DECL|variable|ts
dedent|''
name|'ts'
op|'='
name|'time'
op|'('
op|')'
newline|'\n'
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'builder'
op|'.'
name|'get_ring'
op|'('
op|')'
op|','
nl|'\n'
name|'GzipFile'
op|'('
name|'pathjoin'
op|'('
name|'backup_dir'
op|','
string|"'%d.'"
op|'%'
name|'ts'
op|'+'
nl|'\n'
name|'basename'
op|'('
name|'ring_file'
op|')'
op|')'
op|','
string|"'wb'"
op|')'
op|','
name|'protocol'
op|'='
number|'2'
op|')'
newline|'\n'
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'builder'
op|','
name|'open'
op|'('
name|'pathjoin'
op|'('
name|'backup_dir'
op|','
nl|'\n'
string|"'%d.'"
op|'%'
name|'ts'
op|'+'
name|'basename'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|')'
op|')'
op|','
string|"'wb'"
op|')'
op|','
name|'protocol'
op|'='
number|'2'
op|')'
newline|'\n'
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'builder'
op|'.'
name|'get_ring'
op|'('
op|')'
op|','
name|'GzipFile'
op|'('
name|'ring_file'
op|','
string|"'wb'"
op|')'
op|','
name|'protocol'
op|'='
number|'2'
op|')'
newline|'\n'
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'builder'
op|','
name|'open'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|','
string|"'wb'"
op|')'
op|','
name|'protocol'
op|'='
number|'2'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_CHANGED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'argv'
op|'['
number|'2'
op|']'
op|'=='
string|"'validate'"
op|':'
newline|'\n'
indent|'        '
name|'builder'
op|'.'
name|'validate'
op|'('
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'argv'
op|'['
number|'2'
op|']'
op|'=='
string|"'write_ring'"
op|':'
newline|'\n'
indent|'        '
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'builder'
op|'.'
name|'get_ring'
op|'('
op|')'
op|','
nl|'\n'
name|'GzipFile'
op|'('
name|'pathjoin'
op|'('
name|'backup_dir'
op|','
string|"'%d.'"
op|'%'
name|'time'
op|'('
op|')'
op|'+'
nl|'\n'
name|'basename'
op|'('
name|'ring_file'
op|')'
op|')'
op|','
string|"'wb'"
op|')'
op|','
name|'protocol'
op|'='
number|'2'
op|')'
newline|'\n'
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'builder'
op|'.'
name|'get_ring'
op|'('
op|')'
op|','
name|'GzipFile'
op|'('
name|'ring_file'
op|','
string|"'wb'"
op|')'
op|','
name|'protocol'
op|'='
number|'2'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_CHANGED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'argv'
op|'['
number|'2'
op|']'
op|'=='
string|"'pretend_min_part_hours_passed'"
op|':'
newline|'\n'
indent|'        '
name|'builder'
op|'.'
name|'pretend_min_part_hours_passed'
op|'('
op|')'
newline|'\n'
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'builder'
op|','
name|'open'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|','
string|"'wb'"
op|')'
op|','
name|'protocol'
op|'='
number|'2'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'elif'
name|'argv'
op|'['
number|'2'
op|']'
op|'=='
string|"'set_min_part_hours'"
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'argv'
op|')'
op|'<'
number|'4'
op|':'
newline|'\n'
indent|'            '
name|'print'
name|'SET_MIN_PART_HOURS_HELP'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
dedent|''
name|'builder'
op|'.'
name|'change_min_part_hours'
op|'('
name|'int'
op|'('
name|'argv'
op|'['
number|'3'
op|']'
op|')'
op|')'
newline|'\n'
name|'print'
string|"'The minimum number of hours before a partition can be '"
string|"'reassigned is now set to %s'"
op|'%'
name|'argv'
op|'['
number|'3'
op|']'
newline|'\n'
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'builder'
op|','
name|'open'
op|'('
name|'argv'
op|'['
number|'1'
op|']'
op|','
string|"'wb'"
op|')'
op|','
name|'protocol'
op|'='
number|'2'
op|')'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_RING_UNCHANGED'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'print'
string|"'Unknown command: %s'"
op|'%'
name|'argv'
op|'['
number|'2'
op|']'
newline|'\n'
name|'exit'
op|'('
name|'EXIT_ERROR'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
