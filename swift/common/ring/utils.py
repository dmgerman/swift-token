begin_unit
name|'from'
name|'collections'
name|'import'
name|'defaultdict'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|tiers_for_dev
name|'def'
name|'tiers_for_dev'
op|'('
name|'dev'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Returns a tuple of tiers for a given device in ascending order by\n    length.\n\n    :returns: tuple of tiers\n    """'
newline|'\n'
name|'t1'
op|'='
name|'dev'
op|'['
string|"'zone'"
op|']'
newline|'\n'
name|'t2'
op|'='
string|'"{ip}:{port}"'
op|'.'
name|'format'
op|'('
name|'ip'
op|'='
name|'dev'
op|'.'
name|'get'
op|'('
string|"'ip'"
op|')'
op|','
name|'port'
op|'='
name|'dev'
op|'.'
name|'get'
op|'('
string|"'port'"
op|')'
op|')'
newline|'\n'
name|'t3'
op|'='
name|'dev'
op|'['
string|"'id'"
op|']'
newline|'\n'
nl|'\n'
name|'return'
op|'('
op|'('
name|'t1'
op|','
op|')'
op|','
nl|'\n'
op|'('
name|'t1'
op|','
name|'t2'
op|')'
op|','
nl|'\n'
op|'('
name|'t1'
op|','
name|'t2'
op|','
name|'t3'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|build_tier_tree
dedent|''
name|'def'
name|'build_tier_tree'
op|'('
name|'devices'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Construct the tier tree from the zone layout.\n\n    The tier tree is a dictionary that maps tiers to their child tiers.\n    A synthetic root node of () is generated so that there\'s one tree,\n    not a forest.\n\n    Example:\n\n    zone 1 -+---- 192.168.1.1:6000 -+---- device id 0\n            |                       |\n            |                       +---- device id 1\n            |                       |\n            |                       +---- device id 2\n            |\n            +---- 192.168.1.2:6000 -+---- device id 3\n                                    |\n                                    +---- device id 4\n                                    |\n                                    +---- device id 5\n\n\n    zone 2 -+---- 192.168.2.1:6000 -+---- device id 6\n            |                       |\n            |                       +---- device id 7\n            |                       |\n            |                       +---- device id 8\n            |\n            +---- 192.168.2.2:6000 -+---- device id 9\n                                    |\n                                    +---- device id 10\n                                    |\n                                    +---- device id 11\n\n    The tier tree would look like:\n    {\n      (): [(1,), (2,)],\n\n      (1,): [(1, 192.168.1.1:6000),\n             (1, 192.168.1.2:6000)],\n      (2,): [(2, 192.168.2.1:6000),\n             (2, 192.168.2.2:6000)],\n\n      (1, 192.168.1.1:6000): [(1, 192.168.1.1:6000, 0),\n                              (1, 192.168.1.1:6000, 1),\n                              (1, 192.168.1.1:6000, 2)],\n      (1, 192.168.1.2:6000): [(1, 192.168.1.2:6000, 3),\n                              (1, 192.168.1.2:6000, 4),\n                              (1, 192.168.1.2:6000, 5)],\n      (2, 192.168.2.1:6000): [(2, 192.168.2.1:6000, 6),\n                              (2, 192.168.2.1:6000, 7),\n                              (2, 192.168.2.1:6000, 8)],\n      (2, 192.168.2.2:6000): [(2, 192.168.2.2:6000, 9),\n                              (2, 192.168.2.2:6000, 10),\n                              (2, 192.168.2.2:6000, 11)],\n    }\n\n    :devices: device dicts from which to generate the tree\n    :returns: tier tree\n\n    """'
newline|'\n'
name|'tier2children'
op|'='
name|'defaultdict'
op|'('
name|'set'
op|')'
newline|'\n'
name|'for'
name|'dev'
name|'in'
name|'devices'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'tier'
name|'in'
name|'tiers_for_dev'
op|'('
name|'dev'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'tier'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'tier2children'
op|'['
name|'tier'
op|'['
number|'0'
op|':'
op|'-'
number|'1'
op|']'
op|']'
op|'.'
name|'add'
op|'('
name|'tier'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'tier2children'
op|'['
op|'('
op|')'
op|']'
op|'.'
name|'add'
op|'('
name|'tier'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'tier2children'
newline|'\n'
dedent|''
endmarker|''
end_unit
