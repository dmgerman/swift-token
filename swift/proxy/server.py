begin_unit
comment|'# Copyright (c) 2010-2011 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'__future__'
name|'import'
name|'with_statement'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'simplejson'
name|'as'
name|'json'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
indent|'    '
name|'import'
name|'json'
newline|'\n'
dedent|''
name|'import'
name|'mimetypes'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'traceback'
newline|'\n'
name|'from'
name|'ConfigParser'
name|'import'
name|'ConfigParser'
newline|'\n'
name|'from'
name|'datetime'
name|'import'
name|'datetime'
newline|'\n'
name|'from'
name|'urllib'
name|'import'
name|'unquote'
op|','
name|'quote'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
name|'import'
name|'functools'
newline|'\n'
name|'from'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
name|'from'
name|'random'
name|'import'
name|'shuffle'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'sleep'
op|','
name|'GreenPile'
op|','
name|'Queue'
op|','
name|'TimeoutError'
newline|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'timeout'
name|'import'
name|'Timeout'
newline|'\n'
name|'from'
name|'webob'
op|'.'
name|'exc'
name|'import'
name|'HTTPBadRequest'
op|','
name|'HTTPMethodNotAllowed'
op|','
name|'HTTPNotFound'
op|','
name|'HTTPPreconditionFailed'
op|','
name|'HTTPRequestTimeout'
op|','
name|'HTTPServiceUnavailable'
op|','
name|'HTTPUnprocessableEntity'
op|','
name|'HTTPRequestEntityTooLarge'
op|','
name|'HTTPServerError'
op|','
name|'status_map'
newline|'\n'
name|'from'
name|'webob'
name|'import'
name|'Request'
op|','
name|'Response'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
name|'import'
name|'Ring'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'get_logger'
op|','
name|'normalize_timestamp'
op|','
name|'split_path'
op|','
name|'cache_from_env'
op|','
name|'ContextPool'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'bufferedhttp'
name|'import'
name|'http_connect'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'constraints'
name|'import'
name|'check_metadata'
op|','
name|'check_object_creation'
op|','
name|'check_utf8'
op|','
name|'CONTAINER_LISTING_LIMIT'
op|','
name|'MAX_ACCOUNT_NAME_LENGTH'
op|','
name|'MAX_CONTAINER_NAME_LENGTH'
op|','
name|'MAX_FILE_SIZE'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'ChunkReadTimeout'
op|','
name|'ChunkWriteTimeout'
op|','
name|'ConnectionTimeout'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|update_headers
name|'def'
name|'update_headers'
op|'('
name|'response'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Helper function to update headers in the response.\n\n    :param response: webob.Response object\n    :param headers: dictionary headers\n    """'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'headers'
op|','
string|"'items'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
newline|'\n'
dedent|''
name|'for'
name|'name'
op|','
name|'value'
name|'in'
name|'headers'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'name'
op|'=='
string|"'etag'"
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'.'
name|'headers'
op|'['
name|'name'
op|']'
op|'='
name|'value'
op|'.'
name|'replace'
op|'('
string|'\'"\''
op|','
string|"''"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'name'
name|'not'
name|'in'
op|'('
string|"'date'"
op|','
string|"'content-length'"
op|','
string|"'content-type'"
op|','
nl|'\n'
string|"'connection'"
op|','
string|"'x-timestamp'"
op|','
string|"'x-put-timestamp'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'.'
name|'headers'
op|'['
name|'name'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|public
dedent|''
dedent|''
dedent|''
name|'def'
name|'public'
op|'('
name|'func'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Decorator to declare which methods are public accessible as HTTP requests\n\n    :param func: function to make public\n    """'
newline|'\n'
name|'func'
op|'.'
name|'publicly_accessible'
op|'='
name|'True'
newline|'\n'
nl|'\n'
op|'@'
name|'functools'
op|'.'
name|'wraps'
op|'('
name|'func'
op|')'
newline|'\n'
DECL|function|wrapped
name|'def'
name|'wrapped'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'func'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'wrapped'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|delay_denial
dedent|''
name|'def'
name|'delay_denial'
op|'('
name|'func'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Decorator to declare which methods should have any swift.authorize call\n    delayed. This is so the method can load the Request object up with\n    additional information that may be needed by the authorization system.\n\n    :param func: function to delay authorization on\n    """'
newline|'\n'
name|'func'
op|'.'
name|'delay_denial'
op|'='
name|'True'
newline|'\n'
nl|'\n'
op|'@'
name|'functools'
op|'.'
name|'wraps'
op|'('
name|'func'
op|')'
newline|'\n'
DECL|function|wrapped
name|'def'
name|'wrapped'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'func'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'wrapped'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_account_memcache_key
dedent|''
name|'def'
name|'get_account_memcache_key'
op|'('
name|'account'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
string|"'account/%s'"
op|'%'
name|'account'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_container_memcache_key
dedent|''
name|'def'
name|'get_container_memcache_key'
op|'('
name|'account'
op|','
name|'container'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
string|"'container/%s/%s'"
op|'%'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SegmentedIterable
dedent|''
name|'class'
name|'SegmentedIterable'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Iterable that returns the object contents for a segmented object in Swift.\n\n    If set, the response\'s `bytes_transferred` value will be updated (used to\n    log the size of the request). Also, if there\'s a failure that cuts the\n    transfer short, the response\'s `status_int` will be updated (again, just\n    for logging since the original status would have already been sent to the\n    client).\n\n    :param controller: The ObjectController instance to work with.\n    :param container: The container the object segments are within.\n    :param listing: The listing of object segments to iterate over; this may\n                    be an iterator or list that returns dicts with \'name\' and\n                    \'bytes\' keys.\n    :param response: The webob.Response this iterable is associated with, if\n                     any (default: None)\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'controller'
op|','
name|'container'
op|','
name|'listing'
op|','
name|'response'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'controller'
op|'='
name|'controller'
newline|'\n'
name|'self'
op|'.'
name|'container'
op|'='
name|'container'
newline|'\n'
name|'self'
op|'.'
name|'listing'
op|'='
name|'iter'
op|'('
name|'listing'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'segment'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'segment_dict'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'segment_peek'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'seek'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'segment_iter'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'position'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'response'
op|'='
name|'response'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'response'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'response'
op|'='
name|'Response'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'next_get_time'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|_load_next_segment
dedent|''
name|'def'
name|'_load_next_segment'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Loads the self.segment_iter with the next object segment\'s contents.\n\n        :raises: StopIteration when there are no more object segments.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'segment'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'segment_dict'
op|'='
name|'self'
op|'.'
name|'segment_peek'
name|'or'
name|'self'
op|'.'
name|'listing'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'segment_peek'
op|'='
name|'None'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container'
op|','
nl|'\n'
name|'self'
op|'.'
name|'segment_dict'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'path'
op|'='
string|"'/%s/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container'
op|','
nl|'\n'
name|'self'
op|'.'
name|'segment_dict'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'seek'
op|':'
newline|'\n'
indent|'                '
name|'req'
op|'.'
name|'range'
op|'='
string|"'bytes=%s-'"
op|'%'
name|'self'
op|'.'
name|'seek'
newline|'\n'
name|'self'
op|'.'
name|'seek'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'segment'
op|'>'
number|'10'
op|':'
newline|'\n'
indent|'                '
name|'sleep'
op|'('
name|'max'
op|'('
name|'self'
op|'.'
name|'next_get_time'
op|'-'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'next_get_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
number|'1'
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'GETorHEAD_base'
op|'('
name|'req'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
name|'partition'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'iter_nodes'
op|'('
name|'partition'
op|','
name|'nodes'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|')'
op|','
name|'path'
op|','
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|'.'
name|'replica_count'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|"'Could not load object segment %(path)s:'"
string|"' %(status)s'"
op|')'
op|'%'
op|'{'
string|"'path'"
op|':'
name|'path'
op|','
string|"'status'"
op|':'
name|'resp'
op|'.'
name|'status_int'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'segment_iter'
op|'='
name|'resp'
op|'.'
name|'app_iter'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'getattr'
op|'('
name|'err'
op|','
string|"'swift_logged'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|"'ERROR: While '"
nl|'\n'
string|"'processing manifest /%(acc)s/%(cont)s/%(obj)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'acc'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_name'
op|','
nl|'\n'
string|"'cont'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_name'
op|','
nl|'\n'
string|"'obj'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'object_name'
op|'}'
op|')'
newline|'\n'
name|'err'
op|'.'
name|'swift_logged'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'response'
op|'.'
name|'status_int'
op|'='
number|'503'
newline|'\n'
dedent|''
name|'raise'
newline|'\n'
nl|'\n'
DECL|member|next
dedent|''
dedent|''
name|'def'
name|'next'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'iter'
op|'('
name|'self'
op|')'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Standard iterator function that returns the object\'s contents. """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'self'
op|'.'
name|'segment_iter'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_load_next_segment'
op|'('
op|')'
newline|'\n'
dedent|''
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'ChunkReadTimeout'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'try'
op|':'
newline|'\n'
indent|'                            '
name|'chunk'
op|'='
name|'self'
op|'.'
name|'segment_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'_load_next_segment'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'position'
op|'+='
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'response'
op|'.'
name|'bytes_transferred'
op|'='
name|'getattr'
op|'('
name|'self'
op|'.'
name|'response'
op|','
nl|'\n'
string|"'bytes_transferred'"
op|','
number|'0'
op|')'
op|'+'
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'yield'
name|'chunk'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'getattr'
op|'('
name|'err'
op|','
string|"'swift_logged'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|"'ERROR: While '"
nl|'\n'
string|"'processing manifest /%(acc)s/%(cont)s/%(obj)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'acc'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_name'
op|','
nl|'\n'
string|"'cont'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_name'
op|','
nl|'\n'
string|"'obj'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'object_name'
op|'}'
op|')'
newline|'\n'
name|'err'
op|'.'
name|'swift_logged'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'response'
op|'.'
name|'status_int'
op|'='
number|'503'
newline|'\n'
dedent|''
name|'raise'
newline|'\n'
nl|'\n'
DECL|member|app_iter_range
dedent|''
dedent|''
name|'def'
name|'app_iter_range'
op|'('
name|'self'
op|','
name|'start'
op|','
name|'stop'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Non-standard iterator function for use with Webob in serving Range\n        requests more quickly. This will skip over segments and do a range\n        request on the first segment to return data from, if needed.\n\n        :param start: The first byte (zero-based) to return. None for 0.\n        :param stop: The last byte (zero-based) to return. None for end.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'start'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'segment_peek'
op|'='
name|'self'
op|'.'
name|'listing'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'while'
name|'start'
op|'>='
name|'self'
op|'.'
name|'position'
op|'+'
name|'self'
op|'.'
name|'segment_peek'
op|'['
string|"'bytes'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'segment'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'position'
op|'+='
name|'self'
op|'.'
name|'segment_peek'
op|'['
string|"'bytes'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'segment_peek'
op|'='
name|'self'
op|'.'
name|'listing'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'seek'
op|'='
name|'start'
op|'-'
name|'self'
op|'.'
name|'position'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'start'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'if'
name|'stop'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'length'
op|'='
name|'stop'
op|'-'
name|'start'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'length'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'for'
name|'chunk'
name|'in'
name|'self'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'length'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'length'
op|'-='
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'if'
name|'length'
op|'<'
number|'0'
op|':'
newline|'\n'
comment|'# Chop off the extra:'
nl|'\n'
indent|'                        '
name|'self'
op|'.'
name|'response'
op|'.'
name|'bytes_transferred'
op|'='
name|'getattr'
op|'('
name|'self'
op|'.'
name|'response'
op|','
string|"'bytes_transferred'"
op|','
number|'0'
op|')'
op|'+'
name|'length'
newline|'\n'
name|'yield'
name|'chunk'
op|'['
op|':'
name|'length'
op|']'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'yield'
name|'chunk'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'getattr'
op|'('
name|'err'
op|','
string|"'swift_logged'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|"'ERROR: While '"
nl|'\n'
string|"'processing manifest /%(acc)s/%(cont)s/%(obj)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'acc'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_name'
op|','
nl|'\n'
string|"'cont'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_name'
op|','
nl|'\n'
string|"'obj'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'object_name'
op|'}'
op|')'
newline|'\n'
name|'err'
op|'.'
name|'swift_logged'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'response'
op|'.'
name|'status_int'
op|'='
number|'503'
newline|'\n'
dedent|''
name|'raise'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Controller
dedent|''
dedent|''
dedent|''
name|'class'
name|'Controller'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Base WSGI controller class for the proxy"""'
newline|'\n'
DECL|variable|server_type
name|'server_type'
op|'='
name|'_'
op|'('
string|"'Base'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'account_name'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'='
name|'app'
newline|'\n'
name|'self'
op|'.'
name|'trans_id'
op|'='
string|"'-'"
newline|'\n'
nl|'\n'
DECL|member|error_increment
dedent|''
name|'def'
name|'error_increment'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handles incrementing error counts when talking to nodes.\n\n        :param node: dictionary of node to increment the error count for\n        """'
newline|'\n'
name|'node'
op|'['
string|"'errors'"
op|']'
op|'='
name|'node'
op|'.'
name|'get'
op|'('
string|"'errors'"
op|','
number|'0'
op|')'
op|'+'
number|'1'
newline|'\n'
name|'node'
op|'['
string|"'last_error'"
op|']'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|error_occurred
dedent|''
name|'def'
name|'error_occurred'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handle logging, and handling of errors.\n\n        :param node: dictionary of node to handle errors for\n        :param msg: error message\n        """'
newline|'\n'
name|'self'
op|'.'
name|'error_increment'
op|'('
name|'node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|"'%(msg)s %(ip)s:%(port)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'msg'"
op|':'
name|'msg'
op|','
string|"'ip'"
op|':'
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
string|"'port'"
op|':'
name|'node'
op|'['
string|"'port'"
op|']'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|exception_occurred
dedent|''
name|'def'
name|'exception_occurred'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'typ'
op|','
name|'additional_info'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handle logging of generic exceptions.\n\n        :param node: dictionary of node to log the error for\n        :param typ: server type\n        :param additional_info: additional information to log\n        """'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'ERROR with %(type)s server %(ip)s:%(port)s/%(device)s re: '"
nl|'\n'
string|"'%(info)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'type'"
op|':'
name|'typ'
op|','
string|"'ip'"
op|':'
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
string|"'port'"
op|':'
name|'node'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
string|"'device'"
op|':'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
string|"'info'"
op|':'
name|'additional_info'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|error_limited
dedent|''
name|'def'
name|'error_limited'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check if the node is currently error limited.\n\n        :param node: dictionary of node to check\n        :returns: True if error limited, False otherwise\n        """'
newline|'\n'
name|'now'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
string|"'errors'"
name|'in'
name|'node'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'if'
string|"'last_error'"
name|'in'
name|'node'
name|'and'
name|'node'
op|'['
string|"'last_error'"
op|']'
op|'<'
name|'now'
op|'-'
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_suppression_interval'
op|':'
newline|'\n'
indent|'            '
name|'del'
name|'node'
op|'['
string|"'last_error'"
op|']'
newline|'\n'
name|'if'
string|"'errors'"
name|'in'
name|'node'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'node'
op|'['
string|"'errors'"
op|']'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'limited'
op|'='
name|'node'
op|'['
string|"'errors'"
op|']'
op|'>'
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_suppression_limit'
newline|'\n'
name|'if'
name|'limited'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Node error limited %(ip)s:%(port)s (%(device)s)'"
op|')'
op|','
name|'node'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'limited'
newline|'\n'
nl|'\n'
DECL|member|error_limit
dedent|''
name|'def'
name|'error_limit'
op|'('
name|'self'
op|','
name|'node'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Mark a node as error limited.\n\n        :param node: dictionary of node to error limit\n        """'
newline|'\n'
name|'node'
op|'['
string|"'errors'"
op|']'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'error_suppression_limit'
op|'+'
number|'1'
newline|'\n'
name|'node'
op|'['
string|"'last_error'"
op|']'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|account_info
dedent|''
name|'def'
name|'account_info'
op|'('
name|'self'
op|','
name|'account'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get account information, and also verify that the account exists.\n\n        :param account: name of the account to get the info for\n        :returns: tuple of (account partition, account nodes) or (None, None)\n                  if it does not exist\n        """'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
name|'account'
op|')'
newline|'\n'
comment|'# 0 = no responses, 200 = found, 404 = not found, -1 = mixed responses'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|':'
newline|'\n'
indent|'            '
name|'cache_key'
op|'='
name|'get_account_memcache_key'
op|'('
name|'account'
op|')'
newline|'\n'
name|'result_code'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'get'
op|'('
name|'cache_key'
op|')'
newline|'\n'
name|'if'
name|'result_code'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'partition'
op|','
name|'nodes'
newline|'\n'
dedent|''
name|'elif'
name|'result_code'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'result_code'
op|'='
number|'0'
newline|'\n'
name|'attempts_left'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'replica_count'
newline|'\n'
name|'path'
op|'='
string|"'/%s'"
op|'%'
name|'account'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'x-cf-trans-id'"
op|':'
name|'self'
op|'.'
name|'trans_id'
op|'}'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'self'
op|'.'
name|'iter_nodes'
op|'('
name|'partition'
op|','
name|'nodes'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'ConnectionTimeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'conn_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'='
name|'http_connect'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'partition'
op|','
string|"'HEAD'"
op|','
name|'path'
op|','
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'body'
op|'='
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
number|'200'
op|'<='
name|'resp'
op|'.'
name|'status'
op|'<='
number|'299'
op|':'
newline|'\n'
indent|'                        '
name|'result_code'
op|'='
number|'200'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
name|'elif'
name|'resp'
op|'.'
name|'status'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'result_code'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                            '
name|'result_code'
op|'='
number|'404'
newline|'\n'
dedent|''
name|'elif'
name|'result_code'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                            '
name|'result_code'
op|'='
op|'-'
number|'1'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'resp'
op|'.'
name|'status'
op|'=='
number|'507'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'error_limit'
op|'('
name|'node'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'result_code'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'attempts_left'
op|'-='
number|'1'
newline|'\n'
name|'if'
name|'attempts_left'
op|'<='
number|'0'
op|':'
newline|'\n'
indent|'                            '
name|'break'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'TimeoutError'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'exception_occurred'
op|'('
name|'node'
op|','
name|'_'
op|'('
string|"'Account'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Trying to get account info for %s'"
op|')'
op|'%'
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
name|'and'
name|'result_code'
name|'in'
op|'('
number|'200'
op|','
number|'404'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'result_code'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'                '
name|'cache_timeout'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'recheck_account_existence'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'cache_timeout'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'recheck_account_existence'
op|'*'
number|'0.1'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'set'
op|'('
name|'cache_key'
op|','
name|'result_code'
op|','
nl|'\n'
name|'timeout'
op|'='
name|'cache_timeout'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'result_code'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'partition'
op|','
name|'nodes'
newline|'\n'
dedent|''
name|'return'
name|'None'
op|','
name|'None'
newline|'\n'
nl|'\n'
DECL|member|container_info
dedent|''
name|'def'
name|'container_info'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get container information and thusly verify container existance.\n        This will also make a call to account_info to verify that the\n        account exists.\n\n        :param account: account name for the container\n        :param container: container name to look up\n        :returns: tuple of (container partition, container nodes, container\n                  read acl, container write acl) or (None, None, None, None) if\n                  the container does not exist\n        """'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'path'
op|'='
string|"'/%s/%s'"
op|'%'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|':'
newline|'\n'
indent|'            '
name|'cache_key'
op|'='
name|'get_container_memcache_key'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'cache_value'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'get'
op|'('
name|'cache_key'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'cache_value'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'status'
op|'='
name|'cache_value'
op|'['
string|"'status'"
op|']'
newline|'\n'
name|'read_acl'
op|'='
name|'cache_value'
op|'['
string|"'read_acl'"
op|']'
newline|'\n'
name|'write_acl'
op|'='
name|'cache_value'
op|'['
string|"'write_acl'"
op|']'
newline|'\n'
name|'if'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'partition'
op|','
name|'nodes'
op|','
name|'read_acl'
op|','
name|'write_acl'
newline|'\n'
dedent|''
name|'elif'
name|'status'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'account_info'
op|'('
name|'account'
op|')'
op|'['
number|'1'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
newline|'\n'
dedent|''
name|'result_code'
op|'='
number|'0'
newline|'\n'
name|'read_acl'
op|'='
name|'None'
newline|'\n'
name|'write_acl'
op|'='
name|'None'
newline|'\n'
name|'container_size'
op|'='
name|'None'
newline|'\n'
name|'attempts_left'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'replica_count'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'x-cf-trans-id'"
op|':'
name|'self'
op|'.'
name|'trans_id'
op|'}'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'self'
op|'.'
name|'iter_nodes'
op|'('
name|'partition'
op|','
name|'nodes'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'ConnectionTimeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'conn_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'='
name|'http_connect'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'partition'
op|','
string|"'HEAD'"
op|','
name|'path'
op|','
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'body'
op|'='
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
number|'200'
op|'<='
name|'resp'
op|'.'
name|'status'
op|'<='
number|'299'
op|':'
newline|'\n'
indent|'                        '
name|'result_code'
op|'='
number|'200'
newline|'\n'
name|'read_acl'
op|'='
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'x-container-read'"
op|')'
newline|'\n'
name|'write_acl'
op|'='
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'x-container-write'"
op|')'
newline|'\n'
name|'container_size'
op|'='
name|'resp'
op|'.'
name|'getheader'
op|'('
string|"'X-Container-Object-Count'"
op|')'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
name|'elif'
name|'resp'
op|'.'
name|'status'
op|'=='
number|'404'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'result_code'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                            '
name|'result_code'
op|'='
number|'404'
newline|'\n'
dedent|''
name|'elif'
name|'result_code'
op|'!='
number|'404'
op|':'
newline|'\n'
indent|'                            '
name|'result_code'
op|'='
op|'-'
number|'1'
newline|'\n'
dedent|''
dedent|''
name|'elif'
name|'resp'
op|'.'
name|'status'
op|'=='
number|'507'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'error_limit'
op|'('
name|'node'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'result_code'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'attempts_left'
op|'-='
number|'1'
newline|'\n'
name|'if'
name|'attempts_left'
op|'<='
number|'0'
op|':'
newline|'\n'
indent|'                            '
name|'break'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'TimeoutError'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'exception_occurred'
op|'('
name|'node'
op|','
name|'_'
op|'('
string|"'Container'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Trying to get container info for %s'"
op|')'
op|'%'
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
name|'and'
name|'result_code'
name|'in'
op|'('
number|'200'
op|','
number|'404'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'result_code'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'                '
name|'cache_timeout'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'recheck_container_existence'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'cache_timeout'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'recheck_container_existence'
op|'*'
number|'0.1'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'set'
op|'('
name|'cache_key'
op|','
nl|'\n'
op|'{'
string|"'status'"
op|':'
name|'result_code'
op|','
nl|'\n'
string|"'read_acl'"
op|':'
name|'read_acl'
op|','
nl|'\n'
string|"'write_acl'"
op|':'
name|'write_acl'
op|','
nl|'\n'
string|"'container_size'"
op|':'
name|'container_size'
op|'}'
op|','
nl|'\n'
name|'timeout'
op|'='
name|'cache_timeout'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'result_code'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'partition'
op|','
name|'nodes'
op|','
name|'read_acl'
op|','
name|'write_acl'
newline|'\n'
dedent|''
name|'return'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
newline|'\n'
nl|'\n'
DECL|member|iter_nodes
dedent|''
name|'def'
name|'iter_nodes'
op|'('
name|'self'
op|','
name|'partition'
op|','
name|'nodes'
op|','
name|'ring'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Node iterator that will first iterate over the normal nodes for a\n        partition and then the handoff partitions for the node.\n\n        :param partition: partition to iterate nodes for\n        :param nodes: list of node dicts from the ring\n        :param ring: ring to get handoff nodes from\n        """'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'self'
op|'.'
name|'error_limited'
op|'('
name|'node'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'yield'
name|'node'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'node'
name|'in'
name|'ring'
op|'.'
name|'get_more_nodes'
op|'('
name|'partition'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'self'
op|'.'
name|'error_limited'
op|'('
name|'node'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'yield'
name|'node'
newline|'\n'
nl|'\n'
DECL|member|_make_request
dedent|''
dedent|''
dedent|''
name|'def'
name|'_make_request'
op|'('
name|'self'
op|','
name|'nodes'
op|','
name|'part'
op|','
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|','
name|'query'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'ConnectionTimeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'conn_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'='
name|'http_connect'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'part'
op|','
name|'method'
op|','
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|','
name|'query_string'
op|'='
name|'query'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'node'
op|'='
name|'node'
newline|'\n'
dedent|''
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'if'
number|'200'
op|'<='
name|'resp'
op|'.'
name|'status'
op|'<'
number|'500'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'resp'
op|'.'
name|'status'
op|','
name|'resp'
op|'.'
name|'reason'
op|','
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'resp'
op|'.'
name|'status'
op|'=='
number|'507'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'error_limit'
op|'('
name|'node'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'error_limit'
op|'('
name|'node'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'exception_occurred'
op|'('
name|'node'
op|','
name|'self'
op|'.'
name|'server_type'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Trying to %(method)s %(path)s'"
op|')'
op|'%'
nl|'\n'
op|'{'
string|"'method'"
op|':'
name|'method'
op|','
string|"'path'"
op|':'
name|'path'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|make_requests
dedent|''
dedent|''
dedent|''
name|'def'
name|'make_requests'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'ring'
op|','
name|'part'
op|','
name|'method'
op|','
name|'path'
op|','
name|'headers'
op|','
nl|'\n'
name|'query_string'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sends an HTTP request to multiple nodes and aggregates the results.\n        It attempts the primary nodes concurrently, then iterates over the\n        handoff nodes as needed.\n        """'
newline|'\n'
name|'nodes'
op|'='
name|'self'
op|'.'
name|'iter_nodes'
op|'('
name|'part'
op|','
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'part'
op|')'
op|','
name|'ring'
op|')'
newline|'\n'
name|'pile'
op|'='
name|'GreenPile'
op|'('
name|'ring'
op|'.'
name|'replica_count'
op|')'
newline|'\n'
name|'for'
name|'head'
name|'in'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'pile'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'_make_request'
op|','
name|'nodes'
op|','
name|'part'
op|','
name|'method'
op|','
name|'path'
op|','
nl|'\n'
name|'head'
op|','
name|'query_string'
op|')'
newline|'\n'
dedent|''
name|'response'
op|'='
op|'['
name|'resp'
name|'for'
name|'resp'
name|'in'
name|'pile'
name|'if'
name|'resp'
op|']'
newline|'\n'
name|'while'
name|'len'
op|'('
name|'response'
op|')'
op|'<'
name|'ring'
op|'.'
name|'replica_count'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'.'
name|'append'
op|'('
op|'('
number|'503'
op|','
string|"''"
op|','
string|"''"
op|')'
op|')'
newline|'\n'
dedent|''
name|'statuses'
op|','
name|'reasons'
op|','
name|'bodies'
op|'='
name|'zip'
op|'('
op|'*'
name|'response'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'best_response'
op|'('
name|'req'
op|','
name|'statuses'
op|','
name|'reasons'
op|','
name|'bodies'
op|','
nl|'\n'
string|"'%s %s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'server_type'
op|','
name|'req'
op|'.'
name|'method'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|best_response
dedent|''
name|'def'
name|'best_response'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'statuses'
op|','
name|'reasons'
op|','
name|'bodies'
op|','
name|'server_type'
op|','
nl|'\n'
name|'etag'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Given a list of responses from several servers, choose the best to\n        return to the API.\n\n        :param req: webob.Request object\n        :param statuses: list of statuses returned\n        :param reasons: list of reasons for each status\n        :param bodies: bodies of each response\n        :param server_type: type of server the responses came from\n        :param etag: etag\n        :returns: webob.Response object with the correct status, body, etc. set\n        """'
newline|'\n'
name|'resp'
op|'='
name|'Response'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'statuses'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'hundred'
name|'in'
op|'('
number|'200'
op|','
number|'300'
op|','
number|'400'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'hstatuses'
op|'='
op|'['
name|'s'
name|'for'
name|'s'
name|'in'
name|'statuses'
name|'if'
name|'hundred'
op|'<='
name|'s'
op|'<'
name|'hundred'
op|'+'
number|'100'
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'hstatuses'
op|')'
op|'>'
name|'len'
op|'('
name|'statuses'
op|')'
op|'/'
number|'2'
op|':'
newline|'\n'
indent|'                    '
name|'status'
op|'='
name|'max'
op|'('
name|'hstatuses'
op|')'
newline|'\n'
name|'status_index'
op|'='
name|'statuses'
op|'.'
name|'index'
op|'('
name|'status'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'status'
op|'='
string|"'%s %s'"
op|'%'
op|'('
name|'status'
op|','
name|'reasons'
op|'['
name|'status_index'
op|']'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'body'
op|'='
name|'bodies'
op|'['
name|'status_index'
op|']'
newline|'\n'
name|'resp'
op|'.'
name|'content_type'
op|'='
string|"'text/plain'"
newline|'\n'
name|'if'
name|'etag'
op|':'
newline|'\n'
indent|'                        '
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'etag'"
op|']'
op|'='
name|'etag'
op|'.'
name|'strip'
op|'('
string|'\'"\''
op|')'
newline|'\n'
dedent|''
name|'return'
name|'resp'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|"'%(type)s returning 503 for %(statuses)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'type'"
op|':'
name|'server_type'
op|','
string|"'statuses'"
op|':'
name|'statuses'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'status'
op|'='
string|"'503 Internal Server Error'"
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
DECL|member|GET
name|'def'
name|'GET'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handler for HTTP GET requests."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'GETorHEAD'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
DECL|member|HEAD
name|'def'
name|'HEAD'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handler for HTTP HEAD requests."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'GETorHEAD'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
DECL|member|GETorHEAD_base
dedent|''
name|'def'
name|'GETorHEAD_base'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'server_type'
op|','
name|'partition'
op|','
name|'nodes'
op|','
name|'path'
op|','
nl|'\n'
name|'attempts'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Base handler for HTTP GET or HEAD requests.\n\n        :param req: webob.Request object\n        :param server_type: server type\n        :param partition: partition\n        :param nodes: nodes\n        :param path: path for the request\n        :param attempts: number of attempts to try\n        :returns: webob.Response object\n        """'
newline|'\n'
name|'statuses'
op|'='
op|'['
op|']'
newline|'\n'
name|'reasons'
op|'='
op|'['
op|']'
newline|'\n'
name|'bodies'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'statuses'
op|')'
op|'>='
name|'attempts'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'error_limited'
op|'('
name|'node'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'ConnectionTimeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'conn_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'='
name|'http_connect'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'partition'
op|','
name|'req'
op|'.'
name|'method'
op|','
name|'path'
op|','
nl|'\n'
name|'headers'
op|'='
name|'req'
op|'.'
name|'headers'
op|','
nl|'\n'
name|'query_string'
op|'='
name|'req'
op|'.'
name|'query_string'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'source'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'TimeoutError'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'exception_occurred'
op|'('
name|'node'
op|','
name|'server_type'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Trying to %(method)s %(path)s'"
op|')'
op|'%'
nl|'\n'
op|'{'
string|"'method'"
op|':'
name|'req'
op|'.'
name|'method'
op|','
string|"'path'"
op|':'
name|'req'
op|'.'
name|'path'
op|'}'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'source'
op|'.'
name|'status'
op|'=='
number|'507'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'error_limit'
op|'('
name|'node'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'if'
number|'200'
op|'<='
name|'source'
op|'.'
name|'status'
op|'<='
number|'399'
op|':'
newline|'\n'
comment|"# 404 if we know we don't have a synced copy"
nl|'\n'
indent|'                '
name|'if'
name|'not'
name|'float'
op|'('
name|'source'
op|'.'
name|'getheader'
op|'('
string|"'X-PUT-Timestamp'"
op|','
string|"'1'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'statuses'
op|'.'
name|'append'
op|'('
number|'404'
op|')'
newline|'\n'
name|'reasons'
op|'.'
name|'append'
op|'('
string|"''"
op|')'
newline|'\n'
name|'bodies'
op|'.'
name|'append'
op|'('
string|"''"
op|')'
newline|'\n'
name|'source'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'GET'"
name|'and'
name|'source'
op|'.'
name|'status'
name|'in'
op|'('
number|'200'
op|','
number|'206'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'res'
op|'='
name|'Response'
op|'('
name|'request'
op|'='
name|'req'
op|','
name|'conditional_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'res'
op|'.'
name|'bytes_transferred'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|function|file_iter
name|'def'
name|'file_iter'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                            '
name|'with'
name|'ChunkReadTimeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                                '
name|'chunk'
op|'='
name|'source'
op|'.'
name|'read'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_chunk_size'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'chunk'
op|':'
newline|'\n'
indent|'                                '
name|'break'
newline|'\n'
dedent|''
name|'yield'
name|'chunk'
newline|'\n'
name|'res'
op|'.'
name|'bytes_transferred'
op|'+='
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'GeneratorExit'
op|':'
newline|'\n'
indent|'                        '
name|'res'
op|'.'
name|'client_disconnect'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'warn'
op|'('
name|'_'
op|'('
string|"'Client disconnected on read'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'TimeoutError'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'exception_occurred'
op|'('
name|'node'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Trying to read during GET of %s'"
op|')'
op|'%'
name|'req'
op|'.'
name|'path'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'res'
op|'.'
name|'app_iter'
op|'='
name|'file_iter'
op|'('
op|')'
newline|'\n'
name|'update_headers'
op|'('
name|'res'
op|','
name|'source'
op|'.'
name|'getheaders'
op|'('
op|')'
op|')'
newline|'\n'
name|'res'
op|'.'
name|'status'
op|'='
name|'source'
op|'.'
name|'status'
newline|'\n'
name|'res'
op|'.'
name|'content_length'
op|'='
name|'source'
op|'.'
name|'getheader'
op|'('
string|"'Content-Length'"
op|')'
newline|'\n'
name|'if'
name|'source'
op|'.'
name|'getheader'
op|'('
string|"'Content-Type'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'res'
op|'.'
name|'charset'
op|'='
name|'None'
newline|'\n'
name|'res'
op|'.'
name|'content_type'
op|'='
name|'source'
op|'.'
name|'getheader'
op|'('
string|"'Content-Type'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'res'
newline|'\n'
dedent|''
name|'elif'
number|'200'
op|'<='
name|'source'
op|'.'
name|'status'
op|'<='
number|'399'
op|':'
newline|'\n'
indent|'                '
name|'res'
op|'='
name|'status_map'
op|'['
name|'source'
op|'.'
name|'status'
op|']'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
name|'update_headers'
op|'('
name|'res'
op|','
name|'source'
op|'.'
name|'getheaders'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'HEAD'"
op|':'
newline|'\n'
indent|'                    '
name|'res'
op|'.'
name|'content_length'
op|'='
name|'source'
op|'.'
name|'getheader'
op|'('
string|"'Content-Length'"
op|')'
newline|'\n'
name|'if'
name|'source'
op|'.'
name|'getheader'
op|'('
string|"'Content-Type'"
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'res'
op|'.'
name|'charset'
op|'='
name|'None'
newline|'\n'
name|'res'
op|'.'
name|'content_type'
op|'='
name|'source'
op|'.'
name|'getheader'
op|'('
string|"'Content-Type'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'res'
newline|'\n'
dedent|''
name|'statuses'
op|'.'
name|'append'
op|'('
name|'source'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'reasons'
op|'.'
name|'append'
op|'('
name|'source'
op|'.'
name|'reason'
op|')'
newline|'\n'
name|'bodies'
op|'.'
name|'append'
op|'('
name|'source'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'source'
op|'.'
name|'status'
op|'>='
number|'500'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'error_occurred'
op|'('
name|'node'
op|','
name|'_'
op|'('
string|"'ERROR %(status)d %(body)s '"
string|"'From %(type)s Server'"
op|')'
op|'%'
op|'{'
string|"'status'"
op|':'
name|'source'
op|'.'
name|'status'
op|','
nl|'\n'
string|"'body'"
op|':'
name|'bodies'
op|'['
op|'-'
number|'1'
op|']'
op|'['
op|':'
number|'1024'
op|']'
op|','
string|"'type'"
op|':'
name|'server_type'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'self'
op|'.'
name|'best_response'
op|'('
name|'req'
op|','
name|'statuses'
op|','
name|'reasons'
op|','
name|'bodies'
op|','
nl|'\n'
string|"'%s %s'"
op|'%'
op|'('
name|'server_type'
op|','
name|'req'
op|'.'
name|'method'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ObjectController
dedent|''
dedent|''
name|'class'
name|'ObjectController'
op|'('
name|'Controller'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""WSGI controller for object requests."""'
newline|'\n'
DECL|variable|server_type
name|'server_type'
op|'='
name|'_'
op|'('
string|"'Object'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'account_name'
op|','
name|'container_name'
op|','
name|'object_name'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Controller'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'account_name'
op|'='
name|'unquote'
op|'('
name|'account_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'unquote'
op|'('
name|'container_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'unquote'
op|'('
name|'object_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|GETorHEAD
dedent|''
name|'def'
name|'GETorHEAD'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handle HTTP GET or HEAD requests."""'
newline|'\n'
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'acl'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
op|'['
number|'2'
op|']'
newline|'\n'
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'aresp'
newline|'\n'
dedent|''
dedent|''
name|'partition'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'shuffle'
op|'('
name|'nodes'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'GETorHEAD_base'
op|'('
name|'req'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
name|'partition'
op|','
nl|'\n'
name|'self'
op|'.'
name|'iter_nodes'
op|'('
name|'partition'
op|','
name|'nodes'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|')'
op|','
nl|'\n'
name|'req'
op|'.'
name|'path_info'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|'.'
name|'replica_count'
op|')'
newline|'\n'
comment|'# If we get a 416 Requested Range Not Satisfiable we have to check if'
nl|'\n'
comment|'# we were actually requesting a manifest object and then redo the range'
nl|'\n'
comment|'# request on the whole object.'
nl|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'=='
number|'416'
op|':'
newline|'\n'
indent|'            '
name|'req_range'
op|'='
name|'req'
op|'.'
name|'range'
newline|'\n'
name|'req'
op|'.'
name|'range'
op|'='
name|'None'
newline|'\n'
name|'resp2'
op|'='
name|'self'
op|'.'
name|'GETorHEAD_base'
op|'('
name|'req'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
name|'partition'
op|','
nl|'\n'
name|'self'
op|'.'
name|'iter_nodes'
op|'('
name|'partition'
op|','
name|'nodes'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|')'
op|','
nl|'\n'
name|'req'
op|'.'
name|'path_info'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|'.'
name|'replica_count'
op|')'
newline|'\n'
name|'if'
string|"'x-object-manifest'"
name|'not'
name|'in'
name|'resp2'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'resp'
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'resp2'
newline|'\n'
name|'req'
op|'.'
name|'range'
op|'='
name|'req_range'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'x-object-manifest'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'lcontainer'
op|','
name|'lprefix'
op|'='
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-object-manifest'"
op|']'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'1'
op|')'
newline|'\n'
name|'lpartition'
op|','
name|'lnodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'lcontainer'
op|')'
newline|'\n'
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'listing'
op|'='
op|'['
op|']'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'lreq'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/%s/%s?prefix=%s&format=json&marker=%s'"
op|'%'
nl|'\n'
op|'('
name|'quote'
op|'('
name|'self'
op|'.'
name|'account_name'
op|')'
op|','
name|'quote'
op|'('
name|'lcontainer'
op|')'
op|','
nl|'\n'
name|'quote'
op|'('
name|'lprefix'
op|')'
op|','
name|'quote'
op|'('
name|'marker'
op|')'
op|')'
op|')'
newline|'\n'
name|'lresp'
op|'='
name|'self'
op|'.'
name|'GETorHEAD_base'
op|'('
name|'lreq'
op|','
name|'_'
op|'('
string|"'Container'"
op|')'
op|','
name|'lpartition'
op|','
nl|'\n'
name|'lnodes'
op|','
name|'lreq'
op|'.'
name|'path_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'replica_count'
op|')'
newline|'\n'
name|'if'
name|'lresp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                    '
name|'lresp'
op|'='
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
name|'lresp'
op|'.'
name|'headers'
op|'['
string|"'X-Object-Manifest'"
op|']'
op|'='
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-object-manifest'"
op|']'
newline|'\n'
name|'return'
name|'lresp'
newline|'\n'
dedent|''
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'                    '
name|'req'
op|'.'
name|'acl'
op|'='
name|'lresp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-container-read'"
op|')'
newline|'\n'
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'aresp'
newline|'\n'
dedent|''
dedent|''
name|'sublisting'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'lresp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'sublisting'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'listing'
op|'.'
name|'extend'
op|'('
name|'sublisting'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'listing'
op|')'
op|'>'
name|'CONTAINER_LISTING_LIMIT'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'marker'
op|'='
name|'sublisting'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'name'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'listing'
op|')'
op|'>'
name|'CONTAINER_LISTING_LIMIT'
op|':'
newline|'\n'
comment|'# We will serve large objects with a ton of segments with'
nl|'\n'
comment|'# chunked transfer encoding.'
nl|'\n'
nl|'\n'
DECL|function|listing_iter
indent|'                '
name|'def'
name|'listing_iter'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                        '
name|'lreq'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/%s/%s?prefix=%s&format=json&marker=%s'"
op|'%'
nl|'\n'
op|'('
name|'quote'
op|'('
name|'self'
op|'.'
name|'account_name'
op|')'
op|','
name|'quote'
op|'('
name|'lcontainer'
op|')'
op|','
nl|'\n'
name|'quote'
op|'('
name|'lprefix'
op|')'
op|','
name|'quote'
op|'('
name|'marker'
op|')'
op|')'
op|')'
newline|'\n'
name|'lresp'
op|'='
name|'self'
op|'.'
name|'GETorHEAD_base'
op|'('
name|'lreq'
op|','
name|'_'
op|'('
string|"'Container'"
op|')'
op|','
nl|'\n'
name|'lpartition'
op|','
name|'lnodes'
op|','
name|'lreq'
op|'.'
name|'path_info'
op|','
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'replica_count'
op|')'
newline|'\n'
name|'if'
name|'lresp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'!='
number|'2'
op|':'
newline|'\n'
indent|'                            '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|"'Object manifest GET could not '"
nl|'\n'
string|"'continue listing: %s %s'"
op|')'
op|'%'
nl|'\n'
op|'('
name|'req'
op|'.'
name|'path'
op|','
name|'lreq'
op|'.'
name|'path'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'                            '
name|'req'
op|'.'
name|'acl'
op|'='
name|'lresp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-container-read'"
op|')'
newline|'\n'
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                                '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
string|"'Object manifest GET could '"
nl|'\n'
string|"'not continue listing: %s %s'"
op|')'
op|'%'
nl|'\n'
op|'('
name|'req'
op|'.'
name|'path'
op|','
name|'aresp'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'sublisting'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'lresp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'sublisting'
op|':'
newline|'\n'
indent|'                            '
name|'break'
newline|'\n'
dedent|''
name|'for'
name|'obj'
name|'in'
name|'sublisting'
op|':'
newline|'\n'
indent|'                            '
name|'yield'
name|'obj'
newline|'\n'
dedent|''
name|'marker'
op|'='
name|'sublisting'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'name'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Object-Manifest'"
op|':'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-object-manifest'"
op|']'
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
name|'resp'
op|'.'
name|'content_type'
op|'}'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-object-meta-'"
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'headers'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'resp'
op|'='
name|'Response'
op|'('
name|'headers'
op|'='
name|'headers'
op|','
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'conditional_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'HEAD'"
op|':'
newline|'\n'
comment|'# These shenanigans are because webob translates the HEAD'
nl|'\n'
comment|'# request into a webob EmptyResponse for the body, which'
nl|'\n'
comment|'# has a len, which eventlet translates as needing a'
nl|'\n'
comment|'# content-length header added. So we call the original'
nl|'\n'
comment|'# webob resp for the headers but return an empty iterator'
nl|'\n'
comment|'# for the body.'
nl|'\n'
nl|'\n'
DECL|function|head_response
indent|'                    '
name|'def'
name|'head_response'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'resp'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'return'
name|'iter'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'head_response'
op|'.'
name|'status_int'
op|'='
name|'resp'
op|'.'
name|'status_int'
newline|'\n'
name|'return'
name|'head_response'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'resp'
op|'.'
name|'app_iter'
op|'='
name|'SegmentedIterable'
op|'('
name|'self'
op|','
name|'lcontainer'
op|','
nl|'\n'
name|'listing_iter'
op|'('
op|')'
op|','
name|'resp'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|"# For objects with a reasonable number of segments, we'll serve"
nl|'\n'
comment|'# them with a set content-length and computed etag.'
nl|'\n'
indent|'                '
name|'if'
name|'listing'
op|':'
newline|'\n'
indent|'                    '
name|'content_length'
op|'='
name|'sum'
op|'('
name|'o'
op|'['
string|"'bytes'"
op|']'
name|'for'
name|'o'
name|'in'
name|'listing'
op|')'
newline|'\n'
name|'last_modified'
op|'='
name|'max'
op|'('
name|'o'
op|'['
string|"'last_modified'"
op|']'
name|'for'
name|'o'
name|'in'
name|'listing'
op|')'
newline|'\n'
name|'last_modified'
op|'='
name|'datetime'
op|'('
op|'*'
name|'map'
op|'('
name|'int'
op|','
name|'re'
op|'.'
name|'split'
op|'('
string|"'[^\\d]'"
op|','
nl|'\n'
name|'last_modified'
op|')'
op|'['
op|':'
op|'-'
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
nl|'\n'
string|'\'"\''
op|'.'
name|'join'
op|'('
name|'o'
op|'['
string|"'hash'"
op|']'
name|'for'
name|'o'
name|'in'
name|'listing'
op|')'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'last_modified'
op|'='
name|'resp'
op|'.'
name|'last_modified'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
dedent|''
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Object-Manifest'"
op|':'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-object-manifest'"
op|']'
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
name|'resp'
op|'.'
name|'content_type'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
name|'content_length'
op|','
nl|'\n'
string|"'ETag'"
op|':'
name|'etag'
op|'}'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-object-meta-'"
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'headers'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'resp'
op|'='
name|'Response'
op|'('
name|'headers'
op|'='
name|'headers'
op|','
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'conditional_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'app_iter'
op|'='
name|'SegmentedIterable'
op|'('
name|'self'
op|','
name|'lcontainer'
op|','
name|'listing'
op|','
nl|'\n'
name|'resp'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'content_length'
op|'='
name|'content_length'
newline|'\n'
name|'resp'
op|'.'
name|'last_modified'
op|'='
name|'last_modified'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|GET
name|'def'
name|'GET'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handler for HTTP GET requests."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'GETorHEAD'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|HEAD
name|'def'
name|'HEAD'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handler for HTTP HEAD requests."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'GETorHEAD'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|POST
name|'def'
name|'POST'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP POST request handler."""'
newline|'\n'
name|'error_response'
op|'='
name|'check_metadata'
op|'('
name|'req'
op|','
string|"'object'"
op|')'
newline|'\n'
name|'if'
name|'error_response'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'error_response'
newline|'\n'
dedent|''
name|'container_partition'
op|','
name|'containers'
op|','
name|'_junk'
op|','
name|'req'
op|'.'
name|'acl'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'aresp'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'containers'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'partition'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'container'
name|'in'
name|'containers'
op|':'
newline|'\n'
indent|'            '
name|'nheaders'
op|'='
name|'dict'
op|'('
name|'req'
op|'.'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
name|'nheaders'
op|'['
string|"'X-Container-Host'"
op|']'
op|'='
string|"'%(ip)s:%(port)s'"
op|'%'
name|'container'
newline|'\n'
name|'nheaders'
op|'['
string|"'X-Container-Partition'"
op|']'
op|'='
name|'container_partition'
newline|'\n'
name|'nheaders'
op|'['
string|"'X-Container-Device'"
op|']'
op|'='
name|'container'
op|'['
string|"'device'"
op|']'
newline|'\n'
name|'headers'
op|'.'
name|'append'
op|'('
name|'nheaders'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'make_requests'
op|'('
name|'req'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|','
nl|'\n'
name|'partition'
op|','
string|"'POST'"
op|','
name|'req'
op|'.'
name|'path_info'
op|','
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_send_file
dedent|''
name|'def'
name|'_send_file'
op|'('
name|'self'
op|','
name|'conn'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Method for a file PUT coro"""'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'chunk'
op|'='
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'get'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'conn'
op|'.'
name|'failed'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'ChunkWriteTimeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'conn'
op|'.'
name|'send'
op|'('
name|'chunk'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'ChunkWriteTimeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'failed'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'exception_occurred'
op|'('
name|'conn'
op|'.'
name|'node'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Trying to write to %s'"
op|')'
op|'%'
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'task_done'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_connect_put_node
dedent|''
dedent|''
name|'def'
name|'_connect_put_node'
op|'('
name|'self'
op|','
name|'nodes'
op|','
name|'part'
op|','
name|'path'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Method for a file PUT connect"""'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'ConnectionTimeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'conn_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'='
name|'http_connect'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'part'
op|','
string|"'PUT'"
op|','
name|'path'
op|','
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getexpect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status'
op|'=='
number|'100'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'node'
op|'='
name|'node'
newline|'\n'
name|'return'
name|'conn'
newline|'\n'
dedent|''
name|'elif'
name|'resp'
op|'.'
name|'status'
op|'=='
number|'507'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'error_limit'
op|'('
name|'node'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'exception_occurred'
op|'('
name|'node'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Expect: 100-continue on %s'"
op|')'
op|'%'
name|'path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|PUT
name|'def'
name|'PUT'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP PUT request handler."""'
newline|'\n'
name|'container_partition'
op|','
name|'containers'
op|','
name|'_junk'
op|','
name|'req'
op|'.'
name|'acl'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'aresp'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'containers'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'partition'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
comment|"# Sometimes the 'content-type' header exists, but is set to None."
nl|'\n'
name|'content_type_manually_set'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'not'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'content-type'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'guessed_type'
op|','
name|'_junk'
op|'='
name|'mimetypes'
op|'.'
name|'guess_type'
op|'('
name|'req'
op|'.'
name|'path_info'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
name|'guessed_type'
name|'or'
string|"'application/octet-stream'"
newline|'\n'
name|'content_type_manually_set'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'error_response'
op|'='
name|'check_object_creation'
op|'('
name|'req'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'if'
name|'error_response'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'error_response'
newline|'\n'
dedent|''
name|'data_source'
op|'='
name|'iter'
op|'('
name|'lambda'
op|':'
name|'req'
op|'.'
name|'body_file'
op|'.'
name|'read'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'client_chunk_size'
op|')'
op|','
string|"''"
op|')'
newline|'\n'
name|'source_header'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Copy-From'"
op|')'
newline|'\n'
name|'if'
name|'source_header'
op|':'
newline|'\n'
indent|'            '
name|'source_header'
op|'='
name|'unquote'
op|'('
name|'source_header'
op|')'
newline|'\n'
name|'acct'
op|'='
name|'req'
op|'.'
name|'path_info'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'2'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'source_header'
op|'.'
name|'startswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'source_header'
op|'='
string|"'/'"
op|'+'
name|'source_header'
newline|'\n'
dedent|''
name|'source_header'
op|'='
string|"'/'"
op|'+'
name|'acct'
op|'+'
name|'source_header'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'src_container_name'
op|','
name|'src_obj_name'
op|'='
name|'source_header'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'3'
op|')'
op|'['
number|'2'
op|':'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'body'
op|'='
string|"'X-Copy-From header must be of the form'"
nl|'\n'
string|"'<container name>/<object name>'"
op|')'
newline|'\n'
dedent|''
name|'source_req'
op|'='
name|'req'
op|'.'
name|'copy_get'
op|'('
op|')'
newline|'\n'
name|'source_req'
op|'.'
name|'path_info'
op|'='
name|'source_header'
newline|'\n'
name|'orig_obj_name'
op|'='
name|'self'
op|'.'
name|'object_name'
newline|'\n'
name|'orig_container_name'
op|'='
name|'self'
op|'.'
name|'container_name'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'src_obj_name'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'src_container_name'
newline|'\n'
name|'source_resp'
op|'='
name|'self'
op|'.'
name|'GET'
op|'('
name|'source_req'
op|')'
newline|'\n'
name|'if'
name|'source_resp'
op|'.'
name|'status_int'
op|'>='
number|'300'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'source_resp'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'object_name'
op|'='
name|'orig_obj_name'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'orig_container_name'
newline|'\n'
name|'new_req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
nl|'\n'
name|'environ'
op|'='
name|'req'
op|'.'
name|'environ'
op|','
name|'headers'
op|'='
name|'req'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'data_source'
op|'='
name|'source_resp'
op|'.'
name|'app_iter'
newline|'\n'
name|'new_req'
op|'.'
name|'content_length'
op|'='
name|'source_resp'
op|'.'
name|'content_length'
newline|'\n'
name|'if'
name|'new_req'
op|'.'
name|'content_length'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# This indicates a transfer-encoding: chunked source object,'
nl|'\n'
comment|'# which currently only happens because there are more than'
nl|'\n'
comment|'# CONTAINER_LISTING_LIMIT segments in a segmented object. In'
nl|'\n'
comment|"# this case, we're going to refuse to do the server-side copy."
nl|'\n'
indent|'                '
name|'return'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'new_req'
op|'.'
name|'etag'
op|'='
name|'source_resp'
op|'.'
name|'etag'
newline|'\n'
comment|'# we no longer need the X-Copy-From header'
nl|'\n'
name|'del'
name|'new_req'
op|'.'
name|'headers'
op|'['
string|"'X-Copy-From'"
op|']'
newline|'\n'
name|'if'
name|'not'
name|'content_type_manually_set'
op|':'
newline|'\n'
indent|'                '
name|'new_req'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
name|'source_resp'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
newline|'\n'
dedent|''
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'source_resp'
op|'.'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-object-meta-'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'new_req'
op|'.'
name|'headers'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-object-meta-'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'new_req'
op|'.'
name|'headers'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
dedent|''
dedent|''
name|'req'
op|'='
name|'new_req'
newline|'\n'
dedent|''
name|'node_iter'
op|'='
name|'self'
op|'.'
name|'iter_nodes'
op|'('
name|'partition'
op|','
name|'nodes'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|')'
newline|'\n'
name|'pile'
op|'='
name|'GreenPile'
op|'('
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
newline|'\n'
name|'for'
name|'container'
name|'in'
name|'containers'
op|':'
newline|'\n'
indent|'            '
name|'nheaders'
op|'='
name|'dict'
op|'('
name|'req'
op|'.'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
name|'nheaders'
op|'['
string|"'X-Container-Host'"
op|']'
op|'='
string|"'%(ip)s:%(port)s'"
op|'%'
name|'container'
newline|'\n'
name|'nheaders'
op|'['
string|"'X-Container-Partition'"
op|']'
op|'='
name|'container_partition'
newline|'\n'
name|'nheaders'
op|'['
string|"'X-Container-Device'"
op|']'
op|'='
name|'container'
op|'['
string|"'device'"
op|']'
newline|'\n'
name|'nheaders'
op|'['
string|"'Expect'"
op|']'
op|'='
string|"'100-continue'"
newline|'\n'
name|'pile'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'_connect_put_node'
op|','
name|'node_iter'
op|','
name|'partition'
op|','
nl|'\n'
name|'req'
op|'.'
name|'path_info'
op|','
name|'nheaders'
op|')'
newline|'\n'
dedent|''
name|'conns'
op|'='
op|'['
name|'conn'
name|'for'
name|'conn'
name|'in'
name|'pile'
name|'if'
name|'conn'
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'conns'
op|')'
op|'<='
name|'len'
op|'('
name|'nodes'
op|')'
op|'/'
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Object PUT returning 503, %(conns)s/%(nodes)s '"
nl|'\n'
string|"'required connections'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'conns'"
op|':'
name|'len'
op|'('
name|'conns'
op|')'
op|','
string|"'nodes'"
op|':'
name|'len'
op|'('
name|'nodes'
op|')'
op|'//'
number|'2'
op|'+'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'HTTPServiceUnavailable'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'chunked'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'transfer-encoding'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'ContextPool'
op|'('
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
name|'as'
name|'pool'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'conn'
name|'in'
name|'conns'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'failed'
op|'='
name|'False'
newline|'\n'
name|'conn'
op|'.'
name|'queue'
op|'='
name|'Queue'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'put_queue_depth'
op|')'
newline|'\n'
name|'pool'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'_send_file'
op|','
name|'conn'
op|','
name|'req'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'.'
name|'bytes_transferred'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'ChunkReadTimeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'client_timeout'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'try'
op|':'
newline|'\n'
indent|'                            '
name|'chunk'
op|'='
name|'next'
op|'('
name|'data_source'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                            '
name|'if'
name|'chunked'
op|':'
newline|'\n'
indent|'                                '
op|'['
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'put'
op|'('
string|"'0\\r\\n\\r\\n'"
op|')'
name|'for'
name|'conn'
name|'in'
name|'conns'
op|']'
newline|'\n'
dedent|''
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'req'
op|'.'
name|'bytes_transferred'
op|'+='
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'bytes_transferred'
op|'>'
name|'MAX_FILE_SIZE'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'conn'
name|'in'
name|'list'
op|'('
name|'conns'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'not'
name|'conn'
op|'.'
name|'failed'
op|':'
newline|'\n'
indent|'                            '
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'put'
op|'('
string|"'%x\\r\\n%s\\r\\n'"
op|'%'
op|'('
name|'len'
op|'('
name|'chunk'
op|')'
op|','
name|'chunk'
op|')'
nl|'\n'
name|'if'
name|'chunked'
name|'else'
name|'chunk'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                            '
name|'conns'
op|'.'
name|'remove'
op|'('
name|'conn'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'len'
op|'('
name|'conns'
op|')'
op|'<='
name|'len'
op|'('
name|'nodes'
op|')'
op|'/'
number|'2'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|"'Object PUT exceptions during'"
nl|'\n'
string|"' send, %(conns)s/%(nodes)s required connections'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'conns'"
op|':'
name|'len'
op|'('
name|'conns'
op|')'
op|','
string|"'nodes'"
op|':'
name|'len'
op|'('
name|'nodes'
op|')'
op|'/'
number|'2'
op|'+'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'HTTPServiceUnavailable'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'conn'
name|'in'
name|'conns'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'unfinished_tasks'
op|':'
newline|'\n'
indent|'                        '
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'conns'
op|'='
op|'['
name|'conn'
name|'for'
name|'conn'
name|'in'
name|'conns'
name|'if'
name|'not'
name|'conn'
op|'.'
name|'failed'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'warn'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'ERROR Client read timeout (%ss)'"
op|')'
op|','
name|'err'
op|'.'
name|'seconds'
op|')'
newline|'\n'
name|'return'
name|'HTTPRequestTimeout'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'client_disconnect'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'ERROR Exception causing client disconnect'"
op|')'
op|')'
newline|'\n'
name|'return'
name|'Response'
op|'('
name|'status'
op|'='
string|"'499 Client Disconnect'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'req'
op|'.'
name|'content_length'
name|'and'
name|'req'
op|'.'
name|'bytes_transferred'
op|'<'
name|'req'
op|'.'
name|'content_length'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'client_disconnect'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'warn'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Client disconnected without sending enough data'"
op|')'
op|')'
newline|'\n'
name|'return'
name|'Response'
op|'('
name|'status'
op|'='
string|"'499 Client Disconnect'"
op|')'
newline|'\n'
dedent|''
name|'statuses'
op|'='
op|'['
op|']'
newline|'\n'
name|'reasons'
op|'='
op|'['
op|']'
newline|'\n'
name|'bodies'
op|'='
op|'['
op|']'
newline|'\n'
name|'etags'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'conn'
name|'in'
name|'conns'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'response'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'statuses'
op|'.'
name|'append'
op|'('
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'reasons'
op|'.'
name|'append'
op|'('
name|'response'
op|'.'
name|'reason'
op|')'
newline|'\n'
name|'bodies'
op|'.'
name|'append'
op|'('
name|'response'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'>='
number|'500'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'error_occurred'
op|'('
name|'conn'
op|'.'
name|'node'
op|','
nl|'\n'
name|'_'
op|'('
string|"'ERROR %(status)d %(body)s From Object Server '"
string|"'re: %(path)s'"
op|')'
op|'%'
op|'{'
string|"'status'"
op|':'
name|'response'
op|'.'
name|'status'
op|','
nl|'\n'
string|"'body'"
op|':'
name|'bodies'
op|'['
op|'-'
number|'1'
op|']'
op|'['
op|':'
number|'1024'
op|']'
op|','
string|"'path'"
op|':'
name|'req'
op|'.'
name|'path'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'elif'
number|'200'
op|'<='
name|'response'
op|'.'
name|'status'
op|'<'
number|'300'
op|':'
newline|'\n'
indent|'                        '
name|'etags'
op|'.'
name|'add'
op|'('
name|'response'
op|'.'
name|'getheader'
op|'('
string|"'etag'"
op|')'
op|'.'
name|'strip'
op|'('
string|'\'"\''
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'TimeoutError'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'exception_occurred'
op|'('
name|'conn'
op|'.'
name|'node'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Trying to get final status of PUT to %s'"
op|')'
op|'%'
name|'req'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'len'
op|'('
name|'etags'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Object servers returned %s mismatched etags'"
op|')'
op|','
name|'len'
op|'('
name|'etags'
op|')'
op|')'
newline|'\n'
name|'return'
name|'HTTPServerError'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'etag'
op|'='
name|'len'
op|'('
name|'etags'
op|')'
name|'and'
name|'etags'
op|'.'
name|'pop'
op|'('
op|')'
name|'or'
name|'None'
newline|'\n'
name|'while'
name|'len'
op|'('
name|'statuses'
op|')'
op|'<'
name|'len'
op|'('
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'statuses'
op|'.'
name|'append'
op|'('
number|'503'
op|')'
newline|'\n'
name|'reasons'
op|'.'
name|'append'
op|'('
string|"''"
op|')'
newline|'\n'
name|'bodies'
op|'.'
name|'append'
op|'('
string|"''"
op|')'
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'self'
op|'.'
name|'best_response'
op|'('
name|'req'
op|','
name|'statuses'
op|','
name|'reasons'
op|','
name|'bodies'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Object PUT'"
op|')'
op|','
name|'etag'
op|'='
name|'etag'
op|')'
newline|'\n'
name|'if'
name|'source_header'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'X-Copied-From'"
op|']'
op|'='
name|'quote'
op|'('
nl|'\n'
name|'source_header'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'2'
op|')'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-object-meta-'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'resp'
op|'.'
name|'headers'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
comment|"# reset the bytes, since the user didn't actually send anything"
nl|'\n'
dedent|''
dedent|''
name|'req'
op|'.'
name|'bytes_transferred'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'resp'
op|'.'
name|'last_modified'
op|'='
name|'float'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|DELETE
name|'def'
name|'DELETE'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP DELETE request handler."""'
newline|'\n'
name|'container_partition'
op|','
name|'containers'
op|','
name|'_junk'
op|','
name|'req'
op|'.'
name|'acl'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'aresp'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'containers'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'partition'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'container'
name|'in'
name|'containers'
op|':'
newline|'\n'
indent|'            '
name|'nheaders'
op|'='
name|'dict'
op|'('
name|'req'
op|'.'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
op|')'
newline|'\n'
name|'nheaders'
op|'['
string|"'X-Container-Host'"
op|']'
op|'='
string|"'%(ip)s:%(port)s'"
op|'%'
name|'container'
newline|'\n'
name|'nheaders'
op|'['
string|"'X-Container-Partition'"
op|']'
op|'='
name|'container_partition'
newline|'\n'
name|'nheaders'
op|'['
string|"'X-Container-Device'"
op|']'
op|'='
name|'container'
op|'['
string|"'device'"
op|']'
newline|'\n'
name|'headers'
op|'.'
name|'append'
op|'('
name|'nheaders'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'make_requests'
op|'('
name|'req'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|','
nl|'\n'
name|'partition'
op|','
string|"'DELETE'"
op|','
name|'req'
op|'.'
name|'path_info'
op|','
name|'headers'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|COPY
name|'def'
name|'COPY'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP COPY request handler."""'
newline|'\n'
name|'dest'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'Destination'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'dest'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'body'
op|'='
string|"'Destination header required'"
op|')'
newline|'\n'
dedent|''
name|'dest'
op|'='
name|'unquote'
op|'('
name|'dest'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'dest'
op|'.'
name|'startswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'dest'
op|'='
string|"'/'"
op|'+'
name|'dest'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'_junk'
op|','
name|'dest_container'
op|','
name|'dest_object'
op|'='
name|'dest'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'2'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'body'
op|'='
string|"'Destination header must be of the form '"
nl|'\n'
string|"'<container name>/<object name>'"
op|')'
newline|'\n'
dedent|''
name|'source'
op|'='
string|"'/'"
op|'+'
name|'self'
op|'.'
name|'container_name'
op|'+'
string|"'/'"
op|'+'
name|'self'
op|'.'
name|'object_name'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'dest_container'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'dest_object'
newline|'\n'
comment|'# re-write the existing request as a PUT instead of creating a new one'
nl|'\n'
comment|'# since this one is already attached to the posthooklogger'
nl|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'path_info'
op|'='
string|"'/'"
op|'+'
name|'self'
op|'.'
name|'account_name'
op|'+'
name|'dest'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Copy-From'"
op|']'
op|'='
name|'source'
newline|'\n'
name|'del'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Destination'"
op|']'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ContainerController
dedent|''
dedent|''
name|'class'
name|'ContainerController'
op|'('
name|'Controller'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""WSGI controller for container requests"""'
newline|'\n'
DECL|variable|server_type
name|'server_type'
op|'='
name|'_'
op|'('
string|"'Container'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Ensure these are all lowercase'
nl|'\n'
DECL|variable|pass_through_headers
name|'pass_through_headers'
op|'='
op|'['
string|"'x-container-read'"
op|','
string|"'x-container-write'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'account_name'
op|','
name|'container_name'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Controller'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'account_name'
op|'='
name|'unquote'
op|'('
name|'account_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'unquote'
op|'('
name|'container_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|clean_acls
dedent|''
name|'def'
name|'clean_acls'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'swift.clean_acl'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'header'
name|'in'
op|'('
string|"'x-container-read'"
op|','
string|"'x-container-write'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'header'
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                    '
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'req'
op|'.'
name|'headers'
op|'['
name|'header'
op|']'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.clean_acl'"
op|']'
op|'('
name|'header'
op|','
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
name|'header'
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|','
name|'err'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|','
name|'body'
op|'='
name|'str'
op|'('
name|'err'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|GETorHEAD
dedent|''
name|'def'
name|'GETorHEAD'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handler for HTTP GET/HEAD requests."""'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account_name'
op|')'
op|'['
number|'1'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'part'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'GETorHEAD_base'
op|'('
name|'req'
op|','
name|'_'
op|'('
string|"'Container'"
op|')'
op|','
name|'part'
op|','
name|'nodes'
op|','
nl|'\n'
name|'req'
op|'.'
name|'path_info'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'replica_count'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|':'
newline|'\n'
comment|'# set the memcache container size for ratelimiting'
nl|'\n'
indent|'            '
name|'cache_key'
op|'='
name|'get_container_memcache_key'
op|'('
name|'self'
op|'.'
name|'account_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'set'
op|'('
name|'cache_key'
op|','
nl|'\n'
op|'{'
string|"'status'"
op|':'
name|'resp'
op|'.'
name|'status_int'
op|','
nl|'\n'
string|"'read_acl'"
op|':'
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-container-read'"
op|')'
op|','
nl|'\n'
string|"'write_acl'"
op|':'
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-container-write'"
op|')'
op|','
nl|'\n'
string|"'container_size'"
op|':'
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-container-object-count'"
op|')'
op|'}'
op|','
nl|'\n'
name|'timeout'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'recheck_container_existence'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'acl'
op|'='
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-container-read'"
op|')'
newline|'\n'
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'aresp'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|GET
name|'def'
name|'GET'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handler for HTTP GET requests."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'GETorHEAD'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|HEAD
name|'def'
name|'HEAD'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handler for HTTP HEAD requests."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'GETorHEAD'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
DECL|member|PUT
name|'def'
name|'PUT'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP PUT request handler."""'
newline|'\n'
name|'error_response'
op|'='
name|'self'
op|'.'
name|'clean_acls'
op|'('
name|'req'
op|')'
name|'or'
name|'check_metadata'
op|'('
name|'req'
op|','
string|"'container'"
op|')'
newline|'\n'
name|'if'
name|'error_response'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'error_response'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'container_name'
op|')'
op|'>'
name|'MAX_CONTAINER_NAME_LENGTH'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'body'
op|'='
string|"'Container name length of %d longer than %d'"
op|'%'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'container_name'
op|')'
op|','
name|'MAX_CONTAINER_NAME_LENGTH'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
dedent|''
name|'account_partition'
op|','
name|'accounts'
op|'='
name|'self'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account_name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'accounts'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'container_partition'
op|','
name|'containers'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'account'
name|'in'
name|'accounts'
op|':'
newline|'\n'
indent|'            '
name|'nheaders'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'x-cf-trans-id'"
op|':'
name|'self'
op|'.'
name|'trans_id'
op|','
nl|'\n'
string|"'X-Account-Host'"
op|':'
string|"'%(ip)s:%(port)s'"
op|'%'
name|'account'
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
name|'account_partition'
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
name|'account'
op|'['
string|"'device'"
op|']'
op|'}'
newline|'\n'
name|'nheaders'
op|'.'
name|'update'
op|'('
name|'value'
name|'for'
name|'value'
name|'in'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
nl|'\n'
name|'if'
name|'value'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
name|'self'
op|'.'
name|'pass_through_headers'
name|'or'
nl|'\n'
name|'value'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-container-meta-'"
op|')'
op|')'
newline|'\n'
name|'headers'
op|'.'
name|'append'
op|'('
name|'nheaders'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|':'
newline|'\n'
indent|'            '
name|'cache_key'
op|'='
name|'get_container_memcache_key'
op|'('
name|'self'
op|'.'
name|'account_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'delete'
op|'('
name|'cache_key'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'make_requests'
op|'('
name|'req'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|','
nl|'\n'
name|'container_partition'
op|','
string|"'PUT'"
op|','
name|'req'
op|'.'
name|'path_info'
op|','
name|'headers'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
DECL|member|POST
name|'def'
name|'POST'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP POST request handler."""'
newline|'\n'
name|'error_response'
op|'='
name|'self'
op|'.'
name|'clean_acls'
op|'('
name|'req'
op|')'
name|'or'
name|'check_metadata'
op|'('
name|'req'
op|','
string|"'container'"
op|')'
newline|'\n'
name|'if'
name|'error_response'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'error_response'
newline|'\n'
dedent|''
name|'account_partition'
op|','
name|'accounts'
op|'='
name|'self'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account_name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'accounts'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'container_partition'
op|','
name|'containers'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'x-cf-trans-id'"
op|':'
name|'self'
op|'.'
name|'trans_id'
op|'}'
newline|'\n'
name|'headers'
op|'.'
name|'update'
op|'('
name|'value'
name|'for'
name|'value'
name|'in'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
nl|'\n'
name|'if'
name|'value'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
name|'self'
op|'.'
name|'pass_through_headers'
name|'or'
nl|'\n'
name|'value'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-container-meta-'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|':'
newline|'\n'
indent|'            '
name|'cache_key'
op|'='
name|'get_container_memcache_key'
op|'('
name|'self'
op|'.'
name|'account_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'delete'
op|'('
name|'cache_key'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'make_requests'
op|'('
name|'req'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|','
nl|'\n'
name|'container_partition'
op|','
string|"'POST'"
op|','
name|'req'
op|'.'
name|'path_info'
op|','
nl|'\n'
op|'['
name|'headers'
op|']'
op|'*'
name|'len'
op|'('
name|'containers'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
DECL|member|DELETE
name|'def'
name|'DELETE'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP DELETE request handler."""'
newline|'\n'
name|'account_partition'
op|','
name|'accounts'
op|'='
name|'self'
op|'.'
name|'account_info'
op|'('
name|'self'
op|'.'
name|'account_name'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'accounts'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'container_partition'
op|','
name|'containers'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'account'
name|'in'
name|'accounts'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'.'
name|'append'
op|'('
op|'{'
string|"'X-Timestamp'"
op|':'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'X-Cf-Trans-Id'"
op|':'
name|'self'
op|'.'
name|'trans_id'
op|','
nl|'\n'
string|"'X-Account-Host'"
op|':'
string|"'%(ip)s:%(port)s'"
op|'%'
name|'account'
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
name|'account_partition'
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
name|'account'
op|'['
string|"'device'"
op|']'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|':'
newline|'\n'
indent|'            '
name|'cache_key'
op|'='
name|'get_container_memcache_key'
op|'('
name|'self'
op|'.'
name|'account_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'delete'
op|'('
name|'cache_key'
op|')'
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_requests'
op|'('
name|'req'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|','
nl|'\n'
name|'container_partition'
op|','
string|"'DELETE'"
op|','
name|'req'
op|'.'
name|'path_info'
op|','
name|'headers'
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'=='
number|'202'
op|':'
comment|'# Indicates no server had the container'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AccountController
dedent|''
dedent|''
name|'class'
name|'AccountController'
op|'('
name|'Controller'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""WSGI controller for account requests"""'
newline|'\n'
DECL|variable|server_type
name|'server_type'
op|'='
name|'_'
op|'('
string|"'Account'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'account_name'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Controller'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'account_name'
op|'='
name|'unquote'
op|'('
name|'account_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|GETorHEAD
dedent|''
name|'def'
name|'GETorHEAD'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handler for HTTP GET/HEAD requests."""'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
name|'self'
op|'.'
name|'account_name'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'GETorHEAD_base'
op|'('
name|'req'
op|','
name|'_'
op|'('
string|"'Account'"
op|')'
op|','
name|'partition'
op|','
name|'nodes'
op|','
nl|'\n'
name|'req'
op|'.'
name|'path_info'
op|'.'
name|'rstrip'
op|'('
string|"'/'"
op|')'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'replica_count'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
DECL|member|PUT
name|'def'
name|'PUT'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP PUT request handler."""'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPMethodNotAllowed'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'error_response'
op|'='
name|'check_metadata'
op|'('
name|'req'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'if'
name|'error_response'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'error_response'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'account_name'
op|')'
op|'>'
name|'MAX_ACCOUNT_NAME_LENGTH'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'body'
op|'='
string|"'Account name length of %d longer than %d'"
op|'%'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'account_name'
op|')'
op|','
name|'MAX_ACCOUNT_NAME_LENGTH'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
dedent|''
name|'account_partition'
op|','
name|'accounts'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
name|'self'
op|'.'
name|'account_name'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'x-cf-trans-id'"
op|':'
name|'self'
op|'.'
name|'trans_id'
op|'}'
newline|'\n'
name|'headers'
op|'.'
name|'update'
op|'('
name|'value'
name|'for'
name|'value'
name|'in'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
nl|'\n'
name|'if'
name|'value'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-account-meta-'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'delete'
op|'('
string|"'account%s'"
op|'%'
name|'req'
op|'.'
name|'path_info'
op|'.'
name|'rstrip'
op|'('
string|"'/'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'make_requests'
op|'('
name|'req'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|','
name|'account_partition'
op|','
nl|'\n'
string|"'PUT'"
op|','
name|'req'
op|'.'
name|'path_info'
op|','
op|'['
name|'headers'
op|']'
op|'*'
name|'len'
op|'('
name|'accounts'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
DECL|member|POST
name|'def'
name|'POST'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP POST request handler."""'
newline|'\n'
name|'error_response'
op|'='
name|'check_metadata'
op|'('
name|'req'
op|','
string|"'account'"
op|')'
newline|'\n'
name|'if'
name|'error_response'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'error_response'
newline|'\n'
dedent|''
name|'account_partition'
op|','
name|'accounts'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
name|'self'
op|'.'
name|'account_name'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'X-CF-Trans-Id'"
op|':'
name|'self'
op|'.'
name|'trans_id'
op|'}'
newline|'\n'
name|'headers'
op|'.'
name|'update'
op|'('
name|'value'
name|'for'
name|'value'
name|'in'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
nl|'\n'
name|'if'
name|'value'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-account-meta-'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'delete'
op|'('
string|"'account%s'"
op|'%'
name|'req'
op|'.'
name|'path_info'
op|'.'
name|'rstrip'
op|'('
string|"'/'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'make_requests'
op|'('
name|'req'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|','
name|'account_partition'
op|','
nl|'\n'
string|"'POST'"
op|','
name|'req'
op|'.'
name|'path_info'
op|','
op|'['
name|'headers'
op|']'
op|'*'
name|'len'
op|'('
name|'accounts'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
DECL|member|DELETE
name|'def'
name|'DELETE'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP DELETE request handler."""'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_account_management'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPMethodNotAllowed'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'account_partition'
op|','
name|'accounts'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
name|'self'
op|'.'
name|'account_name'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'X-CF-Trans-Id'"
op|':'
name|'self'
op|'.'
name|'trans_id'
op|'}'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'memcache'
op|'.'
name|'delete'
op|'('
string|"'account%s'"
op|'%'
name|'req'
op|'.'
name|'path_info'
op|'.'
name|'rstrip'
op|'('
string|"'/'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'make_requests'
op|'('
name|'req'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'account_ring'
op|','
name|'account_partition'
op|','
nl|'\n'
string|"'DELETE'"
op|','
name|'req'
op|'.'
name|'path_info'
op|','
op|'['
name|'headers'
op|']'
op|'*'
name|'len'
op|'('
name|'accounts'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|BaseApplication
dedent|''
dedent|''
name|'class'
name|'BaseApplication'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Base WSGI application for the proxy server"""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'conf'
op|','
name|'memcache'
op|'='
name|'None'
op|','
name|'logger'
op|'='
name|'None'
op|','
name|'account_ring'
op|'='
name|'None'
op|','
nl|'\n'
name|'container_ring'
op|'='
name|'None'
op|','
name|'object_ring'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'conf'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'conf'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'if'
name|'logger'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'='
name|'get_logger'
op|'('
name|'conf'
op|','
name|'log_route'
op|'='
string|"'proxy-server'"
op|')'
newline|'\n'
name|'access_log_conf'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'key'
name|'in'
op|'('
string|"'log_facility'"
op|','
string|"'log_name'"
op|','
string|"'log_level'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'value'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'access_'"
op|'+'
name|'key'
op|','
name|'conf'
op|'.'
name|'get'
op|'('
name|'key'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'if'
name|'value'
op|':'
newline|'\n'
indent|'                    '
name|'access_log_conf'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'access_logger'
op|'='
name|'get_logger'
op|'('
name|'access_log_conf'
op|','
nl|'\n'
name|'log_route'
op|'='
string|"'proxy-access'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'='
name|'self'
op|'.'
name|'access_logger'
op|'='
name|'logger'
newline|'\n'
nl|'\n'
dedent|''
name|'swift_dir'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'swift_dir'"
op|','
string|"'/etc/swift'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'node_timeout'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'node_timeout'"
op|','
number|'10'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn_timeout'
op|'='
name|'float'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'conn_timeout'"
op|','
number|'0.5'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client_timeout'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'client_timeout'"
op|','
number|'60'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'put_queue_depth'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'put_queue_depth'"
op|','
number|'10'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'object_chunk_size'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'object_chunk_size'"
op|','
number|'65536'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client_chunk_size'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'client_chunk_size'"
op|','
number|'65536'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_headers'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'log_headers'"
op|')'
op|'=='
string|"'True'"
newline|'\n'
name|'self'
op|'.'
name|'error_suppression_interval'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'error_suppression_interval'"
op|','
number|'60'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'error_suppression_limit'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'error_suppression_limit'"
op|','
number|'10'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'recheck_container_existence'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'recheck_container_existence'"
op|','
number|'60'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'recheck_account_existence'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'recheck_account_existence'"
op|','
number|'60'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'allow_account_management'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'allow_account_management'"
op|','
string|"'false'"
op|')'
op|'.'
name|'lower'
op|'('
op|')'
op|'=='
string|"'true'"
newline|'\n'
name|'self'
op|'.'
name|'resellers_conf'
op|'='
name|'ConfigParser'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'resellers_conf'
op|'.'
name|'read'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'swift_dir'
op|','
string|"'resellers.conf'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'object_ring'
op|'='
name|'object_ring'
name|'or'
name|'Ring'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'swift_dir'
op|','
string|"'object.ring.gz'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_ring'
op|'='
name|'container_ring'
name|'or'
name|'Ring'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'swift_dir'
op|','
string|"'container.ring.gz'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'account_ring'
op|'='
name|'account_ring'
name|'or'
name|'Ring'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'swift_dir'
op|','
string|"'account.ring.gz'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'memcache'
op|'='
name|'memcache'
newline|'\n'
name|'mimetypes'
op|'.'
name|'init'
op|'('
name|'mimetypes'
op|'.'
name|'knownfiles'
op|'+'
nl|'\n'
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'swift_dir'
op|','
string|"'mime.types'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_controller
dedent|''
name|'def'
name|'get_controller'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get the controller to handle a request.\n\n        :param path: path from request\n        :returns: tuple of (controller class, path dictionary)\n\n        :raises: ValueError (thrown by split_path) id given invalid path\n        """'
newline|'\n'
name|'version'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|'='
name|'split_path'
op|'('
name|'path'
op|','
number|'1'
op|','
number|'4'
op|','
name|'True'
op|')'
newline|'\n'
name|'d'
op|'='
name|'dict'
op|'('
name|'version'
op|'='
name|'version'
op|','
nl|'\n'
name|'account_name'
op|'='
name|'account'
op|','
nl|'\n'
name|'container_name'
op|'='
name|'container'
op|','
nl|'\n'
name|'object_name'
op|'='
name|'obj'
op|')'
newline|'\n'
name|'if'
name|'obj'
name|'and'
name|'container'
name|'and'
name|'account'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'ObjectController'
op|','
name|'d'
newline|'\n'
dedent|''
name|'elif'
name|'container'
name|'and'
name|'account'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'ContainerController'
op|','
name|'d'
newline|'\n'
dedent|''
name|'elif'
name|'account'
name|'and'
name|'not'
name|'container'
name|'and'
name|'not'
name|'obj'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'AccountController'
op|','
name|'d'
newline|'\n'
dedent|''
name|'return'
name|'None'
op|','
name|'d'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        WSGI entry point.\n        Wraps env in webob.Request object and passes it down.\n\n        :param env: WSGI environment dictionary\n        :param start_response: WSGI callable\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'memcache'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'memcache'
op|'='
name|'cache_from_env'
op|'('
name|'env'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'self'
op|'.'
name|'update_request'
op|'('
name|'Request'
op|'('
name|'env'
op|')'
op|')'
newline|'\n'
name|'if'
string|"'eventlet.posthooks'"
name|'in'
name|'env'
op|':'
newline|'\n'
indent|'                '
name|'env'
op|'['
string|"'eventlet.posthooks'"
op|']'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
name|'self'
op|'.'
name|'posthooklogger'
op|','
op|'('
name|'req'
op|','
op|')'
op|','
op|'{'
op|'}'
op|')'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Lack of posthook support means that we have to log on the'
nl|'\n'
comment|'# start of the response, rather than after all the data has'
nl|'\n'
comment|'# been sent. This prevents logging client disconnects'
nl|'\n'
comment|'# differently than full transmissions.'
nl|'\n'
indent|'                '
name|'response'
op|'='
name|'self'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'posthooklogger'
op|'('
name|'env'
op|','
name|'req'
op|')'
newline|'\n'
name|'return'
name|'response'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'print'
string|'"EXCEPTION IN __call__: %s: %s"'
op|'%'
op|'('
name|'traceback'
op|'.'
name|'format_exc'
op|'('
op|')'
op|','
name|'env'
op|')'
newline|'\n'
name|'start_response'
op|'('
string|"'500 Server Error'"
op|','
nl|'\n'
op|'['
op|'('
string|"'Content-Type'"
op|','
string|"'text/plain'"
op|')'
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'Internal server error.\\n'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|posthooklogger
dedent|''
dedent|''
name|'def'
name|'posthooklogger'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|update_request
dedent|''
name|'def'
name|'update_request'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'.'
name|'bytes_transferred'
op|'='
string|"'-'"
newline|'\n'
name|'req'
op|'.'
name|'client_disconnect'
op|'='
name|'False'
newline|'\n'
name|'if'
string|"'x-cf-trans-id'"
name|'not'
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-cf-trans-id'"
op|']'
op|'='
string|"'tx'"
op|'+'
name|'str'
op|'('
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'x-storage-token'"
name|'in'
name|'req'
op|'.'
name|'headers'
name|'and'
string|"'x-auth-token'"
name|'not'
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-auth-token'"
op|']'
op|'='
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-storage-token'"
op|']'
newline|'\n'
dedent|''
name|'return'
name|'req'
newline|'\n'
nl|'\n'
DECL|member|handle_request
dedent|''
name|'def'
name|'handle_request'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Entry point for proxy server.\n        Should return a WSGI-style callable (such as webob.Response).\n\n        :param req: webob.Request object\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'controller'
op|','
name|'path_parts'
op|'='
name|'self'
op|'.'
name|'get_controller'
op|'('
name|'req'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'check_utf8'
op|'('
name|'req'
op|'.'
name|'path_info'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'req'
op|','
name|'body'
op|'='
string|"'Invalid UTF8'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'controller'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'req'
op|','
name|'body'
op|'='
string|"'Bad URL'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'controller'
op|'='
name|'controller'
op|'('
name|'self'
op|','
op|'**'
name|'path_parts'
op|')'
newline|'\n'
name|'controller'
op|'.'
name|'trans_id'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-cf-trans-id'"
op|','
string|"'-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'txn_id'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-cf-trans-id'"
op|','
name|'None'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'handler'
op|'='
name|'getattr'
op|'('
name|'controller'
op|','
name|'req'
op|'.'
name|'method'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'getattr'
op|'('
name|'handler'
op|','
string|"'publicly_accessible'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'handler'
op|'='
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'                '
name|'handler'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'handler'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPMethodNotAllowed'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'path_parts'
op|'['
string|"'version'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
comment|'# We call authorize before the handler, always. If authorized,'
nl|'\n'
comment|"# we remove the swift.authorize hook so isn't ever called"
nl|'\n'
comment|'# again. If not authorized, we return the denial unless the'
nl|'\n'
comment|"# controller's method indicates it'd like to gather more"
nl|'\n'
comment|'# information and try again later.'
nl|'\n'
indent|'                '
name|'resp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'resp'
op|':'
newline|'\n'
comment|'# No resp means authorized, no delayed recheck required.'
nl|'\n'
indent|'                    '
name|'del'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Response indicates denial, but we might delay the denial'
nl|'\n'
comment|'# and recheck later. If not delayed, return the error now.'
nl|'\n'
indent|'                    '
name|'if'
name|'not'
name|'getattr'
op|'('
name|'handler'
op|','
string|"'delay_denial'"
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'resp'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'handler'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|"'ERROR Unhandled exception in request'"
op|')'
op|')'
newline|'\n'
name|'return'
name|'HTTPServerError'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Application
dedent|''
dedent|''
dedent|''
name|'class'
name|'Application'
op|'('
name|'BaseApplication'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""WSGI application for the proxy server."""'
newline|'\n'
nl|'\n'
DECL|member|handle_request
name|'def'
name|'handle_request'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Wraps the BaseApplication.handle_request and logs the request.\n        """'
newline|'\n'
name|'req'
op|'.'
name|'start_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'req'
op|'.'
name|'response'
op|'='
name|'super'
op|'('
name|'Application'
op|','
name|'self'
op|')'
op|'.'
name|'handle_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'return'
name|'req'
op|'.'
name|'response'
newline|'\n'
nl|'\n'
DECL|member|posthooklogger
dedent|''
name|'def'
name|'posthooklogger'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response'
op|'='
name|'getattr'
op|'('
name|'req'
op|','
string|"'response'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'response'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'trans_time'
op|'='
string|"'%.4f'"
op|'%'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'req'
op|'.'
name|'start_time'
op|')'
newline|'\n'
name|'the_request'
op|'='
name|'quote'
op|'('
name|'unquote'
op|'('
name|'req'
op|'.'
name|'path'
op|')'
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'query_string'
op|':'
newline|'\n'
indent|'            '
name|'the_request'
op|'='
name|'the_request'
op|'+'
string|"'?'"
op|'+'
name|'req'
op|'.'
name|'query_string'
newline|'\n'
comment|'# remote user for zeus'
nl|'\n'
dedent|''
name|'client'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-cluster-client-ip'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'client'
name|'and'
string|"'x-forwarded-for'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
comment|'# remote user for other lbs'
nl|'\n'
indent|'            '
name|'client'
op|'='
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-forwarded-for'"
op|']'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
op|'['
number|'0'
op|']'
op|'.'
name|'strip'
op|'('
op|')'
newline|'\n'
dedent|''
name|'logged_headers'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'log_headers'
op|':'
newline|'\n'
indent|'            '
name|'logged_headers'
op|'='
string|"'\\n'"
op|'.'
name|'join'
op|'('
string|"'%s: %s'"
op|'%'
op|'('
name|'k'
op|','
name|'v'
op|')'
nl|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'status_int'
op|'='
name|'response'
op|'.'
name|'status_int'
newline|'\n'
name|'if'
name|'getattr'
op|'('
name|'req'
op|','
string|"'client_disconnect'"
op|','
name|'False'
op|')'
name|'or'
name|'getattr'
op|'('
name|'response'
op|','
string|"'client_disconnect'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'status_int'
op|'='
number|'499'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'access_logger'
op|'.'
name|'info'
op|'('
string|"' '"
op|'.'
name|'join'
op|'('
name|'quote'
op|'('
name|'str'
op|'('
name|'x'
op|')'
op|')'
name|'for'
name|'x'
name|'in'
op|'('
nl|'\n'
name|'client'
name|'or'
string|"'-'"
op|','
nl|'\n'
name|'req'
op|'.'
name|'remote_addr'
name|'or'
string|"'-'"
op|','
nl|'\n'
name|'time'
op|'.'
name|'strftime'
op|'('
string|"'%d/%b/%Y/%H/%M/%S'"
op|','
name|'time'
op|'.'
name|'gmtime'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'req'
op|'.'
name|'method'
op|','
nl|'\n'
name|'the_request'
op|','
nl|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'SERVER_PROTOCOL'"
op|']'
op|','
nl|'\n'
name|'status_int'
op|','
nl|'\n'
name|'req'
op|'.'
name|'referer'
name|'or'
string|"'-'"
op|','
nl|'\n'
name|'req'
op|'.'
name|'user_agent'
name|'or'
string|"'-'"
op|','
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-auth-token'"
op|','
string|"'-'"
op|')'
op|','
nl|'\n'
name|'getattr'
op|'('
name|'req'
op|','
string|"'bytes_transferred'"
op|','
number|'0'
op|')'
name|'or'
string|"'-'"
op|','
nl|'\n'
name|'getattr'
op|'('
name|'response'
op|','
string|"'bytes_transferred'"
op|','
number|'0'
op|')'
name|'or'
string|"'-'"
op|','
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'etag'"
op|','
string|"'-'"
op|')'
op|','
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-cf-trans-id'"
op|','
string|"'-'"
op|')'
op|','
nl|'\n'
name|'logged_headers'
name|'or'
string|"'-'"
op|','
nl|'\n'
name|'trans_time'
op|','
nl|'\n'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|app_factory
dedent|''
dedent|''
name|'def'
name|'app_factory'
op|'('
name|'global_conf'
op|','
op|'**'
name|'local_conf'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""paste.deploy app factory for creating WSGI proxy apps."""'
newline|'\n'
name|'conf'
op|'='
name|'global_conf'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'update'
op|'('
name|'local_conf'
op|')'
newline|'\n'
name|'return'
name|'Application'
op|'('
name|'conf'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
