begin_unit
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
string|'""" Tests for swift.common.storage_policies """'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'functools'
name|'import'
name|'partial'
newline|'\n'
name|'from'
name|'six'
op|'.'
name|'moves'
op|'.'
name|'configparser'
name|'import'
name|'ConfigParser'
newline|'\n'
name|'from'
name|'tempfile'
name|'import'
name|'NamedTemporaryFile'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'patch_policies'
op|','
name|'FakeRing'
op|','
name|'temptree'
op|','
name|'DEFAULT_TEST_EC_TYPE'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
op|'('
nl|'\n'
name|'StoragePolicyCollection'
op|','
name|'POLICIES'
op|','
name|'PolicyError'
op|','
name|'parse_storage_policies'
op|','
nl|'\n'
name|'reload_storage_policies'
op|','
name|'get_policy_string'
op|','
name|'split_policy_string'
op|','
nl|'\n'
name|'BaseStoragePolicy'
op|','
name|'StoragePolicy'
op|','
name|'ECStoragePolicy'
op|','
name|'REPL_POLICY'
op|','
name|'EC_POLICY'
op|','
nl|'\n'
name|'VALID_EC_TYPES'
op|','
name|'DEFAULT_EC_OBJECT_SEGMENT_SIZE'
op|','
name|'BindPortsCache'
op|')'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
name|'import'
name|'RingData'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'RingValidationError'
newline|'\n'
nl|'\n'
nl|'\n'
op|'@'
name|'BaseStoragePolicy'
op|'.'
name|'register'
op|'('
string|"'fake'"
op|')'
newline|'\n'
DECL|class|FakeStoragePolicy
name|'class'
name|'FakeStoragePolicy'
op|'('
name|'BaseStoragePolicy'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Test StoragePolicy class - the only user at the moment is\n    test_validate_policies_type_invalid()\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'idx'
op|','
name|'name'
op|'='
string|"''"
op|','
name|'is_default'
op|'='
name|'False'
op|','
name|'is_deprecated'
op|'='
name|'False'
op|','
nl|'\n'
name|'object_ring'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FakeStoragePolicy'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
nl|'\n'
name|'idx'
op|','
name|'name'
op|','
name|'is_default'
op|','
name|'is_deprecated'
op|','
name|'object_ring'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestStoragePolicies
dedent|''
dedent|''
name|'class'
name|'TestStoragePolicies'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|_conf
indent|'    '
name|'def'
name|'_conf'
op|'('
name|'self'
op|','
name|'conf_str'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf_str'
op|'='
string|'"\\n"'
op|'.'
name|'join'
op|'('
name|'line'
op|'.'
name|'strip'
op|'('
op|')'
name|'for'
name|'line'
name|'in'
name|'conf_str'
op|'.'
name|'split'
op|'('
string|'"\\n"'
op|')'
op|')'
newline|'\n'
name|'conf'
op|'='
name|'ConfigParser'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'readfp'
op|'('
name|'six'
op|'.'
name|'StringIO'
op|'('
name|'conf_str'
op|')'
op|')'
newline|'\n'
name|'return'
name|'conf'
newline|'\n'
nl|'\n'
DECL|member|assertRaisesWithMessage
dedent|''
name|'def'
name|'assertRaisesWithMessage'
op|'('
name|'self'
op|','
name|'exc_class'
op|','
name|'message'
op|','
name|'f'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'exc_class'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'err_msg'
op|'='
name|'str'
op|'('
name|'err'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'message'
name|'in'
name|'err_msg'
op|','
string|"'Error message %r did not '"
nl|'\n'
string|"'have expected substring %r'"
op|'%'
op|'('
name|'err_msg'
op|','
name|'message'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'%r did not raise %s'"
op|'%'
op|'('
name|'message'
op|','
name|'exc_class'
op|'.'
name|'__name__'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_policy_baseclass_instantiate
dedent|''
dedent|''
name|'def'
name|'test_policy_baseclass_instantiate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'TypeError'
op|','
nl|'\n'
string|'"Can\'t instantiate BaseStoragePolicy"'
op|','
nl|'\n'
name|'BaseStoragePolicy'
op|','
number|'1'
op|','
string|"'one'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'patch_policies'
op|'('
op|'['
nl|'\n'
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'is_default'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'two'"
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'3'
op|','
string|"'three'"
op|','
name|'is_deprecated'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'ECStoragePolicy'
op|'('
number|'10'
op|','
string|"'ten'"
op|','
name|'ec_type'
op|'='
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'10'
op|','
name|'ec_nparity'
op|'='
number|'4'
op|')'
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
DECL|member|test_swift_info
name|'def'
name|'test_swift_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# the deprecated 'three' should not exist in expect"
nl|'\n'
indent|'        '
name|'expect'
op|'='
op|'['
op|'{'
string|"'aliases'"
op|':'
string|"'zero'"
op|','
string|"'default'"
op|':'
name|'True'
op|','
string|"'name'"
op|':'
string|"'zero'"
op|','
op|'}'
op|','
nl|'\n'
op|'{'
string|"'aliases'"
op|':'
string|"'two'"
op|','
string|"'name'"
op|':'
string|"'two'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'aliases'"
op|':'
string|"'one'"
op|','
string|"'name'"
op|':'
string|"'one'"
op|'}'
op|','
nl|'\n'
op|'{'
string|"'aliases'"
op|':'
string|"'ten'"
op|','
string|"'name'"
op|':'
string|"'ten'"
op|'}'
op|']'
newline|'\n'
name|'swift_info'
op|'='
name|'POLICIES'
op|'.'
name|'get_policy_info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
name|'expect'
op|','
name|'key'
op|'='
name|'lambda'
name|'k'
op|':'
name|'k'
op|'['
string|"'name'"
op|']'
op|')'
op|','
nl|'\n'
name|'sorted'
op|'('
name|'swift_info'
op|','
name|'key'
op|'='
name|'lambda'
name|'k'
op|':'
name|'k'
op|'['
string|"'name'"
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'patch_policies'
newline|'\n'
DECL|member|test_get_policy_string
name|'def'
name|'test_get_policy_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'get_policy_string'
op|'('
string|"'something'"
op|','
number|'0'
op|')'
op|','
string|"'something'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'get_policy_string'
op|'('
string|"'something'"
op|','
name|'None'
op|')'
op|','
string|"'something'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'get_policy_string'
op|'('
string|"'something'"
op|','
string|"''"
op|')'
op|','
string|"'something'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'get_policy_string'
op|'('
string|"'something'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
string|"'something'"
op|'+'
string|"'-1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'PolicyError'
op|','
name|'get_policy_string'
op|','
string|"'something'"
op|','
number|'99'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'patch_policies'
newline|'\n'
DECL|member|test_split_policy_string
name|'def'
name|'test_split_policy_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expectations'
op|'='
op|'{'
nl|'\n'
string|"'something'"
op|':'
op|'('
string|"'something'"
op|','
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
string|"'something-1'"
op|':'
op|'('
string|"'something'"
op|','
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
string|"'tmp'"
op|':'
op|'('
string|"'tmp'"
op|','
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
string|"'objects'"
op|':'
op|'('
string|"'objects'"
op|','
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
string|"'tmp-1'"
op|':'
op|'('
string|"'tmp'"
op|','
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
string|"'objects-1'"
op|':'
op|'('
string|"'objects'"
op|','
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
string|"'objects-'"
op|':'
name|'PolicyError'
op|','
nl|'\n'
string|"'objects-0'"
op|':'
name|'PolicyError'
op|','
nl|'\n'
string|"'objects--1'"
op|':'
op|'('
string|"'objects-'"
op|','
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
string|"'objects-+1'"
op|':'
name|'PolicyError'
op|','
nl|'\n'
string|"'objects--'"
op|':'
name|'PolicyError'
op|','
nl|'\n'
string|"'objects-foo'"
op|':'
name|'PolicyError'
op|','
nl|'\n'
string|"'objects--bar'"
op|':'
name|'PolicyError'
op|','
nl|'\n'
string|"'objects-+bar'"
op|':'
name|'PolicyError'
op|','
nl|'\n'
comment|'# questionable, demonstrated as inverse of get_policy_string'
nl|'\n'
string|"'objects+0'"
op|':'
op|'('
string|"'objects+0'"
op|','
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
string|"''"
op|':'
op|'('
string|"''"
op|','
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
string|"'0'"
op|':'
op|'('
string|"'0'"
op|','
name|'POLICIES'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
string|"'-1'"
op|':'
op|'('
string|"''"
op|','
name|'POLICIES'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'for'
name|'policy_string'
op|','
name|'expected'
name|'in'
name|'expectations'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'expected'
op|'=='
name|'PolicyError'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'invalid'
op|'='
name|'split_policy_string'
op|'('
name|'policy_string'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'PolicyError'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
comment|'# good'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'The string %r returned %r '"
nl|'\n'
string|"'instead of raising a PolicyError'"
op|'%'
nl|'\n'
op|'('
name|'policy_string'
op|','
name|'invalid'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected'
op|','
name|'split_policy_string'
op|'('
name|'policy_string'
op|')'
op|')'
newline|'\n'
comment|'# should be inverse of get_policy_string'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policy_string'
op|','
name|'get_policy_string'
op|'('
op|'*'
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_defaults
dedent|''
dedent|''
name|'def'
name|'test_defaults'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'POLICIES'
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# test class functions'
nl|'\n'
name|'default_policy'
op|'='
name|'POLICIES'
op|'.'
name|'default'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'default_policy'
op|'.'
name|'is_default'
op|')'
newline|'\n'
name|'zero_policy'
op|'='
name|'POLICIES'
op|'.'
name|'get_by_index'
op|'('
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'zero_policy'
op|'.'
name|'idx'
op|'=='
number|'0'
op|')'
newline|'\n'
name|'zero_policy_by_name'
op|'='
name|'POLICIES'
op|'.'
name|'get_by_name'
op|'('
name|'zero_policy'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'zero_policy_by_name'
op|'.'
name|'idx'
op|'=='
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_storage_policy_repr
dedent|''
name|'def'
name|'test_storage_policy_repr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'aay'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'bee'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'cee'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'ECStoragePolicy'
op|'('
number|'10'
op|','
string|"'ten'"
op|','
nl|'\n'
name|'ec_type'
op|'='
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'10'
op|','
name|'ec_nparity'
op|'='
number|'3'
op|')'
op|']'
newline|'\n'
name|'policies'
op|'='
name|'StoragePolicyCollection'
op|'('
name|'test_policies'
op|')'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'policies'
op|':'
newline|'\n'
indent|'            '
name|'policy_repr'
op|'='
name|'repr'
op|'('
name|'policy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'policy'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
name|'in'
name|'policy_repr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'is_default=%s'"
op|'%'
name|'policy'
op|'.'
name|'is_default'
name|'in'
name|'policy_repr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'is_deprecated=%s'"
op|'%'
name|'policy'
op|'.'
name|'is_deprecated'
name|'in'
nl|'\n'
name|'policy_repr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'policy'
op|'.'
name|'name'
name|'in'
name|'policy_repr'
op|')'
newline|'\n'
name|'if'
name|'policy'
op|'.'
name|'policy_type'
op|'=='
name|'EC_POLICY'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'ec_type=%s'"
op|'%'
name|'policy'
op|'.'
name|'ec_type'
name|'in'
name|'policy_repr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'ec_ndata=%s'"
op|'%'
name|'policy'
op|'.'
name|'ec_ndata'
name|'in'
name|'policy_repr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'ec_nparity=%s'"
op|'%'
nl|'\n'
name|'policy'
op|'.'
name|'ec_nparity'
name|'in'
name|'policy_repr'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'ec_segment_size=%s'"
op|'%'
nl|'\n'
name|'policy'
op|'.'
name|'ec_segment_size'
name|'in'
name|'policy_repr'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'collection_repr'
op|'='
name|'repr'
op|'('
name|'policies'
op|')'
newline|'\n'
name|'collection_repr_lines'
op|'='
name|'collection_repr'
op|'.'
name|'splitlines'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'policies'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
name|'in'
name|'collection_repr_lines'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'policies'
op|')'
op|','
name|'len'
op|'('
name|'collection_repr_lines'
op|'['
number|'1'
op|':'
op|'-'
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'for'
name|'policy'
op|','
name|'line'
name|'in'
name|'zip'
op|'('
name|'policies'
op|','
name|'collection_repr_lines'
op|'['
number|'1'
op|':'
op|'-'
number|'1'
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'repr'
op|'('
name|'policy'
op|')'
name|'in'
name|'line'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'patch_policies'
op|'('
name|'policies'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'repr'
op|'('
name|'POLICIES'
op|')'
op|','
name|'collection_repr'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_policies_defaults
dedent|''
dedent|''
name|'def'
name|'test_validate_policies_defaults'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# 0 explicit default'
nl|'\n'
indent|'        '
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'two'"
op|','
name|'False'
op|')'
op|']'
newline|'\n'
name|'policies'
op|'='
name|'StoragePolicyCollection'
op|'('
name|'test_policies'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'default'
op|','
name|'test_policies'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'default'
op|'.'
name|'name'
op|','
string|"'zero'"
op|')'
newline|'\n'
nl|'\n'
comment|'# non-zero explicit default'
nl|'\n'
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'two'"
op|','
name|'True'
op|')'
op|']'
newline|'\n'
name|'policies'
op|'='
name|'StoragePolicyCollection'
op|'('
name|'test_policies'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'default'
op|','
name|'test_policies'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'default'
op|'.'
name|'name'
op|','
string|"'two'"
op|')'
newline|'\n'
nl|'\n'
comment|'# multiple defaults'
nl|'\n'
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'two'"
op|','
name|'True'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
nl|'\n'
name|'PolicyError'
op|','
string|"'Duplicate default'"
op|','
name|'StoragePolicyCollection'
op|','
nl|'\n'
name|'test_policies'
op|')'
newline|'\n'
nl|'\n'
comment|'# nothing specified'
nl|'\n'
name|'test_policies'
op|'='
op|'['
op|']'
newline|'\n'
name|'policies'
op|'='
name|'StoragePolicyCollection'
op|'('
name|'test_policies'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'default'
op|','
name|'policies'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'default'
op|'.'
name|'name'
op|','
string|"'Policy-0'"
op|')'
newline|'\n'
nl|'\n'
comment|'# no default specified with only policy index 0'
nl|'\n'
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|')'
op|']'
newline|'\n'
name|'policies'
op|'='
name|'StoragePolicyCollection'
op|'('
name|'test_policies'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'default'
op|','
name|'policies'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# no default specified with multiple policies'
nl|'\n'
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'two'"
op|','
name|'False'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
nl|'\n'
name|'PolicyError'
op|','
string|"'Unable to find default policy'"
op|','
nl|'\n'
name|'StoragePolicyCollection'
op|','
name|'test_policies'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deprecate_policies
dedent|''
name|'def'
name|'test_deprecate_policies'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# deprecation specified'
nl|'\n'
indent|'        '
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'two'"
op|','
name|'False'
op|','
name|'is_deprecated'
op|'='
name|'True'
op|')'
op|']'
newline|'\n'
name|'policies'
op|'='
name|'StoragePolicyCollection'
op|'('
name|'test_policies'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'default'
op|','
name|'test_policies'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'default'
op|'.'
name|'name'
op|','
string|"'zero'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'policies'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
nl|'\n'
comment|'# multiple policies requires default'
nl|'\n'
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'False'
op|','
name|'is_deprecated'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'two'"
op|','
name|'False'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
nl|'\n'
name|'PolicyError'
op|','
string|"'Unable to find default policy'"
op|','
nl|'\n'
name|'StoragePolicyCollection'
op|','
name|'test_policies'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_policies_indexes
dedent|''
name|'def'
name|'test_validate_policies_indexes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# duplicate indexes'
nl|'\n'
indent|'        '
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'two'"
op|','
name|'False'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'PolicyError'
op|','
name|'StoragePolicyCollection'
op|','
nl|'\n'
name|'test_policies'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_policy_params
dedent|''
name|'def'
name|'test_validate_policy_params'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'name'"
op|')'
comment|'# sanity'
newline|'\n'
comment|'# bogus indexes'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'PolicyError'
op|','
name|'FakeStoragePolicy'
op|','
string|"'x'"
op|','
string|"'name'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'PolicyError'
op|','
name|'FakeStoragePolicy'
op|','
op|'-'
number|'1'
op|','
string|"'name'"
op|')'
newline|'\n'
nl|'\n'
comment|'# non-zero Policy-0'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'reserved'"
op|','
nl|'\n'
name|'FakeStoragePolicy'
op|','
number|'1'
op|','
string|"'policy-0'"
op|')'
newline|'\n'
comment|'# deprecate default'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
nl|'\n'
name|'PolicyError'
op|','
string|"'Deprecated policy can not be default'"
op|','
nl|'\n'
name|'FakeStoragePolicy'
op|','
number|'1'
op|','
string|"'Policy-1'"
op|','
name|'is_default'
op|'='
name|'True'
op|','
nl|'\n'
name|'is_deprecated'
op|'='
name|'True'
op|')'
newline|'\n'
comment|'# weird names'
nl|'\n'
name|'names'
op|'='
op|'('
nl|'\n'
string|"''"
op|','
nl|'\n'
string|"'name_foo'"
op|','
nl|'\n'
string|"'name\\nfoo'"
op|','
nl|'\n'
string|"'name foo'"
op|','
nl|'\n'
string|"u'name \\u062a'"
op|','
nl|'\n'
string|"'name \\xd8\\xaa'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'for'
name|'name'
name|'in'
name|'names'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid name'"
op|','
nl|'\n'
name|'FakeStoragePolicy'
op|','
number|'1'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_policies_names
dedent|''
dedent|''
name|'def'
name|'test_validate_policies_names'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# duplicate names'
nl|'\n'
indent|'        '
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'zero'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'two'"
op|','
name|'False'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'PolicyError'
op|','
name|'StoragePolicyCollection'
op|','
nl|'\n'
name|'test_policies'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_policies_type_default
dedent|''
name|'def'
name|'test_validate_policies_type_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# no type specified - make sure the policy is initialized to'
nl|'\n'
comment|'# DEFAULT_POLICY_TYPE'
nl|'\n'
indent|'        '
name|'test_policy'
op|'='
name|'FakeStoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'test_policy'
op|'.'
name|'policy_type'
op|','
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_policies_type_invalid
dedent|''
name|'def'
name|'test_validate_policies_type_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|BogusStoragePolicy
indent|'        '
name|'class'
name|'BogusStoragePolicy'
op|'('
name|'FakeStoragePolicy'
op|')'
op|':'
newline|'\n'
DECL|variable|policy_type
indent|'            '
name|'policy_type'
op|'='
string|"'bogus'"
newline|'\n'
nl|'\n'
comment|'# unsupported policy type - initialization with FakeStoragePolicy'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid type'"
op|','
nl|'\n'
name|'BogusStoragePolicy'
op|','
number|'1'
op|','
string|"'one'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_policies_type_attribute
dedent|''
name|'def'
name|'test_policies_type_attribute'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_policies'
op|'='
op|'['
nl|'\n'
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'is_default'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'two'"
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'3'
op|','
string|"'three'"
op|','
name|'is_deprecated'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'ECStoragePolicy'
op|'('
number|'10'
op|','
string|"'ten'"
op|','
name|'ec_type'
op|'='
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'10'
op|','
name|'ec_nparity'
op|'='
number|'3'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'policies'
op|'='
name|'StoragePolicyCollection'
op|'('
name|'test_policies'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'0'
op|')'
op|'.'
name|'policy_type'
op|','
nl|'\n'
name|'REPL_POLICY'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'1'
op|')'
op|'.'
name|'policy_type'
op|','
nl|'\n'
name|'REPL_POLICY'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'2'
op|')'
op|'.'
name|'policy_type'
op|','
nl|'\n'
name|'REPL_POLICY'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'3'
op|')'
op|'.'
name|'policy_type'
op|','
nl|'\n'
name|'REPL_POLICY'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'10'
op|')'
op|'.'
name|'policy_type'
op|','
nl|'\n'
name|'EC_POLICY'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_names_are_normalized
dedent|''
name|'def'
name|'test_names_are_normalized'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'ZERO'"
op|','
name|'False'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'PolicyError'
op|','
name|'StoragePolicyCollection'
op|','
nl|'\n'
name|'test_policies'
op|')'
newline|'\n'
nl|'\n'
name|'policies'
op|'='
name|'StoragePolicyCollection'
op|'('
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zEro'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'One'"
op|','
name|'False'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'pol0'
op|'='
name|'policies'
op|'['
number|'0'
op|']'
newline|'\n'
name|'pol1'
op|'='
name|'policies'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'name'
name|'in'
op|'('
string|"'zero'"
op|','
string|"'ZERO'"
op|','
string|"'zErO'"
op|','
string|"'ZeRo'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'pol0'
op|','
name|'policies'
op|'.'
name|'get_by_name'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
name|'name'
op|')'
op|'.'
name|'name'
op|','
string|"'zEro'"
op|')'
newline|'\n'
dedent|''
name|'for'
name|'name'
name|'in'
op|'('
string|"'one'"
op|','
string|"'ONE'"
op|','
string|"'oNe'"
op|','
string|"'OnE'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'pol1'
op|','
name|'policies'
op|'.'
name|'get_by_name'
op|'('
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
name|'name'
op|')'
op|'.'
name|'name'
op|','
string|"'One'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multiple_names
dedent|''
dedent|''
name|'def'
name|'test_multiple_names'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# checking duplicate on insert'
nl|'\n'
indent|'        '
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'False'
op|','
name|'aliases'
op|'='
string|"'zero'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'PolicyError'
op|','
name|'StoragePolicyCollection'
op|','
nl|'\n'
name|'test_policies'
op|')'
newline|'\n'
nl|'\n'
comment|'# checking correct retrival using other names'
nl|'\n'
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|','
name|'aliases'
op|'='
string|"'cero, kore'"
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'False'
op|','
name|'aliases'
op|'='
string|"'uno, tahi'"
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'two'"
op|','
name|'False'
op|','
name|'aliases'
op|'='
string|"'dos, rua'"
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'policies'
op|'='
name|'StoragePolicyCollection'
op|'('
name|'test_policies'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'name'
name|'in'
op|'('
string|"'zero'"
op|','
string|"'cero'"
op|','
string|"'kore'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
name|'name'
op|')'
op|','
name|'test_policies'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'name'
name|'in'
op|'('
string|"'two'"
op|','
string|"'dos'"
op|','
string|"'rua'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
name|'name'
op|')'
op|','
name|'test_policies'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Testing parsing of conf files/text'
nl|'\n'
dedent|''
name|'good_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = one\n        aliases = uno, tahi\n        default = yes\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'policies'
op|'='
name|'parse_storage_policies'
op|'('
name|'good_conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|"'one'"
op|')'
op|','
nl|'\n'
name|'policies'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|"'one'"
op|')'
op|','
nl|'\n'
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|"'tahi'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'name_repeat_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = one\n        aliases = one\n        default = yes\n        """'
op|')'
newline|'\n'
comment|'# Test on line below should not generate errors. Repeat of main'
nl|'\n'
comment|'# name under aliases is permitted during construction'
nl|'\n'
comment|'# but only because automated testing requires it.'
nl|'\n'
name|'policies'
op|'='
name|'parse_storage_policies'
op|'('
name|'name_repeat_conf'
op|')'
newline|'\n'
nl|'\n'
name|'extra_commas_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = one\n        aliases = ,,one, ,\n        default = yes\n        """'
op|')'
newline|'\n'
comment|'# Extra blank entries should be silently dropped'
nl|'\n'
name|'policies'
op|'='
name|'parse_storage_policies'
op|'('
name|'extra_commas_conf'
op|')'
newline|'\n'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = one\n        aliases = uno, uno\n        default = yes\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
nl|'\n'
string|"'is already assigned to this policy'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multiple_names_EC
dedent|''
name|'def'
name|'test_multiple_names_EC'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# checking duplicate names on insert'
nl|'\n'
indent|'        '
name|'test_policies_ec'
op|'='
op|'['
nl|'\n'
name|'ECStoragePolicy'
op|'('
nl|'\n'
number|'0'
op|','
string|"'ec8-2'"
op|','
nl|'\n'
name|'aliases'
op|'='
string|"'zeus, jupiter'"
op|','
nl|'\n'
name|'ec_type'
op|'='
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'8'
op|','
name|'ec_nparity'
op|'='
number|'2'
op|','
nl|'\n'
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'replicas'
op|'='
number|'8'
op|')'
op|','
nl|'\n'
name|'is_default'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'ECStoragePolicy'
op|'('
nl|'\n'
number|'1'
op|','
string|"'ec10-4'"
op|','
nl|'\n'
name|'aliases'
op|'='
string|"'ec8-2'"
op|','
nl|'\n'
name|'ec_type'
op|'='
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'10'
op|','
name|'ec_nparity'
op|'='
number|'4'
op|','
nl|'\n'
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'replicas'
op|'='
number|'10'
op|')'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'PolicyError'
op|','
name|'StoragePolicyCollection'
op|','
nl|'\n'
name|'test_policies_ec'
op|')'
newline|'\n'
nl|'\n'
comment|'# checking correct retrival using other names'
nl|'\n'
name|'good_test_policies_EC'
op|'='
op|'['
nl|'\n'
name|'ECStoragePolicy'
op|'('
number|'0'
op|','
string|"'ec8-2'"
op|','
name|'aliases'
op|'='
string|"'zeus, jupiter'"
op|','
nl|'\n'
name|'ec_type'
op|'='
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'8'
op|','
name|'ec_nparity'
op|'='
number|'2'
op|','
nl|'\n'
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'replicas'
op|'='
number|'8'
op|')'
op|','
nl|'\n'
name|'is_default'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'ECStoragePolicy'
op|'('
number|'1'
op|','
string|"'ec10-4'"
op|','
name|'aliases'
op|'='
string|"'athena, minerva'"
op|','
nl|'\n'
name|'ec_type'
op|'='
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'10'
op|','
name|'ec_nparity'
op|'='
number|'4'
op|','
nl|'\n'
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'replicas'
op|'='
number|'10'
op|')'
op|')'
op|','
nl|'\n'
name|'ECStoragePolicy'
op|'('
number|'2'
op|','
string|"'ec4-2'"
op|','
name|'aliases'
op|'='
string|"'poseidon, neptune'"
op|','
nl|'\n'
name|'ec_type'
op|'='
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'4'
op|','
name|'ec_nparity'
op|'='
number|'2'
op|','
nl|'\n'
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'replicas'
op|'='
number|'7'
op|')'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'ec_policies'
op|'='
name|'StoragePolicyCollection'
op|'('
name|'good_test_policies_EC'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'name'
name|'in'
op|'('
string|"'ec8-2'"
op|','
string|"'zeus'"
op|','
string|"'jupiter'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ec_policies'
op|'.'
name|'get_by_name'
op|'('
name|'name'
op|')'
op|','
name|'ec_policies'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'name'
name|'in'
op|'('
string|"'ec10-4'"
op|','
string|"'athena'"
op|','
string|"'minerva'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ec_policies'
op|'.'
name|'get_by_name'
op|'('
name|'name'
op|')'
op|','
name|'ec_policies'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Testing parsing of conf files/text'
nl|'\n'
dedent|''
name|'good_ec_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = ec8-2\n        aliases = zeus, jupiter\n        policy_type = erasure_coding\n        ec_type = %(ec_type)s\n        default = yes\n        ec_num_data_fragments = 8\n        ec_num_parity_fragments = 2\n        [storage-policy:1]\n        name = ec10-4\n        aliases = poseidon, neptune\n        policy_type = erasure_coding\n        ec_type = %(ec_type)s\n        ec_num_data_fragments = 10\n        ec_num_parity_fragments = 4\n        """'
op|'%'
op|'{'
string|"'ec_type'"
op|':'
name|'DEFAULT_TEST_EC_TYPE'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'ec_policies'
op|'='
name|'parse_storage_policies'
op|'('
name|'good_ec_conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ec_policies'
op|'.'
name|'get_by_name'
op|'('
string|"'ec8-2'"
op|')'
op|','
nl|'\n'
name|'ec_policies'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ec_policies'
op|'.'
name|'get_by_name'
op|'('
string|"'ec10-4'"
op|')'
op|','
nl|'\n'
name|'ec_policies'
op|'.'
name|'get_by_name'
op|'('
string|"'poseidon'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'name_repeat_ec_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = ec8-2\n        aliases = ec8-2\n        policy_type = erasure_coding\n        ec_type = %(ec_type)s\n        default = yes\n        ec_num_data_fragments = 8\n        ec_num_parity_fragments = 2\n        """'
op|'%'
op|'{'
string|"'ec_type'"
op|':'
name|'DEFAULT_TEST_EC_TYPE'
op|'}'
op|')'
newline|'\n'
comment|'# Test on line below should not generate errors. Repeat of main'
nl|'\n'
comment|'# name under aliases is permitted during construction'
nl|'\n'
comment|'# but only because automated testing requires it.'
nl|'\n'
name|'ec_policies'
op|'='
name|'parse_storage_policies'
op|'('
name|'name_repeat_ec_conf'
op|')'
newline|'\n'
nl|'\n'
name|'bad_ec_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = ec8-2\n        aliases = zeus, zeus\n        policy_type = erasure_coding\n        ec_type = %(ec_type)s\n        default = yes\n        ec_num_data_fragments = 8\n        ec_num_parity_fragments = 2\n        """'
op|'%'
op|'{'
string|"'ec_type'"
op|':'
name|'DEFAULT_TEST_EC_TYPE'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
nl|'\n'
string|"'is already assigned to this policy'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_ec_conf'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_remove_names
dedent|''
name|'def'
name|'test_add_remove_names'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'two'"
op|','
name|'False'
op|')'
op|']'
newline|'\n'
name|'policies'
op|'='
name|'StoragePolicyCollection'
op|'('
name|'test_policies'
op|')'
newline|'\n'
nl|'\n'
comment|'# add names'
nl|'\n'
name|'policies'
op|'.'
name|'add_policy_alias'
op|'('
number|'1'
op|','
string|"'tahi'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|"'tahi'"
op|')'
op|','
name|'test_policies'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'policies'
op|'.'
name|'add_policy_alias'
op|'('
number|'2'
op|','
string|"'rua'"
op|','
string|"'dos'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|"'rua'"
op|')'
op|','
name|'test_policies'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|"'dos'"
op|')'
op|','
name|'test_policies'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid name'"
op|','
nl|'\n'
name|'policies'
op|'.'
name|'add_policy_alias'
op|','
number|'2'
op|','
string|"'double\\n'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid name'"
op|','
nl|'\n'
name|'policies'
op|'.'
name|'add_policy_alias'
op|','
number|'2'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
comment|'# try to add existing name'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Duplicate name'"
op|','
nl|'\n'
name|'policies'
op|'.'
name|'add_policy_alias'
op|','
number|'2'
op|','
string|"'two'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Duplicate name'"
op|','
nl|'\n'
name|'policies'
op|'.'
name|'add_policy_alias'
op|','
number|'1'
op|','
string|"'two'"
op|')'
newline|'\n'
nl|'\n'
comment|'# remove name'
nl|'\n'
name|'policies'
op|'.'
name|'remove_policy_alias'
op|'('
string|"'tahi'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|"'tahi'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
comment|'# remove only name'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
nl|'\n'
string|"'Policies must have at least one name.'"
op|','
nl|'\n'
name|'policies'
op|'.'
name|'remove_policy_alias'
op|','
string|"'zero'"
op|')'
newline|'\n'
nl|'\n'
comment|'# remove non-existent name'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
nl|'\n'
string|"'No policy with name'"
op|','
nl|'\n'
name|'policies'
op|'.'
name|'remove_policy_alias'
op|','
string|"'three'"
op|')'
newline|'\n'
nl|'\n'
comment|'# remove default name'
nl|'\n'
name|'policies'
op|'.'
name|'remove_policy_alias'
op|'('
string|"'two'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|"'two'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'2'
op|')'
op|'.'
name|'name'
op|','
string|"'rua'"
op|')'
newline|'\n'
nl|'\n'
comment|'# change default name to a new name'
nl|'\n'
name|'policies'
op|'.'
name|'change_policy_primary_name'
op|'('
number|'2'
op|','
string|"'two'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|"'two'"
op|')'
op|','
name|'test_policies'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'2'
op|')'
op|'.'
name|'name'
op|','
string|"'two'"
op|')'
newline|'\n'
nl|'\n'
comment|'# change default name to an existing alias'
nl|'\n'
name|'policies'
op|'.'
name|'change_policy_primary_name'
op|'('
number|'2'
op|','
string|"'dos'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'2'
op|')'
op|'.'
name|'name'
op|','
string|"'dos'"
op|')'
newline|'\n'
nl|'\n'
comment|'# change default name to a bad new name'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid name'"
op|','
nl|'\n'
name|'policies'
op|'.'
name|'change_policy_primary_name'
op|','
nl|'\n'
number|'2'
op|','
string|"'bad\\nname'"
op|')'
newline|'\n'
nl|'\n'
comment|'# change default name to a name belonging to another policy'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
nl|'\n'
string|"'Other policy'"
op|','
nl|'\n'
name|'policies'
op|'.'
name|'change_policy_primary_name'
op|','
nl|'\n'
number|'1'
op|','
string|"'dos'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_deprecated_default
dedent|''
name|'def'
name|'test_deprecated_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:1]\n        name = one\n        deprecated = yes\n        default = yes\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
nl|'\n'
name|'PolicyError'
op|','
string|'"Deprecated policy can not be default"'
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multiple_policies_with_no_policy_index_zero
dedent|''
name|'def'
name|'test_multiple_policies_with_no_policy_index_zero'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:1]\n        name = one\n        default = yes\n        """'
op|')'
newline|'\n'
nl|'\n'
comment|'# Policy-0 will not be implicitly added if other policies are defined'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
nl|'\n'
name|'PolicyError'
op|','
string|'"must specify a storage policy section "'
nl|'\n'
string|'"for policy index 0"'
op|','
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_default
dedent|''
name|'def'
name|'test_no_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'orig_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = zero\n        [storage-policy:1]\n        name = one\n        default = yes\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'policies'
op|'='
name|'parse_storage_policies'
op|'('
name|'orig_conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'default'
op|','
name|'policies'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'policies'
op|'['
number|'0'
op|']'
op|'.'
name|'name'
op|','
string|"'Policy-0'"
op|')'
newline|'\n'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = zero\n        [storage-policy:1]\n        name = one\n        deprecated = yes\n        """'
op|')'
newline|'\n'
nl|'\n'
comment|'# multiple polices and no explicit default'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
nl|'\n'
name|'PolicyError'
op|','
string|'"Unable to find default"'
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'good_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = Policy-0\n        default = yes\n        [storage-policy:1]\n        name = one\n        deprecated = yes\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'policies'
op|'='
name|'parse_storage_policies'
op|'('
name|'good_conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'default'
op|','
name|'policies'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'policies'
op|'['
number|'1'
op|']'
op|'.'
name|'is_deprecated'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_parse_storage_policies
dedent|''
name|'def'
name|'test_parse_storage_policies'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# ValueError when deprecating policy 0'
nl|'\n'
indent|'        '
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = zero\n        deprecated = yes\n\n        [storage-policy:1]\n        name = one\n        deprecated = yes\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
nl|'\n'
name|'PolicyError'
op|','
string|'"Unable to find policy that\'s not deprecated"'
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:]\n        name = zero\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid index'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:-1]\n        name = zero\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid index'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:x]\n        name = zero\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid index'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:x-1]\n        name = zero\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid index'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:x]\n        name = zero\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid index'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:x:1]\n        name = zero\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid index'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:1]\n        name = zero\n        boo = berries\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid option'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name =\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid name'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:3]\n        name = Policy-0\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid name'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:1]\n        name = policY-0\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid name'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = one\n        [storage-policy:1]\n        name = ONE\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Duplicate name'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = good_stuff\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Invalid name'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
comment|'# policy_type = erasure_coding'
nl|'\n'
nl|'\n'
comment|'# missing ec_type, ec_num_data_fragments and ec_num_parity_fragments'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = zero\n        [storage-policy:1]\n        name = ec10-4\n        policy_type = erasure_coding\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Missing ec_type'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
comment|'# missing ec_type, but other options valid...'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = zero\n        [storage-policy:1]\n        name = ec10-4\n        policy_type = erasure_coding\n        ec_num_data_fragments = 10\n        ec_num_parity_fragments = 4\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
string|"'Missing ec_type'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
comment|'# ec_type specified, but invalid...'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = zero\n        default = yes\n        [storage-policy:1]\n        name = ec10-4\n        policy_type = erasure_coding\n        ec_type = garbage_alg\n        ec_num_data_fragments = 10\n        ec_num_parity_fragments = 4\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
nl|'\n'
string|"'Wrong ec_type garbage_alg for policy '"
nl|'\n'
string|'\'ec10-4, should be one of "%s"\''
op|'%'
nl|'\n'
op|'('
string|"', '"
op|'.'
name|'join'
op|'('
name|'VALID_EC_TYPES'
op|')'
op|')'
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
comment|'# missing and invalid ec_num_parity_fragments'
nl|'\n'
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = zero\n        [storage-policy:1]\n        name = ec10-4\n        policy_type = erasure_coding\n        ec_type = %(ec_type)s\n        ec_num_data_fragments = 10\n        """'
op|'%'
op|'{'
string|"'ec_type'"
op|':'
name|'DEFAULT_TEST_EC_TYPE'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
nl|'\n'
string|"'Invalid ec_num_parity_fragments'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'num_parity'
name|'in'
op|'('
string|"'-4'"
op|','
string|"'0'"
op|','
string|"'x'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n            [storage-policy:0]\n            name = zero\n            [storage-policy:1]\n            name = ec10-4\n            policy_type = erasure_coding\n            ec_type = %(ec_type)s\n            ec_num_data_fragments = 10\n            ec_num_parity_fragments = %(num_parity)s\n            """'
op|'%'
op|'{'
string|"'ec_type'"
op|':'
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
string|"'num_parity'"
op|':'
name|'num_parity'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
nl|'\n'
string|"'Invalid ec_num_parity_fragments'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
comment|'# missing and invalid ec_num_data_fragments'
nl|'\n'
dedent|''
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = zero\n        [storage-policy:1]\n        name = ec10-4\n        policy_type = erasure_coding\n        ec_type = %(ec_type)s\n        ec_num_parity_fragments = 4\n        """'
op|'%'
op|'{'
string|"'ec_type'"
op|':'
name|'DEFAULT_TEST_EC_TYPE'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
nl|'\n'
string|"'Invalid ec_num_data_fragments'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'num_data'
name|'in'
op|'('
string|"'-10'"
op|','
string|"'0'"
op|','
string|"'x'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n            [storage-policy:0]\n            name = zero\n            [storage-policy:1]\n            name = ec10-4\n            policy_type = erasure_coding\n            ec_type = %(ec_type)s\n            ec_num_data_fragments = %(num_data)s\n            ec_num_parity_fragments = 4\n            """'
op|'%'
op|'{'
string|"'num_data'"
op|':'
name|'num_data'
op|','
string|"'ec_type'"
op|':'
name|'DEFAULT_TEST_EC_TYPE'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
nl|'\n'
string|"'Invalid ec_num_data_fragments'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
comment|'# invalid ec_object_segment_size'
nl|'\n'
dedent|''
name|'for'
name|'segment_size'
name|'in'
op|'('
string|"'-4'"
op|','
string|"'0'"
op|','
string|"'x'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'bad_conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n            [storage-policy:0]\n            name = zero\n            [storage-policy:1]\n            name = ec10-4\n            policy_type = erasure_coding\n            ec_object_segment_size = %(segment_size)s\n            ec_type = %(ec_type)s\n            ec_num_data_fragments = 10\n            ec_num_parity_fragments = 4\n            """'
op|'%'
op|'{'
string|"'segment_size'"
op|':'
name|'segment_size'
op|','
nl|'\n'
string|"'ec_type'"
op|':'
name|'DEFAULT_TEST_EC_TYPE'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'PolicyError'
op|','
nl|'\n'
string|"'Invalid ec_object_segment_size'"
op|','
nl|'\n'
name|'parse_storage_policies'
op|','
name|'bad_conf'
op|')'
newline|'\n'
nl|'\n'
comment|'# Additional section added to ensure parser ignores other sections'
nl|'\n'
dedent|''
name|'conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [some-other-section]\n        foo = bar\n        [storage-policy:0]\n        name = zero\n        [storage-policy:5]\n        name = one\n        default = yes\n        [storage-policy:6]\n        name = duplicate-sections-are-ignored\n        [storage-policy:6]\n        name = apple\n        """'
op|')'
newline|'\n'
name|'policies'
op|'='
name|'parse_storage_policies'
op|'('
name|'conf'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'True'
op|','
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'5'
op|')'
op|'.'
name|'is_default'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'False'
op|','
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'0'
op|')'
op|'.'
name|'is_default'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'False'
op|','
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'6'
op|')'
op|'.'
name|'is_default'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"object"'
op|','
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|'"zero"'
op|')'
op|'.'
name|'ring_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"object-5"'
op|','
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|'"one"'
op|')'
op|'.'
name|'ring_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"object-6"'
op|','
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|'"apple"'
op|')'
op|'.'
name|'ring_name'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0'
op|','
name|'int'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|"'zero'"
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|','
name|'int'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|"'one'"
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'6'
op|','
name|'int'
op|'('
name|'policies'
op|'.'
name|'get_by_name'
op|'('
string|"'apple'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"zero"'
op|','
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'0'
op|')'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"zero"'
op|','
name|'policies'
op|'.'
name|'get_by_index'
op|'('
string|'"0"'
op|')'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"one"'
op|','
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'5'
op|')'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"apple"'
op|','
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'6'
op|')'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"zero"'
op|','
name|'policies'
op|'.'
name|'get_by_index'
op|'('
name|'None'
op|')'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|'"zero"'
op|','
name|'policies'
op|'.'
name|'get_by_index'
op|'('
string|"''"
op|')'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policies'
op|'.'
name|'get_by_index'
op|'('
number|'0'
op|')'
op|','
name|'policies'
op|'.'
name|'legacy'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reload_invalid_storage_policies
dedent|''
name|'def'
name|'test_reload_invalid_storage_policies'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf'
op|'='
name|'self'
op|'.'
name|'_conf'
op|'('
string|'"""\n        [storage-policy:0]\n        name = zero\n        [storage-policy:00]\n        name = double-zero\n        """'
op|')'
newline|'\n'
name|'with'
name|'NamedTemporaryFile'
op|'('
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'conf'
op|'.'
name|'write'
op|'('
name|'f'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.storage_policy.SWIFT_CONF_FILE'"
op|','
nl|'\n'
name|'new'
op|'='
name|'f'
op|'.'
name|'name'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'reload_storage_policies'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'SystemExit'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                    '
name|'err_msg'
op|'='
name|'str'
op|'('
name|'e'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'SystemExit not raised'"
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'parts'
op|'='
op|'['
nl|'\n'
string|"'Invalid Storage Policy Configuration'"
op|','
nl|'\n'
string|"'Duplicate index'"
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'expected'
name|'in'
name|'parts'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'expected'
name|'in'
name|'err_msg'
op|','
string|"'%s was not in %s'"
op|'%'
op|'('
name|'expected'
op|','
nl|'\n'
name|'err_msg'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_storage_policy_ordering
dedent|''
dedent|''
name|'def'
name|'test_storage_policy_ordering'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_policies'
op|'='
name|'StoragePolicyCollection'
op|'('
op|'['
nl|'\n'
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'is_default'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'503'
op|','
string|"'error'"
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'204'
op|','
string|"'empty'"
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'404'
op|','
string|"'missing'"
op|')'
op|','
nl|'\n'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
number|'0'
op|','
number|'204'
op|','
number|'404'
op|','
number|'503'
op|']'
op|','
op|'['
name|'int'
op|'('
name|'p'
op|')'
name|'for'
name|'p'
name|'in'
nl|'\n'
name|'sorted'
op|'('
name|'list'
op|'('
name|'test_policies'
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'p503'
op|'='
name|'test_policies'
op|'['
number|'503'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
number|'501'
op|'<'
name|'p503'
op|'<'
number|'507'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_object_ring
dedent|''
name|'def'
name|'test_get_object_ring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'aay'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'bee'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'cee'"
op|','
name|'False'
op|')'
op|']'
newline|'\n'
name|'policies'
op|'='
name|'StoragePolicyCollection'
op|'('
name|'test_policies'
op|')'
newline|'\n'
nl|'\n'
DECL|class|NamedFakeRing
name|'class'
name|'NamedFakeRing'
op|'('
name|'FakeRing'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'swift_dir'
op|','
name|'ring_name'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'ring_name'
op|'='
name|'ring_name'
newline|'\n'
name|'super'
op|'('
name|'NamedFakeRing'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.storage_policy.Ring'"
op|','
nl|'\n'
name|'new'
op|'='
name|'NamedFakeRing'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'policy'
name|'in'
name|'policies'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'policy'
op|'.'
name|'object_ring'
op|')'
newline|'\n'
name|'ring'
op|'='
name|'policies'
op|'.'
name|'get_object_ring'
op|'('
name|'int'
op|'('
name|'policy'
op|')'
op|','
string|"'/path/not/used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ring'
op|'.'
name|'ring_name'
op|','
name|'policy'
op|'.'
name|'ring_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'policy'
op|'.'
name|'object_ring'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'policy'
op|'.'
name|'object_ring'
op|','
name|'NamedFakeRing'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|blow_up
dedent|''
dedent|''
name|'def'
name|'blow_up'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'Exception'
op|'('
string|"'kaboom!'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.storage_policy.Ring'"
op|','
name|'new'
op|'='
name|'blow_up'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'policy'
name|'in'
name|'policies'
op|':'
newline|'\n'
indent|'                '
name|'policy'
op|'.'
name|'load_ring'
op|'('
string|"'/path/not/used'"
op|')'
newline|'\n'
name|'expected'
op|'='
name|'policies'
op|'.'
name|'get_object_ring'
op|'('
name|'int'
op|'('
name|'policy'
op|')'
op|','
nl|'\n'
string|"'/path/not/used'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policy'
op|'.'
name|'object_ring'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
comment|'# bad policy index'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'PolicyError'
op|','
name|'policies'
op|'.'
name|'get_object_ring'
op|','
number|'99'
op|','
nl|'\n'
string|"'/path/not/used'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bind_ports_cache
dedent|''
name|'def'
name|'test_bind_ports_cache'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'aay'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'bee'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'cee'"
op|','
name|'False'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'my_ips'
op|'='
op|'['
string|"'1.2.3.4'"
op|','
string|"'2.3.4.5'"
op|']'
newline|'\n'
name|'other_ips'
op|'='
op|'['
string|"'3.4.5.6'"
op|','
string|"'4.5.6.7'"
op|']'
newline|'\n'
name|'bind_ip'
op|'='
name|'my_ips'
op|'['
number|'1'
op|']'
newline|'\n'
name|'devs_by_ring_name1'
op|'='
op|'{'
nl|'\n'
string|"'object'"
op|':'
op|'['
comment|"# 'aay'"
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'my_ips'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6006'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'other_ips'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6007'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'my_ips'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6008'
op|'}'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'other_ips'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6009'
op|'}'
op|']'
op|','
nl|'\n'
string|"'object-1'"
op|':'
op|'['
comment|"# 'bee'"
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'my_ips'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6006'
op|'}'
op|','
comment|'# dupe'
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'other_ips'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6010'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'my_ips'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6011'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'other_ips'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6012'
op|'}'
op|']'
op|','
nl|'\n'
string|"'object-2'"
op|':'
op|'['
comment|"# 'cee'"
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'my_ips'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6010'
op|'}'
op|','
comment|'# on our IP and a not-us IP'
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'other_ips'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6013'
op|'}'
op|','
nl|'\n'
name|'None'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'my_ips'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6014'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'other_ips'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6015'
op|'}'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'devs_by_ring_name2'
op|'='
op|'{'
nl|'\n'
string|"'object'"
op|':'
op|'['
comment|"# 'aay'"
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'my_ips'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6016'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'other_ips'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6019'
op|'}'
op|']'
op|','
nl|'\n'
string|"'object-1'"
op|':'
op|'['
comment|"# 'bee'"
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'my_ips'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6016'
op|'}'
op|','
comment|'# dupe'
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'other_ips'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6022'
op|'}'
op|']'
op|','
nl|'\n'
string|"'object-2'"
op|':'
op|'['
comment|"# 'cee'"
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'my_ips'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6020'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'region'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
name|'other_ips'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'port'"
op|':'
number|'6025'
op|'}'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'ring_files'
op|'='
op|'['
name|'ring_name'
op|'+'
string|"'.ring.gz'"
nl|'\n'
name|'for'
name|'ring_name'
name|'in'
name|'sorted'
op|'('
name|'devs_by_ring_name1'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|function|_fake_load
name|'def'
name|'_fake_load'
op|'('
name|'gz_path'
op|','
name|'stub_objs'
op|','
name|'metadata_only'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'RingData'
op|'('
nl|'\n'
name|'devs'
op|'='
name|'stub_objs'
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'gz_path'
op|')'
op|'['
op|':'
op|'-'
number|'8'
op|']'
op|']'
op|','
nl|'\n'
name|'replica2part2dev_id'
op|'='
op|'['
op|']'
op|','
nl|'\n'
name|'part_shift'
op|'='
number|'24'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'swift.common.storage_policy.RingData.load'"
nl|'\n'
op|')'
name|'as'
name|'mock_ld'
op|','
name|'patch_policies'
op|'('
name|'test_policies'
op|')'
op|','
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.storage_policy.whataremyips'"
op|')'
name|'as'
name|'mock_whataremyips'
op|','
name|'temptree'
op|'('
name|'ring_files'
op|')'
name|'as'
name|'tempdir'
op|':'
newline|'\n'
indent|'            '
name|'mock_whataremyips'
op|'.'
name|'return_value'
op|'='
name|'my_ips'
newline|'\n'
nl|'\n'
name|'cache'
op|'='
name|'BindPortsCache'
op|'('
name|'tempdir'
op|','
name|'bind_ip'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'bind_ip'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'mock_whataremyips'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'mock_whataremyips'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_ld'
op|'.'
name|'side_effect'
op|'='
name|'partial'
op|'('
name|'_fake_load'
op|','
nl|'\n'
name|'stub_objs'
op|'='
name|'devs_by_ring_name1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
nl|'\n'
number|'6006'
op|','
number|'6008'
op|','
number|'6011'
op|','
number|'6010'
op|','
number|'6014'
op|','
nl|'\n'
op|']'
op|')'
op|','
name|'cache'
op|'.'
name|'all_bind_ports_for_node'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
name|'ring_files'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'metadata_only'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
name|'ring_files'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
name|'metadata_only'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
name|'ring_files'
op|'['
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'metadata_only'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'mock_ld'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'mock_ld'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mock_ld'
op|'.'
name|'side_effect'
op|'='
name|'partial'
op|'('
name|'_fake_load'
op|','
nl|'\n'
name|'stub_objs'
op|'='
name|'devs_by_ring_name2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
nl|'\n'
number|'6006'
op|','
number|'6008'
op|','
number|'6011'
op|','
number|'6010'
op|','
number|'6014'
op|','
nl|'\n'
op|']'
op|')'
op|','
name|'cache'
op|'.'
name|'all_bind_ports_for_node'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'mock_ld'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
comment|"# but when all the file mtimes are made different, it'll"
nl|'\n'
comment|'# reload'
nl|'\n'
name|'for'
name|'gz_file'
name|'in'
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
name|'n'
op|')'
nl|'\n'
name|'for'
name|'n'
name|'in'
name|'ring_files'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'utime'
op|'('
name|'gz_file'
op|','
op|'('
number|'88'
op|','
number|'88'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
nl|'\n'
number|'6016'
op|','
number|'6020'
op|','
nl|'\n'
op|']'
op|')'
op|','
name|'cache'
op|'.'
name|'all_bind_ports_for_node'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
name|'ring_files'
op|'['
number|'0'
op|']'
op|')'
op|','
nl|'\n'
name|'metadata_only'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
name|'ring_files'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
name|'metadata_only'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
name|'ring_files'
op|'['
number|'2'
op|']'
op|')'
op|','
nl|'\n'
name|'metadata_only'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'mock_ld'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'mock_ld'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# Don't do something stupid like crash if a ring file is missing."
nl|'\n'
name|'os'
op|'.'
name|'unlink'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
string|"'object-2.ring.gz'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
nl|'\n'
number|'6016'
op|','
number|'6020'
op|','
nl|'\n'
op|']'
op|')'
op|','
name|'cache'
op|'.'
name|'all_bind_ports_for_node'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'mock_ld'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
comment|'# whataremyips() is only called in the constructor'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'mock_whataremyips'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_singleton_passthrough
dedent|''
name|'def'
name|'test_singleton_passthrough'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_policies'
op|'='
op|'['
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'aay'"
op|','
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'bee'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'2'
op|','
string|"'cee'"
op|','
name|'False'
op|')'
op|']'
newline|'\n'
name|'with'
name|'patch_policies'
op|'('
name|'test_policies'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'POLICIES'
op|'['
name|'int'
op|'('
name|'policy'
op|')'
op|']'
op|','
name|'policy'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quorum_size_replication
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_quorum_size_replication'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_sizes'
op|'='
op|'{'
number|'1'
op|':'
number|'1'
op|','
nl|'\n'
number|'2'
op|':'
number|'1'
op|','
nl|'\n'
number|'3'
op|':'
number|'2'
op|','
nl|'\n'
number|'4'
op|':'
number|'2'
op|','
nl|'\n'
number|'5'
op|':'
number|'3'
op|'}'
newline|'\n'
name|'for'
name|'n'
op|','
name|'expected'
name|'in'
name|'expected_sizes'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'policy'
op|'='
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
nl|'\n'
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'replicas'
op|'='
name|'n'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policy'
op|'.'
name|'quorum'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quorum_size_erasure_coding
dedent|''
dedent|''
name|'def'
name|'test_quorum_size_erasure_coding'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_ec_policies'
op|'='
op|'['
nl|'\n'
name|'ECStoragePolicy'
op|'('
number|'10'
op|','
string|"'ec8-2'"
op|','
name|'ec_type'
op|'='
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'8'
op|','
name|'ec_nparity'
op|'='
number|'2'
op|')'
op|','
nl|'\n'
name|'ECStoragePolicy'
op|'('
number|'11'
op|','
string|"'df10-6'"
op|','
name|'ec_type'
op|'='
string|"'flat_xor_hd_4'"
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'10'
op|','
name|'ec_nparity'
op|'='
number|'6'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'for'
name|'ec_policy'
name|'in'
name|'test_ec_policies'
op|':'
newline|'\n'
indent|'            '
name|'k'
op|'='
name|'ec_policy'
op|'.'
name|'ec_ndata'
newline|'\n'
name|'expected_size'
op|'='
name|'k'
op|'+'
name|'ec_policy'
op|'.'
name|'pyeclib_driver'
op|'.'
name|'min_parity_fragments_needed'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_size'
op|','
name|'ec_policy'
op|'.'
name|'quorum'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validate_ring
dedent|''
dedent|''
name|'def'
name|'test_validate_ring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_policies'
op|'='
op|'['
nl|'\n'
name|'ECStoragePolicy'
op|'('
number|'0'
op|','
string|"'ec8-2'"
op|','
name|'ec_type'
op|'='
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'8'
op|','
name|'ec_nparity'
op|'='
number|'2'
op|','
nl|'\n'
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'replicas'
op|'='
number|'8'
op|')'
op|','
nl|'\n'
name|'is_default'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'ECStoragePolicy'
op|'('
number|'1'
op|','
string|"'ec10-4'"
op|','
name|'ec_type'
op|'='
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'10'
op|','
name|'ec_nparity'
op|'='
number|'4'
op|','
nl|'\n'
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'replicas'
op|'='
number|'10'
op|')'
op|')'
op|','
nl|'\n'
name|'ECStoragePolicy'
op|'('
number|'2'
op|','
string|"'ec4-2'"
op|','
name|'ec_type'
op|'='
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'4'
op|','
name|'ec_nparity'
op|'='
number|'2'
op|','
nl|'\n'
name|'object_ring'
op|'='
name|'FakeRing'
op|'('
name|'replicas'
op|'='
number|'7'
op|')'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'policies'
op|'='
name|'StoragePolicyCollection'
op|'('
name|'test_policies'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'policy'
name|'in'
name|'policies'
op|':'
newline|'\n'
indent|'            '
name|'msg'
op|'='
string|"'EC ring for policy %s needs to be configured with '"
string|"'exactly %d nodes.'"
op|'%'
op|'('
name|'policy'
op|'.'
name|'name'
op|','
name|'policy'
op|'.'
name|'ec_ndata'
op|'+'
name|'policy'
op|'.'
name|'ec_nparity'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaisesWithMessage'
op|'('
name|'RingValidationError'
op|','
name|'msg'
op|','
nl|'\n'
name|'policy'
op|'.'
name|'_validate_ring'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_storage_policy_get_info
dedent|''
dedent|''
name|'def'
name|'test_storage_policy_get_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'test_policies'
op|'='
op|'['
nl|'\n'
name|'StoragePolicy'
op|'('
number|'0'
op|','
string|"'zero'"
op|','
name|'is_default'
op|'='
name|'True'
op|')'
op|','
nl|'\n'
name|'StoragePolicy'
op|'('
number|'1'
op|','
string|"'one'"
op|','
name|'is_deprecated'
op|'='
name|'True'
op|','
nl|'\n'
name|'aliases'
op|'='
string|"'tahi, uno'"
op|')'
op|','
nl|'\n'
name|'ECStoragePolicy'
op|'('
number|'10'
op|','
string|"'ten'"
op|','
nl|'\n'
name|'ec_type'
op|'='
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'10'
op|','
name|'ec_nparity'
op|'='
number|'3'
op|')'
op|','
nl|'\n'
name|'ECStoragePolicy'
op|'('
number|'11'
op|','
string|"'done'"
op|','
name|'is_deprecated'
op|'='
name|'True'
op|','
nl|'\n'
name|'ec_type'
op|'='
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
name|'ec_ndata'
op|'='
number|'10'
op|','
name|'ec_nparity'
op|'='
number|'3'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'policies'
op|'='
name|'StoragePolicyCollection'
op|'('
name|'test_policies'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
comment|'# default replication'
nl|'\n'
op|'('
number|'0'
op|','
name|'True'
op|')'
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'zero'"
op|','
nl|'\n'
string|"'aliases'"
op|':'
string|"'zero'"
op|','
nl|'\n'
string|"'default'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'deprecated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'policy_type'"
op|':'
name|'REPL_POLICY'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'('
number|'0'
op|','
name|'False'
op|')'
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'zero'"
op|','
nl|'\n'
string|"'aliases'"
op|':'
string|"'zero'"
op|','
nl|'\n'
string|"'default'"
op|':'
name|'True'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
comment|'# deprecated replication'
nl|'\n'
op|'('
number|'1'
op|','
name|'True'
op|')'
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'one'"
op|','
nl|'\n'
string|"'aliases'"
op|':'
string|"'one, tahi, uno'"
op|','
nl|'\n'
string|"'default'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'deprecated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'policy_type'"
op|':'
name|'REPL_POLICY'
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'('
number|'1'
op|','
name|'False'
op|')'
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'one'"
op|','
nl|'\n'
string|"'aliases'"
op|':'
string|"'one, tahi, uno'"
op|','
nl|'\n'
string|"'deprecated'"
op|':'
name|'True'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
comment|'# enabled ec'
nl|'\n'
op|'('
number|'10'
op|','
name|'True'
op|')'
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'ten'"
op|','
nl|'\n'
string|"'aliases'"
op|':'
string|"'ten'"
op|','
nl|'\n'
string|"'default'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'deprecated'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'policy_type'"
op|':'
name|'EC_POLICY'
op|','
nl|'\n'
string|"'ec_type'"
op|':'
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
string|"'ec_num_data_fragments'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'ec_num_parity_fragments'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'ec_object_segment_size'"
op|':'
name|'DEFAULT_EC_OBJECT_SEGMENT_SIZE'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'('
number|'10'
op|','
name|'False'
op|')'
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'ten'"
op|','
nl|'\n'
string|"'aliases'"
op|':'
string|"'ten'"
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
comment|'# deprecated ec'
nl|'\n'
op|'('
number|'11'
op|','
name|'True'
op|')'
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'done'"
op|','
nl|'\n'
string|"'aliases'"
op|':'
string|"'done'"
op|','
nl|'\n'
string|"'default'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'deprecated'"
op|':'
name|'True'
op|','
nl|'\n'
string|"'policy_type'"
op|':'
name|'EC_POLICY'
op|','
nl|'\n'
string|"'ec_type'"
op|':'
name|'DEFAULT_TEST_EC_TYPE'
op|','
nl|'\n'
string|"'ec_num_data_fragments'"
op|':'
number|'10'
op|','
nl|'\n'
string|"'ec_num_parity_fragments'"
op|':'
number|'3'
op|','
nl|'\n'
string|"'ec_object_segment_size'"
op|':'
name|'DEFAULT_EC_OBJECT_SEGMENT_SIZE'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'('
number|'11'
op|','
name|'False'
op|')'
op|':'
op|'{'
nl|'\n'
string|"'name'"
op|':'
string|"'done'"
op|','
nl|'\n'
string|"'aliases'"
op|':'
string|"'done'"
op|','
nl|'\n'
string|"'deprecated'"
op|':'
name|'True'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'maxDiff'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'policies'
op|':'
newline|'\n'
indent|'            '
name|'expected_info'
op|'='
name|'expected'
op|'['
op|'('
name|'int'
op|'('
name|'policy'
op|')'
op|','
name|'True'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policy'
op|'.'
name|'get_info'
op|'('
name|'config'
op|'='
name|'True'
op|')'
op|','
name|'expected_info'
op|')'
newline|'\n'
name|'expected_info'
op|'='
name|'expected'
op|'['
op|'('
name|'int'
op|'('
name|'policy'
op|')'
op|','
name|'False'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'policy'
op|'.'
name|'get_info'
op|'('
name|'config'
op|'='
name|'False'
op|')'
op|','
name|'expected_info'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
