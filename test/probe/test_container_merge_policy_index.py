begin_unit
comment|'#!/usr/bin/python -u'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'from'
name|'nose'
name|'import'
name|'SkipTest'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'manager'
name|'import'
name|'Manager'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'internal_client'
name|'import'
name|'InternalClient'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'utils'
op|','
name|'direct_client'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'POLICIES'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'http'
name|'import'
name|'HTTP_NOT_FOUND'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'probe'
op|'.'
name|'brain'
name|'import'
name|'BrainSplitter'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'probe'
op|'.'
name|'common'
name|'import'
name|'ReplProbeTest'
op|','
name|'ENABLED_POLICIES'
newline|'\n'
nl|'\n'
name|'from'
name|'swiftclient'
name|'import'
name|'client'
op|','
name|'ClientException'
newline|'\n'
nl|'\n'
DECL|variable|TIMEOUT
name|'TIMEOUT'
op|'='
number|'60'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestContainerMergePolicyIndex
name|'class'
name|'TestContainerMergePolicyIndex'
op|'('
name|'ReplProbeTest'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'ENABLED_POLICIES'
op|')'
op|'<'
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'SkipTest'
op|'('
string|"'Need more than one policy'"
op|')'
newline|'\n'
dedent|''
name|'super'
op|'('
name|'TestContainerMergePolicyIndex'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
string|"'container-%s'"
op|'%'
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
string|"'object-%s'"
op|'%'
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'='
name|'BrainSplitter'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
string|"'container'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_merge_storage_policy_index
dedent|''
name|'def'
name|'test_merge_storage_policy_index'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# generic split brain'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_object'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
comment|'# make sure we have some manner of split brain'
nl|'\n'
name|'container_part'
op|','
name|'container_nodes'
op|'='
name|'self'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'head_responses'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'container_nodes'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
name|'direct_client'
op|'.'
name|'direct_head_container'
op|'('
nl|'\n'
name|'node'
op|','
name|'container_part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'head_responses'
op|'.'
name|'append'
op|'('
op|'('
name|'node'
op|','
name|'metadata'
op|')'
op|')'
newline|'\n'
dedent|''
name|'found_policy_indexes'
op|'='
name|'set'
op|'('
name|'metadata'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
name|'for'
nl|'\n'
name|'node'
op|','
name|'metadata'
name|'in'
name|'head_responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'len'
op|'('
name|'found_policy_indexes'
op|')'
op|'>'
number|'1'
op|','
nl|'\n'
string|"'primary nodes did not disagree about policy index %r'"
op|'%'
nl|'\n'
name|'head_responses'
op|')'
newline|'\n'
comment|'# find our object'
nl|'\n'
name|'orig_policy_index'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'policy_index'
name|'in'
name|'found_policy_indexes'
op|':'
newline|'\n'
indent|'            '
name|'object_ring'
op|'='
name|'POLICIES'
op|'.'
name|'get_object_ring'
op|'('
name|'policy_index'
op|','
string|"'/etc/swift'"
op|')'
newline|'\n'
name|'part'
op|','
name|'nodes'
op|'='
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'direct_client'
op|'.'
name|'direct_head_object'
op|'('
nl|'\n'
name|'node'
op|','
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
nl|'\n'
name|'policy_index'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'direct_client'
op|'.'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'orig_policy_index'
op|'='
name|'policy_index'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
name|'if'
name|'orig_policy_index'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Unable to find /%s/%s/%s in %r'"
op|'%'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'found_policy_indexes'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
name|'Manager'
op|'('
op|'['
string|"'container-reconciler'"
op|']'
op|')'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
comment|'# validate containers'
nl|'\n'
name|'head_responses'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'container_nodes'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
name|'direct_client'
op|'.'
name|'direct_head_container'
op|'('
nl|'\n'
name|'node'
op|','
name|'container_part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'head_responses'
op|'.'
name|'append'
op|'('
op|'('
name|'node'
op|','
name|'metadata'
op|')'
op|')'
newline|'\n'
dedent|''
name|'found_policy_indexes'
op|'='
name|'set'
op|'('
name|'metadata'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
name|'for'
nl|'\n'
name|'node'
op|','
name|'metadata'
name|'in'
name|'head_responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'len'
op|'('
name|'found_policy_indexes'
op|')'
op|'=='
number|'1'
op|','
nl|'\n'
string|"'primary nodes disagree about policy index %r'"
op|'%'
nl|'\n'
name|'head_responses'
op|')'
newline|'\n'
nl|'\n'
name|'expected_policy_index'
op|'='
name|'found_policy_indexes'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'orig_policy_index'
op|','
name|'expected_policy_index'
op|')'
newline|'\n'
comment|'# validate object placement'
nl|'\n'
name|'orig_policy_ring'
op|'='
name|'POLICIES'
op|'.'
name|'get_object_ring'
op|'('
name|'orig_policy_index'
op|','
nl|'\n'
string|"'/etc/swift'"
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'orig_policy_ring'
op|'.'
name|'devs'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_client'
op|'.'
name|'direct_head_object'
op|'('
nl|'\n'
name|'node'
op|','
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'orig_policy_index'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'direct_client'
op|'.'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'=='
name|'HTTP_NOT_FOUND'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'raise'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Found /%s/%s/%s in %s'"
op|'%'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'orig_policy_index'
op|')'
op|')'
newline|'\n'
comment|'# use proxy to access object (bad container info might be cached...)'
nl|'\n'
dedent|''
dedent|''
name|'timeout'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
name|'TIMEOUT'
newline|'\n'
name|'while'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'<'
name|'timeout'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'metadata'
op|'='
name|'client'
op|'.'
name|'head_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'!='
name|'HTTP_NOT_FOUND'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
newline|'\n'
dedent|''
name|'time'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'could not HEAD /%s/%s/%s/ from policy %s '"
nl|'\n'
string|"'after %s seconds.'"
op|'%'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'expected_policy_index'
op|','
name|'TIMEOUT'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reconcile_delete
dedent|''
dedent|''
name|'def'
name|'test_reconcile_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# generic split brain'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_object'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'delete_object'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
comment|'# make sure we have some manner of split brain'
nl|'\n'
name|'container_part'
op|','
name|'container_nodes'
op|'='
name|'self'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'head_responses'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'container_nodes'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
name|'direct_client'
op|'.'
name|'direct_head_container'
op|'('
nl|'\n'
name|'node'
op|','
name|'container_part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'head_responses'
op|'.'
name|'append'
op|'('
op|'('
name|'node'
op|','
name|'metadata'
op|')'
op|')'
newline|'\n'
dedent|''
name|'found_policy_indexes'
op|'='
name|'set'
op|'('
name|'metadata'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
name|'for'
nl|'\n'
name|'node'
op|','
name|'metadata'
name|'in'
name|'head_responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'len'
op|'('
name|'found_policy_indexes'
op|')'
op|'>'
number|'1'
op|','
nl|'\n'
string|"'primary nodes did not disagree about policy index %r'"
op|'%'
nl|'\n'
name|'head_responses'
op|')'
newline|'\n'
comment|'# find our object'
nl|'\n'
name|'orig_policy_index'
op|'='
name|'ts_policy_index'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'policy_index'
name|'in'
name|'found_policy_indexes'
op|':'
newline|'\n'
indent|'            '
name|'object_ring'
op|'='
name|'POLICIES'
op|'.'
name|'get_object_ring'
op|'('
name|'policy_index'
op|','
string|"'/etc/swift'"
op|')'
newline|'\n'
name|'part'
op|','
name|'nodes'
op|'='
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'direct_client'
op|'.'
name|'direct_head_object'
op|'('
nl|'\n'
name|'node'
op|','
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
nl|'\n'
name|'policy_index'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'direct_client'
op|'.'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                    '
name|'if'
string|"'x-backend-timestamp'"
name|'in'
name|'err'
op|'.'
name|'http_headers'
op|':'
newline|'\n'
indent|'                        '
name|'ts_policy_index'
op|'='
name|'policy_index'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'orig_policy_index'
op|'='
name|'policy_index'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'not'
name|'orig_policy_index'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Unable to find /%s/%s/%s in %r'"
op|'%'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'found_policy_indexes'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'ts_policy_index'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Unable to find tombstone /%s/%s/%s in %r'"
op|'%'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'found_policy_indexes'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
name|'Manager'
op|'('
op|'['
string|"'container-reconciler'"
op|']'
op|')'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
comment|'# validate containers'
nl|'\n'
name|'head_responses'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'container_nodes'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
name|'direct_client'
op|'.'
name|'direct_head_container'
op|'('
nl|'\n'
name|'node'
op|','
name|'container_part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'head_responses'
op|'.'
name|'append'
op|'('
op|'('
name|'node'
op|','
name|'metadata'
op|')'
op|')'
newline|'\n'
dedent|''
name|'new_found_policy_indexes'
op|'='
name|'set'
op|'('
name|'metadata'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
name|'for'
name|'node'
op|','
nl|'\n'
name|'metadata'
name|'in'
name|'head_responses'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'len'
op|'('
name|'new_found_policy_indexes'
op|')'
op|'=='
number|'1'
op|','
nl|'\n'
string|"'primary nodes disagree about policy index %r'"
op|'%'
nl|'\n'
name|'dict'
op|'('
op|'('
name|'node'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'metadata'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|')'
nl|'\n'
name|'for'
name|'node'
op|','
name|'metadata'
name|'in'
name|'head_responses'
op|')'
op|')'
newline|'\n'
name|'expected_policy_index'
op|'='
name|'new_found_policy_indexes'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'orig_policy_index'
op|','
name|'expected_policy_index'
op|')'
newline|'\n'
comment|'# validate object fully deleted'
nl|'\n'
name|'for'
name|'policy_index'
name|'in'
name|'found_policy_indexes'
op|':'
newline|'\n'
indent|'            '
name|'object_ring'
op|'='
name|'POLICIES'
op|'.'
name|'get_object_ring'
op|'('
name|'policy_index'
op|','
string|"'/etc/swift'"
op|')'
newline|'\n'
name|'part'
op|','
name|'nodes'
op|'='
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'direct_client'
op|'.'
name|'direct_head_object'
op|'('
nl|'\n'
name|'node'
op|','
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
nl|'\n'
name|'policy_index'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'direct_client'
op|'.'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'err'
op|'.'
name|'http_status'
op|'=='
name|'HTTP_NOT_FOUND'
op|':'
newline|'\n'
indent|'                        '
name|'continue'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Found /%s/%s/%s in %s on %s'"
op|'%'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'orig_policy_index'
op|','
name|'node'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reconcile_manifest
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_reconcile_manifest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manifest_data'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|write_part
name|'def'
name|'write_part'
op|'('
name|'i'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'body'
op|'='
string|"'VERIFY%0.2d'"
op|'%'
name|'i'
op|'+'
string|"'\\x00'"
op|'*'
number|'1048576'
newline|'\n'
name|'part_name'
op|'='
string|"'manifest_part_%0.2d'"
op|'%'
name|'i'
newline|'\n'
name|'manifest_entry'
op|'='
op|'{'
nl|'\n'
string|'"path"'
op|':'
string|'"/%s/%s"'
op|'%'
op|'('
name|'self'
op|'.'
name|'container_name'
op|','
name|'part_name'
op|')'
op|','
nl|'\n'
string|'"etag"'
op|':'
name|'md5'
op|'('
name|'body'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
nl|'\n'
string|'"size_bytes"'
op|':'
name|'len'
op|'('
name|'body'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'client'
op|'.'
name|'put_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'part_name'
op|','
name|'contents'
op|'='
name|'body'
op|')'
newline|'\n'
name|'manifest_data'
op|'.'
name|'append'
op|'('
name|'manifest_entry'
op|')'
newline|'\n'
nl|'\n'
comment|'# get an old container stashed'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'policy'
op|'='
name|'random'
op|'.'
name|'choice'
op|'('
name|'ENABLED_POLICIES'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy'
op|'.'
name|'idx'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
comment|'# write some parts'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'write_part'
op|'('
name|'i'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'wrong_policy'
op|'='
name|'random'
op|'.'
name|'choice'
op|'('
op|'['
name|'p'
name|'for'
name|'p'
name|'in'
name|'ENABLED_POLICIES'
nl|'\n'
name|'if'
name|'p'
name|'is'
name|'not'
name|'policy'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'wrong_policy'
op|'.'
name|'idx'
op|')'
newline|'\n'
comment|'# write some more parts'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|','
number|'20'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'write_part'
op|'('
name|'i'
op|')'
newline|'\n'
nl|'\n'
comment|'# write manifest'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'client'
op|'.'
name|'put_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'contents'
op|'='
name|'utils'
op|'.'
name|'json'
op|'.'
name|'dumps'
op|'('
name|'manifest_data'
op|')'
op|','
nl|'\n'
name|'query_string'
op|'='
string|"'multipart-manifest=put'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
comment|"# so as it works out, you can't really upload a multi-part"
nl|'\n'
comment|'# manifest for objects that are currently misplaced - you have to'
nl|'\n'
comment|"# wait until they're all available - which is about the same as"
nl|'\n'
comment|'# some other failure that causes data to be unavailable to the'
nl|'\n'
comment|'# proxy at the time of upload'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'err'
op|'.'
name|'http_status'
op|','
number|'400'
op|')'
newline|'\n'
nl|'\n'
comment|"# but what the heck, we'll sneak one in just to see what happens..."
nl|'\n'
dedent|''
name|'direct_manifest_name'
op|'='
name|'self'
op|'.'
name|'object_name'
op|'+'
string|"'-direct-test'"
newline|'\n'
name|'object_ring'
op|'='
name|'POLICIES'
op|'.'
name|'get_object_ring'
op|'('
name|'wrong_policy'
op|'.'
name|'idx'
op|','
string|"'/etc/swift'"
op|')'
newline|'\n'
name|'part'
op|','
name|'nodes'
op|'='
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'direct_manifest_name'
op|')'
newline|'\n'
name|'container_part'
op|'='
name|'self'
op|'.'
name|'container_ring'
op|'.'
name|'get_part'
op|'('
name|'self'
op|'.'
name|'account'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
nl|'\n'
DECL|function|translate_direct
name|'def'
name|'translate_direct'
op|'('
name|'data'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'{'
nl|'\n'
string|"'hash'"
op|':'
name|'data'
op|'['
string|"'etag'"
op|']'
op|','
nl|'\n'
string|"'bytes'"
op|':'
name|'data'
op|'['
string|"'size_bytes'"
op|']'
op|','
nl|'\n'
string|"'name'"
op|':'
name|'data'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
dedent|''
name|'direct_manifest_data'
op|'='
name|'map'
op|'('
name|'translate_direct'
op|','
name|'manifest_data'
op|')'
newline|'\n'
name|'headers'
op|'='
op|'{'
nl|'\n'
string|"'x-container-host'"
op|':'
string|"','"
op|'.'
name|'join'
op|'('
string|"'%s:%s'"
op|'%'
op|'('
name|'n'
op|'['
string|"'ip'"
op|']'
op|','
name|'n'
op|'['
string|"'port'"
op|']'
op|')'
name|'for'
name|'n'
nl|'\n'
name|'in'
name|'self'
op|'.'
name|'container_ring'
op|'.'
name|'devs'
op|')'
op|','
nl|'\n'
string|"'x-container-device'"
op|':'
string|"','"
op|'.'
name|'join'
op|'('
name|'n'
op|'['
string|"'device'"
op|']'
name|'for'
name|'n'
name|'in'
nl|'\n'
name|'self'
op|'.'
name|'container_ring'
op|'.'
name|'devs'
op|')'
op|','
nl|'\n'
string|"'x-container-partition'"
op|':'
name|'container_part'
op|','
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'wrong_policy'
op|'.'
name|'idx'
op|','
nl|'\n'
string|"'X-Static-Large-Object'"
op|':'
string|"'True'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'direct_client'
op|'.'
name|'direct_put_object'
op|'('
nl|'\n'
name|'node'
op|','
name|'part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'direct_manifest_name'
op|','
nl|'\n'
name|'contents'
op|'='
name|'utils'
op|'.'
name|'json'
op|'.'
name|'dumps'
op|'('
name|'direct_manifest_data'
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'break'
comment|'# one should do it...'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
name|'Manager'
op|'('
op|'['
string|"'container-reconciler'"
op|']'
op|')'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
comment|'# clear proxy cache'
nl|'\n'
name|'client'
op|'.'
name|'post_container'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|"# let's see how that direct upload worked out..."
nl|'\n'
name|'metadata'
op|','
name|'body'
op|'='
name|'client'
op|'.'
name|'get_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'direct_manifest_name'
op|','
nl|'\n'
name|'query_string'
op|'='
string|"'multipart-manifest=get'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'x-static-large-object'"
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|','
string|"'true'"
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'entry'
name|'in'
name|'enumerate'
op|'('
name|'utils'
op|'.'
name|'json'
op|'.'
name|'loads'
op|'('
name|'body'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
name|'in'
op|'('
string|"'hash'"
op|','
string|"'bytes'"
op|','
string|"'name'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'entry'
op|'['
name|'key'
op|']'
op|','
name|'direct_manifest_data'
op|'['
name|'i'
op|']'
op|'['
name|'key'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'metadata'
op|','
name|'body'
op|'='
name|'client'
op|'.'
name|'get_object'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'direct_manifest_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'x-static-large-object'"
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|','
string|"'true'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'int'
op|'('
name|'metadata'
op|'['
string|"'content-length'"
op|']'
op|')'
op|','
nl|'\n'
name|'sum'
op|'('
name|'part'
op|'['
string|"'size_bytes'"
op|']'
name|'for'
name|'part'
name|'in'
name|'manifest_data'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"''"
op|'.'
name|'join'
op|'('
string|"'VERIFY%0.2d'"
op|'%'
name|'i'
op|'+'
string|"'\\x00'"
op|'*'
number|'1048576'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'20'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# and regular upload should work now too'
nl|'\n'
name|'client'
op|'.'
name|'put_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'contents'
op|'='
name|'utils'
op|'.'
name|'json'
op|'.'
name|'dumps'
op|'('
name|'manifest_data'
op|')'
op|','
nl|'\n'
name|'query_string'
op|'='
string|"'multipart-manifest=put'"
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'client'
op|'.'
name|'head_object'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'int'
op|'('
name|'metadata'
op|'['
string|"'content-length'"
op|']'
op|')'
op|','
nl|'\n'
name|'sum'
op|'('
name|'part'
op|'['
string|"'size_bytes'"
op|']'
name|'for'
name|'part'
name|'in'
name|'manifest_data'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reconciler_move_object_twice
dedent|''
name|'def'
name|'test_reconciler_move_object_twice'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# select some policies'
nl|'\n'
indent|'        '
name|'old_policy'
op|'='
name|'random'
op|'.'
name|'choice'
op|'('
name|'ENABLED_POLICIES'
op|')'
newline|'\n'
name|'new_policy'
op|'='
name|'random'
op|'.'
name|'choice'
op|'('
op|'['
name|'p'
name|'for'
name|'p'
name|'in'
name|'ENABLED_POLICIES'
nl|'\n'
name|'if'
name|'p'
op|'!='
name|'old_policy'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# setup a split brain'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
comment|'# get old_policy on two primaries'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy_index'
op|'='
name|'int'
op|'('
name|'old_policy'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
comment|'# force a recreate on handoffs'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy_index'
op|'='
name|'int'
op|'('
name|'old_policy'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'delete_container'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'policy_index'
op|'='
name|'int'
op|'('
name|'new_policy'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_object'
op|'('
op|')'
comment|'# populate memcache with new_policy'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# at this point two primaries have old policy'
nl|'\n'
name|'container_part'
op|','
name|'container_nodes'
op|'='
name|'self'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'head_responses'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'container_nodes'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
name|'direct_client'
op|'.'
name|'direct_head_container'
op|'('
nl|'\n'
name|'node'
op|','
name|'container_part'
op|','
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'head_responses'
op|'.'
name|'append'
op|'('
op|'('
name|'node'
op|','
name|'metadata'
op|')'
op|')'
newline|'\n'
dedent|''
name|'old_container_node_ids'
op|'='
op|'['
nl|'\n'
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
op|','
name|'metadata'
name|'in'
name|'head_responses'
nl|'\n'
name|'if'
name|'int'
op|'('
name|'old_policy'
op|')'
op|'=='
nl|'\n'
name|'int'
op|'('
name|'metadata'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'old_container_node_ids'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# hopefully memcache still has the new policy cached'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_object'
op|'('
op|')'
newline|'\n'
comment|'# double-check object correctly written to new policy'
nl|'\n'
name|'conf_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'Manager'
op|'('
op|'['
string|"'container-reconciler'"
op|']'
op|')'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'conf_files'
op|'.'
name|'extend'
op|'('
name|'server'
op|'.'
name|'conf_files'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'conf_file'
op|'='
name|'conf_files'
op|'['
number|'0'
op|']'
newline|'\n'
name|'client'
op|'='
name|'InternalClient'
op|'('
name|'conf_file'
op|','
string|"'probe-test'"
op|','
number|'3'
op|')'
newline|'\n'
name|'client'
op|'.'
name|'get_object_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'int'
op|'('
name|'new_policy'
op|')'
op|'}'
op|')'
newline|'\n'
name|'client'
op|'.'
name|'get_object_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'4'
op|','
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'int'
op|'('
name|'old_policy'
op|')'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# shutdown the containers that know about the new policy'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# and get rows enqueued from old nodes'
nl|'\n'
name|'for'
name|'server_type'
name|'in'
op|'('
string|"'container-replicator'"
op|','
string|"'container-updater'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'server'
op|'='
name|'Manager'
op|'('
op|'['
name|'server_type'
op|']'
op|')'
newline|'\n'
name|'tuple'
op|'('
name|'server'
op|'.'
name|'once'
op|'('
name|'number'
op|'='
name|'n'
op|'+'
number|'1'
op|')'
name|'for'
name|'n'
name|'in'
name|'old_container_node_ids'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify entry in the queue for the "misplaced" new_policy'
nl|'\n'
dedent|''
name|'for'
name|'container'
name|'in'
name|'client'
op|'.'
name|'iter_containers'
op|'('
string|"'.misplaced_objects'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'obj'
name|'in'
name|'client'
op|'.'
name|'iter_objects'
op|'('
string|"'.misplaced_objects'"
op|','
nl|'\n'
name|'container'
op|'['
string|"'name'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'expected'
op|'='
string|"'%d:/%s/%s/%s'"
op|'%'
op|'('
name|'new_policy'
op|','
name|'self'
op|'.'
name|'account'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'obj'
op|'['
string|"'name'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'Manager'
op|'('
op|'['
string|"'container-reconciler'"
op|']'
op|')'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# verify object in old_policy'
nl|'\n'
name|'client'
op|'.'
name|'get_object_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'int'
op|'('
name|'old_policy'
op|')'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify object is *not* in new_policy'
nl|'\n'
name|'client'
op|'.'
name|'get_object_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'4'
op|','
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'int'
op|'('
name|'new_policy'
op|')'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# verify entry in the queue'
nl|'\n'
name|'client'
op|'='
name|'InternalClient'
op|'('
name|'conf_file'
op|','
string|"'probe-test'"
op|','
number|'3'
op|')'
newline|'\n'
name|'for'
name|'container'
name|'in'
name|'client'
op|'.'
name|'iter_containers'
op|'('
string|"'.misplaced_objects'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'obj'
name|'in'
name|'client'
op|'.'
name|'iter_objects'
op|'('
string|"'.misplaced_objects'"
op|','
nl|'\n'
name|'container'
op|'['
string|"'name'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'expected'
op|'='
string|"'%d:/%s/%s/%s'"
op|'%'
op|'('
name|'old_policy'
op|','
name|'self'
op|'.'
name|'account'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'obj'
op|'['
string|"'name'"
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'Manager'
op|'('
op|'['
string|"'container-reconciler'"
op|']'
op|')'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# and now it flops back'
nl|'\n'
name|'client'
op|'.'
name|'get_object_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'int'
op|'('
name|'new_policy'
op|')'
op|'}'
op|')'
newline|'\n'
name|'client'
op|'.'
name|'get_object_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'4'
op|','
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'int'
op|'('
name|'old_policy'
op|')'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# make sure the queue is settled'
nl|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
name|'for'
name|'container'
name|'in'
name|'client'
op|'.'
name|'iter_containers'
op|'('
string|"'.misplaced_objects'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'obj'
name|'in'
name|'client'
op|'.'
name|'iter_objects'
op|'('
string|"'.misplaced_objects'"
op|','
nl|'\n'
name|'container'
op|'['
string|"'name'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Found unexpected object %r in the queue'"
op|'%'
name|'obj'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|'"__main__"'
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
