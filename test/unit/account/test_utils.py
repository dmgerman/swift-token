begin_unit
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'itertools'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'account'
name|'import'
name|'utils'
op|','
name|'backend'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'POLICIES'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'Timestamp'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'HeaderKeyDict'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'patch_policies'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestFakeAccountBroker
name|'class'
name|'TestFakeAccountBroker'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_fake_broker_get_info
indent|'    '
name|'def'
name|'test_fake_broker_get_info'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'utils'
op|'.'
name|'FakeAccountBroker'
op|'('
op|')'
newline|'\n'
name|'now'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.time'"
op|','
name|'new'
op|'='
name|'lambda'
op|':'
name|'now'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'info'
op|'='
name|'broker'
op|'.'
name|'get_info'
op|'('
op|')'
newline|'\n'
dedent|''
name|'timestamp'
op|'='
name|'Timestamp'
op|'('
name|'now'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'container_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'object_count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'bytes_used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'created_at'"
op|':'
name|'timestamp'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'put_timestamp'"
op|':'
name|'timestamp'
op|'.'
name|'internal'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'info'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fake_broker_list_containers_iter
dedent|''
name|'def'
name|'test_fake_broker_list_containers_iter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'utils'
op|'.'
name|'FakeAccountBroker'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'broker'
op|'.'
name|'list_containers_iter'
op|'('
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fake_broker_metadata
dedent|''
name|'def'
name|'test_fake_broker_metadata'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'utils'
op|'.'
name|'FakeAccountBroker'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'broker'
op|'.'
name|'metadata'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fake_broker_get_policy_stats
dedent|''
name|'def'
name|'test_fake_broker_get_policy_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'utils'
op|'.'
name|'FakeAccountBroker'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'broker'
op|'.'
name|'get_policy_stats'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestAccountUtils
dedent|''
dedent|''
name|'class'
name|'TestAccountUtils'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_get_response_headers_fake_broker
indent|'    '
name|'def'
name|'test_get_response_headers_fake_broker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'utils'
op|'.'
name|'FakeAccountBroker'
op|'('
op|')'
newline|'\n'
name|'now'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'X-Account-Container-Count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'X-Account-Object-Count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'X-Account-Bytes-Used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'Timestamp'
op|'('
name|'now'
op|')'
op|'.'
name|'normal'
op|','
nl|'\n'
string|"'X-PUT-Timestamp'"
op|':'
name|'Timestamp'
op|'('
name|'now'
op|')'
op|'.'
name|'normal'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.time'"
op|','
name|'new'
op|'='
name|'lambda'
op|':'
name|'now'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'resp_headers'
op|'='
name|'utils'
op|'.'
name|'get_response_headers'
op|'('
name|'broker'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp_headers'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_response_headers_empty_memory_broker
dedent|''
name|'def'
name|'test_get_response_headers_empty_memory_broker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'backend'
op|'.'
name|'AccountBroker'
op|'('
string|"':memory:'"
op|','
name|'account'
op|'='
string|"'a'"
op|')'
newline|'\n'
name|'now'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.time'"
op|','
name|'new'
op|'='
name|'lambda'
op|':'
name|'now'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'broker'
op|'.'
name|'initialize'
op|'('
name|'Timestamp'
op|'('
name|'now'
op|')'
op|'.'
name|'internal'
op|')'
newline|'\n'
dedent|''
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'X-Account-Container-Count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'X-Account-Object-Count'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'X-Account-Bytes-Used'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'Timestamp'
op|'('
name|'now'
op|')'
op|'.'
name|'normal'
op|','
nl|'\n'
string|"'X-PUT-Timestamp'"
op|':'
name|'Timestamp'
op|'('
name|'now'
op|')'
op|'.'
name|'normal'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'resp_headers'
op|'='
name|'utils'
op|'.'
name|'get_response_headers'
op|'('
name|'broker'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp_headers'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'patch_policies'
newline|'\n'
DECL|member|test_get_response_headers_with_data
name|'def'
name|'test_get_response_headers_with_data'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'broker'
op|'='
name|'backend'
op|'.'
name|'AccountBroker'
op|'('
string|"':memory:'"
op|','
name|'account'
op|'='
string|"'a'"
op|')'
newline|'\n'
name|'now'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.time'"
op|','
name|'new'
op|'='
name|'lambda'
op|':'
name|'now'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'broker'
op|'.'
name|'initialize'
op|'('
name|'Timestamp'
op|'('
name|'now'
op|')'
op|'.'
name|'internal'
op|')'
newline|'\n'
comment|'# add some container data'
nl|'\n'
dedent|''
name|'ts'
op|'='
op|'('
name|'Timestamp'
op|'('
name|'t'
op|')'
op|'.'
name|'internal'
name|'for'
name|'t'
name|'in'
name|'itertools'
op|'.'
name|'count'
op|'('
name|'int'
op|'('
name|'now'
op|')'
op|')'
op|')'
newline|'\n'
name|'total_containers'
op|'='
number|'0'
newline|'\n'
name|'total_objects'
op|'='
number|'0'
newline|'\n'
name|'total_bytes'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'delete_timestamp'
op|'='
name|'ts'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'put_timestamp'
op|'='
name|'ts'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'object_count'
op|'='
name|'int'
op|'('
name|'policy'
op|')'
newline|'\n'
name|'bytes_used'
op|'='
name|'int'
op|'('
name|'policy'
op|')'
op|'*'
number|'10'
newline|'\n'
name|'broker'
op|'.'
name|'put_container'
op|'('
string|"'c-%s'"
op|'%'
name|'policy'
op|'.'
name|'name'
op|','
name|'put_timestamp'
op|','
nl|'\n'
name|'delete_timestamp'
op|','
name|'object_count'
op|','
name|'bytes_used'
op|','
nl|'\n'
name|'int'
op|'('
name|'policy'
op|')'
op|')'
newline|'\n'
name|'total_containers'
op|'+='
number|'1'
newline|'\n'
name|'total_objects'
op|'+='
name|'object_count'
newline|'\n'
name|'total_bytes'
op|'+='
name|'bytes_used'
newline|'\n'
dedent|''
name|'expected'
op|'='
name|'HeaderKeyDict'
op|'('
op|'{'
nl|'\n'
string|"'X-Account-Container-Count'"
op|':'
name|'total_containers'
op|','
nl|'\n'
string|"'X-Account-Object-Count'"
op|':'
name|'total_objects'
op|','
nl|'\n'
string|"'X-Account-Bytes-Used'"
op|':'
name|'total_bytes'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'Timestamp'
op|'('
name|'now'
op|')'
op|'.'
name|'normal'
op|','
nl|'\n'
string|"'X-PUT-Timestamp'"
op|':'
name|'Timestamp'
op|'('
name|'now'
op|')'
op|'.'
name|'normal'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'prefix'
op|'='
string|"'X-Account-Storage-Policy-%s-'"
op|'%'
name|'policy'
op|'.'
name|'name'
newline|'\n'
name|'expected'
op|'['
name|'prefix'
op|'+'
string|"'Object-Count'"
op|']'
op|'='
name|'int'
op|'('
name|'policy'
op|')'
newline|'\n'
name|'expected'
op|'['
name|'prefix'
op|'+'
string|"'Bytes-Used'"
op|']'
op|'='
name|'int'
op|'('
name|'policy'
op|')'
op|'*'
number|'10'
newline|'\n'
dedent|''
name|'resp_headers'
op|'='
name|'utils'
op|'.'
name|'get_response_headers'
op|'('
name|'broker'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'resp_headers'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'expected_value'
op|'='
name|'expected'
op|'.'
name|'pop'
op|'('
name|'key'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_value'
op|','
name|'str'
op|'('
name|'value'
op|')'
op|','
nl|'\n'
string|"'value for %r was %r not %r'"
op|'%'
op|'('
nl|'\n'
name|'key'
op|','
name|'value'
op|','
name|'expected_value'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'expected'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
