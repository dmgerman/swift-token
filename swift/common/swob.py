begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
string|'"""\nImplementation of WSGI Request and Response objects.\n\nThis library has a very similar API to Webob.  It wraps WSGI request\nenvironments and response values into objects that are more friendly to\ninteract with.\n"""'
newline|'\n'
nl|'\n'
name|'from'
name|'cStringIO'
name|'import'
name|'StringIO'
newline|'\n'
name|'import'
name|'UserDict'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'from'
name|'functools'
name|'import'
name|'partial'
newline|'\n'
name|'from'
name|'datetime'
name|'import'
name|'datetime'
op|','
name|'date'
op|','
name|'timedelta'
op|','
name|'tzinfo'
newline|'\n'
name|'from'
name|'email'
op|'.'
name|'utils'
name|'import'
name|'parsedate'
newline|'\n'
name|'import'
name|'urlparse'
newline|'\n'
name|'import'
name|'urllib2'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'reiterate'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|RESPONSE_REASONS
name|'RESPONSE_REASONS'
op|'='
op|'{'
nl|'\n'
number|'100'
op|':'
op|'('
string|"'Continue'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
number|'200'
op|':'
op|'('
string|"'OK'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
number|'201'
op|':'
op|'('
string|"'Created'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
number|'202'
op|':'
op|'('
string|"'Accepted'"
op|','
string|"'The request is accepted for processing.'"
op|')'
op|','
nl|'\n'
number|'204'
op|':'
op|'('
string|"'No Content'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
number|'206'
op|':'
op|'('
string|"'Partial Content'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
number|'301'
op|':'
op|'('
string|"'Moved Permanently'"
op|','
string|"'The resource has moved permanently.'"
op|')'
op|','
nl|'\n'
number|'302'
op|':'
op|'('
string|"'Found'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
number|'304'
op|':'
op|'('
string|"'Not Modified'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
number|'307'
op|':'
op|'('
string|"'Temporary Redirect'"
op|','
string|"'The resource has moved temporarily.'"
op|')'
op|','
nl|'\n'
number|'400'
op|':'
op|'('
string|"'Bad Request'"
op|','
string|"'The server could not comply with the request since '"
nl|'\n'
string|"'it is either malformed or otherwise incorrect.'"
op|')'
op|','
nl|'\n'
number|'401'
op|':'
op|'('
string|"'Unauthorized'"
op|','
string|"'This server could not verify that you are '"
nl|'\n'
string|"'authorized to access the document you requested.'"
op|')'
op|','
nl|'\n'
number|'402'
op|':'
op|'('
string|"'Payment Required'"
op|','
string|"'Access was denied for financial reasons.'"
op|')'
op|','
nl|'\n'
number|'403'
op|':'
op|'('
string|"'Forbidden'"
op|','
string|"'Access was denied to this resource.'"
op|')'
op|','
nl|'\n'
number|'404'
op|':'
op|'('
string|"'Not Found'"
op|','
string|"'The resource could not be found.'"
op|')'
op|','
nl|'\n'
number|'405'
op|':'
op|'('
string|"'Method Not Allowed'"
op|','
string|"'The method is not allowed for this '"
nl|'\n'
string|"'resource.'"
op|')'
op|','
nl|'\n'
number|'406'
op|':'
op|'('
string|"'Not Acceptable'"
op|','
string|"'The resource is not available in a format '"
nl|'\n'
string|"'acceptable to your browser.'"
op|')'
op|','
nl|'\n'
number|'408'
op|':'
op|'('
string|"'Request Timeout'"
op|','
string|"'The server has waited too long for the request '"
nl|'\n'
string|"'to be sent by the client.'"
op|')'
op|','
nl|'\n'
number|'409'
op|':'
op|'('
string|"'Conflict'"
op|','
string|"'There was a conflict when trying to complete '"
nl|'\n'
string|"'your request.'"
op|')'
op|','
nl|'\n'
number|'410'
op|':'
op|'('
string|"'Gone'"
op|','
string|"'This resource is no longer available.'"
op|')'
op|','
nl|'\n'
number|'411'
op|':'
op|'('
string|"'Length Required'"
op|','
string|"'Content-Length header required.'"
op|')'
op|','
nl|'\n'
number|'412'
op|':'
op|'('
string|"'Precondition Failed'"
op|','
string|"'A precondition for this request was not '"
nl|'\n'
string|"'met.'"
op|')'
op|','
nl|'\n'
number|'413'
op|':'
op|'('
string|"'Request Entity Too Large'"
op|','
string|"'The body of your request was too '"
nl|'\n'
string|"'large for this server.'"
op|')'
op|','
nl|'\n'
number|'414'
op|':'
op|'('
string|"'Request URI Too Long'"
op|','
string|"'The request URI was too long for this '"
nl|'\n'
string|"'server.'"
op|')'
op|','
nl|'\n'
number|'415'
op|':'
op|'('
string|"'Unsupported Media Type'"
op|','
string|"'The request media type is not '"
nl|'\n'
string|"'supported by this server.'"
op|')'
op|','
nl|'\n'
number|'416'
op|':'
op|'('
string|"'Request Range Not Satisfiable'"
op|','
string|"'The Range requested is not '"
nl|'\n'
string|"'available.'"
op|')'
op|','
nl|'\n'
number|'417'
op|':'
op|'('
string|"'Expectation Failed'"
op|','
string|"'Expectation failed.'"
op|')'
op|','
nl|'\n'
number|'422'
op|':'
op|'('
string|"'Unprocessable Entity'"
op|','
string|"'Unable to process the contained '"
nl|'\n'
string|"'instructions'"
op|')'
op|','
nl|'\n'
number|'499'
op|':'
op|'('
string|"'Client Disconnect'"
op|','
string|"'The client was disconnected during request.'"
op|')'
op|','
nl|'\n'
number|'500'
op|':'
op|'('
string|"'Internal Error'"
op|','
string|"'The server has either erred or is incapable of '"
nl|'\n'
string|"'performing the requested operation.'"
op|')'
op|','
nl|'\n'
number|'501'
op|':'
op|'('
string|"'Not Implemented'"
op|','
string|"'The requested method is not implemented by '"
nl|'\n'
string|"'this server.'"
op|')'
op|','
nl|'\n'
number|'502'
op|':'
op|'('
string|"'Bad Gateway'"
op|','
string|"'Bad gateway.'"
op|')'
op|','
nl|'\n'
number|'503'
op|':'
op|'('
string|"'Service Unavailable'"
op|','
string|"'The server is currently unavailable. '"
nl|'\n'
string|"'Please try again at a later time.'"
op|')'
op|','
nl|'\n'
number|'504'
op|':'
op|'('
string|"'Gateway Timeout'"
op|','
string|"'A timeout has occurred speaking to a '"
nl|'\n'
string|"'backend server.'"
op|')'
op|','
nl|'\n'
number|'507'
op|':'
op|'('
string|"'Insufficient Storage'"
op|','
string|"'There was not enough space to save the '"
nl|'\n'
string|"'resource.'"
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|_UTC
name|'class'
name|'_UTC'
op|'('
name|'tzinfo'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A tzinfo class for datetime objects that returns a 0 timedelta (UTC time)\n    """'
newline|'\n'
DECL|member|dst
name|'def'
name|'dst'
op|'('
name|'self'
op|','
name|'dt'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'timedelta'
op|'('
number|'0'
op|')'
newline|'\n'
DECL|variable|utcoffset
dedent|''
name|'utcoffset'
op|'='
name|'dst'
newline|'\n'
nl|'\n'
DECL|member|tzname
name|'def'
name|'tzname'
op|'('
name|'self'
op|','
name|'dt'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'UTC'"
newline|'\n'
DECL|variable|UTC
dedent|''
dedent|''
name|'UTC'
op|'='
name|'_UTC'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_datetime_property
name|'def'
name|'_datetime_property'
op|'('
name|'header'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Set and retrieve the datetime value of self.headers[header]\n    (Used by both request and response)\n    The header is parsed on retrieval and a datetime object is returned.\n    The header can be set using a datetime, numeric value, or str.\n    If a value of None is given, the header is deleted.\n\n    :param header: name of the header, e.g. "Content-Length"\n    """'
newline|'\n'
DECL|function|getter
name|'def'
name|'getter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'value'
op|'='
name|'self'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
name|'header'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'value'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'parts'
op|'='
name|'parsedate'
op|'('
name|'self'
op|'.'
name|'headers'
op|'['
name|'header'
op|']'
op|')'
op|'['
op|':'
number|'7'
op|']'
newline|'\n'
name|'date'
op|'='
name|'datetime'
op|'('
op|'*'
op|'('
name|'parts'
op|'+'
op|'('
name|'UTC'
op|','
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'date'
op|'.'
name|'year'
op|'<'
number|'1970'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ValueError'
op|'('
string|"'Somehow an invalid year'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'date'
newline|'\n'
nl|'\n'
DECL|function|setter
dedent|''
dedent|''
name|'def'
name|'setter'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
op|'('
name|'float'
op|','
name|'int'
op|','
name|'long'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'headers'
op|'['
name|'header'
op|']'
op|'='
name|'time'
op|'.'
name|'strftime'
op|'('
nl|'\n'
string|'"%a, %d %b %Y %H:%M:%S GMT"'
op|','
name|'time'
op|'.'
name|'gmtime'
op|'('
name|'value'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'value'
op|','
name|'datetime'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'headers'
op|'['
name|'header'
op|']'
op|'='
name|'value'
op|'.'
name|'strftime'
op|'('
string|'"%a, %d %b %Y %H:%M:%S GMT"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'headers'
op|'['
name|'header'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'property'
op|'('
name|'getter'
op|','
name|'setter'
op|','
nl|'\n'
name|'doc'
op|'='
op|'('
string|'"Retrieve and set the %s header as a datetime, "'
nl|'\n'
string|'"set it with a datetime, int, or str"'
op|')'
op|'%'
name|'header'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_header_property
dedent|''
name|'def'
name|'_header_property'
op|'('
name|'header'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Set and retrieve the value of self.headers[header]\n    (Used by both request and response)\n    If a value of None is given, the header is deleted.\n\n    :param header: name of the header, e.g. "Content-Length"\n    """'
newline|'\n'
DECL|function|getter
name|'def'
name|'getter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
name|'header'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|function|setter
dedent|''
name|'def'
name|'setter'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'headers'
op|'['
name|'header'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'property'
op|'('
name|'getter'
op|','
name|'setter'
op|','
nl|'\n'
name|'doc'
op|'='
string|'"Retrieve and set the %s header"'
op|'%'
name|'header'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_header_int_property
dedent|''
name|'def'
name|'_header_int_property'
op|'('
name|'header'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Set and retrieve the value of self.headers[header]\n    (Used by both request and response)\n    On retrieval, it converts values to integers.\n    If a value of None is given, the header is deleted.\n\n    :param header: name of the header, e.g. "Content-Length"\n    """'
newline|'\n'
DECL|function|getter
name|'def'
name|'getter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'val'
op|'='
name|'self'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
name|'header'
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'val'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'val'
op|'='
name|'int'
op|'('
name|'val'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'val'
newline|'\n'
nl|'\n'
DECL|function|setter
dedent|''
name|'def'
name|'setter'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'headers'
op|'['
name|'header'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'property'
op|'('
name|'getter'
op|','
name|'setter'
op|','
nl|'\n'
name|'doc'
op|'='
string|'"Retrieve and set the %s header as an int"'
op|'%'
name|'header'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HeaderEnvironProxy
dedent|''
name|'class'
name|'HeaderEnvironProxy'
op|'('
name|'UserDict'
op|'.'
name|'DictMixin'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A dict-like object that proxies requests to a wsgi environ,\n    rewriting header keys to environ keys.\n\n    For example, headers[\'Content-Range\'] sets and gets the value of\n    headers.environ[\'HTTP_CONTENT_RANGE\']\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'environ'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'environ'
op|'='
name|'environ'
newline|'\n'
nl|'\n'
DECL|member|_normalize
dedent|''
name|'def'
name|'_normalize'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'key'
op|'='
string|"'HTTP_'"
op|'+'
name|'key'
op|'.'
name|'replace'
op|'('
string|"'-'"
op|','
string|"'_'"
op|')'
op|'.'
name|'upper'
op|'('
op|')'
newline|'\n'
name|'if'
name|'key'
op|'=='
string|"'HTTP_CONTENT_LENGTH'"
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'CONTENT_LENGTH'"
newline|'\n'
dedent|''
name|'if'
name|'key'
op|'=='
string|"'HTTP_CONTENT_TYPE'"
op|':'
newline|'\n'
indent|'            '
name|'return'
string|"'CONTENT_TYPE'"
newline|'\n'
dedent|''
name|'return'
name|'key'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'environ'
op|'['
name|'self'
op|'.'
name|'_normalize'
op|'('
name|'key'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|__setitem__
dedent|''
name|'def'
name|'__setitem__'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'value'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'environ'
op|'.'
name|'pop'
op|'('
name|'self'
op|'.'
name|'_normalize'
op|'('
name|'key'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'value'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'environ'
op|'['
name|'self'
op|'.'
name|'_normalize'
op|'('
name|'key'
op|')'
op|']'
op|'='
name|'value'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'environ'
op|'['
name|'self'
op|'.'
name|'_normalize'
op|'('
name|'key'
op|')'
op|']'
op|'='
name|'str'
op|'('
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__contains__
dedent|''
dedent|''
name|'def'
name|'__contains__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_normalize'
op|'('
name|'key'
op|')'
name|'in'
name|'self'
op|'.'
name|'environ'
newline|'\n'
nl|'\n'
DECL|member|__delitem__
dedent|''
name|'def'
name|'__delitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'del'
name|'self'
op|'.'
name|'environ'
op|'['
name|'self'
op|'.'
name|'_normalize'
op|'('
name|'key'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|keys
dedent|''
name|'def'
name|'keys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'keys'
op|'='
op|'['
name|'key'
op|'['
number|'5'
op|':'
op|']'
op|'.'
name|'replace'
op|'('
string|"'_'"
op|','
string|"'-'"
op|')'
op|'.'
name|'title'
op|'('
op|')'
nl|'\n'
name|'for'
name|'key'
name|'in'
name|'self'
op|'.'
name|'environ'
op|'.'
name|'iterkeys'
op|'('
op|')'
name|'if'
name|'key'
op|'.'
name|'startswith'
op|'('
string|"'HTTP_'"
op|')'
op|']'
newline|'\n'
name|'if'
string|"'CONTENT_LENGTH'"
name|'in'
name|'self'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'keys'
op|'.'
name|'append'
op|'('
string|"'Content-Length'"
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'CONTENT_TYPE'"
name|'in'
name|'self'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'keys'
op|'.'
name|'append'
op|'('
string|"'Content-Type'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'keys'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|HeaderKeyDict
dedent|''
dedent|''
name|'class'
name|'HeaderKeyDict'
op|'('
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A dict that lower-cases all keys on the way in, so as to be\n    case-insensitive.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'arg'
name|'in'
name|'args'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'update'
op|'('
name|'arg'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'update'
op|'('
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|update
dedent|''
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'other'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'hasattr'
op|'('
name|'other'
op|','
string|"'keys'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
name|'in'
name|'other'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'['
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|']'
op|'='
name|'other'
op|'['
name|'key'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'other'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'['
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
dedent|''
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'dict'
op|'.'
name|'get'
op|'('
name|'self'
op|','
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__setitem__
dedent|''
name|'def'
name|'__setitem__'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'value'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'pop'
op|'('
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'isinstance'
op|'('
name|'value'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'.'
name|'__setitem__'
op|'('
name|'self'
op|','
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|','
name|'value'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'dict'
op|'.'
name|'__setitem__'
op|'('
name|'self'
op|','
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|','
name|'str'
op|'('
name|'value'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__contains__
dedent|''
dedent|''
name|'def'
name|'__contains__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'dict'
op|'.'
name|'__contains__'
op|'('
name|'self'
op|','
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__delitem__
dedent|''
name|'def'
name|'__delitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'dict'
op|'.'
name|'__delitem__'
op|'('
name|'self'
op|','
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get
dedent|''
name|'def'
name|'get'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'default'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'dict'
op|'.'
name|'get'
op|'('
name|'self'
op|','
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|','
name|'default'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_resp_status_property
dedent|''
dedent|''
name|'def'
name|'_resp_status_property'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Set and retrieve the value of Response.status\n    On retrieval, it concatenates status_int and title.\n    When set to a str, it splits status_int and title apart.\n    When set to an integer, retrieves the correct title for that\n    response code from the RESPONSE_REASONS dict.\n\n    :param header: name of the header, e.g. "Content-Length"\n    """'
newline|'\n'
DECL|function|getter
name|'def'
name|'getter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'%s %s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'status_int'
op|','
name|'self'
op|'.'
name|'title'
op|')'
newline|'\n'
nl|'\n'
DECL|function|setter
dedent|''
name|'def'
name|'setter'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
op|'('
name|'int'
op|','
name|'long'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'status_int'
op|'='
name|'value'
newline|'\n'
name|'self'
op|'.'
name|'explanation'
op|'='
name|'self'
op|'.'
name|'title'
op|'='
name|'RESPONSE_REASONS'
op|'['
name|'value'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'value'
op|'='
name|'value'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'status_int'
op|'='
name|'int'
op|'('
name|'value'
op|'.'
name|'split'
op|'('
string|"' '"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'explanation'
op|'='
name|'self'
op|'.'
name|'title'
op|'='
name|'value'
op|'.'
name|'split'
op|'('
string|"' '"
op|','
number|'1'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'property'
op|'('
name|'getter'
op|','
name|'setter'
op|','
nl|'\n'
name|'doc'
op|'='
string|'"Retrieve and set the Response status, e.g. \'200 OK\'"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_resp_body_property
dedent|''
name|'def'
name|'_resp_body_property'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Set and retrieve the value of Response.body\n    If necessary, it will consume Response.app_iter to create a body.\n    On assignment, encodes unicode values to utf-8, and sets the content-length\n    to the length of the str.\n    """'
newline|'\n'
DECL|function|getter
name|'def'
name|'getter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
name|'self'
op|'.'
name|'_body'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'_app_iter'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_app_iter'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'_body'
newline|'\n'
nl|'\n'
DECL|function|setter
dedent|''
name|'def'
name|'setter'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'value'
op|'='
name|'value'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
name|'str'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'content_length'
op|'='
name|'len'
op|'('
name|'value'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_app_iter'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_body'
op|'='
name|'value'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'property'
op|'('
name|'getter'
op|','
name|'setter'
op|','
nl|'\n'
name|'doc'
op|'='
string|'"Retrieve and set the Response body str"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_resp_etag_property
dedent|''
name|'def'
name|'_resp_etag_property'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Set and retrieve Response.etag\n    This may be broken for etag use cases other than Swift\'s.\n    Quotes strings when assigned and unquotes when read, for compatibility\n    with webob.\n    """'
newline|'\n'
DECL|function|getter
name|'def'
name|'getter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'etag'
op|'='
name|'self'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'etag'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'etag'
op|':'
newline|'\n'
indent|'            '
name|'etag'
op|'='
name|'etag'
op|'.'
name|'replace'
op|'('
string|'\'"\''
op|','
string|"''"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'etag'
newline|'\n'
nl|'\n'
DECL|function|setter
dedent|''
name|'def'
name|'setter'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'value'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'headers'
op|'['
string|"'etag'"
op|']'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'headers'
op|'['
string|"'etag'"
op|']'
op|'='
string|'\'"%s"\''
op|'%'
name|'value'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'return'
name|'property'
op|'('
name|'getter'
op|','
name|'setter'
op|','
nl|'\n'
name|'doc'
op|'='
string|'"Retrieve and set the response Etag header"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_resp_content_type_property
dedent|''
name|'def'
name|'_resp_content_type_property'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Set and retrieve Response.content_type\n    Strips off any charset when retrieved -- that is accessible\n    via Response.charset.\n    """'
newline|'\n'
DECL|function|getter
name|'def'
name|'getter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'content-type'"
name|'in'
name|'self'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'content-type'"
op|')'
op|'.'
name|'split'
op|'('
string|"';'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|function|setter
dedent|''
dedent|''
name|'def'
name|'setter'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'property'
op|'('
name|'getter'
op|','
name|'setter'
op|','
nl|'\n'
name|'doc'
op|'='
string|'"Retrieve and set the response Content-Type header"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_resp_charset_property
dedent|''
name|'def'
name|'_resp_charset_property'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Set and retrieve Response.charset\n    On retrieval, separates the charset from the content-type.\n    On assignment, removes any existing charset from the content-type and\n    appends the new one.\n    """'
newline|'\n'
DECL|function|getter
name|'def'
name|'getter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'; charset='"
name|'in'
name|'self'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|'.'
name|'split'
op|'('
string|"'; charset='"
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
nl|'\n'
DECL|function|setter
dedent|''
dedent|''
name|'def'
name|'setter'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
string|"'content-type'"
name|'in'
name|'self'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|'='
name|'self'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|'.'
name|'split'
op|'('
nl|'\n'
string|"';'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'value'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|'+='
string|"'; charset='"
op|'+'
name|'value'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'property'
op|'('
name|'getter'
op|','
name|'setter'
op|','
nl|'\n'
name|'doc'
op|'='
string|'"Retrieve and set the response charset"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_resp_app_iter_property
dedent|''
name|'def'
name|'_resp_app_iter_property'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Set and retrieve Response.app_iter\n    Mostly a pass-through to Response._app_iter, it\'s a property so it can zero\n    out an exsisting content-length on assignment.\n    """'
newline|'\n'
DECL|function|getter
name|'def'
name|'getter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_app_iter'
newline|'\n'
nl|'\n'
DECL|function|setter
dedent|''
name|'def'
name|'setter'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'isinstance'
op|'('
name|'value'
op|','
op|'('
name|'list'
op|','
name|'tuple'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'content_length'
op|'='
name|'sum'
op|'('
name|'map'
op|'('
name|'len'
op|','
name|'value'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'value'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'content_length'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'_body'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'_app_iter'
op|'='
name|'value'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'property'
op|'('
name|'getter'
op|','
name|'setter'
op|','
nl|'\n'
name|'doc'
op|'='
string|'"Retrieve and set the response app_iter"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_req_fancy_property
dedent|''
name|'def'
name|'_req_fancy_property'
op|'('
name|'cls'
op|','
name|'header'
op|','
name|'even_if_nonexistent'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Set and retrieve "fancy" properties.\n    On retrieval, these properties return a class that takes the value of the\n    header as the only argument to their constructor.\n    For assignment, those classes should implement a __str__ that converts them\n    back to their header values.\n\n    :param header: name of the header, e.g. "Accept"\n    :param even_if_nonexistent: Return a value even if the header does not\n        exist.  Classes using this should be prepared to accept None as a\n        parameter.\n    """'
newline|'\n'
DECL|function|getter
name|'def'
name|'getter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'header'
name|'in'
name|'self'
op|'.'
name|'headers'
name|'or'
name|'even_if_nonexistent'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'cls'
op|'('
name|'self'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
name|'header'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
nl|'\n'
DECL|function|setter
dedent|''
dedent|''
name|'def'
name|'setter'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'headers'
op|'['
name|'header'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'property'
op|'('
name|'getter'
op|','
name|'setter'
op|','
name|'doc'
op|'='
op|'('
string|'"Retrieve and set the %s "'
nl|'\n'
string|'"property in the WSGI environ, as a %s object"'
op|')'
op|'%'
nl|'\n'
op|'('
name|'header'
op|','
name|'cls'
op|'.'
name|'__name__'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Range
dedent|''
name|'class'
name|'Range'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Wraps a Request\'s Range header as a friendly object.\n    After initialization, "range.ranges" is populated with a list\n    of (start, end) tuples denoting the requested ranges.\n\n    If there were any syntactically-invalid byte-range-spec values,\n    "range.ranges" will be an empty list, per the relevant RFC:\n\n    "The recipient of a byte-range-set that includes one or more syntactically\n    invalid byte-range-spec values MUST ignore the header field that includes\n    that byte-range-set."\n\n    :param headerval: value of the header as a str\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'headerval'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headerval'
op|'='
name|'headerval'
op|'.'
name|'replace'
op|'('
string|"' '"
op|','
string|"''"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'headerval'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'bytes='"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|"'Invalid Range header: %s'"
op|'%'
name|'headerval'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'ranges'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'rng'
name|'in'
name|'headerval'
op|'['
number|'6'
op|':'
op|']'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start'
op|','
name|'end'
op|'='
name|'rng'
op|'.'
name|'split'
op|'('
string|"'-'"
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'start'
op|':'
newline|'\n'
indent|'                '
name|'start'
op|'='
name|'int'
op|'('
name|'start'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'start'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'end'
op|':'
newline|'\n'
indent|'                '
name|'end'
op|'='
name|'int'
op|'('
name|'end'
op|')'
newline|'\n'
name|'if'
name|'start'
name|'is'
name|'not'
name|'None'
name|'and'
name|'not'
name|'end'
op|'>='
name|'start'
op|':'
newline|'\n'
comment|'# If the last-byte-pos value is present, it MUST be greater'
nl|'\n'
comment|'# than or equal to the first-byte-pos in that'
nl|'\n'
comment|'# byte-range-spec, or the byte- range-spec is syntactically'
nl|'\n'
comment|'# invalid.  [which "MUST" be ignored]'
nl|'\n'
indent|'                    '
name|'self'
op|'.'
name|'ranges'
op|'='
op|'['
op|']'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'end'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'ranges'
op|'.'
name|'append'
op|'('
op|'('
name|'start'
op|','
name|'end'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__str__
dedent|''
dedent|''
name|'def'
name|'__str__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'string'
op|'='
string|"'bytes='"
newline|'\n'
name|'for'
name|'start'
op|','
name|'end'
name|'in'
name|'self'
op|'.'
name|'ranges'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'start'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'string'
op|'+='
name|'str'
op|'('
name|'start'
op|')'
newline|'\n'
dedent|''
name|'string'
op|'+='
string|"'-'"
newline|'\n'
name|'if'
name|'end'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'string'
op|'+='
name|'str'
op|'('
name|'end'
op|')'
newline|'\n'
dedent|''
name|'string'
op|'+='
string|"','"
newline|'\n'
dedent|''
name|'return'
name|'string'
op|'.'
name|'rstrip'
op|'('
string|"','"
op|')'
newline|'\n'
nl|'\n'
DECL|member|range_for_length
dedent|''
name|'def'
name|'range_for_length'
op|'('
name|'self'
op|','
name|'length'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        range_for_length is used to determine the correct range of bytes to\n        serve from a body, given body length argument and the Range\'s ranges.\n\n        A limitation of this method is that it can\'t handle multiple ranges,\n        for compatibility with webob.  This should be fairly easy to extend.\n\n        :param length: length of the response body\n        """'
newline|'\n'
name|'if'
name|'length'
name|'is'
name|'None'
name|'or'
name|'not'
name|'self'
op|'.'
name|'ranges'
name|'or'
name|'len'
op|'('
name|'self'
op|'.'
name|'ranges'
op|')'
op|'!='
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'begin'
op|','
name|'end'
op|'='
name|'self'
op|'.'
name|'ranges'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'begin'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'end'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'end'
op|'>'
name|'length'
op|':'
newline|'\n'
indent|'                '
name|'return'
op|'('
number|'0'
op|','
name|'length'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'('
name|'length'
op|'-'
name|'end'
op|','
name|'length'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'end'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'begin'
op|'<'
name|'length'
op|':'
newline|'\n'
comment|'# If a syntactically valid byte-range-set includes at least one'
nl|'\n'
comment|'# byte-range-spec whose first-byte-pos is LESS THAN THE CURRENT'
nl|'\n'
comment|'# LENGTH OF THE ENTITY-BODY..., then the byte-range-set is'
nl|'\n'
comment|'# satisfiable.'
nl|'\n'
indent|'                '
name|'return'
op|'('
name|'begin'
op|','
name|'length'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Otherwise, the byte-range-set is unsatisfiable.'
nl|'\n'
indent|'                '
name|'return'
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'begin'
op|'>'
name|'length'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'return'
op|'('
name|'begin'
op|','
name|'min'
op|'('
name|'end'
op|'+'
number|'1'
op|','
name|'length'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Match
dedent|''
dedent|''
name|'class'
name|'Match'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Wraps a Request\'s If-None-Match header as a friendly object.\n\n    :param headerval: value of the header as a str\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'headerval'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'tags'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'tag'
name|'in'
name|'headerval'
op|'.'
name|'split'
op|'('
string|"', '"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'tag'
op|'.'
name|'startswith'
op|'('
string|'\'"\''
op|')'
name|'and'
name|'tag'
op|'.'
name|'endswith'
op|'('
string|'\'"\''
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'tags'
op|'.'
name|'add'
op|'('
name|'tag'
op|'['
number|'1'
op|':'
op|'-'
number|'1'
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'tags'
op|'.'
name|'add'
op|'('
name|'tag'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__contains__
dedent|''
dedent|''
dedent|''
name|'def'
name|'__contains__'
op|'('
name|'self'
op|','
name|'val'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
string|"'*'"
name|'in'
name|'self'
op|'.'
name|'tags'
name|'or'
name|'val'
name|'in'
name|'self'
op|'.'
name|'tags'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Accept
dedent|''
dedent|''
name|'class'
name|'Accept'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Wraps a Request\'s Accept header as a friendly object.\n\n    :param headerval: value of the header as a str\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'headerval'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'headerval'
op|'='
name|'headerval'
newline|'\n'
nl|'\n'
DECL|member|_get_types
dedent|''
name|'def'
name|'_get_types'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headerval'
op|'='
name|'self'
op|'.'
name|'headerval'
name|'or'
string|"'*/*'"
newline|'\n'
name|'level'
op|'='
number|'1'
newline|'\n'
name|'types'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'typ'
name|'in'
name|'headerval'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'quality'
op|'='
number|'1.0'
newline|'\n'
name|'if'
string|"'; q='"
name|'in'
name|'typ'
op|':'
newline|'\n'
indent|'                '
name|'typ'
op|','
name|'quality'
op|'='
name|'typ'
op|'.'
name|'split'
op|'('
string|"'; q='"
op|')'
newline|'\n'
dedent|''
name|'elif'
string|"';q='"
name|'in'
name|'typ'
op|':'
newline|'\n'
indent|'                '
name|'typ'
op|','
name|'quality'
op|'='
name|'typ'
op|'.'
name|'split'
op|'('
string|"';q='"
op|')'
newline|'\n'
dedent|''
name|'quality'
op|'='
name|'float'
op|'('
name|'quality'
op|')'
newline|'\n'
name|'if'
name|'typ'
op|'.'
name|'startswith'
op|'('
string|"'*/'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'quality'
op|'-='
number|'0.01'
newline|'\n'
dedent|''
name|'elif'
name|'typ'
op|'.'
name|'endswith'
op|'('
string|"'/*'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'quality'
op|'-='
number|'0.01'
newline|'\n'
dedent|''
name|'elif'
string|"'*'"
name|'in'
name|'typ'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'AssertionError'
op|'('
string|"'bad accept header'"
op|')'
newline|'\n'
dedent|''
name|'pattern'
op|'='
string|"'[a-zA-Z0-9-]+'"
op|'.'
name|'join'
op|'('
op|'['
name|'re'
op|'.'
name|'escape'
op|'('
name|'x'
op|')'
name|'for'
name|'x'
name|'in'
nl|'\n'
name|'typ'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'split'
op|'('
string|"'*'"
op|')'
op|']'
op|')'
newline|'\n'
name|'types'
op|'.'
name|'append'
op|'('
op|'('
name|'quality'
op|','
name|'re'
op|'.'
name|'compile'
op|'('
name|'pattern'
op|')'
op|','
name|'typ'
op|')'
op|')'
newline|'\n'
dedent|''
name|'types'
op|'.'
name|'sort'
op|'('
name|'reverse'
op|'='
name|'True'
op|','
name|'key'
op|'='
name|'lambda'
name|'t'
op|':'
name|'t'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'return'
name|'types'
newline|'\n'
nl|'\n'
DECL|member|best_match
dedent|''
name|'def'
name|'best_match'
op|'('
name|'self'
op|','
name|'options'
op|','
name|'default_match'
op|'='
string|"'text/plain'"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'quality'
op|','
name|'pattern'
op|','
name|'typ'
name|'in'
name|'self'
op|'.'
name|'_get_types'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'option'
name|'in'
name|'options'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'pattern'
op|'.'
name|'match'
op|'('
name|'option'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'option'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'default_match'
newline|'\n'
nl|'\n'
DECL|member|__repr__
dedent|''
name|'def'
name|'__repr__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'headerval'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_req_environ_property
dedent|''
dedent|''
name|'def'
name|'_req_environ_property'
op|'('
name|'environ_field'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Set and retrieve value of the environ_field entry in self.environ.\n    (Used by both request and response)\n    """'
newline|'\n'
DECL|function|getter
name|'def'
name|'getter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
name|'environ_field'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|function|setter
dedent|''
name|'def'
name|'setter'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'environ'
op|'['
name|'environ_field'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'property'
op|'('
name|'getter'
op|','
name|'setter'
op|','
name|'doc'
op|'='
op|'('
string|'"Get and set the %s property "'
nl|'\n'
string|'"in the WSGI environment"'
op|')'
op|'%'
name|'environ_field'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_req_body_property
dedent|''
name|'def'
name|'_req_body_property'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Set and retrieve the Request.body parameter.  It consumes wsgi.input and\n    returns the results.  On assignment, uses a StringIO to create a new\n    wsgi.input.\n    """'
newline|'\n'
DECL|function|getter
name|'def'
name|'getter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'body'
op|'='
name|'self'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'='
name|'StringIO'
op|'('
name|'body'
op|')'
newline|'\n'
name|'return'
name|'body'
newline|'\n'
nl|'\n'
DECL|function|setter
dedent|''
name|'def'
name|'setter'
op|'('
name|'self'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'='
name|'StringIO'
op|'('
name|'value'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'environ'
op|'['
string|"'CONTENT_LENGTH'"
op|']'
op|'='
name|'str'
op|'('
name|'len'
op|'('
name|'value'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'property'
op|'('
name|'getter'
op|','
name|'setter'
op|','
name|'doc'
op|'='
string|'"Get and set the request body str"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Request
dedent|''
name|'class'
name|'Request'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    WSGI Request object.\n    """'
newline|'\n'
DECL|variable|range
name|'range'
op|'='
name|'_req_fancy_property'
op|'('
name|'Range'
op|','
string|"'range'"
op|')'
newline|'\n'
DECL|variable|if_none_match
name|'if_none_match'
op|'='
name|'_req_fancy_property'
op|'('
name|'Match'
op|','
string|"'if-none-match'"
op|')'
newline|'\n'
DECL|variable|accept
name|'accept'
op|'='
name|'_req_fancy_property'
op|'('
name|'Accept'
op|','
string|"'http-accept'"
op|','
name|'True'
op|')'
newline|'\n'
DECL|variable|method
name|'method'
op|'='
name|'_req_environ_property'
op|'('
string|"'REQUEST_METHOD'"
op|')'
newline|'\n'
name|'referrer'
op|'='
name|'referer'
op|'='
name|'_req_environ_property'
op|'('
string|"'HTTP_REFERER'"
op|')'
newline|'\n'
DECL|variable|script_name
name|'script_name'
op|'='
name|'_req_environ_property'
op|'('
string|"'SCRIPT_NAME'"
op|')'
newline|'\n'
DECL|variable|path_info
name|'path_info'
op|'='
name|'_req_environ_property'
op|'('
string|"'PATH_INFO'"
op|')'
newline|'\n'
DECL|variable|host
name|'host'
op|'='
name|'_req_environ_property'
op|'('
string|"'HTTP_HOST'"
op|')'
newline|'\n'
DECL|variable|remote_addr
name|'remote_addr'
op|'='
name|'_req_environ_property'
op|'('
string|"'REMOTE_ADDR'"
op|')'
newline|'\n'
DECL|variable|remote_user
name|'remote_user'
op|'='
name|'_req_environ_property'
op|'('
string|"'REMOTE_USER'"
op|')'
newline|'\n'
DECL|variable|user_agent
name|'user_agent'
op|'='
name|'_req_environ_property'
op|'('
string|"'HTTP_USER_AGENT'"
op|')'
newline|'\n'
DECL|variable|query_string
name|'query_string'
op|'='
name|'_req_environ_property'
op|'('
string|"'QUERY_STRING'"
op|')'
newline|'\n'
DECL|variable|if_match
name|'if_match'
op|'='
name|'_req_environ_property'
op|'('
string|"'HTTP_IF_MATCH'"
op|')'
newline|'\n'
DECL|variable|body_file
name|'body_file'
op|'='
name|'_req_environ_property'
op|'('
string|"'wsgi.input'"
op|')'
newline|'\n'
DECL|variable|content_length
name|'content_length'
op|'='
name|'_header_int_property'
op|'('
string|"'content-length'"
op|')'
newline|'\n'
DECL|variable|if_modified_since
name|'if_modified_since'
op|'='
name|'_datetime_property'
op|'('
string|"'if-modified-since'"
op|')'
newline|'\n'
DECL|variable|if_unmodified_since
name|'if_unmodified_since'
op|'='
name|'_datetime_property'
op|'('
string|"'if-unmodified-since'"
op|')'
newline|'\n'
DECL|variable|body
name|'body'
op|'='
name|'_req_body_property'
op|'('
op|')'
newline|'\n'
DECL|variable|charset
name|'charset'
op|'='
name|'None'
newline|'\n'
DECL|variable|_params_cache
name|'_params_cache'
op|'='
name|'None'
newline|'\n'
DECL|variable|acl
name|'acl'
op|'='
name|'_req_environ_property'
op|'('
string|"'swob.ACL'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'environ'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'environ'
op|'='
name|'environ'
newline|'\n'
name|'self'
op|'.'
name|'headers'
op|'='
name|'HeaderEnvironProxy'
op|'('
name|'self'
op|'.'
name|'environ'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|blank
name|'def'
name|'blank'
op|'('
name|'cls'
op|','
name|'path'
op|','
name|'environ'
op|'='
name|'None'
op|','
name|'headers'
op|'='
name|'None'
op|','
name|'body'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Create a new request object with the given parameters, and an\n        environment otherwise filled in with non-surprising default values.\n        """'
newline|'\n'
name|'headers'
op|'='
name|'headers'
name|'or'
op|'{'
op|'}'
newline|'\n'
name|'environ'
op|'='
name|'environ'
name|'or'
op|'{'
op|'}'
newline|'\n'
name|'if'
string|"'?'"
name|'in'
name|'path'
op|':'
newline|'\n'
indent|'            '
name|'path_info'
op|','
name|'query_string'
op|'='
name|'path'
op|'.'
name|'split'
op|'('
string|"'?'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'path_info'
op|'='
name|'path'
newline|'\n'
name|'query_string'
op|'='
string|"''"
newline|'\n'
dedent|''
name|'env'
op|'='
op|'{'
nl|'\n'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'SCRIPT_NAME'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'QUERY_STRING'"
op|':'
name|'query_string'
op|','
nl|'\n'
string|"'PATH_INFO'"
op|':'
name|'path_info'
op|','
nl|'\n'
string|"'SERVER_NAME'"
op|':'
string|"'localhost'"
op|','
nl|'\n'
string|"'SERVER_PORT'"
op|':'
string|"'80'"
op|','
nl|'\n'
string|"'HTTP_HOST'"
op|':'
string|"'localhost:80'"
op|','
nl|'\n'
string|"'SERVER_PROTOCOL'"
op|':'
string|"'HTTP/1.0'"
op|','
nl|'\n'
string|"'wsgi.version'"
op|':'
op|'('
number|'1'
op|','
number|'0'
op|')'
op|','
nl|'\n'
string|"'wsgi.url_scheme'"
op|':'
string|"'http'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'StringIO'
op|'('
name|'body'
name|'or'
string|"''"
op|')'
op|','
nl|'\n'
string|"'wsgi.errors'"
op|':'
name|'StringIO'
op|'('
string|"''"
op|')'
op|','
nl|'\n'
string|"'wsgi.multithread'"
op|':'
name|'False'
op|','
nl|'\n'
string|"'wsgi.multiprocess'"
op|':'
name|'False'
nl|'\n'
op|'}'
newline|'\n'
name|'env'
op|'.'
name|'update'
op|'('
name|'PATH_INFO'
op|'='
name|'path_info'
op|')'
newline|'\n'
name|'env'
op|'.'
name|'update'
op|'('
name|'environ'
op|')'
newline|'\n'
name|'if'
name|'body'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'env'
op|'.'
name|'update'
op|'('
name|'CONTENT_LENGTH'
op|'='
name|'str'
op|'('
name|'len'
op|'('
name|'body'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'Request'
op|'('
name|'env'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'val'
name|'in'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'headers'
op|'['
name|'key'
op|']'
op|'='
name|'val'
newline|'\n'
dedent|''
name|'return'
name|'req'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'property'
newline|'\n'
DECL|member|params
name|'def'
name|'params'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Provides QUERY_STRING parameters as a dictionary"'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'_params_cache'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'QUERY_STRING'"
name|'in'
name|'self'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_params_cache'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'urlparse'
op|'.'
name|'parse_qsl'
op|'('
name|'self'
op|'.'
name|'environ'
op|'['
string|"'QUERY_STRING'"
op|']'
op|','
name|'True'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_params_cache'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'self'
op|'.'
name|'_params_cache'
newline|'\n'
DECL|variable|str_params
dedent|''
name|'str_params'
op|'='
name|'params'
newline|'\n'
nl|'\n'
op|'@'
name|'property'
newline|'\n'
DECL|member|path
name|'def'
name|'path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"Provides the full path of the request, excluding the QUERY_STRING"'
newline|'\n'
name|'return'
name|'urllib2'
op|'.'
name|'quote'
op|'('
name|'self'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'SCRIPT_NAME'"
op|','
string|"''"
op|')'
op|'+'
nl|'\n'
name|'self'
op|'.'
name|'environ'
op|'['
string|"'PATH_INFO'"
op|']'
op|'.'
name|'split'
op|'('
string|"'?'"
op|')'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|path_info_pop
dedent|''
name|'def'
name|'path_info_pop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Takes one path portion (delineated by slashes) from the\n        path_info, and appends it to the script_name.  Returns\n        the path segment.\n        """'
newline|'\n'
name|'path_info'
op|'='
name|'self'
op|'.'
name|'path_info'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'slash_loc'
op|'='
name|'path_info'
op|'.'
name|'index'
op|'('
string|"'/'"
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'None'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'script_name'
op|'+='
name|'path_info'
op|'['
op|':'
name|'slash_loc'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'path_info'
op|'='
name|'path_info'
op|'['
name|'slash_loc'
op|':'
op|']'
newline|'\n'
name|'return'
name|'path_info'
op|'['
number|'1'
op|':'
name|'slash_loc'
op|']'
newline|'\n'
nl|'\n'
DECL|member|copy_get
dedent|''
name|'def'
name|'copy_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Makes a copy of the request, converting it to a GET.\n        """'
newline|'\n'
name|'env'
op|'='
name|'self'
op|'.'
name|'environ'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'env'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'CONTENT_LENGTH'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'StringIO'
op|'('
string|"''"
op|')'
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'Request'
op|'('
name|'env'
op|')'
newline|'\n'
nl|'\n'
DECL|member|call_application
dedent|''
name|'def'
name|'call_application'
op|'('
name|'self'
op|','
name|'application'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Calls the application with this request\'s environment.  Returns the\n        status, headers, and app_iter for the response as a tuple.\n\n        :param application: the WSGI application to call\n        """'
newline|'\n'
name|'output'
op|'='
op|'['
op|']'
newline|'\n'
name|'captured'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|start_response
name|'def'
name|'start_response'
op|'('
name|'status'
op|','
name|'headers'
op|','
name|'exc_info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'captured'
op|'['
op|':'
op|']'
op|'='
op|'['
name|'status'
op|','
name|'headers'
op|','
name|'exc_info'
op|']'
newline|'\n'
name|'return'
name|'output'
op|'.'
name|'append'
newline|'\n'
dedent|''
name|'app_iter'
op|'='
name|'application'
op|'('
name|'self'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'app_iter'
op|':'
newline|'\n'
indent|'            '
name|'app_iter'
op|'='
name|'output'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'captured'
op|':'
newline|'\n'
indent|'            '
name|'app_iter'
op|'='
name|'reiterate'
op|'('
name|'app_iter'
op|')'
newline|'\n'
dedent|''
name|'return'
op|'('
name|'captured'
op|'['
number|'0'
op|']'
op|','
name|'captured'
op|'['
number|'1'
op|']'
op|','
name|'app_iter'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_response
dedent|''
name|'def'
name|'get_response'
op|'('
name|'self'
op|','
name|'application'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Calls the application with this request\'s environment.  Returns a\n        Response object that wraps up the application\'s result.\n\n        :param application: the WSGI application to call\n        """'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'app_iter'
op|'='
name|'self'
op|'.'
name|'call_application'
op|'('
name|'application'
op|')'
newline|'\n'
name|'return'
name|'Response'
op|'('
name|'status'
op|'='
name|'status'
op|','
name|'headers'
op|'='
name|'dict'
op|'('
name|'headers'
op|')'
op|','
nl|'\n'
name|'app_iter'
op|'='
name|'app_iter'
op|','
name|'request'
op|'='
name|'self'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Response
dedent|''
dedent|''
name|'class'
name|'Response'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    WSGI Response object.\n    """'
newline|'\n'
DECL|variable|content_length
name|'content_length'
op|'='
name|'_header_int_property'
op|'('
string|"'content-length'"
op|')'
newline|'\n'
DECL|variable|content_type
name|'content_type'
op|'='
name|'_resp_content_type_property'
op|'('
op|')'
newline|'\n'
DECL|variable|content_range
name|'content_range'
op|'='
name|'_header_property'
op|'('
string|"'content-range'"
op|')'
newline|'\n'
DECL|variable|etag
name|'etag'
op|'='
name|'_resp_etag_property'
op|'('
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'_resp_status_property'
op|'('
op|')'
newline|'\n'
DECL|variable|body
name|'body'
op|'='
name|'_resp_body_property'
op|'('
op|')'
newline|'\n'
DECL|variable|last_modified
name|'last_modified'
op|'='
name|'_datetime_property'
op|'('
string|"'last-modified'"
op|')'
newline|'\n'
DECL|variable|location
name|'location'
op|'='
name|'_header_property'
op|'('
string|"'location'"
op|')'
newline|'\n'
DECL|variable|accept_ranges
name|'accept_ranges'
op|'='
name|'_header_property'
op|'('
string|"'accept-ranges'"
op|')'
newline|'\n'
DECL|variable|charset
name|'charset'
op|'='
name|'_resp_charset_property'
op|'('
op|')'
newline|'\n'
DECL|variable|app_iter
name|'app_iter'
op|'='
name|'_resp_app_iter_property'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'body'
op|'='
name|'None'
op|','
name|'status'
op|'='
number|'200'
op|','
name|'headers'
op|'='
op|'{'
op|'}'
op|','
name|'app_iter'
op|'='
name|'None'
op|','
nl|'\n'
name|'request'
op|'='
name|'None'
op|','
name|'conditional_response'
op|'='
name|'False'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conditional_response'
op|'='
name|'conditional_response'
newline|'\n'
name|'self'
op|'.'
name|'request'
op|'='
name|'request'
newline|'\n'
name|'self'
op|'.'
name|'body'
op|'='
name|'body'
newline|'\n'
name|'self'
op|'.'
name|'app_iter'
op|'='
name|'app_iter'
newline|'\n'
name|'self'
op|'.'
name|'status'
op|'='
name|'status'
newline|'\n'
name|'if'
name|'request'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'environ'
op|'='
name|'request'
op|'.'
name|'environ'
newline|'\n'
name|'if'
name|'request'
op|'.'
name|'range'
name|'and'
name|'self'
op|'.'
name|'status'
op|'=='
number|'200'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'status'
op|'='
number|'206'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'environ'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'headers'
op|'.'
name|'update'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'kw'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'setattr'
op|'('
name|'self'
op|','
name|'key'
op|','
name|'value'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_response_iter
dedent|''
dedent|''
name|'def'
name|'_response_iter'
op|'('
name|'self'
op|','
name|'app_iter'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'self'
op|'.'
name|'request'
name|'and'
name|'self'
op|'.'
name|'request'
op|'.'
name|'method'
op|'=='
string|"'HEAD'"
op|':'
newline|'\n'
comment|'# We explicitly do NOT want to set self.content_length to 0 here'
nl|'\n'
indent|'            '
name|'return'
op|'['
string|"''"
op|']'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'conditional_response'
name|'and'
name|'self'
op|'.'
name|'request'
name|'and'
name|'self'
op|'.'
name|'request'
op|'.'
name|'range'
name|'and'
name|'self'
op|'.'
name|'request'
op|'.'
name|'range'
op|'.'
name|'ranges'
name|'and'
name|'not'
name|'self'
op|'.'
name|'content_range'
op|':'
newline|'\n'
indent|'            '
name|'args'
op|'='
name|'self'
op|'.'
name|'request'
op|'.'
name|'range'
op|'.'
name|'range_for_length'
op|'('
name|'self'
op|'.'
name|'content_length'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'args'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'status'
op|'='
number|'416'
newline|'\n'
name|'self'
op|'.'
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'return'
op|'['
string|"''"
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'start'
op|','
name|'end'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'status'
op|'='
number|'206'
newline|'\n'
name|'self'
op|'.'
name|'content_range'
op|'='
name|'self'
op|'.'
name|'request'
op|'.'
name|'range'
newline|'\n'
name|'self'
op|'.'
name|'content_length'
op|'='
op|'('
name|'end'
op|'-'
name|'start'
op|')'
newline|'\n'
name|'if'
name|'app_iter'
name|'and'
name|'hasattr'
op|'('
name|'app_iter'
op|','
string|"'app_iter_range'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'app_iter'
op|'.'
name|'app_iter_range'
op|'('
name|'start'
op|','
name|'end'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'app_iter'
op|':'
newline|'\n'
comment|"# this could be improved, but we don't actually use it"
nl|'\n'
indent|'                    '
name|'return'
op|'['
string|"''"
op|'.'
name|'join'
op|'('
name|'app_iter'
op|')'
op|'['
name|'start'
op|':'
name|'end'
op|']'
op|']'
newline|'\n'
dedent|''
name|'elif'
name|'body'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'['
name|'body'
op|'['
name|'start'
op|':'
name|'end'
op|']'
op|']'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'app_iter'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'app_iter'
newline|'\n'
dedent|''
name|'if'
name|'body'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'body'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'status_int'
name|'in'
name|'RESPONSE_REASONS'
op|':'
newline|'\n'
indent|'            '
name|'title'
op|','
name|'exp'
op|'='
name|'RESPONSE_REASONS'
op|'['
name|'self'
op|'.'
name|'status_int'
op|']'
newline|'\n'
name|'if'
name|'exp'
op|':'
newline|'\n'
indent|'                '
name|'body'
op|'='
string|"'<html><h1>%s</h1><p>%s</p></html>'"
op|'%'
op|'('
name|'title'
op|','
name|'exp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'content_length'
op|'='
name|'len'
op|'('
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'content_type'
op|'='
string|"'text/html'"
newline|'\n'
name|'return'
op|'['
name|'body'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'return'
op|'['
string|"''"
op|']'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'environ'
op|'='
name|'env'
newline|'\n'
name|'app_iter'
op|'='
name|'self'
op|'.'
name|'_response_iter'
op|'('
name|'self'
op|'.'
name|'app_iter'
op|','
name|'self'
op|'.'
name|'_body'
op|')'
newline|'\n'
name|'if'
string|"'location'"
name|'in'
name|'self'
op|'.'
name|'headers'
name|'and'
name|'self'
op|'.'
name|'location'
op|'.'
name|'startswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'location'
op|'='
name|'self'
op|'.'
name|'environ'
op|'['
string|"'wsgi.url_scheme'"
op|']'
op|'+'
string|"'://'"
op|'+'
name|'self'
op|'.'
name|'environ'
op|'['
string|"'SERVER_NAME'"
op|']'
op|'+'
name|'self'
op|'.'
name|'location'
newline|'\n'
dedent|''
name|'start_response'
op|'('
name|'self'
op|'.'
name|'status'
op|','
name|'self'
op|'.'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
op|')'
newline|'\n'
name|'return'
name|'app_iter'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|StatusMap
dedent|''
dedent|''
name|'class'
name|'StatusMap'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    A dict-like object that returns Response subclasses/factory functions\n    where the given key is the status code.\n    """'
newline|'\n'
DECL|member|__getitem__
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'key'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'partial'
op|'('
name|'Response'
op|','
name|'status'
op|'='
name|'key'
op|')'
newline|'\n'
DECL|variable|status_map
dedent|''
dedent|''
name|'status_map'
op|'='
name|'StatusMap'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|HTTPAccepted
name|'HTTPAccepted'
op|'='
name|'status_map'
op|'['
number|'202'
op|']'
newline|'\n'
DECL|variable|HTTPCreated
name|'HTTPCreated'
op|'='
name|'status_map'
op|'['
number|'201'
op|']'
newline|'\n'
DECL|variable|HTTPNoContent
name|'HTTPNoContent'
op|'='
name|'status_map'
op|'['
number|'204'
op|']'
newline|'\n'
DECL|variable|HTTPMovedPermanently
name|'HTTPMovedPermanently'
op|'='
name|'status_map'
op|'['
number|'301'
op|']'
newline|'\n'
DECL|variable|HTTPNotModified
name|'HTTPNotModified'
op|'='
name|'status_map'
op|'['
number|'304'
op|']'
newline|'\n'
DECL|variable|HTTPBadRequest
name|'HTTPBadRequest'
op|'='
name|'status_map'
op|'['
number|'400'
op|']'
newline|'\n'
DECL|variable|HTTPUnauthorized
name|'HTTPUnauthorized'
op|'='
name|'status_map'
op|'['
number|'401'
op|']'
newline|'\n'
DECL|variable|HTTPForbidden
name|'HTTPForbidden'
op|'='
name|'status_map'
op|'['
number|'403'
op|']'
newline|'\n'
DECL|variable|HTTPMethodNotAllowed
name|'HTTPMethodNotAllowed'
op|'='
name|'status_map'
op|'['
number|'405'
op|']'
newline|'\n'
DECL|variable|HTTPNotFound
name|'HTTPNotFound'
op|'='
name|'status_map'
op|'['
number|'404'
op|']'
newline|'\n'
DECL|variable|HTTPRequestTimeout
name|'HTTPRequestTimeout'
op|'='
name|'status_map'
op|'['
number|'408'
op|']'
newline|'\n'
DECL|variable|HTTPConflict
name|'HTTPConflict'
op|'='
name|'status_map'
op|'['
number|'409'
op|']'
newline|'\n'
DECL|variable|HTTPLengthRequired
name|'HTTPLengthRequired'
op|'='
name|'status_map'
op|'['
number|'411'
op|']'
newline|'\n'
DECL|variable|HTTPPreconditionFailed
name|'HTTPPreconditionFailed'
op|'='
name|'status_map'
op|'['
number|'412'
op|']'
newline|'\n'
DECL|variable|HTTPRequestEntityTooLarge
name|'HTTPRequestEntityTooLarge'
op|'='
name|'status_map'
op|'['
number|'413'
op|']'
newline|'\n'
DECL|variable|HTTPUnprocessableEntity
name|'HTTPUnprocessableEntity'
op|'='
name|'status_map'
op|'['
number|'422'
op|']'
newline|'\n'
DECL|variable|HTTPClientDisconnect
name|'HTTPClientDisconnect'
op|'='
name|'status_map'
op|'['
number|'499'
op|']'
newline|'\n'
DECL|variable|HTTPServerError
name|'HTTPServerError'
op|'='
name|'status_map'
op|'['
number|'500'
op|']'
newline|'\n'
DECL|variable|HTTPInternalServerError
name|'HTTPInternalServerError'
op|'='
name|'status_map'
op|'['
number|'500'
op|']'
newline|'\n'
DECL|variable|HTTPServiceUnavailable
name|'HTTPServiceUnavailable'
op|'='
name|'status_map'
op|'['
number|'503'
op|']'
newline|'\n'
DECL|variable|HTTPInsufficientStorage
name|'HTTPInsufficientStorage'
op|'='
name|'status_map'
op|'['
number|'507'
op|']'
newline|'\n'
endmarker|''
end_unit
