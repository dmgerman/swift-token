begin_unit
comment|'# Copyright (c) 2013 Christian Schwede <christian.schwede@enovance.com>'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'json'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'string'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'green'
name|'import'
name|'urllib2'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'cli'
name|'import'
name|'recon'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
name|'import'
name|'builder'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestHelpers
name|'class'
name|'TestHelpers'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_seconds2timeunit
indent|'    '
name|'def'
name|'test_seconds2timeunit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'seconds2timeunit'
op|'('
number|'10'
op|')'
op|','
op|'('
number|'10'
op|','
string|"'seconds'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'seconds2timeunit'
op|'('
number|'600'
op|')'
op|','
op|'('
number|'10'
op|','
string|"'minutes'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'seconds2timeunit'
op|'('
number|'36000'
op|')'
op|','
op|'('
number|'10'
op|','
string|"'hours'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'seconds2timeunit'
op|'('
number|'60'
op|'*'
number|'60'
op|'*'
number|'24'
op|'*'
number|'10'
op|')'
op|','
nl|'\n'
op|'('
number|'10'
op|','
string|"'days'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_size_suffix
dedent|''
name|'def'
name|'test_size_suffix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'2'
op|')'
op|','
string|"'500 bytes'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'3'
op|')'
op|','
string|"'5 kB'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'6'
op|')'
op|','
string|"'5 MB'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'9'
op|')'
op|','
string|"'5 GB'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'12'
op|')'
op|','
string|"'5 TB'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'15'
op|')'
op|','
string|"'5 PB'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'18'
op|')'
op|','
string|"'5 EB'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'recon'
op|'.'
name|'size_suffix'
op|'('
number|'5'
op|'*'
number|'10'
op|'**'
number|'21'
op|')'
op|','
string|"'5 ZB'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestScout
dedent|''
dedent|''
name|'class'
name|'TestScout'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|','
op|'*'
name|'_args'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'scout_instance'
op|'='
name|'recon'
op|'.'
name|'Scout'
op|'('
string|'"type"'
op|','
name|'suppress_errors'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'url'
op|'='
string|"'http://127.0.0.1:8080/recon/type'"
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'eventlet.green.urllib2.urlopen'"
op|')'
newline|'\n'
DECL|member|test_scout_ok
name|'def'
name|'test_scout_ok'
op|'('
name|'self'
op|','
name|'mock_urlopen'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_urlopen'
op|'.'
name|'return_value'
op|'.'
name|'read'
op|'='
name|'lambda'
op|':'
name|'json'
op|'.'
name|'dumps'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'url'
op|','
name|'content'
op|','
name|'status'
op|'='
name|'self'
op|'.'
name|'scout_instance'
op|'.'
name|'scout'
op|'('
nl|'\n'
op|'('
string|'"127.0.0.1"'
op|','
string|'"8080"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'url'
op|','
name|'self'
op|'.'
name|'url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'content'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'eventlet.green.urllib2.urlopen'"
op|')'
newline|'\n'
DECL|member|test_scout_url_error
name|'def'
name|'test_scout_url_error'
op|'('
name|'self'
op|','
name|'mock_urlopen'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_urlopen'
op|'.'
name|'side_effect'
op|'='
name|'urllib2'
op|'.'
name|'URLError'
op|'('
string|'""'
op|')'
newline|'\n'
name|'url'
op|','
name|'content'
op|','
name|'status'
op|'='
name|'self'
op|'.'
name|'scout_instance'
op|'.'
name|'scout'
op|'('
nl|'\n'
op|'('
string|'"127.0.0.1"'
op|','
string|'"8080"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'content'
op|','
name|'urllib2'
op|'.'
name|'URLError'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'url'
op|','
name|'self'
op|'.'
name|'url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
op|'-'
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'eventlet.green.urllib2.urlopen'"
op|')'
newline|'\n'
DECL|member|test_scout_http_error
name|'def'
name|'test_scout_http_error'
op|'('
name|'self'
op|','
name|'mock_urlopen'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mock_urlopen'
op|'.'
name|'side_effect'
op|'='
name|'urllib2'
op|'.'
name|'HTTPError'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'url'
op|','
number|'404'
op|','
string|'"Internal error"'
op|','
name|'None'
op|','
name|'None'
op|')'
newline|'\n'
name|'url'
op|','
name|'content'
op|','
name|'status'
op|'='
name|'self'
op|'.'
name|'scout_instance'
op|'.'
name|'scout'
op|'('
nl|'\n'
op|'('
string|'"127.0.0.1"'
op|','
string|'"8080"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'url'
op|','
name|'self'
op|'.'
name|'url'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'content'
op|','
name|'urllib2'
op|'.'
name|'HTTPError'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
number|'404'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestRecon
dedent|''
dedent|''
name|'class'
name|'TestRecon'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|','
op|'*'
name|'_args'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'recon_instance'
op|'='
name|'recon'
op|'.'
name|'SwiftRecon'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'swift_dir'
op|'='
name|'tempfile'
op|'.'
name|'gettempdir'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ring_name'
op|'='
string|'"test_object_%s"'
op|'%'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'random'
op|'.'
name|'choice'
op|'('
name|'string'
op|'.'
name|'digits'
op|')'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
number|'6'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tmpfile_name'
op|'='
string|'"%s/%s.ring.gz"'
op|'%'
op|'('
name|'self'
op|'.'
name|'swift_dir'
op|','
name|'self'
op|'.'
name|'ring_name'
op|')'
newline|'\n'
nl|'\n'
name|'utils'
op|'.'
name|'HASH_PATH_SUFFIX'
op|'='
string|"'endcap'"
newline|'\n'
name|'utils'
op|'.'
name|'HASH_PATH_PREFIX'
op|'='
string|"'startcap'"
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|','
op|'*'
name|'_args'
op|','
op|'**'
name|'_kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'remove'
op|'('
name|'self'
op|'.'
name|'tmpfile_name'
op|')'
newline|'\n'
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_gen_stats
dedent|''
dedent|''
name|'def'
name|'test_gen_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'stats'
op|'='
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'_gen_stats'
op|'('
op|'('
number|'1'
op|','
number|'4'
op|','
number|'10'
op|','
name|'None'
op|')'
op|','
string|"'Sample'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'name'"
op|')'
op|','
string|"'Sample'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'average'"
op|')'
op|','
number|'5.0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'high'"
op|')'
op|','
number|'10'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'reported'"
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'low'"
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'total'"
op|')'
op|','
number|'15'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'number_none'"
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'stats'
op|'.'
name|'get'
op|'('
string|"'perc_none'"
op|')'
op|','
number|'25.0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ptime
dedent|''
name|'def'
name|'test_ptime'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'time.localtime'"
op|')'
name|'as'
name|'mock_localtime'
op|':'
newline|'\n'
indent|'            '
name|'mock_localtime'
op|'.'
name|'return_value'
op|'='
name|'time'
op|'.'
name|'struct_time'
op|'('
nl|'\n'
op|'('
number|'2013'
op|','
number|'12'
op|','
number|'17'
op|','
number|'10'
op|','
number|'0'
op|','
number|'0'
op|','
number|'1'
op|','
number|'351'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'timestamp'
op|'='
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'_ptime'
op|'('
number|'1387274400'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'timestamp'
op|','
string|'"2013-12-17 10:00:00"'
op|')'
newline|'\n'
name|'mock_localtime'
op|'.'
name|'assertCalledWith'
op|'('
number|'1387274400'
op|')'
newline|'\n'
nl|'\n'
name|'timestamp2'
op|'='
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'_ptime'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'timestamp2'
op|','
string|'"2013-12-17 10:00:00"'
op|')'
newline|'\n'
name|'mock_localtime'
op|'.'
name|'assertCalledWith'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_devices
dedent|''
dedent|''
name|'def'
name|'test_get_devices'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ringbuilder'
op|'='
name|'builder'
op|'.'
name|'RingBuilder'
op|'('
number|'2'
op|','
number|'3'
op|','
number|'1'
op|')'
newline|'\n'
name|'ringbuilder'
op|'.'
name|'add_dev'
op|'('
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'weight'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'port'"
op|':'
number|'10000'
op|','
nl|'\n'
string|"'device'"
op|':'
string|"'sda1'"
op|','
string|"'region'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'ringbuilder'
op|'.'
name|'add_dev'
op|'('
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'zone'"
op|':'
number|'1'
op|','
string|"'weight'"
op|':'
number|'1'
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'port'"
op|':'
number|'10001'
op|','
nl|'\n'
string|"'device'"
op|':'
string|"'sda1'"
op|','
string|"'region'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'ringbuilder'
op|'.'
name|'rebalance'
op|'('
op|')'
newline|'\n'
name|'ringbuilder'
op|'.'
name|'get_ring'
op|'('
op|')'
op|'.'
name|'save'
op|'('
name|'self'
op|'.'
name|'tmpfile_name'
op|')'
newline|'\n'
nl|'\n'
name|'ips'
op|'='
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'get_devices'
op|'('
nl|'\n'
name|'None'
op|','
name|'self'
op|'.'
name|'swift_dir'
op|','
name|'self'
op|'.'
name|'ring_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'set'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'10000'
op|')'
op|','
op|'('
string|"'127.0.0.1'"
op|','
number|'10001'
op|')'
op|']'
op|')'
op|','
name|'ips'
op|')'
newline|'\n'
nl|'\n'
name|'ips'
op|'='
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'get_devices'
op|'('
nl|'\n'
number|'0'
op|','
name|'self'
op|'.'
name|'swift_dir'
op|','
name|'self'
op|'.'
name|'ring_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'10000'
op|')'
op|']'
op|')'
op|','
name|'ips'
op|')'
newline|'\n'
nl|'\n'
name|'ips'
op|'='
name|'self'
op|'.'
name|'recon_instance'
op|'.'
name|'get_devices'
op|'('
nl|'\n'
number|'1'
op|','
name|'self'
op|'.'
name|'swift_dir'
op|','
name|'self'
op|'.'
name|'ring_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'['
op|'('
string|"'127.0.0.1'"
op|','
number|'10001'
op|')'
op|']'
op|')'
op|','
name|'ips'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
