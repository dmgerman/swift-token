begin_unit
comment|'# Copyright (c) 2010 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
string|'"""Tests for swift.common.wsgi"""'
newline|'\n'
nl|'\n'
name|'import'
name|'errno'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'mimetools'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'from'
name|'textwrap'
name|'import'
name|'dedent'
newline|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'nested'
newline|'\n'
name|'from'
name|'collections'
name|'import'
name|'defaultdict'
newline|'\n'
name|'from'
name|'urllib'
name|'import'
name|'quote'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'listen'
newline|'\n'
name|'from'
name|'six'
name|'import'
name|'BytesIO'
newline|'\n'
name|'from'
name|'six'
name|'import'
name|'StringIO'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
nl|'\n'
name|'import'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
op|'.'
name|'catch_errors'
newline|'\n'
name|'import'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
op|'.'
name|'gatekeeper'
newline|'\n'
name|'import'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'server'
newline|'\n'
nl|'\n'
name|'import'
name|'swift'
op|'.'
name|'obj'
op|'.'
name|'server'
name|'as'
name|'obj_server'
newline|'\n'
name|'import'
name|'swift'
op|'.'
name|'container'
op|'.'
name|'server'
name|'as'
name|'container_server'
newline|'\n'
name|'import'
name|'swift'
op|'.'
name|'account'
op|'.'
name|'server'
name|'as'
name|'account_server'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'Request'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'wsgi'
op|','
name|'utils'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'POLICIES'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
op|'('
nl|'\n'
name|'temptree'
op|','
name|'with_tempdir'
op|','
name|'write_fake_ring'
op|','
name|'patch_policies'
op|','
name|'FakeLogger'
op|')'
newline|'\n'
nl|'\n'
name|'from'
name|'paste'
op|'.'
name|'deploy'
name|'import'
name|'loadwsgi'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_fake_rings
name|'def'
name|'_fake_rings'
op|'('
name|'tmpdir'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'write_fake_ring'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
string|"'account.ring.gz'"
op|')'
op|')'
newline|'\n'
name|'write_fake_ring'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
string|"'container.ring.gz'"
op|')'
op|')'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'        '
name|'obj_ring_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tmpdir'
op|','
name|'policy'
op|'.'
name|'ring_name'
op|'+'
string|"'.ring.gz'"
op|')'
newline|'\n'
name|'write_fake_ring'
op|'('
name|'obj_ring_path'
op|')'
newline|'\n'
comment|"# make sure there's no other ring cached on this policy"
nl|'\n'
name|'policy'
op|'.'
name|'object_ring'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'patch_policies'
newline|'\n'
DECL|class|TestWSGI
name|'class'
name|'TestWSGI'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Tests for swift.common.wsgi"""'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'utils'
op|'.'
name|'HASH_PATH_PREFIX'
op|'='
string|"'startcap'"
newline|'\n'
name|'self'
op|'.'
name|'_orig_parsetype'
op|'='
name|'mimetools'
op|'.'
name|'Message'
op|'.'
name|'parsetype'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'mimetools'
op|'.'
name|'Message'
op|'.'
name|'parsetype'
op|'='
name|'self'
op|'.'
name|'_orig_parsetype'
newline|'\n'
nl|'\n'
DECL|member|test_monkey_patch_mimetools
dedent|''
name|'def'
name|'test_monkey_patch_mimetools'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'blah'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'type'
op|','
string|"'text/plain'"
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'blah'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'plisttext'
op|','
string|"''"
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'blah'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'maintype'
op|','
string|"'text'"
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'blah'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'subtype'
op|','
string|"'plain'"
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'Content-Type: text/html; charset=ISO-8859-4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'type'
op|','
string|"'text/html'"
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'Content-Type: text/html; charset=ISO-8859-4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'plisttext'
op|','
nl|'\n'
string|"'; charset=ISO-8859-4'"
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'Content-Type: text/html; charset=ISO-8859-4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'maintype'
op|','
string|"'text'"
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'Content-Type: text/html; charset=ISO-8859-4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'subtype'
op|','
string|"'html'"
op|')'
newline|'\n'
nl|'\n'
name|'wsgi'
op|'.'
name|'monkey_patch_mimetools'
op|'('
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'blah'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'type'
op|','
name|'None'
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'blah'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'plisttext'
op|','
string|"''"
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'blah'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'maintype'
op|','
name|'None'
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'blah'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'subtype'
op|','
name|'None'
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'Content-Type: text/html; charset=ISO-8859-4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'type'
op|','
string|"'text/html'"
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'Content-Type: text/html; charset=ISO-8859-4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'plisttext'
op|','
nl|'\n'
string|"'; charset=ISO-8859-4'"
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'Content-Type: text/html; charset=ISO-8859-4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'maintype'
op|','
string|"'text'"
op|')'
newline|'\n'
name|'sio'
op|'='
name|'StringIO'
op|'('
string|"'Content-Type: text/html; charset=ISO-8859-4'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mimetools'
op|'.'
name|'Message'
op|'('
name|'sio'
op|')'
op|'.'
name|'subtype'
op|','
string|"'html'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_request_processor
dedent|''
name|'def'
name|'test_init_request_processor'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config'
op|'='
string|'"""\n        [DEFAULT]\n        swift_dir = TEMPDIR\n\n        [pipeline:main]\n        pipeline = proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n        conn_timeout = 0.2\n        """'
newline|'\n'
name|'contents'
op|'='
name|'dedent'
op|'('
name|'config'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
string|"'proxy-server.conf'"
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'conf_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_file'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
name|'contents'
op|'.'
name|'replace'
op|'('
string|"'TEMPDIR'"
op|','
name|'t'
op|')'
op|')'
newline|'\n'
dedent|''
name|'_fake_rings'
op|'('
name|'t'
op|')'
newline|'\n'
name|'app'
op|','
name|'conf'
op|','
name|'logger'
op|','
name|'log_name'
op|'='
name|'wsgi'
op|'.'
name|'init_request_processor'
op|'('
nl|'\n'
name|'conf_file'
op|','
string|"'proxy-server'"
op|')'
newline|'\n'
comment|'# verify pipeline is catch_errors -> dlo -> proxy-server'
nl|'\n'
dedent|''
name|'expected'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
op|'.'
name|'catch_errors'
op|'.'
name|'CatchErrorMiddleware'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|','
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'app'
op|'='
name|'app'
op|'.'
name|'app'
newline|'\n'
name|'expected'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
op|'.'
name|'gatekeeper'
op|'.'
name|'GatekeeperMiddleware'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|','
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'app'
op|'='
name|'app'
op|'.'
name|'app'
newline|'\n'
name|'expected'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
op|'.'
name|'dlo'
op|'.'
name|'DynamicLargeObject'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|','
name|'expected'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'app'
op|'='
name|'app'
op|'.'
name|'app'
newline|'\n'
name|'expected'
op|'='
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'server'
op|'.'
name|'Application'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|','
name|'expected'
op|')'
op|')'
newline|'\n'
comment|'# config settings applied to app instance'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'0.2'
op|','
name|'app'
op|'.'
name|'conn_timeout'
op|')'
newline|'\n'
comment|"# appconfig returns values from 'proxy-server' section"
nl|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'__file__'"
op|':'
name|'conf_file'
op|','
nl|'\n'
string|"'here'"
op|':'
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'conf_file'
op|')'
op|','
nl|'\n'
string|"'conn_timeout'"
op|':'
string|"'0.2'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
name|'t'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'expected'
op|','
name|'conf'
op|')'
newline|'\n'
comment|'# logger works'
nl|'\n'
name|'logger'
op|'.'
name|'info'
op|'('
string|"'testing'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'proxy-server'"
op|','
name|'log_name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'with_tempdir'
newline|'\n'
DECL|member|test_loadapp_from_file
name|'def'
name|'test_loadapp_from_file'
op|'('
name|'self'
op|','
name|'tempdir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
string|"'object-server.conf'"
op|')'
newline|'\n'
name|'conf_body'
op|'='
string|'"""\n        [app:main]\n        use = egg:swift#object\n        """'
newline|'\n'
name|'contents'
op|'='
name|'dedent'
op|'('
name|'conf_body'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_path'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
name|'contents'
op|')'
newline|'\n'
dedent|''
name|'app'
op|'='
name|'wsgi'
op|'.'
name|'loadapp'
op|'('
name|'conf_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|','
name|'obj_server'
op|'.'
name|'ObjectController'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_loadapp_from_string
dedent|''
name|'def'
name|'test_loadapp_from_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf_body'
op|'='
string|'"""\n        [app:main]\n        use = egg:swift#object\n        """'
newline|'\n'
name|'app'
op|'='
name|'wsgi'
op|'.'
name|'loadapp'
op|'('
name|'wsgi'
op|'.'
name|'ConfigString'
op|'('
name|'conf_body'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|','
name|'obj_server'
op|'.'
name|'ObjectController'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_request_processor_from_conf_dir
dedent|''
name|'def'
name|'test_init_request_processor_from_conf_dir'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config_dir'
op|'='
op|'{'
nl|'\n'
string|"'proxy-server.conf.d/pipeline.conf'"
op|':'
string|'"""\n            [pipeline:main]\n            pipeline = catch_errors proxy-server\n            """'
op|','
nl|'\n'
string|"'proxy-server.conf.d/app.conf'"
op|':'
string|'"""\n            [app:proxy-server]\n            use = egg:swift#proxy\n            conn_timeout = 0.2\n            """'
op|','
nl|'\n'
string|"'proxy-server.conf.d/catch-errors.conf'"
op|':'
string|'"""\n            [filter:catch_errors]\n            use = egg:swift#catch_errors\n            """'
nl|'\n'
op|'}'
newline|'\n'
comment|'# strip indent from test config contents'
nl|'\n'
name|'config_dir'
op|'='
name|'dict'
op|'('
op|'('
name|'f'
op|','
name|'dedent'
op|'('
name|'c'
op|')'
op|')'
name|'for'
op|'('
name|'f'
op|','
name|'c'
op|')'
name|'in'
name|'config_dir'
op|'.'
name|'items'
op|'('
op|')'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.proxy.server.Application.modify_wsgi_pipeline'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'temptree'
op|'('
op|'*'
name|'zip'
op|'('
op|'*'
name|'config_dir'
op|'.'
name|'items'
op|'('
op|')'
op|')'
op|')'
name|'as'
name|'conf_root'
op|':'
newline|'\n'
indent|'                '
name|'conf_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'conf_root'
op|','
string|"'proxy-server.conf.d'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'conf_dir'
op|','
string|"'swift.conf'"
op|')'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                    '
name|'f'
op|'.'
name|'write'
op|'('
string|"'[DEFAULT]\\nswift_dir = %s'"
op|'%'
name|'conf_root'
op|')'
newline|'\n'
dedent|''
name|'_fake_rings'
op|'('
name|'conf_root'
op|')'
newline|'\n'
name|'app'
op|','
name|'conf'
op|','
name|'logger'
op|','
name|'log_name'
op|'='
name|'wsgi'
op|'.'
name|'init_request_processor'
op|'('
nl|'\n'
name|'conf_dir'
op|','
string|"'proxy-server'"
op|')'
newline|'\n'
comment|'# verify pipeline is catch_errors -> proxy-server'
nl|'\n'
dedent|''
dedent|''
name|'expected'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
op|'.'
name|'catch_errors'
op|'.'
name|'CatchErrorMiddleware'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|','
name|'expected'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|'.'
name|'app'
op|','
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'server'
op|'.'
name|'Application'
op|')'
op|')'
newline|'\n'
comment|'# config settings applied to app instance'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'0.2'
op|','
name|'app'
op|'.'
name|'app'
op|'.'
name|'conn_timeout'
op|')'
newline|'\n'
comment|"# appconfig returns values from 'proxy-server' section"
nl|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'__file__'"
op|':'
name|'conf_dir'
op|','
nl|'\n'
string|"'here'"
op|':'
name|'conf_dir'
op|','
nl|'\n'
string|"'conn_timeout'"
op|':'
string|"'0.2'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
name|'conf_root'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'expected'
op|','
name|'conf'
op|')'
newline|'\n'
comment|'# logger works'
nl|'\n'
name|'logger'
op|'.'
name|'info'
op|'('
string|"'testing'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'proxy-server'"
op|','
name|'log_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_socket_bad_values
dedent|''
name|'def'
name|'test_get_socket_bad_values'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# first try with no port set'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'wsgi'
op|'.'
name|'ConfigFilePortError'
op|','
name|'wsgi'
op|'.'
name|'get_socket'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
comment|'# next try with a bad port value set'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'wsgi'
op|'.'
name|'ConfigFilePortError'
op|','
name|'wsgi'
op|'.'
name|'get_socket'
op|','
nl|'\n'
op|'{'
string|"'bind_port'"
op|':'
string|"'abc'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'wsgi'
op|'.'
name|'ConfigFilePortError'
op|','
name|'wsgi'
op|'.'
name|'get_socket'
op|','
nl|'\n'
op|'{'
string|"'bind_port'"
op|':'
name|'None'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_socket
dedent|''
name|'def'
name|'test_get_socket'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# stubs'
nl|'\n'
indent|'        '
name|'conf'
op|'='
op|'{'
string|"'bind_port'"
op|':'
number|'54321'
op|'}'
newline|'\n'
name|'ssl_conf'
op|'='
name|'conf'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'ssl_conf'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
string|"'cert_file'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'key_file'"
op|':'
string|"''"
op|','
nl|'\n'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# mocks'
nl|'\n'
DECL|class|MockSocket
name|'class'
name|'MockSocket'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'opts'
op|'='
name|'defaultdict'
op|'('
name|'dict'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setsockopt
dedent|''
name|'def'
name|'setsockopt'
op|'('
name|'self'
op|','
name|'level'
op|','
name|'optname'
op|','
name|'value'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'opts'
op|'['
name|'level'
op|']'
op|'['
name|'optname'
op|']'
op|'='
name|'value'
newline|'\n'
nl|'\n'
DECL|function|mock_listen
dedent|''
dedent|''
name|'def'
name|'mock_listen'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'MockSocket'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|MockSsl
dedent|''
name|'class'
name|'MockSsl'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'wrap_socket_called'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|wrap_socket
dedent|''
name|'def'
name|'wrap_socket'
op|'('
name|'self'
op|','
name|'sock'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'wrap_socket_called'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'sock'
newline|'\n'
nl|'\n'
comment|'# patch'
nl|'\n'
dedent|''
dedent|''
name|'old_listen'
op|'='
name|'wsgi'
op|'.'
name|'listen'
newline|'\n'
name|'old_ssl'
op|'='
name|'wsgi'
op|'.'
name|'ssl'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'wsgi'
op|'.'
name|'listen'
op|'='
name|'mock_listen'
newline|'\n'
name|'wsgi'
op|'.'
name|'ssl'
op|'='
name|'MockSsl'
op|'('
op|')'
newline|'\n'
comment|'# test'
nl|'\n'
DECL|variable|sock
name|'sock'
op|'='
name|'wsgi'
op|'.'
name|'get_socket'
op|'('
name|'conf'
op|')'
newline|'\n'
comment|'# assert'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'sock'
op|','
name|'MockSocket'
op|')'
op|')'
newline|'\n'
DECL|variable|expected_socket_opts
name|'expected_socket_opts'
op|'='
op|'{'
nl|'\n'
name|'socket'
op|'.'
name|'SOL_SOCKET'
op|':'
op|'{'
nl|'\n'
name|'socket'
op|'.'
name|'SO_REUSEADDR'
op|':'
number|'1'
op|','
nl|'\n'
name|'socket'
op|'.'
name|'SO_KEEPALIVE'
op|':'
number|'1'
op|','
nl|'\n'
op|'}'
op|','
nl|'\n'
name|'socket'
op|'.'
name|'IPPROTO_TCP'
op|':'
op|'{'
nl|'\n'
name|'socket'
op|'.'
name|'TCP_NODELAY'
op|':'
number|'1'
op|','
nl|'\n'
op|'}'
nl|'\n'
op|'}'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'socket'
op|','
string|"'TCP_KEEPIDLE'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'expected_socket_opts'
op|'['
name|'socket'
op|'.'
name|'IPPROTO_TCP'
op|']'
op|'['
nl|'\n'
name|'socket'
op|'.'
name|'TCP_KEEPIDLE'
op|']'
op|'='
number|'600'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'sock'
op|'.'
name|'opts'
op|','
name|'expected_socket_opts'
op|')'
newline|'\n'
comment|'# test ssl'
nl|'\n'
DECL|variable|sock
name|'sock'
op|'='
name|'wsgi'
op|'.'
name|'get_socket'
op|'('
name|'ssl_conf'
op|')'
newline|'\n'
DECL|variable|expected_kwargs
name|'expected_kwargs'
op|'='
op|'{'
nl|'\n'
string|"'certfile'"
op|':'
string|"''"
op|','
nl|'\n'
string|"'keyfile'"
op|':'
string|"''"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'wsgi'
op|'.'
name|'ssl'
op|'.'
name|'wrap_socket_called'
op|','
op|'['
name|'expected_kwargs'
op|']'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'wsgi'
op|'.'
name|'listen'
op|'='
name|'old_listen'
newline|'\n'
name|'wsgi'
op|'.'
name|'ssl'
op|'='
name|'old_ssl'
newline|'\n'
nl|'\n'
DECL|member|test_address_in_use
dedent|''
dedent|''
name|'def'
name|'test_address_in_use'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# stubs'
nl|'\n'
indent|'        '
name|'conf'
op|'='
op|'{'
string|"'bind_port'"
op|':'
number|'54321'
op|'}'
newline|'\n'
nl|'\n'
comment|'# mocks'
nl|'\n'
DECL|function|mock_listen
name|'def'
name|'mock_listen'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'socket'
op|'.'
name|'error'
op|'('
name|'errno'
op|'.'
name|'EADDRINUSE'
op|')'
newline|'\n'
nl|'\n'
DECL|function|value_error_listen
dedent|''
name|'def'
name|'value_error_listen'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ValueError'
op|'('
string|"'fake'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_sleep
dedent|''
name|'def'
name|'mock_sleep'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|MockTime
dedent|''
name|'class'
name|'MockTime'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""Fast clock advances 10 seconds after every call to time\n            """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'current_time'
op|'='
name|'old_time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|time
dedent|''
name|'def'
name|'time'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'rv'
op|'='
name|'self'
op|'.'
name|'current_time'
newline|'\n'
comment|'# advance for next call'
nl|'\n'
name|'self'
op|'.'
name|'current_time'
op|'+='
number|'10'
newline|'\n'
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'old_listen'
op|'='
name|'wsgi'
op|'.'
name|'listen'
newline|'\n'
name|'old_sleep'
op|'='
name|'wsgi'
op|'.'
name|'sleep'
newline|'\n'
name|'old_time'
op|'='
name|'wsgi'
op|'.'
name|'time'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'wsgi'
op|'.'
name|'listen'
op|'='
name|'mock_listen'
newline|'\n'
name|'wsgi'
op|'.'
name|'sleep'
op|'='
name|'mock_sleep'
newline|'\n'
name|'wsgi'
op|'.'
name|'time'
op|'='
name|'MockTime'
op|'('
op|')'
newline|'\n'
comment|'# test error'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'Exception'
op|','
name|'wsgi'
op|'.'
name|'get_socket'
op|','
name|'conf'
op|')'
newline|'\n'
comment|'# different error'
nl|'\n'
name|'wsgi'
op|'.'
name|'listen'
op|'='
name|'value_error_listen'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'wsgi'
op|'.'
name|'get_socket'
op|','
name|'conf'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'wsgi'
op|'.'
name|'listen'
op|'='
name|'old_listen'
newline|'\n'
name|'wsgi'
op|'.'
name|'sleep'
op|'='
name|'old_sleep'
newline|'\n'
name|'wsgi'
op|'.'
name|'time'
op|'='
name|'old_time'
newline|'\n'
nl|'\n'
DECL|member|test_run_server
dedent|''
dedent|''
name|'def'
name|'test_run_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config'
op|'='
string|'"""\n        [DEFAULT]\n        client_timeout = 30\n        max_clients = 1000\n        swift_dir = TEMPDIR\n\n        [pipeline:main]\n        pipeline = proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n        # while "set" values normally override default\n        set client_timeout = 20\n        # this section is not in conf during run_server\n        set max_clients = 10\n        """'
newline|'\n'
nl|'\n'
name|'contents'
op|'='
name|'dedent'
op|'('
name|'config'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
string|"'proxy-server.conf'"
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'conf_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_file'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
name|'contents'
op|'.'
name|'replace'
op|'('
string|"'TEMPDIR'"
op|','
name|'t'
op|')'
op|')'
newline|'\n'
dedent|''
name|'_fake_rings'
op|'('
name|'t'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.proxy.server.Application.'"
nl|'\n'
string|"'modify_wsgi_pipeline'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.wsgi'"
op|')'
name|'as'
name|'_wsgi'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.eventlet'"
op|')'
name|'as'
name|'_eventlet'
op|':'
newline|'\n'
indent|'                        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.inspect'"
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'conf'
op|'='
name|'wsgi'
op|'.'
name|'appconfig'
op|'('
name|'conf_file'
op|')'
newline|'\n'
name|'logger'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'sock'
op|'='
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'wsgi'
op|'.'
name|'run_server'
op|'('
name|'conf'
op|','
name|'logger'
op|','
name|'sock'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'HTTP/1.0'"
op|','
nl|'\n'
name|'_wsgi'
op|'.'
name|'HttpProtocol'
op|'.'
name|'default_request_version'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'30'
op|','
name|'_wsgi'
op|'.'
name|'WRITE_TIMEOUT'
op|')'
newline|'\n'
name|'_eventlet'
op|'.'
name|'hubs'
op|'.'
name|'use_hub'
op|'.'
name|'assert_called_with'
op|'('
name|'utils'
op|'.'
name|'get_hub'
op|'('
op|')'
op|')'
newline|'\n'
name|'_eventlet'
op|'.'
name|'patcher'
op|'.'
name|'monkey_patch'
op|'.'
name|'assert_called_with'
op|'('
name|'all'
op|'='
name|'False'
op|','
nl|'\n'
name|'socket'
op|'='
name|'True'
op|')'
newline|'\n'
name|'_eventlet'
op|'.'
name|'debug'
op|'.'
name|'hub_exceptions'
op|'.'
name|'assert_called_with'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'_wsgi'
op|'.'
name|'server'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'args'
op|','
name|'kwargs'
op|'='
name|'_wsgi'
op|'.'
name|'server'
op|'.'
name|'call_args'
newline|'\n'
name|'server_sock'
op|','
name|'server_app'
op|','
name|'server_logger'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'sock'
op|','
name|'server_sock'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'server_app'
op|','
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'server'
op|'.'
name|'Application'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'20'
op|','
name|'server_app'
op|'.'
name|'client_timeout'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'server_logger'
op|','
name|'wsgi'
op|'.'
name|'NullLogger'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'custom_pool'"
name|'in'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'1000'
op|','
name|'kwargs'
op|'['
string|"'custom_pool'"
op|']'
op|'.'
name|'size'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_server_with_latest_eventlet
dedent|''
name|'def'
name|'test_run_server_with_latest_eventlet'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config'
op|'='
string|'"""\n        [DEFAULT]\n        swift_dir = TEMPDIR\n\n        [pipeline:main]\n        pipeline = proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n        """'
newline|'\n'
nl|'\n'
DECL|function|argspec_stub
name|'def'
name|'argspec_stub'
op|'('
name|'server'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'mock'
op|'.'
name|'MagicMock'
op|'('
name|'args'
op|'='
op|'['
string|"'capitalize_response_headers'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'contents'
op|'='
name|'dedent'
op|'('
name|'config'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
string|"'proxy-server.conf'"
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'conf_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_file'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
name|'contents'
op|'.'
name|'replace'
op|'('
string|"'TEMPDIR'"
op|','
name|'t'
op|')'
op|')'
newline|'\n'
dedent|''
name|'_fake_rings'
op|'('
name|'t'
op|')'
newline|'\n'
name|'with'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.proxy.server.Application.'"
nl|'\n'
string|"'modify_wsgi_pipeline'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.wsgi'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.eventlet'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.inspect'"
op|','
nl|'\n'
name|'getargspec'
op|'='
name|'argspec_stub'
op|')'
op|')'
name|'as'
op|'('
name|'_'
op|','
name|'_wsgi'
op|','
name|'_'
op|','
name|'_'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'conf'
op|'='
name|'wsgi'
op|'.'
name|'appconfig'
op|'('
name|'conf_file'
op|')'
newline|'\n'
name|'logger'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'sock'
op|'='
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'wsgi'
op|'.'
name|'run_server'
op|'('
name|'conf'
op|','
name|'logger'
op|','
name|'sock'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'_wsgi'
op|'.'
name|'server'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'args'
op|','
name|'kwargs'
op|'='
name|'_wsgi'
op|'.'
name|'server'
op|'.'
name|'call_args'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'capitalize_response_headers'"
op|')'
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_server_conf_dir
dedent|''
name|'def'
name|'test_run_server_conf_dir'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config_dir'
op|'='
op|'{'
nl|'\n'
string|"'proxy-server.conf.d/pipeline.conf'"
op|':'
string|'"""\n            [pipeline:main]\n            pipeline = proxy-server\n            """'
op|','
nl|'\n'
string|"'proxy-server.conf.d/app.conf'"
op|':'
string|'"""\n            [app:proxy-server]\n            use = egg:swift#proxy\n            """'
op|','
nl|'\n'
string|"'proxy-server.conf.d/default.conf'"
op|':'
string|'"""\n            [DEFAULT]\n            client_timeout = 30\n            """'
nl|'\n'
op|'}'
newline|'\n'
comment|'# strip indent from test config contents'
nl|'\n'
name|'config_dir'
op|'='
name|'dict'
op|'('
op|'('
name|'f'
op|','
name|'dedent'
op|'('
name|'c'
op|')'
op|')'
name|'for'
op|'('
name|'f'
op|','
name|'c'
op|')'
name|'in'
name|'config_dir'
op|'.'
name|'items'
op|'('
op|')'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'*'
name|'zip'
op|'('
op|'*'
name|'config_dir'
op|'.'
name|'items'
op|'('
op|')'
op|')'
op|')'
name|'as'
name|'conf_root'
op|':'
newline|'\n'
indent|'            '
name|'conf_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'conf_root'
op|','
string|"'proxy-server.conf.d'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'conf_dir'
op|','
string|"'swift.conf'"
op|')'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
string|"'[DEFAULT]\\nswift_dir = %s'"
op|'%'
name|'conf_root'
op|')'
newline|'\n'
dedent|''
name|'_fake_rings'
op|'('
name|'conf_root'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.proxy.server.Application.'"
nl|'\n'
string|"'modify_wsgi_pipeline'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.wsgi'"
op|')'
name|'as'
name|'_wsgi'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.eventlet'"
op|')'
name|'as'
name|'_eventlet'
op|':'
newline|'\n'
indent|'                        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'dict'
op|'('
string|"'os.environ'"
op|','
op|'{'
string|"'TZ'"
op|':'
string|"''"
op|'}'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.inspect'"
op|')'
op|':'
newline|'\n'
indent|'                                '
name|'conf'
op|'='
name|'wsgi'
op|'.'
name|'appconfig'
op|'('
name|'conf_dir'
op|')'
newline|'\n'
name|'logger'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'sock'
op|'='
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'wsgi'
op|'.'
name|'run_server'
op|'('
name|'conf'
op|','
name|'logger'
op|','
name|'sock'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'environ'
op|'['
string|"'TZ'"
op|']'
name|'is'
name|'not'
string|"''"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'HTTP/1.0'"
op|','
nl|'\n'
name|'_wsgi'
op|'.'
name|'HttpProtocol'
op|'.'
name|'default_request_version'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'30'
op|','
name|'_wsgi'
op|'.'
name|'WRITE_TIMEOUT'
op|')'
newline|'\n'
name|'_eventlet'
op|'.'
name|'hubs'
op|'.'
name|'use_hub'
op|'.'
name|'assert_called_with'
op|'('
name|'utils'
op|'.'
name|'get_hub'
op|'('
op|')'
op|')'
newline|'\n'
name|'_eventlet'
op|'.'
name|'patcher'
op|'.'
name|'monkey_patch'
op|'.'
name|'assert_called_with'
op|'('
name|'all'
op|'='
name|'False'
op|','
nl|'\n'
name|'socket'
op|'='
name|'True'
op|')'
newline|'\n'
name|'_eventlet'
op|'.'
name|'debug'
op|'.'
name|'hub_exceptions'
op|'.'
name|'assert_called_with'
op|'('
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'_wsgi'
op|'.'
name|'server'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'args'
op|','
name|'kwargs'
op|'='
name|'_wsgi'
op|'.'
name|'server'
op|'.'
name|'call_args'
newline|'\n'
name|'server_sock'
op|','
name|'server_app'
op|','
name|'server_logger'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'sock'
op|','
name|'server_sock'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'server_app'
op|','
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'server'
op|'.'
name|'Application'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'server_logger'
op|','
name|'wsgi'
op|'.'
name|'NullLogger'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'custom_pool'"
name|'in'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_server_debug
dedent|''
name|'def'
name|'test_run_server_debug'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config'
op|'='
string|'"""\n        [DEFAULT]\n        eventlet_debug = yes\n        client_timeout = 30\n        max_clients = 1000\n        swift_dir = TEMPDIR\n\n        [pipeline:main]\n        pipeline = proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n        # while "set" values normally override default\n        set client_timeout = 20\n        # this section is not in conf during run_server\n        set max_clients = 10\n        """'
newline|'\n'
nl|'\n'
name|'contents'
op|'='
name|'dedent'
op|'('
name|'config'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
string|"'proxy-server.conf'"
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'conf_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_file'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
name|'contents'
op|'.'
name|'replace'
op|'('
string|"'TEMPDIR'"
op|','
name|'t'
op|')'
op|')'
newline|'\n'
dedent|''
name|'_fake_rings'
op|'('
name|'t'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.proxy.server.Application.'"
nl|'\n'
string|"'modify_wsgi_pipeline'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.wsgi'"
op|')'
name|'as'
name|'_wsgi'
op|':'
newline|'\n'
indent|'                    '
name|'mock_server'
op|'='
name|'_wsgi'
op|'.'
name|'server'
newline|'\n'
name|'_wsgi'
op|'.'
name|'server'
op|'='
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'mock_server'
op|'('
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.eventlet'"
op|')'
name|'as'
name|'_eventlet'
op|':'
newline|'\n'
indent|'                        '
name|'conf'
op|'='
name|'wsgi'
op|'.'
name|'appconfig'
op|'('
name|'conf_file'
op|')'
newline|'\n'
name|'logger'
op|'='
name|'logging'
op|'.'
name|'getLogger'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'sock'
op|'='
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'wsgi'
op|'.'
name|'run_server'
op|'('
name|'conf'
op|','
name|'logger'
op|','
name|'sock'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'HTTP/1.0'"
op|','
nl|'\n'
name|'_wsgi'
op|'.'
name|'HttpProtocol'
op|'.'
name|'default_request_version'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'30'
op|','
name|'_wsgi'
op|'.'
name|'WRITE_TIMEOUT'
op|')'
newline|'\n'
name|'_eventlet'
op|'.'
name|'hubs'
op|'.'
name|'use_hub'
op|'.'
name|'assert_called_with'
op|'('
name|'utils'
op|'.'
name|'get_hub'
op|'('
op|')'
op|')'
newline|'\n'
name|'_eventlet'
op|'.'
name|'patcher'
op|'.'
name|'monkey_patch'
op|'.'
name|'assert_called_with'
op|'('
name|'all'
op|'='
name|'False'
op|','
nl|'\n'
name|'socket'
op|'='
name|'True'
op|')'
newline|'\n'
name|'_eventlet'
op|'.'
name|'debug'
op|'.'
name|'hub_exceptions'
op|'.'
name|'assert_called_with'
op|'('
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'mock_server'
op|'.'
name|'called'
op|')'
newline|'\n'
name|'args'
op|','
name|'kwargs'
op|'='
name|'mock_server'
op|'.'
name|'call_args'
newline|'\n'
name|'server_sock'
op|','
name|'server_app'
op|','
name|'server_logger'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'sock'
op|','
name|'server_sock'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'server_app'
op|','
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'server'
op|'.'
name|'Application'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'20'
op|','
name|'server_app'
op|'.'
name|'client_timeout'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'server_logger'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'custom_pool'"
name|'in'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
number|'1000'
op|','
name|'kwargs'
op|'['
string|"'custom_pool'"
op|']'
op|'.'
name|'size'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_appconfig_dir_ignores_hidden_files
dedent|''
name|'def'
name|'test_appconfig_dir_ignores_hidden_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config_dir'
op|'='
op|'{'
nl|'\n'
string|"'server.conf.d/01.conf'"
op|':'
string|'"""\n            [app:main]\n            use = egg:swift#proxy\n            port = 8080\n            """'
op|','
nl|'\n'
string|"'server.conf.d/.01.conf.swp'"
op|':'
string|'"""\n            [app:main]\n            use = egg:swift#proxy\n            port = 8081\n            """'
op|','
nl|'\n'
op|'}'
newline|'\n'
comment|'# strip indent from test config contents'
nl|'\n'
name|'config_dir'
op|'='
name|'dict'
op|'('
op|'('
name|'f'
op|','
name|'dedent'
op|'('
name|'c'
op|')'
op|')'
name|'for'
op|'('
name|'f'
op|','
name|'c'
op|')'
name|'in'
name|'config_dir'
op|'.'
name|'items'
op|'('
op|')'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'*'
name|'zip'
op|'('
op|'*'
name|'config_dir'
op|'.'
name|'items'
op|'('
op|')'
op|')'
op|')'
name|'as'
name|'path'
op|':'
newline|'\n'
indent|'            '
name|'conf_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'path'
op|','
string|"'server.conf.d'"
op|')'
newline|'\n'
name|'conf'
op|'='
name|'wsgi'
op|'.'
name|'appconfig'
op|'('
name|'conf_dir'
op|')'
newline|'\n'
dedent|''
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'__file__'"
op|':'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'path'
op|','
string|"'server.conf.d'"
op|')'
op|','
nl|'\n'
string|"'here'"
op|':'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'path'
op|','
string|"'server.conf.d'"
op|')'
op|','
nl|'\n'
string|"'port'"
op|':'
string|"'8080'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conf'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_auth_wsgi_input
dedent|''
name|'def'
name|'test_pre_auth_wsgi_input'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'oldenv'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'newenv'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_env'
op|'('
name|'oldenv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'wsgi.input'"
name|'in'
name|'newenv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'newenv'
op|'['
string|"'wsgi.input'"
op|']'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
name|'oldenv'
op|'='
op|'{'
string|"'wsgi.input'"
op|':'
name|'BytesIO'
op|'('
string|"b'original wsgi.input'"
op|')'
op|'}'
newline|'\n'
name|'newenv'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_env'
op|'('
name|'oldenv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'wsgi.input'"
name|'in'
name|'newenv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'newenv'
op|'['
string|"'wsgi.input'"
op|']'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
name|'oldenv'
op|'='
op|'{'
string|"'swift.source'"
op|':'
string|"'UT'"
op|'}'
newline|'\n'
name|'newenv'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_env'
op|'('
name|'oldenv'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'newenv'
op|'['
string|"'swift.source'"
op|']'
op|','
string|"'UT'"
op|')'
newline|'\n'
nl|'\n'
name|'oldenv'
op|'='
op|'{'
string|"'swift.source'"
op|':'
string|"'UT'"
op|'}'
newline|'\n'
name|'newenv'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_env'
op|'('
name|'oldenv'
op|','
name|'swift_source'
op|'='
string|"'SA'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'newenv'
op|'['
string|"'swift.source'"
op|']'
op|','
string|"'SA'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_auth_req
dedent|''
name|'def'
name|'test_pre_auth_req'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|FakeReq
indent|'        '
name|'class'
name|'FakeReq'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'            '
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|fake_blank
name|'def'
name|'fake_blank'
op|'('
name|'cls'
op|','
name|'path'
op|','
name|'environ'
op|'='
name|'None'
op|','
name|'body'
op|'='
string|"''"
op|','
name|'headers'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'environ'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'environ'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'if'
name|'headers'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
string|"'test'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'HTTP_X_TRANS_ID'"
name|'in'
name|'environ'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'was_blank'
op|'='
name|'Request'
op|'.'
name|'blank'
newline|'\n'
name|'Request'
op|'.'
name|'blank'
op|'='
name|'FakeReq'
op|'.'
name|'fake_blank'
newline|'\n'
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
op|'{'
string|"'HTTP_X_TRANS_ID'"
op|':'
string|"'1234'"
op|'}'
op|','
nl|'\n'
string|"'PUT'"
op|','
string|"'/'"
op|','
name|'body'
op|'='
string|"'tester'"
op|','
name|'headers'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
op|'{'
string|"'HTTP_X_TRANS_ID'"
op|':'
string|"'1234'"
op|'}'
op|','
nl|'\n'
string|"'PUT'"
op|','
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'Request'
op|'.'
name|'blank'
op|'='
name|'was_blank'
newline|'\n'
nl|'\n'
DECL|member|test_pre_auth_req_with_quoted_path
dedent|''
name|'def'
name|'test_pre_auth_req_with_quoted_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
nl|'\n'
op|'{'
string|"'HTTP_X_TRANS_ID'"
op|':'
string|"'1234'"
op|'}'
op|','
string|"'PUT'"
op|','
name|'path'
op|'='
name|'quote'
op|'('
string|"'/a space'"
op|')'
op|','
nl|'\n'
name|'body'
op|'='
string|"'tester'"
op|','
name|'headers'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'path'
op|','
name|'quote'
op|'('
string|"'/a space'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_auth_req_drops_query
dedent|''
name|'def'
name|'test_pre_auth_req_drops_query'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
nl|'\n'
op|'{'
string|"'QUERY_STRING'"
op|':'
string|"'original'"
op|'}'
op|','
string|"'GET'"
op|','
string|"'path'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'query_string'
op|','
string|"'original'"
op|')'
newline|'\n'
name|'r'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
nl|'\n'
op|'{'
string|"'QUERY_STRING'"
op|':'
string|"'original'"
op|'}'
op|','
string|"'GET'"
op|','
string|"'path?replacement'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'query_string'
op|','
string|"'replacement'"
op|')'
newline|'\n'
name|'r'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
nl|'\n'
op|'{'
string|"'QUERY_STRING'"
op|':'
string|"'original'"
op|'}'
op|','
string|"'GET'"
op|','
string|"'path?'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'query_string'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_auth_req_with_body
dedent|''
name|'def'
name|'test_pre_auth_req_with_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
nl|'\n'
op|'{'
string|"'QUERY_STRING'"
op|':'
string|"'original'"
op|'}'
op|','
string|"'GET'"
op|','
string|"'path'"
op|','
string|"'the body'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'body'
op|','
string|"'the body'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_auth_creates_script_name
dedent|''
name|'def'
name|'test_pre_auth_creates_script_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'e'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_env'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'SCRIPT_NAME'"
name|'in'
name|'e'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_auth_copies_script_name
dedent|''
name|'def'
name|'test_pre_auth_copies_script_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'e'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_env'
op|'('
op|'{'
string|"'SCRIPT_NAME'"
op|':'
string|"'/script_name'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'e'
op|'['
string|"'SCRIPT_NAME'"
op|']'
op|','
string|"'/script_name'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_auth_copies_script_name_unless_path_overridden
dedent|''
name|'def'
name|'test_pre_auth_copies_script_name_unless_path_overridden'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'e'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_env'
op|'('
op|'{'
string|"'SCRIPT_NAME'"
op|':'
string|"'/script_name'"
op|'}'
op|','
nl|'\n'
name|'path'
op|'='
string|"'/override'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'e'
op|'['
string|"'SCRIPT_NAME'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'e'
op|'['
string|"'PATH_INFO'"
op|']'
op|','
string|"'/override'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_auth_req_swift_source
dedent|''
name|'def'
name|'test_pre_auth_req_swift_source'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
nl|'\n'
op|'{'
string|"'QUERY_STRING'"
op|':'
string|"'original'"
op|'}'
op|','
string|"'GET'"
op|','
string|"'path'"
op|','
string|"'the body'"
op|','
nl|'\n'
name|'swift_source'
op|'='
string|"'UT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'body'
op|','
string|"'the body'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'environ'
op|'['
string|"'swift.source'"
op|']'
op|','
string|"'UT'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_server_global_conf_callback
dedent|''
name|'def'
name|'test_run_server_global_conf_callback'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'calls'
op|'='
name|'defaultdict'
op|'('
name|'lambda'
op|':'
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_initrp
name|'def'
name|'_initrp'
op|'('
name|'conf_file'
op|','
name|'app_section'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'('
nl|'\n'
op|'{'
string|"'__file__'"
op|':'
string|"'test'"
op|','
string|"'workers'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|"'logger'"
op|','
nl|'\n'
string|"'log_name'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|_global_conf_callback
dedent|''
name|'def'
name|'_global_conf_callback'
op|'('
name|'preloaded_app_conf'
op|','
name|'global_conf'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'calls'
op|'['
string|"'_global_conf_callback'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'preloaded_app_conf'
op|','
op|'{'
string|"'__file__'"
op|':'
string|"'test'"
op|','
string|"'workers'"
op|':'
number|'0'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'global_conf'
op|','
op|'{'
string|"'log_name'"
op|':'
string|"'log_name'"
op|'}'
op|')'
newline|'\n'
name|'global_conf'
op|'['
string|"'test1'"
op|']'
op|'='
string|"'one'"
newline|'\n'
nl|'\n'
DECL|function|_loadapp
dedent|''
name|'def'
name|'_loadapp'
op|'('
name|'uri'
op|','
name|'name'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'calls'
op|'['
string|"'_loadapp'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'global_conf'"
name|'in'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'kwargs'
op|'['
string|"'global_conf'"
op|']'
op|','
nl|'\n'
op|'{'
string|"'log_name'"
op|':'
string|"'log_name'"
op|','
string|"'test1'"
op|':'
string|"'one'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'_initrp'"
op|','
name|'_initrp'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'get_socket'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'drop_privileges'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'loadapp'"
op|','
name|'_loadapp'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'capture_stdio'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'run_server'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'wsgi'
op|'.'
name|'run_wsgi'
op|'('
string|"'conf_file'"
op|','
string|"'app_section'"
op|','
nl|'\n'
name|'global_conf_callback'
op|'='
name|'_global_conf_callback'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'calls'
op|'['
string|"'_global_conf_callback'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'calls'
op|'['
string|"'_loadapp'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_server_success
dedent|''
name|'def'
name|'test_run_server_success'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'calls'
op|'='
name|'defaultdict'
op|'('
name|'lambda'
op|':'
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_initrp
name|'def'
name|'_initrp'
op|'('
name|'conf_file'
op|','
name|'app_section'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'calls'
op|'['
string|"'_initrp'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'return'
op|'('
nl|'\n'
op|'{'
string|"'__file__'"
op|':'
string|"'test'"
op|','
string|"'workers'"
op|':'
number|'0'
op|'}'
op|','
nl|'\n'
string|"'logger'"
op|','
nl|'\n'
string|"'log_name'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|_loadapp
dedent|''
name|'def'
name|'_loadapp'
op|'('
name|'uri'
op|','
name|'name'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'calls'
op|'['
string|"'_loadapp'"
op|']'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'_initrp'"
op|','
name|'_initrp'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'get_socket'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'drop_privileges'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'loadapp'"
op|','
name|'_loadapp'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'capture_stdio'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'run_server'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rc'
op|'='
name|'wsgi'
op|'.'
name|'run_wsgi'
op|'('
string|"'conf_file'"
op|','
string|"'app_section'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'calls'
op|'['
string|"'_initrp'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'calls'
op|'['
string|"'_loadapp'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rc'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.run_server'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.WorkersStrategy'"
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.ServersPerPortStrategy'"
op|')'
newline|'\n'
DECL|member|test_run_server_strategy_plumbing
name|'def'
name|'test_run_server_strategy_plumbing'
op|'('
name|'self'
op|','
name|'mock_per_port'
op|','
name|'mock_workers'
op|','
nl|'\n'
name|'mock_run_server'
op|')'
op|':'
newline|'\n'
comment|'# Make sure the right strategy gets used in a number of different'
nl|'\n'
comment|'# config cases.'
nl|'\n'
indent|'        '
name|'mock_per_port'
op|'('
op|')'
op|'.'
name|'bind_ports'
op|'.'
name|'return_value'
op|'='
string|"'stop early'"
newline|'\n'
name|'mock_workers'
op|'('
op|')'
op|'.'
name|'bind_ports'
op|'.'
name|'return_value'
op|'='
string|"'stop early'"
newline|'\n'
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'stub__initrp'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'__file__'"
op|':'
string|"'test'"
op|','
string|"'workers'"
op|':'
number|'2'
op|'}'
op|','
comment|'# conf'
nl|'\n'
name|'logger'
op|','
nl|'\n'
string|"'log_name'"
op|','
nl|'\n'
op|']'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'_initrp'"
op|','
name|'return_value'
op|'='
name|'stub__initrp'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'server_type'
name|'in'
op|'('
string|"'account-server'"
op|','
string|"'container-server'"
op|','
nl|'\n'
string|"'object-server'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'mock_per_port'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'mock_workers'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'logger'
op|'.'
name|'_clear'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'wsgi'
op|'.'
name|'run_wsgi'
op|'('
string|"'conf_file'"
op|','
name|'server_type'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'stop early'"
op|','
nl|'\n'
op|']'
op|','
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'mock_per_port'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'stub__initrp'
op|'['
number|'0'
op|']'
op|','
name|'logger'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|'.'
name|'bind_ports'
op|'('
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'mock_workers'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'stub__initrp'
op|'['
number|'0'
op|']'
op|'['
string|"'servers_per_port'"
op|']'
op|'='
number|'3'
newline|'\n'
name|'for'
name|'server_type'
name|'in'
op|'('
string|"'account-server'"
op|','
string|"'container-server'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'mock_per_port'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'mock_workers'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'logger'
op|'.'
name|'_clear'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'wsgi'
op|'.'
name|'run_wsgi'
op|'('
string|"'conf_file'"
op|','
name|'server_type'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'stop early'"
op|','
nl|'\n'
op|']'
op|','
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'mock_per_port'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'stub__initrp'
op|'['
number|'0'
op|']'
op|','
name|'logger'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|'.'
name|'bind_ports'
op|'('
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'mock_workers'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mock_per_port'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'mock_workers'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'logger'
op|'.'
name|'_clear'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'wsgi'
op|'.'
name|'run_wsgi'
op|'('
string|"'conf_file'"
op|','
string|"'object-server'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'stop early'"
op|','
nl|'\n'
op|']'
op|','
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'stub__initrp'
op|'['
number|'0'
op|']'
op|','
name|'logger'
op|','
name|'servers_per_port'
op|'='
number|'3'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|'.'
name|'bind_ports'
op|'('
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'mock_per_port'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'mock_workers'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_server_failure1
dedent|''
dedent|''
name|'def'
name|'test_run_server_failure1'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'calls'
op|'='
name|'defaultdict'
op|'('
name|'lambda'
op|':'
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_initrp
name|'def'
name|'_initrp'
op|'('
name|'conf_file'
op|','
name|'app_section'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'calls'
op|'['
string|"'_initrp'"
op|']'
op|'+='
number|'1'
newline|'\n'
name|'raise'
name|'wsgi'
op|'.'
name|'ConfigFileError'
op|'('
string|"'test exception'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|_loadapp
dedent|''
name|'def'
name|'_loadapp'
op|'('
name|'uri'
op|','
name|'name'
op|'='
name|'None'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'calls'
op|'['
string|"'_loadapp'"
op|']'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'_initrp'"
op|','
name|'_initrp'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'get_socket'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'drop_privileges'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'loadapp'"
op|','
name|'_loadapp'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'capture_stdio'"
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'wsgi'
op|','
string|"'run_server'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'rc'
op|'='
name|'wsgi'
op|'.'
name|'run_wsgi'
op|'('
string|"'conf_file'"
op|','
string|"'app_section'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'calls'
op|'['
string|"'_initrp'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'calls'
op|'['
string|"'_loadapp'"
op|']'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rc'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_auth_req_with_empty_env_no_path
dedent|''
name|'def'
name|'test_pre_auth_req_with_empty_env_no_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
nl|'\n'
op|'{'
op|'}'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'path'
op|','
name|'quote'
op|'('
string|"''"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'SCRIPT_NAME'"
name|'in'
name|'r'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'PATH_INFO'"
name|'in'
name|'r'
op|'.'
name|'environ'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_auth_req_with_env_path
dedent|''
name|'def'
name|'test_pre_auth_req_with_env_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
nl|'\n'
op|'{'
string|"'PATH_INFO'"
op|':'
string|"'/unquoted path with %20'"
op|'}'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'path'
op|','
name|'quote'
op|'('
string|"'/unquoted path with %20'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'environ'
op|'['
string|"'SCRIPT_NAME'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_auth_req_with_env_script
dedent|''
name|'def'
name|'test_pre_auth_req_with_env_script'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'r'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
op|'{'
string|"'SCRIPT_NAME'"
op|':'
string|"'/hello'"
op|'}'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'path'
op|','
name|'quote'
op|'('
string|"'/hello'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_auth_req_with_env_path_and_script
dedent|''
name|'def'
name|'test_pre_auth_req_with_env_path_and_script'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'env'
op|'='
op|'{'
string|"'PATH_INFO'"
op|':'
string|"'/unquoted path with %20'"
op|','
nl|'\n'
string|"'SCRIPT_NAME'"
op|':'
string|"'/script'"
op|'}'
newline|'\n'
name|'r'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
name|'env'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'expected_path'
op|'='
name|'quote'
op|'('
name|'env'
op|'['
string|"'SCRIPT_NAME'"
op|']'
op|'+'
name|'env'
op|'['
string|"'PATH_INFO'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'path'
op|','
name|'expected_path'
op|')'
newline|'\n'
name|'env'
op|'='
op|'{'
string|"'PATH_INFO'"
op|':'
string|"''"
op|','
string|"'SCRIPT_NAME'"
op|':'
string|"'/script'"
op|'}'
newline|'\n'
name|'r'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
name|'env'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'path'
op|','
string|"'/script'"
op|')'
newline|'\n'
name|'env'
op|'='
op|'{'
string|"'PATH_INFO'"
op|':'
string|"'/path'"
op|','
string|"'SCRIPT_NAME'"
op|':'
string|"''"
op|'}'
newline|'\n'
name|'r'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
name|'env'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'path'
op|','
string|"'/path'"
op|')'
newline|'\n'
name|'env'
op|'='
op|'{'
string|"'PATH_INFO'"
op|':'
string|"''"
op|','
string|"'SCRIPT_NAME'"
op|':'
string|"''"
op|'}'
newline|'\n'
name|'r'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
name|'env'
op|','
string|"'GET'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'path'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pre_auth_req_path_overrides_env
dedent|''
name|'def'
name|'test_pre_auth_req_path_overrides_env'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'env'
op|'='
op|'{'
string|"'PATH_INFO'"
op|':'
string|"'/path'"
op|','
string|"'SCRIPT_NAME'"
op|':'
string|"'/script'"
op|'}'
newline|'\n'
name|'r'
op|'='
name|'wsgi'
op|'.'
name|'make_pre_authed_request'
op|'('
name|'env'
op|','
string|"'GET'"
op|','
string|"'/override'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'path'
op|','
string|"'/override'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'environ'
op|'['
string|"'SCRIPT_NAME'"
op|']'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'r'
op|'.'
name|'environ'
op|'['
string|"'PATH_INFO'"
op|']'
op|','
string|"'/override'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestServersPerPortStrategy
dedent|''
dedent|''
name|'class'
name|'TestServersPerPortStrategy'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'='
op|'{'
nl|'\n'
string|"'workers'"
op|':'
number|'100'
op|','
comment|'# ignored'
nl|'\n'
string|"'user'"
op|':'
string|"'bob'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
string|"'/jim/cricket'"
op|','
nl|'\n'
string|"'ring_check_interval'"
op|':'
string|"'76'"
op|','
nl|'\n'
string|"'bind_ip'"
op|':'
string|"'2.3.4.5'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'servers_per_port'
op|'='
number|'3'
newline|'\n'
name|'self'
op|'.'
name|'s1'
op|','
name|'self'
op|'.'
name|'s2'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
op|','
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'patcher'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.get_socket'"
op|','
nl|'\n'
name|'side_effect'
op|'='
op|'['
name|'self'
op|'.'
name|'s1'
op|','
name|'self'
op|'.'
name|'s2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_get_socket'
op|'='
name|'patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
name|'patcher'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.drop_privileges'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_drop_privileges'
op|'='
name|'patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
name|'patcher'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.BindPortsCache'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_cache_class'
op|'='
name|'patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
name|'patcher'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.os.setsid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_setsid'
op|'='
name|'patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
name|'patcher'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.os.chdir'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_chdir'
op|'='
name|'patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
name|'patcher'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.os.umask'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_umask'
op|'='
name|'patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'all_bind_ports_for_node'
op|'='
name|'self'
op|'.'
name|'mock_cache_class'
op|'('
op|')'
op|'.'
name|'all_bind_ports_for_node'
newline|'\n'
name|'self'
op|'.'
name|'ports'
op|'='
op|'('
number|'6006'
op|','
number|'6007'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'all_bind_ports_for_node'
op|'.'
name|'return_value'
op|'='
name|'set'
op|'('
name|'self'
op|'.'
name|'ports'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'strategy'
op|'='
name|'wsgi'
op|'.'
name|'ServersPerPortStrategy'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'servers_per_port'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_loop_timeout
dedent|''
name|'def'
name|'test_loop_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This strategy should loop every ring_check_interval seconds, even if'
nl|'\n'
comment|'# no workers exit.'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'76'
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'loop_timeout'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# Check the default'
nl|'\n'
name|'del'
name|'self'
op|'.'
name|'conf'
op|'['
string|"'ring_check_interval'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'strategy'
op|'='
name|'wsgi'
op|'.'
name|'ServersPerPortStrategy'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'self'
op|'.'
name|'servers_per_port'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'15'
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'loop_timeout'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bind_ports
dedent|''
name|'def'
name|'test_bind_ports'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'bind_ports'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'('
number|'6006'
op|','
number|'6007'
op|')'
op|')'
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'bind_ports'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|'{'
string|"'workers'"
op|':'
number|'100'
op|','
comment|'# ignored'
nl|'\n'
string|"'user'"
op|':'
string|"'bob'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
string|"'/jim/cricket'"
op|','
nl|'\n'
string|"'ring_check_interval'"
op|':'
string|"'76'"
op|','
nl|'\n'
string|"'bind_ip'"
op|':'
string|"'2.3.4.5'"
op|','
nl|'\n'
string|"'bind_port'"
op|':'
number|'6006'
op|'}'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|'{'
string|"'workers'"
op|':'
number|'100'
op|','
comment|'# ignored'
nl|'\n'
string|"'user'"
op|':'
string|"'bob'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
string|"'/jim/cricket'"
op|','
nl|'\n'
string|"'ring_check_interval'"
op|':'
string|"'76'"
op|','
nl|'\n'
string|"'bind_ip'"
op|':'
string|"'2.3.4.5'"
op|','
nl|'\n'
string|"'bind_port'"
op|':'
number|'6007'
op|'}'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'mock_get_socket'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
number|'6006'
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'port_pid_state'
op|'.'
name|'port_for_sock'
op|'('
name|'self'
op|'.'
name|'s1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
number|'6007'
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'port_pid_state'
op|'.'
name|'port_for_sock'
op|'('
name|'self'
op|'.'
name|'s2'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|']'
op|','
name|'self'
op|'.'
name|'mock_setsid'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|')'
op|']'
op|','
name|'self'
op|'.'
name|'mock_chdir'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
number|'0o22'
op|')'
op|']'
op|','
name|'self'
op|'.'
name|'mock_umask'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bind_ports_ignores_setsid_errors
dedent|''
name|'def'
name|'test_bind_ports_ignores_setsid_errors'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mock_setsid'
op|'.'
name|'side_effect'
op|'='
name|'OSError'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'bind_ports'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'set'
op|'('
op|'('
number|'6006'
op|','
number|'6007'
op|')'
op|')'
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'bind_ports'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|'{'
string|"'workers'"
op|':'
number|'100'
op|','
comment|'# ignored'
nl|'\n'
string|"'user'"
op|':'
string|"'bob'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
string|"'/jim/cricket'"
op|','
nl|'\n'
string|"'ring_check_interval'"
op|':'
string|"'76'"
op|','
nl|'\n'
string|"'bind_ip'"
op|':'
string|"'2.3.4.5'"
op|','
nl|'\n'
string|"'bind_port'"
op|':'
number|'6006'
op|'}'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|'{'
string|"'workers'"
op|':'
number|'100'
op|','
comment|'# ignored'
nl|'\n'
string|"'user'"
op|':'
string|"'bob'"
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
string|"'/jim/cricket'"
op|','
nl|'\n'
string|"'ring_check_interval'"
op|':'
string|"'76'"
op|','
nl|'\n'
string|"'bind_ip'"
op|':'
string|"'2.3.4.5'"
op|','
nl|'\n'
string|"'bind_port'"
op|':'
number|'6007'
op|'}'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'mock_get_socket'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
number|'6006'
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'port_pid_state'
op|'.'
name|'port_for_sock'
op|'('
name|'self'
op|'.'
name|'s1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
number|'6007'
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'port_pid_state'
op|'.'
name|'port_for_sock'
op|'('
name|'self'
op|'.'
name|'s2'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|']'
op|','
name|'self'
op|'.'
name|'mock_setsid'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
string|"'/'"
op|')'
op|']'
op|','
name|'self'
op|'.'
name|'mock_chdir'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
name|'mock'
op|'.'
name|'call'
op|'('
number|'0o22'
op|')'
op|']'
op|','
name|'self'
op|'.'
name|'mock_umask'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_fork_sock
dedent|''
name|'def'
name|'test_no_fork_sock'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'no_fork_sock'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_new_worker_socks
dedent|''
name|'def'
name|'test_new_worker_socks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'bind_ports'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'all_bind_ports_for_node'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'pid'
op|'='
number|'88'
newline|'\n'
name|'got_si'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'s'
op|','
name|'i'
name|'in'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'new_worker_socks'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'got_si'
op|'.'
name|'append'
op|'('
op|'('
name|'s'
op|','
name|'i'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'register_worker_start'
op|'('
name|'s'
op|','
name|'i'
op|','
name|'pid'
op|')'
newline|'\n'
name|'pid'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
op|'('
name|'self'
op|'.'
name|'s1'
op|','
number|'0'
op|')'
op|','
op|'('
name|'self'
op|'.'
name|'s1'
op|','
number|'1'
op|')'
op|','
op|'('
name|'self'
op|'.'
name|'s1'
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
name|'self'
op|'.'
name|'s2'
op|','
number|'0'
op|')'
op|','
op|'('
name|'self'
op|'.'
name|'s2'
op|','
number|'1'
op|')'
op|','
op|'('
name|'self'
op|'.'
name|'s2'
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'got_si'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'Started child %d (PID %d) for port %d'"
op|'%'
op|'('
number|'0'
op|','
number|'88'
op|','
number|'6006'
op|')'
op|','
nl|'\n'
string|"'Started child %d (PID %d) for port %d'"
op|'%'
op|'('
number|'1'
op|','
number|'89'
op|','
number|'6006'
op|')'
op|','
nl|'\n'
string|"'Started child %d (PID %d) for port %d'"
op|'%'
op|'('
number|'2'
op|','
number|'90'
op|','
number|'6006'
op|')'
op|','
nl|'\n'
string|"'Started child %d (PID %d) for port %d'"
op|'%'
op|'('
number|'0'
op|','
number|'91'
op|','
number|'6007'
op|')'
op|','
nl|'\n'
string|"'Started child %d (PID %d) for port %d'"
op|'%'
op|'('
number|'1'
op|','
number|'92'
op|','
number|'6007'
op|')'
op|','
nl|'\n'
string|"'Started child %d (PID %d) for port %d'"
op|'%'
op|'('
number|'2'
op|','
number|'93'
op|','
number|'6007'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'notice'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'_clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Steady-state...'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'list'
op|'('
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'new_worker_socks'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'all_bind_ports_for_node'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Get rid of servers for ports which disappear from the ring'
nl|'\n'
name|'self'
op|'.'
name|'ports'
op|'='
op|'('
number|'6007'
op|','
op|')'
newline|'\n'
name|'self'
op|'.'
name|'all_bind_ports_for_node'
op|'.'
name|'return_value'
op|'='
name|'set'
op|'('
name|'self'
op|'.'
name|'ports'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'s1'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'s2'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.greenio'"
op|')'
name|'as'
name|'mock_greenio'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'list'
op|'('
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'new_worker_socks'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
op|')'
op|','
comment|'# ring_check_interval has passed...'
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'all_bind_ports_for_node'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'.'
name|'shutdown_safe'
op|'('
name|'self'
op|'.'
name|'s1'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'mock_greenio'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'.'
name|'close'
op|'('
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'s1'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'self'
op|'.'
name|'s2'
op|'.'
name|'mock_calls'
op|')'
comment|'# not closed'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'Closing unnecessary sock for port %d'"
op|'%'
number|'6006'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'notice'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'_clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Create new socket & workers for new ports that appear in ring'
nl|'\n'
name|'self'
op|'.'
name|'ports'
op|'='
op|'('
number|'6007'
op|','
number|'6009'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'all_bind_ports_for_node'
op|'.'
name|'return_value'
op|'='
name|'set'
op|'('
name|'self'
op|'.'
name|'ports'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'s1'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'s2'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'s3'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_get_socket'
op|'.'
name|'side_effect'
op|'='
name|'Exception'
op|'('
string|"'ack'"
op|')'
newline|'\n'
nl|'\n'
comment|'# But first make sure we handle failure to bind to the requested port!'
nl|'\n'
name|'got_si'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'s'
op|','
name|'i'
name|'in'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'new_worker_socks'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'got_si'
op|'.'
name|'append'
op|'('
op|'('
name|'s'
op|','
name|'i'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'register_worker_start'
op|'('
name|'s'
op|','
name|'i'
op|','
name|'pid'
op|')'
newline|'\n'
name|'pid'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'got_si'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'Unable to bind to port %d: %s'"
op|'%'
op|'('
number|'6009'
op|','
name|'Exception'
op|'('
string|"'ack'"
op|')'
op|')'
op|','
nl|'\n'
string|"'Unable to bind to port %d: %s'"
op|'%'
op|'('
number|'6009'
op|','
name|'Exception'
op|'('
string|"'ack'"
op|')'
op|')'
op|','
nl|'\n'
string|"'Unable to bind to port %d: %s'"
op|'%'
op|'('
number|'6009'
op|','
name|'Exception'
op|'('
string|"'ack'"
op|')'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'critical'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'_clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Will keep trying, so let it succeed again'
nl|'\n'
name|'self'
op|'.'
name|'mock_get_socket'
op|'.'
name|'side_effect'
op|'='
op|'['
name|'s3'
op|']'
newline|'\n'
nl|'\n'
name|'got_si'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'s'
op|','
name|'i'
name|'in'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'new_worker_socks'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'got_si'
op|'.'
name|'append'
op|'('
op|'('
name|'s'
op|','
name|'i'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'register_worker_start'
op|'('
name|'s'
op|','
name|'i'
op|','
name|'pid'
op|')'
newline|'\n'
name|'pid'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
op|'('
name|'s3'
op|','
number|'0'
op|')'
op|','
op|'('
name|'s3'
op|','
number|'1'
op|')'
op|','
op|'('
name|'s3'
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'got_si'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'Started child %d (PID %d) for port %d'"
op|'%'
op|'('
number|'0'
op|','
number|'94'
op|','
number|'6009'
op|')'
op|','
nl|'\n'
string|"'Started child %d (PID %d) for port %d'"
op|'%'
op|'('
number|'1'
op|','
number|'95'
op|','
number|'6009'
op|')'
op|','
nl|'\n'
string|"'Started child %d (PID %d) for port %d'"
op|'%'
op|'('
number|'2'
op|','
number|'96'
op|','
number|'6009'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'notice'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'_clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Steady-state...'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'list'
op|'('
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'new_worker_socks'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'all_bind_ports_for_node'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Restart a guy who died on us'
nl|'\n'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'register_worker_exit'
op|'('
number|'95'
op|')'
comment|'# server_idx == 1'
newline|'\n'
nl|'\n'
name|'got_si'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'s'
op|','
name|'i'
name|'in'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'new_worker_socks'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'got_si'
op|'.'
name|'append'
op|'('
op|'('
name|'s'
op|','
name|'i'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'register_worker_start'
op|'('
name|'s'
op|','
name|'i'
op|','
name|'pid'
op|')'
newline|'\n'
name|'pid'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
op|'('
name|'s3'
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'got_si'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'Started child %d (PID %d) for port %d'"
op|'%'
op|'('
number|'1'
op|','
number|'97'
op|','
number|'6009'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'notice'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'_clear'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Check log_sock_exit'
nl|'\n'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'log_sock_exit'
op|'('
name|'self'
op|'.'
name|'s2'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'Child %d (PID %d, port %d) exiting normally'"
op|'%'
op|'('
nl|'\n'
number|'2'
op|','
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
op|','
number|'6007'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'notice'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# It's ok to register_worker_exit for a PID that's already had its"
nl|'\n'
comment|'# socket closed due to orphaning.'
nl|'\n'
comment|'# This is one of the workers for port 6006 that already got reaped.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'register_worker_exit'
op|'('
number|'89'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_fork_hook
dedent|''
name|'def'
name|'test_post_fork_hook'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'post_fork_hook'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'bob'"
op|','
name|'call_setsid'
op|'='
name|'False'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'mock_drop_privileges'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shutdown_sockets
dedent|''
name|'def'
name|'test_shutdown_sockets'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'bind_ports'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.greenio'"
op|')'
name|'as'
name|'mock_greenio'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'shutdown_sockets'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'.'
name|'shutdown_safe'
op|'('
name|'self'
op|'.'
name|'s1'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'.'
name|'shutdown_safe'
op|'('
name|'self'
op|'.'
name|'s2'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'mock_greenio'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'.'
name|'close'
op|'('
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'s1'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'.'
name|'close'
op|'('
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'s2'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestWorkersStrategy
dedent|''
dedent|''
name|'class'
name|'TestWorkersStrategy'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'='
op|'{'
nl|'\n'
string|"'workers'"
op|':'
number|'2'
op|','
nl|'\n'
string|"'user'"
op|':'
string|"'bob'"
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'strategy'
op|'='
name|'wsgi'
op|'.'
name|'WorkersStrategy'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
name|'patcher'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.get_socket'"
op|','
nl|'\n'
name|'return_value'
op|'='
string|"'abc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_get_socket'
op|'='
name|'patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
name|'patcher'
op|'='
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.drop_privileges'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mock_drop_privileges'
op|'='
name|'patcher'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'addCleanup'
op|'('
name|'patcher'
op|'.'
name|'stop'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_loop_timeout
dedent|''
name|'def'
name|'test_loop_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This strategy should sit in the green.os.wait() for a bit (to avoid'
nl|'\n'
comment|'# busy-waiting) but not forever (so the keep-running flag actually'
nl|'\n'
comment|'# gets checked).'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'0.5'
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'loop_timeout'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_binding
dedent|''
name|'def'
name|'test_binding'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'bind_ports'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'abc'"
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'sock'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
name|'self'
op|'.'
name|'conf'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'mock_get_socket'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'('
string|"'bob'"
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'mock_drop_privileges'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'mock_get_socket'
op|'.'
name|'side_effect'
op|'='
name|'wsgi'
op|'.'
name|'ConfigFilePortError'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
string|"'bind_port wasn\\'t properly set in the config file. '"
nl|'\n'
string|"'It must be explicitly set to a valid port number.'"
op|','
nl|'\n'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'bind_ports'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_fork_sock
dedent|''
name|'def'
name|'test_no_fork_sock'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'bind_ports'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'no_fork_sock'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'conf'
op|'['
string|"'workers'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'strategy'
op|'='
name|'wsgi'
op|'.'
name|'WorkersStrategy'
op|'('
name|'self'
op|'.'
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'bind_ports'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'abc'"
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'no_fork_sock'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_new_worker_socks
dedent|''
name|'def'
name|'test_new_worker_socks'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'bind_ports'
op|'('
op|')'
newline|'\n'
name|'pid'
op|'='
number|'88'
newline|'\n'
name|'sock_count'
op|'='
number|'0'
newline|'\n'
name|'for'
name|'s'
op|','
name|'i'
name|'in'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'new_worker_socks'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'abc'"
op|','
name|'s'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
name|'i'
op|')'
comment|'# unused for this strategy'
newline|'\n'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'register_worker_start'
op|'('
name|'s'
op|','
string|"'unused'"
op|','
name|'pid'
op|')'
newline|'\n'
name|'pid'
op|'+='
number|'1'
newline|'\n'
name|'sock_count'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'Started child %s'"
op|'%'
number|'88'
op|','
nl|'\n'
string|"'Started child %s'"
op|'%'
number|'89'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'notice'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2'
op|','
name|'sock_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
op|']'
op|','
name|'list'
op|'('
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'new_worker_socks'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'sock_count'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'register_worker_exit'
op|'('
number|'88'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'Removing dead child %s'"
op|'%'
number|'88'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'s'
op|','
name|'i'
name|'in'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'new_worker_socks'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'abc'"
op|','
name|'s'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
name|'i'
op|')'
comment|'# unused for this strategy'
newline|'\n'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'register_worker_start'
op|'('
name|'s'
op|','
string|"'unused'"
op|','
name|'pid'
op|')'
newline|'\n'
name|'pid'
op|'+='
number|'1'
newline|'\n'
name|'sock_count'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'sock_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'Started child %s'"
op|'%'
number|'88'
op|','
nl|'\n'
string|"'Started child %s'"
op|'%'
number|'89'
op|','
nl|'\n'
string|"'Started child %s'"
op|'%'
number|'90'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'notice'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_post_fork_hook
dedent|''
name|'def'
name|'test_post_fork_hook'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# Just don't crash or do something stupid"
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'None'
op|','
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'post_fork_hook'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_shutdown_sockets
dedent|''
name|'def'
name|'test_shutdown_sockets'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'mock_get_socket'
op|'.'
name|'return_value'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'bind_ports'
op|'('
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.wsgi.greenio'"
op|')'
name|'as'
name|'mock_greenio'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'shutdown_sockets'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'.'
name|'shutdown_safe'
op|'('
name|'self'
op|'.'
name|'mock_get_socket'
op|'.'
name|'return_value'
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'mock_greenio'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
name|'mock'
op|'.'
name|'call'
op|'.'
name|'close'
op|'('
op|')'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'mock_get_socket'
op|'.'
name|'return_value'
op|'.'
name|'mock_calls'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_log_sock_exit
dedent|''
name|'def'
name|'test_log_sock_exit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'strategy'
op|'.'
name|'log_sock_exit'
op|'('
string|"'blahblah'"
op|','
string|"'blahblah'"
op|')'
newline|'\n'
name|'my_pid'
op|'='
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
nl|'\n'
string|"'Child %d exiting normally'"
op|'%'
name|'my_pid'
op|','
nl|'\n'
op|']'
op|','
name|'self'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'notice'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestWSGIContext
dedent|''
dedent|''
name|'class'
name|'TestWSGIContext'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_app_call
indent|'    '
name|'def'
name|'test_app_call'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'statuses'
op|'='
op|'['
string|"'200 Ok'"
op|','
string|"'404 Not Found'"
op|']'
newline|'\n'
nl|'\n'
DECL|function|app
name|'def'
name|'app'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
name|'statuses'
op|'.'
name|'pop'
op|'('
number|'0'
op|')'
op|','
op|'['
op|'('
string|"'Content-Length'"
op|','
string|"'3'"
op|')'
op|']'
op|')'
newline|'\n'
name|'yield'
string|"'Ok\\n'"
newline|'\n'
nl|'\n'
dedent|''
name|'wc'
op|'='
name|'wsgi'
op|'.'
name|'WSGIContext'
op|'('
name|'app'
op|')'
newline|'\n'
name|'r'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'it'
op|'='
name|'wc'
op|'.'
name|'_app_call'
op|'('
name|'r'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'wc'
op|'.'
name|'_response_status'
op|','
string|"'200 Ok'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"''"
op|'.'
name|'join'
op|'('
name|'it'
op|')'
op|','
string|"'Ok\\n'"
op|')'
newline|'\n'
name|'r'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'it'
op|'='
name|'wc'
op|'.'
name|'_app_call'
op|'('
name|'r'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'wc'
op|'.'
name|'_response_status'
op|','
string|"'404 Not Found'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"''"
op|'.'
name|'join'
op|'('
name|'it'
op|')'
op|','
string|"'Ok\\n'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_app_iter_is_closable
dedent|''
name|'def'
name|'test_app_iter_is_closable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|app
indent|'        '
name|'def'
name|'app'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|'('
string|"'Content-Length'"
op|','
string|"'25'"
op|')'
op|']'
op|')'
newline|'\n'
name|'yield'
string|"'aaaaa'"
newline|'\n'
name|'yield'
string|"'bbbbb'"
newline|'\n'
name|'yield'
string|"'ccccc'"
newline|'\n'
name|'yield'
string|"'ddddd'"
newline|'\n'
name|'yield'
string|"'eeeee'"
newline|'\n'
nl|'\n'
dedent|''
name|'wc'
op|'='
name|'wsgi'
op|'.'
name|'WSGIContext'
op|'('
name|'app'
op|')'
newline|'\n'
name|'r'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'iterable'
op|'='
name|'wc'
op|'.'
name|'_app_call'
op|'('
name|'r'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'wc'
op|'.'
name|'_response_status'
op|','
string|"'200 OK'"
op|')'
newline|'\n'
nl|'\n'
name|'iterator'
op|'='
name|'iter'
op|'('
name|'iterable'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'aaaaa'"
op|','
name|'next'
op|'('
name|'iterator'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'bbbbb'"
op|','
name|'next'
op|'('
name|'iterator'
op|')'
op|')'
newline|'\n'
name|'iterable'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'iterator'
op|'.'
name|'next'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestPipelineWrapper
dedent|''
dedent|''
name|'class'
name|'TestPipelineWrapper'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config'
op|'='
string|'"""\n        [DEFAULT]\n        swift_dir = TEMPDIR\n\n        [pipeline:main]\n        pipeline = healthcheck catch_errors tempurl proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n        conn_timeout = 0.2\n\n        [filter:catch_errors]\n        use = egg:swift#catch_errors\n\n        [filter:healthcheck]\n        use = egg:swift#healthcheck\n\n        [filter:tempurl]\n        paste.filter_factory = swift.common.middleware.tempurl:filter_factory\n        """'
newline|'\n'
nl|'\n'
name|'contents'
op|'='
name|'dedent'
op|'('
name|'config'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
string|"'proxy-server.conf'"
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'conf_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_file'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
name|'contents'
op|'.'
name|'replace'
op|'('
string|"'TEMPDIR'"
op|','
name|'t'
op|')'
op|')'
newline|'\n'
dedent|''
name|'ctx'
op|'='
name|'wsgi'
op|'.'
name|'loadcontext'
op|'('
name|'loadwsgi'
op|'.'
name|'APP'
op|','
name|'conf_file'
op|','
name|'global_conf'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'pipe'
op|'='
name|'wsgi'
op|'.'
name|'PipelineWrapper'
op|'('
name|'ctx'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_entry_point_names
dedent|''
dedent|''
name|'def'
name|'_entry_point_names'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Helper method to return a list of the entry point names for the'
nl|'\n'
comment|'# filters in the pipeline.'
nl|'\n'
indent|'        '
name|'return'
op|'['
name|'c'
op|'.'
name|'entry_point_name'
name|'for'
name|'c'
name|'in'
name|'self'
op|'.'
name|'pipe'
op|'.'
name|'context'
op|'.'
name|'filter_contexts'
op|']'
newline|'\n'
nl|'\n'
DECL|member|test_startswith
dedent|''
name|'def'
name|'test_startswith'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'pipe'
op|'.'
name|'startswith'
op|'('
string|'"healthcheck"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'pipe'
op|'.'
name|'startswith'
op|'('
string|'"tempurl"'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_startswith_no_filters
dedent|''
name|'def'
name|'test_startswith_no_filters'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config'
op|'='
string|'"""\n        [DEFAULT]\n        swift_dir = TEMPDIR\n\n        [pipeline:main]\n        pipeline = proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n        conn_timeout = 0.2\n        """'
newline|'\n'
name|'contents'
op|'='
name|'dedent'
op|'('
name|'config'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
string|"'proxy-server.conf'"
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'conf_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_file'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
name|'contents'
op|'.'
name|'replace'
op|'('
string|"'TEMPDIR'"
op|','
name|'t'
op|')'
op|')'
newline|'\n'
dedent|''
name|'ctx'
op|'='
name|'wsgi'
op|'.'
name|'loadcontext'
op|'('
name|'loadwsgi'
op|'.'
name|'APP'
op|','
name|'conf_file'
op|','
name|'global_conf'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'pipe'
op|'='
name|'wsgi'
op|'.'
name|'PipelineWrapper'
op|'('
name|'ctx'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'pipe'
op|'.'
name|'startswith'
op|'('
string|"'proxy'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_insert_filter
dedent|''
name|'def'
name|'test_insert_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'original_modules'
op|'='
op|'['
string|"'healthcheck'"
op|','
string|"'catch_errors'"
op|','
name|'None'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'_entry_point_names'
op|'('
op|')'
op|','
name|'original_modules'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'pipe'
op|'.'
name|'insert_filter'
op|'('
name|'self'
op|'.'
name|'pipe'
op|'.'
name|'create_filter'
op|'('
string|"'catch_errors'"
op|')'
op|')'
newline|'\n'
name|'expected_modules'
op|'='
op|'['
string|"'catch_errors'"
op|','
string|"'healthcheck'"
op|','
nl|'\n'
string|"'catch_errors'"
op|','
name|'None'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'_entry_point_names'
op|'('
op|')'
op|','
name|'expected_modules'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_str
dedent|''
name|'def'
name|'test_str'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'str'
op|'('
name|'self'
op|'.'
name|'pipe'
op|')'
op|','
nl|'\n'
string|'"healthcheck catch_errors tempurl proxy-server"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_str_unknown_filter
dedent|''
name|'def'
name|'test_str_unknown_filter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'del'
name|'self'
op|'.'
name|'pipe'
op|'.'
name|'context'
op|'.'
name|'filter_contexts'
op|'['
number|'0'
op|']'
op|'.'
name|'__dict__'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'pipe'
op|'.'
name|'context'
op|'.'
name|'filter_contexts'
op|'['
number|'0'
op|']'
op|'.'
name|'object'
op|'='
string|"'mysterious'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'str'
op|'('
name|'self'
op|'.'
name|'pipe'
op|')'
op|','
nl|'\n'
string|'"<unknown> catch_errors tempurl proxy-server"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'patch_policies'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.utils.HASH_PATH_SUFFIX'"
op|','
name|'new'
op|'='
string|"'endcap'"
op|')'
newline|'\n'
DECL|class|TestPipelineModification
name|'class'
name|'TestPipelineModification'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|pipeline_modules
indent|'    '
name|'def'
name|'pipeline_modules'
op|'('
name|'self'
op|','
name|'app'
op|')'
op|':'
newline|'\n'
comment|"# This is rather brittle; it'll break if a middleware stores its app"
nl|'\n'
comment|'# anywhere other than an attribute named "app", but it works for now.'
nl|'\n'
indent|'        '
name|'pipe'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'_'
name|'in'
name|'range'
op|'('
number|'1000'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pipe'
op|'.'
name|'append'
op|'('
name|'app'
op|'.'
name|'__class__'
op|'.'
name|'__module__'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'hasattr'
op|'('
name|'app'
op|','
string|"'app'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'app'
op|'='
name|'app'
op|'.'
name|'app'
newline|'\n'
dedent|''
name|'return'
name|'pipe'
newline|'\n'
nl|'\n'
DECL|member|test_load_app
dedent|''
name|'def'
name|'test_load_app'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config'
op|'='
string|'"""\n        [DEFAULT]\n        swift_dir = TEMPDIR\n\n        [pipeline:main]\n        pipeline = healthcheck proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n        conn_timeout = 0.2\n\n        [filter:catch_errors]\n        use = egg:swift#catch_errors\n\n        [filter:healthcheck]\n        use = egg:swift#healthcheck\n        """'
newline|'\n'
nl|'\n'
DECL|function|modify_func
name|'def'
name|'modify_func'
op|'('
name|'app'
op|','
name|'pipe'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'new'
op|'='
name|'pipe'
op|'.'
name|'create_filter'
op|'('
string|"'catch_errors'"
op|')'
newline|'\n'
name|'pipe'
op|'.'
name|'insert_filter'
op|'('
name|'new'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'contents'
op|'='
name|'dedent'
op|'('
name|'config'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
string|"'proxy-server.conf'"
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'conf_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_file'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
name|'contents'
op|'.'
name|'replace'
op|'('
string|"'TEMPDIR'"
op|','
name|'t'
op|')'
op|')'
newline|'\n'
dedent|''
name|'_fake_rings'
op|'('
name|'t'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'swift.proxy.server.Application.modify_wsgi_pipeline'"
op|','
nl|'\n'
name|'modify_func'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'app'
op|'='
name|'wsgi'
op|'.'
name|'loadapp'
op|'('
name|'conf_file'
op|','
name|'global_conf'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'exp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
op|'.'
name|'catch_errors'
op|'.'
name|'CatchErrorMiddleware'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|','
name|'exp'
op|')'
op|','
name|'app'
op|')'
newline|'\n'
name|'exp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
op|'.'
name|'healthcheck'
op|'.'
name|'HealthCheckMiddleware'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|'.'
name|'app'
op|','
name|'exp'
op|')'
op|','
name|'app'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'exp'
op|'='
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'server'
op|'.'
name|'Application'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|'.'
name|'app'
op|'.'
name|'app'
op|','
name|'exp'
op|')'
op|','
name|'app'
op|'.'
name|'app'
op|'.'
name|'app'
op|')'
newline|'\n'
nl|'\n'
comment|'# make sure you can turn off the pipeline modification if you want'
nl|'\n'
DECL|function|blow_up
name|'def'
name|'blow_up'
op|'('
op|'*'
name|'_'
op|','
op|'**'
name|'__'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'self'
op|'.'
name|'fail'
op|'('
string|'"needs more struts"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'swift.proxy.server.Application.modify_wsgi_pipeline'"
op|','
nl|'\n'
name|'blow_up'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'app'
op|'='
name|'wsgi'
op|'.'
name|'loadapp'
op|'('
name|'conf_file'
op|','
name|'global_conf'
op|'='
op|'{'
op|'}'
op|','
nl|'\n'
name|'allow_modify_pipeline'
op|'='
name|'False'
op|')'
newline|'\n'
nl|'\n'
comment|'# the pipeline was untouched'
nl|'\n'
dedent|''
name|'exp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
op|'.'
name|'healthcheck'
op|'.'
name|'HealthCheckMiddleware'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|','
name|'exp'
op|')'
op|','
name|'app'
op|')'
newline|'\n'
name|'exp'
op|'='
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'server'
op|'.'
name|'Application'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|'.'
name|'app'
op|','
name|'exp'
op|')'
op|','
name|'app'
op|'.'
name|'app'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_proxy_unmodified_wsgi_pipeline
dedent|''
dedent|''
name|'def'
name|'test_proxy_unmodified_wsgi_pipeline'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Make sure things are sane even when we modify nothing'
nl|'\n'
indent|'        '
name|'config'
op|'='
string|'"""\n        [DEFAULT]\n        swift_dir = TEMPDIR\n\n        [pipeline:main]\n        pipeline = catch_errors gatekeeper proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n        conn_timeout = 0.2\n\n        [filter:catch_errors]\n        use = egg:swift#catch_errors\n\n        [filter:gatekeeper]\n        use = egg:swift#gatekeeper\n        """'
newline|'\n'
nl|'\n'
name|'contents'
op|'='
name|'dedent'
op|'('
name|'config'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
string|"'proxy-server.conf'"
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'conf_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_file'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
name|'contents'
op|'.'
name|'replace'
op|'('
string|"'TEMPDIR'"
op|','
name|'t'
op|')'
op|')'
newline|'\n'
dedent|''
name|'_fake_rings'
op|'('
name|'t'
op|')'
newline|'\n'
name|'app'
op|'='
name|'wsgi'
op|'.'
name|'loadapp'
op|'('
name|'conf_file'
op|','
name|'global_conf'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'pipeline_modules'
op|'('
name|'app'
op|')'
op|','
nl|'\n'
op|'['
string|"'swift.common.middleware.catch_errors'"
op|','
nl|'\n'
string|"'swift.common.middleware.gatekeeper'"
op|','
nl|'\n'
string|"'swift.common.middleware.dlo'"
op|','
nl|'\n'
string|"'swift.proxy.server'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_proxy_modify_wsgi_pipeline
dedent|''
name|'def'
name|'test_proxy_modify_wsgi_pipeline'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config'
op|'='
string|'"""\n        [DEFAULT]\n        swift_dir = TEMPDIR\n\n        [pipeline:main]\n        pipeline = healthcheck proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n        conn_timeout = 0.2\n\n        [filter:healthcheck]\n        use = egg:swift#healthcheck\n        """'
newline|'\n'
nl|'\n'
name|'contents'
op|'='
name|'dedent'
op|'('
name|'config'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
string|"'proxy-server.conf'"
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'conf_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_file'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
name|'contents'
op|'.'
name|'replace'
op|'('
string|"'TEMPDIR'"
op|','
name|'t'
op|')'
op|')'
newline|'\n'
dedent|''
name|'_fake_rings'
op|'('
name|'t'
op|')'
newline|'\n'
name|'app'
op|'='
name|'wsgi'
op|'.'
name|'loadapp'
op|'('
name|'conf_file'
op|','
name|'global_conf'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'pipeline_modules'
op|'('
name|'app'
op|')'
op|','
nl|'\n'
op|'['
string|"'swift.common.middleware.catch_errors'"
op|','
nl|'\n'
string|"'swift.common.middleware.gatekeeper'"
op|','
nl|'\n'
string|"'swift.common.middleware.dlo'"
op|','
nl|'\n'
string|"'swift.common.middleware.healthcheck'"
op|','
nl|'\n'
string|"'swift.proxy.server'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_proxy_modify_wsgi_pipeline_ordering
dedent|''
name|'def'
name|'test_proxy_modify_wsgi_pipeline_ordering'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config'
op|'='
string|'"""\n        [DEFAULT]\n        swift_dir = TEMPDIR\n\n        [pipeline:main]\n        pipeline = healthcheck proxy-logging bulk tempurl proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n        conn_timeout = 0.2\n\n        [filter:healthcheck]\n        use = egg:swift#healthcheck\n\n        [filter:proxy-logging]\n        use = egg:swift#proxy_logging\n\n        [filter:bulk]\n        use = egg:swift#bulk\n\n        [filter:tempurl]\n        use = egg:swift#tempurl\n        """'
newline|'\n'
nl|'\n'
name|'new_req_filters'
op|'='
op|'['
nl|'\n'
comment|'# not in pipeline, no afters'
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'catch_errors'"
op|'}'
op|','
nl|'\n'
comment|'# already in pipeline'
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'proxy_logging'"
op|','
nl|'\n'
string|"'after_fn'"
op|':'
name|'lambda'
name|'_'
op|':'
op|'['
string|"'catch_errors'"
op|']'
op|'}'
op|','
nl|'\n'
comment|'# not in pipeline, comes after more than one thing'
nl|'\n'
op|'{'
string|"'name'"
op|':'
string|"'container_quotas'"
op|','
nl|'\n'
string|"'after_fn'"
op|':'
name|'lambda'
name|'_'
op|':'
op|'['
string|"'catch_errors'"
op|','
string|"'bulk'"
op|']'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'contents'
op|'='
name|'dedent'
op|'('
name|'config'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
string|"'proxy-server.conf'"
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'conf_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_file'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
name|'contents'
op|'.'
name|'replace'
op|'('
string|"'TEMPDIR'"
op|','
name|'t'
op|')'
op|')'
newline|'\n'
dedent|''
name|'_fake_rings'
op|'('
name|'t'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'server'
op|','
string|"'required_filters'"
op|','
nl|'\n'
name|'new_req_filters'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'app'
op|'='
name|'wsgi'
op|'.'
name|'loadapp'
op|'('
name|'conf_file'
op|','
name|'global_conf'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'pipeline_modules'
op|'('
name|'app'
op|')'
op|','
op|'['
nl|'\n'
string|"'swift.common.middleware.catch_errors'"
op|','
nl|'\n'
string|"'swift.common.middleware.healthcheck'"
op|','
nl|'\n'
string|"'swift.common.middleware.proxy_logging'"
op|','
nl|'\n'
string|"'swift.common.middleware.bulk'"
op|','
nl|'\n'
string|"'swift.common.middleware.container_quotas'"
op|','
nl|'\n'
string|"'swift.common.middleware.tempurl'"
op|','
nl|'\n'
string|"'swift.proxy.server'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_proxy_modify_wsgi_pipeline
dedent|''
name|'def'
name|'_proxy_modify_wsgi_pipeline'
op|'('
name|'self'
op|','
name|'pipe'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'config'
op|'='
string|'"""\n        [DEFAULT]\n        swift_dir = TEMPDIR\n\n        [pipeline:main]\n        pipeline = %s\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n        conn_timeout = 0.2\n\n        [filter:healthcheck]\n        use = egg:swift#healthcheck\n\n        [filter:catch_errors]\n        use = egg:swift#catch_errors\n\n        [filter:gatekeeper]\n        use = egg:swift#gatekeeper\n        """'
newline|'\n'
name|'config'
op|'='
name|'config'
op|'%'
op|'('
name|'pipe'
op|','
op|')'
newline|'\n'
name|'contents'
op|'='
name|'dedent'
op|'('
name|'config'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
string|"'proxy-server.conf'"
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'conf_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_file'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
name|'contents'
op|'.'
name|'replace'
op|'('
string|"'TEMPDIR'"
op|','
name|'t'
op|')'
op|')'
newline|'\n'
dedent|''
name|'_fake_rings'
op|'('
name|'t'
op|')'
newline|'\n'
name|'app'
op|'='
name|'wsgi'
op|'.'
name|'loadapp'
op|'('
name|'conf_file'
op|','
name|'global_conf'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'app'
newline|'\n'
nl|'\n'
DECL|member|test_gatekeeper_insertion_catch_errors_configured_at_start
dedent|''
name|'def'
name|'test_gatekeeper_insertion_catch_errors_configured_at_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# catch_errors is configured at start, gatekeeper is not configured,'
nl|'\n'
comment|'# so gatekeeper should be inserted just after catch_errors'
nl|'\n'
indent|'        '
name|'pipe'
op|'='
string|"'catch_errors healthcheck proxy-server'"
newline|'\n'
name|'app'
op|'='
name|'self'
op|'.'
name|'_proxy_modify_wsgi_pipeline'
op|'('
name|'pipe'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'pipeline_modules'
op|'('
name|'app'
op|')'
op|','
op|'['
nl|'\n'
string|"'swift.common.middleware.catch_errors'"
op|','
nl|'\n'
string|"'swift.common.middleware.gatekeeper'"
op|','
nl|'\n'
string|"'swift.common.middleware.dlo'"
op|','
nl|'\n'
string|"'swift.common.middleware.healthcheck'"
op|','
nl|'\n'
string|"'swift.proxy.server'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_gatekeeper_insertion_catch_errors_configured_not_at_start
dedent|''
name|'def'
name|'test_gatekeeper_insertion_catch_errors_configured_not_at_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# catch_errors is configured, gatekeeper is not configured, so'
nl|'\n'
comment|'# gatekeeper should be inserted at start of pipeline'
nl|'\n'
indent|'        '
name|'pipe'
op|'='
string|"'healthcheck catch_errors proxy-server'"
newline|'\n'
name|'app'
op|'='
name|'self'
op|'.'
name|'_proxy_modify_wsgi_pipeline'
op|'('
name|'pipe'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'pipeline_modules'
op|'('
name|'app'
op|')'
op|','
op|'['
nl|'\n'
string|"'swift.common.middleware.gatekeeper'"
op|','
nl|'\n'
string|"'swift.common.middleware.healthcheck'"
op|','
nl|'\n'
string|"'swift.common.middleware.catch_errors'"
op|','
nl|'\n'
string|"'swift.common.middleware.dlo'"
op|','
nl|'\n'
string|"'swift.proxy.server'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_catch_errors_gatekeeper_configured_not_at_start
dedent|''
name|'def'
name|'test_catch_errors_gatekeeper_configured_not_at_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# catch_errors is configured, gatekeeper is configured, so'
nl|'\n'
comment|'# no change should be made to pipeline'
nl|'\n'
indent|'        '
name|'pipe'
op|'='
string|"'healthcheck catch_errors gatekeeper proxy-server'"
newline|'\n'
name|'app'
op|'='
name|'self'
op|'.'
name|'_proxy_modify_wsgi_pipeline'
op|'('
name|'pipe'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'pipeline_modules'
op|'('
name|'app'
op|')'
op|','
op|'['
nl|'\n'
string|"'swift.common.middleware.healthcheck'"
op|','
nl|'\n'
string|"'swift.common.middleware.catch_errors'"
op|','
nl|'\n'
string|"'swift.common.middleware.gatekeeper'"
op|','
nl|'\n'
string|"'swift.common.middleware.dlo'"
op|','
nl|'\n'
string|"'swift.proxy.server'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'with_tempdir'
newline|'\n'
DECL|member|test_loadapp_proxy
name|'def'
name|'test_loadapp_proxy'
op|'('
name|'self'
op|','
name|'tempdir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'conf_body'
op|'='
string|'"""\n        [DEFAULT]\n        swift_dir = %s\n\n        [pipeline:main]\n        pipeline = catch_errors cache proxy-server\n\n        [app:proxy-server]\n        use = egg:swift#proxy\n\n        [filter:cache]\n        use = egg:swift#memcache\n\n        [filter:catch_errors]\n        use = egg:swift#catch_errors\n        """'
op|'%'
name|'tempdir'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_path'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
name|'dedent'
op|'('
name|'conf_body'
op|')'
op|')'
newline|'\n'
dedent|''
name|'_fake_rings'
op|'('
name|'tempdir'
op|')'
newline|'\n'
name|'account_ring_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
string|"'account.ring.gz'"
op|')'
newline|'\n'
name|'container_ring_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
string|"'container.ring.gz'"
op|')'
newline|'\n'
name|'object_ring_paths'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'object_ring_paths'
op|'['
name|'int'
op|'('
name|'policy'
op|')'
op|']'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
nl|'\n'
name|'tempdir'
op|','
name|'policy'
op|'.'
name|'ring_name'
op|'+'
string|"'.ring.gz'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'app'
op|'='
name|'wsgi'
op|'.'
name|'loadapp'
op|'('
name|'conf_path'
op|')'
newline|'\n'
name|'proxy_app'
op|'='
name|'app'
op|'.'
name|'app'
op|'.'
name|'app'
op|'.'
name|'app'
op|'.'
name|'app'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'proxy_app'
op|'.'
name|'account_ring'
op|'.'
name|'serialized_path'
op|','
nl|'\n'
name|'account_ring_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'proxy_app'
op|'.'
name|'container_ring'
op|'.'
name|'serialized_path'
op|','
nl|'\n'
name|'container_ring_path'
op|')'
newline|'\n'
name|'for'
name|'policy_index'
op|','
name|'expected_path'
name|'in'
name|'object_ring_paths'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'object_ring'
op|'='
name|'proxy_app'
op|'.'
name|'get_object_ring'
op|'('
name|'policy_index'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_path'
op|','
name|'object_ring'
op|'.'
name|'serialized_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'with_tempdir'
newline|'\n'
DECL|member|test_loadapp_storage
name|'def'
name|'test_loadapp_storage'
op|'('
name|'self'
op|','
name|'tempdir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expectations'
op|'='
op|'{'
nl|'\n'
string|"'object'"
op|':'
name|'obj_server'
op|'.'
name|'ObjectController'
op|','
nl|'\n'
string|"'container'"
op|':'
name|'container_server'
op|'.'
name|'ContainerController'
op|','
nl|'\n'
string|"'account'"
op|':'
name|'account_server'
op|'.'
name|'AccountController'
op|','
nl|'\n'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'server_type'
op|','
name|'controller'
name|'in'
name|'expectations'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'conf_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
nl|'\n'
name|'tempdir'
op|','
string|"'%s-server.conf'"
op|'%'
name|'server_type'
op|')'
newline|'\n'
name|'conf_body'
op|'='
string|'"""\n            [DEFAULT]\n            swift_dir = %s\n\n            [app:main]\n            use = egg:swift#%s\n            """'
op|'%'
op|'('
name|'tempdir'
op|','
name|'server_type'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'conf_path'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
name|'dedent'
op|'('
name|'conf_body'
op|')'
op|')'
newline|'\n'
dedent|''
name|'app'
op|'='
name|'wsgi'
op|'.'
name|'loadapp'
op|'('
name|'conf_path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|','
name|'controller'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_pipeline_property
dedent|''
dedent|''
name|'def'
name|'test_pipeline_property'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'depth'
op|'='
number|'3'
newline|'\n'
nl|'\n'
DECL|class|FakeApp
name|'class'
name|'FakeApp'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|class|AppFilter
dedent|''
name|'class'
name|'AppFilter'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'app'
op|'='
name|'app'
newline|'\n'
nl|'\n'
comment|'# make a pipeline'
nl|'\n'
dedent|''
dedent|''
name|'app'
op|'='
name|'FakeApp'
op|'('
op|')'
newline|'\n'
name|'filtered_app'
op|'='
name|'app'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'depth'
op|')'
op|':'
newline|'\n'
DECL|variable|filtered_app
indent|'            '
name|'filtered_app'
op|'='
name|'AppFilter'
op|'('
name|'filtered_app'
op|')'
newline|'\n'
nl|'\n'
comment|'# AttributeError if no apps in the pipeline have attribute'
nl|'\n'
dedent|''
name|'wsgi'
op|'.'
name|'_add_pipeline_properties'
op|'('
name|'filtered_app'
op|','
string|"'foo'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'AttributeError'
op|','
name|'getattr'
op|','
name|'filtered_app'
op|','
string|"'foo'"
op|')'
newline|'\n'
nl|'\n'
comment|'# set the attribute'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'app'
op|','
name|'FakeApp'
op|')'
op|')'
newline|'\n'
name|'app'
op|'.'
name|'foo'
op|'='
string|"'bar'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'filtered_app'
op|'.'
name|'foo'
op|','
string|"'bar'"
op|')'
newline|'\n'
nl|'\n'
comment|'# attribute is cached'
nl|'\n'
name|'app'
op|'.'
name|'foo'
op|'='
string|"'baz'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'filtered_app'
op|'.'
name|'foo'
op|','
string|"'bar'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
