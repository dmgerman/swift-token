begin_unit
comment|'# Copyright (c) 2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
string|'"Tests for swift.common.swob"'
newline|'\n'
nl|'\n'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'from'
name|'urllib'
name|'import'
name|'quote'
newline|'\n'
nl|'\n'
name|'from'
name|'six'
name|'import'
name|'BytesIO'
newline|'\n'
nl|'\n'
name|'import'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'utils'
op|','
name|'exceptions'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestHeaderEnvironProxy
name|'class'
name|'TestHeaderEnvironProxy'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_proxy
indent|'    '
name|'def'
name|'test_proxy'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'environ'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'proxy'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HeaderEnvironProxy'
op|'('
name|'environ'
op|')'
newline|'\n'
name|'proxy'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'20'
newline|'\n'
name|'proxy'
op|'['
string|"'Content-Type'"
op|']'
op|'='
string|"'text/plain'"
newline|'\n'
name|'proxy'
op|'['
string|"'Something-Else'"
op|']'
op|'='
string|"'somevalue'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'proxy'
op|'.'
name|'environ'
op|','
op|'{'
string|"'CONTENT_LENGTH'"
op|':'
string|"'20'"
op|','
nl|'\n'
string|"'CONTENT_TYPE'"
op|':'
string|"'text/plain'"
op|','
nl|'\n'
string|"'HTTP_SOMETHING_ELSE'"
op|':'
string|"'somevalue'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proxy'
op|'['
string|"'content-length'"
op|']'
op|','
string|"'20'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proxy'
op|'['
string|"'content-type'"
op|']'
op|','
string|"'text/plain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proxy'
op|'['
string|"'something-else'"
op|']'
op|','
string|"'somevalue'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_del
dedent|''
name|'def'
name|'test_del'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'environ'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'proxy'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HeaderEnvironProxy'
op|'('
name|'environ'
op|')'
newline|'\n'
name|'proxy'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'20'
newline|'\n'
name|'proxy'
op|'['
string|"'Content-Type'"
op|']'
op|'='
string|"'text/plain'"
newline|'\n'
name|'proxy'
op|'['
string|"'Something-Else'"
op|']'
op|'='
string|"'somevalue'"
newline|'\n'
name|'del'
name|'proxy'
op|'['
string|"'Content-Length'"
op|']'
newline|'\n'
name|'del'
name|'proxy'
op|'['
string|"'Content-Type'"
op|']'
newline|'\n'
name|'del'
name|'proxy'
op|'['
string|"'Something-Else'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proxy'
op|'.'
name|'environ'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_contains
dedent|''
name|'def'
name|'test_contains'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'environ'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'proxy'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HeaderEnvironProxy'
op|'('
name|'environ'
op|')'
newline|'\n'
name|'proxy'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'20'
newline|'\n'
name|'proxy'
op|'['
string|"'Content-Type'"
op|']'
op|'='
string|"'text/plain'"
newline|'\n'
name|'proxy'
op|'['
string|"'Something-Else'"
op|']'
op|'='
string|"'somevalue'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'content-length'"
name|'in'
name|'proxy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'content-type'"
name|'in'
name|'proxy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'something-else'"
name|'in'
name|'proxy'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_keys
dedent|''
name|'def'
name|'test_keys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'environ'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'proxy'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HeaderEnvironProxy'
op|'('
name|'environ'
op|')'
newline|'\n'
name|'proxy'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'20'
newline|'\n'
name|'proxy'
op|'['
string|"'Content-Type'"
op|']'
op|'='
string|"'text/plain'"
newline|'\n'
name|'proxy'
op|'['
string|"'Something-Else'"
op|']'
op|'='
string|"'somevalue'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'set'
op|'('
name|'proxy'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'set'
op|'('
op|'('
string|"'Content-Length'"
op|','
string|"'Content-Type'"
op|','
string|"'Something-Else'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestHeaderKeyDict
dedent|''
dedent|''
name|'class'
name|'TestHeaderKeyDict'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_case_insensitive
indent|'    '
name|'def'
name|'test_case_insensitive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'headers'
op|'['
string|"'CONTENT-LENGTH'"
op|']'
op|'='
number|'10'
newline|'\n'
name|'headers'
op|'['
string|"'content-length'"
op|']'
op|'='
number|'20'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'20'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'['
string|"'content-length'"
op|']'
op|','
string|"'20'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'['
string|"'CONTENT-LENGTH'"
op|']'
op|','
string|"'20'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_setdefault
dedent|''
name|'def'
name|'test_setdefault'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# it gets set'
nl|'\n'
name|'headers'
op|'.'
name|'setdefault'
op|'('
string|"'x-rubber-ducky'"
op|','
string|"'the one'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'['
string|"'X-Rubber-Ducky'"
op|']'
op|','
string|"'the one'"
op|')'
newline|'\n'
nl|'\n'
comment|'# it has the right return value'
nl|'\n'
name|'ret'
op|'='
name|'headers'
op|'.'
name|'setdefault'
op|'('
string|"'x-boat'"
op|','
string|"'dinghy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ret'
op|','
string|"'dinghy'"
op|')'
newline|'\n'
nl|'\n'
name|'ret'
op|'='
name|'headers'
op|'.'
name|'setdefault'
op|'('
string|"'x-boat'"
op|','
string|"'yacht'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ret'
op|','
string|"'dinghy'"
op|')'
newline|'\n'
nl|'\n'
comment|"# shouldn't crash"
nl|'\n'
name|'headers'
op|'.'
name|'setdefault'
op|'('
string|"'x-sir-not-appearing-in-this-request'"
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_del_contains
dedent|''
name|'def'
name|'test_del_contains'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Content-Length'"
name|'in'
name|'headers'
op|')'
newline|'\n'
name|'del'
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Content-Length'"
name|'not'
name|'in'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update
dedent|''
name|'def'
name|'test_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'.'
name|'update'
op|'('
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|'}'
op|')'
newline|'\n'
name|'headers'
op|'.'
name|'update'
op|'('
op|'['
op|'('
string|"'Content-Type'"
op|','
string|"'text/plain'"
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
string|"'text/plain'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get
dedent|''
name|'def'
name|'test_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'content-length'"
op|']'
op|'='
number|'20'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|"'CONTENT-LENGTH'"
op|')'
op|','
string|"'20'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|"'something-else'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|"'something-else'"
op|','
name|'True'
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_keys
dedent|''
name|'def'
name|'test_keys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'content-length'"
op|']'
op|'='
number|'20'
newline|'\n'
name|'headers'
op|'['
string|"'cOnTent-tYpe'"
op|']'
op|'='
string|"'text/plain'"
newline|'\n'
name|'headers'
op|'['
string|"'SomeThing-eLse'"
op|']'
op|'='
string|"'somevalue'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'set'
op|'('
name|'headers'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'set'
op|'('
op|'('
string|"'Content-Length'"
op|','
string|"'Content-Type'"
op|','
string|"'Something-Else'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestRange
dedent|''
dedent|''
name|'class'
name|'TestRange'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_range
indent|'    '
name|'def'
name|'test_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=1-7'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges'
op|'['
number|'0'
op|']'
op|','
op|'('
number|'1'
op|','
number|'7'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_upsidedown_range
dedent|''
name|'def'
name|'test_upsidedown_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=5-10'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'2'
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_str
dedent|''
name|'def'
name|'test_str'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'range_str'
name|'in'
op|'('
string|"'bytes=1-7'"
op|','
string|"'bytes=1-'"
op|','
string|"'bytes=-1'"
op|','
nl|'\n'
string|"'bytes=1-7,9-12'"
op|','
string|"'bytes=-7,9-'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
name|'range_str'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'str'
op|'('
name|'range'
op|')'
op|','
name|'range_str'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ranges_for_length
dedent|''
dedent|''
name|'def'
name|'test_ranges_for_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=1-7'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'10'
op|')'
op|','
op|'['
op|'('
number|'1'
op|','
number|'8'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'5'
op|')'
op|','
op|'['
op|'('
number|'1'
op|','
number|'5'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
name|'None'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ranges_for_large_length
dedent|''
name|'def'
name|'test_ranges_for_large_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=-1000000000000000000000000000'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'100'
op|')'
op|','
op|'['
op|'('
number|'0'
op|','
number|'100'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ranges_for_length_no_end
dedent|''
name|'def'
name|'test_ranges_for_length_no_end'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=1-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'10'
op|')'
op|','
op|'['
op|'('
number|'1'
op|','
number|'10'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'5'
op|')'
op|','
op|'['
op|'('
number|'1'
op|','
number|'5'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
name|'None'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# This used to freak out:'
nl|'\n'
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=100-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'5'
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
name|'None'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=4-6,100-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'5'
op|')'
op|','
op|'['
op|'('
number|'4'
op|','
number|'5'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ranges_for_length_no_start
dedent|''
name|'def'
name|'test_ranges_for_length_no_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=-7'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'10'
op|')'
op|','
op|'['
op|'('
number|'3'
op|','
number|'10'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'5'
op|')'
op|','
op|'['
op|'('
number|'0'
op|','
number|'5'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
name|'None'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=4-6,-100'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'5'
op|')'
op|','
op|'['
op|'('
number|'4'
op|','
number|'5'
op|')'
op|','
op|'('
number|'0'
op|','
number|'5'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ranges_for_length_multi
dedent|''
name|'def'
name|'test_ranges_for_length_multi'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=-20,4-'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'200'
op|')'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
comment|'# the actual length greater than each range element'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'200'
op|')'
op|','
op|'['
op|'('
number|'180'
op|','
number|'200'
op|')'
op|','
op|'('
number|'4'
op|','
number|'200'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=30-150,-10'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'200'
op|')'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
comment|'# the actual length lands in the middle of a range'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'90'
op|')'
op|','
op|'['
op|'('
number|'30'
op|','
number|'90'
op|')'
op|','
op|'('
number|'80'
op|','
number|'90'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# the actual length greater than any of the range'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'200'
op|')'
op|','
nl|'\n'
op|'['
op|'('
number|'30'
op|','
number|'151'
op|')'
op|','
op|'('
number|'190'
op|','
number|'200'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
name|'None'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ranges_for_length_edges
dedent|''
name|'def'
name|'test_ranges_for_length_edges'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=0-1, -7'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'10'
op|')'
op|','
nl|'\n'
op|'['
op|'('
number|'0'
op|','
number|'2'
op|')'
op|','
op|'('
number|'3'
op|','
number|'10'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=-7, 0-1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'10'
op|')'
op|','
nl|'\n'
op|'['
op|'('
number|'3'
op|','
number|'10'
op|')'
op|','
op|'('
number|'0'
op|','
number|'2'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=-7, 0-1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'5'
op|')'
op|','
nl|'\n'
op|'['
op|'('
number|'0'
op|','
number|'5'
op|')'
op|','
op|'('
number|'0'
op|','
number|'2'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ranges_for_length_overlapping
dedent|''
name|'def'
name|'test_ranges_for_length_overlapping'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Fewer than 3 overlaps is okay'
nl|'\n'
indent|'        '
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=10-19,15-24'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'100'
op|')'
op|','
nl|'\n'
op|'['
op|'('
number|'10'
op|','
number|'20'
op|')'
op|','
op|'('
number|'15'
op|','
number|'25'
op|')'
op|']'
op|')'
newline|'\n'
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=10-19,15-24,20-29'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'100'
op|')'
op|','
nl|'\n'
op|'['
op|'('
number|'10'
op|','
number|'20'
op|')'
op|','
op|'('
number|'15'
op|','
number|'25'
op|')'
op|','
op|'('
number|'20'
op|','
number|'30'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|"# Adjacent ranges, though suboptimal, don't overlap"
nl|'\n'
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=10-19,20-29,30-39'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'100'
op|')'
op|','
nl|'\n'
op|'['
op|'('
number|'10'
op|','
number|'20'
op|')'
op|','
op|'('
number|'20'
op|','
number|'30'
op|')'
op|','
op|'('
number|'30'
op|','
number|'40'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Ranges that share a byte do overlap'
nl|'\n'
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=10-20,20-30,30-40,40-50'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'100'
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# With suffix byte range specs (e.g. bytes=-2), make sure that we'
nl|'\n'
comment|'# correctly determine overlapping-ness based on the entity length'
nl|'\n'
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
string|"'bytes=10-15,15-20,30-39,-9'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'100'
op|')'
op|','
nl|'\n'
op|'['
op|'('
number|'10'
op|','
number|'16'
op|')'
op|','
op|'('
number|'15'
op|','
number|'21'
op|')'
op|','
op|'('
number|'30'
op|','
number|'40'
op|')'
op|','
op|'('
number|'91'
op|','
number|'100'
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'20'
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ranges_for_length_nonascending
dedent|''
name|'def'
name|'test_ranges_for_length_nonascending'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'few_ranges'
op|'='
op|'('
string|'"bytes=100-109,200-209,300-309,500-509,"'
nl|'\n'
string|'"400-409,600-609,700-709"'
op|')'
newline|'\n'
name|'many_ranges'
op|'='
name|'few_ranges'
op|'+'
string|'",800-809"'
newline|'\n'
nl|'\n'
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
name|'few_ranges'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'100000'
op|')'
op|','
nl|'\n'
op|'['
op|'('
number|'100'
op|','
number|'110'
op|')'
op|','
op|'('
number|'200'
op|','
number|'210'
op|')'
op|','
op|'('
number|'300'
op|','
number|'310'
op|')'
op|','
op|'('
number|'500'
op|','
number|'510'
op|')'
op|','
nl|'\n'
op|'('
number|'400'
op|','
number|'410'
op|')'
op|','
op|'('
number|'600'
op|','
number|'610'
op|')'
op|','
op|'('
number|'700'
op|','
number|'710'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'range'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
name|'many_ranges'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'range'
op|'.'
name|'ranges_for_length'
op|'('
number|'100000'
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ranges_for_length_too_many
dedent|''
name|'def'
name|'test_ranges_for_length_too_many'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'at_the_limit_ranges'
op|'='
op|'('
nl|'\n'
string|'"bytes="'
op|'+'
string|'","'
op|'.'
name|'join'
op|'('
string|'"%d-%d"'
op|'%'
op|'('
name|'x'
op|'*'
number|'1000'
op|','
name|'x'
op|'*'
number|'1000'
op|'+'
number|'10'
op|')'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
number|'50'
op|')'
op|')'
op|')'
newline|'\n'
name|'too_many_ranges'
op|'='
name|'at_the_limit_ranges'
op|'+'
string|'",10000000-10000009"'
newline|'\n'
nl|'\n'
name|'rng'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
name|'at_the_limit_ranges'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'rng'
op|'.'
name|'ranges_for_length'
op|'('
number|'1000000000'
op|')'
op|')'
op|','
number|'50'
op|')'
newline|'\n'
nl|'\n'
name|'rng'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
name|'too_many_ranges'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'rng'
op|'.'
name|'ranges_for_length'
op|'('
number|'1000000000'
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_range_invalid_syntax
dedent|''
name|'def'
name|'test_range_invalid_syntax'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|_check_invalid_range
indent|'        '
name|'def'
name|'_check_invalid_range'
op|'('
name|'range_value'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Range'
op|'('
name|'range_value'
op|')'
newline|'\n'
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
string|'"""\n        All the following cases should result ValueError exception\n        1. value not starts with bytes=\n        2. range value start is greater than the end, eg. bytes=5-3\n        3. range does not have start or end, eg. bytes=-\n        4. range does not have hyphen, eg. bytes=45\n        5. range value is non numeric\n        6. any combination of the above\n        """'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'_check_invalid_range'
op|'('
string|"'nonbytes=foobar,10-2'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'_check_invalid_range'
op|'('
string|"'bytes=5-3'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'_check_invalid_range'
op|'('
string|"'bytes=-'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'_check_invalid_range'
op|'('
string|"'bytes=45'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'_check_invalid_range'
op|'('
string|"'bytes=foo-bar,3-5'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'_check_invalid_range'
op|'('
string|"'bytes=4-10,45'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'_check_invalid_range'
op|'('
string|"'bytes=foobar,3-5'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'_check_invalid_range'
op|'('
string|"'bytes=nonumber-5'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'_check_invalid_range'
op|'('
string|"'bytes=nonumber'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestMatch
dedent|''
dedent|''
name|'class'
name|'TestMatch'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_match
indent|'    '
name|'def'
name|'test_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'match'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Match'
op|'('
string|'\'"a", "b"\''
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'match'
op|'.'
name|'tags'
op|','
name|'set'
op|'('
op|'('
string|"'a'"
op|','
string|"'b'"
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'a'"
name|'in'
name|'match'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'b'"
name|'in'
name|'match'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'c'"
name|'not'
name|'in'
name|'match'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_match_star
dedent|''
name|'def'
name|'test_match_star'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'match'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Match'
op|'('
string|'\'"a", "*"\''
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'a'"
name|'in'
name|'match'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'b'"
name|'in'
name|'match'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'c'"
name|'in'
name|'match'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_match_noquote
dedent|''
name|'def'
name|'test_match_noquote'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'match'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Match'
op|'('
string|"'a, b'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'match'
op|'.'
name|'tags'
op|','
name|'set'
op|'('
op|'('
string|"'a'"
op|','
string|"'b'"
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'a'"
name|'in'
name|'match'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'b'"
name|'in'
name|'match'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'c'"
name|'not'
name|'in'
name|'match'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestAccept
dedent|''
dedent|''
name|'class'
name|'TestAccept'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_accept_json
indent|'    '
name|'def'
name|'test_accept_json'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'accept'
name|'in'
op|'('
string|"'application/json'"
op|','
string|"'application/json;q=1.0,*/*;q=0.9'"
op|','
nl|'\n'
string|"'*/*;q=0.9,application/json;q=1.0'"
op|','
string|"'application/*'"
op|','
nl|'\n'
string|"'text/*,application/json'"
op|','
string|"'application/*,text/*'"
op|','
nl|'\n'
string|"'application/json,text/xml'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'acc'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Accept'
op|'('
name|'accept'
op|')'
newline|'\n'
name|'match'
op|'='
name|'acc'
op|'.'
name|'best_match'
op|'('
op|'['
string|"'text/plain'"
op|','
string|"'application/json'"
op|','
nl|'\n'
string|"'application/xml'"
op|','
string|"'text/xml'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'match'
op|','
string|"'application/json'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_accept_plain
dedent|''
dedent|''
name|'def'
name|'test_accept_plain'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'accept'
name|'in'
op|'('
string|"''"
op|','
string|"'text/plain'"
op|','
string|"'application/xml;q=0.8,*/*;q=0.9'"
op|','
nl|'\n'
string|"'*/*;q=0.9,application/xml;q=0.8'"
op|','
string|"'*/*'"
op|','
nl|'\n'
string|"'text/plain,application/xml'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'acc'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Accept'
op|'('
name|'accept'
op|')'
newline|'\n'
name|'match'
op|'='
name|'acc'
op|'.'
name|'best_match'
op|'('
op|'['
string|"'text/plain'"
op|','
string|"'application/json'"
op|','
nl|'\n'
string|"'application/xml'"
op|','
string|"'text/xml'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'match'
op|','
string|"'text/plain'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_accept_xml
dedent|''
dedent|''
name|'def'
name|'test_accept_xml'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'accept'
name|'in'
op|'('
string|"'application/xml'"
op|','
string|"'application/xml;q=1.0,*/*;q=0.9'"
op|','
nl|'\n'
string|"'*/*;q=0.9,application/xml;q=1.0'"
op|','
nl|'\n'
string|"'application/xml;charset=UTF-8'"
op|','
nl|'\n'
string|'\'application/xml;charset=UTF-8;qws="quoted with space"\''
op|','
nl|'\n'
string|'\'application/xml; q=0.99 ; qws="quoted with space"\''
op|')'
op|':'
newline|'\n'
indent|'            '
name|'acc'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Accept'
op|'('
name|'accept'
op|')'
newline|'\n'
name|'match'
op|'='
name|'acc'
op|'.'
name|'best_match'
op|'('
op|'['
string|"'text/plain'"
op|','
string|"'application/xml'"
op|','
nl|'\n'
string|"'text/xml'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'match'
op|','
string|"'application/xml'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_accept_invalid
dedent|''
dedent|''
name|'def'
name|'test_accept_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'accept'
name|'in'
op|'('
string|"'*'"
op|','
string|"'text/plain,,'"
op|','
string|"'some stuff'"
op|','
nl|'\n'
string|"'application/xml;q=1.0;q=1.1'"
op|','
string|"'text/plain,*'"
op|','
nl|'\n'
string|"'text /plain'"
op|','
string|"'text\\x7f/plain'"
op|','
nl|'\n'
string|"'text/plain;a=b=c'"
op|','
nl|'\n'
string|"'text/plain;q=1;q=2'"
op|','
nl|'\n'
string|'\'text/plain; ubq="unbalanced " quotes"\''
op|')'
op|':'
newline|'\n'
indent|'            '
name|'acc'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Accept'
op|'('
name|'accept'
op|')'
newline|'\n'
name|'match'
op|'='
name|'acc'
op|'.'
name|'best_match'
op|'('
op|'['
string|"'text/plain'"
op|','
string|"'application/xml'"
op|','
nl|'\n'
string|"'text/xml'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'match'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_repr
dedent|''
dedent|''
name|'def'
name|'test_repr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'acc'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Accept'
op|'('
string|'"application/json"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'repr'
op|'('
name|'acc'
op|')'
op|','
string|'"application/json"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestRequest
dedent|''
dedent|''
name|'class'
name|'TestRequest'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_blank
indent|'    '
name|'def'
name|'test_blank'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|','
name|'body'
op|'='
string|"'hi'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
string|"'text/plain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'method'
op|','
string|"'POST'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_blank_req_environ_property_args
dedent|''
name|'def'
name|'test_blank_req_environ_property_args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'blank'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
newline|'\n'
name|'req'
op|'='
name|'blank'
op|'('
string|"'/'"
op|','
name|'method'
op|'='
string|"'PATCH'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'method'
op|','
string|"'PATCH'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'REQUEST_METHOD'"
op|']'
op|','
string|"'PATCH'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'blank'
op|'('
string|"'/'"
op|','
name|'referer'
op|'='
string|"'http://example.com'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'referer'
op|','
string|"'http://example.com'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'referrer'
op|','
string|"'http://example.com'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'HTTP_REFERER'"
op|']'
op|','
string|"'http://example.com'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Referer'"
op|']'
op|','
string|"'http://example.com'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'blank'
op|'('
string|"'/'"
op|','
name|'script_name'
op|'='
string|"'/application'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'script_name'
op|','
string|"'/application'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'SCRIPT_NAME'"
op|']'
op|','
string|"'/application'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'blank'
op|'('
string|"'/'"
op|','
name|'host'
op|'='
string|"'www.example.com'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'host'
op|','
string|"'www.example.com'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'HTTP_HOST'"
op|']'
op|','
string|"'www.example.com'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Host'"
op|']'
op|','
string|"'www.example.com'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'blank'
op|'('
string|"'/'"
op|','
name|'remote_addr'
op|'='
string|"'127.0.0.1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'remote_addr'
op|','
string|"'127.0.0.1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'REMOTE_ADDR'"
op|']'
op|','
string|"'127.0.0.1'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'blank'
op|'('
string|"'/'"
op|','
name|'remote_user'
op|'='
string|"'username'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'remote_user'
op|','
string|"'username'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'REMOTE_USER'"
op|']'
op|','
string|"'username'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'blank'
op|'('
string|"'/'"
op|','
name|'user_agent'
op|'='
string|"'curl/7.22.0 (x86_64-pc-linux-gnu)'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'user_agent'
op|','
string|"'curl/7.22.0 (x86_64-pc-linux-gnu)'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'HTTP_USER_AGENT'"
op|']'
op|','
nl|'\n'
string|"'curl/7.22.0 (x86_64-pc-linux-gnu)'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'User-Agent'"
op|']'
op|','
nl|'\n'
string|"'curl/7.22.0 (x86_64-pc-linux-gnu)'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'blank'
op|'('
string|"'/'"
op|','
name|'query_string'
op|'='
string|"'a=b&c=d'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'query_string'
op|','
string|"'a=b&c=d'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'QUERY_STRING'"
op|']'
op|','
string|"'a=b&c=d'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'blank'
op|'('
string|"'/'"
op|','
name|'if_match'
op|'='
string|"'*'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'HTTP_IF_MATCH'"
op|']'
op|','
string|"'*'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'If-Match'"
op|']'
op|','
string|"'*'"
op|')'
newline|'\n'
nl|'\n'
comment|'# multiple environ property kwargs'
nl|'\n'
name|'req'
op|'='
name|'blank'
op|'('
string|"'/'"
op|','
name|'method'
op|'='
string|"'PATCH'"
op|','
name|'referer'
op|'='
string|"'http://example.com'"
op|','
nl|'\n'
name|'script_name'
op|'='
string|"'/application'"
op|','
name|'host'
op|'='
string|"'www.example.com'"
op|','
nl|'\n'
name|'remote_addr'
op|'='
string|"'127.0.0.1'"
op|','
name|'remote_user'
op|'='
string|"'username'"
op|','
nl|'\n'
name|'user_agent'
op|'='
string|"'curl/7.22.0 (x86_64-pc-linux-gnu)'"
op|','
nl|'\n'
name|'query_string'
op|'='
string|"'a=b&c=d'"
op|','
name|'if_match'
op|'='
string|"'*'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'method'
op|','
string|"'PATCH'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'referer'
op|','
string|"'http://example.com'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'script_name'
op|','
string|"'/application'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'host'
op|','
string|"'www.example.com'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'remote_addr'
op|','
string|"'127.0.0.1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'remote_user'
op|','
string|"'username'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'user_agent'
op|','
string|"'curl/7.22.0 (x86_64-pc-linux-gnu)'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'query_string'
op|','
string|"'a=b&c=d'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'QUERY_STRING'"
op|']'
op|','
string|"'a=b&c=d'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_invalid_req_environ_property_args
dedent|''
name|'def'
name|'test_invalid_req_environ_property_args'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# getter only property'
nl|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'params'
op|'='
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'"got unexpected keyword argument \'params\'"'
op|','
nl|'\n'
name|'str'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'False'
op|','
string|'"invalid req_environ_property "'
nl|'\n'
string|'"didn\'t raise error!"'
op|')'
newline|'\n'
comment|'# regular attribute'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'_params_cache'
op|'='
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'"got unexpected keyword "'
nl|'\n'
string|'"argument \'_params_cache\'"'
op|','
name|'str'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'False'
op|','
string|'"invalid req_environ_property "'
nl|'\n'
string|'"didn\'t raise error!"'
op|')'
newline|'\n'
comment|'# non-existent attribute'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|','
name|'params_cache'
op|'='
op|'{'
string|"'a'"
op|':'
string|"'b'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'"got unexpected keyword "'
nl|'\n'
string|'"argument \'params_cache\'"'
op|','
name|'str'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'False'
op|','
string|'"invalid req_environ_property "'
nl|'\n'
string|'"didn\'t raise error!"'
op|')'
newline|'\n'
comment|'# method'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'as_referer'
op|'='
string|"'GET http://example.com'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'TypeError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'"got unexpected keyword "'
nl|'\n'
string|'"argument \'as_referer\'"'
op|','
name|'str'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'False'
op|','
string|'"invalid req_environ_property "'
nl|'\n'
string|'"didn\'t raise error!"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_blank_path_info_precedence
dedent|''
dedent|''
name|'def'
name|'test_blank_path_info_precedence'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'blank'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
newline|'\n'
name|'req'
op|'='
name|'blank'
op|'('
string|"'/a'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
string|"'/a'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'blank'
op|'('
string|"'/a'"
op|','
name|'environ'
op|'='
op|'{'
string|"'PATH_INFO'"
op|':'
string|"'/a/c'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
string|"'/a/c'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'blank'
op|'('
string|"'/a'"
op|','
name|'environ'
op|'='
op|'{'
string|"'PATH_INFO'"
op|':'
string|"'/a/c'"
op|'}'
op|','
name|'path_info'
op|'='
string|"'/a/c/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
string|"'/a/c/o'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'blank'
op|'('
string|"'/a'"
op|','
name|'path_info'
op|'='
string|"'/a/c/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
string|"'/a/c/o'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_blank_body_precedence
dedent|''
name|'def'
name|'test_blank_body_precedence'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'BytesIO'
op|'('
string|"b''"
op|')'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|','
name|'body'
op|'='
string|"'hi'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
string|"'text/plain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'method'
op|','
string|"'POST'"
op|')'
newline|'\n'
name|'body_file'
op|'='
name|'BytesIO'
op|'('
string|"b'asdf'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'BytesIO'
op|'('
string|"b''"
op|')'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|','
name|'body'
op|'='
string|"'hi'"
op|','
nl|'\n'
name|'body_file'
op|'='
name|'body_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'req'
op|'.'
name|'body_file'
name|'is'
name|'body_file'
op|')'
newline|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|','
nl|'\n'
string|"'wsgi.input'"
op|':'
name|'BytesIO'
op|'('
string|"b''"
op|')'
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'text/plain'"
op|'}'
op|','
name|'body'
op|'='
string|"'hi'"
op|','
nl|'\n'
name|'content_length'
op|'='
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'content_length'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'req'
op|'.'
name|'body'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_blank_parsing
dedent|''
name|'def'
name|'test_blank_parsing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'http://test.com/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgi.url_scheme'"
op|']'
op|','
string|"'http'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'SERVER_PORT'"
op|']'
op|','
string|"'80'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'SERVER_NAME'"
op|']'
op|','
string|"'test.com'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'https://test.com:456/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgi.url_scheme'"
op|']'
op|','
string|"'https'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'SERVER_PORT'"
op|']'
op|','
string|"'456'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'test.com/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgi.url_scheme'"
op|']'
op|','
string|"'http'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'SERVER_PORT'"
op|']'
op|','
string|"'80'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'PATH_INFO'"
op|']'
op|','
string|"'test.com/'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'TypeError'
op|','
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|','
nl|'\n'
string|"'ftp://test.com/'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_params
dedent|''
name|'def'
name|'test_params'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/?a=b&c=d'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'params'
op|'['
string|"'a'"
op|']'
op|','
string|"'b'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'params'
op|'['
string|"'c'"
op|']'
op|','
string|"'d'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_timestamp_missing
dedent|''
name|'def'
name|'test_timestamp_missing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exceptions'
op|'.'
name|'InvalidTimestamp'
op|','
nl|'\n'
name|'getattr'
op|','
name|'req'
op|','
string|"'timestamp'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_timestamp_invalid
dedent|''
name|'def'
name|'test_timestamp_invalid'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
string|"'asdf'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'exceptions'
op|'.'
name|'InvalidTimestamp'
op|','
nl|'\n'
name|'getattr'
op|','
name|'req'
op|','
string|"'timestamp'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_timestamp
dedent|''
name|'def'
name|'test_timestamp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
string|"'1402447134.13507_00000001'"
op|'}'
op|')'
newline|'\n'
name|'expected'
op|'='
name|'utils'
op|'.'
name|'Timestamp'
op|'('
string|"'1402447134.13507'"
op|','
name|'offset'
op|'='
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'timestamp'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'timestamp'
op|'.'
name|'normal'
op|','
name|'expected'
op|'.'
name|'normal'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'timestamp'
op|'.'
name|'internal'
op|','
name|'expected'
op|'.'
name|'internal'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_path
dedent|''
name|'def'
name|'test_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/hi?a=b&c=d'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path'
op|','
string|"'/hi'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'SCRIPT_NAME'"
op|':'
string|"'/hi'"
op|','
string|"'PATH_INFO'"
op|':'
string|"'/there'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path'
op|','
string|"'/hi/there'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_path_question_mark
dedent|''
name|'def'
name|'test_path_question_mark'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/test%3Ffile'"
op|')'
newline|'\n'
comment|'# This tests that .blank unquotes the path when setting PATH_INFO'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'PATH_INFO'"
op|']'
op|','
string|"'/test?file'"
op|')'
newline|'\n'
comment|'# This tests that .path requotes it'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path'
op|','
string|"'/test%3Ffile'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_path_info_pop
dedent|''
name|'def'
name|'test_path_info_pop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/hi/there'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
op|','
string|"'hi'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
string|"'/there'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'script_name'
op|','
string|"'/hi'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_path_info_pop
dedent|''
name|'def'
name|'test_bad_path_info_pop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'blahblah'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_path_info_pop_last
dedent|''
name|'def'
name|'test_path_info_pop_last'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/last'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
op|','
string|"'last'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'script_name'
op|','
string|"'/last'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_path_info_pop_none
dedent|''
name|'def'
name|'test_path_info_pop_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path_info_pop'
op|'('
op|')'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'script_name'
op|','
string|"'/'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_get
dedent|''
name|'def'
name|'test_copy_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/hi/there'"
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'method'
op|','
string|"'POST'"
op|')'
newline|'\n'
name|'req2'
op|'='
name|'req'
op|'.'
name|'copy_get'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req2'
op|'.'
name|'method'
op|','
string|"'GET'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_response
dedent|''
name|'def'
name|'test_get_response'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|test_app
indent|'        '
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'hi'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_401_unauthorized
dedent|''
name|'def'
name|'test_401_unauthorized'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# No request environment'
nl|'\n'
indent|'        '
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HTTPUnauthorized'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'401'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Www-Authenticate'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
comment|'# Request environment'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HTTPUnauthorized'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'401'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Www-Authenticate'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_401_valid_account_path
dedent|''
name|'def'
name|'test_401_valid_account_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|test_app
indent|'        '
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'401 Unauthorized'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'hi'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Request environment contains valid account in path'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/account-name'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'401'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Www-Authenticate'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'\'Swift realm="account-name"\''
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Www-Authenticate'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Request environment contains valid account/container in path'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/account-name/c'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'401'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Www-Authenticate'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'\'Swift realm="account-name"\''
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Www-Authenticate'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_401_invalid_path
dedent|''
name|'def'
name|'test_401_invalid_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|test_app
indent|'        '
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'401 Unauthorized'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'hi'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Request environment contains bad path'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/random'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'401'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Www-Authenticate'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'\'Swift realm="unknown"\''
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Www-Authenticate'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_401_non_keystone_auth_path
dedent|''
name|'def'
name|'test_401_non_keystone_auth_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|test_app
indent|'        '
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'401 Unauthorized'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'no creds in request'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Request to get token'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1.0/auth'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'401'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Www-Authenticate'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'\'Swift realm="unknown"\''
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Www-Authenticate'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# Other form of path'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/auth/v1.0'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'401'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Www-Authenticate'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'\'Swift realm="unknown"\''
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Www-Authenticate'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_401_www_authenticate_exists
dedent|''
name|'def'
name|'test_401_www_authenticate_exists'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|test_app
indent|'        '
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'401 Unauthorized'"
op|','
op|'{'
nl|'\n'
string|"'Www-Authenticate'"
op|':'
string|'\'Me realm="whatever"\''
op|'}'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'no creds in request'"
op|']'
newline|'\n'
nl|'\n'
comment|'# Auth middleware sets own Www-Authenticate'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/auth/v1.0'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'401'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Www-Authenticate'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'\'Me realm="whatever"\''
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Www-Authenticate'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_401_www_authenticate_is_quoted
dedent|''
name|'def'
name|'test_401_www_authenticate_is_quoted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|test_app
indent|'        '
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'401 Unauthorized'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'hi'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'hacker'
op|'='
string|"'account-name\\n\\n<b>foo<br>'"
comment|'# url injection test'
newline|'\n'
name|'quoted_hacker'
op|'='
name|'quote'
op|'('
name|'hacker'
op|')'
newline|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/'"
op|'+'
name|'hacker'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'401'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Www-Authenticate'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'\'Swift realm="%s"\''
op|'%'
name|'quoted_hacker'
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Www-Authenticate'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/'"
op|'+'
name|'quoted_hacker'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'401'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Www-Authenticate'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|'\'Swift realm="%s"\''
op|'%'
name|'quoted_hacker'
op|','
nl|'\n'
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Www-Authenticate'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_not_401
dedent|''
name|'def'
name|'test_not_401'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# Other status codes should not have WWW-Authenticate in response'
nl|'\n'
DECL|function|test_app
indent|'        '
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'hi'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Www-Authenticate'"
name|'not'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_properties
dedent|''
name|'def'
name|'test_properties'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/hi/there'"
op|','
name|'body'
op|'='
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'content_length'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'remote_addr'
op|'='
string|"'something'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'environ'
op|'['
string|"'REMOTE_ADDR'"
op|']'
op|','
string|"'something'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'body'
op|'='
string|"'whatever'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'content_length'
op|','
number|'8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'body'
op|','
string|"'whatever'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'method'
op|','
string|"'GET'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'range'
op|'='
string|"'bytes=1-7'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'range'
op|'.'
name|'ranges'
op|'['
number|'0'
op|']'
op|','
op|'('
number|'1'
op|','
number|'7'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Range'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'range'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Range'"
name|'not'
name|'in'
name|'req'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_datetime_properties
dedent|''
name|'def'
name|'test_datetime_properties'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/hi/there'"
op|','
name|'body'
op|'='
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'if_unmodified_since'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'req'
op|'.'
name|'if_unmodified_since'
op|','
name|'datetime'
op|'.'
name|'datetime'
op|')'
op|')'
newline|'\n'
name|'if_unmodified_since'
op|'='
name|'req'
op|'.'
name|'if_unmodified_since'
newline|'\n'
name|'req'
op|'.'
name|'if_unmodified_since'
op|'='
name|'if_unmodified_since'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'if_unmodified_since'
op|','
name|'req'
op|'.'
name|'if_unmodified_since'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'if_unmodified_since'
op|'='
string|"'something'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'If-Unmodified-Since'"
op|']'
op|','
string|"'something'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'if_unmodified_since'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'If-Unmodified-Since'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'if_unmodified_since'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'If-Unmodified-Since'"
name|'not'
name|'in'
name|'req'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'too_big_date_list'
op|'='
name|'list'
op|'('
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'max'
op|'.'
name|'timetuple'
op|'('
op|')'
op|')'
newline|'\n'
name|'too_big_date_list'
op|'['
number|'0'
op|']'
op|'+='
number|'1'
comment|'# bump up the year'
newline|'\n'
name|'too_big_date'
op|'='
name|'time'
op|'.'
name|'strftime'
op|'('
nl|'\n'
string|'"%a, %d %b %Y %H:%M:%S UTC"'
op|','
name|'time'
op|'.'
name|'struct_time'
op|'('
name|'too_big_date_list'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'if_unmodified_since'
op|'='
name|'too_big_date'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'if_unmodified_since'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_bad_range
dedent|''
name|'def'
name|'test_bad_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/hi/there'"
op|','
name|'body'
op|'='
string|"'hi'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'range'
op|'='
string|"'bad range'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'range'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_accept_header
dedent|''
name|'def'
name|'test_accept_header'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'('
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'PATH_INFO'"
op|':'
string|"'/'"
op|','
nl|'\n'
string|"'HTTP_ACCEPT'"
op|':'
string|"'application/json'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'req'
op|'.'
name|'accept'
op|'.'
name|'best_match'
op|'('
op|'['
string|"'application/json'"
op|','
string|"'text/plain'"
op|']'
op|')'
op|','
nl|'\n'
string|"'application/json'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'req'
op|'.'
name|'accept'
op|'.'
name|'best_match'
op|'('
op|'['
string|"'text/plain'"
op|','
string|"'application/json'"
op|']'
op|')'
op|','
nl|'\n'
string|"'application/json'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_swift_entity_path
dedent|''
name|'def'
name|'test_swift_entity_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c/o'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'swift_entity_path'
op|','
string|"'/a/c/o'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a/c'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'swift_entity_path'
op|','
string|"'/a/c'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/a'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'swift_entity_path'
op|','
string|"'/a'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'swift_entity_path'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_path_qs
dedent|''
name|'def'
name|'test_path_qs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/hi/there?hello=equal&acl'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'path_qs'
op|','
string|"'/hi/there?hello=equal&acl'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'('
op|'{'
string|"'PATH_INFO'"
op|':'
string|"'/hi/there'"
op|','
nl|'\n'
string|"'QUERY_STRING'"
op|':'
string|"'hello=equal&acl'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'path_qs'
op|','
string|"'/hi/there?hello=equal&acl'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_url
dedent|''
name|'def'
name|'test_url'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/hi/there?hello=equal&acl'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'url'
op|','
nl|'\n'
string|"'http://localhost/hi/there?hello=equal&acl'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_wsgify
dedent|''
name|'def'
name|'test_wsgify'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'used_req'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'wsgify'
newline|'\n'
DECL|function|_wsgi_func
name|'def'
name|'_wsgi_func'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'used_req'
op|'.'
name|'append'
op|'('
name|'req'
op|')'
newline|'\n'
name|'return'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Response'
op|'('
string|"'200 OK'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/hi/there'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'_wsgi_func'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'used_req'
op|'['
number|'0'
op|']'
op|'.'
name|'path'
op|','
string|"'/hi/there'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_wsgify_raise
dedent|''
name|'def'
name|'test_wsgify_raise'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'used_req'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
op|'@'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'wsgify'
newline|'\n'
DECL|function|_wsgi_func
name|'def'
name|'_wsgi_func'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'used_req'
op|'.'
name|'append'
op|'('
name|'req'
op|')'
newline|'\n'
name|'raise'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HTTPServerError'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/hi/there'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'_wsgi_func'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'used_req'
op|'['
number|'0'
op|']'
op|'.'
name|'path'
op|','
string|"'/hi/there'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'500'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_split_path
dedent|''
name|'def'
name|'test_split_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Copied from swift.common.utils.split_path\n        """'
newline|'\n'
DECL|function|_test_split_path
name|'def'
name|'_test_split_path'
op|'('
name|'path'
op|','
name|'minsegs'
op|'='
number|'1'
op|','
name|'maxsegs'
op|'='
name|'None'
op|','
name|'rwl'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|')'
newline|'\n'
name|'return'
name|'req'
op|'.'
name|'split_path'
op|'('
name|'minsegs'
op|','
name|'maxsegs'
op|','
name|'rwl'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_test_split_path'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_test_split_path'
op|','
string|"'/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_test_split_path'
op|','
string|"'//'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'_test_split_path'
op|'('
string|"'/a'"
op|')'
op|','
op|'['
string|"'a'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_test_split_path'
op|','
string|"'//a'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'_test_split_path'
op|'('
string|"'/a/'"
op|')'
op|','
op|'['
string|"'a'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_test_split_path'
op|','
string|"'/a/c'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_test_split_path'
op|','
string|"'//c'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_test_split_path'
op|','
string|"'/a/c/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_test_split_path'
op|','
string|"'/a//'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_test_split_path'
op|','
string|"'/a'"
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_test_split_path'
op|','
string|"'/a'"
op|','
number|'2'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_test_split_path'
op|','
string|"'/a'"
op|','
number|'2'
op|','
number|'3'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'_test_split_path'
op|'('
string|"'/a/c'"
op|','
number|'2'
op|')'
op|','
op|'['
string|"'a'"
op|','
string|"'c'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'_test_split_path'
op|'('
string|"'/a/c/o'"
op|','
number|'3'
op|')'
op|','
op|'['
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_test_split_path'
op|','
string|"'/a/c/o/r'"
op|','
number|'3'
op|','
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'_test_split_path'
op|'('
string|"'/a/c/o/r'"
op|','
number|'3'
op|','
number|'3'
op|','
name|'True'
op|')'
op|','
nl|'\n'
op|'['
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o/r'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'_test_split_path'
op|'('
string|"'/a/c'"
op|','
number|'2'
op|','
number|'3'
op|','
name|'True'
op|')'
op|','
nl|'\n'
op|'['
string|"'a'"
op|','
string|"'c'"
op|','
name|'None'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'_test_split_path'
op|','
string|"'/a'"
op|','
number|'5'
op|','
number|'4'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'_test_split_path'
op|'('
string|"'/a/c/'"
op|','
number|'2'
op|')'
op|','
op|'['
string|"'a'"
op|','
string|"'c'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'_test_split_path'
op|'('
string|"'/a/c/'"
op|','
number|'2'
op|','
number|'3'
op|')'
op|','
op|'['
string|"'a'"
op|','
string|"'c'"
op|','
string|"''"
op|']'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'_test_split_path'
op|'('
string|"'o\\nn e'"
op|','
number|'2'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'str'
op|'('
name|'err'
op|')'
op|','
string|"'Invalid path: o%0An%20e'"
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'_test_split_path'
op|'('
string|"'o\\nn e'"
op|','
number|'2'
op|','
number|'3'
op|','
name|'True'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'str'
op|'('
name|'err'
op|')'
op|','
string|"'Invalid path: o%0An%20e'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unicode_path
dedent|''
dedent|''
name|'def'
name|'test_unicode_path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"u'/\\u2661'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'path'
op|','
name|'quote'
op|'('
string|"u'/\\u2661'"
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unicode_query
dedent|''
name|'def'
name|'test_unicode_query'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"u'/'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'query_string'
op|'='
string|"u'x=\\u2661'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'params'
op|'['
string|"'x'"
op|']'
op|','
string|"u'\\u2661'"
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_url2
dedent|''
name|'def'
name|'test_url2'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pi'
op|'='
string|"'/hi/there'"
newline|'\n'
name|'path'
op|'='
name|'pi'
newline|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|')'
newline|'\n'
name|'sche'
op|'='
string|"'http'"
newline|'\n'
name|'exp_url'
op|'='
string|"'%s://localhost%s'"
op|'%'
op|'('
name|'sche'
op|','
name|'pi'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'url'
op|','
name|'exp_url'
op|')'
newline|'\n'
nl|'\n'
name|'qs'
op|'='
string|"'hello=equal&acl'"
newline|'\n'
name|'path'
op|'='
string|"'%s?%s'"
op|'%'
op|'('
name|'pi'
op|','
name|'qs'
op|')'
newline|'\n'
name|'s'
op|','
name|'p'
op|'='
string|"'unit.test.example.com'"
op|','
string|"'90'"
newline|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'('
op|'{'
string|"'PATH_INFO'"
op|':'
name|'pi'
op|','
nl|'\n'
string|"'QUERY_STRING'"
op|':'
name|'qs'
op|','
nl|'\n'
string|"'SERVER_NAME'"
op|':'
name|'s'
op|','
nl|'\n'
string|"'SERVER_PORT'"
op|':'
name|'p'
op|'}'
op|')'
newline|'\n'
name|'exp_url'
op|'='
string|"'%s://%s:%s%s?%s'"
op|'%'
op|'('
name|'sche'
op|','
name|'s'
op|','
name|'p'
op|','
name|'pi'
op|','
name|'qs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'url'
op|','
name|'exp_url'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'='
string|"'unit.test.example.com'"
newline|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'('
op|'{'
string|"'PATH_INFO'"
op|':'
name|'pi'
op|','
nl|'\n'
string|"'QUERY_STRING'"
op|':'
name|'qs'
op|','
nl|'\n'
string|"'HTTP_HOST'"
op|':'
name|'host'
op|'+'
string|"':80'"
op|'}'
op|')'
newline|'\n'
name|'exp_url'
op|'='
string|"'%s://%s%s?%s'"
op|'%'
op|'('
name|'sche'
op|','
name|'host'
op|','
name|'pi'
op|','
name|'qs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'url'
op|','
name|'exp_url'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'='
string|"'unit.test.example.com'"
newline|'\n'
name|'sche'
op|'='
string|"'https'"
newline|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'('
op|'{'
string|"'PATH_INFO'"
op|':'
name|'pi'
op|','
nl|'\n'
string|"'QUERY_STRING'"
op|':'
name|'qs'
op|','
nl|'\n'
string|"'HTTP_HOST'"
op|':'
name|'host'
op|'+'
string|"':443'"
op|','
nl|'\n'
string|"'wsgi.url_scheme'"
op|':'
name|'sche'
op|'}'
op|')'
newline|'\n'
name|'exp_url'
op|'='
string|"'%s://%s%s?%s'"
op|'%'
op|'('
name|'sche'
op|','
name|'host'
op|','
name|'pi'
op|','
name|'qs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'url'
op|','
name|'exp_url'
op|')'
newline|'\n'
nl|'\n'
name|'host'
op|'='
string|"'unit.test.example.com:81'"
newline|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'('
op|'{'
string|"'PATH_INFO'"
op|':'
name|'pi'
op|','
nl|'\n'
string|"'QUERY_STRING'"
op|':'
name|'qs'
op|','
nl|'\n'
string|"'HTTP_HOST'"
op|':'
name|'host'
op|','
nl|'\n'
string|"'wsgi.url_scheme'"
op|':'
name|'sche'
op|'}'
op|')'
newline|'\n'
name|'exp_url'
op|'='
string|"'%s://%s%s?%s'"
op|'%'
op|'('
name|'sche'
op|','
name|'host'
op|','
name|'pi'
op|','
name|'qs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'url'
op|','
name|'exp_url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_as_referer
dedent|''
name|'def'
name|'test_as_referer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pi'
op|'='
string|"'/hi/there'"
newline|'\n'
name|'qs'
op|'='
string|"'hello=equal&acl'"
newline|'\n'
name|'sche'
op|'='
string|"'https'"
newline|'\n'
name|'host'
op|'='
string|"'unit.test.example.com:81'"
newline|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'('
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'POST'"
op|','
nl|'\n'
string|"'PATH_INFO'"
op|':'
name|'pi'
op|','
nl|'\n'
string|"'QUERY_STRING'"
op|':'
name|'qs'
op|','
nl|'\n'
string|"'HTTP_HOST'"
op|':'
name|'host'
op|','
nl|'\n'
string|"'wsgi.url_scheme'"
op|':'
name|'sche'
op|'}'
op|')'
newline|'\n'
name|'exp_url'
op|'='
string|"'%s://%s%s?%s'"
op|'%'
op|'('
name|'sche'
op|','
name|'host'
op|','
name|'pi'
op|','
name|'qs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'req'
op|'.'
name|'as_referer'
op|'('
op|')'
op|','
string|"'POST '"
op|'+'
name|'exp_url'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_message_length_just_content_length
dedent|''
name|'def'
name|'test_message_length_just_content_length'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"u'/'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|','
string|"'PATH_INFO'"
op|':'
string|"'/'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'message_length'
op|'('
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"u'/'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|','
string|"'PATH_INFO'"
op|':'
string|"'/'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"'x'"
op|'*'
number|'42'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'message_length'
op|'('
op|')'
op|','
number|'42'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
string|"'abc'"
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'message_length'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'str'
op|'('
name|'e'
op|')'
op|','
string|'"Invalid Content-Length header value"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Expected a ValueError raised for \'abc\'"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_message_length_transfer_encoding
dedent|''
dedent|''
name|'def'
name|'test_message_length_transfer_encoding'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"u'/'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|','
string|"'PATH_INFO'"
op|':'
string|"'/'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'transfer-encoding'"
op|':'
string|"'chunked'"
op|'}'
op|','
nl|'\n'
name|'body'
op|'='
string|"'x'"
op|'*'
number|'42'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'req'
op|'.'
name|'message_length'
op|'('
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Transfer-Encoding'"
op|']'
op|'='
string|"'gzip,chunked'"
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'message_length'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'str'
op|'('
name|'e'
op|')'
op|','
string|'"Unsupported Transfer-Coding header"'
nl|'\n'
string|'" value specified in Transfer-Encoding header"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Expected an AttributeError raised for \'gzip\'"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Transfer-Encoding'"
op|']'
op|'='
string|"'gzip'"
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'message_length'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'str'
op|'('
name|'e'
op|')'
op|','
string|'"Invalid Transfer-Encoding header value"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Expected a ValueError raised for \'gzip\'"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Transfer-Encoding'"
op|']'
op|'='
string|"'gzip,identity'"
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'message_length'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'str'
op|'('
name|'e'
op|')'
op|','
string|'"Unsupported Transfer-Coding header"'
nl|'\n'
string|'" value specified in Transfer-Encoding header"'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|'"Expected an AttributeError raised for \'gzip,identity\'"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestStatusMap
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestStatusMap'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_status_map
indent|'    '
name|'def'
name|'test_status_map'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response_args'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|start_response
name|'def'
name|'start_response'
op|'('
name|'status'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'response_args'
op|'.'
name|'append'
op|'('
name|'status'
op|')'
newline|'\n'
name|'response_args'
op|'.'
name|'append'
op|'('
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'resp_cls'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'status_map'
op|'['
number|'404'
op|']'
newline|'\n'
name|'resp'
op|'='
name|'resp_cls'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'404'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'title'
op|','
string|"'Not Found'"
op|')'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
op|'{'
op|'}'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'The resource could not be found.'"
name|'in'
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'response_args'
op|'['
number|'0'
op|']'
op|','
string|"'404 Not Found'"
op|')'
newline|'\n'
name|'headers'
op|'='
name|'dict'
op|'('
name|'response_args'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
string|"'text/html; charset=UTF-8'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'int'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestResponse
dedent|''
dedent|''
name|'class'
name|'TestResponse'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|_get_response
indent|'    '
name|'def'
name|'_get_response'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|test_app
indent|'        '
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'hi'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'return'
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_properties
dedent|''
name|'def'
name|'test_properties'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'.'
name|'location'
op|'='
string|"'something'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'location'
op|','
string|"'something'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Location'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'location'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Location'"
name|'not'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'.'
name|'content_type'
op|'='
string|"'text/plain'"
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Content-Type'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'content_type'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Content-Type'"
name|'not'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_empty_body
dedent|''
name|'def'
name|'test_empty_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'body'
op|'='
string|"''"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unicode_body
dedent|''
name|'def'
name|'test_unicode_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'body'
op|'='
string|"u'\\N{SNOWMAN}'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
string|"u'\\N{SNOWMAN}'"
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_reifies_request_if_necessary
dedent|''
name|'def'
name|'test_call_reifies_request_if_necessary'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        The actual bug was a HEAD response coming out with a body because the\n        Request object wasn\'t passed into the Response object\'s constructor.\n        The Response object\'s __call__ method should be able to reify a\n        Request object from the env it gets passed.\n        """'
newline|'\n'
DECL|function|test_app
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'hi'"
op|']'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'HEAD'"
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'app_iter'
op|'='
name|'req'
op|'.'
name|'call_application'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Response'
op|'('
name|'status'
op|'='
name|'status'
op|','
name|'headers'
op|'='
name|'dict'
op|'('
name|'headers'
op|')'
op|','
nl|'\n'
name|'app_iter'
op|'='
name|'app_iter'
op|')'
newline|'\n'
name|'output_iter'
op|'='
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'lambda'
op|'*'
name|'_'
op|':'
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'list'
op|'('
name|'output_iter'
op|')'
op|','
op|'['
string|"''"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_call_preserves_closeability
dedent|''
name|'def'
name|'test_call_preserves_closeability'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|test_app
indent|'        '
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'yield'
string|'"igloo"'
newline|'\n'
name|'yield'
string|'"shindig"'
newline|'\n'
name|'yield'
string|'"macadamia"'
newline|'\n'
name|'yield'
string|'"hullabaloo"'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'GET'"
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'app_iter'
op|'='
name|'req'
op|'.'
name|'call_application'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'iterator'
op|'='
name|'iter'
op|'('
name|'app_iter'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'igloo'"
op|','
name|'next'
op|'('
name|'iterator'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'shindig'"
op|','
name|'next'
op|'('
name|'iterator'
op|')'
op|')'
newline|'\n'
name|'app_iter'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'iterator'
op|'.'
name|'next'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_location_rewrite
dedent|''
name|'def'
name|'test_location_rewrite'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|start_response
indent|'        '
name|'def'
name|'start_response'
op|'('
name|'env'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'HTTP_HOST'"
op|':'
string|"'somehost'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'location'
op|'='
string|"'/something'"
newline|'\n'
comment|'# read response'
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'location'
op|','
string|"'http://somehost/something'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'HTTP_HOST'"
op|':'
string|"'somehost:80'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'location'
op|'='
string|"'/something'"
newline|'\n'
comment|'# read response'
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'location'
op|','
string|"'http://somehost/something'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'HTTP_HOST'"
op|':'
string|"'somehost:443'"
op|','
nl|'\n'
string|"'wsgi.url_scheme'"
op|':'
string|"'http'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'location'
op|'='
string|"'/something'"
newline|'\n'
comment|'# read response'
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'location'
op|','
string|"'http://somehost:443/something'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'HTTP_HOST'"
op|':'
string|"'somehost:443'"
op|','
nl|'\n'
string|"'wsgi.url_scheme'"
op|':'
string|"'https'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'location'
op|'='
string|"'/something'"
newline|'\n'
comment|'# read response'
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'location'
op|','
string|"'https://somehost/something'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_location_rewrite_no_host
dedent|''
name|'def'
name|'test_location_rewrite_no_host'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|start_response
indent|'        '
name|'def'
name|'start_response'
op|'('
name|'env'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'SERVER_NAME'"
op|':'
string|"'local'"
op|','
string|"'SERVER_PORT'"
op|':'
number|'80'
op|'}'
op|')'
newline|'\n'
name|'del'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'HTTP_HOST'"
op|']'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'location'
op|'='
string|"'/something'"
newline|'\n'
comment|'# read response'
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'location'
op|','
string|"'http://local/something'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'SERVER_NAME'"
op|':'
string|"'local'"
op|','
string|"'SERVER_PORT'"
op|':'
number|'81'
op|'}'
op|')'
newline|'\n'
name|'del'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'HTTP_HOST'"
op|']'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'location'
op|'='
string|"'/something'"
newline|'\n'
comment|'# read response'
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'location'
op|','
string|"'http://local:81/something'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_location_no_rewrite
dedent|''
name|'def'
name|'test_location_no_rewrite'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|start_response
indent|'        '
name|'def'
name|'start_response'
op|'('
name|'env'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'HTTP_HOST'"
op|':'
string|"'somehost'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'location'
op|'='
string|"'http://www.google.com/'"
newline|'\n'
comment|'# read response'
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'location'
op|','
string|"'http://www.google.com/'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_location_no_rewrite_when_told_not_to
dedent|''
name|'def'
name|'test_location_no_rewrite_when_told_not_to'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|start_response
indent|'        '
name|'def'
name|'start_response'
op|'('
name|'env'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'environ'
op|'='
op|'{'
string|"'SERVER_NAME'"
op|':'
string|"'local'"
op|','
string|"'SERVER_PORT'"
op|':'
number|'81'
op|','
nl|'\n'
string|"'swift.leave_relative_location'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'del'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'HTTP_HOST'"
op|']'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'location'
op|'='
string|"'/something'"
newline|'\n'
comment|'# read response'
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'location'
op|','
string|"'/something'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_app_iter
dedent|''
name|'def'
name|'test_app_iter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|start_response
indent|'        '
name|'def'
name|'start_response'
op|'('
name|'env'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'app_iter'
op|'='
op|'['
string|"'a'"
op|','
string|"'b'"
op|','
string|"'c'"
op|']'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
op|'{'
op|'}'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'abc'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multi_ranges_wo_iter_ranges
dedent|''
name|'def'
name|'test_multi_ranges_wo_iter_ranges'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|test_app
indent|'        '
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|'('
string|"'Content-Length'"
op|','
string|"'10'"
op|')'
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'1234567890'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=0-9,10-19,20-29'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'resp'
op|'.'
name|'content_length'
op|'='
number|'10'
newline|'\n'
nl|'\n'
comment|'# read response'
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'.'
name|'_response_iter'
op|'('
name|'resp'
op|'.'
name|'app_iter'
op|','
string|"''"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status'
op|','
string|"'200 OK'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'resp'
op|'.'
name|'content_length'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_single_range_wo_iter_range
dedent|''
name|'def'
name|'test_single_range_wo_iter_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|test_app
indent|'        '
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|'('
string|"'Content-Length'"
op|','
string|"'10'"
op|')'
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'1234567890'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=0-9'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'resp'
op|'.'
name|'content_length'
op|'='
number|'10'
newline|'\n'
nl|'\n'
comment|'# read response'
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'.'
name|'_response_iter'
op|'('
name|'resp'
op|'.'
name|'app_iter'
op|','
string|"''"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status'
op|','
string|"'200 OK'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'resp'
op|'.'
name|'content_length'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multi_range_body
dedent|''
name|'def'
name|'test_multi_range_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|test_app
indent|'        '
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|'('
string|"'Content-Length'"
op|','
string|"'4'"
op|')'
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'abcd'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=0-9,10-19,20-29'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'resp'
op|'.'
name|'content_length'
op|'='
number|'100'
newline|'\n'
nl|'\n'
name|'resp'
op|'.'
name|'content_type'
op|'='
string|"'text/plain'"
newline|'\n'
name|'content'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'.'
name|'_response_iter'
op|'('
name|'None'
op|','
nl|'\n'
op|'('
string|"'0123456789112345678'"
nl|'\n'
string|"'92123456789'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'re'
op|'.'
name|'match'
op|'('
op|'('
string|"'--[a-f0-9]{32}\\r\\n'"
nl|'\n'
string|"'Content-Type: text/plain\\r\\n'"
nl|'\n'
string|"'Content-Range: bytes '"
nl|'\n'
string|"'0-9/100\\r\\n\\r\\n0123456789\\r\\n'"
nl|'\n'
string|"'--[a-f0-9]{32}\\r\\n'"
nl|'\n'
string|"'Content-Type: text/plain\\r\\n'"
nl|'\n'
string|"'Content-Range: bytes '"
nl|'\n'
string|"'10-19/100\\r\\n\\r\\n1123456789\\r\\n'"
nl|'\n'
string|"'--[a-f0-9]{32}\\r\\n'"
nl|'\n'
string|"'Content-Type: text/plain\\r\\n'"
nl|'\n'
string|"'Content-Range: bytes '"
nl|'\n'
string|"'20-29/100\\r\\n\\r\\n2123456789\\r\\n'"
nl|'\n'
string|"'--[a-f0-9]{32}--'"
op|')'
op|','
name|'content'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_multi_response_iter
dedent|''
name|'def'
name|'test_multi_response_iter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|test_app
indent|'        '
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|'('
string|"'Content-Length'"
op|','
string|"'10'"
op|')'
op|','
nl|'\n'
op|'('
string|"'Content-Type'"
op|','
string|"'application/xml'"
op|')'
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'0123456789'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'app_iter_ranges_args'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|class|App_iter
name|'class'
name|'App_iter'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|app_iter_ranges
indent|'            '
name|'def'
name|'app_iter_ranges'
op|'('
name|'self'
op|','
name|'ranges'
op|','
name|'content_type'
op|','
name|'boundary'
op|','
name|'size'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'app_iter_ranges_args'
op|'.'
name|'append'
op|'('
op|'('
name|'ranges'
op|','
name|'content_type'
op|','
name|'boundary'
op|','
nl|'\n'
name|'size'
op|')'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'yield'
name|'str'
op|'('
name|'i'
op|')'
op|'+'
string|"'fun'"
newline|'\n'
dedent|''
name|'yield'
name|'boundary'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'yield'
name|'str'
op|'('
name|'i'
op|')'
op|'+'
string|"'fun'"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=1-5,8-11'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'resp'
op|'.'
name|'content_length'
op|'='
number|'12'
newline|'\n'
nl|'\n'
name|'content'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'.'
name|'_response_iter'
op|'('
name|'App_iter'
op|'('
op|')'
op|','
string|"''"
op|')'
op|')'
newline|'\n'
name|'boundary'
op|'='
name|'content'
op|'['
op|'-'
number|'32'
op|':'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'content'
op|'['
op|':'
op|'-'
number|'32'
op|']'
op|','
string|"'0fun1fun2fun'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'app_iter_ranges_args'
op|','
nl|'\n'
op|'['
op|'('
op|'['
op|'('
number|'1'
op|','
number|'6'
op|')'
op|','
op|'('
number|'8'
op|','
number|'12'
op|')'
op|']'
op|','
string|"'application/xml'"
op|','
nl|'\n'
name|'boundary'
op|','
number|'12'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_range_body
dedent|''
name|'def'
name|'test_range_body'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|test_app
indent|'        '
name|'def'
name|'test_app'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|'('
string|"'Content-Length'"
op|','
string|"'10'"
op|')'
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'1234567890'"
op|']'
newline|'\n'
nl|'\n'
DECL|function|start_response
dedent|''
name|'def'
name|'start_response'
op|'('
name|'env'
op|','
name|'headers'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=1-3'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Response'
op|'('
nl|'\n'
name|'body'
op|'='
string|"'1234567890'"
op|','
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'conditional_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
op|'['
op|']'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'234'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'content_range'
op|','
string|"'bytes 1-3/10'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status'
op|','
string|"'206 Partial Content'"
op|')'
newline|'\n'
nl|'\n'
comment|'# syntactically valid, but does not make sense, so returning 416'
nl|'\n'
comment|'# in next couple of cases.'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=-0'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
op|'['
op|']'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'content_length'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status'
op|','
string|"'416 Requested Range Not Satisfiable'"
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Response'
op|'('
nl|'\n'
name|'body'
op|'='
string|"'1234567890'"
op|','
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'conditional_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
op|'['
op|']'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'content_length'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status'
op|','
string|"'416 Requested Range Not Satisfiable'"
op|')'
newline|'\n'
nl|'\n'
comment|'# Syntactically-invalid Range headers "MUST" be ignored'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=3-2'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'test_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
op|'['
op|']'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'1234567890'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status'
op|','
string|"'200 OK'"
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Response'
op|'('
nl|'\n'
name|'body'
op|'='
string|"'1234567890'"
op|','
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'conditional_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
op|'['
op|']'
op|','
name|'start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'1234567890'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status'
op|','
string|"'200 OK'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_content_type
dedent|''
name|'def'
name|'test_content_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'content_type'
op|'='
string|"'text/plain; charset=utf8'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'content_type'
op|','
string|"'text/plain'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_charset
dedent|''
name|'def'
name|'test_charset'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'content_type'
op|'='
string|"'text/plain; charset=utf8'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'charset'
op|','
string|"'utf8'"
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'charset'
op|'='
string|"'utf16'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'charset'
op|','
string|"'utf16'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_charset_content_type
dedent|''
name|'def'
name|'test_charset_content_type'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Response'
op|'('
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|','
name|'charset'
op|'='
string|"'utf-8'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'charset'
op|','
string|"'utf-8'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Response'
op|'('
nl|'\n'
name|'charset'
op|'='
string|"'utf-8'"
op|','
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'charset'
op|','
string|"'utf-8'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_etag
dedent|''
name|'def'
name|'test_etag'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'etag'
op|'='
string|"'hi'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'Etag'"
op|']'
op|','
string|'\'"hi"\''
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'etag'
op|','
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'etag'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'etag'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'etag'"
name|'not'
name|'in'
name|'resp'
op|'.'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_url_default
dedent|''
name|'def'
name|'test_host_url_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'env'
op|'='
name|'resp'
op|'.'
name|'environ'
newline|'\n'
name|'env'
op|'['
string|"'wsgi.url_scheme'"
op|']'
op|'='
string|"'http'"
newline|'\n'
name|'env'
op|'['
string|"'SERVER_NAME'"
op|']'
op|'='
string|"'bob'"
newline|'\n'
name|'env'
op|'['
string|"'SERVER_PORT'"
op|']'
op|'='
string|"'1234'"
newline|'\n'
name|'del'
name|'env'
op|'['
string|"'HTTP_HOST'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'host_url'
op|','
string|"'http://bob:1234'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_url_default_port_squelched
dedent|''
name|'def'
name|'test_host_url_default_port_squelched'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'env'
op|'='
name|'resp'
op|'.'
name|'environ'
newline|'\n'
name|'env'
op|'['
string|"'wsgi.url_scheme'"
op|']'
op|'='
string|"'http'"
newline|'\n'
name|'env'
op|'['
string|"'SERVER_NAME'"
op|']'
op|'='
string|"'bob'"
newline|'\n'
name|'env'
op|'['
string|"'SERVER_PORT'"
op|']'
op|'='
string|"'80'"
newline|'\n'
name|'del'
name|'env'
op|'['
string|"'HTTP_HOST'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'host_url'
op|','
string|"'http://bob'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_url_https
dedent|''
name|'def'
name|'test_host_url_https'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'env'
op|'='
name|'resp'
op|'.'
name|'environ'
newline|'\n'
name|'env'
op|'['
string|"'wsgi.url_scheme'"
op|']'
op|'='
string|"'https'"
newline|'\n'
name|'env'
op|'['
string|"'SERVER_NAME'"
op|']'
op|'='
string|"'bob'"
newline|'\n'
name|'env'
op|'['
string|"'SERVER_PORT'"
op|']'
op|'='
string|"'1234'"
newline|'\n'
name|'del'
name|'env'
op|'['
string|"'HTTP_HOST'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'host_url'
op|','
string|"'https://bob:1234'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_url_https_port_squelched
dedent|''
name|'def'
name|'test_host_url_https_port_squelched'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'env'
op|'='
name|'resp'
op|'.'
name|'environ'
newline|'\n'
name|'env'
op|'['
string|"'wsgi.url_scheme'"
op|']'
op|'='
string|"'https'"
newline|'\n'
name|'env'
op|'['
string|"'SERVER_NAME'"
op|']'
op|'='
string|"'bob'"
newline|'\n'
name|'env'
op|'['
string|"'SERVER_PORT'"
op|']'
op|'='
string|"'443'"
newline|'\n'
name|'del'
name|'env'
op|'['
string|"'HTTP_HOST'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'host_url'
op|','
string|"'https://bob'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_url_host_override
dedent|''
name|'def'
name|'test_host_url_host_override'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'env'
op|'='
name|'resp'
op|'.'
name|'environ'
newline|'\n'
name|'env'
op|'['
string|"'wsgi.url_scheme'"
op|']'
op|'='
string|"'http'"
newline|'\n'
name|'env'
op|'['
string|"'SERVER_NAME'"
op|']'
op|'='
string|"'bob'"
newline|'\n'
name|'env'
op|'['
string|"'SERVER_PORT'"
op|']'
op|'='
string|"'1234'"
newline|'\n'
name|'env'
op|'['
string|"'HTTP_HOST'"
op|']'
op|'='
string|"'someother'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'host_url'
op|','
string|"'http://someother'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_url_host_port_override
dedent|''
name|'def'
name|'test_host_url_host_port_override'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'env'
op|'='
name|'resp'
op|'.'
name|'environ'
newline|'\n'
name|'env'
op|'['
string|"'wsgi.url_scheme'"
op|']'
op|'='
string|"'http'"
newline|'\n'
name|'env'
op|'['
string|"'SERVER_NAME'"
op|']'
op|'='
string|"'bob'"
newline|'\n'
name|'env'
op|'['
string|"'SERVER_PORT'"
op|']'
op|'='
string|"'1234'"
newline|'\n'
name|'env'
op|'['
string|"'HTTP_HOST'"
op|']'
op|'='
string|"'someother:5678'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'host_url'
op|','
string|"'http://someother:5678'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_host_url_host_https
dedent|''
name|'def'
name|'test_host_url_host_https'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'self'
op|'.'
name|'_get_response'
op|'('
op|')'
newline|'\n'
name|'env'
op|'='
name|'resp'
op|'.'
name|'environ'
newline|'\n'
name|'env'
op|'['
string|"'wsgi.url_scheme'"
op|']'
op|'='
string|"'https'"
newline|'\n'
name|'env'
op|'['
string|"'SERVER_NAME'"
op|']'
op|'='
string|"'bob'"
newline|'\n'
name|'env'
op|'['
string|"'SERVER_PORT'"
op|']'
op|'='
string|"'1234'"
newline|'\n'
name|'env'
op|'['
string|"'HTTP_HOST'"
op|']'
op|'='
string|"'someother:5678'"
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'host_url'
op|','
string|"'https://someother:5678'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_507
dedent|''
name|'def'
name|'test_507'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HTTPInsufficientStorage'
op|'('
op|')'
newline|'\n'
name|'content'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'.'
name|'_response_iter'
op|'('
name|'resp'
op|'.'
name|'app_iter'
op|','
name|'resp'
op|'.'
name|'_body'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'content'
op|','
nl|'\n'
string|"'<html><h1>Insufficient Storage</h1><p>There was not enough space '"
nl|'\n'
string|"'to save the resource. Drive: unknown</p></html>'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
string|"'sda1'"
op|')'
newline|'\n'
name|'content'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'.'
name|'_response_iter'
op|'('
name|'resp'
op|'.'
name|'app_iter'
op|','
name|'resp'
op|'.'
name|'_body'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'content'
op|','
nl|'\n'
string|"'<html><h1>Insufficient Storage</h1><p>There was not enough space '"
nl|'\n'
string|"'to save the resource. Drive: sda1</p></html>'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_200_with_body_and_headers
dedent|''
name|'def'
name|'test_200_with_body_and_headers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|'}'
newline|'\n'
name|'content'
op|'='
string|"'foo'"
newline|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'HTTPOk'
op|'('
name|'body'
op|'='
name|'content'
op|','
name|'headers'
op|'='
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
name|'content'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'content_length'
op|','
name|'len'
op|'('
name|'content'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init_with_body_headers_app_iter
dedent|''
name|'def'
name|'test_init_with_body_headers_app_iter'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# body exists but no headers and no app_iter'
nl|'\n'
indent|'        '
name|'body'
op|'='
string|"'ok'"
newline|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Response'
op|'('
name|'body'
op|'='
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'content_length'
op|','
name|'len'
op|'('
name|'body'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# body and headers with 0 content_length exist but no app_iter'
nl|'\n'
name|'body'
op|'='
string|"'ok'"
newline|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Response'
op|'('
nl|'\n'
name|'body'
op|'='
name|'body'
op|','
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'content_length'
op|','
name|'len'
op|'('
name|'body'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# body and headers with content_length exist but no app_iter'
nl|'\n'
name|'body'
op|'='
string|"'ok'"
newline|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Response'
op|'('
nl|'\n'
name|'body'
op|'='
name|'body'
op|','
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'content_length'
op|','
name|'len'
op|'('
name|'body'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# body and headers with no content_length exist but no app_iter'
nl|'\n'
name|'body'
op|'='
string|"'ok'"
newline|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Response'
op|'('
name|'body'
op|'='
name|'body'
op|','
name|'headers'
op|'='
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
name|'body'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'content_length'
op|','
name|'len'
op|'('
name|'body'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# body, headers with content_length and app_iter exist'
nl|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Response'
op|'('
nl|'\n'
name|'body'
op|'='
string|"'ok'"
op|','
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|'}'
op|','
name|'app_iter'
op|'='
name|'iter'
op|'('
op|'['
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'content_length'
op|','
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
comment|'# headers with content_length and app_iter exist but no body'
nl|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Response'
op|'('
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|'}'
op|','
name|'app_iter'
op|'='
name|'iter'
op|'('
op|'['
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'content_length'
op|','
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
comment|'# app_iter exists but no body and headers'
nl|'\n'
name|'resp'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Response'
op|'('
name|'app_iter'
op|'='
name|'iter'
op|'('
op|'['
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'content_length'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestUTC
dedent|''
dedent|''
name|'class'
name|'TestUTC'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_tzname
indent|'    '
name|'def'
name|'test_tzname'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'UTC'
op|'.'
name|'tzname'
op|'('
name|'None'
op|')'
op|','
string|"'UTC'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestConditionalIfNoneMatch
dedent|''
dedent|''
name|'class'
name|'TestConditionalIfNoneMatch'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|fake_app
indent|'    '
name|'def'
name|'fake_app'
op|'('
name|'self'
op|','
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|'('
string|"'Etag'"
op|','
string|"'the-etag'"
op|')'
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'hi'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|fake_start_response
dedent|''
name|'def'
name|'fake_start_response'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_simple_match
dedent|''
name|'def'
name|'test_simple_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# etag matches --> 304'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'If-None-Match'"
op|':'
string|"'the-etag'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'304'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quoted_simple_match
dedent|''
name|'def'
name|'test_quoted_simple_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# double quotes don't matter"
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'If-None-Match'"
op|':'
string|'\'"the-etag"\''
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'304'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_match
dedent|''
name|'def'
name|'test_list_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# it works with lists of etags to match'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'If-None-Match'"
op|':'
string|'\'"bert", "the-etag", "ernie"\''
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'304'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_no_match
dedent|''
name|'def'
name|'test_list_no_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# no matches --> whatever the original status was'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'If-None-Match'"
op|':'
string|'\'"bert", "ernie"\''
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_match_star
dedent|''
name|'def'
name|'test_match_star'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# "*" means match anything; see RFC 2616 section 14.24'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'If-None-Match'"
op|':'
string|"'*'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'304'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestConditionalIfMatch
dedent|''
dedent|''
name|'class'
name|'TestConditionalIfMatch'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|fake_app
indent|'    '
name|'def'
name|'fake_app'
op|'('
name|'self'
op|','
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'start_response'
op|'('
string|"'200 OK'"
op|','
op|'['
op|'('
string|"'Etag'"
op|','
string|"'the-etag'"
op|')'
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'hi'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|fake_start_response
dedent|''
name|'def'
name|'fake_start_response'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_simple_match
dedent|''
name|'def'
name|'test_simple_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# if etag matches, proceed as normal'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'If-Match'"
op|':'
string|"'the-etag'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_simple_conditional_etag_match
dedent|''
name|'def'
name|'test_simple_conditional_etag_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# if etag matches, proceed as normal'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'If-Match'"
op|':'
string|"'not-the-etag'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'resp'
op|'.'
name|'_conditional_etag'
op|'='
string|"'not-the-etag'"
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_quoted_simple_match
dedent|''
name|'def'
name|'test_quoted_simple_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# double quotes or not, doesn't matter"
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'If-Match'"
op|':'
string|'\'"the-etag"\''
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_no_match
dedent|''
name|'def'
name|'test_no_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# no match --> 412'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'If-Match'"
op|':'
string|"'not-the-etag'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'412'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_simple_conditional_etag_no_match
dedent|''
name|'def'
name|'test_simple_conditional_etag_no_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'If-Match'"
op|':'
string|"'the-etag'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'resp'
op|'.'
name|'_conditional_etag'
op|'='
string|"'not-the-etag'"
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'412'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_match_star
dedent|''
name|'def'
name|'test_match_star'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# "*" means match anything; see RFC 2616 section 14.24'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'If-Match'"
op|':'
string|"'*'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_match_star_on_404
dedent|''
name|'def'
name|'test_match_star_on_404'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_app_404
indent|'        '
name|'def'
name|'fake_app_404'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'start_response'
op|'('
string|"'404 Not Found'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'hi'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
name|'headers'
op|'='
op|'{'
string|"'If-Match'"
op|':'
string|"'*'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'fake_app_404'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'412'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestConditionalIfModifiedSince
dedent|''
dedent|''
name|'class'
name|'TestConditionalIfModifiedSince'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|fake_app
indent|'    '
name|'def'
name|'fake_app'
op|'('
name|'self'
op|','
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'start_response'
op|'('
nl|'\n'
string|"'200 OK'"
op|','
op|'['
op|'('
string|"'Last-Modified'"
op|','
string|"'Thu, 27 Feb 2014 03:29:37 GMT'"
op|')'
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'hi'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|fake_start_response
dedent|''
name|'def'
name|'fake_start_response'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_absent
dedent|''
name|'def'
name|'test_absent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_before
dedent|''
name|'def'
name|'test_before'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-Modified-Since'"
op|':'
string|"'Thu, 27 Feb 2014 03:29:36 GMT'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_same
dedent|''
name|'def'
name|'test_same'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-Modified-Since'"
op|':'
string|"'Thu, 27 Feb 2014 03:29:37 GMT'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'304'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_greater
dedent|''
name|'def'
name|'test_greater'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-Modified-Since'"
op|':'
string|"'Thu, 27 Feb 2014 03:29:38 GMT'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'304'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_out_of_range_is_ignored
dedent|''
name|'def'
name|'test_out_of_range_is_ignored'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# All that datetime gives us is a ValueError or OverflowError when'
nl|'\n'
comment|'# something is out of range (i.e. less than datetime.datetime.min or'
nl|'\n'
comment|"# greater than datetime.datetime.max). Unfortunately, we can't"
nl|'\n'
comment|'# distinguish between a date being too old and a date being too new,'
nl|'\n'
comment|'# so the best we can do is ignore such headers.'
nl|'\n'
indent|'        '
name|'max_date_list'
op|'='
name|'list'
op|'('
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'max'
op|'.'
name|'timetuple'
op|'('
op|')'
op|')'
newline|'\n'
name|'max_date_list'
op|'['
number|'0'
op|']'
op|'+='
number|'1'
comment|'# bump up the year'
newline|'\n'
name|'too_big_date_header'
op|'='
name|'time'
op|'.'
name|'strftime'
op|'('
nl|'\n'
string|'"%a, %d %b %Y %H:%M:%S GMT"'
op|','
name|'time'
op|'.'
name|'struct_time'
op|'('
name|'max_date_list'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-Modified-Since'"
op|':'
name|'too_big_date_header'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestConditionalIfUnmodifiedSince
dedent|''
dedent|''
name|'class'
name|'TestConditionalIfUnmodifiedSince'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|fake_app
indent|'    '
name|'def'
name|'fake_app'
op|'('
name|'self'
op|','
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'start_response'
op|'('
nl|'\n'
string|"'200 OK'"
op|','
op|'['
op|'('
string|"'Last-Modified'"
op|','
string|"'Thu, 20 Feb 2014 03:29:37 GMT'"
op|')'
op|']'
op|')'
newline|'\n'
name|'return'
op|'['
string|"'hi'"
op|']'
newline|'\n'
nl|'\n'
DECL|member|fake_start_response
dedent|''
name|'def'
name|'fake_start_response'
op|'('
op|'*'
name|'a'
op|','
op|'**'
name|'kw'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|test_absent
dedent|''
name|'def'
name|'test_absent'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_before
dedent|''
name|'def'
name|'test_before'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-Unmodified-Since'"
op|':'
string|"'Thu, 20 Feb 2014 03:29:36 GMT'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'412'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_same
dedent|''
name|'def'
name|'test_same'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-Unmodified-Since'"
op|':'
string|"'Thu, 20 Feb 2014 03:29:37 GMT'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_greater
dedent|''
name|'def'
name|'test_greater'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-Unmodified-Since'"
op|':'
string|"'Thu, 20 Feb 2014 03:29:38 GMT'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_out_of_range_is_ignored
dedent|''
name|'def'
name|'test_out_of_range_is_ignored'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# All that datetime gives us is a ValueError or OverflowError when'
nl|'\n'
comment|'# something is out of range (i.e. less than datetime.datetime.min or'
nl|'\n'
comment|"# greater than datetime.datetime.max). Unfortunately, we can't"
nl|'\n'
comment|'# distinguish between a date being too old and a date being too new,'
nl|'\n'
comment|'# so the best we can do is ignore such headers.'
nl|'\n'
indent|'        '
name|'max_date_list'
op|'='
name|'list'
op|'('
name|'datetime'
op|'.'
name|'datetime'
op|'.'
name|'max'
op|'.'
name|'timetuple'
op|'('
op|')'
op|')'
newline|'\n'
name|'max_date_list'
op|'['
number|'0'
op|']'
op|'+='
number|'1'
comment|'# bump up the year'
newline|'\n'
name|'too_big_date_header'
op|'='
name|'time'
op|'.'
name|'strftime'
op|'('
nl|'\n'
string|'"%a, %d %b %Y %H:%M:%S GMT"'
op|','
name|'time'
op|'.'
name|'struct_time'
op|'('
name|'max_date_list'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/'"
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-Unmodified-Since'"
op|':'
name|'too_big_date_header'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'fake_app'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'conditional_response'
op|'='
name|'True'
newline|'\n'
name|'body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'resp'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'self'
op|'.'
name|'fake_start_response'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|','
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'body'
op|','
string|"'hi'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
