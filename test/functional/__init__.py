begin_unit
comment|'# Copyright (c) 2014 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'pickle'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
name|'import'
name|'locale'
newline|'\n'
name|'import'
name|'eventlet'
newline|'\n'
name|'import'
name|'eventlet'
op|'.'
name|'debug'
newline|'\n'
name|'import'
name|'functools'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'from'
name|'time'
name|'import'
name|'time'
op|','
name|'sleep'
newline|'\n'
name|'from'
name|'httplib'
name|'import'
name|'HTTPException'
newline|'\n'
name|'from'
name|'urlparse'
name|'import'
name|'urlparse'
newline|'\n'
name|'from'
name|'nose'
name|'import'
name|'SkipTest'
newline|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'closing'
newline|'\n'
name|'from'
name|'gzip'
name|'import'
name|'GzipFile'
newline|'\n'
name|'from'
name|'shutil'
name|'import'
name|'rmtree'
newline|'\n'
name|'from'
name|'tempfile'
name|'import'
name|'mkdtemp'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
op|'.'
name|'memcache'
name|'import'
name|'MemcacheMiddleware'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
name|'import'
name|'get_config'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'functional'
op|'.'
name|'swift_test_client'
name|'import'
name|'Account'
op|','
name|'Connection'
op|','
name|'ResponseError'
newline|'\n'
comment|'# This has the side effect of mocking out the xattr module so that unit tests'
nl|'\n'
comment|'# (and in this case, when in-process functional tests are called for) can run'
nl|'\n'
comment|"# on file systems that don't support extended attributes."
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'debug_logger'
op|','
name|'FakeMemcache'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'constraints'
op|','
name|'utils'
op|','
name|'ring'
op|','
name|'storage_policy'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
name|'import'
name|'Ring'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'wsgi'
name|'import'
name|'monkey_patch_mimetools'
op|','
name|'loadapp'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'config_true_value'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'account'
name|'import'
name|'server'
name|'as'
name|'account_server'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'container'
name|'import'
name|'server'
name|'as'
name|'container_server'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'server'
name|'as'
name|'object_server'
op|','
name|'mem_server'
name|'as'
name|'mem_object_server'
newline|'\n'
name|'import'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'obj'
newline|'\n'
nl|'\n'
comment|'# In order to get the proper blocking behavior of sockets without using'
nl|'\n'
comment|'# threads, where we can set an arbitrary timeout for some piece of code under'
nl|'\n'
comment|'# test, we use eventlet with the standard socket library patched. We have to'
nl|'\n'
comment|'# perform this setup at module import time, since all the socket module'
nl|'\n'
comment|'# bindings in the swiftclient code will have been made by the time nose'
nl|'\n'
comment|'# invokes the package or class setup methods.'
nl|'\n'
name|'eventlet'
op|'.'
name|'hubs'
op|'.'
name|'use_hub'
op|'('
name|'utils'
op|'.'
name|'get_hub'
op|'('
op|')'
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'patcher'
op|'.'
name|'monkey_patch'
op|'('
name|'all'
op|'='
name|'False'
op|','
name|'socket'
op|'='
name|'True'
op|')'
newline|'\n'
name|'eventlet'
op|'.'
name|'debug'
op|'.'
name|'hub_exceptions'
op|'('
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'from'
name|'swiftclient'
name|'import'
name|'get_auth'
op|','
name|'http_connection'
newline|'\n'
nl|'\n'
DECL|variable|has_insecure
name|'has_insecure'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'    '
name|'from'
name|'swiftclient'
name|'import'
name|'__version__'
name|'as'
name|'client_version'
newline|'\n'
comment|"# Prevent a ValueError in StrictVersion with '2.0.3.68.ga99c2ff'"
nl|'\n'
DECL|variable|client_version
name|'client_version'
op|'='
string|"'.'"
op|'.'
name|'join'
op|'('
name|'client_version'
op|'.'
name|'split'
op|'('
string|"'.'"
op|')'
op|'['
op|':'
number|'3'
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ImportError'
op|':'
newline|'\n'
comment|'# Pre-PBR we had version, not __version__. Anyhow...'
nl|'\n'
DECL|variable|client_version
indent|'    '
name|'client_version'
op|'='
string|"'1.2'"
newline|'\n'
dedent|''
name|'from'
name|'distutils'
op|'.'
name|'version'
name|'import'
name|'StrictVersion'
newline|'\n'
name|'if'
name|'StrictVersion'
op|'('
name|'client_version'
op|')'
op|'>='
name|'StrictVersion'
op|'('
string|"'2.0'"
op|')'
op|':'
newline|'\n'
DECL|variable|has_insecure
indent|'    '
name|'has_insecure'
op|'='
name|'True'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|config
dedent|''
name|'config'
op|'='
op|'{'
op|'}'
newline|'\n'
DECL|variable|web_front_end
name|'web_front_end'
op|'='
name|'None'
newline|'\n'
DECL|variable|normalized_urls
name|'normalized_urls'
op|'='
name|'None'
newline|'\n'
nl|'\n'
comment|'# If no config was read, we will fall back to old school env vars'
nl|'\n'
DECL|variable|swift_test_auth_version
name|'swift_test_auth_version'
op|'='
name|'None'
newline|'\n'
DECL|variable|swift_test_auth
name|'swift_test_auth'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'SWIFT_TEST_AUTH'"
op|')'
newline|'\n'
DECL|variable|swift_test_user
name|'swift_test_user'
op|'='
op|'['
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'SWIFT_TEST_USER'"
op|')'
op|','
name|'None'
op|','
name|'None'
op|','
string|"''"
op|','
string|"''"
op|']'
newline|'\n'
DECL|variable|swift_test_key
name|'swift_test_key'
op|'='
op|'['
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'SWIFT_TEST_KEY'"
op|')'
op|','
name|'None'
op|','
name|'None'
op|','
string|"''"
op|','
string|"''"
op|']'
newline|'\n'
DECL|variable|swift_test_tenant
name|'swift_test_tenant'
op|'='
op|'['
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|']'
newline|'\n'
DECL|variable|swift_test_perm
name|'swift_test_perm'
op|'='
op|'['
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|']'
newline|'\n'
DECL|variable|swift_test_domain
name|'swift_test_domain'
op|'='
op|'['
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|']'
newline|'\n'
DECL|variable|swift_test_user_id
name|'swift_test_user_id'
op|'='
op|'['
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|']'
newline|'\n'
DECL|variable|swift_test_tenant_id
name|'swift_test_tenant_id'
op|'='
op|'['
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|','
string|"''"
op|']'
newline|'\n'
nl|'\n'
name|'skip'
op|','
name|'skip2'
op|','
name|'skip3'
op|','
name|'skip_service_tokens'
op|'='
name|'False'
op|','
name|'False'
op|','
name|'False'
op|','
name|'False'
newline|'\n'
nl|'\n'
DECL|variable|orig_collate
name|'orig_collate'
op|'='
string|"''"
newline|'\n'
DECL|variable|insecure
name|'insecure'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|variable|orig_hash_path_suff_pref
name|'orig_hash_path_suff_pref'
op|'='
op|'('
string|"''"
op|','
string|"''"
op|')'
newline|'\n'
DECL|variable|orig_swift_conf_name
name|'orig_swift_conf_name'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|variable|in_process
name|'in_process'
op|'='
name|'False'
newline|'\n'
name|'_testdir'
op|'='
name|'_test_servers'
op|'='
name|'_test_sockets'
op|'='
name|'_test_coros'
op|'='
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeMemcacheMiddleware
name|'class'
name|'FakeMemcacheMiddleware'
op|'('
name|'MemcacheMiddleware'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Caching middleware that fakes out caching in swift if memcached\n    does not appear to be running.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'FakeMemcacheMiddleware'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'app'
op|','
name|'conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'memcache'
op|'='
name|'FakeMemcache'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
comment|'# swift.conf contents for in-process functional test runs'
nl|'\n'
dedent|''
dedent|''
name|'functests_swift_conf'
op|'='
string|"'''\n[swift-hash]\nswift_hash_path_suffix = inprocfunctests\nswift_hash_path_prefix = inprocfunctests\n\n[swift-constraints]\nmax_file_size = %d\n'''"
op|'%'
op|'('
op|'('
number|'8'
op|'*'
number|'1024'
op|'*'
number|'1024'
op|')'
op|'+'
number|'2'
op|')'
comment|'# 8 MB + 2'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|in_process_setup
name|'def'
name|'in_process_setup'
op|'('
name|'the_object_server'
op|'='
name|'object_server'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'print'
op|'>>'
name|'sys'
op|'.'
name|'stderr'
op|','
string|"'IN-PROCESS SERVERS IN USE FOR FUNCTIONAL TESTS'"
newline|'\n'
name|'print'
op|'>>'
name|'sys'
op|'.'
name|'stderr'
op|','
string|"'Using object_server: %s'"
op|'%'
name|'the_object_server'
op|'.'
name|'__name__'
newline|'\n'
name|'_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'normpath'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'abspath'
op|'('
name|'__file__'
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'pardir'
op|','
name|'os'
op|'.'
name|'pardir'
op|','
name|'os'
op|'.'
name|'pardir'
op|')'
op|')'
newline|'\n'
name|'proxy_conf'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'_dir'
op|','
string|"'etc'"
op|','
string|"'proxy-server.conf-sample'"
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'proxy_conf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'>>'
name|'sys'
op|'.'
name|'stderr'
op|','
string|"'Using proxy-server config from %s'"
op|'%'
name|'proxy_conf'
newline|'\n'
nl|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'>>'
name|'sys'
op|'.'
name|'stderr'
op|','
string|"'Failed to find conf file %s'"
op|'%'
name|'proxy_conf'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'monkey_patch_mimetools'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'_testdir'
newline|'\n'
name|'_testdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'mkdtemp'
op|'('
op|')'
op|','
string|"'tmp_functional'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'mkdirs'
op|'('
name|'_testdir'
op|')'
newline|'\n'
name|'rmtree'
op|'('
name|'_testdir'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'mkdirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'_testdir'
op|','
string|"'sda1'"
op|')'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'mkdirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'_testdir'
op|','
string|"'sda1'"
op|','
string|"'tmp'"
op|')'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'mkdirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'_testdir'
op|','
string|"'sdb1'"
op|')'
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'mkdirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'_testdir'
op|','
string|"'sdb1'"
op|','
string|"'tmp'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'swift_conf'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'_testdir'
op|','
string|'"swift.conf"'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'swift_conf'
op|','
string|'"w"'
op|')'
name|'as'
name|'scfp'
op|':'
newline|'\n'
indent|'        '
name|'scfp'
op|'.'
name|'write'
op|'('
name|'functests_swift_conf'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'global'
name|'orig_swift_conf_name'
newline|'\n'
name|'orig_swift_conf_name'
op|'='
name|'utils'
op|'.'
name|'SWIFT_CONF_FILE'
newline|'\n'
name|'utils'
op|'.'
name|'SWIFT_CONF_FILE'
op|'='
name|'swift_conf'
newline|'\n'
name|'constraints'
op|'.'
name|'reload_constraints'
op|'('
op|')'
newline|'\n'
name|'storage_policy'
op|'.'
name|'SWIFT_CONF_FILE'
op|'='
name|'swift_conf'
newline|'\n'
name|'storage_policy'
op|'.'
name|'reload_storage_policies'
op|'('
op|')'
newline|'\n'
name|'global'
name|'config'
newline|'\n'
name|'if'
name|'constraints'
op|'.'
name|'SWIFT_CONSTRAINTS_LOADED'
op|':'
newline|'\n'
comment|'# Use the swift constraints that are loaded for the test framework'
nl|'\n'
comment|'# configuration'
nl|'\n'
indent|'        '
name|'_c'
op|'='
name|'dict'
op|'('
op|'('
name|'k'
op|','
name|'str'
op|'('
name|'v'
op|')'
op|')'
nl|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'constraints'
op|'.'
name|'EFFECTIVE_CONSTRAINTS'
op|'.'
name|'items'
op|'('
op|')'
op|')'
newline|'\n'
name|'config'
op|'.'
name|'update'
op|'('
name|'_c'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# In-process swift constraints were not loaded, somethings wrong'
nl|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
newline|'\n'
dedent|''
name|'global'
name|'orig_hash_path_suff_pref'
newline|'\n'
name|'orig_hash_path_suff_pref'
op|'='
name|'utils'
op|'.'
name|'HASH_PATH_PREFIX'
op|','
name|'utils'
op|'.'
name|'HASH_PATH_SUFFIX'
newline|'\n'
name|'utils'
op|'.'
name|'validate_hash_conf'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# We create the proxy server listening socket to get its port number so'
nl|'\n'
comment|'# that we can add it as the "auth_port" value for the functional test'
nl|'\n'
comment|'# clients.'
nl|'\n'
name|'prolis'
op|'='
name|'eventlet'
op|'.'
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# The following set of configuration values is used both for the'
nl|'\n'
comment|'# functional test frame work and for the various proxy, account, container'
nl|'\n'
comment|'# and object servers.'
nl|'\n'
name|'config'
op|'.'
name|'update'
op|'('
op|'{'
nl|'\n'
comment|'# Values needed by the various in-process swift servers'
nl|'\n'
string|"'devices'"
op|':'
name|'_testdir'
op|','
nl|'\n'
string|"'swift_dir'"
op|':'
name|'_testdir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'false'"
op|','
nl|'\n'
string|"'client_timeout'"
op|':'
string|"'4'"
op|','
nl|'\n'
string|"'allow_account_management'"
op|':'
string|"'true'"
op|','
nl|'\n'
string|"'account_autocreate'"
op|':'
string|"'true'"
op|','
nl|'\n'
string|"'allow_versions'"
op|':'
string|"'True'"
op|','
nl|'\n'
comment|'# Below are values used by the functional test framework, as well as'
nl|'\n'
comment|'# by the various in-process swift servers'
nl|'\n'
string|"'auth_host'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'auth_port'"
op|':'
name|'str'
op|'('
name|'prolis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|')'
op|','
nl|'\n'
string|"'auth_ssl'"
op|':'
string|"'no'"
op|','
nl|'\n'
string|"'auth_prefix'"
op|':'
string|"'/auth/'"
op|','
nl|'\n'
comment|'# Primary functional test account (needs admin access to the'
nl|'\n'
comment|'# account)'
nl|'\n'
string|"'account'"
op|':'
string|"'test'"
op|','
nl|'\n'
string|"'username'"
op|':'
string|"'tester'"
op|','
nl|'\n'
string|"'password'"
op|':'
string|"'testing'"
op|','
nl|'\n'
comment|'# User on a second account (needs admin access to the account)'
nl|'\n'
string|"'account2'"
op|':'
string|"'test2'"
op|','
nl|'\n'
string|"'username2'"
op|':'
string|"'tester2'"
op|','
nl|'\n'
string|"'password2'"
op|':'
string|"'testing2'"
op|','
nl|'\n'
comment|'# User on same account as first, but without admin access'
nl|'\n'
string|"'username3'"
op|':'
string|"'tester3'"
op|','
nl|'\n'
string|"'password3'"
op|':'
string|"'testing3'"
op|','
nl|'\n'
comment|'# Service user and prefix (emulates glance, cinder, etc. user)'
nl|'\n'
string|"'account5'"
op|':'
string|"'test5'"
op|','
nl|'\n'
string|"'username5'"
op|':'
string|"'tester5'"
op|','
nl|'\n'
string|"'password5'"
op|':'
string|"'testing5'"
op|','
nl|'\n'
string|"'service_prefix'"
op|':'
string|"'SERVICE'"
op|','
nl|'\n'
comment|'# For tempauth middleware. Update reseller_prefix'
nl|'\n'
string|"'reseller_prefix'"
op|':'
string|"'AUTH, SERVICE'"
op|','
nl|'\n'
string|"'SERVICE_require_group'"
op|':'
string|"'service'"
nl|'\n'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'acc1lis'
op|'='
name|'eventlet'
op|'.'
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'acc2lis'
op|'='
name|'eventlet'
op|'.'
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'con1lis'
op|'='
name|'eventlet'
op|'.'
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'con2lis'
op|'='
name|'eventlet'
op|'.'
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'obj1lis'
op|'='
name|'eventlet'
op|'.'
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'obj2lis'
op|'='
name|'eventlet'
op|'.'
name|'listen'
op|'('
op|'('
string|"'localhost'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'global'
name|'_test_sockets'
newline|'\n'
name|'_test_sockets'
op|'='
op|'('
name|'prolis'
op|','
name|'acc1lis'
op|','
name|'acc2lis'
op|','
name|'con1lis'
op|','
name|'con2lis'
op|','
name|'obj1lis'
op|','
name|'obj2lis'
op|')'
newline|'\n'
nl|'\n'
name|'account_ring_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'_testdir'
op|','
string|"'account.ring.gz'"
op|')'
newline|'\n'
name|'with'
name|'closing'
op|'('
name|'GzipFile'
op|'('
name|'account_ring_path'
op|','
string|"'wb'"
op|')'
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'        '
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'ring'
op|'.'
name|'RingData'
op|'('
op|'['
op|'['
number|'0'
op|','
number|'1'
op|','
number|'0'
op|','
number|'1'
op|']'
op|','
op|'['
number|'1'
op|','
number|'0'
op|','
number|'1'
op|','
number|'0'
op|']'
op|']'
op|','
nl|'\n'
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'device'"
op|':'
string|"'sda1'"
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'port'"
op|':'
name|'acc1lis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'zone'"
op|':'
number|'1'
op|','
string|"'device'"
op|':'
string|"'sdb1'"
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'port'"
op|':'
name|'acc2lis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|'}'
op|']'
op|','
number|'30'
op|')'
op|','
nl|'\n'
name|'f'
op|')'
newline|'\n'
dedent|''
name|'container_ring_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'_testdir'
op|','
string|"'container.ring.gz'"
op|')'
newline|'\n'
name|'with'
name|'closing'
op|'('
name|'GzipFile'
op|'('
name|'container_ring_path'
op|','
string|"'wb'"
op|')'
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'        '
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'ring'
op|'.'
name|'RingData'
op|'('
op|'['
op|'['
number|'0'
op|','
number|'1'
op|','
number|'0'
op|','
number|'1'
op|']'
op|','
op|'['
number|'1'
op|','
number|'0'
op|','
number|'1'
op|','
number|'0'
op|']'
op|']'
op|','
nl|'\n'
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'device'"
op|':'
string|"'sda1'"
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'port'"
op|':'
name|'con1lis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'zone'"
op|':'
number|'1'
op|','
string|"'device'"
op|':'
string|"'sdb1'"
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'port'"
op|':'
name|'con2lis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|'}'
op|']'
op|','
number|'30'
op|')'
op|','
nl|'\n'
name|'f'
op|')'
newline|'\n'
dedent|''
name|'object_ring_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'_testdir'
op|','
string|"'object.ring.gz'"
op|')'
newline|'\n'
name|'with'
name|'closing'
op|'('
name|'GzipFile'
op|'('
name|'object_ring_path'
op|','
string|"'wb'"
op|')'
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'        '
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'ring'
op|'.'
name|'RingData'
op|'('
op|'['
op|'['
number|'0'
op|','
number|'1'
op|','
number|'0'
op|','
number|'1'
op|']'
op|','
op|'['
number|'1'
op|','
number|'0'
op|','
number|'1'
op|','
number|'0'
op|']'
op|']'
op|','
nl|'\n'
op|'['
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'device'"
op|':'
string|"'sda1'"
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'port'"
op|':'
name|'obj1lis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'zone'"
op|':'
number|'1'
op|','
string|"'device'"
op|':'
string|"'sdb1'"
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
nl|'\n'
string|"'port'"
op|':'
name|'obj2lis'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
op|'}'
op|']'
op|','
number|'30'
op|')'
op|','
nl|'\n'
name|'f'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'eventlet'
op|'.'
name|'wsgi'
op|'.'
name|'HttpProtocol'
op|'.'
name|'default_request_version'
op|'='
string|'"HTTP/1.0"'
newline|'\n'
comment|'# Turn off logging requests by the underlying WSGI software.'
nl|'\n'
name|'eventlet'
op|'.'
name|'wsgi'
op|'.'
name|'HttpProtocol'
op|'.'
name|'log_request'
op|'='
name|'lambda'
op|'*'
name|'a'
op|':'
name|'None'
newline|'\n'
name|'logger'
op|'='
name|'utils'
op|'.'
name|'get_logger'
op|'('
name|'config'
op|','
string|"'wsgi-server'"
op|','
name|'log_route'
op|'='
string|"'wsgi'"
op|')'
newline|'\n'
comment|'# Redirect logging other messages by the underlying WSGI software.'
nl|'\n'
name|'eventlet'
op|'.'
name|'wsgi'
op|'.'
name|'HttpProtocol'
op|'.'
name|'log_message'
op|'='
name|'lambda'
name|'s'
op|','
name|'f'
op|','
op|'*'
name|'a'
op|':'
name|'logger'
op|'.'
name|'error'
op|'('
string|"'ERROR WSGI: '"
op|'+'
name|'f'
op|'%'
name|'a'
op|')'
newline|'\n'
comment|'# Default to only 4 seconds for in-process functional test runs'
nl|'\n'
name|'eventlet'
op|'.'
name|'wsgi'
op|'.'
name|'WRITE_TIMEOUT'
op|'='
number|'4'
newline|'\n'
nl|'\n'
name|'acc1srv'
op|'='
name|'account_server'
op|'.'
name|'AccountController'
op|'('
nl|'\n'
name|'config'
op|','
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'acct1'"
op|')'
op|')'
newline|'\n'
name|'acc2srv'
op|'='
name|'account_server'
op|'.'
name|'AccountController'
op|'('
nl|'\n'
name|'config'
op|','
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'acct2'"
op|')'
op|')'
newline|'\n'
name|'con1srv'
op|'='
name|'container_server'
op|'.'
name|'ContainerController'
op|'('
nl|'\n'
name|'config'
op|','
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'cont1'"
op|')'
op|')'
newline|'\n'
name|'con2srv'
op|'='
name|'container_server'
op|'.'
name|'ContainerController'
op|'('
nl|'\n'
name|'config'
op|','
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'cont2'"
op|')'
op|')'
newline|'\n'
name|'obj1srv'
op|'='
name|'the_object_server'
op|'.'
name|'ObjectController'
op|'('
nl|'\n'
name|'config'
op|','
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'obj1'"
op|')'
op|')'
newline|'\n'
name|'obj2srv'
op|'='
name|'the_object_server'
op|'.'
name|'ObjectController'
op|'('
nl|'\n'
name|'config'
op|','
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'obj2'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
nl|'\n'
DECL|function|get_logger
name|'def'
name|'get_logger'
op|'('
name|'name'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'logger'
newline|'\n'
nl|'\n'
dedent|''
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.utils.get_logger'"
op|','
name|'get_logger'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.middleware.memcache.MemcacheMiddleware'"
op|','
nl|'\n'
name|'FakeMemcacheMiddleware'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'loadapp'
op|'('
name|'proxy_conf'
op|','
name|'global_conf'
op|'='
name|'config'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'nl'
op|'='
name|'utils'
op|'.'
name|'NullLogger'
op|'('
op|')'
newline|'\n'
name|'prospa'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'eventlet'
op|'.'
name|'wsgi'
op|'.'
name|'server'
op|','
name|'prolis'
op|','
name|'app'
op|','
name|'nl'
op|')'
newline|'\n'
name|'acc1spa'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'eventlet'
op|'.'
name|'wsgi'
op|'.'
name|'server'
op|','
name|'acc1lis'
op|','
name|'acc1srv'
op|','
name|'nl'
op|')'
newline|'\n'
name|'acc2spa'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'eventlet'
op|'.'
name|'wsgi'
op|'.'
name|'server'
op|','
name|'acc2lis'
op|','
name|'acc2srv'
op|','
name|'nl'
op|')'
newline|'\n'
name|'con1spa'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'eventlet'
op|'.'
name|'wsgi'
op|'.'
name|'server'
op|','
name|'con1lis'
op|','
name|'con1srv'
op|','
name|'nl'
op|')'
newline|'\n'
name|'con2spa'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'eventlet'
op|'.'
name|'wsgi'
op|'.'
name|'server'
op|','
name|'con2lis'
op|','
name|'con2srv'
op|','
name|'nl'
op|')'
newline|'\n'
name|'obj1spa'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'eventlet'
op|'.'
name|'wsgi'
op|'.'
name|'server'
op|','
name|'obj1lis'
op|','
name|'obj1srv'
op|','
name|'nl'
op|')'
newline|'\n'
name|'obj2spa'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'eventlet'
op|'.'
name|'wsgi'
op|'.'
name|'server'
op|','
name|'obj2lis'
op|','
name|'obj2srv'
op|','
name|'nl'
op|')'
newline|'\n'
name|'global'
name|'_test_coros'
newline|'\n'
name|'_test_coros'
op|'='
op|'('
name|'prospa'
op|','
name|'acc1spa'
op|','
name|'acc2spa'
op|','
name|'con1spa'
op|','
name|'con2spa'
op|','
name|'obj1spa'
op|','
name|'obj2spa'
op|')'
newline|'\n'
nl|'\n'
comment|'# Create accounts "test" and "test2"'
nl|'\n'
DECL|function|create_account
name|'def'
name|'create_account'
op|'('
name|'act'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ts'
op|'='
name|'utils'
op|'.'
name|'normalize_timestamp'
op|'('
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
name|'account_ring'
op|'='
name|'Ring'
op|'('
name|'_testdir'
op|','
name|'ring_name'
op|'='
string|"'account'"
op|')'
newline|'\n'
name|'partition'
op|','
name|'nodes'
op|'='
name|'account_ring'
op|'.'
name|'get_nodes'
op|'('
name|'act'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
comment|'# Note: we are just using the http_connect method in the object'
nl|'\n'
comment|'# controller here to talk to the account server nodes.'
nl|'\n'
indent|'            '
name|'conn'
op|'='
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'obj'
op|'.'
name|'http_connect'
op|'('
nl|'\n'
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'partition'
op|','
string|"'PUT'"
op|','
nl|'\n'
string|"'/'"
op|'+'
name|'act'
op|','
op|'{'
string|"'X-Timestamp'"
op|':'
name|'ts'
op|','
string|"'x-trans-id'"
op|':'
name|'act'
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'assert'
op|'('
name|'resp'
op|'.'
name|'status'
op|'=='
number|'201'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'create_account'
op|'('
string|"'AUTH_test'"
op|')'
newline|'\n'
name|'create_account'
op|'('
string|"'AUTH_test2'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|cluster_info
dedent|''
name|'cluster_info'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_cluster_info
name|'def'
name|'get_cluster_info'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# The fallback constraints used for testing will come from the current'
nl|'\n'
comment|'# effective constraints.'
nl|'\n'
indent|'    '
name|'eff_constraints'
op|'='
name|'dict'
op|'('
name|'constraints'
op|'.'
name|'EFFECTIVE_CONSTRAINTS'
op|')'
newline|'\n'
nl|'\n'
comment|"# We'll update those constraints based on what the /info API provides, if"
nl|'\n'
comment|'# anything.'
nl|'\n'
name|'global'
name|'cluster_info'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'='
name|'Connection'
op|'('
name|'config'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'authenticate'
op|'('
op|')'
newline|'\n'
name|'cluster_info'
op|'.'
name|'update'
op|'('
name|'conn'
op|'.'
name|'cluster_info'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'ResponseError'
op|','
name|'socket'
op|'.'
name|'error'
op|')'
op|':'
newline|'\n'
comment|'# Failed to get cluster_information via /info API, so fall back on'
nl|'\n'
comment|'# test.conf data'
nl|'\n'
indent|'        '
name|'pass'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'eff_constraints'
op|'.'
name|'update'
op|'('
name|'cluster_info'
op|'['
string|"'swift'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
comment|'# Most likely the swift cluster has "expose_info = false" set'
nl|'\n'
comment|"# in its proxy-server.conf file, so we'll just do the best we"
nl|'\n'
comment|'# can.'
nl|'\n'
indent|'            '
name|'print'
op|'>>'
name|'sys'
op|'.'
name|'stderr'
op|','
string|'"** Swift Cluster not exposing /info **"'
newline|'\n'
nl|'\n'
comment|"# Finally, we'll allow any constraint present in the swift-constraints"
nl|'\n'
comment|'# section of test.conf to override everything. Note that only those'
nl|'\n'
comment|'# constraints defined in the constraints module are converted to integers.'
nl|'\n'
dedent|''
dedent|''
name|'test_constraints'
op|'='
name|'get_config'
op|'('
string|"'swift-constraints'"
op|')'
newline|'\n'
name|'for'
name|'k'
name|'in'
name|'constraints'
op|'.'
name|'DEFAULT_CONSTRAINTS'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'test_constraints'
op|'['
name|'k'
op|']'
op|'='
name|'int'
op|'('
name|'test_constraints'
op|'['
name|'k'
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'print'
op|'>>'
name|'sys'
op|'.'
name|'stderr'
op|','
string|'"Invalid constraint value: %s = %s"'
op|'%'
op|'('
nl|'\n'
name|'k'
op|','
name|'test_constraints'
op|'['
name|'k'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'eff_constraints'
op|'.'
name|'update'
op|'('
name|'test_constraints'
op|')'
newline|'\n'
nl|'\n'
comment|'# Just make it look like these constraints were loaded from a /info call,'
nl|'\n'
comment|'# even if the /info call failed, or when they are overridden by values'
nl|'\n'
comment|'# from the swift-constraints section of test.conf'
nl|'\n'
name|'cluster_info'
op|'['
string|"'swift'"
op|']'
op|'='
name|'eff_constraints'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|setup_package
dedent|''
name|'def'
name|'setup_package'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'in_process_env'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'SWIFT_TEST_IN_PROCESS'"
op|')'
newline|'\n'
name|'if'
name|'in_process_env'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'        '
name|'use_in_process'
op|'='
name|'utils'
op|'.'
name|'config_true_value'
op|'('
name|'in_process_env'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'use_in_process'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'global'
name|'in_process'
newline|'\n'
nl|'\n'
name|'if'
name|'use_in_process'
op|':'
newline|'\n'
comment|'# Explicitly set to True, so barrel on ahead with in-process'
nl|'\n'
comment|'# functional test setup.'
nl|'\n'
indent|'        '
name|'in_process'
op|'='
name|'True'
newline|'\n'
comment|'# NOTE: No attempt is made to a read local test.conf file.'
nl|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'use_in_process'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# Not explicitly set, default to using in-process functional tests'
nl|'\n'
comment|'# if the test.conf file is not found, or does not provide a usable'
nl|'\n'
comment|'# configuration.'
nl|'\n'
indent|'            '
name|'config'
op|'.'
name|'update'
op|'('
name|'get_config'
op|'('
string|"'func_test'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'config'
op|':'
newline|'\n'
indent|'                '
name|'in_process'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'in_process'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# Explicitly set to False, do not attempt to use in-process'
nl|'\n'
comment|'# functional tests, be sure we attempt to read from local'
nl|'\n'
comment|'# test.conf file.'
nl|'\n'
indent|'            '
name|'in_process'
op|'='
name|'False'
newline|'\n'
name|'config'
op|'.'
name|'update'
op|'('
name|'get_config'
op|'('
string|"'func_test'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'in_process'
op|':'
newline|'\n'
indent|'        '
name|'in_mem_obj_env'
op|'='
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'SWIFT_TEST_IN_MEMORY_OBJ'"
op|')'
newline|'\n'
name|'in_mem_obj'
op|'='
name|'utils'
op|'.'
name|'config_true_value'
op|'('
name|'in_mem_obj_env'
op|')'
newline|'\n'
name|'in_process_setup'
op|'('
name|'the_object_server'
op|'='
op|'('
nl|'\n'
name|'mem_object_server'
name|'if'
name|'in_mem_obj'
name|'else'
name|'object_server'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'global'
name|'web_front_end'
newline|'\n'
name|'web_front_end'
op|'='
name|'config'
op|'.'
name|'get'
op|'('
string|"'web_front_end'"
op|','
string|"'integral'"
op|')'
newline|'\n'
name|'global'
name|'normalized_urls'
newline|'\n'
name|'normalized_urls'
op|'='
name|'config'
op|'.'
name|'get'
op|'('
string|"'normalized_urls'"
op|','
name|'False'
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'orig_collate'
newline|'\n'
name|'orig_collate'
op|'='
name|'locale'
op|'.'
name|'setlocale'
op|'('
name|'locale'
op|'.'
name|'LC_COLLATE'
op|')'
newline|'\n'
name|'locale'
op|'.'
name|'setlocale'
op|'('
name|'locale'
op|'.'
name|'LC_COLLATE'
op|','
name|'config'
op|'.'
name|'get'
op|'('
string|"'collate'"
op|','
string|"'C'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'insecure'
newline|'\n'
name|'insecure'
op|'='
name|'config_true_value'
op|'('
name|'config'
op|'.'
name|'get'
op|'('
string|"'insecure'"
op|','
name|'False'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'swift_test_auth_version'
newline|'\n'
name|'global'
name|'swift_test_auth'
newline|'\n'
name|'global'
name|'swift_test_user'
newline|'\n'
name|'global'
name|'swift_test_key'
newline|'\n'
name|'global'
name|'swift_test_tenant'
newline|'\n'
name|'global'
name|'swift_test_perm'
newline|'\n'
name|'global'
name|'swift_test_domain'
newline|'\n'
name|'global'
name|'swift_test_service_prefix'
newline|'\n'
nl|'\n'
name|'swift_test_service_prefix'
op|'='
name|'None'
newline|'\n'
nl|'\n'
name|'if'
name|'config'
op|':'
newline|'\n'
indent|'        '
name|'swift_test_auth_version'
op|'='
name|'str'
op|'('
name|'config'
op|'.'
name|'get'
op|'('
string|"'auth_version'"
op|','
string|"'1'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'swift_test_auth'
op|'='
string|"'http'"
newline|'\n'
name|'if'
name|'config_true_value'
op|'('
name|'config'
op|'.'
name|'get'
op|'('
string|"'auth_ssl'"
op|','
string|"'no'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'swift_test_auth'
op|'='
string|"'https'"
newline|'\n'
dedent|''
name|'if'
string|"'auth_prefix'"
name|'not'
name|'in'
name|'config'
op|':'
newline|'\n'
indent|'            '
name|'config'
op|'['
string|"'auth_prefix'"
op|']'
op|'='
string|"'/'"
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'suffix'
op|'='
string|"'://%(auth_host)s:%(auth_port)s%(auth_prefix)s'"
op|'%'
name|'config'
newline|'\n'
name|'swift_test_auth'
op|'+='
name|'suffix'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
comment|'# skip'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'service_prefix'"
name|'in'
name|'config'
op|':'
newline|'\n'
indent|'                '
name|'swift_test_service_prefix'
op|'='
name|'utils'
op|'.'
name|'append_underscore'
op|'('
nl|'\n'
name|'config'
op|'['
string|"'service_prefix'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'swift_test_auth_version'
op|'=='
string|'"1"'
op|':'
newline|'\n'
indent|'            '
name|'swift_test_auth'
op|'+='
string|"'v1.0'"
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'if'
string|"'account'"
name|'in'
name|'config'
op|':'
newline|'\n'
indent|'                    '
name|'swift_test_user'
op|'['
number|'0'
op|']'
op|'='
string|"'%(account)s:%(username)s'"
op|'%'
name|'config'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'swift_test_user'
op|'['
number|'0'
op|']'
op|'='
string|"'%(username)s'"
op|'%'
name|'config'
newline|'\n'
dedent|''
name|'swift_test_key'
op|'['
number|'0'
op|']'
op|'='
name|'config'
op|'['
string|"'password'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
comment|'# bad config, no account/username configured, tests cannot be'
nl|'\n'
comment|'# run'
nl|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'swift_test_user'
op|'['
number|'1'
op|']'
op|'='
string|"'%s%s'"
op|'%'
op|'('
nl|'\n'
string|"'%s:'"
op|'%'
name|'config'
op|'['
string|"'account2'"
op|']'
name|'if'
string|"'account2'"
name|'in'
name|'config'
name|'else'
string|"''"
op|','
nl|'\n'
name|'config'
op|'['
string|"'username2'"
op|']'
op|')'
newline|'\n'
name|'swift_test_key'
op|'['
number|'1'
op|']'
op|'='
name|'config'
op|'['
string|"'password2'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
comment|'# old config, no second account tests can be run'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'swift_test_user'
op|'['
number|'2'
op|']'
op|'='
string|"'%s%s'"
op|'%'
op|'('
nl|'\n'
string|"'%s:'"
op|'%'
name|'config'
op|'['
string|"'account'"
op|']'
name|'if'
string|"'account'"
nl|'\n'
name|'in'
name|'config'
name|'else'
string|"''"
op|','
name|'config'
op|'['
string|"'username3'"
op|']'
op|')'
newline|'\n'
name|'swift_test_key'
op|'['
number|'2'
op|']'
op|'='
name|'config'
op|'['
string|"'password3'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
comment|'# old config, no third account tests can be run'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'swift_test_user'
op|'['
number|'4'
op|']'
op|'='
string|"'%s%s'"
op|'%'
op|'('
nl|'\n'
string|"'%s:'"
op|'%'
name|'config'
op|'['
string|"'account5'"
op|']'
op|','
name|'config'
op|'['
string|"'username5'"
op|']'
op|')'
newline|'\n'
name|'swift_test_key'
op|'['
number|'4'
op|']'
op|'='
name|'config'
op|'['
string|"'password5'"
op|']'
newline|'\n'
name|'swift_test_tenant'
op|'['
number|'4'
op|']'
op|'='
name|'config'
op|'['
string|"'account5'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
comment|'# no service token tests can be run'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'_'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'swift_test_perm'
op|'['
name|'_'
op|']'
op|'='
name|'swift_test_user'
op|'['
name|'_'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'swift_test_user'
op|'['
number|'0'
op|']'
op|'='
name|'config'
op|'['
string|"'username'"
op|']'
newline|'\n'
name|'swift_test_tenant'
op|'['
number|'0'
op|']'
op|'='
name|'config'
op|'['
string|"'account'"
op|']'
newline|'\n'
name|'swift_test_key'
op|'['
number|'0'
op|']'
op|'='
name|'config'
op|'['
string|"'password'"
op|']'
newline|'\n'
name|'swift_test_user'
op|'['
number|'1'
op|']'
op|'='
name|'config'
op|'['
string|"'username2'"
op|']'
newline|'\n'
name|'swift_test_tenant'
op|'['
number|'1'
op|']'
op|'='
name|'config'
op|'['
string|"'account2'"
op|']'
newline|'\n'
name|'swift_test_key'
op|'['
number|'1'
op|']'
op|'='
name|'config'
op|'['
string|"'password2'"
op|']'
newline|'\n'
name|'swift_test_user'
op|'['
number|'2'
op|']'
op|'='
name|'config'
op|'['
string|"'username3'"
op|']'
newline|'\n'
name|'swift_test_tenant'
op|'['
number|'2'
op|']'
op|'='
name|'config'
op|'['
string|"'account'"
op|']'
newline|'\n'
name|'swift_test_key'
op|'['
number|'2'
op|']'
op|'='
name|'config'
op|'['
string|"'password3'"
op|']'
newline|'\n'
name|'if'
string|"'username4'"
name|'in'
name|'config'
op|':'
newline|'\n'
indent|'                '
name|'swift_test_user'
op|'['
number|'3'
op|']'
op|'='
name|'config'
op|'['
string|"'username4'"
op|']'
newline|'\n'
name|'swift_test_tenant'
op|'['
number|'3'
op|']'
op|'='
name|'config'
op|'['
string|"'account4'"
op|']'
newline|'\n'
name|'swift_test_key'
op|'['
number|'3'
op|']'
op|'='
name|'config'
op|'['
string|"'password4'"
op|']'
newline|'\n'
name|'swift_test_domain'
op|'['
number|'3'
op|']'
op|'='
name|'config'
op|'['
string|"'domain4'"
op|']'
newline|'\n'
dedent|''
name|'if'
string|"'username5'"
name|'in'
name|'config'
op|':'
newline|'\n'
indent|'                '
name|'swift_test_user'
op|'['
number|'4'
op|']'
op|'='
name|'config'
op|'['
string|"'username5'"
op|']'
newline|'\n'
name|'swift_test_tenant'
op|'['
number|'4'
op|']'
op|'='
name|'config'
op|'['
string|"'account5'"
op|']'
newline|'\n'
name|'swift_test_key'
op|'['
number|'4'
op|']'
op|'='
name|'config'
op|'['
string|"'password5'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'_'
name|'in'
name|'range'
op|'('
number|'5'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'swift_test_perm'
op|'['
name|'_'
op|']'
op|'='
name|'swift_test_tenant'
op|'['
name|'_'
op|']'
op|'+'
string|"':'"
op|'+'
name|'swift_test_user'
op|'['
name|'_'
op|']'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'global'
name|'skip'
newline|'\n'
name|'skip'
op|'='
name|'not'
name|'all'
op|'('
op|'['
name|'swift_test_auth'
op|','
name|'swift_test_user'
op|'['
number|'0'
op|']'
op|','
name|'swift_test_key'
op|'['
number|'0'
op|']'
op|']'
op|')'
newline|'\n'
name|'if'
name|'skip'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'>>'
name|'sys'
op|'.'
name|'stderr'
op|','
string|"'SKIPPING FUNCTIONAL TESTS DUE TO NO CONFIG'"
newline|'\n'
nl|'\n'
dedent|''
name|'global'
name|'skip2'
newline|'\n'
name|'skip2'
op|'='
name|'not'
name|'all'
op|'('
op|'['
name|'not'
name|'skip'
op|','
name|'swift_test_user'
op|'['
number|'1'
op|']'
op|','
name|'swift_test_key'
op|'['
number|'1'
op|']'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'skip'
name|'and'
name|'skip2'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'>>'
name|'sys'
op|'.'
name|'stderr'
op|','
string|"'SKIPPING SECOND ACCOUNT FUNCTIONAL TESTS'"
string|"' DUE TO NO CONFIG FOR THEM'"
newline|'\n'
nl|'\n'
dedent|''
name|'global'
name|'skip3'
newline|'\n'
name|'skip3'
op|'='
name|'not'
name|'all'
op|'('
op|'['
name|'not'
name|'skip'
op|','
name|'swift_test_user'
op|'['
number|'2'
op|']'
op|','
name|'swift_test_key'
op|'['
number|'2'
op|']'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'skip'
name|'and'
name|'skip3'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'>>'
name|'sys'
op|'.'
name|'stderr'
op|','
string|"'SKIPPING THIRD ACCOUNT FUNCTIONAL TESTS DUE TO NO CONFIG FOR THEM'"
newline|'\n'
nl|'\n'
dedent|''
name|'global'
name|'skip_if_not_v3'
newline|'\n'
name|'skip_if_not_v3'
op|'='
op|'('
name|'swift_test_auth_version'
op|'!='
string|"'3'"
nl|'\n'
name|'or'
name|'not'
name|'all'
op|'('
op|'['
name|'not'
name|'skip'
op|','
nl|'\n'
name|'swift_test_user'
op|'['
number|'3'
op|']'
op|','
nl|'\n'
name|'swift_test_key'
op|'['
number|'3'
op|']'
op|']'
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'skip'
name|'and'
name|'skip_if_not_v3'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'>>'
name|'sys'
op|'.'
name|'stderr'
op|','
string|"'SKIPPING FUNCTIONAL TESTS SPECIFIC TO AUTH VERSION 3'"
newline|'\n'
nl|'\n'
dedent|''
name|'global'
name|'skip_service_tokens'
newline|'\n'
name|'skip_service_tokens'
op|'='
name|'not'
name|'all'
op|'('
op|'['
name|'not'
name|'skip'
op|','
name|'swift_test_user'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'swift_test_key'
op|'['
number|'4'
op|']'
op|','
name|'swift_test_tenant'
op|'['
number|'4'
op|']'
op|','
nl|'\n'
name|'swift_test_service_prefix'
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'skip'
name|'and'
name|'skip_service_tokens'
op|':'
newline|'\n'
indent|'        '
name|'print'
op|'>>'
name|'sys'
op|'.'
name|'stderr'
op|','
string|"'SKIPPING FUNCTIONAL TESTS SPECIFIC TO SERVICE TOKENS'"
newline|'\n'
nl|'\n'
dedent|''
name|'get_cluster_info'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|teardown_package
dedent|''
name|'def'
name|'teardown_package'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'orig_collate'
newline|'\n'
name|'locale'
op|'.'
name|'setlocale'
op|'('
name|'locale'
op|'.'
name|'LC_COLLATE'
op|','
name|'orig_collate'
op|')'
newline|'\n'
nl|'\n'
comment|'# clean up containers and objects left behind after running tests'
nl|'\n'
name|'conn'
op|'='
name|'Connection'
op|'('
name|'config'
op|')'
newline|'\n'
name|'conn'
op|'.'
name|'authenticate'
op|'('
op|')'
newline|'\n'
name|'account'
op|'='
name|'Account'
op|'('
name|'conn'
op|','
name|'config'
op|'.'
name|'get'
op|'('
string|"'account'"
op|','
name|'config'
op|'['
string|"'username'"
op|']'
op|')'
op|')'
newline|'\n'
name|'account'
op|'.'
name|'delete_containers'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'global'
name|'in_process'
newline|'\n'
name|'if'
name|'in_process'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'server'
name|'in'
name|'_test_coros'
op|':'
newline|'\n'
indent|'                '
name|'server'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'rmtree'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'_testdir'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'utils'
op|'.'
name|'HASH_PATH_PREFIX'
op|','
name|'utils'
op|'.'
name|'HASH_PATH_SUFFIX'
op|'='
name|'orig_hash_path_suff_pref'
newline|'\n'
name|'utils'
op|'.'
name|'SWIFT_CONF_FILE'
op|'='
name|'orig_swift_conf_name'
newline|'\n'
name|'constraints'
op|'.'
name|'reload_constraints'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AuthError
dedent|''
dedent|''
name|'class'
name|'AuthError'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|InternalServerError
dedent|''
name|'class'
name|'InternalServerError'
op|'('
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|url
dedent|''
name|'url'
op|'='
op|'['
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|']'
newline|'\n'
DECL|variable|token
name|'token'
op|'='
op|'['
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|']'
newline|'\n'
DECL|variable|service_token
name|'service_token'
op|'='
op|'['
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|']'
newline|'\n'
DECL|variable|parsed
name|'parsed'
op|'='
op|'['
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|']'
newline|'\n'
DECL|variable|conn
name|'conn'
op|'='
op|'['
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|','
name|'None'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|connection
name|'def'
name|'connection'
op|'('
name|'url'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'has_insecure'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'http_connection'
op|'('
name|'url'
op|','
name|'insecure'
op|'='
name|'insecure'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'http_connection'
op|'('
name|'url'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_url_token
dedent|''
name|'def'
name|'get_url_token'
op|'('
name|'user_index'
op|','
name|'os_options'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'authargs'
op|'='
name|'dict'
op|'('
name|'snet'
op|'='
name|'False'
op|','
nl|'\n'
name|'tenant_name'
op|'='
name|'swift_test_tenant'
op|'['
name|'user_index'
op|']'
op|','
nl|'\n'
name|'auth_version'
op|'='
name|'swift_test_auth_version'
op|','
nl|'\n'
name|'os_options'
op|'='
name|'os_options'
op|','
nl|'\n'
name|'insecure'
op|'='
name|'insecure'
op|')'
newline|'\n'
name|'return'
name|'get_auth'
op|'('
name|'swift_test_auth'
op|','
nl|'\n'
name|'swift_test_user'
op|'['
name|'user_index'
op|']'
op|','
nl|'\n'
name|'swift_test_key'
op|'['
name|'user_index'
op|']'
op|','
nl|'\n'
op|'**'
name|'authargs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|retry
dedent|''
name|'def'
name|'retry'
op|'('
name|'func'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    You can use the kwargs to override:\n      \'retries\' (default: 5)\n      \'use_account\' (default: 1) - which user\'s token to pass\n      \'url_account\' (default: matches \'use_account\') - which user\'s storage URL\n      \'resource\' (default: url[url_account] - URL to connect to; retry()\n          will interpolate the variable :storage_url: if present\n      \'service_user\' - add a service token from this user (1 indexed)\n    """'
newline|'\n'
name|'global'
name|'url'
op|','
name|'token'
op|','
name|'service_token'
op|','
name|'parsed'
op|','
name|'conn'
newline|'\n'
name|'retries'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'retries'"
op|','
number|'5'
op|')'
newline|'\n'
name|'attempts'
op|','
name|'backoff'
op|'='
number|'0'
op|','
number|'1'
newline|'\n'
nl|'\n'
comment|"# use account #1 by default; turn user's 1-indexed account into 0-indexed"
nl|'\n'
name|'use_account'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'use_account'"
op|','
number|'1'
op|')'
op|'-'
number|'1'
newline|'\n'
name|'service_user'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'service_user'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'service_user'
op|':'
newline|'\n'
indent|'        '
name|'service_user'
op|'-='
number|'1'
comment|'# 0-index'
newline|'\n'
nl|'\n'
comment|'# access our own account by default'
nl|'\n'
dedent|''
name|'url_account'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'url_account'"
op|','
name|'use_account'
op|'+'
number|'1'
op|')'
op|'-'
number|'1'
newline|'\n'
name|'os_options'
op|'='
op|'{'
string|"'user_domain_name'"
op|':'
name|'swift_test_domain'
op|'['
name|'use_account'
op|']'
op|','
nl|'\n'
string|"'project_domain_name'"
op|':'
name|'swift_test_domain'
op|'['
name|'use_account'
op|']'
op|'}'
newline|'\n'
name|'while'
name|'attempts'
op|'<='
name|'retries'
op|':'
newline|'\n'
indent|'        '
name|'attempts'
op|'+='
number|'1'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'url'
op|'['
name|'use_account'
op|']'
name|'or'
name|'not'
name|'token'
op|'['
name|'use_account'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'url'
op|'['
name|'use_account'
op|']'
op|','
name|'token'
op|'['
name|'use_account'
op|']'
op|'='
name|'get_url_token'
op|'('
nl|'\n'
name|'use_account'
op|','
name|'os_options'
op|')'
newline|'\n'
name|'parsed'
op|'['
name|'use_account'
op|']'
op|'='
name|'conn'
op|'['
name|'use_account'
op|']'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'parsed'
op|'['
name|'use_account'
op|']'
name|'or'
name|'not'
name|'conn'
op|'['
name|'use_account'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'parsed'
op|'['
name|'use_account'
op|']'
op|','
name|'conn'
op|'['
name|'use_account'
op|']'
op|'='
name|'connection'
op|'('
name|'url'
op|'['
name|'use_account'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# default resource is the account url[url_account]'
nl|'\n'
dedent|''
name|'resource'
op|'='
name|'kwargs'
op|'.'
name|'pop'
op|'('
string|"'resource'"
op|','
string|"'%(storage_url)s'"
op|')'
newline|'\n'
name|'template_vars'
op|'='
op|'{'
string|"'storage_url'"
op|':'
name|'url'
op|'['
name|'url_account'
op|']'
op|'}'
newline|'\n'
name|'parsed_result'
op|'='
name|'urlparse'
op|'('
name|'resource'
op|'%'
name|'template_vars'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'service_user'
op|','
name|'int'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'service_token'
op|'['
name|'service_user'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'dummy'
op|','
name|'service_token'
op|'['
name|'service_user'
op|']'
op|'='
name|'get_url_token'
op|'('
nl|'\n'
name|'service_user'
op|','
name|'os_options'
op|')'
newline|'\n'
dedent|''
name|'kwargs'
op|'['
string|"'service_token'"
op|']'
op|'='
name|'service_token'
op|'['
name|'service_user'
op|']'
newline|'\n'
dedent|''
name|'return'
name|'func'
op|'('
name|'url'
op|'['
name|'url_account'
op|']'
op|','
name|'token'
op|'['
name|'use_account'
op|']'
op|','
nl|'\n'
name|'parsed_result'
op|','
name|'conn'
op|'['
name|'url_account'
op|']'
op|','
nl|'\n'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'socket'
op|'.'
name|'error'
op|','
name|'HTTPException'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'attempts'
op|'>'
name|'retries'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
name|'parsed'
op|'['
name|'use_account'
op|']'
op|'='
name|'conn'
op|'['
name|'use_account'
op|']'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'service_user'
op|':'
newline|'\n'
indent|'                '
name|'service_token'
op|'['
name|'service_user'
op|']'
op|'='
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'AuthError'
op|':'
newline|'\n'
indent|'            '
name|'url'
op|'['
name|'use_account'
op|']'
op|'='
name|'token'
op|'['
name|'use_account'
op|']'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'service_user'
op|':'
newline|'\n'
indent|'                '
name|'service_token'
op|'['
name|'service_user'
op|']'
op|'='
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'InternalServerError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'if'
name|'attempts'
op|'<='
name|'retries'
op|':'
newline|'\n'
indent|'            '
name|'sleep'
op|'('
name|'backoff'
op|')'
newline|'\n'
name|'backoff'
op|'*='
number|'2'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'Exception'
op|'('
string|"'No result after %s retries.'"
op|'%'
name|'retries'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|check_response
dedent|''
name|'def'
name|'check_response'
op|'('
name|'conn'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'=='
number|'401'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'raise'
name|'AuthError'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'resp'
op|'.'
name|'status'
op|'//'
number|'100'
op|'=='
number|'5'
op|':'
newline|'\n'
indent|'        '
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'raise'
name|'InternalServerError'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|load_constraint
dedent|''
name|'def'
name|'load_constraint'
op|'('
name|'name'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'global'
name|'cluster_info'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'c'
op|'='
name|'cluster_info'
op|'['
string|"'swift'"
op|']'
op|'['
name|'name'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
op|'('
string|'"Missing constraint: %s"'
op|'%'
name|'name'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'isinstance'
op|'('
name|'c'
op|','
name|'int'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
op|'('
string|'"Bad value, %r, for constraint: %s"'
op|'%'
op|'('
name|'c'
op|','
name|'name'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'c'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_storage_policy_from_cluster_info
dedent|''
name|'def'
name|'get_storage_policy_from_cluster_info'
op|'('
name|'info'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'policies'
op|'='
name|'info'
op|'['
string|"'swift'"
op|']'
op|'.'
name|'get'
op|'('
string|"'policies'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'default_policy'
op|'='
op|'['
op|']'
newline|'\n'
name|'non_default_policies'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'p'
name|'in'
name|'policies'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'p'
op|'.'
name|'get'
op|'('
string|"'default'"
op|','
op|'{'
op|'}'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'default_policy'
op|'.'
name|'append'
op|'('
name|'p'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'non_default_policies'
op|'.'
name|'append'
op|'('
name|'p'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'default_policy'
op|','
name|'non_default_policies'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|reset_acl
dedent|''
name|'def'
name|'reset_acl'
op|'('
op|')'
op|':'
newline|'\n'
DECL|function|post
indent|'    '
name|'def'
name|'post'
op|'('
name|'url'
op|','
name|'token'
op|','
name|'parsed'
op|','
name|'conn'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conn'
op|'.'
name|'request'
op|'('
string|"'POST'"
op|','
name|'parsed'
op|'.'
name|'path'
op|','
string|"''"
op|','
op|'{'
nl|'\n'
string|"'X-Auth-Token'"
op|':'
name|'token'
op|','
nl|'\n'
string|"'X-Account-Access-Control'"
op|':'
string|"'{}'"
nl|'\n'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'check_response'
op|'('
name|'conn'
op|')'
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'retry'
op|'('
name|'post'
op|','
name|'use_account'
op|'='
number|'1'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|requires_acls
dedent|''
name|'def'
name|'requires_acls'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'functools'
op|'.'
name|'wraps'
op|'('
name|'f'
op|')'
newline|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'global'
name|'skip'
op|','
name|'cluster_info'
newline|'\n'
name|'if'
name|'skip'
name|'or'
name|'not'
name|'cluster_info'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'SkipTest'
op|'('
string|"'Requires account ACLs'"
op|')'
newline|'\n'
comment|'# Determine whether this cluster has account ACLs; if not, skip test'
nl|'\n'
dedent|''
name|'if'
name|'not'
name|'cluster_info'
op|'.'
name|'get'
op|'('
string|"'tempauth'"
op|','
op|'{'
op|'}'
op|')'
op|'.'
name|'get'
op|'('
string|"'account_acls'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'SkipTest'
op|'('
string|"'Requires account ACLs'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'swift_test_auth_version'
op|'!='
string|"'1'"
op|':'
newline|'\n'
comment|'# remove when keystoneauth supports account acls'
nl|'\n'
indent|'            '
name|'raise'
name|'SkipTest'
op|'('
string|"'Requires account ACLs'"
op|')'
newline|'\n'
dedent|''
name|'reset_acl'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'rv'
op|'='
name|'f'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'reset_acl'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
name|'rv'
newline|'\n'
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FunctionalStoragePolicyCollection
dedent|''
name|'class'
name|'FunctionalStoragePolicyCollection'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'policies'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'_all'
op|'='
name|'policies'
newline|'\n'
name|'self'
op|'.'
name|'default'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'p'
name|'in'
name|'self'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'p'
op|'.'
name|'get'
op|'('
string|"'default'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'assert'
name|'self'
op|'.'
name|'default'
name|'is'
name|'None'
op|','
string|"'Found multiple default '"
string|"'policies %r and %r'"
op|'%'
op|'('
name|'self'
op|'.'
name|'default'
op|','
name|'p'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'default'
op|'='
name|'p'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|from_info
name|'def'
name|'from_info'
op|'('
name|'cls'
op|','
name|'info'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'not'
op|'('
name|'info'
name|'or'
name|'cluster_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'get_cluster_info'
op|'('
op|')'
newline|'\n'
dedent|''
name|'info'
op|'='
name|'info'
name|'or'
name|'cluster_info'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'policy_info'
op|'='
name|'info'
op|'['
string|"'swift'"
op|']'
op|'['
string|"'policies'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'AssertionError'
op|'('
string|"'Did not find any policy info in %r'"
op|'%'
name|'info'
op|')'
newline|'\n'
dedent|''
name|'policies'
op|'='
name|'cls'
op|'('
name|'policy_info'
op|')'
newline|'\n'
name|'assert'
name|'policies'
op|'.'
name|'default'
op|','
string|"'Did not find default policy in %r'"
op|'%'
name|'policy_info'
newline|'\n'
name|'return'
name|'policies'
newline|'\n'
nl|'\n'
DECL|member|__len__
dedent|''
name|'def'
name|'__len__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'len'
op|'('
name|'self'
op|'.'
name|'_all'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'iter'
op|'('
name|'self'
op|'.'
name|'_all'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getitem__
dedent|''
name|'def'
name|'__getitem__'
op|'('
name|'self'
op|','
name|'index'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_all'
op|'['
name|'index'
op|']'
newline|'\n'
nl|'\n'
DECL|member|filter
dedent|''
name|'def'
name|'filter'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'__class__'
op|'('
op|'['
name|'p'
name|'for'
name|'p'
name|'in'
name|'self'
name|'if'
name|'all'
op|'('
nl|'\n'
name|'p'
op|'.'
name|'get'
op|'('
name|'k'
op|')'
op|'=='
name|'v'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'kwargs'
op|'.'
name|'items'
op|'('
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|exclude
dedent|''
name|'def'
name|'exclude'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'__class__'
op|'('
op|'['
name|'p'
name|'for'
name|'p'
name|'in'
name|'self'
name|'if'
name|'all'
op|'('
nl|'\n'
name|'p'
op|'.'
name|'get'
op|'('
name|'k'
op|')'
op|'!='
name|'v'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'kwargs'
op|'.'
name|'items'
op|'('
op|')'
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|select
dedent|''
name|'def'
name|'select'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'random'
op|'.'
name|'choice'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|requires_policies
dedent|''
dedent|''
name|'def'
name|'requires_policies'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'functools'
op|'.'
name|'wraps'
op|'('
name|'f'
op|')'
newline|'\n'
DECL|function|wrapper
name|'def'
name|'wrapper'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'skip'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'SkipTest'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'policies'
op|'='
name|'FunctionalStoragePolicyCollection'
op|'.'
name|'from_info'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AssertionError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'SkipTest'
op|'('
string|'"Unable to determine available policies"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'len'
op|'('
name|'self'
op|'.'
name|'policies'
op|')'
op|'<'
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'SkipTest'
op|'('
string|'"Multiple policies not enabled"'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'f'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'wrapper'
newline|'\n'
dedent|''
endmarker|''
end_unit
