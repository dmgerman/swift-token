begin_unit
comment|'# Copyright (c) 2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'header_key_dict'
name|'import'
name|'HeaderKeyDict'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestHeaderKeyDict
name|'class'
name|'TestHeaderKeyDict'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_case_insensitive
indent|'    '
name|'def'
name|'test_case_insensitive'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'headers'
op|'['
string|"'CONTENT-LENGTH'"
op|']'
op|'='
number|'10'
newline|'\n'
name|'headers'
op|'['
string|"'content-length'"
op|']'
op|'='
number|'20'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'20'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'content-length'"
op|']'
op|','
string|"'20'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'CONTENT-LENGTH'"
op|']'
op|','
string|"'20'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_setdefault
dedent|''
name|'def'
name|'test_setdefault'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# it gets set'
nl|'\n'
name|'headers'
op|'.'
name|'setdefault'
op|'('
string|"'x-rubber-ducky'"
op|','
string|"'the one'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'X-Rubber-Ducky'"
op|']'
op|','
string|"'the one'"
op|')'
newline|'\n'
nl|'\n'
comment|'# it has the right return value'
nl|'\n'
name|'ret'
op|'='
name|'headers'
op|'.'
name|'setdefault'
op|'('
string|"'x-boat'"
op|','
string|"'dinghy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret'
op|','
string|"'dinghy'"
op|')'
newline|'\n'
nl|'\n'
name|'ret'
op|'='
name|'headers'
op|'.'
name|'setdefault'
op|'('
string|"'x-boat'"
op|','
string|"'yacht'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'ret'
op|','
string|"'dinghy'"
op|')'
newline|'\n'
nl|'\n'
comment|"# shouldn't crash"
nl|'\n'
name|'headers'
op|'.'
name|'setdefault'
op|'('
string|"'x-sir-not-appearing-in-this-request'"
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_del_contains
dedent|''
name|'def'
name|'test_del_contains'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Content-Length'"
name|'in'
name|'headers'
op|')'
newline|'\n'
name|'del'
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'Content-Length'"
name|'not'
name|'in'
name|'headers'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update
dedent|''
name|'def'
name|'test_update'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'.'
name|'update'
op|'('
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|'}'
op|')'
newline|'\n'
name|'headers'
op|'.'
name|'update'
op|'('
op|'['
op|'('
string|"'Content-Type'"
op|','
string|"'text/plain'"
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|','
string|"'text/plain'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get
dedent|''
name|'def'
name|'test_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'content-length'"
op|']'
op|'='
number|'20'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|"'CONTENT-LENGTH'"
op|')'
op|','
string|"'20'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|"'something-else'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|"'something-else'"
op|','
name|'True'
op|')'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_keys
dedent|''
name|'def'
name|'test_keys'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|')'
newline|'\n'
name|'headers'
op|'['
string|"'content-length'"
op|']'
op|'='
number|'20'
newline|'\n'
name|'headers'
op|'['
string|"'cOnTent-tYpe'"
op|']'
op|'='
string|"'text/plain'"
newline|'\n'
name|'headers'
op|'['
string|"'SomeThing-eLse'"
op|']'
op|'='
string|"'somevalue'"
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'set'
op|'('
name|'headers'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'set'
op|'('
op|'('
string|"'Content-Length'"
op|','
string|"'Content-Type'"
op|','
string|"'Something-Else'"
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
