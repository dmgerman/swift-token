begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
comment|'# NOTE: swift_conn'
nl|'\n'
comment|"# You'll see swift_conn passed around a few places in this file. This is the"
nl|'\n'
comment|'# source httplib connection of whatever it is attached to.'
nl|'\n'
comment|'#   It is used when early termination of reading from the connection should'
nl|'\n'
comment|"# happen, such as when a range request is satisfied but there's still more the"
nl|'\n'
comment|'# source connection would like to send. To prevent having to read all the data'
nl|'\n'
comment|'# that could be left, the source connection can be .close() and then reads'
nl|'\n'
comment|'# commence to empty out any buffers.'
nl|'\n'
comment|'#   These shenanigans are to ensure all related objects can be garbage'
nl|'\n'
comment|"# collected. We've seen objects hang around forever otherwise."
nl|'\n'
nl|'\n'
name|'import'
name|'itertools'
newline|'\n'
name|'import'
name|'mimetypes'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'from'
name|'datetime'
name|'import'
name|'datetime'
newline|'\n'
name|'from'
name|'urllib'
name|'import'
name|'unquote'
op|','
name|'quote'
newline|'\n'
name|'from'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'sleep'
op|','
name|'GreenPile'
newline|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'queue'
name|'import'
name|'Queue'
newline|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'timeout'
name|'import'
name|'Timeout'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'ContextPool'
op|','
name|'normalize_timestamp'
op|','
name|'config_true_value'
op|','
name|'public'
op|','
name|'json'
op|','
name|'csv_append'
op|','
name|'GreenthreadSafeIterator'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'bufferedhttp'
name|'import'
name|'http_connect'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'constraints'
name|'import'
name|'check_metadata'
op|','
name|'check_object_creation'
op|','
name|'CONTAINER_LISTING_LIMIT'
op|','
name|'MAX_FILE_SIZE'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'ChunkReadTimeout'
op|','
name|'ChunkWriteTimeout'
op|','
name|'ConnectionTimeout'
op|','
name|'ListingIterNotFound'
op|','
name|'ListingIterNotAuthorized'
op|','
name|'ListingIterError'
op|','
name|'SloSegmentError'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'http'
name|'import'
name|'is_success'
op|','
name|'is_client_error'
op|','
name|'HTTP_CONTINUE'
op|','
name|'HTTP_CREATED'
op|','
name|'HTTP_MULTIPLE_CHOICES'
op|','
name|'HTTP_NOT_FOUND'
op|','
name|'HTTP_CONFLICT'
op|','
name|'HTTP_INTERNAL_SERVER_ERROR'
op|','
name|'HTTP_SERVICE_UNAVAILABLE'
op|','
name|'HTTP_INSUFFICIENT_STORAGE'
op|','
name|'HTTP_OK'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'proxy'
op|'.'
name|'controllers'
op|'.'
name|'base'
name|'import'
name|'Controller'
op|','
name|'delay_denial'
op|','
name|'cors_validation'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'HTTPAccepted'
op|','
name|'HTTPBadRequest'
op|','
name|'HTTPNotFound'
op|','
name|'HTTPPreconditionFailed'
op|','
name|'HTTPRequestEntityTooLarge'
op|','
name|'HTTPRequestTimeout'
op|','
name|'HTTPServerError'
op|','
name|'HTTPServiceUnavailable'
op|','
name|'Request'
op|','
name|'Response'
op|','
name|'HTTPClientDisconnect'
op|','
name|'HTTPNotImplemented'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|segment_listing_iter
name|'def'
name|'segment_listing_iter'
op|'('
name|'listing'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'listing'
op|'='
name|'iter'
op|'('
name|'listing'
op|')'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'        '
name|'seg_dict'
op|'='
name|'listing'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'seg_dict'
op|'['
string|"'name'"
op|']'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'seg_dict'
op|'['
string|"'name'"
op|']'
op|'='
name|'seg_dict'
op|'['
string|"'name'"
op|']'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
dedent|''
name|'yield'
name|'seg_dict'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|copy_headers_into
dedent|''
dedent|''
name|'def'
name|'copy_headers_into'
op|'('
name|'from_r'
op|','
name|'to_r'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Will copy desired headers from from_r to to_r\n    :params from_r: a swob Request or Response\n    :params to_r: a swob Request or Response\n    """'
newline|'\n'
name|'pass_headers'
op|'='
op|'['
string|"'x-delete-at'"
op|']'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'from_r'
op|'.'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-object-meta-'"
op|')'
name|'or'
name|'k'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
name|'pass_headers'
op|':'
newline|'\n'
indent|'            '
name|'to_r'
op|'.'
name|'headers'
op|'['
name|'k'
op|']'
op|'='
name|'v'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|check_content_type
dedent|''
dedent|''
dedent|''
name|'def'
name|'check_content_type'
op|'('
name|'req'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'if'
name|'not'
name|'req'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'swift.content_type_overriden'"
op|')'
name|'and'
string|"';'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'content-type'"
op|','
string|"''"
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'param'
name|'in'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|'.'
name|'split'
op|'('
string|"';'"
op|')'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'param'
op|'.'
name|'lstrip'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'swift_'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPBadRequest'
op|'('
string|'"Invalid Content-Type, "'
nl|'\n'
string|'"swift_* is not a valid parameter name."'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|SegmentedIterable
dedent|''
name|'class'
name|'SegmentedIterable'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Iterable that returns the object contents for a segmented object in Swift.\n\n    If there\'s a failure that cuts the transfer short, the response\'s\n    `status_int` will be updated (again, just for logging since the original\n    status would have already been sent to the client).\n\n    :param controller: The ObjectController instance to work with.\n    :param container: The container the object segments are within. If\n                      container is None will derive container from elements\n                      in listing using split(\'/\', 1).\n    :param listing: The listing of object segments to iterate over; this may\n                    be an iterator or list that returns dicts with \'name\' and\n                    \'bytes\' keys.\n    :param response: The swob.Response this iterable is associated with, if\n                     any (default: None)\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'controller'
op|','
name|'container'
op|','
name|'listing'
op|','
name|'response'
op|'='
name|'None'
op|','
nl|'\n'
name|'is_slo'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'controller'
op|'='
name|'controller'
newline|'\n'
name|'self'
op|'.'
name|'container'
op|'='
name|'container'
newline|'\n'
name|'self'
op|'.'
name|'listing'
op|'='
name|'segment_listing_iter'
op|'('
name|'listing'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'is_slo'
op|'='
name|'is_slo'
newline|'\n'
name|'self'
op|'.'
name|'ratelimit_index'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'segment_dict'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'segment_peek'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'seek'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'segment_iter'
op|'='
name|'None'
newline|'\n'
comment|'# See NOTE: swift_conn at top of file about this.'
nl|'\n'
name|'self'
op|'.'
name|'segment_iter_swift_conn'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'position'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'response'
op|'='
name|'response'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'response'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'response'
op|'='
name|'Response'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'next_get_time'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|_load_next_segment
dedent|''
name|'def'
name|'_load_next_segment'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Loads the self.segment_iter with the next object segment\'s contents.\n\n        :raises: StopIteration when there are no more object segments or\n                 segment no longer matches SLO manifest specifications.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'ratelimit_index'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'segment_dict'
op|'='
name|'self'
op|'.'
name|'segment_peek'
name|'or'
name|'self'
op|'.'
name|'listing'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'segment_peek'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'container'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'container'
op|','
name|'obj'
op|'='
name|'self'
op|'.'
name|'segment_dict'
op|'['
string|"'name'"
op|']'
op|'.'
name|'lstrip'
op|'('
string|"'/'"
op|')'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'container'
op|','
name|'obj'
op|'='
name|'self'
op|'.'
name|'container'
op|','
name|'self'
op|'.'
name|'segment_dict'
op|'['
string|"'name'"
op|']'
newline|'\n'
dedent|''
name|'partition'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|'.'
name|'get_part'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_name'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'path'
op|'='
string|"'/%s/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_name'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'path'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'seek'
op|':'
newline|'\n'
indent|'                '
name|'req'
op|'.'
name|'range'
op|'='
string|"'bytes=%s-'"
op|'%'
name|'self'
op|'.'
name|'seek'
newline|'\n'
name|'self'
op|'.'
name|'seek'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'is_slo'
name|'and'
name|'self'
op|'.'
name|'ratelimit_index'
op|'>'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'rate_limit_after_segment'
op|':'
newline|'\n'
indent|'                '
name|'sleep'
op|'('
name|'max'
op|'('
name|'self'
op|'.'
name|'next_get_time'
op|'-'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'next_get_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
number|'1.0'
op|'/'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'rate_limit_segments_per_sec'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'controller'
op|'.'
name|'GETorHEAD_base'
op|'('
nl|'\n'
name|'req'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|','
name|'partition'
op|','
nl|'\n'
name|'path'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'is_slo'
name|'and'
name|'resp'
op|'.'
name|'status_int'
op|'=='
name|'HTTP_NOT_FOUND'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'SloSegmentError'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'Could not load object segment %(path)s:'"
nl|'\n'
string|"' %(status)s'"
op|')'
op|'%'
op|'{'
string|"'path'"
op|':'
name|'path'
op|','
string|"'status'"
op|':'
name|'resp'
op|'.'
name|'status_int'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'is_success'
op|'('
name|'resp'
op|'.'
name|'status_int'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'Could not load object segment %(path)s:'"
nl|'\n'
string|"' %(status)s'"
op|')'
op|'%'
op|'{'
string|"'path'"
op|':'
name|'path'
op|','
string|"'status'"
op|':'
name|'resp'
op|'.'
name|'status_int'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'is_slo'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'resp'
op|'.'
name|'etag'
op|'!='
name|'self'
op|'.'
name|'segment_dict'
op|'['
string|"'hash'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'SloSegmentError'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'Object segment no longer valid: '"
nl|'\n'
string|"'%(path)s etag: %(r_etag)s != %(s_etag)s.'"
op|'%'
nl|'\n'
op|'{'
string|"'path'"
op|':'
name|'path'
op|','
string|"'r_etag'"
op|':'
name|'resp'
op|'.'
name|'etag'
op|','
nl|'\n'
string|"'s_etag'"
op|':'
name|'self'
op|'.'
name|'segment_dict'
op|'['
string|"'hash'"
op|']'
op|'}'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'X-Static-Large-Object'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'SloSegmentError'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'SLO can not be made of other SLOs: %s'"
op|'%'
name|'path'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'segment_iter'
op|'='
name|'resp'
op|'.'
name|'app_iter'
newline|'\n'
comment|'# See NOTE: swift_conn at top of file about this.'
nl|'\n'
name|'self'
op|'.'
name|'segment_iter_swift_conn'
op|'='
name|'getattr'
op|'('
name|'resp'
op|','
string|"'swift_conn'"
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
dedent|''
name|'except'
name|'SloSegmentError'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'getattr'
op|'('
name|'err'
op|','
string|"'swift_logged'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'ERROR: While processing manifest '"
nl|'\n'
string|"'/%(acc)s/%(cont)s/%(obj)s, %(err)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'acc'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_name'
op|','
nl|'\n'
string|"'cont'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_name'
op|','
nl|'\n'
string|"'obj'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'object_name'
op|','
string|"'err'"
op|':'
name|'err'
op|'}'
op|')'
newline|'\n'
name|'err'
op|'.'
name|'swift_logged'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'response'
op|'.'
name|'status_int'
op|'='
name|'HTTP_CONFLICT'
newline|'\n'
dedent|''
name|'raise'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'getattr'
op|'('
name|'err'
op|','
string|"'swift_logged'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'ERROR: While processing manifest '"
nl|'\n'
string|"'/%(acc)s/%(cont)s/%(obj)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'acc'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_name'
op|','
nl|'\n'
string|"'cont'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_name'
op|','
nl|'\n'
string|"'obj'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'object_name'
op|'}'
op|')'
newline|'\n'
name|'err'
op|'.'
name|'swift_logged'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'response'
op|'.'
name|'status_int'
op|'='
name|'HTTP_SERVICE_UNAVAILABLE'
newline|'\n'
dedent|''
name|'raise'
newline|'\n'
nl|'\n'
DECL|member|next
dedent|''
dedent|''
name|'def'
name|'next'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'iter'
op|'('
name|'self'
op|')'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'""" Standard iterator function that returns the object\'s contents. """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'self'
op|'.'
name|'segment_iter'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_load_next_segment'
op|'('
op|')'
newline|'\n'
dedent|''
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'ChunkReadTimeout'
op|'('
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'try'
op|':'
newline|'\n'
indent|'                            '
name|'chunk'
op|'='
name|'self'
op|'.'
name|'segment_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'_load_next_segment'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'self'
op|'.'
name|'position'
op|'+='
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'yield'
name|'chunk'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'getattr'
op|'('
name|'err'
op|','
string|"'swift_logged'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'ERROR: While processing manifest '"
nl|'\n'
string|"'/%(acc)s/%(cont)s/%(obj)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'acc'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_name'
op|','
nl|'\n'
string|"'cont'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_name'
op|','
nl|'\n'
string|"'obj'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'object_name'
op|'}'
op|')'
newline|'\n'
name|'err'
op|'.'
name|'swift_logged'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'response'
op|'.'
name|'status_int'
op|'='
name|'HTTP_SERVICE_UNAVAILABLE'
newline|'\n'
dedent|''
name|'raise'
newline|'\n'
nl|'\n'
DECL|member|app_iter_range
dedent|''
dedent|''
name|'def'
name|'app_iter_range'
op|'('
name|'self'
op|','
name|'start'
op|','
name|'stop'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Non-standard iterator function for use with Swob in serving Range\n        requests more quickly. This will skip over segments and do a range\n        request on the first segment to return data from, if needed.\n\n        :param start: The first byte (zero-based) to return. None for 0.\n        :param stop: The last byte (zero-based) to return. None for end.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'start'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'segment_peek'
op|'='
name|'self'
op|'.'
name|'listing'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'while'
name|'start'
op|'>='
name|'self'
op|'.'
name|'position'
op|'+'
name|'self'
op|'.'
name|'segment_peek'
op|'['
string|"'bytes'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'position'
op|'+='
name|'self'
op|'.'
name|'segment_peek'
op|'['
string|"'bytes'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'segment_peek'
op|'='
name|'self'
op|'.'
name|'listing'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'seek'
op|'='
name|'start'
op|'-'
name|'self'
op|'.'
name|'position'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'start'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'if'
name|'stop'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'length'
op|'='
name|'stop'
op|'-'
name|'start'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'length'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'for'
name|'chunk'
name|'in'
name|'self'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'length'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'length'
op|'-='
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'if'
name|'length'
op|'<'
number|'0'
op|':'
newline|'\n'
comment|'# Chop off the extra:'
nl|'\n'
indent|'                        '
name|'yield'
name|'chunk'
op|'['
op|':'
name|'length'
op|']'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'yield'
name|'chunk'
newline|'\n'
comment|'# See NOTE: swift_conn at top of file about this.'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'segment_iter_swift_conn'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'segment_iter_swift_conn'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'segment_iter_swift_conn'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'segment_iter'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'while'
name|'self'
op|'.'
name|'segment_iter'
op|'.'
name|'next'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'segment_iter'
op|'='
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'            '
name|'raise'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'getattr'
op|'('
name|'err'
op|','
string|"'swift_logged'"
op|','
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'controller'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'ERROR: While processing manifest '"
nl|'\n'
string|"'/%(acc)s/%(cont)s/%(obj)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'acc'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'account_name'
op|','
nl|'\n'
string|"'cont'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'container_name'
op|','
nl|'\n'
string|"'obj'"
op|':'
name|'self'
op|'.'
name|'controller'
op|'.'
name|'object_name'
op|'}'
op|')'
newline|'\n'
name|'err'
op|'.'
name|'swift_logged'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'response'
op|'.'
name|'status_int'
op|'='
name|'HTTP_SERVICE_UNAVAILABLE'
newline|'\n'
dedent|''
name|'raise'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ObjectController
dedent|''
dedent|''
dedent|''
name|'class'
name|'ObjectController'
op|'('
name|'Controller'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""WSGI controller for object requests."""'
newline|'\n'
DECL|variable|server_type
name|'server_type'
op|'='
string|"'Object'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'account_name'
op|','
name|'container_name'
op|','
name|'object_name'
op|','
nl|'\n'
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Controller'
op|'.'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'account_name'
op|'='
name|'unquote'
op|'('
name|'account_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'unquote'
op|'('
name|'container_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'unquote'
op|'('
name|'object_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_listing_iter
dedent|''
name|'def'
name|'_listing_iter'
op|'('
name|'self'
op|','
name|'lcontainer'
op|','
name|'lprefix'
op|','
name|'env'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'page'
name|'in'
name|'self'
op|'.'
name|'_listing_pages_iter'
op|'('
name|'lcontainer'
op|','
name|'lprefix'
op|','
name|'env'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'item'
name|'in'
name|'page'
op|':'
newline|'\n'
indent|'                '
name|'yield'
name|'item'
newline|'\n'
nl|'\n'
DECL|member|_listing_pages_iter
dedent|''
dedent|''
dedent|''
name|'def'
name|'_listing_pages_iter'
op|'('
name|'self'
op|','
name|'lcontainer'
op|','
name|'lprefix'
op|','
name|'env'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'lpartition'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_part'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'lcontainer'
op|')'
newline|'\n'
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'lreq'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'i will be overridden by env'"
op|','
name|'environ'
op|'='
name|'env'
op|')'
newline|'\n'
comment|"# Don't quote PATH_INFO, by WSGI spec"
nl|'\n'
name|'lreq'
op|'.'
name|'environ'
op|'['
string|"'PATH_INFO'"
op|']'
op|'='
string|"'/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'account_name'
op|','
name|'lcontainer'
op|')'
newline|'\n'
name|'lreq'
op|'.'
name|'environ'
op|'['
string|"'REQUEST_METHOD'"
op|']'
op|'='
string|"'GET'"
newline|'\n'
name|'lreq'
op|'.'
name|'environ'
op|'['
string|"'QUERY_STRING'"
op|']'
op|'='
string|"'format=json&prefix=%s&marker=%s'"
op|'%'
op|'('
name|'quote'
op|'('
name|'lprefix'
op|')'
op|','
nl|'\n'
name|'quote'
op|'('
name|'marker'
op|')'
op|')'
newline|'\n'
name|'lresp'
op|'='
name|'self'
op|'.'
name|'GETorHEAD_base'
op|'('
nl|'\n'
name|'lreq'
op|','
name|'_'
op|'('
string|"'Container'"
op|')'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|','
name|'lpartition'
op|','
nl|'\n'
name|'lreq'
op|'.'
name|'path_info'
op|')'
newline|'\n'
name|'if'
string|"'swift.authorize'"
name|'in'
name|'env'
op|':'
newline|'\n'
indent|'                '
name|'lreq'
op|'.'
name|'acl'
op|'='
name|'lresp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-container-read'"
op|')'
newline|'\n'
name|'aresp'
op|'='
name|'env'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'lreq'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'ListingIterNotAuthorized'
op|'('
name|'aresp'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'lresp'
op|'.'
name|'status_int'
op|'=='
name|'HTTP_NOT_FOUND'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ListingIterNotFound'
op|'('
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'is_success'
op|'('
name|'lresp'
op|'.'
name|'status_int'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ListingIterError'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'lresp'
op|'.'
name|'body'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'sublisting'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'lresp'
op|'.'
name|'body'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'sublisting'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'marker'
op|'='
name|'sublisting'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'name'"
op|']'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
name|'yield'
name|'sublisting'
newline|'\n'
nl|'\n'
DECL|member|_remaining_items
dedent|''
dedent|''
name|'def'
name|'_remaining_items'
op|'('
name|'self'
op|','
name|'listing_iter'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns an item-by-item iterator for a page-by-page iterator\n        of item listings.\n\n        Swallows listing-related errors; this iterator is only used\n        after we\'ve already started streaming a response to the\n        client, and so if we start getting errors from the container\n        servers now, it\'s too late to send an error to the client, so\n        we just quit looking for segments.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'page'
name|'in'
name|'listing_iter'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'item'
name|'in'
name|'page'
op|':'
newline|'\n'
indent|'                    '
name|'yield'
name|'item'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
name|'ListingIterNotFound'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'except'
name|'ListingIterError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'except'
name|'ListingIterNotAuthorized'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|is_good_source
dedent|''
dedent|''
name|'def'
name|'is_good_source'
op|'('
name|'self'
op|','
name|'src'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Indicates whether or not the request made to the backend found\n        what it was looking for.\n\n        In the case of an object, a 416 indicates that we found a\n        backend with the object.\n        """'
newline|'\n'
name|'return'
name|'src'
op|'.'
name|'status'
op|'=='
number|'416'
name|'or'
name|'super'
op|'('
name|'ObjectController'
op|','
name|'self'
op|')'
op|'.'
name|'is_good_source'
op|'('
name|'src'
op|')'
newline|'\n'
nl|'\n'
DECL|member|GETorHEAD
dedent|''
name|'def'
name|'GETorHEAD'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handle HTTP GET or HEAD requests."""'
newline|'\n'
name|'container_info'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'req'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'acl'
op|'='
name|'container_info'
op|'['
string|"'read_acl'"
op|']'
newline|'\n'
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'aresp'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'partition'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|'.'
name|'get_part'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'GETorHEAD_base'
op|'('
nl|'\n'
name|'req'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|','
name|'partition'
op|','
name|'req'
op|'.'
name|'path_info'
op|')'
newline|'\n'
nl|'\n'
name|'if'
string|"';'"
name|'in'
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'content-type'"
op|','
string|"''"
op|')'
op|':'
newline|'\n'
comment|'# strip off swift_bytes from content-type'
nl|'\n'
indent|'            '
name|'content_type'
op|','
name|'check_extra_meta'
op|'='
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|'.'
name|'rsplit'
op|'('
string|"';'"
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'check_extra_meta'
op|'.'
name|'lstrip'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'swift_bytes='"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'resp'
op|'.'
name|'content_type'
op|'='
name|'content_type'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'large_object'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'config_true_value'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-static-large-object'"
op|')'
op|')'
name|'and'
name|'req'
op|'.'
name|'params'
op|'.'
name|'get'
op|'('
string|"'multipart-manifest'"
op|')'
op|'=='
string|"'get'"
name|'and'
string|"'X-Copy-From'"
name|'not'
name|'in'
name|'req'
op|'.'
name|'headers'
name|'and'
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_static_large_object'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'.'
name|'content_type'
op|'='
string|"'application/json'"
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'config_true_value'
op|'('
name|'resp'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-static-large-object'"
op|')'
op|')'
name|'and'
name|'req'
op|'.'
name|'params'
op|'.'
name|'get'
op|'('
string|"'multipart-manifest'"
op|')'
op|'!='
string|"'get'"
name|'and'
name|'self'
op|'.'
name|'app'
op|'.'
name|'allow_static_large_object'
op|':'
newline|'\n'
indent|'            '
name|'large_object'
op|'='
string|"'SLO'"
newline|'\n'
name|'listing_page1'
op|'='
op|'('
op|')'
newline|'\n'
name|'listing'
op|'='
op|'['
op|']'
newline|'\n'
name|'lcontainer'
op|'='
name|'None'
comment|'# container name is included in listing'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'=='
name|'HTTP_OK'
name|'and'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'GET'"
name|'and'
name|'not'
name|'req'
op|'.'
name|'range'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'listing'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'body'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                    '
name|'listing'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# need to make a second request to get whole manifest'
nl|'\n'
indent|'                '
name|'new_req'
op|'='
name|'req'
op|'.'
name|'copy_get'
op|'('
op|')'
newline|'\n'
name|'new_req'
op|'.'
name|'method'
op|'='
string|"'GET'"
newline|'\n'
name|'new_req'
op|'.'
name|'range'
op|'='
name|'None'
newline|'\n'
name|'new_resp'
op|'='
name|'self'
op|'.'
name|'GETorHEAD_base'
op|'('
nl|'\n'
name|'new_req'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|','
name|'partition'
op|','
nl|'\n'
name|'req'
op|'.'
name|'path_info'
op|')'
newline|'\n'
name|'if'
name|'new_resp'
op|'.'
name|'status_int'
op|'//'
number|'100'
op|'=='
number|'2'
op|':'
newline|'\n'
indent|'                    '
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'listing'
op|'='
name|'json'
op|'.'
name|'loads'
op|'('
name|'new_resp'
op|'.'
name|'body'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                        '
name|'listing'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPServiceUnavailable'
op|'('
nl|'\n'
string|'"Unable to load SLO manifest"'
op|','
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
string|"'x-object-manifest'"
name|'in'
name|'resp'
op|'.'
name|'headers'
name|'and'
name|'req'
op|'.'
name|'params'
op|'.'
name|'get'
op|'('
string|"'multipart-manifest'"
op|')'
op|'!='
string|"'get'"
op|':'
newline|'\n'
indent|'            '
name|'large_object'
op|'='
string|"'DLO'"
newline|'\n'
name|'lcontainer'
op|','
name|'lprefix'
op|'='
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'x-object-manifest'"
op|']'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'1'
op|')'
newline|'\n'
name|'lcontainer'
op|'='
name|'unquote'
op|'('
name|'lcontainer'
op|')'
newline|'\n'
name|'lprefix'
op|'='
name|'unquote'
op|'('
name|'lprefix'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'pages_iter'
op|'='
name|'iter'
op|'('
name|'self'
op|'.'
name|'_listing_pages_iter'
op|'('
name|'lcontainer'
op|','
name|'lprefix'
op|','
nl|'\n'
name|'req'
op|'.'
name|'environ'
op|')'
op|')'
newline|'\n'
name|'listing_page1'
op|'='
name|'pages_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'listing'
op|'='
name|'itertools'
op|'.'
name|'chain'
op|'('
name|'listing_page1'
op|','
nl|'\n'
name|'self'
op|'.'
name|'_remaining_items'
op|'('
name|'pages_iter'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ListingIterNotFound'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ListingIterNotAuthorized'
op|','
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'err'
op|'.'
name|'aresp'
newline|'\n'
dedent|''
name|'except'
name|'ListingIterError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPServerError'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                '
name|'listing_page1'
op|'='
name|'listing'
op|'='
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'large_object'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'len'
op|'('
name|'listing_page1'
op|')'
op|'>='
name|'CONTAINER_LISTING_LIMIT'
op|':'
newline|'\n'
indent|'                '
name|'resp'
op|'='
name|'Response'
op|'('
name|'headers'
op|'='
name|'resp'
op|'.'
name|'headers'
op|','
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'conditional_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'HEAD'"
op|':'
newline|'\n'
comment|'# These shenanigans are because swob translates the HEAD'
nl|'\n'
comment|'# request into a swob EmptyResponse for the body, which'
nl|'\n'
comment|'# has a len, which eventlet translates as needing a'
nl|'\n'
comment|'# content-length header added. So we call the original'
nl|'\n'
comment|'# swob resp for the headers but return an empty iterator'
nl|'\n'
comment|'# for the body.'
nl|'\n'
nl|'\n'
DECL|function|head_response
indent|'                    '
name|'def'
name|'head_response'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'resp'
op|'('
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'return'
name|'iter'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'head_response'
op|'.'
name|'status_int'
op|'='
name|'resp'
op|'.'
name|'status_int'
newline|'\n'
name|'return'
name|'head_response'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'resp'
op|'.'
name|'app_iter'
op|'='
name|'SegmentedIterable'
op|'('
nl|'\n'
name|'self'
op|','
name|'lcontainer'
op|','
name|'listing'
op|','
name|'resp'
op|','
nl|'\n'
name|'is_slo'
op|'='
op|'('
name|'large_object'
op|'=='
string|"'SLO'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
comment|"# For objects with a reasonable number of segments, we'll serve"
nl|'\n'
comment|'# them with a set content-length and computed etag.'
nl|'\n'
indent|'                '
name|'if'
name|'listing'
op|':'
newline|'\n'
indent|'                    '
name|'listing'
op|'='
name|'list'
op|'('
name|'listing'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'content_length'
op|'='
name|'sum'
op|'('
name|'o'
op|'['
string|"'bytes'"
op|']'
name|'for'
name|'o'
name|'in'
name|'listing'
op|')'
newline|'\n'
name|'last_modified'
op|'='
name|'max'
op|'('
name|'o'
op|'['
string|"'last_modified'"
op|']'
name|'for'
name|'o'
name|'in'
name|'listing'
op|')'
newline|'\n'
name|'last_modified'
op|'='
name|'datetime'
op|'('
op|'*'
name|'map'
op|'('
name|'int'
op|','
name|'re'
op|'.'
name|'split'
op|'('
string|"'[^\\d]'"
op|','
nl|'\n'
name|'last_modified'
op|')'
op|'['
op|':'
op|'-'
number|'1'
op|']'
op|')'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
nl|'\n'
string|"''"
op|'.'
name|'join'
op|'('
name|'o'
op|'['
string|"'hash'"
op|']'
name|'for'
name|'o'
name|'in'
name|'listing'
op|')'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'HTTPServerError'
op|'('
string|"'Invalid Manifest File'"
op|','
nl|'\n'
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'content_length'
op|'='
number|'0'
newline|'\n'
name|'last_modified'
op|'='
name|'resp'
op|'.'
name|'last_modified'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'Response'
op|'('
name|'headers'
op|'='
name|'resp'
op|'.'
name|'headers'
op|','
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'conditional_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'app_iter'
op|'='
name|'SegmentedIterable'
op|'('
nl|'\n'
name|'self'
op|','
name|'lcontainer'
op|','
name|'listing'
op|','
name|'resp'
op|','
nl|'\n'
name|'is_slo'
op|'='
op|'('
name|'large_object'
op|'=='
string|"'SLO'"
op|')'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'content_length'
op|'='
name|'content_length'
newline|'\n'
name|'resp'
op|'.'
name|'last_modified'
op|'='
name|'last_modified'
newline|'\n'
name|'resp'
op|'.'
name|'etag'
op|'='
name|'etag'
newline|'\n'
dedent|''
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'accept-ranges'"
op|']'
op|'='
string|"'bytes'"
newline|'\n'
comment|'# In case of a manifest file of nonzero length, the'
nl|'\n'
comment|'# backend may have sent back a Content-Range header for'
nl|'\n'
comment|"# the manifest. It's wrong for the client, though."
nl|'\n'
name|'resp'
op|'.'
name|'content_range'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'cors_validation'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|GET
name|'def'
name|'GET'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handler for HTTP GET requests."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'GETorHEAD'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'cors_validation'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|HEAD
name|'def'
name|'HEAD'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handler for HTTP HEAD requests."""'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'GETorHEAD'
op|'('
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'cors_validation'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|POST
name|'def'
name|'POST'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP POST request handler."""'
newline|'\n'
name|'if'
string|"'x-delete-after'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'x_delete_after'
op|'='
name|'int'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-delete-after'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|','
nl|'\n'
name|'body'
op|'='
string|"'Non-integer X-Delete-After'"
op|')'
newline|'\n'
dedent|''
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-delete-at'"
op|']'
op|'='
string|"'%d'"
op|'%'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
name|'x_delete_after'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_post_as_copy'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'path_info'
op|'='
string|"'/%s/%s/%s'"
op|'%'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Copy-From'"
op|']'
op|'='
name|'quote'
op|'('
string|"'/%s/%s'"
op|'%'
op|'('
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|')'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Fresh-Metadata'"
op|']'
op|'='
string|"'true'"
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift_versioned_copy'"
op|']'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'QUERY_STRING'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'req'
op|'.'
name|'environ'
op|'['
string|"'QUERY_STRING'"
op|']'
op|'+='
string|"'&multipart-manifest=get'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'req'
op|'.'
name|'environ'
op|'['
string|"'QUERY_STRING'"
op|']'
op|'='
string|"'multipart-manifest=get'"
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'self'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
comment|"# Older editions returned 202 Accepted on object POSTs, so we'll"
nl|'\n'
comment|'# convert any 201 Created responses to that for compatibility with'
nl|'\n'
comment|'# picky clients.'
nl|'\n'
name|'if'
name|'resp'
op|'.'
name|'status_int'
op|'!='
name|'HTTP_CREATED'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'resp'
newline|'\n'
dedent|''
name|'return'
name|'HTTPAccepted'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'error_response'
op|'='
name|'check_metadata'
op|'('
name|'req'
op|','
string|"'object'"
op|')'
newline|'\n'
name|'if'
name|'error_response'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'error_response'
newline|'\n'
dedent|''
name|'container_info'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'container_partition'
op|'='
name|'container_info'
op|'['
string|"'partition'"
op|']'
newline|'\n'
name|'containers'
op|'='
name|'container_info'
op|'['
string|"'nodes'"
op|']'
newline|'\n'
name|'req'
op|'.'
name|'acl'
op|'='
name|'container_info'
op|'['
string|"'write_acl'"
op|']'
newline|'\n'
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'                '
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'aresp'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'containers'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'x-delete-at'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'x_delete_at'
op|'='
name|'int'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-delete-at'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'x_delete_at'
op|'<'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'HTTPBadRequest'
op|'('
nl|'\n'
name|'body'
op|'='
string|"'X-Delete-At in past'"
op|','
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|','
nl|'\n'
name|'body'
op|'='
string|"'Non-integer X-Delete-At'"
op|')'
newline|'\n'
dedent|''
name|'delete_at_container'
op|'='
name|'str'
op|'('
nl|'\n'
name|'x_delete_at'
op|'/'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'expiring_objects_container_divisor'
op|'*'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'expiring_objects_container_divisor'
op|')'
newline|'\n'
name|'delete_at_part'
op|','
name|'delete_at_nodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'expiring_objects_account'
op|','
name|'delete_at_container'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'delete_at_container'
op|'='
name|'delete_at_part'
op|'='
name|'delete_at_nodes'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'partition'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
name|'self'
op|'.'
name|'_backend_requests'
op|'('
nl|'\n'
name|'req'
op|','
name|'len'
op|'('
name|'nodes'
op|')'
op|','
name|'container_partition'
op|','
name|'containers'
op|','
nl|'\n'
name|'delete_at_container'
op|','
name|'delete_at_part'
op|','
name|'delete_at_nodes'
op|')'
newline|'\n'
nl|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_requests'
op|'('
name|'req'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|','
name|'partition'
op|','
nl|'\n'
string|"'POST'"
op|','
name|'req'
op|'.'
name|'path_info'
op|','
name|'headers'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
DECL|member|_backend_requests
dedent|''
dedent|''
name|'def'
name|'_backend_requests'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'n_outgoing'
op|','
nl|'\n'
name|'container_partition'
op|','
name|'containers'
op|','
nl|'\n'
name|'delete_at_container'
op|'='
name|'None'
op|','
name|'delete_at_partition'
op|'='
name|'None'
op|','
nl|'\n'
name|'delete_at_nodes'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'headers'
op|'='
op|'['
name|'self'
op|'.'
name|'generate_request_headers'
op|'('
name|'req'
op|','
name|'additional'
op|'='
name|'req'
op|'.'
name|'headers'
op|')'
nl|'\n'
name|'for'
name|'_junk'
name|'in'
name|'range'
op|'('
name|'n_outgoing'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'header'
name|'in'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'header'
op|'['
string|"'Connection'"
op|']'
op|'='
string|"'close'"
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'i'
op|','
name|'container'
name|'in'
name|'enumerate'
op|'('
name|'containers'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'='
name|'i'
op|'%'
name|'len'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'['
string|"'X-Container-Partition'"
op|']'
op|'='
name|'container_partition'
newline|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'['
string|"'X-Container-Host'"
op|']'
op|'='
name|'csv_append'
op|'('
nl|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
string|"'X-Container-Host'"
op|')'
op|','
nl|'\n'
string|"'%(ip)s:%(port)s'"
op|'%'
name|'container'
op|')'
newline|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'['
string|"'X-Container-Device'"
op|']'
op|'='
name|'csv_append'
op|'('
nl|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
string|"'X-Container-Device'"
op|')'
op|','
nl|'\n'
name|'container'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'i'
op|','
name|'node'
name|'in'
name|'enumerate'
op|'('
name|'delete_at_nodes'
name|'or'
op|'['
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'i'
op|'='
name|'i'
op|'%'
name|'len'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'['
string|"'X-Delete-At-Container'"
op|']'
op|'='
name|'delete_at_container'
newline|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'['
string|"'X-Delete-At-Partition'"
op|']'
op|'='
name|'delete_at_partition'
newline|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'['
string|"'X-Delete-At-Host'"
op|']'
op|'='
name|'csv_append'
op|'('
nl|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At-Host'"
op|')'
op|','
nl|'\n'
string|"'%(ip)s:%(port)s'"
op|'%'
name|'node'
op|')'
newline|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'['
string|"'X-Delete-At-Device'"
op|']'
op|'='
name|'csv_append'
op|'('
nl|'\n'
name|'headers'
op|'['
name|'i'
op|']'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At-Device'"
op|')'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'return'
name|'headers'
newline|'\n'
nl|'\n'
DECL|member|_send_file
dedent|''
name|'def'
name|'_send_file'
op|'('
name|'self'
op|','
name|'conn'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Method for a file PUT coro"""'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'chunk'
op|'='
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'get'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'conn'
op|'.'
name|'failed'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'ChunkWriteTimeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'conn'
op|'.'
name|'send'
op|'('
name|'chunk'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'ChunkWriteTimeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'failed'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'exception_occurred'
op|'('
name|'conn'
op|'.'
name|'node'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Trying to write to %s'"
op|')'
op|'%'
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'task_done'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_connect_put_node
dedent|''
dedent|''
name|'def'
name|'_connect_put_node'
op|'('
name|'self'
op|','
name|'nodes'
op|','
name|'part'
op|','
name|'path'
op|','
name|'headers'
op|','
nl|'\n'
name|'logger_thread_locals'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Method for a file PUT connect"""'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'thread_locals'
op|'='
name|'logger_thread_locals'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'start_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'with'
name|'ConnectionTimeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'conn_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'='
name|'http_connect'
op|'('
nl|'\n'
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'part'
op|','
string|"'PUT'"
op|','
nl|'\n'
name|'path'
op|','
name|'headers'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'app'
op|'.'
name|'set_node_timing'
op|'('
name|'node'
op|','
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'start_time'
op|')'
newline|'\n'
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'resp'
op|'='
name|'conn'
op|'.'
name|'getexpect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'resp'
op|'.'
name|'status'
op|'=='
name|'HTTP_CONTINUE'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'resp'
op|'='
name|'None'
newline|'\n'
name|'conn'
op|'.'
name|'node'
op|'='
name|'node'
newline|'\n'
name|'return'
name|'conn'
newline|'\n'
dedent|''
name|'elif'
name|'is_success'
op|'('
name|'resp'
op|'.'
name|'status'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'resp'
op|'='
name|'resp'
newline|'\n'
name|'conn'
op|'.'
name|'node'
op|'='
name|'node'
newline|'\n'
name|'return'
name|'conn'
newline|'\n'
dedent|''
name|'elif'
name|'resp'
op|'.'
name|'status'
op|'=='
name|'HTTP_INSUFFICIENT_STORAGE'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'error_limit'
op|'('
name|'node'
op|','
name|'_'
op|'('
string|"'ERROR Insufficient Storage'"
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'exception_occurred'
op|'('
name|'node'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Expect: 100-continue on %s'"
op|')'
op|'%'
name|'path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'cors_validation'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|PUT
name|'def'
name|'PUT'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP PUT request handler."""'
newline|'\n'
name|'container_info'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|')'
newline|'\n'
name|'container_partition'
op|'='
name|'container_info'
op|'['
string|"'partition'"
op|']'
newline|'\n'
name|'containers'
op|'='
name|'container_info'
op|'['
string|"'nodes'"
op|']'
newline|'\n'
name|'req'
op|'.'
name|'acl'
op|'='
name|'container_info'
op|'['
string|"'write_acl'"
op|']'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift_sync_key'"
op|']'
op|'='
name|'container_info'
op|'['
string|"'sync_key'"
op|']'
newline|'\n'
name|'object_versions'
op|'='
name|'container_info'
op|'['
string|"'versions'"
op|']'
newline|'\n'
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'aresp'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'containers'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'ml'
op|'='
name|'req'
op|'.'
name|'message_length'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|','
name|'content_type'
op|'='
string|"'text/plain'"
op|','
nl|'\n'
name|'body'
op|'='
name|'str'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotImplemented'
op|'('
name|'request'
op|'='
name|'req'
op|','
name|'content_type'
op|'='
string|"'text/plain'"
op|','
nl|'\n'
name|'body'
op|'='
name|'str'
op|'('
name|'e'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'ml'
name|'is'
name|'not'
name|'None'
name|'and'
name|'ml'
op|'>'
name|'MAX_FILE_SIZE'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'x-delete-after'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'x_delete_after'
op|'='
name|'int'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-delete-after'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|','
nl|'\n'
name|'body'
op|'='
string|"'Non-integer X-Delete-After'"
op|')'
newline|'\n'
dedent|''
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-delete-at'"
op|']'
op|'='
string|"'%d'"
op|'%'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
name|'x_delete_after'
op|')'
newline|'\n'
dedent|''
name|'partition'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
comment|'# do a HEAD request for container sync and checking object versions'
nl|'\n'
name|'if'
string|"'x-timestamp'"
name|'in'
name|'req'
op|'.'
name|'headers'
name|'or'
op|'('
name|'object_versions'
name|'and'
name|'not'
nl|'\n'
name|'req'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'swift_versioned_copy'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'hreq'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
name|'headers'
op|'='
op|'{'
string|"'X-Newest'"
op|':'
string|"'True'"
op|'}'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'hresp'
op|'='
name|'self'
op|'.'
name|'GETorHEAD_base'
op|'('
nl|'\n'
name|'hreq'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|','
name|'partition'
op|','
nl|'\n'
name|'hreq'
op|'.'
name|'path_info'
op|')'
newline|'\n'
comment|'# Used by container sync feature'
nl|'\n'
dedent|''
name|'if'
string|"'x-timestamp'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'normalize_timestamp'
op|'('
name|'float'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
op|')'
newline|'\n'
name|'if'
name|'hresp'
op|'.'
name|'environ'
name|'and'
string|"'swift_x_timestamp'"
name|'in'
name|'hresp'
op|'.'
name|'environ'
name|'and'
name|'float'
op|'('
name|'hresp'
op|'.'
name|'environ'
op|'['
string|"'swift_x_timestamp'"
op|']'
op|')'
op|'>='
name|'float'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPAccepted'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPBadRequest'
op|'('
nl|'\n'
name|'request'
op|'='
name|'req'
op|','
name|'content_type'
op|'='
string|"'text/plain'"
op|','
nl|'\n'
name|'body'
op|'='
string|"'X-Timestamp should be a UNIX timestamp float value; '"
nl|'\n'
string|"'was %r'"
op|'%'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
comment|"# Sometimes the 'content-type' header exists, but is set to None."
nl|'\n'
dedent|''
name|'content_type_manually_set'
op|'='
name|'True'
newline|'\n'
name|'if'
name|'not'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'content-type'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'guessed_type'
op|','
name|'_junk'
op|'='
name|'mimetypes'
op|'.'
name|'guess_type'
op|'('
name|'req'
op|'.'
name|'path_info'
op|')'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
name|'guessed_type'
name|'or'
string|"'application/octet-stream'"
newline|'\n'
name|'content_type_manually_set'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'error_response'
op|'='
name|'check_object_creation'
op|'('
name|'req'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
name|'or'
name|'check_content_type'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'error_response'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'error_response'
newline|'\n'
dedent|''
name|'if'
name|'object_versions'
name|'and'
name|'not'
name|'req'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'swift_versioned_copy'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'is_manifest'
op|'='
string|"'x-object-manifest'"
name|'in'
name|'req'
op|'.'
name|'headers'
name|'or'
string|"'x-object-manifest'"
name|'in'
name|'hresp'
op|'.'
name|'headers'
newline|'\n'
name|'if'
name|'hresp'
op|'.'
name|'status_int'
op|'!='
name|'HTTP_NOT_FOUND'
name|'and'
name|'not'
name|'is_manifest'
op|':'
newline|'\n'
comment|'# This is a version manifest and needs to be handled'
nl|'\n'
comment|'# differently. First copy the existing data to a new object,'
nl|'\n'
comment|'# then write the data from this request to the version manifest'
nl|'\n'
comment|'# object.'
nl|'\n'
indent|'                '
name|'lcontainer'
op|'='
name|'object_versions'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'prefix_len'
op|'='
string|"'%03x'"
op|'%'
name|'len'
op|'('
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'lprefix'
op|'='
name|'prefix_len'
op|'+'
name|'self'
op|'.'
name|'object_name'
op|'+'
string|"'/'"
newline|'\n'
name|'ts_source'
op|'='
name|'hresp'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'swift_x_timestamp'"
op|')'
newline|'\n'
name|'if'
name|'ts_source'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'ts_source'
op|'='
name|'time'
op|'.'
name|'mktime'
op|'('
name|'time'
op|'.'
name|'strptime'
op|'('
nl|'\n'
name|'hresp'
op|'.'
name|'headers'
op|'['
string|"'last-modified'"
op|']'
op|','
nl|'\n'
string|"'%a, %d %b %Y %H:%M:%S GMT'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'new_ts'
op|'='
name|'normalize_timestamp'
op|'('
name|'ts_source'
op|')'
newline|'\n'
name|'vers_obj_name'
op|'='
name|'lprefix'
op|'+'
name|'new_ts'
newline|'\n'
name|'copy_headers'
op|'='
op|'{'
nl|'\n'
string|"'Destination'"
op|':'
string|"'%s/%s'"
op|'%'
op|'('
name|'lcontainer'
op|','
name|'vers_obj_name'
op|')'
op|'}'
newline|'\n'
name|'copy_environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|','
nl|'\n'
string|"'swift_versioned_copy'"
op|':'
name|'True'
nl|'\n'
op|'}'
newline|'\n'
name|'copy_req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
name|'headers'
op|'='
name|'copy_headers'
op|','
nl|'\n'
name|'environ'
op|'='
name|'copy_environ'
op|')'
newline|'\n'
name|'copy_resp'
op|'='
name|'self'
op|'.'
name|'COPY'
op|'('
name|'copy_req'
op|')'
newline|'\n'
name|'if'
name|'is_client_error'
op|'('
name|'copy_resp'
op|'.'
name|'status_int'
op|')'
op|':'
newline|'\n'
comment|'# missing container or bad permissions'
nl|'\n'
indent|'                    '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'is_success'
op|'('
name|'copy_resp'
op|'.'
name|'status_int'
op|')'
op|':'
newline|'\n'
comment|'# could not copy the data, bail'
nl|'\n'
indent|'                    '
name|'return'
name|'HTTPServiceUnavailable'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'reader'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'.'
name|'read'
newline|'\n'
name|'data_source'
op|'='
name|'iter'
op|'('
name|'lambda'
op|':'
name|'reader'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'client_chunk_size'
op|')'
op|','
string|"''"
op|')'
newline|'\n'
name|'source_header'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Copy-From'"
op|')'
newline|'\n'
name|'source_resp'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'source_header'
op|':'
newline|'\n'
indent|'            '
name|'source_header'
op|'='
name|'unquote'
op|'('
name|'source_header'
op|')'
newline|'\n'
name|'acct'
op|'='
name|'req'
op|'.'
name|'path_info'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'2'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'acct'
op|','
name|'unicode'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'acct'
op|'='
name|'acct'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'source_header'
op|'.'
name|'startswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'source_header'
op|'='
string|"'/'"
op|'+'
name|'source_header'
newline|'\n'
dedent|''
name|'source_header'
op|'='
string|"'/'"
op|'+'
name|'acct'
op|'+'
name|'source_header'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'src_container_name'
op|','
name|'src_obj_name'
op|'='
name|'source_header'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'3'
op|')'
op|'['
number|'2'
op|':'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
nl|'\n'
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'body'
op|'='
string|"'X-Copy-From header must be of the form'"
nl|'\n'
string|"'<container name>/<object name>'"
op|')'
newline|'\n'
dedent|''
name|'source_req'
op|'='
name|'req'
op|'.'
name|'copy_get'
op|'('
op|')'
newline|'\n'
name|'source_req'
op|'.'
name|'path_info'
op|'='
name|'source_header'
newline|'\n'
name|'source_req'
op|'.'
name|'headers'
op|'['
string|"'X-Newest'"
op|']'
op|'='
string|"'true'"
newline|'\n'
name|'orig_obj_name'
op|'='
name|'self'
op|'.'
name|'object_name'
newline|'\n'
name|'orig_container_name'
op|'='
name|'self'
op|'.'
name|'container_name'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'src_obj_name'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'src_container_name'
newline|'\n'
name|'source_resp'
op|'='
name|'self'
op|'.'
name|'GET'
op|'('
name|'source_req'
op|')'
newline|'\n'
name|'if'
name|'source_resp'
op|'.'
name|'status_int'
op|'>='
name|'HTTP_MULTIPLE_CHOICES'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'source_resp'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'object_name'
op|'='
name|'orig_obj_name'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'orig_container_name'
newline|'\n'
name|'new_req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'req'
op|'.'
name|'path_info'
op|','
nl|'\n'
name|'environ'
op|'='
name|'req'
op|'.'
name|'environ'
op|','
name|'headers'
op|'='
name|'req'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'data_source'
op|'='
name|'source_resp'
op|'.'
name|'app_iter'
newline|'\n'
name|'new_req'
op|'.'
name|'content_length'
op|'='
name|'source_resp'
op|'.'
name|'content_length'
newline|'\n'
name|'if'
name|'new_req'
op|'.'
name|'content_length'
name|'is'
name|'None'
op|':'
newline|'\n'
comment|'# This indicates a transfer-encoding: chunked source object,'
nl|'\n'
comment|'# which currently only happens because there are more than'
nl|'\n'
comment|'# CONTAINER_LISTING_LIMIT segments in a segmented object. In'
nl|'\n'
comment|"# this case, we're going to refuse to do the server-side copy."
nl|'\n'
indent|'                '
name|'return'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'new_req'
op|'.'
name|'content_length'
op|'>'
name|'MAX_FILE_SIZE'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'new_req'
op|'.'
name|'etag'
op|'='
name|'source_resp'
op|'.'
name|'etag'
newline|'\n'
comment|'# we no longer need the X-Copy-From header'
nl|'\n'
name|'del'
name|'new_req'
op|'.'
name|'headers'
op|'['
string|"'X-Copy-From'"
op|']'
newline|'\n'
name|'if'
name|'not'
name|'content_type_manually_set'
op|':'
newline|'\n'
indent|'                '
name|'new_req'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
name|'source_resp'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'config_true_value'
op|'('
nl|'\n'
name|'new_req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-fresh-metadata'"
op|','
string|"'false'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'copy_headers_into'
op|'('
name|'source_resp'
op|','
name|'new_req'
op|')'
newline|'\n'
name|'copy_headers_into'
op|'('
name|'req'
op|','
name|'new_req'
op|')'
newline|'\n'
comment|'# copy over x-static-large-object for POSTs and manifest copies'
nl|'\n'
dedent|''
name|'if'
string|"'X-Static-Large-Object'"
name|'in'
name|'source_resp'
op|'.'
name|'headers'
name|'and'
name|'req'
op|'.'
name|'params'
op|'.'
name|'get'
op|'('
string|"'multipart-manifest'"
op|')'
op|'=='
string|"'get'"
op|':'
newline|'\n'
indent|'                '
name|'new_req'
op|'.'
name|'headers'
op|'['
string|"'X-Static-Large-Object'"
op|']'
op|'='
name|'source_resp'
op|'.'
name|'headers'
op|'['
string|"'X-Static-Large-Object'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'new_req'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'x-delete-at'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'x_delete_at'
op|'='
name|'int'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-delete-at'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'x_delete_at'
op|'<'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPBadRequest'
op|'('
nl|'\n'
name|'body'
op|'='
string|"'X-Delete-At in past'"
op|','
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'req'
op|','
name|'content_type'
op|'='
string|"'text/plain'"
op|','
nl|'\n'
name|'body'
op|'='
string|"'Non-integer X-Delete-At'"
op|')'
newline|'\n'
dedent|''
name|'delete_at_container'
op|'='
name|'str'
op|'('
nl|'\n'
name|'x_delete_at'
op|'/'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'expiring_objects_container_divisor'
op|'*'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'expiring_objects_container_divisor'
op|')'
newline|'\n'
name|'delete_at_part'
op|','
name|'delete_at_nodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'container_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'expiring_objects_account'
op|','
name|'delete_at_container'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'delete_at_container'
op|'='
name|'delete_at_part'
op|'='
name|'delete_at_nodes'
op|'='
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'node_iter'
op|'='
name|'GreenthreadSafeIterator'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'iter_nodes'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|','
name|'partition'
op|')'
op|')'
newline|'\n'
name|'pile'
op|'='
name|'GreenPile'
op|'('
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
newline|'\n'
name|'te'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'transfer-encoding'"
op|','
string|"''"
op|')'
newline|'\n'
name|'chunked'
op|'='
op|'('
string|"'chunked'"
name|'in'
name|'te'
op|')'
newline|'\n'
nl|'\n'
name|'outgoing_headers'
op|'='
name|'self'
op|'.'
name|'_backend_requests'
op|'('
nl|'\n'
name|'req'
op|','
name|'len'
op|'('
name|'nodes'
op|')'
op|','
name|'container_partition'
op|','
name|'containers'
op|','
nl|'\n'
name|'delete_at_container'
op|','
name|'delete_at_part'
op|','
name|'delete_at_nodes'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'nheaders'
name|'in'
name|'outgoing_headers'
op|':'
newline|'\n'
comment|'# RFC2616:8.2.3 disallows 100-continue without a body'
nl|'\n'
indent|'            '
name|'if'
op|'('
name|'req'
op|'.'
name|'content_length'
op|'>'
number|'0'
op|')'
name|'or'
name|'chunked'
op|':'
newline|'\n'
indent|'                '
name|'nheaders'
op|'['
string|"'Expect'"
op|']'
op|'='
string|"'100-continue'"
newline|'\n'
dedent|''
name|'pile'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'_connect_put_node'
op|','
name|'node_iter'
op|','
name|'partition'
op|','
nl|'\n'
name|'req'
op|'.'
name|'path_info'
op|','
name|'nheaders'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'thread_locals'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'conns'
op|'='
op|'['
name|'conn'
name|'for'
name|'conn'
name|'in'
name|'pile'
name|'if'
name|'conn'
op|']'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'conns'
op|')'
op|'<='
name|'len'
op|'('
name|'nodes'
op|')'
op|'/'
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Object PUT returning 503, %(conns)s/%(nodes)s '"
nl|'\n'
string|"'required connections'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'conns'"
op|':'
name|'len'
op|'('
name|'conns'
op|')'
op|','
string|"'nodes'"
op|':'
name|'len'
op|'('
name|'nodes'
op|')'
op|'//'
number|'2'
op|'+'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'HTTPServiceUnavailable'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'bytes_transferred'
op|'='
number|'0'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'ContextPool'
op|'('
name|'len'
op|'('
name|'nodes'
op|')'
op|')'
name|'as'
name|'pool'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'conn'
name|'in'
name|'conns'
op|':'
newline|'\n'
indent|'                    '
name|'conn'
op|'.'
name|'failed'
op|'='
name|'False'
newline|'\n'
name|'conn'
op|'.'
name|'queue'
op|'='
name|'Queue'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'put_queue_depth'
op|')'
newline|'\n'
name|'pool'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'_send_file'
op|','
name|'conn'
op|','
name|'req'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'ChunkReadTimeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'client_timeout'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'try'
op|':'
newline|'\n'
indent|'                            '
name|'chunk'
op|'='
name|'next'
op|'('
name|'data_source'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                            '
name|'if'
name|'chunked'
op|':'
newline|'\n'
indent|'                                '
op|'['
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'put'
op|'('
string|"'0\\r\\n\\r\\n'"
op|')'
name|'for'
name|'conn'
name|'in'
name|'conns'
op|']'
newline|'\n'
dedent|''
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'bytes_transferred'
op|'+='
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'if'
name|'bytes_transferred'
op|'>'
name|'MAX_FILE_SIZE'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'HTTPRequestEntityTooLarge'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'conn'
name|'in'
name|'list'
op|'('
name|'conns'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'not'
name|'conn'
op|'.'
name|'failed'
op|':'
newline|'\n'
indent|'                            '
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'put'
op|'('
nl|'\n'
string|"'%x\\r\\n%s\\r\\n'"
op|'%'
op|'('
name|'len'
op|'('
name|'chunk'
op|')'
op|','
name|'chunk'
op|')'
nl|'\n'
name|'if'
name|'chunked'
name|'else'
name|'chunk'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                            '
name|'conns'
op|'.'
name|'remove'
op|'('
name|'conn'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'len'
op|'('
name|'conns'
op|')'
op|'<='
name|'len'
op|'('
name|'nodes'
op|')'
op|'/'
number|'2'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'Object PUT exceptions during'"
nl|'\n'
string|"' send, %(conns)s/%(nodes)s required connections'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'conns'"
op|':'
name|'len'
op|'('
name|'conns'
op|')'
op|','
string|"'nodes'"
op|':'
name|'len'
op|'('
name|'nodes'
op|')'
op|'/'
number|'2'
op|'+'
number|'1'
op|'}'
op|')'
newline|'\n'
name|'return'
name|'HTTPServiceUnavailable'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'for'
name|'conn'
name|'in'
name|'conns'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'unfinished_tasks'
op|':'
newline|'\n'
indent|'                        '
name|'conn'
op|'.'
name|'queue'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'conns'
op|'='
op|'['
name|'conn'
name|'for'
name|'conn'
name|'in'
name|'conns'
name|'if'
name|'not'
name|'conn'
op|'.'
name|'failed'
op|']'
newline|'\n'
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'warn'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'ERROR Client read timeout (%ss)'"
op|')'
op|','
name|'err'
op|'.'
name|'seconds'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'client_timeouts'"
op|')'
newline|'\n'
name|'return'
name|'HTTPRequestTimeout'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'ERROR Exception causing client disconnect'"
op|')'
op|')'
newline|'\n'
name|'return'
name|'HTTPClientDisconnect'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'req'
op|'.'
name|'content_length'
name|'and'
name|'bytes_transferred'
op|'<'
name|'req'
op|'.'
name|'content_length'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'client_disconnect'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'warn'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Client disconnected without sending enough data'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'client_disconnects'"
op|')'
newline|'\n'
name|'return'
name|'HTTPClientDisconnect'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'statuses'
op|'='
op|'['
op|']'
newline|'\n'
name|'reasons'
op|'='
op|'['
op|']'
newline|'\n'
name|'bodies'
op|'='
op|'['
op|']'
newline|'\n'
name|'etags'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'conn'
name|'in'
name|'conns'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'conn'
op|'.'
name|'resp'
op|':'
newline|'\n'
indent|'                        '
name|'response'
op|'='
name|'conn'
op|'.'
name|'resp'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'response'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
dedent|''
name|'statuses'
op|'.'
name|'append'
op|'('
name|'response'
op|'.'
name|'status'
op|')'
newline|'\n'
name|'reasons'
op|'.'
name|'append'
op|'('
name|'response'
op|'.'
name|'reason'
op|')'
newline|'\n'
name|'bodies'
op|'.'
name|'append'
op|'('
name|'response'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'status'
op|'>='
name|'HTTP_INTERNAL_SERVER_ERROR'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'error_occurred'
op|'('
nl|'\n'
name|'conn'
op|'.'
name|'node'
op|','
nl|'\n'
name|'_'
op|'('
string|"'ERROR %(status)d %(body)s From Object Server '"
nl|'\n'
string|"'re: %(path)s'"
op|')'
op|'%'
nl|'\n'
op|'{'
string|"'status'"
op|':'
name|'response'
op|'.'
name|'status'
op|','
nl|'\n'
string|"'body'"
op|':'
name|'bodies'
op|'['
op|'-'
number|'1'
op|']'
op|'['
op|':'
number|'1024'
op|']'
op|','
string|"'path'"
op|':'
name|'req'
op|'.'
name|'path'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'is_success'
op|'('
name|'response'
op|'.'
name|'status'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'etags'
op|'.'
name|'add'
op|'('
name|'response'
op|'.'
name|'getheader'
op|'('
string|"'etag'"
op|')'
op|'.'
name|'strip'
op|'('
string|'\'"\''
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'exception_occurred'
op|'('
nl|'\n'
name|'conn'
op|'.'
name|'node'
op|','
name|'_'
op|'('
string|"'Object'"
op|')'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Trying to get final status of PUT to %s'"
op|')'
op|'%'
name|'req'
op|'.'
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'len'
op|'('
name|'etags'
op|')'
op|'>'
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'app'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Object servers returned %s mismatched etags'"
op|')'
op|','
name|'len'
op|'('
name|'etags'
op|')'
op|')'
newline|'\n'
name|'return'
name|'HTTPServerError'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'etag'
op|'='
name|'etags'
op|'.'
name|'pop'
op|'('
op|')'
name|'if'
name|'len'
op|'('
name|'etags'
op|')'
name|'else'
name|'None'
newline|'\n'
name|'while'
name|'len'
op|'('
name|'statuses'
op|')'
op|'<'
name|'len'
op|'('
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'statuses'
op|'.'
name|'append'
op|'('
name|'HTTP_SERVICE_UNAVAILABLE'
op|')'
newline|'\n'
name|'reasons'
op|'.'
name|'append'
op|'('
string|"''"
op|')'
newline|'\n'
name|'bodies'
op|'.'
name|'append'
op|'('
string|"''"
op|')'
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'self'
op|'.'
name|'best_response'
op|'('
name|'req'
op|','
name|'statuses'
op|','
name|'reasons'
op|','
name|'bodies'
op|','
nl|'\n'
name|'_'
op|'('
string|"'Object PUT'"
op|')'
op|','
name|'etag'
op|'='
name|'etag'
op|')'
newline|'\n'
name|'if'
name|'source_header'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'X-Copied-From'"
op|']'
op|'='
name|'quote'
op|'('
nl|'\n'
name|'source_header'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'2'
op|')'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'if'
string|"'last-modified'"
name|'in'
name|'source_resp'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'resp'
op|'.'
name|'headers'
op|'['
string|"'X-Copied-From-Last-Modified'"
op|']'
op|'='
name|'source_resp'
op|'.'
name|'headers'
op|'['
string|"'last-modified'"
op|']'
newline|'\n'
dedent|''
name|'copy_headers_into'
op|'('
name|'req'
op|','
name|'resp'
op|')'
newline|'\n'
dedent|''
name|'resp'
op|'.'
name|'last_modified'
op|'='
name|'float'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'cors_validation'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|DELETE
name|'def'
name|'DELETE'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP DELETE request handler."""'
newline|'\n'
name|'container_info'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'req'
op|')'
newline|'\n'
name|'container_partition'
op|'='
name|'container_info'
op|'['
string|"'partition'"
op|']'
newline|'\n'
name|'containers'
op|'='
name|'container_info'
op|'['
string|"'nodes'"
op|']'
newline|'\n'
name|'req'
op|'.'
name|'acl'
op|'='
name|'container_info'
op|'['
string|"'write_acl'"
op|']'
newline|'\n'
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift_sync_key'"
op|']'
op|'='
name|'container_info'
op|'['
string|"'sync_key'"
op|']'
newline|'\n'
name|'object_versions'
op|'='
name|'container_info'
op|'['
string|"'versions'"
op|']'
newline|'\n'
name|'if'
name|'object_versions'
op|':'
newline|'\n'
comment|'# this is a version manifest and needs to be handled differently'
nl|'\n'
indent|'            '
name|'lcontainer'
op|'='
name|'object_versions'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'prefix_len'
op|'='
string|"'%03x'"
op|'%'
name|'len'
op|'('
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'lprefix'
op|'='
name|'prefix_len'
op|'+'
name|'self'
op|'.'
name|'object_name'
op|'+'
string|"'/'"
newline|'\n'
name|'last_item'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'last_item'
name|'in'
name|'self'
op|'.'
name|'_listing_iter'
op|'('
name|'lcontainer'
op|','
name|'lprefix'
op|','
nl|'\n'
name|'req'
op|'.'
name|'environ'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ListingIterNotFound'
op|':'
newline|'\n'
comment|'# no worries, last_item is None'
nl|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'except'
name|'ListingIterNotAuthorized'
op|','
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'err'
op|'.'
name|'aresp'
newline|'\n'
dedent|''
name|'except'
name|'ListingIterError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPServerError'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'last_item'
op|':'
newline|'\n'
comment|'# there are older versions so copy the previous version to the'
nl|'\n'
comment|'# current object and delete the previous version'
nl|'\n'
indent|'                '
name|'orig_container'
op|'='
name|'self'
op|'.'
name|'container_name'
newline|'\n'
name|'orig_obj'
op|'='
name|'self'
op|'.'
name|'object_name'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'lcontainer'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'last_item'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'copy_path'
op|'='
string|"'/'"
op|'+'
name|'self'
op|'.'
name|'account_name'
op|'+'
string|"'/'"
op|'+'
name|'self'
op|'.'
name|'container_name'
op|'+'
string|"'/'"
op|'+'
name|'self'
op|'.'
name|'object_name'
newline|'\n'
name|'copy_headers'
op|'='
op|'{'
string|"'X-Newest'"
op|':'
string|"'True'"
op|','
nl|'\n'
string|"'Destination'"
op|':'
name|'orig_container'
op|'+'
string|"'/'"
op|'+'
name|'orig_obj'
nl|'\n'
op|'}'
newline|'\n'
name|'copy_environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'COPY'"
op|','
nl|'\n'
string|"'swift_versioned_copy'"
op|':'
name|'True'
nl|'\n'
op|'}'
newline|'\n'
name|'creq'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'copy_path'
op|','
name|'headers'
op|'='
name|'copy_headers'
op|','
nl|'\n'
name|'environ'
op|'='
name|'copy_environ'
op|')'
newline|'\n'
name|'copy_resp'
op|'='
name|'self'
op|'.'
name|'COPY'
op|'('
name|'creq'
op|')'
newline|'\n'
name|'if'
name|'is_client_error'
op|'('
name|'copy_resp'
op|'.'
name|'status_int'
op|')'
op|':'
newline|'\n'
comment|'# some user error, maybe permissions'
nl|'\n'
indent|'                    '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'is_success'
op|'('
name|'copy_resp'
op|'.'
name|'status_int'
op|')'
op|':'
newline|'\n'
comment|'# could not copy the data, bail'
nl|'\n'
indent|'                    '
name|'return'
name|'HTTPServiceUnavailable'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
comment|'# reset these because the COPY changed them'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'container_name'
op|'='
name|'lcontainer'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'last_item'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'new_del_req'
op|'='
name|'Request'
op|'.'
name|'blank'
op|'('
name|'copy_path'
op|','
name|'environ'
op|'='
name|'req'
op|'.'
name|'environ'
op|')'
newline|'\n'
name|'container_info'
op|'='
name|'self'
op|'.'
name|'container_info'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'req'
op|')'
newline|'\n'
name|'container_partition'
op|'='
name|'container_info'
op|'['
string|"'partition'"
op|']'
newline|'\n'
name|'containers'
op|'='
name|'container_info'
op|'['
string|"'nodes'"
op|']'
newline|'\n'
name|'new_del_req'
op|'.'
name|'acl'
op|'='
name|'container_info'
op|'['
string|"'write_acl'"
op|']'
newline|'\n'
name|'new_del_req'
op|'.'
name|'path_info'
op|'='
name|'copy_path'
newline|'\n'
name|'req'
op|'='
name|'new_del_req'
newline|'\n'
comment|"# remove 'X-If-Delete-At', since it is not for the older copy"
nl|'\n'
name|'if'
string|"'X-If-Delete-At'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                    '
name|'del'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-If-Delete-At'"
op|']'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
string|"'swift.authorize'"
name|'in'
name|'req'
op|'.'
name|'environ'
op|':'
newline|'\n'
indent|'            '
name|'aresp'
op|'='
name|'req'
op|'.'
name|'environ'
op|'['
string|"'swift.authorize'"
op|']'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'aresp'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'aresp'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'containers'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'partition'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|'.'
name|'get_nodes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account_name'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
comment|'# Used by container sync feature'
nl|'\n'
name|'if'
string|"'x-timestamp'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'normalize_timestamp'
op|'('
name|'float'
op|'('
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPBadRequest'
op|'('
nl|'\n'
name|'request'
op|'='
name|'req'
op|','
name|'content_type'
op|'='
string|"'text/plain'"
op|','
nl|'\n'
name|'body'
op|'='
string|"'X-Timestamp should be a UNIX timestamp float value; '"
nl|'\n'
string|"'was %r'"
op|'%'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'headers'
op|'='
name|'self'
op|'.'
name|'_backend_requests'
op|'('
nl|'\n'
name|'req'
op|','
name|'len'
op|'('
name|'nodes'
op|')'
op|','
name|'container_partition'
op|','
name|'containers'
op|')'
newline|'\n'
name|'resp'
op|'='
name|'self'
op|'.'
name|'make_requests'
op|'('
name|'req'
op|','
name|'self'
op|'.'
name|'app'
op|'.'
name|'object_ring'
op|','
nl|'\n'
name|'partition'
op|','
string|"'DELETE'"
op|','
name|'req'
op|'.'
name|'path_info'
op|','
name|'headers'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'cors_validation'
newline|'\n'
op|'@'
name|'delay_denial'
newline|'\n'
DECL|member|COPY
name|'def'
name|'COPY'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""HTTP COPY request handler."""'
newline|'\n'
name|'dest'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'Destination'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'dest'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'body'
op|'='
string|"'Destination header required'"
op|')'
newline|'\n'
dedent|''
name|'dest'
op|'='
name|'unquote'
op|'('
name|'dest'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'dest'
op|'.'
name|'startswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'dest'
op|'='
string|"'/'"
op|'+'
name|'dest'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'_junk'
op|','
name|'dest_container'
op|','
name|'dest_object'
op|'='
name|'dest'
op|'.'
name|'split'
op|'('
string|"'/'"
op|','
number|'2'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
nl|'\n'
name|'request'
op|'='
name|'req'
op|','
nl|'\n'
name|'body'
op|'='
string|"'Destination header must be of the form '"
nl|'\n'
string|"'<container name>/<object name>'"
op|')'
newline|'\n'
dedent|''
name|'source'
op|'='
string|"'/'"
op|'+'
name|'self'
op|'.'
name|'container_name'
op|'+'
string|"'/'"
op|'+'
name|'self'
op|'.'
name|'object_name'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
name|'dest_container'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
name|'dest_object'
newline|'\n'
comment|'# re-write the existing request as a PUT instead of creating a new one'
nl|'\n'
comment|'# since this one is already attached to the posthooklogger'
nl|'\n'
name|'req'
op|'.'
name|'method'
op|'='
string|"'PUT'"
newline|'\n'
name|'req'
op|'.'
name|'path_info'
op|'='
string|"'/'"
op|'+'
name|'self'
op|'.'
name|'account_name'
op|'+'
name|'dest'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|'='
number|'0'
newline|'\n'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'X-Copy-From'"
op|']'
op|'='
name|'quote'
op|'('
name|'source'
op|')'
newline|'\n'
name|'del'
name|'req'
op|'.'
name|'headers'
op|'['
string|"'Destination'"
op|']'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'PUT'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
