begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
string|'""" Object Server for Swift """'
newline|'\n'
nl|'\n'
name|'import'
name|'cPickle'
name|'as'
name|'pickle'
newline|'\n'
name|'import'
name|'json'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'multiprocessing'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'traceback'
newline|'\n'
name|'import'
name|'rfc822'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
name|'import'
name|'math'
newline|'\n'
name|'from'
name|'swift'
name|'import'
name|'gettext_'
name|'as'
name|'_'
newline|'\n'
name|'from'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'sleep'
op|','
name|'wsgi'
op|','
name|'Timeout'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'public'
op|','
name|'get_logger'
op|','
name|'config_true_value'
op|','
name|'timing_stats'
op|','
name|'replication'
op|','
name|'normalize_delete_at_timestamp'
op|','
name|'get_log_line'
op|','
name|'Timestamp'
op|','
name|'get_expirer_container'
op|','
name|'iter_multipart_mime_documents'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'bufferedhttp'
name|'import'
name|'http_connect'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'constraints'
name|'import'
name|'check_object_creation'
op|','
name|'valid_timestamp'
op|','
name|'check_utf8'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'ConnectionTimeout'
op|','
name|'DiskFileQuarantined'
op|','
name|'DiskFileNotExist'
op|','
name|'DiskFileCollision'
op|','
name|'DiskFileNoSpace'
op|','
name|'DiskFileDeleted'
op|','
name|'DiskFileDeviceUnavailable'
op|','
name|'DiskFileExpired'
op|','
name|'ChunkReadTimeout'
op|','
name|'DiskFileXattrNotSupported'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'ssync_receiver'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'http'
name|'import'
name|'is_success'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'base_storage_server'
name|'import'
name|'BaseStorageServer'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'request_helpers'
name|'import'
name|'get_name_and_placement'
op|','
name|'is_user_meta'
op|','
name|'is_sys_or_user_meta'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'HTTPAccepted'
op|','
name|'HTTPBadRequest'
op|','
name|'HTTPCreated'
op|','
name|'HTTPInternalServerError'
op|','
name|'HTTPNoContent'
op|','
name|'HTTPNotFound'
op|','
name|'HTTPPreconditionFailed'
op|','
name|'HTTPRequestTimeout'
op|','
name|'HTTPUnprocessableEntity'
op|','
name|'HTTPClientDisconnect'
op|','
name|'HTTPMethodNotAllowed'
op|','
name|'Request'
op|','
name|'Response'
op|','
name|'HTTPInsufficientStorage'
op|','
name|'HTTPForbidden'
op|','
name|'HTTPException'
op|','
name|'HeaderKeyDict'
op|','
name|'HTTPConflict'
op|','
name|'HTTPServerError'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
op|'.'
name|'diskfile'
name|'import'
name|'DATAFILE_SYSTEM_META'
op|','
name|'DiskFileRouter'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|iter_mime_headers_and_bodies
name|'def'
name|'iter_mime_headers_and_bodies'
op|'('
name|'wsgi_input'
op|','
name|'mime_boundary'
op|','
name|'read_chunk_size'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'mime_documents_iter'
op|'='
name|'iter_multipart_mime_documents'
op|'('
nl|'\n'
name|'wsgi_input'
op|','
name|'mime_boundary'
op|','
name|'read_chunk_size'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'file_like'
name|'in'
name|'mime_documents_iter'
op|':'
newline|'\n'
indent|'        '
name|'hdrs'
op|'='
name|'HeaderKeyDict'
op|'('
name|'rfc822'
op|'.'
name|'Message'
op|'('
name|'file_like'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'yield'
op|'('
name|'hdrs'
op|','
name|'file_like'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|drain
dedent|''
dedent|''
name|'def'
name|'drain'
op|'('
name|'file_like'
op|','
name|'read_size'
op|','
name|'timeout'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Read and discard any bytes from file_like.\n\n    :param file_like: file-like object to read from\n    :param read_size: how big a chunk to read at a time\n    :param timeout: how long to wait for a read (use None for no timeout)\n\n    :raises ChunkReadTimeout: if no chunk was read in time\n    """'
newline|'\n'
nl|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'ChunkReadTimeout'
op|'('
name|'timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'chunk'
op|'='
name|'file_like'
op|'.'
name|'read'
op|'('
name|'read_size'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'chunk'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|EventletPlungerString
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'EventletPlungerString'
op|'('
name|'str'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Eventlet won\'t send headers until it\'s accumulated at least\n    eventlet.wsgi.MINIMUM_CHUNK_SIZE bytes or the app iter is exhausted. If we\n    want to send the response body behind Eventlet\'s back, perhaps with some\n    zero-copy wizardry, then we have to unclog the plumbing in eventlet.wsgi\n    to force the headers out, so we use an EventletPlungerString to empty out\n    all of Eventlet\'s buffers.\n    """'
newline|'\n'
DECL|member|__len__
name|'def'
name|'__len__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'wsgi'
op|'.'
name|'MINIMUM_CHUNK_SIZE'
op|'+'
number|'1'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ObjectController
dedent|''
dedent|''
name|'class'
name|'ObjectController'
op|'('
name|'BaseStorageServer'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Implements the WSGI application for the Swift Object Server."""'
newline|'\n'
nl|'\n'
DECL|variable|server_type
name|'server_type'
op|'='
string|"'object-server'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'conf'
op|','
name|'logger'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Creates a new WSGI application for the Swift Object Server. An\n        example configuration is given at\n        <source-dir>/etc/object-server.conf-sample or\n        /etc/swift/object-server.conf-sample.\n        """'
newline|'\n'
name|'super'
op|'('
name|'ObjectController'
op|','
name|'self'
op|')'
op|'.'
name|'__init__'
op|'('
name|'conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'logger'
name|'or'
name|'get_logger'
op|'('
name|'conf'
op|','
name|'log_route'
op|'='
string|"'object-server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'node_timeout'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'node_timeout'"
op|','
number|'3'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn_timeout'
op|'='
name|'float'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'conn_timeout'"
op|','
number|'0.5'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'client_timeout'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'client_timeout'"
op|','
number|'60'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'disk_chunk_size'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'disk_chunk_size'"
op|','
number|'65536'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network_chunk_size'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'network_chunk_size'"
op|','
number|'65536'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_requests'
op|'='
name|'config_true_value'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'log_requests'"
op|','
string|"'true'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'max_upload_time'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'max_upload_time'"
op|','
number|'86400'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'slow'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'slow'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'keep_cache_private'
op|'='
name|'config_true_value'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'keep_cache_private'"
op|','
string|"'false'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'default_allowed_headers'
op|'='
string|"'''\n            content-disposition,\n            content-encoding,\n            x-delete-at,\n            x-object-manifest,\n            x-static-large-object,\n        '''"
newline|'\n'
name|'extra_allowed_headers'
op|'='
op|'['
nl|'\n'
name|'header'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'lower'
op|'('
op|')'
name|'for'
name|'header'
name|'in'
name|'conf'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'allowed_headers'"
op|','
name|'default_allowed_headers'
op|')'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
nl|'\n'
name|'if'
name|'header'
op|'.'
name|'strip'
op|'('
op|')'
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'allowed_headers'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'header'
name|'in'
name|'extra_allowed_headers'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'header'
name|'not'
name|'in'
name|'DATAFILE_SYSTEM_META'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'allowed_headers'
op|'.'
name|'add'
op|'('
name|'header'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'auto_create_account_prefix'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'auto_create_account_prefix'"
op|')'
name|'or'
string|"'.'"
newline|'\n'
name|'self'
op|'.'
name|'expiring_objects_account'
op|'='
name|'self'
op|'.'
name|'auto_create_account_prefix'
op|'+'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'expiring_objects_account_name'"
op|')'
name|'or'
string|"'expiring_objects'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'expiring_objects_container_divisor'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'expiring_objects_container_divisor'"
op|')'
name|'or'
number|'86400'
op|')'
newline|'\n'
comment|'# Initialization was successful, so now apply the network chunk size'
nl|'\n'
comment|'# parameter as the default read / write buffer size for the network'
nl|'\n'
comment|'# sockets.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# NOTE WELL: This is a class setting, so until we get set this on a'
nl|'\n'
comment|'# per-connection basis, this affects reading and writing on ALL'
nl|'\n'
comment|'# sockets, those between the proxy servers and external clients, and'
nl|'\n'
comment|'# those between the proxy servers and the other internal servers.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# ** Because the primary motivation for this is to optimize how data'
nl|'\n'
comment|'# is written back to the proxy server, we could use the value from the'
nl|'\n'
comment|'# disk_chunk_size parameter. However, it affects all created sockets'
nl|'\n'
comment|'# using this class so we have chosen to tie it to the'
nl|'\n'
comment|'# network_chunk_size parameter value instead.'
nl|'\n'
name|'socket'
op|'.'
name|'_fileobject'
op|'.'
name|'default_bufsize'
op|'='
name|'self'
op|'.'
name|'network_chunk_size'
newline|'\n'
nl|'\n'
comment|'# Provide further setup specific to an object server implementation.'
nl|'\n'
name|'self'
op|'.'
name|'setup'
op|'('
name|'conf'
op|')'
newline|'\n'
nl|'\n'
DECL|member|setup
dedent|''
name|'def'
name|'setup'
op|'('
name|'self'
op|','
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Implementation specific setup. This method is called at the very end\n        by the constructor to allow a specific implementation to modify\n        existing attributes or add its own attributes.\n\n        :param conf: WSGI configuration parameter\n        """'
newline|'\n'
nl|'\n'
comment|'# Common on-disk hierarchy shared across account, container and object'
nl|'\n'
comment|'# servers.'
nl|'\n'
name|'self'
op|'.'
name|'_diskfile_router'
op|'='
name|'DiskFileRouter'
op|'('
name|'conf'
op|','
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
comment|'# This is populated by global_conf_callback way below as the semaphore'
nl|'\n'
comment|'# is shared by all workers.'
nl|'\n'
name|'if'
string|"'replication_semaphore'"
name|'in'
name|'conf'
op|':'
newline|'\n'
comment|'# The value was put in a list so it could get past paste'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'replication_semaphore'
op|'='
name|'conf'
op|'['
string|"'replication_semaphore'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'replication_semaphore'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'replication_failure_threshold'
op|'='
name|'int'
op|'('
nl|'\n'
name|'conf'
op|'.'
name|'get'
op|'('
string|"'replication_failure_threshold'"
op|')'
name|'or'
number|'100'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replication_failure_ratio'
op|'='
name|'float'
op|'('
nl|'\n'
name|'conf'
op|'.'
name|'get'
op|'('
string|"'replication_failure_ratio'"
op|')'
name|'or'
number|'1.0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_diskfile
dedent|''
name|'def'
name|'get_diskfile'
op|'('
name|'self'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'policy'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Utility method for instantiating a DiskFile object supporting a given\n        REST API.\n\n        An implementation of the object server that wants to use a different\n        DiskFile class would simply over-ride this method to provide that\n        behavior.\n        """'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
op|'.'
name|'get_diskfile'
op|'('
nl|'\n'
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'policy'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|async_update
dedent|''
name|'def'
name|'async_update'
op|'('
name|'self'
op|','
name|'op'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'host'
op|','
name|'partition'
op|','
nl|'\n'
name|'contdevice'
op|','
name|'headers_out'
op|','
name|'objdevice'
op|','
name|'policy'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sends or saves an async update.\n\n        :param op: operation performed (ex: \'PUT\', or \'DELETE\')\n        :param account: account name for the object\n        :param container: container name for the object\n        :param obj: object name\n        :param host: host that the container is on\n        :param partition: partition that the container is on\n        :param contdevice: device name that the container is on\n        :param headers_out: dictionary of headers to send in the container\n                            request\n        :param objdevice: device name that the object is in\n        :param policy: the associated BaseStoragePolicy instance\n        """'
newline|'\n'
name|'headers_out'
op|'['
string|"'user-agent'"
op|']'
op|'='
string|"'object-server %s'"
op|'%'
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
newline|'\n'
name|'full_path'
op|'='
string|"'/%s/%s/%s'"
op|'%'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'if'
name|'all'
op|'('
op|'['
name|'host'
op|','
name|'partition'
op|','
name|'contdevice'
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'ConnectionTimeout'
op|'('
name|'self'
op|'.'
name|'conn_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'ip'
op|','
name|'port'
op|'='
name|'host'
op|'.'
name|'rsplit'
op|'('
string|"':'"
op|','
number|'1'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'http_connect'
op|'('
name|'ip'
op|','
name|'port'
op|','
name|'contdevice'
op|','
name|'partition'
op|','
name|'op'
op|','
nl|'\n'
name|'full_path'
op|','
name|'headers_out'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'response'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'is_success'
op|'('
name|'response'
op|'.'
name|'status'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'return'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'ERROR Container update failed '"
nl|'\n'
string|"'(saving for async update later): %(status)d '"
nl|'\n'
string|"'response from %(ip)s:%(port)s/%(dev)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'status'"
op|':'
name|'response'
op|'.'
name|'status'
op|','
string|"'ip'"
op|':'
name|'ip'
op|','
string|"'port'"
op|':'
name|'port'
op|','
nl|'\n'
string|"'dev'"
op|':'
name|'contdevice'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'ERROR container update failed with '"
nl|'\n'
string|"'%(ip)s:%(port)s/%(dev)s (saving for async update later)'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'ip'"
op|':'
name|'ip'
op|','
string|"'port'"
op|':'
name|'port'
op|','
string|"'dev'"
op|':'
name|'contdevice'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'data'
op|'='
op|'{'
string|"'op'"
op|':'
name|'op'
op|','
string|"'account'"
op|':'
name|'account'
op|','
string|"'container'"
op|':'
name|'container'
op|','
nl|'\n'
string|"'obj'"
op|':'
name|'obj'
op|','
string|"'headers'"
op|':'
name|'headers_out'
op|'}'
newline|'\n'
name|'timestamp'
op|'='
name|'headers_out'
op|'['
string|"'x-timestamp'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
op|'.'
name|'pickle_async_update'
op|'('
nl|'\n'
name|'objdevice'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'data'
op|','
name|'timestamp'
op|','
name|'policy'
op|')'
newline|'\n'
nl|'\n'
DECL|member|container_update
dedent|''
name|'def'
name|'container_update'
op|'('
name|'self'
op|','
name|'op'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'request'
op|','
nl|'\n'
name|'headers_out'
op|','
name|'objdevice'
op|','
name|'policy'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Update the container when objects are updated.\n\n        :param op: operation performed (ex: \'PUT\', or \'DELETE\')\n        :param account: account name for the object\n        :param container: container name for the object\n        :param obj: object name\n        :param request: the original request object driving the update\n        :param headers_out: dictionary of headers to send in the container\n                            request(s)\n        :param objdevice: device name that the object is in\n        :param policy:  the BaseStoragePolicy instance\n        """'
newline|'\n'
name|'headers_in'
op|'='
name|'request'
op|'.'
name|'headers'
newline|'\n'
name|'conthosts'
op|'='
op|'['
name|'h'
op|'.'
name|'strip'
op|'('
op|')'
name|'for'
name|'h'
name|'in'
nl|'\n'
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Container-Host'"
op|','
string|"''"
op|')'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
op|']'
newline|'\n'
name|'contdevices'
op|'='
op|'['
name|'d'
op|'.'
name|'strip'
op|'('
op|')'
name|'for'
name|'d'
name|'in'
nl|'\n'
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Container-Device'"
op|','
string|"''"
op|')'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
op|']'
newline|'\n'
name|'contpartition'
op|'='
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Container-Partition'"
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'conthosts'
op|')'
op|'!='
name|'len'
op|'('
name|'contdevices'
op|')'
op|':'
newline|'\n'
comment|"# This shouldn't happen unless there's a bug in the proxy,"
nl|'\n'
comment|'# but if there is, we want to know about it.'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
string|"'ERROR Container update failed: different '"
nl|'\n'
string|"'numbers of hosts and devices in request: '"
nl|'\n'
string|'\'"%s" vs "%s"\''
op|')'
op|'%'
nl|'\n'
op|'('
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Container-Host'"
op|','
string|"''"
op|')'
op|','
nl|'\n'
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Container-Device'"
op|','
string|"''"
op|')'
op|')'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'contpartition'
op|':'
newline|'\n'
indent|'            '
name|'updates'
op|'='
name|'zip'
op|'('
name|'conthosts'
op|','
name|'contdevices'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'updates'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'headers_out'
op|'['
string|"'x-trans-id'"
op|']'
op|'='
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'x-trans-id'"
op|','
string|"'-'"
op|')'
newline|'\n'
name|'headers_out'
op|'['
string|"'referer'"
op|']'
op|'='
name|'request'
op|'.'
name|'as_referer'
op|'('
op|')'
newline|'\n'
name|'headers_out'
op|'['
string|"'X-Backend-Storage-Policy-Index'"
op|']'
op|'='
name|'int'
op|'('
name|'policy'
op|')'
newline|'\n'
name|'for'
name|'conthost'
op|','
name|'contdevice'
name|'in'
name|'updates'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'async_update'
op|'('
name|'op'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'conthost'
op|','
nl|'\n'
name|'contpartition'
op|','
name|'contdevice'
op|','
name|'headers_out'
op|','
nl|'\n'
name|'objdevice'
op|','
name|'policy'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_at_update
dedent|''
dedent|''
name|'def'
name|'delete_at_update'
op|'('
name|'self'
op|','
name|'op'
op|','
name|'delete_at'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'request'
op|','
name|'objdevice'
op|','
name|'policy'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Update the expiring objects container when objects are updated.\n\n        :param op: operation performed (ex: \'PUT\', or \'DELETE\')\n        :param delete_at: scheduled delete in UNIX seconds, int\n        :param account: account name for the object\n        :param container: container name for the object\n        :param obj: object name\n        :param request: the original request driving the update\n        :param objdevice: device name that the object is in\n        :param policy: the BaseStoragePolicy instance (used for tmp dir)\n        """'
newline|'\n'
name|'if'
name|'config_true_value'
op|'('
nl|'\n'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-backend-replication'"
op|','
string|"'f'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'delete_at'
op|'='
name|'normalize_delete_at_timestamp'
op|'('
name|'delete_at'
op|')'
newline|'\n'
name|'updates'
op|'='
op|'['
op|'('
name|'None'
op|','
name|'None'
op|')'
op|']'
newline|'\n'
nl|'\n'
name|'partition'
op|'='
name|'None'
newline|'\n'
name|'hosts'
op|'='
name|'contdevices'
op|'='
op|'['
name|'None'
op|']'
newline|'\n'
name|'headers_in'
op|'='
name|'request'
op|'.'
name|'headers'
newline|'\n'
name|'headers_out'
op|'='
name|'HeaderKeyDict'
op|'('
op|'{'
nl|'\n'
comment|'# system accounts are always Policy-0'
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
number|'0'
op|','
nl|'\n'
string|"'x-timestamp'"
op|':'
name|'request'
op|'.'
name|'timestamp'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'x-trans-id'"
op|':'
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'x-trans-id'"
op|','
string|"'-'"
op|')'
op|','
nl|'\n'
string|"'referer'"
op|':'
name|'request'
op|'.'
name|'as_referer'
op|'('
op|')'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'op'
op|'!='
string|"'DELETE'"
op|':'
newline|'\n'
indent|'            '
name|'delete_at_container'
op|'='
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At-Container'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'delete_at_container'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'warning'
op|'('
nl|'\n'
string|"'X-Delete-At-Container header must be specified for '"
nl|'\n'
string|"'expiring objects background %s to work properly. Making '"
nl|'\n'
string|"'best guess as to the container name for now.'"
op|'%'
name|'op'
op|')'
newline|'\n'
comment|'# TODO(gholt): In a future release, change the above warning to'
nl|'\n'
comment|'# a raised exception and remove the guess code below.'
nl|'\n'
name|'delete_at_container'
op|'='
name|'get_expirer_container'
op|'('
nl|'\n'
name|'delete_at'
op|','
name|'self'
op|'.'
name|'expiring_objects_container_divisor'
op|','
nl|'\n'
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'partition'
op|'='
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At-Partition'"
op|','
name|'None'
op|')'
newline|'\n'
name|'hosts'
op|'='
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At-Host'"
op|','
string|"''"
op|')'
newline|'\n'
name|'contdevices'
op|'='
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At-Device'"
op|','
string|"''"
op|')'
newline|'\n'
name|'updates'
op|'='
op|'['
name|'upd'
name|'for'
name|'upd'
name|'in'
nl|'\n'
name|'zip'
op|'('
op|'('
name|'h'
op|'.'
name|'strip'
op|'('
op|')'
name|'for'
name|'h'
name|'in'
name|'hosts'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
op|')'
op|','
nl|'\n'
op|'('
name|'c'
op|'.'
name|'strip'
op|'('
op|')'
name|'for'
name|'c'
name|'in'
name|'contdevices'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
op|')'
op|')'
nl|'\n'
name|'if'
name|'all'
op|'('
name|'upd'
op|')'
name|'and'
name|'partition'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'updates'
op|':'
newline|'\n'
indent|'                '
name|'updates'
op|'='
op|'['
op|'('
name|'None'
op|','
name|'None'
op|')'
op|']'
newline|'\n'
dedent|''
name|'headers_out'
op|'['
string|"'x-size'"
op|']'
op|'='
string|"'0'"
newline|'\n'
name|'headers_out'
op|'['
string|"'x-content-type'"
op|']'
op|'='
string|"'text/plain'"
newline|'\n'
name|'headers_out'
op|'['
string|"'x-etag'"
op|']'
op|'='
string|"'d41d8cd98f00b204e9800998ecf8427e'"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# DELETEs of old expiration data have no way of knowing what the'
nl|'\n'
comment|'# old X-Delete-At-Container was at the time of the initial setting'
nl|'\n'
comment|'# of the data, so a best guess is made here.'
nl|'\n'
comment|"# Worst case is a DELETE is issued now for something that doesn't"
nl|'\n'
comment|'# exist there and the original data is left where it is, where'
nl|'\n'
comment|'# it will be ignored when the expirer eventually tries to issue the'
nl|'\n'
comment|"# object DELETE later since the X-Delete-At value won't match up."
nl|'\n'
indent|'            '
name|'delete_at_container'
op|'='
name|'get_expirer_container'
op|'('
nl|'\n'
name|'delete_at'
op|','
name|'self'
op|'.'
name|'expiring_objects_container_divisor'
op|','
nl|'\n'
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
dedent|''
name|'delete_at_container'
op|'='
name|'normalize_delete_at_timestamp'
op|'('
nl|'\n'
name|'delete_at_container'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'host'
op|','
name|'contdevice'
name|'in'
name|'updates'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'async_update'
op|'('
nl|'\n'
name|'op'
op|','
name|'self'
op|'.'
name|'expiring_objects_account'
op|','
name|'delete_at_container'
op|','
nl|'\n'
string|"'%s-%s/%s/%s'"
op|'%'
op|'('
name|'delete_at'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
op|','
nl|'\n'
name|'host'
op|','
name|'partition'
op|','
name|'contdevice'
op|','
name|'headers_out'
op|','
name|'objdevice'
op|','
nl|'\n'
name|'policy'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_make_timeout_reader
dedent|''
dedent|''
name|'def'
name|'_make_timeout_reader'
op|'('
name|'self'
op|','
name|'file_like'
op|')'
op|':'
newline|'\n'
DECL|function|timeout_reader
indent|'        '
name|'def'
name|'timeout_reader'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'ChunkReadTimeout'
op|'('
name|'self'
op|'.'
name|'client_timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'file_like'
op|'.'
name|'read'
op|'('
name|'self'
op|'.'
name|'network_chunk_size'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'timeout_reader'
newline|'\n'
nl|'\n'
DECL|member|_read_put_commit_message
dedent|''
name|'def'
name|'_read_put_commit_message'
op|'('
name|'self'
op|','
name|'mime_documents_iter'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rcvd_commit'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'ChunkReadTimeout'
op|'('
name|'self'
op|'.'
name|'client_timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'commit_hdrs'
op|','
name|'commit_iter'
op|'='
name|'next'
op|'('
name|'mime_documents_iter'
op|')'
newline|'\n'
name|'if'
name|'commit_hdrs'
op|'.'
name|'get'
op|'('
string|"'X-Document'"
op|','
name|'None'
op|')'
op|'=='
string|'"put commit"'
op|':'
newline|'\n'
indent|'                    '
name|'rcvd_commit'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'drain'
op|'('
name|'commit_iter'
op|','
name|'self'
op|'.'
name|'network_chunk_size'
op|','
name|'self'
op|'.'
name|'client_timeout'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'HTTPClientDisconnect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
string|'"couldn\'t find PUT commit MIME doc"'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'rcvd_commit'
newline|'\n'
nl|'\n'
DECL|member|_read_metadata_footer
dedent|''
name|'def'
name|'_read_metadata_footer'
op|'('
name|'self'
op|','
name|'mime_documents_iter'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'ChunkReadTimeout'
op|'('
name|'self'
op|'.'
name|'client_timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'footer_hdrs'
op|','
name|'footer_iter'
op|'='
name|'next'
op|'('
name|'mime_documents_iter'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'HTTPClientDisconnect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
string|'"couldn\'t find footer MIME doc"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'timeout_reader'
op|'='
name|'self'
op|'.'
name|'_make_timeout_reader'
op|'('
name|'footer_iter'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'footer_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'iter'
op|'('
name|'timeout_reader'
op|','
string|"''"
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'HTTPClientDisconnect'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'footer_md5'
op|'='
name|'footer_hdrs'
op|'.'
name|'get'
op|'('
string|"'Content-MD5'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'footer_md5'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
string|'"no Content-MD5 in footer"'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'footer_md5'
op|'!='
name|'md5'
op|'('
name|'footer_body'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'HTTPUnprocessableEntity'
op|'('
name|'body'
op|'='
string|'"footer MD5 mismatch"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HeaderKeyDict'
op|'('
name|'json'
op|'.'
name|'loads'
op|'('
name|'footer_body'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'HTTPBadRequest'
op|'('
string|'"invalid JSON for footer doc"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_check_container_override
dedent|''
dedent|''
name|'def'
name|'_check_container_override'
op|'('
name|'self'
op|','
name|'update_headers'
op|','
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'key'
op|','
name|'val'
name|'in'
name|'metadata'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'override_prefix'
op|'='
string|"'x-backend-container-update-override-'"
newline|'\n'
name|'if'
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
name|'override_prefix'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'override'
op|'='
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'replace'
op|'('
name|'override_prefix'
op|','
string|"'x-'"
op|')'
newline|'\n'
name|'update_headers'
op|'['
name|'override'
op|']'
op|'='
name|'val'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'timing_stats'
op|'('
op|')'
newline|'\n'
DECL|member|POST
name|'def'
name|'POST'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handle HTTP POST requests for the Swift Object Server."""'
newline|'\n'
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'policy'
op|'='
name|'get_name_and_placement'
op|'('
name|'request'
op|','
number|'5'
op|','
number|'5'
op|','
name|'True'
op|')'
newline|'\n'
name|'req_timestamp'
op|'='
name|'valid_timestamp'
op|'('
name|'request'
op|')'
newline|'\n'
name|'new_delete_at'
op|'='
name|'int'
op|'('
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At'"
op|')'
name|'or'
number|'0'
op|')'
newline|'\n'
name|'if'
name|'new_delete_at'
name|'and'
name|'new_delete_at'
op|'<'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
string|"'X-Delete-At in past'"
op|','
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'disk_file'
op|'='
name|'self'
op|'.'
name|'get_diskfile'
op|'('
nl|'\n'
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'policy'
op|'='
name|'policy'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileDeviceUnavailable'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'orig_metadata'
op|'='
name|'disk_file'
op|'.'
name|'read_metadata'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileXattrNotSupported'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'DiskFileNotExist'
op|','
name|'DiskFileQuarantined'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'orig_timestamp'
op|'='
name|'Timestamp'
op|'('
name|'orig_metadata'
op|'.'
name|'get'
op|'('
string|"'X-Timestamp'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'if'
name|'orig_timestamp'
op|'>='
name|'req_timestamp'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPConflict'
op|'('
nl|'\n'
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Timestamp'"
op|':'
name|'orig_timestamp'
op|'.'
name|'internal'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'req_timestamp'
op|'.'
name|'internal'
op|'}'
newline|'\n'
name|'metadata'
op|'.'
name|'update'
op|'('
name|'val'
name|'for'
name|'val'
name|'in'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
nl|'\n'
name|'if'
name|'is_user_meta'
op|'('
string|"'object'"
op|','
name|'val'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
name|'for'
name|'header_key'
name|'in'
name|'self'
op|'.'
name|'allowed_headers'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'header_key'
name|'in'
name|'request'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'header_caps'
op|'='
name|'header_key'
op|'.'
name|'title'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'['
name|'header_caps'
op|']'
op|'='
name|'request'
op|'.'
name|'headers'
op|'['
name|'header_key'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'orig_delete_at'
op|'='
name|'int'
op|'('
name|'orig_metadata'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At'"
op|')'
name|'or'
number|'0'
op|')'
newline|'\n'
name|'if'
name|'orig_delete_at'
op|'!='
name|'new_delete_at'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'new_delete_at'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'delete_at_update'
op|'('
string|"'PUT'"
op|','
name|'new_delete_at'
op|','
name|'account'
op|','
name|'container'
op|','
nl|'\n'
name|'obj'
op|','
name|'request'
op|','
name|'device'
op|','
name|'policy'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'orig_delete_at'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'delete_at_update'
op|'('
string|"'DELETE'"
op|','
name|'orig_delete_at'
op|','
name|'account'
op|','
nl|'\n'
name|'container'
op|','
name|'obj'
op|','
name|'request'
op|','
name|'device'
op|','
nl|'\n'
name|'policy'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'disk_file'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'DiskFileXattrNotSupported'
op|','
name|'DiskFileNoSpace'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'HTTPAccepted'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'timing_stats'
op|'('
op|')'
newline|'\n'
DECL|member|PUT
name|'def'
name|'PUT'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handle HTTP PUT requests for the Swift Object Server."""'
newline|'\n'
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'policy'
op|'='
name|'get_name_and_placement'
op|'('
name|'request'
op|','
number|'5'
op|','
number|'5'
op|','
name|'True'
op|')'
newline|'\n'
name|'req_timestamp'
op|'='
name|'valid_timestamp'
op|'('
name|'request'
op|')'
newline|'\n'
name|'error_response'
op|'='
name|'check_object_creation'
op|'('
name|'request'
op|','
name|'obj'
op|')'
newline|'\n'
name|'if'
name|'error_response'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'error_response'
newline|'\n'
dedent|''
name|'new_delete_at'
op|'='
name|'int'
op|'('
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At'"
op|')'
name|'or'
number|'0'
op|')'
newline|'\n'
name|'if'
name|'new_delete_at'
name|'and'
name|'new_delete_at'
op|'<'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
string|"'X-Delete-At in past'"
op|','
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'fsize'
op|'='
name|'request'
op|'.'
name|'message_length'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
name|'str'
op|'('
name|'e'
op|')'
op|','
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
nl|'\n'
comment|'# In case of multipart-MIME put, the proxy sends a chunked request,'
nl|'\n'
comment|'# but may let us know the real content length so we can verify that'
nl|'\n'
comment|'# we have enough disk space to hold the object.'
nl|'\n'
dedent|''
name|'if'
name|'fsize'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'fsize'
op|'='
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Backend-Obj-Content-Length'"
op|')'
newline|'\n'
name|'if'
name|'fsize'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'fsize'
op|'='
name|'int'
op|'('
name|'fsize'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
name|'str'
op|'('
name|'e'
op|')'
op|','
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
comment|'# SSYNC will include Frag-Index header for subrequests to primary'
nl|'\n'
comment|'# nodes; handoff nodes should 409 subrequests to over-write an'
nl|'\n'
comment|'# existing data fragment until they offloaded the existing fragment'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'frag_index'
op|'='
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Backend-Ssync-Frag-Index'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'disk_file'
op|'='
name|'self'
op|'.'
name|'get_diskfile'
op|'('
nl|'\n'
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'policy'
op|'='
name|'policy'
op|','
name|'frag_index'
op|'='
name|'frag_index'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileDeviceUnavailable'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'orig_metadata'
op|'='
name|'disk_file'
op|'.'
name|'read_metadata'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileXattrNotSupported'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'DiskFileNotExist'
op|','
name|'DiskFileQuarantined'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'orig_metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
comment|'# Checks for If-None-Match'
nl|'\n'
dedent|''
name|'if'
name|'request'
op|'.'
name|'if_none_match'
name|'is'
name|'not'
name|'None'
name|'and'
name|'orig_metadata'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'*'"
name|'in'
name|'request'
op|'.'
name|'if_none_match'
op|':'
newline|'\n'
comment|'# File exists already so return 412'
nl|'\n'
indent|'                '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'orig_metadata'
op|'.'
name|'get'
op|'('
string|"'ETag'"
op|')'
name|'in'
name|'request'
op|'.'
name|'if_none_match'
op|':'
newline|'\n'
comment|'# The current ETag matches, so return 412'
nl|'\n'
indent|'                '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'orig_timestamp'
op|'='
name|'Timestamp'
op|'('
name|'orig_metadata'
op|'.'
name|'get'
op|'('
string|"'X-Timestamp'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'if'
name|'orig_timestamp'
op|'>='
name|'req_timestamp'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPConflict'
op|'('
nl|'\n'
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Timestamp'"
op|':'
name|'orig_timestamp'
op|'.'
name|'internal'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'orig_delete_at'
op|'='
name|'int'
op|'('
name|'orig_metadata'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At'"
op|')'
name|'or'
number|'0'
op|')'
newline|'\n'
name|'upload_expiration'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
name|'self'
op|'.'
name|'max_upload_time'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'elapsed_time'
op|'='
number|'0'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'disk_file'
op|'.'
name|'create'
op|'('
name|'size'
op|'='
name|'fsize'
op|')'
name|'as'
name|'writer'
op|':'
newline|'\n'
indent|'                '
name|'upload_size'
op|'='
number|'0'
newline|'\n'
nl|'\n'
comment|'# If the proxy wants to send us object metadata after the'
nl|'\n'
comment|'# object body, it sets some headers. We have to tell the'
nl|'\n'
comment|"# proxy, in the 100 Continue response, that we're able to"
nl|'\n'
comment|'# parse a multipart MIME document and extract the object and'
nl|'\n'
comment|"# metadata from it. If we don't, then the proxy won't"
nl|'\n'
comment|'# actually send the footer metadata.'
nl|'\n'
name|'have_metadata_footer'
op|'='
name|'False'
newline|'\n'
name|'use_multiphase_commit'
op|'='
name|'False'
newline|'\n'
name|'mime_documents_iter'
op|'='
name|'iter'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'obj_input'
op|'='
name|'request'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
newline|'\n'
nl|'\n'
name|'hundred_continue_headers'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'config_true_value'
op|'('
nl|'\n'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'X-Backend-Obj-Multiphase-Commit'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'use_multiphase_commit'
op|'='
name|'True'
newline|'\n'
name|'hundred_continue_headers'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
string|"'X-Obj-Multiphase-Commit'"
op|','
string|"'yes'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'config_true_value'
op|'('
nl|'\n'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Backend-Obj-Metadata-Footer'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'have_metadata_footer'
op|'='
name|'True'
newline|'\n'
name|'hundred_continue_headers'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
string|"'X-Obj-Metadata-Footer'"
op|','
string|"'yes'"
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'have_metadata_footer'
name|'or'
name|'use_multiphase_commit'
op|':'
newline|'\n'
indent|'                    '
name|'obj_input'
op|'.'
name|'set_hundred_continue_response_headers'
op|'('
nl|'\n'
name|'hundred_continue_headers'
op|')'
newline|'\n'
name|'mime_boundary'
op|'='
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'X-Backend-Obj-Multipart-Mime-Boundary'"
op|')'
newline|'\n'
name|'if'
name|'not'
name|'mime_boundary'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'HTTPBadRequest'
op|'('
string|'"no MIME boundary"'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'with'
name|'ChunkReadTimeout'
op|'('
name|'self'
op|'.'
name|'client_timeout'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'mime_documents_iter'
op|'='
name|'iter_mime_headers_and_bodies'
op|'('
nl|'\n'
name|'request'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|','
nl|'\n'
name|'mime_boundary'
op|','
name|'self'
op|'.'
name|'network_chunk_size'
op|')'
newline|'\n'
name|'_junk_hdrs'
op|','
name|'obj_input'
op|'='
name|'next'
op|'('
name|'mime_documents_iter'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'HTTPRequestTimeout'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'timeout_reader'
op|'='
name|'self'
op|'.'
name|'_make_timeout_reader'
op|'('
name|'obj_input'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'for'
name|'chunk'
name|'in'
name|'iter'
op|'('
name|'timeout_reader'
op|','
string|"''"
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'start_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'if'
name|'start_time'
op|'>'
name|'upload_expiration'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'PUT.timeouts'"
op|')'
newline|'\n'
name|'return'
name|'HTTPRequestTimeout'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'etag'
op|'.'
name|'update'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'upload_size'
op|'='
name|'writer'
op|'.'
name|'write'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'elapsed_time'
op|'+='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'start_time'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPRequestTimeout'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'upload_size'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'transfer_rate'
op|'('
nl|'\n'
string|"'PUT.'"
op|'+'
name|'device'
op|'+'
string|"'.timing'"
op|','
name|'elapsed_time'
op|','
nl|'\n'
name|'upload_size'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'fsize'
name|'is'
name|'not'
name|'None'
name|'and'
name|'fsize'
op|'!='
name|'upload_size'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPClientDisconnect'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'footer_meta'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'have_metadata_footer'
op|':'
newline|'\n'
indent|'                    '
name|'footer_meta'
op|'='
name|'self'
op|'.'
name|'_read_metadata_footer'
op|'('
nl|'\n'
name|'mime_documents_iter'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'request_etag'
op|'='
op|'('
name|'footer_meta'
op|'.'
name|'get'
op|'('
string|"'etag'"
op|')'
name|'or'
nl|'\n'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'etag'"
op|','
string|"''"
op|')'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'if'
name|'request_etag'
name|'and'
name|'request_etag'
op|'!='
name|'etag'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPUnprocessableEntity'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'metadata'
op|'='
op|'{'
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'request'
op|'.'
name|'timestamp'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
name|'request'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|','
nl|'\n'
string|"'ETag'"
op|':'
name|'etag'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
name|'str'
op|'('
name|'upload_size'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'metadata'
op|'.'
name|'update'
op|'('
name|'val'
name|'for'
name|'val'
name|'in'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'items'
op|'('
op|')'
nl|'\n'
name|'if'
name|'is_sys_or_user_meta'
op|'('
string|"'object'"
op|','
name|'val'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
name|'metadata'
op|'.'
name|'update'
op|'('
name|'val'
name|'for'
name|'val'
name|'in'
name|'footer_meta'
op|'.'
name|'items'
op|'('
op|')'
nl|'\n'
name|'if'
name|'is_sys_or_user_meta'
op|'('
string|"'object'"
op|','
name|'val'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
name|'headers_to_copy'
op|'='
op|'('
nl|'\n'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'X-Backend-Replication-Headers'"
op|','
string|"''"
op|')'
op|'.'
name|'split'
op|'('
op|')'
op|'+'
nl|'\n'
name|'list'
op|'('
name|'self'
op|'.'
name|'allowed_headers'
op|')'
op|')'
newline|'\n'
name|'for'
name|'header_key'
name|'in'
name|'headers_to_copy'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'header_key'
name|'in'
name|'request'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                        '
name|'header_caps'
op|'='
name|'header_key'
op|'.'
name|'title'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'['
name|'header_caps'
op|']'
op|'='
name|'request'
op|'.'
name|'headers'
op|'['
name|'header_key'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'writer'
op|'.'
name|'put'
op|'('
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
comment|'# if the PUT requires a two-phase commit (a data and a commit'
nl|'\n'
comment|'# phase) send the proxy server another 100-continue response'
nl|'\n'
comment|'# to indicate that we are finished writing object data'
nl|'\n'
name|'if'
name|'use_multiphase_commit'
op|':'
newline|'\n'
indent|'                    '
name|'request'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'.'
name|'send_hundred_continue_response'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'_read_put_commit_message'
op|'('
name|'mime_documents_iter'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'return'
name|'HTTPServerError'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
comment|'# got 2nd phase confirmation, write a timestamp.durable'
nl|'\n'
comment|'# state file to indicate a successful PUT'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'writer'
op|'.'
name|'commit'
op|'('
name|'request'
op|'.'
name|'timestamp'
op|')'
newline|'\n'
nl|'\n'
comment|'# Drain any remaining MIME docs from the socket. There'
nl|'\n'
comment|"# shouldn't be any, but we must read the whole request body."
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                        '
name|'with'
name|'ChunkReadTimeout'
op|'('
name|'self'
op|'.'
name|'client_timeout'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'_junk_hdrs'
op|','
name|'_junk_body'
op|'='
name|'next'
op|'('
name|'mime_documents_iter'
op|')'
newline|'\n'
dedent|''
name|'drain'
op|'('
name|'_junk_body'
op|','
name|'self'
op|'.'
name|'network_chunk_size'
op|','
nl|'\n'
name|'self'
op|'.'
name|'client_timeout'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'ChunkReadTimeout'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'HTTPClientDisconnect'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
op|'('
name|'DiskFileXattrNotSupported'
op|','
name|'DiskFileNoSpace'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'orig_delete_at'
op|'!='
name|'new_delete_at'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'new_delete_at'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'delete_at_update'
op|'('
nl|'\n'
string|"'PUT'"
op|','
name|'new_delete_at'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'request'
op|','
nl|'\n'
name|'device'
op|','
name|'policy'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'orig_delete_at'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'delete_at_update'
op|'('
nl|'\n'
string|"'DELETE'"
op|','
name|'orig_delete_at'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'request'
op|','
name|'device'
op|','
name|'policy'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'update_headers'
op|'='
name|'HeaderKeyDict'
op|'('
op|'{'
nl|'\n'
string|"'x-size'"
op|':'
name|'metadata'
op|'['
string|"'Content-Length'"
op|']'
op|','
nl|'\n'
string|"'x-content-type'"
op|':'
name|'metadata'
op|'['
string|"'Content-Type'"
op|']'
op|','
nl|'\n'
string|"'x-timestamp'"
op|':'
name|'metadata'
op|'['
string|"'X-Timestamp'"
op|']'
op|','
nl|'\n'
string|"'x-etag'"
op|':'
name|'metadata'
op|'['
string|"'ETag'"
op|']'
op|'}'
op|')'
newline|'\n'
comment|'# apply any container update header overrides sent with request'
nl|'\n'
name|'self'
op|'.'
name|'_check_container_override'
op|'('
name|'update_headers'
op|','
name|'request'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_check_container_override'
op|'('
name|'update_headers'
op|','
name|'footer_meta'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_update'
op|'('
nl|'\n'
string|"'PUT'"
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'request'
op|','
nl|'\n'
name|'update_headers'
op|','
nl|'\n'
name|'device'
op|','
name|'policy'
op|')'
newline|'\n'
name|'return'
name|'HTTPCreated'
op|'('
name|'request'
op|'='
name|'request'
op|','
name|'etag'
op|'='
name|'etag'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'timing_stats'
op|'('
op|')'
newline|'\n'
DECL|member|GET
name|'def'
name|'GET'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handle HTTP GET requests for the Swift Object Server."""'
newline|'\n'
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'policy'
op|'='
name|'get_name_and_placement'
op|'('
name|'request'
op|','
number|'5'
op|','
number|'5'
op|','
name|'True'
op|')'
newline|'\n'
name|'keep_cache'
op|'='
name|'self'
op|'.'
name|'keep_cache_private'
name|'or'
op|'('
nl|'\n'
string|"'X-Auth-Token'"
name|'not'
name|'in'
name|'request'
op|'.'
name|'headers'
name|'and'
nl|'\n'
string|"'X-Storage-Token'"
name|'not'
name|'in'
name|'request'
op|'.'
name|'headers'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'disk_file'
op|'='
name|'self'
op|'.'
name|'get_diskfile'
op|'('
nl|'\n'
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'policy'
op|'='
name|'policy'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileDeviceUnavailable'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'disk_file'
op|'.'
name|'open'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'metadata'
op|'='
name|'disk_file'
op|'.'
name|'get_metadata'
op|'('
op|')'
newline|'\n'
name|'obj_size'
op|'='
name|'int'
op|'('
name|'metadata'
op|'['
string|"'Content-Length'"
op|']'
op|')'
newline|'\n'
name|'file_x_ts'
op|'='
name|'Timestamp'
op|'('
name|'metadata'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
newline|'\n'
name|'keep_cache'
op|'='
op|'('
name|'self'
op|'.'
name|'keep_cache_private'
name|'or'
nl|'\n'
op|'('
string|"'X-Auth-Token'"
name|'not'
name|'in'
name|'request'
op|'.'
name|'headers'
name|'and'
nl|'\n'
string|"'X-Storage-Token'"
name|'not'
name|'in'
name|'request'
op|'.'
name|'headers'
op|')'
op|')'
newline|'\n'
name|'conditional_etag'
op|'='
name|'None'
newline|'\n'
name|'if'
string|"'X-Backend-Etag-Is-At'"
name|'in'
name|'request'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                    '
name|'conditional_etag'
op|'='
name|'metadata'
op|'.'
name|'get'
op|'('
nl|'\n'
name|'request'
op|'.'
name|'headers'
op|'['
string|"'X-Backend-Etag-Is-At'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'Response'
op|'('
nl|'\n'
name|'app_iter'
op|'='
name|'disk_file'
op|'.'
name|'reader'
op|'('
name|'keep_cache'
op|'='
name|'keep_cache'
op|')'
op|','
nl|'\n'
name|'request'
op|'='
name|'request'
op|','
name|'conditional_response'
op|'='
name|'True'
op|','
nl|'\n'
name|'conditional_etag'
op|'='
name|'conditional_etag'
op|')'
newline|'\n'
name|'response'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
name|'metadata'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'Content-Type'"
op|','
string|"'application/octet-stream'"
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'metadata'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'is_sys_or_user_meta'
op|'('
string|"'object'"
op|','
name|'key'
op|')'
name|'or'
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
name|'self'
op|'.'
name|'allowed_headers'
op|':'
newline|'\n'
indent|'                        '
name|'response'
op|'.'
name|'headers'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'response'
op|'.'
name|'etag'
op|'='
name|'metadata'
op|'['
string|"'ETag'"
op|']'
newline|'\n'
name|'response'
op|'.'
name|'last_modified'
op|'='
name|'math'
op|'.'
name|'ceil'
op|'('
name|'float'
op|'('
name|'file_x_ts'
op|')'
op|')'
newline|'\n'
name|'response'
op|'.'
name|'content_length'
op|'='
name|'obj_size'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'response'
op|'.'
name|'content_encoding'
op|'='
name|'metadata'
op|'['
nl|'\n'
string|"'Content-Encoding'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                    '
name|'pass'
newline|'\n'
dedent|''
name|'response'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'file_x_ts'
op|'.'
name|'normal'
newline|'\n'
name|'response'
op|'.'
name|'headers'
op|'['
string|"'X-Backend-Timestamp'"
op|']'
op|'='
name|'file_x_ts'
op|'.'
name|'internal'
newline|'\n'
name|'resp'
op|'='
name|'request'
op|'.'
name|'get_response'
op|'('
name|'response'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'DiskFileXattrNotSupported'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'DiskFileNotExist'
op|','
name|'DiskFileQuarantined'
op|')'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'e'
op|','
string|"'timestamp'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'['
string|"'X-Backend-Timestamp'"
op|']'
op|'='
name|'e'
op|'.'
name|'timestamp'
op|'.'
name|'internal'
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'request'
op|','
name|'headers'
op|'='
name|'headers'
op|','
nl|'\n'
name|'conditional_response'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'timing_stats'
op|'('
name|'sample_rate'
op|'='
number|'0.8'
op|')'
newline|'\n'
DECL|member|HEAD
name|'def'
name|'HEAD'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handle HTTP HEAD requests for the Swift Object Server."""'
newline|'\n'
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'policy'
op|'='
name|'get_name_and_placement'
op|'('
name|'request'
op|','
number|'5'
op|','
number|'5'
op|','
name|'True'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'disk_file'
op|'='
name|'self'
op|'.'
name|'get_diskfile'
op|'('
nl|'\n'
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'policy'
op|'='
name|'policy'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileDeviceUnavailable'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
name|'disk_file'
op|'.'
name|'read_metadata'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileXattrNotSupported'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'DiskFileNotExist'
op|','
name|'DiskFileQuarantined'
op|')'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'headers'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'if'
name|'hasattr'
op|'('
name|'e'
op|','
string|"'timestamp'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|'['
string|"'X-Backend-Timestamp'"
op|']'
op|'='
name|'e'
op|'.'
name|'timestamp'
op|'.'
name|'internal'
newline|'\n'
dedent|''
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'request'
op|','
name|'headers'
op|'='
name|'headers'
op|','
nl|'\n'
name|'conditional_response'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'conditional_etag'
op|'='
name|'None'
newline|'\n'
name|'if'
string|"'X-Backend-Etag-Is-At'"
name|'in'
name|'request'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'            '
name|'conditional_etag'
op|'='
name|'metadata'
op|'.'
name|'get'
op|'('
nl|'\n'
name|'request'
op|'.'
name|'headers'
op|'['
string|"'X-Backend-Etag-Is-At'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'Response'
op|'('
name|'request'
op|'='
name|'request'
op|','
name|'conditional_response'
op|'='
name|'True'
op|','
nl|'\n'
name|'conditional_etag'
op|'='
name|'conditional_etag'
op|')'
newline|'\n'
name|'response'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
name|'metadata'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'Content-Type'"
op|','
string|"'application/octet-stream'"
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'metadata'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'is_sys_or_user_meta'
op|'('
string|"'object'"
op|','
name|'key'
op|')'
name|'or'
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
name|'self'
op|'.'
name|'allowed_headers'
op|':'
newline|'\n'
indent|'                '
name|'response'
op|'.'
name|'headers'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'response'
op|'.'
name|'etag'
op|'='
name|'metadata'
op|'['
string|"'ETag'"
op|']'
newline|'\n'
name|'ts'
op|'='
name|'Timestamp'
op|'('
name|'metadata'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
newline|'\n'
name|'response'
op|'.'
name|'last_modified'
op|'='
name|'math'
op|'.'
name|'ceil'
op|'('
name|'float'
op|'('
name|'ts'
op|')'
op|')'
newline|'\n'
comment|'# Needed for container sync feature'
nl|'\n'
name|'response'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'ts'
op|'.'
name|'normal'
newline|'\n'
name|'response'
op|'.'
name|'headers'
op|'['
string|"'X-Backend-Timestamp'"
op|']'
op|'='
name|'ts'
op|'.'
name|'internal'
newline|'\n'
name|'response'
op|'.'
name|'content_length'
op|'='
name|'int'
op|'('
name|'metadata'
op|'['
string|"'Content-Length'"
op|']'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'.'
name|'content_encoding'
op|'='
name|'metadata'
op|'['
string|"'Content-Encoding'"
op|']'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'return'
name|'response'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'timing_stats'
op|'('
op|')'
newline|'\n'
DECL|member|DELETE
name|'def'
name|'DELETE'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handle HTTP DELETE requests for the Swift Object Server."""'
newline|'\n'
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'policy'
op|'='
name|'get_name_and_placement'
op|'('
name|'request'
op|','
number|'5'
op|','
number|'5'
op|','
name|'True'
op|')'
newline|'\n'
name|'req_timestamp'
op|'='
name|'valid_timestamp'
op|'('
name|'request'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'disk_file'
op|'='
name|'self'
op|'.'
name|'get_diskfile'
op|'('
nl|'\n'
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'policy'
op|'='
name|'policy'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileDeviceUnavailable'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'orig_metadata'
op|'='
name|'disk_file'
op|'.'
name|'read_metadata'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileXattrNotSupported'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileExpired'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'orig_timestamp'
op|'='
name|'e'
op|'.'
name|'timestamp'
newline|'\n'
name|'orig_metadata'
op|'='
name|'e'
op|'.'
name|'metadata'
newline|'\n'
name|'response_class'
op|'='
name|'HTTPNotFound'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileDeleted'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'orig_timestamp'
op|'='
name|'e'
op|'.'
name|'timestamp'
newline|'\n'
name|'orig_metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'response_class'
op|'='
name|'HTTPNotFound'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'DiskFileNotExist'
op|','
name|'DiskFileQuarantined'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'orig_timestamp'
op|'='
number|'0'
newline|'\n'
name|'orig_metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'response_class'
op|'='
name|'HTTPNotFound'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'orig_timestamp'
op|'='
name|'Timestamp'
op|'('
name|'orig_metadata'
op|'.'
name|'get'
op|'('
string|"'X-Timestamp'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'if'
name|'orig_timestamp'
op|'<'
name|'req_timestamp'
op|':'
newline|'\n'
indent|'                '
name|'response_class'
op|'='
name|'HTTPNoContent'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'response_class'
op|'='
name|'HTTPConflict'
newline|'\n'
dedent|''
dedent|''
name|'response_timestamp'
op|'='
name|'max'
op|'('
name|'orig_timestamp'
op|','
name|'req_timestamp'
op|')'
newline|'\n'
name|'orig_delete_at'
op|'='
name|'int'
op|'('
name|'orig_metadata'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At'"
op|')'
name|'or'
number|'0'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'req_if_delete_at_val'
op|'='
name|'request'
op|'.'
name|'headers'
op|'['
string|"'x-if-delete-at'"
op|']'
newline|'\n'
name|'req_if_delete_at'
op|'='
name|'int'
op|'('
name|'req_if_delete_at_val'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
nl|'\n'
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'body'
op|'='
string|"'Bad X-If-Delete-At header value'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# request includes x-if-delete-at; we must not place a tombstone'
nl|'\n'
comment|'# if we can not verify the x-if-delete-at time'
nl|'\n'
indent|'            '
name|'if'
name|'not'
name|'orig_timestamp'
op|':'
newline|'\n'
comment|'# no object found at all'
nl|'\n'
indent|'                '
name|'return'
name|'HTTPNotFound'
op|'('
op|')'
newline|'\n'
dedent|''
name|'if'
name|'orig_delete_at'
op|'!='
name|'req_if_delete_at'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
nl|'\n'
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'body'
op|'='
string|"'X-If-Delete-At and X-Delete-At do not match'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|'# differentiate success from no object at all'
nl|'\n'
indent|'                '
name|'response_class'
op|'='
name|'HTTPNoContent'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'orig_delete_at'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'delete_at_update'
op|'('
string|"'DELETE'"
op|','
name|'orig_delete_at'
op|','
name|'account'
op|','
nl|'\n'
name|'container'
op|','
name|'obj'
op|','
name|'request'
op|','
name|'device'
op|','
nl|'\n'
name|'policy'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'orig_timestamp'
op|'<'
name|'req_timestamp'
op|':'
newline|'\n'
indent|'            '
name|'disk_file'
op|'.'
name|'delete'
op|'('
name|'req_timestamp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_update'
op|'('
nl|'\n'
string|"'DELETE'"
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'request'
op|','
nl|'\n'
name|'HeaderKeyDict'
op|'('
op|'{'
string|"'x-timestamp'"
op|':'
name|'req_timestamp'
op|'.'
name|'internal'
op|'}'
op|')'
op|','
nl|'\n'
name|'device'
op|','
name|'policy'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'response_class'
op|'('
nl|'\n'
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Timestamp'"
op|':'
name|'response_timestamp'
op|'.'
name|'internal'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'replication'
newline|'\n'
op|'@'
name|'timing_stats'
op|'('
name|'sample_rate'
op|'='
number|'0.1'
op|')'
newline|'\n'
DECL|member|REPLICATE
name|'def'
name|'REPLICATE'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handle REPLICATE requests for the Swift Object Server.  This is used\n        by the object replicator to get hashes for directories.\n\n        Note that the name REPLICATE is preserved for historical reasons as\n        this verb really just returns the hashes information for the specified\n        parameters and is used, for example, by both replication and EC.\n        """'
newline|'\n'
name|'device'
op|','
name|'partition'
op|','
name|'suffix_parts'
op|','
name|'policy'
op|'='
name|'get_name_and_placement'
op|'('
name|'request'
op|','
number|'2'
op|','
number|'3'
op|','
name|'True'
op|')'
newline|'\n'
name|'suffixes'
op|'='
name|'suffix_parts'
op|'.'
name|'split'
op|'('
string|"'-'"
op|')'
name|'if'
name|'suffix_parts'
name|'else'
op|'['
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'hashes'
op|'='
name|'self'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
op|'.'
name|'get_hashes'
op|'('
nl|'\n'
name|'device'
op|','
name|'partition'
op|','
name|'suffixes'
op|','
name|'policy'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileDeviceUnavailable'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'Response'
op|'('
name|'body'
op|'='
name|'pickle'
op|'.'
name|'dumps'
op|'('
name|'hashes'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'replication'
newline|'\n'
op|'@'
name|'timing_stats'
op|'('
name|'sample_rate'
op|'='
number|'0.1'
op|')'
newline|'\n'
DECL|member|SSYNC
name|'def'
name|'SSYNC'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'Response'
op|'('
name|'app_iter'
op|'='
name|'ssync_receiver'
op|'.'
name|'Receiver'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""WSGI Application entry point for the Swift Object Server."""'
newline|'\n'
name|'start_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'('
name|'env'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'txn_id'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-trans-id'"
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'check_utf8'
op|'('
name|'req'
op|'.'
name|'path_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'res'
op|'='
name|'HTTPPreconditionFailed'
op|'('
name|'body'
op|'='
string|"'Invalid UTF8 or contains NULL'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
comment|"# disallow methods which have not been marked 'public'"
nl|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'req'
op|'.'
name|'method'
name|'not'
name|'in'
name|'self'
op|'.'
name|'allowed_methods'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
name|'AttributeError'
op|'('
string|"'Not allowed method.'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'                    '
name|'res'
op|'='
name|'HTTPMethodNotAllowed'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'method'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
name|'req'
op|'.'
name|'method'
op|')'
newline|'\n'
name|'res'
op|'='
name|'method'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'DiskFileCollision'
op|':'
newline|'\n'
indent|'                '
name|'res'
op|'='
name|'HTTPForbidden'
op|'('
name|'request'
op|'='
name|'req'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'HTTPException'
name|'as'
name|'error_response'
op|':'
newline|'\n'
indent|'                '
name|'res'
op|'='
name|'error_response'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'ERROR __call__ error with %(method)s'"
nl|'\n'
string|"' %(path)s '"
op|')'
op|','
op|'{'
string|"'method'"
op|':'
name|'req'
op|'.'
name|'method'
op|','
string|"'path'"
op|':'
name|'req'
op|'.'
name|'path'
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'HTTPInternalServerError'
op|'('
name|'body'
op|'='
name|'traceback'
op|'.'
name|'format_exc'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'trans_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'start_time'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'log_requests'
op|':'
newline|'\n'
indent|'            '
name|'log_line'
op|'='
name|'get_log_line'
op|'('
name|'req'
op|','
name|'res'
op|','
name|'trans_time'
op|','
string|"''"
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'method'
name|'in'
op|'('
string|"'REPLICATE'"
op|','
string|"'SSYNC'"
op|')'
name|'or'
string|"'X-Backend-Replication'"
name|'in'
name|'req'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
name|'log_line'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
name|'log_line'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'req'
op|'.'
name|'method'
name|'in'
op|'('
string|"'PUT'"
op|','
string|"'DELETE'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'slow'
op|'='
name|'self'
op|'.'
name|'slow'
op|'-'
name|'trans_time'
newline|'\n'
name|'if'
name|'slow'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'sleep'
op|'('
name|'slow'
op|')'
newline|'\n'
nl|'\n'
comment|'# To be able to zero-copy send the object, we need a few things.'
nl|'\n'
comment|"# First, we have to be responding successfully to a GET, or else we're"
nl|'\n'
comment|'# not sending the object. Second, we have to be able to extract the'
nl|'\n'
comment|'# socket file descriptor from the WSGI input object. Third, the'
nl|'\n'
comment|'# diskfile has to support zero-copy send.'
nl|'\n'
comment|'#'
nl|'\n'
comment|"# There's a good chance that this could work for 206 responses too,"
nl|'\n'
comment|"# but the common case is sending the whole object, so we'll start"
nl|'\n'
comment|'# there.'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'GET'"
name|'and'
name|'res'
op|'.'
name|'status_int'
op|'=='
number|'200'
name|'and'
name|'isinstance'
op|'('
name|'env'
op|'['
string|"'wsgi.input'"
op|']'
op|','
name|'wsgi'
op|'.'
name|'Input'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'app_iter'
op|'='
name|'getattr'
op|'('
name|'res'
op|','
string|"'app_iter'"
op|','
name|'None'
op|')'
newline|'\n'
name|'checker'
op|'='
name|'getattr'
op|'('
name|'app_iter'
op|','
string|"'can_zero_copy_send'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'checker'
name|'and'
name|'checker'
op|'('
op|')'
op|':'
newline|'\n'
comment|'# For any kind of zero-copy thing like sendfile or splice, we'
nl|'\n'
comment|"# need the file descriptor. Eventlet doesn't provide a clean"
nl|'\n'
comment|'# way of getting that, so we resort to this.'
nl|'\n'
indent|'                '
name|'wsock'
op|'='
name|'env'
op|'['
string|"'wsgi.input'"
op|']'
op|'.'
name|'get_socket'
op|'('
op|')'
newline|'\n'
name|'wsockfd'
op|'='
name|'wsock'
op|'.'
name|'fileno'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|"# Don't call zero_copy_send() until after we force the HTTP"
nl|'\n'
comment|'# headers out of Eventlet and into the socket.'
nl|'\n'
DECL|function|zero_copy_iter
name|'def'
name|'zero_copy_iter'
op|'('
op|')'
op|':'
newline|'\n'
comment|"# If possible, set TCP_CORK so that headers don't"
nl|'\n'
comment|'# immediately go on the wire, but instead, wait for some'
nl|'\n'
comment|'# response body to make the TCP frames as large as'
nl|'\n'
comment|'# possible (and hence as few packets as possible).'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# On non-Linux systems, we might consider TCP_NODELAY, but'
nl|'\n'
comment|'# since the only known zero-copy-capable diskfile uses'
nl|'\n'
comment|"# Linux-specific syscalls, we'll defer that work until"
nl|'\n'
comment|'# someone needs it.'
nl|'\n'
indent|'                    '
name|'if'
name|'hasattr'
op|'('
name|'socket'
op|','
string|"'TCP_CORK'"
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'wsock'
op|'.'
name|'setsockopt'
op|'('
name|'socket'
op|'.'
name|'IPPROTO_TCP'
op|','
nl|'\n'
name|'socket'
op|'.'
name|'TCP_CORK'
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'yield'
name|'EventletPlungerString'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'app_iter'
op|'.'
name|'zero_copy_send'
op|'('
name|'wsockfd'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
string|'"zero_copy_send() blew up"'
op|')'
newline|'\n'
name|'raise'
newline|'\n'
dedent|''
name|'yield'
string|"''"
newline|'\n'
nl|'\n'
comment|'# Get headers ready to go out'
nl|'\n'
dedent|''
name|'res'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'return'
name|'zero_copy_iter'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'res'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'res'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|global_conf_callback
dedent|''
dedent|''
dedent|''
name|'def'
name|'global_conf_callback'
op|'('
name|'preloaded_app_conf'
op|','
name|'global_conf'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Callback for swift.common.wsgi.run_wsgi during the global_conf\n    creation so that we can add our replication_semaphore, used to\n    limit the number of concurrent REPLICATION_REQUESTS across all\n    workers.\n\n    :param preloaded_app_conf: The preloaded conf for the WSGI app.\n                               This conf instance will go away, so\n                               just read from it, don\'t write.\n    :param global_conf: The global conf that will eventually be\n                        passed to the app_factory function later.\n                        This conf is created before the worker\n                        subprocesses are forked, so can be useful to\n                        set up semaphores, shared memory, etc.\n    """'
newline|'\n'
name|'replication_concurrency'
op|'='
name|'int'
op|'('
nl|'\n'
name|'preloaded_app_conf'
op|'.'
name|'get'
op|'('
string|"'replication_concurrency'"
op|')'
name|'or'
number|'4'
op|')'
newline|'\n'
name|'if'
name|'replication_concurrency'
op|':'
newline|'\n'
comment|'# Have to put the value in a list so it can get past paste'
nl|'\n'
indent|'        '
name|'global_conf'
op|'['
string|"'replication_semaphore'"
op|']'
op|'='
op|'['
nl|'\n'
name|'multiprocessing'
op|'.'
name|'BoundedSemaphore'
op|'('
name|'replication_concurrency'
op|')'
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|app_factory
dedent|''
dedent|''
name|'def'
name|'app_factory'
op|'('
name|'global_conf'
op|','
op|'**'
name|'local_conf'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""paste.deploy app factory for creating WSGI object server apps"""'
newline|'\n'
name|'conf'
op|'='
name|'global_conf'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'update'
op|'('
name|'local_conf'
op|')'
newline|'\n'
name|'return'
name|'ObjectController'
op|'('
name|'conf'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
