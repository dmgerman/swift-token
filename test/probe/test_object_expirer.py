begin_unit
comment|'#!/usr/bin/python -u'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'from'
name|'nose'
name|'import'
name|'SkipTest'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'internal_client'
name|'import'
name|'InternalClient'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'manager'
name|'import'
name|'Manager'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'Timestamp'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'probe'
op|'.'
name|'common'
name|'import'
name|'ReplProbeTest'
op|','
name|'ENABLED_POLICIES'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'probe'
op|'.'
name|'test_container_merge_policy_index'
name|'import'
name|'BrainSplitter'
newline|'\n'
nl|'\n'
name|'from'
name|'swiftclient'
name|'import'
name|'client'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestObjectExpirer
name|'class'
name|'TestObjectExpirer'
op|'('
name|'ReplProbeTest'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'len'
op|'('
name|'ENABLED_POLICIES'
op|')'
op|'<'
number|'2'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'SkipTest'
op|'('
string|"'Need more than one policy'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'expirer'
op|'='
name|'Manager'
op|'('
op|'['
string|"'object-expirer'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'expirer'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'err'
op|'='
name|'self'
op|'.'
name|'expirer'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
name|'if'
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'SkipTest'
op|'('
string|"'Unable to verify object-expirer service'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'conf_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'self'
op|'.'
name|'expirer'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'conf_files'
op|'.'
name|'extend'
op|'('
name|'server'
op|'.'
name|'conf_files'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'conf_file'
op|'='
name|'conf_files'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'client'
op|'='
name|'InternalClient'
op|'('
name|'conf_file'
op|','
string|"'probe-test'"
op|','
number|'3'
op|')'
newline|'\n'
nl|'\n'
name|'super'
op|'('
name|'TestObjectExpirer'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_name'
op|'='
string|"'container-%s'"
op|'%'
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'object_name'
op|'='
string|"'object-%s'"
op|'%'
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'='
name|'BrainSplitter'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_expirer_object_split_brain
dedent|''
name|'def'
name|'test_expirer_object_split_brain'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'old_policy'
op|'='
name|'random'
op|'.'
name|'choice'
op|'('
name|'ENABLED_POLICIES'
op|')'
newline|'\n'
name|'wrong_policy'
op|'='
name|'random'
op|'.'
name|'choice'
op|'('
op|'['
name|'p'
name|'for'
name|'p'
name|'in'
name|'ENABLED_POLICIES'
nl|'\n'
name|'if'
name|'p'
op|'!='
name|'old_policy'
op|']'
op|')'
newline|'\n'
comment|'# create an expiring object and a container with the wrong policy'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'int'
op|'('
name|'old_policy'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_object'
op|'('
name|'headers'
op|'='
op|'{'
string|"'X-Delete-After'"
op|':'
number|'2'
op|'}'
op|')'
newline|'\n'
comment|'# get the object timestamp'
nl|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'get_object_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'int'
op|'('
name|'old_policy'
op|')'
op|'}'
op|')'
newline|'\n'
name|'create_timestamp'
op|'='
name|'Timestamp'
op|'('
name|'metadata'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
comment|'# get the expiring object updates in their queue, while we have all'
nl|'\n'
comment|'# the servers up'
nl|'\n'
name|'Manager'
op|'('
op|'['
string|"'object-updater'"
op|']'
op|')'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'stop_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'put_container'
op|'('
name|'int'
op|'('
name|'wrong_policy'
op|')'
op|')'
newline|'\n'
comment|"# don't start handoff servers, only wrong policy is available"
nl|'\n'
nl|'\n'
comment|'# make sure auto-created containers get in the account listing'
nl|'\n'
name|'Manager'
op|'('
op|'['
string|"'container-updater'"
op|']'
op|')'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
comment|"# this guy should no-op since it's unable to expire the object"
nl|'\n'
name|'self'
op|'.'
name|'expirer'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'brain'
op|'.'
name|'start_handoff_half'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'get_to_final_state'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# validate object is expired'
nl|'\n'
name|'found_in_policy'
op|'='
name|'None'
newline|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'get_object_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'4'
op|','
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'int'
op|'('
name|'old_policy'
op|')'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'x-backend-timestamp'"
name|'in'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'Timestamp'
op|'('
name|'metadata'
op|'['
string|"'x-backend-timestamp'"
op|']'
op|')'
op|','
nl|'\n'
name|'create_timestamp'
op|')'
newline|'\n'
nl|'\n'
comment|'# but it is still in the listing'
nl|'\n'
name|'for'
name|'obj'
name|'in'
name|'self'
op|'.'
name|'client'
op|'.'
name|'iter_objects'
op|'('
name|'self'
op|'.'
name|'account'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'object_name'
op|'=='
name|'obj'
op|'['
string|"'name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Did not find listing for %s'"
op|'%'
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
nl|'\n'
comment|'# clear proxy cache'
nl|'\n'
dedent|''
name|'client'
op|'.'
name|'post_container'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
comment|'# run the expirier again after replication'
nl|'\n'
name|'self'
op|'.'
name|'expirer'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# object is not in the listing'
nl|'\n'
name|'for'
name|'obj'
name|'in'
name|'self'
op|'.'
name|'client'
op|'.'
name|'iter_objects'
op|'('
name|'self'
op|'.'
name|'account'
op|','
nl|'\n'
name|'self'
op|'.'
name|'container_name'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'object_name'
op|'=='
name|'obj'
op|'['
string|"'name'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Found listing for %s'"
op|'%'
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
nl|'\n'
comment|'# and validate object is tombstoned'
nl|'\n'
dedent|''
dedent|''
name|'found_in_policy'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'policy'
name|'in'
name|'ENABLED_POLICIES'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'get_object_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|','
nl|'\n'
name|'acceptable_statuses'
op|'='
op|'('
number|'4'
op|','
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'int'
op|'('
name|'policy'
op|')'
op|'}'
op|')'
newline|'\n'
name|'if'
string|"'x-backend-timestamp'"
name|'in'
name|'metadata'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'found_in_policy'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'found object in %s and also %s'"
op|'%'
nl|'\n'
op|'('
name|'found_in_policy'
op|','
name|'policy'
op|')'
op|')'
newline|'\n'
dedent|''
name|'found_in_policy'
op|'='
name|'policy'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'x-backend-timestamp'"
name|'in'
name|'metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'Timestamp'
op|'('
name|'metadata'
op|'['
string|"'x-backend-timestamp'"
op|']'
op|')'
op|'>'
nl|'\n'
name|'create_timestamp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_expirer_object_should_not_be_expired
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_expirer_object_should_not_be_expired'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'obj_brain'
op|'='
name|'BrainSplitter'
op|'('
name|'self'
op|'.'
name|'url'
op|','
name|'self'
op|'.'
name|'token'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_name'
op|','
string|"'object'"
op|','
name|'self'
op|'.'
name|'policy'
op|')'
newline|'\n'
nl|'\n'
comment|'# T(obj_created) < T(obj_deleted with x-delete-at) < T(obj_recreated)'
nl|'\n'
comment|'#   < T(expirer_executed)'
nl|'\n'
comment|'# Recreated obj should be appeared in any split brain case'
nl|'\n'
nl|'\n'
comment|'# T(obj_created)'
nl|'\n'
name|'first_created_at'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
comment|'# T(obj_deleted with x-delete-at)'
nl|'\n'
comment|"# object-server accepts req only if X-Delete-At is later than 'now'"
nl|'\n'
name|'delete_at'
op|'='
name|'int'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
number|'1.5'
op|')'
newline|'\n'
comment|'# T(obj_recreated)'
nl|'\n'
name|'recreated_at'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
number|'2.0'
newline|'\n'
comment|"# T(expirer_executed) - 'now'"
nl|'\n'
name|'sleep_for_expirer'
op|'='
number|'2.01'
newline|'\n'
nl|'\n'
name|'obj_brain'
op|'.'
name|'put_container'
op|'('
name|'int'
op|'('
name|'self'
op|'.'
name|'policy'
op|')'
op|')'
newline|'\n'
name|'obj_brain'
op|'.'
name|'put_object'
op|'('
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Delete-At'"
op|':'
name|'delete_at'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'Timestamp'
op|'('
name|'first_created_at'
op|')'
op|'.'
name|'internal'
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# some object servers stopped'
nl|'\n'
name|'obj_brain'
op|'.'
name|'stop_primary_half'
op|'('
op|')'
newline|'\n'
name|'obj_brain'
op|'.'
name|'put_object'
op|'('
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'Timestamp'
op|'('
name|'recreated_at'
op|')'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Expired'"
op|':'
string|"'False'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
comment|'# make sure auto-created containers get in the account listing'
nl|'\n'
name|'Manager'
op|'('
op|'['
string|"'container-updater'"
op|']'
op|')'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
comment|'# some object servers recovered'
nl|'\n'
name|'obj_brain'
op|'.'
name|'start_primary_half'
op|'('
op|')'
newline|'\n'
comment|'# sleep to make sure expirer runs at the time after obj is recreated'
nl|'\n'
name|'time'
op|'.'
name|'sleep'
op|'('
name|'sleep_for_expirer'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'expirer'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
comment|'# inconsistent state of objects is recovered'
nl|'\n'
name|'Manager'
op|'('
op|'['
string|"'object-replicator'"
op|']'
op|')'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# check if you can get recreated object'
nl|'\n'
name|'metadata'
op|'='
name|'self'
op|'.'
name|'client'
op|'.'
name|'get_object_metadata'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'account'
op|','
name|'self'
op|'.'
name|'container_name'
op|','
name|'self'
op|'.'
name|'object_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|"'x-object-meta-expired'"
op|','
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|'"__main__"'
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
