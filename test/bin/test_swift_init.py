begin_unit
comment|'# Copyright (c) 2010 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'nose'
name|'import'
name|'SkipTest'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'signal'
newline|'\n'
name|'from'
name|'shutil'
name|'import'
name|'rmtree'
newline|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'contextmanager'
newline|'\n'
name|'from'
name|'tempfile'
name|'import'
name|'mkdtemp'
newline|'\n'
name|'from'
name|'collections'
name|'import'
name|'defaultdict'
newline|'\n'
name|'from'
name|'threading'
name|'import'
name|'Thread'
newline|'\n'
name|'from'
name|'time'
name|'import'
name|'sleep'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
name|'import'
name|'bin'
comment|'# for reloading...'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'bin'
name|'import'
name|'swift_init'
comment|'# for testing...'
newline|'\n'
nl|'\n'
DECL|variable|DUMMY_SIG
name|'DUMMY_SIG'
op|'='
number|'1'
newline|'\n'
nl|'\n'
nl|'\n'
op|'@'
name|'contextmanager'
newline|'\n'
DECL|function|temptree
name|'def'
name|'temptree'
op|'('
name|'files'
op|','
name|'contents'
op|'='
string|"''"
op|')'
op|':'
newline|'\n'
comment|'# generate enough contents to fill the files'
nl|'\n'
indent|'    '
name|'c'
op|'='
name|'len'
op|'('
name|'files'
op|')'
newline|'\n'
name|'contents'
op|'='
op|'('
name|'list'
op|'('
name|'contents'
op|')'
op|'+'
op|'['
string|"''"
op|']'
op|'*'
name|'c'
op|')'
op|'['
op|':'
name|'c'
op|']'
newline|'\n'
name|'tempdir'
op|'='
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'for'
name|'path'
op|','
name|'content'
name|'in'
name|'zip'
op|'('
name|'files'
op|','
name|'contents'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isabs'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
string|"'.'"
op|'+'
name|'path'
newline|'\n'
dedent|''
name|'new_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'tempdir'
op|','
name|'path'
op|')'
newline|'\n'
name|'subdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'new_path'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'subdir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'subdir'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'open'
op|'('
name|'new_path'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'.'
name|'write'
op|'('
name|'str'
op|'('
name|'content'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'tempdir'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'        '
name|'rmtree'
op|'('
name|'tempdir'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MockOs
dedent|''
dedent|''
name|'class'
name|'MockOs'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pids'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'running_pids'
op|'='
name|'pids'
newline|'\n'
name|'self'
op|'.'
name|'pid_sigs'
op|'='
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'closed_fds'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'child_pid'
op|'='
number|'9999'
comment|'# fork defaults to test parent process path'
newline|'\n'
name|'self'
op|'.'
name|'execlp_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|kill
dedent|''
name|'def'
name|'kill'
op|'('
name|'self'
op|','
name|'pid'
op|','
name|'sig'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'pid'
name|'not'
name|'in'
name|'self'
op|'.'
name|'running_pids'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'OSError'
op|'('
number|'3'
op|','
string|"'No such process'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'pid_sigs'
op|'['
name|'pid'
op|']'
op|'.'
name|'append'
op|'('
name|'sig'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getattr__
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
comment|'# I only over-ride portions of the os module'
nl|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'object'
op|'.'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'getattr'
op|'('
name|'os'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|pop_stream
dedent|''
dedent|''
dedent|''
name|'def'
name|'pop_stream'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""read everything out of file from the top and clear it out\n    """'
newline|'\n'
name|'f'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'f'
op|'.'
name|'seek'
op|'('
number|'0'
op|')'
newline|'\n'
name|'output'
op|'='
name|'f'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'f'
op|'.'
name|'seek'
op|'('
number|'0'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'truncate'
op|'('
op|')'
newline|'\n'
comment|'#print >> sys.stderr, output'
nl|'\n'
name|'return'
name|'output'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSwiftInitModule
dedent|''
name|'class'
name|'TestSwiftInitModule'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_servers
indent|'    '
name|'def'
name|'test_servers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'main_plus_rest'
op|'='
name|'set'
op|'('
name|'swift_init'
op|'.'
name|'MAIN_SERVERS'
op|'+'
name|'swift_init'
op|'.'
name|'REST_SERVERS'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'set'
op|'('
name|'swift_init'
op|'.'
name|'ALL_SERVERS'
op|')'
op|','
name|'main_plus_rest'
op|')'
newline|'\n'
comment|"# make sure there's no server listed in both"
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'main_plus_rest'
op|')'
op|','
name|'len'
op|'('
name|'swift_init'
op|'.'
name|'MAIN_SERVERS'
op|')'
op|'+'
nl|'\n'
name|'len'
op|'('
name|'swift_init'
op|'.'
name|'REST_SERVERS'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_setup_env
dedent|''
name|'def'
name|'test_setup_env'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# TODO: tests'
nl|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
newline|'\n'
nl|'\n'
DECL|member|test_search_tree
dedent|''
name|'def'
name|'test_search_tree'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# file match & ext miss'
nl|'\n'
indent|'        '
name|'with'
name|'temptree'
op|'('
op|'['
string|"'asdf.conf'"
op|','
string|"'blarg.conf'"
op|','
string|"'asdf.cfg'"
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'asdf'
op|'='
name|'swift_init'
op|'.'
name|'search_tree'
op|'('
name|'t'
op|','
string|"'a*'"
op|','
string|"'.conf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'asdf'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'asdf'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'asdf.conf'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# multi-file match & glob miss & sort'
nl|'\n'
dedent|''
name|'with'
name|'temptree'
op|'('
op|'['
string|"'application.bin'"
op|','
string|"'apple.bin'"
op|','
string|"'apropos.bin'"
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'app_bins'
op|'='
name|'swift_init'
op|'.'
name|'search_tree'
op|'('
name|'t'
op|','
string|"'app*'"
op|','
string|"'bin'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'app_bins'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'app_bins'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'apple.bin'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'app_bins'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'application.bin'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# test file in folder & ext miss & glob miss'
nl|'\n'
dedent|''
name|'files'
op|'='
op|'('
nl|'\n'
string|"'sub/file1.ini'"
op|','
nl|'\n'
string|"'sub/file2.conf'"
op|','
nl|'\n'
string|"'sub.bin'"
op|','
nl|'\n'
string|"'bus.ini'"
op|','
nl|'\n'
string|"'bus/file3.ini'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'sub_ini'
op|'='
name|'swift_init'
op|'.'
name|'search_tree'
op|'('
name|'t'
op|','
string|"'sub*'"
op|','
string|"'.ini'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'sub_ini'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'sub_ini'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'sub/file1.ini'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# test multi-file in folder & sub-folder & ext miss & glob miss'
nl|'\n'
dedent|''
name|'files'
op|'='
op|'('
nl|'\n'
string|"'folder_file.txt'"
op|','
nl|'\n'
string|"'folder/1.txt'"
op|','
nl|'\n'
string|"'folder/sub/2.txt'"
op|','
nl|'\n'
string|"'folder2/3.txt'"
op|','
nl|'\n'
string|"'Folder3/4.txt'"
nl|'\n'
string|"'folder.rc'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'folder_texts'
op|'='
name|'swift_init'
op|'.'
name|'search_tree'
op|'('
name|'t'
op|','
string|"'folder*'"
op|','
string|"'.txt'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'folder_texts'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'f1'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'folder_file.txt'"
op|')'
newline|'\n'
name|'f2'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'folder/1.txt'"
op|')'
newline|'\n'
name|'f3'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'folder/sub/2.txt'"
op|')'
newline|'\n'
name|'f4'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'folder2/3.txt'"
op|')'
newline|'\n'
name|'for'
name|'f'
name|'in'
op|'['
name|'f1'
op|','
name|'f2'
op|','
name|'f3'
op|','
name|'f4'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'f'
name|'in'
name|'folder_texts'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_write_file
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_write_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'temptree'
op|'('
op|'['
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'file_name'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'test'"
op|')'
newline|'\n'
name|'swift_init'
op|'.'
name|'write_file'
op|'('
name|'file_name'
op|','
string|"'test'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'file_name'
op|','
string|"'r'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'contents'
op|'='
name|'f'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'contents'
op|','
string|"'test'"
op|')'
newline|'\n'
comment|'# and also subdirs'
nl|'\n'
name|'file_name'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'subdir/test2'"
op|')'
newline|'\n'
name|'swift_init'
op|'.'
name|'write_file'
op|'('
name|'file_name'
op|','
string|"'test2'"
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'file_name'
op|','
string|"'r'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'contents'
op|'='
name|'f'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'contents'
op|','
string|"'test2'"
op|')'
newline|'\n'
comment|"# but can't over-write files"
nl|'\n'
name|'file_name'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'subdir/test2/test3'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'IOError'
op|','
name|'swift_init'
op|'.'
name|'write_file'
op|','
name|'file_name'
op|','
nl|'\n'
string|"'test3'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remove_file
dedent|''
dedent|''
name|'def'
name|'test_remove_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'temptree'
op|'('
op|'['
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'file_name'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'blah.pid'"
op|')'
newline|'\n'
comment|'# assert no raise'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'file_name'
op|')'
op|','
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift_init'
op|'.'
name|'remove_file'
op|'('
name|'file_name'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'file_name'
op|','
string|"'w'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                '
name|'f'
op|'.'
name|'write'
op|'('
string|"'1'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'file_name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift_init'
op|'.'
name|'remove_file'
op|'('
name|'file_name'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'file_name'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_command_wrapper
dedent|''
dedent|''
name|'def'
name|'test_command_wrapper'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'@'
name|'swift_init'
op|'.'
name|'command'
newline|'\n'
DECL|function|myfunc
name|'def'
name|'myfunc'
op|'('
name|'arg1'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""test doc\n            """'
newline|'\n'
name|'return'
name|'arg1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|','
string|"'test doc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'('
number|'1'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'('
number|'0'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'('
name|'True'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'('
name|'False'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'hasattr'
op|'('
name|'myfunc'
op|','
string|"'publicly_accessible'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'myfunc'
op|'.'
name|'publicly_accessible'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_exc
dedent|''
name|'def'
name|'test_exc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'issubclass'
op|'('
name|'swift_init'
op|'.'
name|'UnknownCommand'
op|','
name|'Exception'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestSwiftServerClass
dedent|''
dedent|''
name|'class'
name|'TestSwiftServerClass'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|tearDown
indent|'    '
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reload'
op|'('
name|'bin'
op|')'
newline|'\n'
nl|'\n'
DECL|member|join_swift_dir
dedent|''
name|'def'
name|'join_swift_dir'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'swift_init'
op|'.'
name|'SWIFT_DIR'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|join_run_dir
dedent|''
name|'def'
name|'join_run_dir'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server
dedent|''
name|'def'
name|'test_create_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'server'
op|','
string|"'proxy-server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'type'
op|','
string|"'proxy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'cmd'
op|','
string|"'swift-proxy-server'"
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'server'
op|','
string|"'object-replicator'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'type'
op|','
string|"'object'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'cmd'
op|','
string|"'swift-object-replicator'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_to_string
dedent|''
name|'def'
name|'test_server_to_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'Proxy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'str'
op|'('
name|'server'
op|')'
op|','
string|"'proxy-server'"
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'str'
op|'('
name|'server'
op|')'
op|','
string|"'object-replicator'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_repr
dedent|''
name|'def'
name|'test_server_repr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
name|'in'
name|'repr'
op|'('
name|'server'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'str'
op|'('
name|'server'
op|')'
name|'in'
name|'repr'
op|'('
name|'server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_equality
dedent|''
name|'def'
name|'test_server_equality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server1'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'Proxy'"
op|')'
newline|'\n'
name|'server2'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'proxy-server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server1'
op|','
name|'server2'
op|')'
newline|'\n'
comment|'# it is NOT a string'
nl|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'server1'
op|','
string|"'proxy-server'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_pid_file_name
dedent|''
name|'def'
name|'test_get_pid_file_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'proxy-server.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'server'
op|'.'
name|'get_pid_file_name'
op|'('
name|'ini_file'
op|')'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/1.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-replicator/1.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'server'
op|'.'
name|'get_pid_file_name'
op|'('
name|'ini_file'
op|')'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'container-auditor'"
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
nl|'\n'
string|"'container-server/1/container-auditor.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
nl|'\n'
string|"'container-auditor/1/container-auditor.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'server'
op|'.'
name|'get_pid_file_name'
op|'('
name|'ini_file'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_ini_file_name
dedent|''
name|'def'
name|'test_get_ini_file_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'proxy-server.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ini_file'
op|','
name|'server'
op|'.'
name|'get_ini_file_name'
op|'('
name|'pid_file'
op|')'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/1.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-replicator/1.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ini_file'
op|','
name|'server'
op|'.'
name|'get_ini_file_name'
op|'('
name|'pid_file'
op|')'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'container-auditor'"
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
nl|'\n'
string|"'container-server/1/container-auditor.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
nl|'\n'
string|"'container-auditor/1/container-auditor.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ini_file'
op|','
name|'server'
op|'.'
name|'get_ini_file_name'
op|'('
name|'pid_file'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_ini_files
dedent|''
name|'def'
name|'test_ini_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test get single ini file'
nl|'\n'
indent|'        '
name|'ini_files'
op|'='
op|'('
nl|'\n'
string|"'proxy-server.conf'"
op|','
nl|'\n'
string|"'proxy-server.ini'"
op|','
nl|'\n'
string|"'auth-server.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'ini_files'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'ini_files'
op|'='
name|'server'
op|'.'
name|'ini_files'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'ini_files'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'ini_files'
op|'['
number|'0'
op|']'
newline|'\n'
name|'proxy_conf'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ini_file'
op|','
name|'proxy_conf'
op|')'
newline|'\n'
nl|'\n'
comment|'# test multi server conf files & grouping of server-type config'
nl|'\n'
dedent|''
name|'ini_files'
op|'='
op|'('
nl|'\n'
string|"'object-server1.conf'"
op|','
nl|'\n'
string|"'object-server/2.conf'"
op|','
nl|'\n'
string|"'object-server/object3.conf'"
op|','
nl|'\n'
string|"'object-server/conf/server4.conf'"
op|','
nl|'\n'
string|"'object-server.txt'"
op|','
nl|'\n'
string|"'proxy-server.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'ini_files'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'ini_files'
op|'='
name|'server'
op|'.'
name|'ini_files'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'ini_files'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'c1'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server1.conf'"
op|')'
newline|'\n'
name|'c2'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/2.conf'"
op|')'
newline|'\n'
name|'c3'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/object3.conf'"
op|')'
newline|'\n'
name|'c4'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/conf/server4.conf'"
op|')'
newline|'\n'
name|'for'
name|'c'
name|'in'
op|'['
name|'c1'
op|','
name|'c2'
op|','
name|'c3'
op|','
name|'c4'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'c'
name|'in'
name|'ini_files'
op|')'
newline|'\n'
comment|'# test configs returned sorted'
nl|'\n'
dedent|''
name|'sorted_confs'
op|'='
name|'sorted'
op|'('
op|'['
name|'c1'
op|','
name|'c2'
op|','
name|'c3'
op|','
name|'c4'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ini_files'
op|','
name|'sorted_confs'
op|')'
newline|'\n'
nl|'\n'
comment|'# test get single numbered conf'
nl|'\n'
dedent|''
name|'ini_files'
op|'='
op|'('
nl|'\n'
string|"'account-server/1.conf'"
op|','
nl|'\n'
string|"'account-server/2.conf'"
op|','
nl|'\n'
string|"'account-server/3.conf'"
op|','
nl|'\n'
string|"'account-server/4.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'ini_files'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'ini_files'
op|'='
name|'server'
op|'.'
name|'ini_files'
op|'('
name|'number'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'ini_files'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'ini_files'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'ini_file'
op|','
nl|'\n'
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'account-server/2.conf'"
op|')'
op|')'
newline|'\n'
comment|'# test missing config number'
nl|'\n'
name|'ini_files'
op|'='
name|'server'
op|'.'
name|'ini_files'
op|'('
name|'number'
op|'='
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'ini_files'
op|')'
newline|'\n'
nl|'\n'
comment|'# test verbose & quiet'
nl|'\n'
dedent|''
name|'ini_files'
op|'='
op|'('
nl|'\n'
string|"'auth-server.ini'"
op|','
nl|'\n'
string|"'container-server/1.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'ini_files'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'t'
newline|'\n'
name|'old_stdout'
op|'='
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'output'"
op|')'
op|','
string|"'w+'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                    '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'f'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'auth'"
op|')'
newline|'\n'
comment|'# check warn "unable to locate"'
nl|'\n'
name|'ini_files'
op|'='
name|'server'
op|'.'
name|'ini_files'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'ini_files'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'unable to locate'"
name|'in'
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# check quiet will silence warning'
nl|'\n'
name|'ini_files'
op|'='
name|'server'
op|'.'
name|'ini_files'
op|'('
name|'verbose'
op|'='
name|'True'
op|','
name|'quiet'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pop_stream'
op|'('
name|'f'
op|')'
op|','
string|"''"
op|')'
newline|'\n'
comment|'# check found config no warning'
nl|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'container-auditor'"
op|')'
newline|'\n'
name|'ini_files'
op|'='
name|'server'
op|'.'
name|'ini_files'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pop_stream'
op|'('
name|'f'
op|')'
op|','
string|"''"
op|')'
newline|'\n'
comment|'# check missing config number warn "unable to locate"'
nl|'\n'
name|'ini_files'
op|'='
name|'server'
op|'.'
name|'ini_files'
op|'('
name|'number'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'unable to locate'"
name|'in'
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# check verbose lists configs'
nl|'\n'
name|'ini_files'
op|'='
name|'server'
op|'.'
name|'ini_files'
op|'('
name|'number'
op|'='
number|'2'
op|','
name|'verbose'
op|'='
name|'True'
op|')'
newline|'\n'
name|'c1'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'container-server/1.conf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'c1'
name|'in'
name|'pop_stream'
op|'('
name|'f'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'old_stdout'
newline|'\n'
nl|'\n'
DECL|member|test_iter_pid_files
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_iter_pid_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        SwiftServer.iter_pid_files is kinda boring, test the\n        SwiftServer.pid_files stuff here as well\n        """'
newline|'\n'
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'proxy-server.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'auth-server.pid'"
op|','
string|"'blah'"
op|')'
op|','
nl|'\n'
op|'('
string|"'object-replicator/1.pid'"
op|','
number|'11'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-replicator/2.pid'"
op|','
number|'12'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'files'
op|','
name|'contents'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'contents'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
comment|'# test get one file'
nl|'\n'
name|'iter'
op|'='
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
op|')'
newline|'\n'
name|'pid_file'
op|','
name|'pid'
op|'='
name|'iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'proxy-server.pid'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid'
op|','
number|'1'
op|')'
newline|'\n'
comment|'# ... and only one file'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'iter'
op|'.'
name|'next'
op|')'
newline|'\n'
comment|'# test invalid value in pid file'
nl|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'auth'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
op|')'
op|'.'
name|'next'
op|')'
newline|'\n'
comment|"# test object-server doesn't steal pids from object-replicator"
nl|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'object'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
op|')'
op|'.'
name|'next'
op|')'
newline|'\n'
comment|'# test multi-pid iter'
nl|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'real_map'
op|'='
op|'{'
nl|'\n'
number|'11'
op|':'
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-replicator/1.pid'"
op|')'
op|','
nl|'\n'
number|'12'
op|':'
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-replicator/2.pid'"
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'pid_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'pid_file'
op|','
name|'pid'
name|'in'
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pid_map'
op|'['
name|'pid'
op|']'
op|'='
name|'pid_file'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_map'
op|','
name|'real_map'
op|')'
newline|'\n'
nl|'\n'
comment|'# test get pid_files by number'
nl|'\n'
dedent|''
name|'ini_files'
op|'='
op|'('
nl|'\n'
string|"'object-server/1.conf'"
op|','
nl|'\n'
string|"'object-server/2.conf'"
op|','
nl|'\n'
string|"'object-server/3.conf'"
op|','
nl|'\n'
string|"'object-server/4.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'object-server/1.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-server/2.pid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-server/5.pid'"
op|','
number|'5'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'temptree'
op|'('
name|'ini_files'
op|')'
name|'as'
name|'swift_dir'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'swift_dir'
newline|'\n'
name|'files'
op|','
name|'pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'                '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'object'"
op|')'
newline|'\n'
comment|'# test get all pid files'
nl|'\n'
name|'real_map'
op|'='
op|'{'
nl|'\n'
number|'1'
op|':'
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-server/1.pid'"
op|')'
op|','
nl|'\n'
number|'2'
op|':'
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-server/2.pid'"
op|')'
op|','
nl|'\n'
number|'5'
op|':'
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-server/5.pid'"
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'pid_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'pid_file'
op|','
name|'pid'
name|'in'
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pid_map'
op|'['
name|'pid'
op|']'
op|'='
name|'pid_file'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_map'
op|','
name|'real_map'
op|')'
newline|'\n'
comment|'# test get pid with matching conf'
nl|'\n'
name|'pids'
op|'='
name|'list'
op|'('
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
name|'number'
op|'='
number|'2'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'pid_file'
op|','
name|'pid'
op|'='
name|'pids'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid'
op|','
number|'2'
op|')'
newline|'\n'
name|'pid_two'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-server/2.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'pid_two'
op|')'
newline|'\n'
comment|'# try to iter on a pid number with a matching conf but no pid'
nl|'\n'
name|'pids'
op|'='
name|'list'
op|'('
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
name|'number'
op|'='
number|'3'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'pids'
op|')'
newline|'\n'
comment|'# test get pids w/o matching conf'
nl|'\n'
name|'pids'
op|'='
name|'list'
op|'('
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
name|'number'
op|'='
number|'5'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'pids'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_signal_pids
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_signal_pids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'proxy-server.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'auth-server.pid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'files'
op|','
name|'pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
comment|'# mock os with both pids running'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'signal_pids'
op|'('
name|'DUMMY_SIG'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift_init'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
number|'1'
op|']'
op|','
op|'['
name|'DUMMY_SIG'
op|']'
op|')'
newline|'\n'
comment|'# make sure other process not signaled'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
number|'2'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
number|'2'
name|'in'
name|'swift_init'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|')'
newline|'\n'
comment|'# capture stdio'
nl|'\n'
name|'old_stdout'
op|'='
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'output'"
op|')'
op|','
string|"'w+'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                    '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'f'
newline|'\n'
comment|'#test print details'
nl|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'signal_pids'
op|'('
name|'DUMMY_SIG'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'pid: %s'"
op|'%'
number|'1'
name|'in'
name|'output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'signal: %s'"
op|'%'
name|'DUMMY_SIG'
name|'in'
name|'output'
op|')'
newline|'\n'
comment|'# test no details on signal.SIG_DFL'
nl|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'signal_pids'
op|'('
name|'signal'
op|'.'
name|'SIG_DFL'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pop_stream'
op|'('
name|'f'
op|')'
op|','
string|"''"
op|')'
newline|'\n'
comment|'# reset mock os so only the other server is running'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
comment|'# test pid not running'
nl|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'signal_pids'
op|'('
name|'signal'
op|'.'
name|'SIG_DFL'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'not'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'not'
name|'in'
name|'swift_init'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|')'
newline|'\n'
comment|'# test remove stale pid file'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'proxy-server.pid'"
op|')'
op|')'
op|')'
newline|'\n'
comment|'# reset mock os with no running pids'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'auth'"
op|')'
newline|'\n'
comment|'# test verbose warns on removing pid file'
nl|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'signal_pids'
op|'('
name|'signal'
op|'.'
name|'SIG_DFL'
op|','
name|'verbose'
op|'='
name|'True'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'stale pid'"
name|'in'
name|'output'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
newline|'\n'
name|'auth_pid'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'auth-server.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'auth_pid'
name|'in'
name|'output'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'old_stdout'
newline|'\n'
nl|'\n'
DECL|member|test_get_running_pids
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_running_pids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test only gets running pids'
nl|'\n'
indent|'        '
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'test-server1.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'test-server2.pid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'*'
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'test-server'"
op|')'
newline|'\n'
comment|"# mock os, only pid '1' is running"
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'running_pids'
op|'='
name|'server'
op|'.'
name|'get_running_pids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'running_pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'in'
name|'running_pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'2'
name|'not'
name|'in'
name|'running_pids'
op|')'
newline|'\n'
comment|'# test persistant running pid files'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'test-server1.pid'"
op|')'
op|')'
op|')'
newline|'\n'
comment|'# test clean up stale pids'
nl|'\n'
name|'pid_two'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'test-server2.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'pid_two'
op|')'
op|')'
newline|'\n'
comment|'# reset mock os, no pids running'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'running_pids'
op|'='
name|'server'
op|'.'
name|'get_running_pids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'running_pids'
op|')'
newline|'\n'
comment|'# and now all pid files are cleaned out'
nl|'\n'
name|'pid_one'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'test-server1.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'pid_one'
op|')'
op|')'
newline|'\n'
name|'all_pids'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'t'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'all_pids'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# test only get pids for right server'
nl|'\n'
dedent|''
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'thing-doer.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'thing-sayer.pid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'other-doer.pid'"
op|','
number|'3'
op|')'
op|','
nl|'\n'
op|'('
string|"'other-sayer.pid'"
op|','
number|'4'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'files'
op|','
name|'pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
comment|'# all pids are running'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'pids'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'thing-doer'"
op|')'
newline|'\n'
name|'running_pids'
op|'='
name|'server'
op|'.'
name|'get_running_pids'
op|'('
op|')'
newline|'\n'
comment|'# only thing-doer.pid, 1'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'running_pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'in'
name|'running_pids'
op|')'
newline|'\n'
comment|'# no other pids returned'
nl|'\n'
name|'for'
name|'n'
name|'in'
op|'('
number|'2'
op|','
number|'3'
op|','
number|'4'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'n'
name|'not'
name|'in'
name|'running_pids'
op|')'
newline|'\n'
comment|'# assert stale pids for other servers ignored'
nl|'\n'
dedent|''
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'1'
op|']'
op|')'
comment|'# only thing-doer is running'
newline|'\n'
name|'running_pids'
op|'='
name|'server'
op|'.'
name|'get_running_pids'
op|'('
op|')'
newline|'\n'
name|'for'
name|'f'
name|'in'
op|'('
string|"'thing-sayer.pid'"
op|','
string|"'other-doer.pid'"
op|','
string|"'other-sayer.pid'"
op|')'
op|':'
newline|'\n'
comment|'# other server pid files persist'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|','
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
name|'f'
op|')'
op|')'
newline|'\n'
comment|'# verify that servers are in fact not running'
nl|'\n'
dedent|''
name|'for'
name|'server_name'
name|'in'
op|'('
string|"'thing-sayer'"
op|','
string|"'other-doer'"
op|','
string|"'other-sayer'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
name|'server_name'
op|')'
newline|'\n'
name|'running_pids'
op|'='
name|'server'
op|'.'
name|'get_running_pids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'running_pids'
op|')'
newline|'\n'
comment|'# and now all OTHER pid files are cleaned out'
nl|'\n'
dedent|''
name|'all_pids'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'t'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'all_pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'thing-doer.pid'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_kill_running_pids
dedent|''
dedent|''
name|'def'
name|'test_kill_running_pids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'object-server.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-replicator1.pid'"
op|','
number|'11'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-replicator2.pid'"
op|','
number|'12'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'files'
op|','
name|'pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'object'"
op|')'
newline|'\n'
comment|'# test no servers running'
nl|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'kill_running_pids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'pids'
op|')'
newline|'\n'
comment|'# start up pid'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
comment|'# test kill one pid'
nl|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'kill_running_pids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift_init'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
number|'1'
op|']'
op|','
op|'['
name|'signal'
op|'.'
name|'SIGTERM'
op|']'
op|')'
newline|'\n'
comment|'# reset os mock'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
comment|'# test shutdown'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'object-server'"
name|'in'
nl|'\n'
name|'swift_init'
op|'.'
name|'GRACEFUL_SHUTDOWN_SERVERS'
op|')'
newline|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'kill_running_pids'
op|'('
name|'graceful'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift_init'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
number|'1'
op|']'
op|','
op|'['
name|'signal'
op|'.'
name|'SIGHUP'
op|']'
op|')'
newline|'\n'
comment|'# start up other servers'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'11'
op|','
number|'12'
op|']'
op|')'
newline|'\n'
comment|'# test multi server kill & ignore graceful on unsupport server'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'object-replicator'"
name|'in'
nl|'\n'
name|'swift_init'
op|'.'
name|'GRACEFUL_SHUTDOWN_SERVERS'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'kill_running_pids'
op|'('
name|'graceful'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'pid'
name|'in'
op|'('
number|'11'
op|','
number|'12'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'pid'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift_init'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
name|'pid'
op|']'
op|','
nl|'\n'
op|'['
name|'signal'
op|'.'
name|'SIGTERM'
op|']'
op|')'
newline|'\n'
comment|'# and the other pid is of course not signaled'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'not'
name|'in'
name|'swift_init'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_status
dedent|''
dedent|''
name|'def'
name|'test_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ini_files'
op|'='
op|'('
nl|'\n'
string|"'test-server/1.conf'"
op|','
nl|'\n'
string|"'test-server/2.conf'"
op|','
nl|'\n'
string|"'test-server/3.conf'"
op|','
nl|'\n'
string|"'test-server/4.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'test-server/1.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'test-server/2.pid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'test-server/3.pid'"
op|','
number|'3'
op|')'
op|','
nl|'\n'
op|'('
string|"'test-server/4.pid'"
op|','
number|'4'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'temptree'
op|'('
name|'ini_files'
op|')'
name|'as'
name|'swift_dir'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'swift_dir'
newline|'\n'
name|'files'
op|','
name|'pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'                '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
comment|'# setup running servers'
nl|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'test'"
op|')'
newline|'\n'
comment|'# capture stdio'
nl|'\n'
name|'old_stdout'
op|'='
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'output'"
op|')'
op|','
string|"'w+'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                        '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'f'
newline|'\n'
comment|'# test status for all running'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'status'
op|'('
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'splitlines'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'output'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'output'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'test-server running'"
name|'in'
name|'line'
op|')'
newline|'\n'
comment|'# test get single server by number'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'status'
op|'('
name|'number'
op|'='
number|'4'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'splitlines'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'output'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'line'
op|'='
name|'output'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'test-server running'"
name|'in'
name|'line'
op|')'
newline|'\n'
name|'conf_four'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
name|'ini_files'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'4 - %s'"
op|'%'
name|'conf_four'
name|'in'
name|'line'
op|')'
newline|'\n'
comment|'# test some servers not running'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'status'
op|'('
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'splitlines'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'output'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'output'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'test-server running'"
name|'in'
name|'line'
op|')'
newline|'\n'
comment|'# test single server not running'
nl|'\n'
dedent|''
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'status'
op|'('
name|'number'
op|'='
number|'3'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'splitlines'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'output'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'line'
op|'='
name|'output'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'not running'"
name|'in'
name|'line'
op|')'
newline|'\n'
name|'conf_three'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
name|'ini_files'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'conf_three'
name|'in'
name|'line'
op|')'
newline|'\n'
comment|'# test no running pids'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'status'
op|'('
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'no test-server running'"
name|'in'
name|'output'
op|')'
newline|'\n'
comment|'# test use provided pids'
nl|'\n'
name|'pids'
op|'='
op|'{'
nl|'\n'
number|'1'
op|':'
string|"'1.pid'"
op|','
nl|'\n'
number|'2'
op|':'
string|"'2.pid'"
op|','
nl|'\n'
op|'}'
newline|'\n'
comment|"# shouldn't call get_running_pids"
nl|'\n'
name|'called'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|mock
name|'def'
name|'mock'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'called'
op|'.'
name|'append'
op|'('
name|'True'
op|')'
newline|'\n'
dedent|''
name|'server'
op|'.'
name|'get_running_pids'
op|'='
name|'mock'
newline|'\n'
name|'status'
op|'='
name|'server'
op|'.'
name|'status'
op|'('
name|'pids'
op|'='
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'called'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'splitlines'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'output'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'output'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'test-server running'"
name|'in'
name|'line'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                    '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'old_stdout'
newline|'\n'
nl|'\n'
DECL|member|test_spawn
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_spawn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# mocks'
nl|'\n'
DECL|class|MockProcess
indent|'        '
name|'class'
name|'MockProcess'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|NOTHING
indent|'            '
name|'NOTHING'
op|'='
string|"'default besides None'"
newline|'\n'
DECL|variable|STDOUT
name|'STDOUT'
op|'='
string|"'stdout'"
newline|'\n'
DECL|variable|PIPE
name|'PIPE'
op|'='
string|"'pipe'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pids'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'pids'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'pids'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'pids'
op|'='
op|'('
name|'p'
name|'for'
name|'p'
name|'in'
name|'pids'
op|')'
newline|'\n'
nl|'\n'
DECL|member|Popen
dedent|''
name|'def'
name|'Popen'
op|'('
name|'self'
op|','
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'MockProc'
op|'('
name|'self'
op|'.'
name|'pids'
op|'.'
name|'next'
op|'('
op|')'
op|','
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|class|MockProc
dedent|''
dedent|''
name|'class'
name|'MockProc'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pid'
op|','
name|'args'
op|','
name|'stdout'
op|'='
name|'MockProcess'
op|'.'
name|'NOTHING'
op|','
nl|'\n'
name|'stderr'
op|'='
name|'MockProcess'
op|'.'
name|'NOTHING'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'pid'
op|'='
name|'pid'
newline|'\n'
name|'self'
op|'.'
name|'args'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'stdout'
op|'='
name|'stdout'
newline|'\n'
name|'if'
name|'stderr'
op|'=='
name|'MockProcess'
op|'.'
name|'STDOUT'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'stderr'
op|'='
name|'self'
op|'.'
name|'stdout'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'stderr'
op|'='
name|'stderr'
newline|'\n'
nl|'\n'
comment|'# setup running servers'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'test'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
string|"'test-server.conf'"
op|']'
op|')'
name|'as'
name|'swift_dir'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'swift_dir'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'                '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'old_subprocess'
op|'='
name|'swift_init'
op|'.'
name|'subprocess'
newline|'\n'
name|'try'
op|':'
newline|'\n'
comment|'# test single server process calls spawn once'
nl|'\n'
indent|'                    '
name|'swift_init'
op|'.'
name|'subprocess'
op|'='
name|'MockProcess'
op|'('
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'test-server.conf'"
op|')'
newline|'\n'
comment|'# spawn server no kwargs'
nl|'\n'
name|'server'
op|'.'
name|'spawn'
op|'('
name|'conf_file'
op|')'
newline|'\n'
comment|'# test pid file'
nl|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'test-server.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'pid_file'
op|')'
op|')'
newline|'\n'
name|'pid_on_disk'
op|'='
name|'int'
op|'('
name|'open'
op|'('
name|'pid_file'
op|')'
op|'.'
name|'read'
op|'('
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_on_disk'
op|','
number|'1'
op|')'
newline|'\n'
comment|'# assert procs args'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'proc'
op|'='
name|'server'
op|'.'
name|'procs'
op|'['
number|'0'
op|']'
newline|'\n'
name|'expected_args'
op|'='
op|'['
nl|'\n'
string|"'swift-test-server'"
op|','
nl|'\n'
name|'conf_file'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'args'
op|','
name|'expected_args'
op|')'
newline|'\n'
comment|'# assert stdout is /dev/null'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'isinstance'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|','
name|'file'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|'.'
name|'name'
op|','
name|'os'
op|'.'
name|'devnull'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|'.'
name|'mode'
op|','
string|"'w+b'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stderr'
op|','
name|'proc'
op|'.'
name|'stdout'
op|')'
newline|'\n'
comment|'# test multi server process calls spawn multiple times'
nl|'\n'
name|'swift_init'
op|'.'
name|'subprocess'
op|'='
name|'MockProcess'
op|'('
op|'['
number|'11'
op|','
number|'12'
op|','
number|'13'
op|','
number|'14'
op|']'
op|')'
newline|'\n'
name|'conf1'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'test-server/1.conf'"
op|')'
newline|'\n'
name|'conf2'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'test-server/2.conf'"
op|')'
newline|'\n'
name|'conf3'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'test-server/3.conf'"
op|')'
newline|'\n'
name|'conf4'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'test-server/4.conf'"
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'test'"
op|')'
newline|'\n'
comment|'# test server run once'
nl|'\n'
name|'server'
op|'.'
name|'spawn'
op|'('
name|'conf1'
op|','
name|'once'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'proc'
op|'='
name|'server'
op|'.'
name|'procs'
op|'['
number|'0'
op|']'
newline|'\n'
name|'expected_args'
op|'='
op|'['
string|"'swift-test-server'"
op|','
name|'conf1'
op|','
string|"'once'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'args'
op|','
name|'expected_args'
op|')'
newline|'\n'
comment|'# assert stdout is /dev/null'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'isinstance'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|','
name|'file'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|'.'
name|'name'
op|','
name|'os'
op|'.'
name|'devnull'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|'.'
name|'mode'
op|','
string|"'w+b'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stderr'
op|','
name|'proc'
op|'.'
name|'stdout'
op|')'
newline|'\n'
comment|'# test server not daemon'
nl|'\n'
name|'server'
op|'.'
name|'spawn'
op|'('
name|'conf2'
op|','
name|'daemon'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'proc'
op|'='
name|'server'
op|'.'
name|'procs'
op|'['
number|'1'
op|']'
newline|'\n'
name|'expected_args'
op|'='
op|'['
string|"'swift-test-server'"
op|','
name|'conf2'
op|','
string|"'verbose'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'args'
op|','
name|'expected_args'
op|')'
newline|'\n'
comment|'# assert stdout is not changed'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stderr'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# test server wait'
nl|'\n'
name|'server'
op|'.'
name|'spawn'
op|'('
name|'conf3'
op|','
name|'wait'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'proc'
op|'='
name|'server'
op|'.'
name|'procs'
op|'['
number|'2'
op|']'
newline|'\n'
comment|'# assert stdout is piped'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|','
name|'MockProcess'
op|'.'
name|'PIPE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stderr'
op|','
name|'proc'
op|'.'
name|'stdout'
op|')'
newline|'\n'
comment|'# test not daemon over-rides wait'
nl|'\n'
name|'server'
op|'.'
name|'spawn'
op|'('
name|'conf4'
op|','
name|'wait'
op|'='
name|'True'
op|','
name|'daemon'
op|'='
name|'False'
op|','
name|'once'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'proc'
op|'='
name|'server'
op|'.'
name|'procs'
op|'['
number|'3'
op|']'
newline|'\n'
name|'expected_args'
op|'='
op|'['
string|"'swift-test-server'"
op|','
name|'conf4'
op|','
string|"'once'"
op|','
nl|'\n'
string|"'verbose'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'args'
op|','
name|'expected_args'
op|')'
newline|'\n'
comment|"# daemon behavior should trump wait, once shouldn't matter"
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stderr'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# assert pids'
nl|'\n'
name|'for'
name|'i'
op|','
name|'proc'
name|'in'
name|'enumerate'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'test-server/%d.pid'"
op|'%'
nl|'\n'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'pid_on_disk'
op|'='
name|'int'
op|'('
name|'open'
op|'('
name|'pid_file'
op|')'
op|'.'
name|'read'
op|'('
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_on_disk'
op|','
name|'proc'
op|'.'
name|'pid'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                    '
name|'swift_init'
op|'.'
name|'subprocess'
op|'='
name|'old_subprocess'
newline|'\n'
nl|'\n'
DECL|member|test_wait
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'wait'
op|'('
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|class|MockProcess
name|'class'
name|'MockProcess'
op|'('
name|'Thread'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'delay'
op|'='
number|'0.1'
op|','
name|'fail_to_start'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'Thread'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
comment|'# setup pipe'
nl|'\n'
name|'rfd'
op|','
name|'wfd'
op|'='
name|'os'
op|'.'
name|'pipe'
op|'('
op|')'
newline|'\n'
comment|'# subprocess connection to read stdout'
nl|'\n'
name|'self'
op|'.'
name|'stdout'
op|'='
name|'os'
op|'.'
name|'fdopen'
op|'('
name|'rfd'
op|')'
newline|'\n'
comment|'# real process connection to write stdout'
nl|'\n'
name|'self'
op|'.'
name|'_stdout'
op|'='
name|'os'
op|'.'
name|'fdopen'
op|'('
name|'wfd'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'delay'
op|'='
name|'delay'
newline|'\n'
name|'self'
op|'.'
name|'finished'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'returncode'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'fail_to_start'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'run'
op|'='
name|'self'
op|'.'
name|'fail'
newline|'\n'
nl|'\n'
DECL|member|__enter__
dedent|''
dedent|''
name|'def'
name|'__enter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|__exit__
dedent|''
name|'def'
name|'__exit__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'isAlive'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|close_stdout
dedent|''
dedent|''
name|'def'
name|'close_stdout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_stdout'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'devnull'
op|','
string|"'wb'"
op|')'
name|'as'
name|'nullfile'
op|':'
newline|'\n'
indent|'                    '
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'os'
op|'.'
name|'dup2'
op|'('
name|'nullfile'
op|'.'
name|'fileno'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'_stdout'
op|'.'
name|'fileno'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'                        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|fail
dedent|''
dedent|''
dedent|''
name|'def'
name|'fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'>>'
name|'self'
op|'.'
name|'_stdout'
op|','
string|"'mock process started'"
newline|'\n'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'delay'
op|')'
comment|'# perform setup processing'
newline|'\n'
name|'print'
op|'>>'
name|'self'
op|'.'
name|'_stdout'
op|','
string|"'mock process failed to start'"
newline|'\n'
name|'self'
op|'.'
name|'returncode'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'close_stdout'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'>>'
name|'self'
op|'.'
name|'_stdout'
op|','
string|"'mock process started'"
newline|'\n'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'delay'
op|')'
comment|'# perform setup processing'
newline|'\n'
name|'print'
op|'>>'
name|'self'
op|'.'
name|'_stdout'
op|','
string|"'setup complete!'"
newline|'\n'
name|'self'
op|'.'
name|'close_stdout'
op|'('
op|')'
newline|'\n'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'delay'
op|')'
comment|'# do some more processing'
newline|'\n'
name|'print'
op|'>>'
name|'self'
op|'.'
name|'_stdout'
op|','
string|"'mock process finished'"
newline|'\n'
name|'self'
op|'.'
name|'finished'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'temptree'
op|'('
op|'['
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
DECL|variable|old_stdout
indent|'            '
name|'old_stdout'
op|'='
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'output'"
op|')'
op|','
string|"'w+'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
comment|'# acctually capture the read stdout (for prints)'
nl|'\n'
indent|'                    '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'f'
newline|'\n'
comment|'# test closing pipe in subprocess unblocks read'
nl|'\n'
name|'with'
name|'MockProcess'
op|'('
op|')'
name|'as'
name|'proc'
op|':'
newline|'\n'
indent|'                        '
name|'server'
op|'.'
name|'procs'
op|'='
op|'['
name|'proc'
op|']'
newline|'\n'
name|'status'
op|'='
name|'server'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# wait should return as soon as stdout is closed'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'proc'
op|'.'
name|'isAlive'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'proc'
op|'.'
name|'finished'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'proc'
op|'.'
name|'finished'
op|')'
comment|'# make sure it did finish...'
newline|'\n'
comment|'# test output kwarg prints subprocess output'
nl|'\n'
name|'with'
name|'MockProcess'
op|'('
op|')'
name|'as'
name|'proc'
op|':'
newline|'\n'
indent|'                        '
name|'server'
op|'.'
name|'procs'
op|'='
op|'['
name|'proc'
op|']'
newline|'\n'
name|'status'
op|'='
name|'server'
op|'.'
name|'wait'
op|'('
name|'output'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'mock process started'"
name|'in'
name|'output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'setup complete'"
name|'in'
name|'output'
op|')'
newline|'\n'
comment|"# make sure we don't get prints after stdout was closed"
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'mock process finished'"
name|'not'
name|'in'
name|'output'
op|')'
newline|'\n'
comment|'# test process which fails to start'
nl|'\n'
name|'with'
name|'MockProcess'
op|'('
name|'fail_to_start'
op|'='
name|'True'
op|')'
name|'as'
name|'proc'
op|':'
newline|'\n'
indent|'                        '
name|'server'
op|'.'
name|'procs'
op|'='
op|'['
name|'proc'
op|']'
newline|'\n'
name|'status'
op|'='
name|'server'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'failed'"
name|'in'
name|'pop_stream'
op|'('
name|'f'
op|')'
op|')'
newline|'\n'
comment|'# test multiple procs'
nl|'\n'
name|'procs'
op|'='
op|'['
name|'MockProcess'
op|'('
op|')'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|']'
newline|'\n'
name|'for'
name|'proc'
name|'in'
name|'procs'
op|':'
newline|'\n'
indent|'                        '
name|'proc'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
dedent|''
name|'server'
op|'.'
name|'procs'
op|'='
name|'procs'
newline|'\n'
name|'status'
op|'='
name|'server'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
name|'for'
name|'proc'
name|'in'
name|'procs'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'proc'
op|'.'
name|'isAlive'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'proc'
name|'in'
name|'procs'
op|':'
newline|'\n'
indent|'                        '
name|'proc'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'old_stdout'
newline|'\n'
nl|'\n'
DECL|member|test_interact
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_interact'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockProcess
indent|'        '
name|'class'
name|'MockProcess'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'fail'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'returncode'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'fail'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_returncode'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_returncode'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|communicate
dedent|''
dedent|''
name|'def'
name|'communicate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'returncode'
op|'='
name|'self'
op|'.'
name|'_returncode'
newline|'\n'
name|'return'
string|"''"
op|','
string|"''"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'server'
op|'.'
name|'procs'
op|'='
op|'['
name|'MockProcess'
op|'('
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'interact'
op|'('
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'server'
op|'.'
name|'procs'
op|'='
op|'['
name|'MockProcess'
op|'('
name|'fail'
op|'='
name|'True'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'interact'
op|'('
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'procs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'fail'
name|'in'
op|'('
name|'False'
op|','
name|'True'
op|','
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'procs'
op|'.'
name|'append'
op|'('
name|'MockProcess'
op|'('
name|'fail'
op|'='
name|'fail'
op|')'
op|')'
newline|'\n'
dedent|''
name|'server'
op|'.'
name|'procs'
op|'='
name|'procs'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'interact'
op|'('
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_launch
dedent|''
name|'def'
name|'test_launch'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# stubs'
nl|'\n'
indent|'        '
name|'ini_files'
op|'='
op|'('
nl|'\n'
string|"'proxy-server.conf'"
op|','
nl|'\n'
string|"'object-server/1.conf'"
op|','
nl|'\n'
string|"'object-server/2.conf'"
op|','
nl|'\n'
string|"'object-server/3.conf'"
op|','
nl|'\n'
string|"'object-server/4.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'proxy-server.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'proxy-server/2.pid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
comment|'#mocks'
nl|'\n'
DECL|class|MockSpawn
name|'class'
name|'MockSpawn'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pids'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'ini_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'kwargs'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'not'
name|'pids'
op|':'
newline|'\n'
DECL|function|one_forever
indent|'                    '
name|'def'
name|'one_forever'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                            '
name|'yield'
number|'1'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'pids'
op|'='
name|'one_forever'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'pids'
op|'='
op|'('
name|'x'
name|'for'
name|'x'
name|'in'
name|'pids'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'ini_file'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'ini_files'
op|'.'
name|'append'
op|'('
name|'ini_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'kwargs'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'pids'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'temptree'
op|'('
name|'ini_files'
op|')'
name|'as'
name|'swift_dir'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'swift_dir'
newline|'\n'
name|'files'
op|','
name|'pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'                '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'old_stdout'
op|'='
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'output'"
op|')'
op|','
string|"'w+'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                        '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'f'
newline|'\n'
comment|"# can't start server w/o an conf"
nl|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'server'
op|'.'
name|'launch'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# start mock os running all pids'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'pids'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
comment|"# can't start server if it's already running"
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'server'
op|'.'
name|'launch'
op|'('
op|')'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'running'"
name|'in'
name|'output'
op|')'
newline|'\n'
name|'ini_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'ini_file'
name|'in'
name|'output'
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'proxy-server/2.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'pid_file'
name|'in'
name|'output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'already started'"
name|'in'
name|'output'
op|')'
newline|'\n'
comment|'# no running pids'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
comment|'# test ignore once for non-start-once server'
nl|'\n'
name|'mock_spawn'
op|'='
name|'MockSpawn'
op|'('
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'server'
op|'.'
name|'spawn'
op|'='
name|'mock_spawn'
newline|'\n'
name|'ini_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
number|'1'
op|':'
name|'ini_file'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'launch'
op|'('
name|'once'
op|'='
name|'True'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_spawn'
op|'.'
name|'ini_files'
op|','
op|'['
name|'ini_file'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'once'"
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_spawn'
op|'.'
name|'kwargs'
op|','
op|'['
name|'expected'
op|']'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Starting'"
name|'in'
name|'output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'once'"
name|'not'
name|'in'
name|'output'
op|')'
newline|'\n'
comment|'# test multi-server kwarg once'
nl|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'mock_spawn'
op|'='
name|'MockSpawn'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'4'
op|']'
op|')'
newline|'\n'
name|'server'
op|'.'
name|'spawn'
op|'='
name|'mock_spawn'
newline|'\n'
name|'conf1'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/1.conf'"
op|')'
newline|'\n'
name|'conf2'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/2.conf'"
op|')'
newline|'\n'
name|'conf3'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/3.conf'"
op|')'
newline|'\n'
name|'conf4'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/4.conf'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
number|'1'
op|':'
name|'conf1'
op|','
nl|'\n'
number|'2'
op|':'
name|'conf2'
op|','
nl|'\n'
number|'3'
op|':'
name|'conf3'
op|','
nl|'\n'
number|'4'
op|':'
name|'conf4'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'launch'
op|'('
name|'once'
op|'='
name|'True'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_spawn'
op|'.'
name|'ini_files'
op|','
op|'['
name|'conf1'
op|','
name|'conf2'
op|','
nl|'\n'
name|'conf3'
op|','
name|'conf4'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'once'"
op|':'
name|'True'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'mock_spawn'
op|'.'
name|'kwargs'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'for'
name|'kwargs'
name|'in'
name|'mock_spawn'
op|'.'
name|'kwargs'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'kwargs'
op|','
name|'expected'
op|')'
newline|'\n'
comment|'# test number kwarg'
nl|'\n'
dedent|''
name|'mock_spawn'
op|'='
name|'MockSpawn'
op|'('
op|'['
number|'4'
op|']'
op|')'
newline|'\n'
name|'server'
op|'.'
name|'spawn'
op|'='
name|'mock_spawn'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
number|'4'
op|':'
name|'conf4'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'launch'
op|'('
name|'number'
op|'='
number|'4'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_spawn'
op|'.'
name|'ini_files'
op|','
op|'['
name|'conf4'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'number'"
op|':'
number|'4'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_spawn'
op|'.'
name|'kwargs'
op|','
op|'['
name|'expected'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                    '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'old_stdout'
newline|'\n'
nl|'\n'
DECL|member|test_stop
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ini_files'
op|'='
op|'('
nl|'\n'
string|"'account-server/1.conf'"
op|','
nl|'\n'
string|"'account-server/2.conf'"
op|','
nl|'\n'
string|"'account-server/3.conf'"
op|','
nl|'\n'
string|"'account-server/4.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'account-reaper/1.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'account-reaper/2.pid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'account-reaper/3.pid'"
op|','
number|'3'
op|')'
op|','
nl|'\n'
op|'('
string|"'account-reaper/4.pid'"
op|','
number|'4'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'temptree'
op|'('
name|'ini_files'
op|')'
name|'as'
name|'swift_dir'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'swift_dir'
newline|'\n'
name|'files'
op|','
name|'pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'                '
name|'swift_init'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
comment|'# start all pids in mock os'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'pids'
op|')'
newline|'\n'
name|'server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'('
string|"'account-reaper'"
op|')'
newline|'\n'
comment|'# test kill all running pids'
nl|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'for'
name|'pid'
name|'in'
op|'('
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'4'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'pid'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift_init'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
name|'pid'
op|']'
op|','
nl|'\n'
op|'['
name|'signal'
op|'.'
name|'SIGTERM'
op|']'
op|')'
newline|'\n'
dedent|''
name|'conf1'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'account-reaper/1.conf'"
op|')'
newline|'\n'
name|'conf2'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'account-reaper/2.conf'"
op|')'
newline|'\n'
name|'conf3'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'account-reaper/3.conf'"
op|')'
newline|'\n'
name|'conf4'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'account-reaper/4.conf'"
op|')'
newline|'\n'
comment|'# reset mock os with only 2 running pids'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'3'
op|','
number|'4'
op|']'
op|')'
newline|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'pid'
name|'in'
op|'('
number|'3'
op|','
number|'4'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'pid'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift_init'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
name|'pid'
op|']'
op|','
nl|'\n'
op|'['
name|'signal'
op|'.'
name|'SIGTERM'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'conf1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'conf2'
op|')'
op|')'
newline|'\n'
comment|'# test number kwarg'
nl|'\n'
name|'swift_init'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'3'
op|','
number|'4'
op|']'
op|')'
newline|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'stop'
op|'('
name|'number'
op|'='
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
number|'3'
op|':'
name|'conf3'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'pids'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'swift_init'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
number|'3'
op|']'
op|','
op|'['
name|'signal'
op|'.'
name|'SIGTERM'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'conf4'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'conf3'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|TestSwiftInitClass
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestSwiftInitClass'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_create
indent|'    '
name|'def'
name|'test_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'controller'
op|'='
name|'swift_init'
op|'.'
name|'SwiftInit'
op|'('
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'controller'
op|'.'
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'server'
op|'='
name|'controller'
op|'.'
name|'servers'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'isinstance'
op|'('
name|'server'
op|','
name|'swift_init'
op|'.'
name|'SwiftServer'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'server'
op|','
string|"'test-server'"
op|')'
newline|'\n'
comment|'# test multi-server and simple dedupe'
nl|'\n'
name|'servers'
op|'='
op|'['
string|"'object-replicator'"
op|','
string|"'object-auditor'"
op|','
string|"'object-replicator'"
op|']'
newline|'\n'
name|'controller'
op|'='
name|'swift_init'
op|'.'
name|'SwiftInit'
op|'('
name|'servers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'controller'
op|'.'
name|'servers'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'controller'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'server'
name|'in'
name|'servers'
op|')'
newline|'\n'
comment|'# test all'
nl|'\n'
dedent|''
name|'controller'
op|'='
name|'swift_init'
op|'.'
name|'SwiftInit'
op|'('
op|'['
string|"'all'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'controller'
op|'.'
name|'servers'
op|')'
op|','
name|'len'
op|'('
name|'swift_init'
op|'.'
name|'ALL_SERVERS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'controller'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'server'
name|'in'
name|'swift_init'
op|'.'
name|'ALL_SERVERS'
op|')'
newline|'\n'
comment|'# test main'
nl|'\n'
dedent|''
name|'controller'
op|'='
name|'swift_init'
op|'.'
name|'SwiftInit'
op|'('
op|'['
string|"'main'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'controller'
op|'.'
name|'servers'
op|')'
op|','
name|'len'
op|'('
name|'swift_init'
op|'.'
name|'MAIN_SERVERS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'controller'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'server'
name|'in'
name|'swift_init'
op|'.'
name|'MAIN_SERVERS'
op|')'
newline|'\n'
comment|'# test rest'
nl|'\n'
dedent|''
name|'controller'
op|'='
name|'swift_init'
op|'.'
name|'SwiftInit'
op|'('
op|'['
string|"'rest'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'controller'
op|'.'
name|'servers'
op|')'
op|','
name|'len'
op|'('
name|'swift_init'
op|'.'
name|'REST_SERVERS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'controller'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'server'
name|'in'
name|'swift_init'
op|'.'
name|'REST_SERVERS'
op|')'
newline|'\n'
comment|'# test main + rest == all'
nl|'\n'
dedent|''
name|'controller'
op|'='
name|'swift_init'
op|'.'
name|'SwiftInit'
op|'('
op|'['
string|"'main'"
op|','
string|"'rest'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'controller'
op|'.'
name|'servers'
op|')'
op|','
name|'len'
op|'('
name|'swift_init'
op|'.'
name|'ALL_SERVERS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'controller'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'server'
name|'in'
name|'swift_init'
op|'.'
name|'ALL_SERVERS'
op|')'
newline|'\n'
comment|'# test dedupe'
nl|'\n'
dedent|''
name|'controller'
op|'='
name|'swift_init'
op|'.'
name|'SwiftInit'
op|'('
op|'['
string|"'main'"
op|','
string|"'rest'"
op|','
string|"'proxy'"
op|','
string|"'object'"
op|','
nl|'\n'
string|"'container'"
op|','
string|"'account'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'controller'
op|'.'
name|'servers'
op|')'
op|','
name|'len'
op|'('
name|'swift_init'
op|'.'
name|'ALL_SERVERS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'controller'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'server'
name|'in'
name|'swift_init'
op|'.'
name|'ALL_SERVERS'
op|')'
newline|'\n'
nl|'\n'
comment|'#TODO: more tests'
nl|'\n'
DECL|member|test_watch_server_pids
dedent|''
dedent|''
name|'def'
name|'test_watch_server_pids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
newline|'\n'
nl|'\n'
DECL|member|test_get_command
dedent|''
name|'def'
name|'test_get_command'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
newline|'\n'
nl|'\n'
DECL|member|test_list_commands
dedent|''
name|'def'
name|'test_list_commands'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'cmd'
op|','
name|'help'
name|'in'
name|'swift_init'
op|'.'
name|'SwiftInit'
op|'.'
name|'list_commands'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'method'
op|'='
name|'getattr'
op|'('
name|'swift_init'
op|'.'
name|'SwiftInit'
op|','
name|'cmd'
op|'.'
name|'replace'
op|'('
string|"'-'"
op|','
string|"'_'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'method'
op|','
string|"'%s is not a command'"
op|'%'
name|'cmd'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'getattr'
op|'('
name|'method'
op|','
string|"'publicly_accessible'"
op|','
name|'False'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'method'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|','
name|'help'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_command
dedent|''
dedent|''
name|'def'
name|'test_run_command'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
newline|'\n'
nl|'\n'
DECL|member|test_status
dedent|''
name|'def'
name|'test_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockSwiftServer
indent|'        '
name|'class'
name|'MockSwiftServer'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'server'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'server'
op|'='
name|'server'
newline|'\n'
name|'self'
op|'.'
name|'called_kwargs'
op|'='
op|'['
op|']'
newline|'\n'
DECL|member|status
dedent|''
name|'def'
name|'status'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'called_kwargs'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'if'
string|"'error'"
name|'in'
name|'self'
op|'.'
name|'server'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'old_server_class'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'='
name|'MockSwiftServer'
newline|'\n'
DECL|variable|controller
name|'controller'
op|'='
name|'swift_init'
op|'.'
name|'SwiftInit'
op|'('
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'controller'
op|'.'
name|'status'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
DECL|variable|controller
name|'controller'
op|'='
name|'swift_init'
op|'.'
name|'SwiftInit'
op|'('
op|'['
string|"'error'"
op|']'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'controller'
op|'.'
name|'status'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'1'
op|')'
newline|'\n'
comment|'# test multi-server'
nl|'\n'
DECL|variable|controller
name|'controller'
op|'='
name|'swift_init'
op|'.'
name|'SwiftInit'
op|'('
op|'['
string|"'test'"
op|','
string|"'error'"
op|']'
op|')'
newline|'\n'
DECL|variable|kwargs
name|'kwargs'
op|'='
op|'{'
string|"'key'"
op|':'
string|"'value'"
op|'}'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'controller'
op|'.'
name|'status'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'controller'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'called_kwargs'
op|','
op|'['
name|'kwargs'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'='
name|'old_server_class'
newline|'\n'
nl|'\n'
DECL|member|test_start
dedent|''
dedent|''
name|'def'
name|'test_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|mock_setup_env
indent|'        '
name|'def'
name|'mock_setup_env'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'getattr'
op|'('
name|'mock_setup_env'
op|','
string|"'called'"
op|','
op|'['
op|']'
op|')'
op|'.'
name|'append'
op|'('
name|'True'
op|')'
newline|'\n'
DECL|class|MockSwiftServer
dedent|''
name|'class'
name|'MockSwiftServer'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'server'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'server'
op|'='
name|'server'
newline|'\n'
name|'self'
op|'.'
name|'called'
op|'='
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|launch
dedent|''
name|'def'
name|'launch'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|wait
dedent|''
name|'def'
name|'wait'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'called'
op|'['
string|"'wait'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'if'
string|"'error'"
name|'in'
name|'self'
op|'.'
name|'server'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|interact
dedent|''
dedent|''
name|'def'
name|'interact'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'called'
op|'['
string|"'interact'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
comment|'# TODO: test user quit'
nl|'\n'
string|'"""\n                if \'raise\' in self.server:\n                    raise KeyboardInterrupt\n                el\n                """'
newline|'\n'
name|'if'
string|"'error'"
name|'in'
name|'self'
op|'.'
name|'server'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'old_setup_env'
op|'='
name|'swift_init'
op|'.'
name|'setup_env'
newline|'\n'
name|'old_swift_server'
op|'='
name|'swift_init'
op|'.'
name|'SwiftServer'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'setup_env'
op|'='
name|'mock_setup_env'
newline|'\n'
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'='
name|'MockSwiftServer'
newline|'\n'
nl|'\n'
comment|'# test no errors on launch'
nl|'\n'
DECL|variable|controller
name|'controller'
op|'='
name|'swift_init'
op|'.'
name|'SwiftInit'
op|'('
op|'['
string|"'proxy'"
op|','
string|"'error'"
op|']'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'controller'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'controller'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|','
op|'['
op|'{'
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# test wait'
nl|'\n'
DECL|variable|controller
dedent|''
name|'controller'
op|'='
name|'swift_init'
op|'.'
name|'SwiftInit'
op|'('
op|'['
string|"'proxy'"
op|','
string|"'error'"
op|']'
op|')'
newline|'\n'
DECL|variable|kwargs
name|'kwargs'
op|'='
op|'{'
string|"'wait'"
op|':'
name|'True'
op|'}'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'controller'
op|'.'
name|'start'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'controller'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|','
op|'['
name|'kwargs'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'wait'"
op|']'
op|','
op|'['
name|'kwargs'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# test interact'
nl|'\n'
DECL|variable|controller
dedent|''
name|'controller'
op|'='
name|'swift_init'
op|'.'
name|'SwiftInit'
op|'('
op|'['
string|"'proxy'"
op|','
string|"'error'"
op|']'
op|')'
newline|'\n'
DECL|variable|kwargs
name|'kwargs'
op|'='
op|'{'
string|"'daemon'"
op|':'
name|'False'
op|'}'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'controller'
op|'.'
name|'start'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'controller'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|','
op|'['
name|'kwargs'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'interact'"
op|']'
op|','
op|'['
name|'kwargs'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'swift_init'
op|'.'
name|'setup_env'
op|'='
name|'old_setup_env'
newline|'\n'
name|'swift_init'
op|'.'
name|'SwiftServer'
op|'='
name|'old_swift_server'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|member|test_wait
dedent|''
dedent|''
name|'def'
name|'test_wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
newline|'\n'
nl|'\n'
DECL|member|test_no_daemon
dedent|''
name|'def'
name|'test_no_daemon'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
newline|'\n'
nl|'\n'
DECL|member|test_once
dedent|''
name|'def'
name|'test_once'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
newline|'\n'
nl|'\n'
DECL|member|test_stop
dedent|''
name|'def'
name|'test_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
newline|'\n'
nl|'\n'
DECL|member|test_shutdown
dedent|''
name|'def'
name|'test_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
newline|'\n'
nl|'\n'
DECL|member|test_restart
dedent|''
name|'def'
name|'test_restart'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
newline|'\n'
nl|'\n'
DECL|member|test_reload
dedent|''
name|'def'
name|'test_reload'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
newline|'\n'
nl|'\n'
DECL|member|test_force_reload
dedent|''
name|'def'
name|'test_force_reload'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
newline|'\n'
nl|'\n'
nl|'\n'
nl|'\n'
comment|'#TODO: test main'
nl|'\n'
DECL|class|TestMain
dedent|''
dedent|''
name|'class'
name|'TestMain'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_placeholder
indent|'    '
name|'def'
name|'test_placeholder'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'SkipTest'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
