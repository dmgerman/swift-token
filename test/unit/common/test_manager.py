begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'temptree'
newline|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'resource'
newline|'\n'
name|'import'
name|'signal'
newline|'\n'
name|'import'
name|'errno'
newline|'\n'
name|'from'
name|'collections'
name|'import'
name|'defaultdict'
newline|'\n'
name|'from'
name|'threading'
name|'import'
name|'Thread'
newline|'\n'
name|'from'
name|'time'
name|'import'
name|'sleep'
op|','
name|'time'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'manager'
newline|'\n'
nl|'\n'
DECL|variable|DUMMY_SIG
name|'DUMMY_SIG'
op|'='
number|'1'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MockOs
name|'class'
name|'MockOs'
op|'('
op|')'
op|':'
newline|'\n'
DECL|variable|RAISE_EPERM_SIG
indent|'    '
name|'RAISE_EPERM_SIG'
op|'='
number|'99'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pids'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'running_pids'
op|'='
name|'pids'
newline|'\n'
name|'self'
op|'.'
name|'pid_sigs'
op|'='
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'closed_fds'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'child_pid'
op|'='
number|'9999'
comment|'# fork defaults to test parent process path'
newline|'\n'
name|'self'
op|'.'
name|'execlp_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|kill
dedent|''
name|'def'
name|'kill'
op|'('
name|'self'
op|','
name|'pid'
op|','
name|'sig'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'sig'
op|'=='
name|'self'
op|'.'
name|'RAISE_EPERM_SIG'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'EPERM'
op|','
string|"'Operation not permitted'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'pid'
name|'not'
name|'in'
name|'self'
op|'.'
name|'running_pids'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'OSError'
op|'('
number|'3'
op|','
string|"'No such process'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'pid_sigs'
op|'['
name|'pid'
op|']'
op|'.'
name|'append'
op|'('
name|'sig'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getattr__
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
comment|'# I only over-ride portions of the os module'
nl|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'object'
op|'.'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'getattr'
op|'('
name|'os'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|pop_stream
dedent|''
dedent|''
dedent|''
name|'def'
name|'pop_stream'
op|'('
name|'f'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""read everything out of file from the top and clear it out\n    """'
newline|'\n'
name|'f'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'f'
op|'.'
name|'seek'
op|'('
number|'0'
op|')'
newline|'\n'
name|'output'
op|'='
name|'f'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'f'
op|'.'
name|'seek'
op|'('
number|'0'
op|')'
newline|'\n'
name|'f'
op|'.'
name|'truncate'
op|'('
op|')'
newline|'\n'
comment|'#print >> sys.stderr, output'
nl|'\n'
name|'return'
name|'output'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestManagerModule
dedent|''
name|'class'
name|'TestManagerModule'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_servers
indent|'    '
name|'def'
name|'test_servers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'main_plus_rest'
op|'='
name|'set'
op|'('
name|'manager'
op|'.'
name|'MAIN_SERVERS'
op|'+'
name|'manager'
op|'.'
name|'REST_SERVERS'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'set'
op|'('
name|'manager'
op|'.'
name|'ALL_SERVERS'
op|')'
op|','
name|'main_plus_rest'
op|')'
newline|'\n'
comment|"# make sure there's no server listed in both"
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'main_plus_rest'
op|')'
op|','
name|'len'
op|'('
name|'manager'
op|'.'
name|'MAIN_SERVERS'
op|')'
op|'+'
nl|'\n'
name|'len'
op|'('
name|'manager'
op|'.'
name|'REST_SERVERS'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_setup_env
dedent|''
name|'def'
name|'test_setup_env'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockResource
indent|'        '
name|'class'
name|'MockResource'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'error'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'error'
op|'='
name|'error'
newline|'\n'
name|'self'
op|'.'
name|'called_with_args'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|setrlimit
dedent|''
name|'def'
name|'setrlimit'
op|'('
name|'self'
op|','
name|'resource'
op|','
name|'limits'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'error'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'self'
op|'.'
name|'error'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'called_with_args'
op|'.'
name|'append'
op|'('
op|'('
name|'resource'
op|','
name|'limits'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__getattr__
dedent|''
name|'def'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
op|':'
newline|'\n'
comment|'# I only over-ride portions of the resource module'
nl|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'object'
op|'.'
name|'__getattr__'
op|'('
name|'self'
op|','
name|'name'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'getattr'
op|'('
name|'resource'
op|','
name|'name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'_orig_resource'
op|'='
name|'manager'
op|'.'
name|'resource'
newline|'\n'
name|'_orig_environ'
op|'='
name|'os'
op|'.'
name|'environ'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'resource'
op|'='
name|'MockResource'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'os'
op|'.'
name|'environ'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'manager'
op|'.'
name|'setup_env'
op|'('
op|')'
newline|'\n'
DECL|variable|expected
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
name|'resource'
op|'.'
name|'RLIMIT_NOFILE'
op|','
op|'('
name|'manager'
op|'.'
name|'MAX_DESCRIPTORS'
op|','
nl|'\n'
name|'manager'
op|'.'
name|'MAX_DESCRIPTORS'
op|')'
op|')'
op|','
nl|'\n'
op|'('
name|'resource'
op|'.'
name|'RLIMIT_DATA'
op|','
op|'('
name|'manager'
op|'.'
name|'MAX_MEMORY'
op|','
nl|'\n'
name|'manager'
op|'.'
name|'MAX_MEMORY'
op|')'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'manager'
op|'.'
name|'resource'
op|'.'
name|'called_with_args'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'.'
name|'environ'
op|'['
string|"'PYTHON_EGG_CACHE'"
op|']'
op|'.'
name|'startswith'
op|'('
string|"'/tmp'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# test error condition'
nl|'\n'
name|'manager'
op|'.'
name|'resource'
op|'='
name|'MockResource'
op|'('
name|'error'
op|'='
name|'ValueError'
op|'('
op|')'
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'os'
op|'.'
name|'environ'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'manager'
op|'.'
name|'setup_env'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'manager'
op|'.'
name|'resource'
op|'.'
name|'called_with_args'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'.'
name|'environ'
op|'['
string|"'PYTHON_EGG_CACHE'"
op|']'
op|'.'
name|'startswith'
op|'('
string|"'/tmp'"
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'manager'
op|'.'
name|'resource'
op|'='
name|'MockResource'
op|'('
name|'error'
op|'='
name|'OSError'
op|'('
op|')'
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'os'
op|'.'
name|'environ'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'OSError'
op|','
name|'manager'
op|'.'
name|'setup_env'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'manager'
op|'.'
name|'os'
op|'.'
name|'environ'
op|'.'
name|'get'
op|'('
string|"'PYTHON_EGG_CACHE'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'resource'
op|'='
name|'_orig_resource'
newline|'\n'
name|'os'
op|'.'
name|'environ'
op|'='
name|'_orig_environ'
newline|'\n'
nl|'\n'
DECL|member|test_command_wrapper
dedent|''
dedent|''
name|'def'
name|'test_command_wrapper'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
op|'@'
name|'manager'
op|'.'
name|'command'
newline|'\n'
DECL|function|myfunc
name|'def'
name|'myfunc'
op|'('
name|'arg1'
op|')'
op|':'
newline|'\n'
indent|'            '
string|'"""test doc\n            """'
newline|'\n'
name|'return'
name|'arg1'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|','
string|"'test doc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'('
number|'1'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'('
number|'0'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'('
name|'True'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'myfunc'
op|'('
name|'False'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'hasattr'
op|'('
name|'myfunc'
op|','
string|"'publicly_accessible'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'myfunc'
op|'.'
name|'publicly_accessible'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_watch_server_pids
dedent|''
name|'def'
name|'test_watch_server_pids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockOs
indent|'        '
name|'class'
name|'MockOs'
op|'('
op|')'
op|':'
newline|'\n'
DECL|variable|WNOHANG
indent|'            '
name|'WNOHANG'
op|'='
name|'os'
op|'.'
name|'WNOHANG'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pid_map'
op|'='
op|'{'
op|'}'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'pid_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'pid'
op|','
name|'v'
name|'in'
name|'pid_map'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'pid_map'
op|'['
name|'pid'
op|']'
op|'='
op|'('
name|'x'
name|'for'
name|'x'
name|'in'
name|'v'
op|')'
newline|'\n'
nl|'\n'
DECL|member|waitpid
dedent|''
dedent|''
name|'def'
name|'waitpid'
op|'('
name|'self'
op|','
name|'pid'
op|','
name|'options'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'rv'
op|'='
name|'self'
op|'.'
name|'pid_map'
op|'['
name|'pid'
op|']'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'ECHILD'
op|','
name|'os'
op|'.'
name|'strerror'
op|'('
name|'errno'
op|'.'
name|'ECHILD'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'KeyError'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'ESRCH'
op|','
name|'os'
op|'.'
name|'strerror'
op|'('
name|'errno'
op|'.'
name|'ESRCH'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'rv'
op|','
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'rv'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
DECL|class|MockTime
dedent|''
dedent|''
dedent|''
name|'class'
name|'MockTime'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'ticks'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'tock'
op|'='
name|'time'
op|'('
op|')'
newline|'\n'
name|'if'
name|'not'
name|'ticks'
op|':'
newline|'\n'
indent|'                    '
name|'ticks'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'ticks'
op|'='
op|'('
name|'t'
name|'for'
name|'t'
name|'in'
name|'ticks'
op|')'
newline|'\n'
nl|'\n'
DECL|member|time
dedent|''
name|'def'
name|'time'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'tock'
op|'+='
name|'self'
op|'.'
name|'ticks'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'tock'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'tock'
newline|'\n'
nl|'\n'
DECL|member|sleep
dedent|''
name|'def'
name|'sleep'
op|'('
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
nl|'\n'
DECL|class|MockServer
dedent|''
dedent|''
name|'class'
name|'MockServer'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pids'
op|','
name|'run_dir'
op|'='
name|'manager'
op|'.'
name|'RUN_DIR'
op|','
name|'zombie'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'heartbeat'
op|'='
op|'('
name|'pids'
name|'for'
name|'_'
name|'in'
name|'range'
op|'('
name|'zombie'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_running_pids
dedent|''
name|'def'
name|'get_running_pids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'rv'
op|'='
name|'self'
op|'.'
name|'heartbeat'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'return'
name|'rv'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'                    '
name|'return'
op|'{'
op|'}'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'_orig_os'
op|'='
name|'manager'
op|'.'
name|'os'
newline|'\n'
name|'_orig_time'
op|'='
name|'manager'
op|'.'
name|'time'
newline|'\n'
name|'_orig_server'
op|'='
name|'manager'
op|'.'
name|'Server'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'time'
op|'='
name|'MockTime'
op|'('
op|')'
newline|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|')'
newline|'\n'
comment|"# this server always says it's dead when you ask for running pids"
nl|'\n'
DECL|variable|server
name|'server'
op|'='
name|'MockServer'
op|'('
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
comment|'# list of pids keyed on servers to watch'
nl|'\n'
DECL|variable|server_pids
name|'server_pids'
op|'='
op|'{'
nl|'\n'
name|'server'
op|':'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
comment|'# basic test, server dies'
nl|'\n'
DECL|variable|gen
name|'gen'
op|'='
name|'manager'
op|'.'
name|'watch_server_pids'
op|'('
name|'server_pids'
op|')'
newline|'\n'
DECL|variable|expected
name|'expected'
op|'='
op|'['
op|'('
name|'server'
op|','
number|'1'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'gen'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
comment|'# start long running server and short interval'
nl|'\n'
DECL|variable|server
name|'server'
op|'='
name|'MockServer'
op|'('
op|'['
number|'1'
op|']'
op|','
name|'zombie'
op|'='
number|'15'
op|')'
newline|'\n'
DECL|variable|server_pids
name|'server_pids'
op|'='
op|'{'
nl|'\n'
name|'server'
op|':'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
DECL|variable|gen
name|'gen'
op|'='
name|'manager'
op|'.'
name|'watch_server_pids'
op|'('
name|'server_pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'gen'
op|']'
op|','
op|'['
op|']'
op|')'
newline|'\n'
comment|'# wait a little longer'
nl|'\n'
DECL|variable|gen
name|'gen'
op|'='
name|'manager'
op|'.'
name|'watch_server_pids'
op|'('
name|'server_pids'
op|','
name|'interval'
op|'='
number|'15'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'gen'
op|']'
op|','
op|'['
op|'('
name|'server'
op|','
number|'1'
op|')'
op|']'
op|')'
newline|'\n'
comment|'# zombie process'
nl|'\n'
DECL|variable|server
name|'server'
op|'='
name|'MockServer'
op|'('
op|'['
number|'1'
op|']'
op|','
name|'zombie'
op|'='
number|'200'
op|')'
newline|'\n'
DECL|variable|server_pids
name|'server_pids'
op|'='
op|'{'
nl|'\n'
name|'server'
op|':'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
comment|'# test weird os error'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'{'
number|'1'
op|':'
op|'['
name|'OSError'
op|'('
op|')'
op|']'
op|'}'
op|')'
newline|'\n'
DECL|variable|gen
name|'gen'
op|'='
name|'manager'
op|'.'
name|'watch_server_pids'
op|'('
name|'server_pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'OSError'
op|','
name|'lambda'
op|':'
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'gen'
op|']'
op|')'
newline|'\n'
comment|'# test multi-server'
nl|'\n'
DECL|variable|server1
name|'server1'
op|'='
name|'MockServer'
op|'('
op|'['
number|'1'
op|','
number|'10'
op|']'
op|','
name|'zombie'
op|'='
number|'200'
op|')'
newline|'\n'
DECL|variable|server2
name|'server2'
op|'='
name|'MockServer'
op|'('
op|'['
number|'2'
op|','
number|'20'
op|']'
op|','
name|'zombie'
op|'='
number|'8'
op|')'
newline|'\n'
DECL|variable|server_pids
name|'server_pids'
op|'='
op|'{'
nl|'\n'
name|'server1'
op|':'
op|'['
number|'1'
op|','
number|'10'
op|']'
op|','
nl|'\n'
name|'server2'
op|':'
op|'['
number|'2'
op|','
number|'20'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
DECL|variable|pid_map
name|'pid_map'
op|'='
op|'{'
nl|'\n'
number|'1'
op|':'
op|'['
name|'None'
name|'for'
name|'_'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|']'
op|','
nl|'\n'
number|'2'
op|':'
op|'['
name|'None'
name|'for'
name|'_'
name|'in'
name|'range'
op|'('
number|'8'
op|')'
op|']'
op|','
nl|'\n'
number|'20'
op|':'
op|'['
name|'None'
name|'for'
name|'_'
name|'in'
name|'range'
op|'('
number|'4'
op|')'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'pid_map'
op|')'
newline|'\n'
DECL|variable|gen
name|'gen'
op|'='
name|'manager'
op|'.'
name|'watch_server_pids'
op|'('
name|'server_pids'
op|','
nl|'\n'
name|'interval'
op|'='
name|'manager'
op|'.'
name|'KILL_WAIT'
op|')'
newline|'\n'
DECL|variable|expected
name|'expected'
op|'='
op|'['
nl|'\n'
op|'('
name|'server2'
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
name|'server2'
op|','
number|'20'
op|')'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
op|'['
name|'x'
name|'for'
name|'x'
name|'in'
name|'gen'
op|']'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'os'
op|'='
name|'_orig_os'
newline|'\n'
name|'manager'
op|'.'
name|'time'
op|'='
name|'_orig_time'
newline|'\n'
name|'manager'
op|'.'
name|'Server'
op|'='
name|'_orig_server'
newline|'\n'
nl|'\n'
DECL|member|test_exc
dedent|''
dedent|''
name|'def'
name|'test_exc'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'issubclass'
op|'('
name|'manager'
op|'.'
name|'UnknownCommandError'
op|','
name|'Exception'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestServer
dedent|''
dedent|''
name|'class'
name|'TestServer'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|tearDown
indent|'    '
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'reload'
op|'('
name|'manager'
op|')'
newline|'\n'
nl|'\n'
DECL|member|join_swift_dir
dedent|''
name|'def'
name|'join_swift_dir'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'manager'
op|'.'
name|'SWIFT_DIR'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|join_run_dir
dedent|''
name|'def'
name|'join_run_dir'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'manager'
op|'.'
name|'RUN_DIR'
op|','
name|'path'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_create_server
dedent|''
name|'def'
name|'test_create_server'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'server'
op|','
string|"'proxy-server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'type'
op|','
string|"'proxy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'cmd'
op|','
string|"'swift-proxy-server'"
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'server'
op|','
string|"'object-replicator'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'type'
op|','
string|"'object'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'cmd'
op|','
string|"'swift-object-replicator'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_to_string
dedent|''
name|'def'
name|'test_server_to_string'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'Proxy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'str'
op|'('
name|'server'
op|')'
op|','
string|"'proxy-server'"
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'str'
op|'('
name|'server'
op|')'
op|','
string|"'object-replicator'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_repr
dedent|''
name|'def'
name|'test_server_repr'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'__class__'
op|'.'
name|'__name__'
name|'in'
name|'repr'
op|'('
name|'server'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'str'
op|'('
name|'server'
op|')'
name|'in'
name|'repr'
op|'('
name|'server'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_server_equality
dedent|''
name|'def'
name|'test_server_equality'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server1'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'Proxy'"
op|')'
newline|'\n'
name|'server2'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'proxy-server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server1'
op|','
name|'server2'
op|')'
newline|'\n'
comment|'# it is NOT a string'
nl|'\n'
name|'self'
op|'.'
name|'assertNotEquals'
op|'('
name|'server1'
op|','
string|"'proxy-server'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_pid_file_name
dedent|''
name|'def'
name|'test_get_pid_file_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'proxy-server.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'server'
op|'.'
name|'get_pid_file_name'
op|'('
name|'conf_file'
op|')'
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/1.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-replicator/1.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'server'
op|'.'
name|'get_pid_file_name'
op|'('
name|'conf_file'
op|')'
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'container-auditor'"
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
nl|'\n'
string|"'container-server/1/container-auditor.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
nl|'\n'
string|"'container-auditor/1/container-auditor.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'server'
op|'.'
name|'get_pid_file_name'
op|'('
name|'conf_file'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_custom_pid_file_name
dedent|''
name|'def'
name|'test_get_custom_pid_file_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'random_run_dir'
op|'='
string|'"/random/dir"'
newline|'\n'
name|'get_random_run_dir'
op|'='
name|'lambda'
name|'x'
op|':'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'random_run_dir'
op|','
name|'x'
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'proxy'"
op|','
name|'run_dir'
op|'='
name|'random_run_dir'
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'get_random_run_dir'
op|'('
string|"'proxy-server.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'server'
op|'.'
name|'get_pid_file_name'
op|'('
name|'conf_file'
op|')'
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object-replicator'"
op|','
name|'run_dir'
op|'='
name|'random_run_dir'
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/1.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'get_random_run_dir'
op|'('
string|"'object-replicator/1.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'server'
op|'.'
name|'get_pid_file_name'
op|'('
name|'conf_file'
op|')'
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'container-auditor'"
op|','
name|'run_dir'
op|'='
name|'random_run_dir'
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
nl|'\n'
string|"'container-server/1/container-auditor.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'get_random_run_dir'
op|'('
nl|'\n'
string|"'container-auditor/1/container-auditor.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'server'
op|'.'
name|'get_pid_file_name'
op|'('
name|'conf_file'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_conf_file_name
dedent|''
name|'def'
name|'test_get_conf_file_name'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'proxy-server.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conf_file'
op|','
name|'server'
op|'.'
name|'get_conf_file_name'
op|'('
name|'pid_file'
op|')'
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/1.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-replicator/1.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conf_file'
op|','
name|'server'
op|'.'
name|'get_conf_file_name'
op|'('
name|'pid_file'
op|')'
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'container-auditor'"
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
nl|'\n'
string|"'container-server/1/container-auditor.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
nl|'\n'
string|"'container-auditor/1/container-auditor.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conf_file'
op|','
name|'server'
op|'.'
name|'get_conf_file_name'
op|'('
name|'pid_file'
op|')'
op|')'
newline|'\n'
name|'server_name'
op|'='
name|'manager'
op|'.'
name|'STANDALONE_SERVERS'
op|'['
number|'0'
op|']'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
name|'server_name'
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
name|'server_name'
op|'+'
string|"'.conf'"
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
name|'server_name'
op|'+'
string|"'.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conf_file'
op|','
name|'server'
op|'.'
name|'get_conf_file_name'
op|'('
name|'pid_file'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conf_files
dedent|''
name|'def'
name|'test_conf_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test get single conf file'
nl|'\n'
indent|'        '
name|'conf_files'
op|'='
op|'('
nl|'\n'
string|"'proxy-server.conf'"
op|','
nl|'\n'
string|"'proxy-server.ini'"
op|','
nl|'\n'
string|"'auth-server.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'conf_files'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'conf_files'
op|'='
name|'server'
op|'.'
name|'conf_files'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'conf_files'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'conf_files'
op|'['
number|'0'
op|']'
newline|'\n'
name|'proxy_conf'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conf_file'
op|','
name|'proxy_conf'
op|')'
newline|'\n'
nl|'\n'
comment|'# test multi server conf files & grouping of server-type config'
nl|'\n'
dedent|''
name|'conf_files'
op|'='
op|'('
nl|'\n'
string|"'object-server1.conf'"
op|','
nl|'\n'
string|"'object-server/2.conf'"
op|','
nl|'\n'
string|"'object-server/object3.conf'"
op|','
nl|'\n'
string|"'object-server/conf/server4.conf'"
op|','
nl|'\n'
string|"'object-server.txt'"
op|','
nl|'\n'
string|"'proxy-server.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'conf_files'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'conf_files'
op|'='
name|'server'
op|'.'
name|'conf_files'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'conf_files'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'c1'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server1.conf'"
op|')'
newline|'\n'
name|'c2'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/2.conf'"
op|')'
newline|'\n'
name|'c3'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/object3.conf'"
op|')'
newline|'\n'
name|'c4'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/conf/server4.conf'"
op|')'
newline|'\n'
name|'for'
name|'c'
name|'in'
op|'['
name|'c1'
op|','
name|'c2'
op|','
name|'c3'
op|','
name|'c4'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'c'
name|'in'
name|'conf_files'
op|')'
newline|'\n'
comment|'# test configs returned sorted'
nl|'\n'
dedent|''
name|'sorted_confs'
op|'='
name|'sorted'
op|'('
op|'['
name|'c1'
op|','
name|'c2'
op|','
name|'c3'
op|','
name|'c4'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conf_files'
op|','
name|'sorted_confs'
op|')'
newline|'\n'
nl|'\n'
comment|'# test get single numbered conf'
nl|'\n'
dedent|''
name|'conf_files'
op|'='
op|'('
nl|'\n'
string|"'account-server/1.conf'"
op|','
nl|'\n'
string|"'account-server/2.conf'"
op|','
nl|'\n'
string|"'account-server/3.conf'"
op|','
nl|'\n'
string|"'account-server/4.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'conf_files'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'account'"
op|')'
newline|'\n'
name|'conf_files'
op|'='
name|'server'
op|'.'
name|'conf_files'
op|'('
name|'number'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'conf_files'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'conf_files'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conf_file'
op|','
nl|'\n'
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'account-server/2.conf'"
op|')'
op|')'
newline|'\n'
comment|'# test missing config number'
nl|'\n'
name|'conf_files'
op|'='
name|'server'
op|'.'
name|'conf_files'
op|'('
name|'number'
op|'='
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'conf_files'
op|')'
newline|'\n'
nl|'\n'
comment|'# test verbose & quiet'
nl|'\n'
dedent|''
name|'conf_files'
op|'='
op|'('
nl|'\n'
string|"'auth-server.ini'"
op|','
nl|'\n'
string|"'container-server/1.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'conf_files'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'t'
newline|'\n'
name|'old_stdout'
op|'='
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'output'"
op|')'
op|','
string|"'w+'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                    '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'f'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'auth'"
op|')'
newline|'\n'
comment|'# check warn "unable to locate"'
nl|'\n'
name|'conf_files'
op|'='
name|'server'
op|'.'
name|'conf_files'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'conf_files'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'unable to locate'"
name|'in'
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# check quiet will silence warning'
nl|'\n'
name|'conf_files'
op|'='
name|'server'
op|'.'
name|'conf_files'
op|'('
name|'verbose'
op|'='
name|'True'
op|','
name|'quiet'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pop_stream'
op|'('
name|'f'
op|')'
op|','
string|"''"
op|')'
newline|'\n'
comment|'# check found config no warning'
nl|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'container-auditor'"
op|')'
newline|'\n'
name|'conf_files'
op|'='
name|'server'
op|'.'
name|'conf_files'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pop_stream'
op|'('
name|'f'
op|')'
op|','
string|"''"
op|')'
newline|'\n'
comment|'# check missing config number warn "unable to locate"'
nl|'\n'
name|'conf_files'
op|'='
name|'server'
op|'.'
name|'conf_files'
op|'('
name|'number'
op|'='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'unable to locate'"
name|'in'
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# check verbose lists configs'
nl|'\n'
name|'conf_files'
op|'='
name|'server'
op|'.'
name|'conf_files'
op|'('
name|'number'
op|'='
number|'2'
op|','
name|'verbose'
op|'='
name|'True'
op|')'
newline|'\n'
name|'c1'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'container-server/1.conf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'c1'
name|'in'
name|'pop_stream'
op|'('
name|'f'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'old_stdout'
newline|'\n'
nl|'\n'
comment|'# test standalone conf file'
nl|'\n'
dedent|''
dedent|''
name|'server_name'
op|'='
name|'manager'
op|'.'
name|'STANDALONE_SERVERS'
op|'['
number|'0'
op|']'
newline|'\n'
name|'conf_files'
op|'='
op|'('
name|'server_name'
op|'+'
string|"'.conf'"
op|','
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'conf_files'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
name|'server_name'
op|')'
newline|'\n'
name|'conf_files'
op|'='
name|'server'
op|'.'
name|'conf_files'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'conf_files'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'conf_files'
op|'['
number|'0'
op|']'
newline|'\n'
name|'conf'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
name|'server_name'
op|'+'
string|"'.conf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conf_file'
op|','
name|'conf'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_proxy_conf_dir
dedent|''
dedent|''
name|'def'
name|'test_proxy_conf_dir'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf_files'
op|'='
op|'('
nl|'\n'
string|"'proxy-server.conf.d/00.conf'"
op|','
nl|'\n'
string|"'proxy-server.conf.d/01.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'conf_files'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'proxy'"
op|')'
newline|'\n'
name|'conf_dirs'
op|'='
name|'server'
op|'.'
name|'conf_files'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'conf_dirs'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'conf_dir'
op|'='
name|'conf_dirs'
op|'['
number|'0'
op|']'
newline|'\n'
name|'proxy_conf_dir'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'proxy-server.conf.d'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proxy_conf_dir'
op|','
name|'conf_dir'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_conf_dir
dedent|''
dedent|''
name|'def'
name|'test_conf_dir'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf_files'
op|'='
op|'('
nl|'\n'
string|"'object-server/object-server.conf-base'"
op|','
nl|'\n'
string|"'object-server/1.conf.d/base.conf'"
op|','
nl|'\n'
string|"'object-server/1.conf.d/1.conf'"
op|','
nl|'\n'
string|"'object-server/2.conf.d/base.conf'"
op|','
nl|'\n'
string|"'object-server/2.conf.d/2.conf'"
op|','
nl|'\n'
string|"'object-server/3.conf.d/base.conf'"
op|','
nl|'\n'
string|"'object-server/3.conf.d/3.conf'"
op|','
nl|'\n'
string|"'object-server/4.conf.d/base.conf'"
op|','
nl|'\n'
string|"'object-server/4.conf.d/4.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'conf_files'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'conf_dirs'
op|'='
name|'server'
op|'.'
name|'conf_files'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'conf_dirs'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'c1'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/1.conf.d'"
op|')'
newline|'\n'
name|'c2'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/2.conf.d'"
op|')'
newline|'\n'
name|'c3'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/3.conf.d'"
op|')'
newline|'\n'
name|'c4'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/4.conf.d'"
op|')'
newline|'\n'
name|'for'
name|'c'
name|'in'
op|'['
name|'c1'
op|','
name|'c2'
op|','
name|'c3'
op|','
name|'c4'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'c'
name|'in'
name|'conf_dirs'
op|')'
newline|'\n'
comment|'# test configs returned sorted'
nl|'\n'
dedent|''
name|'sorted_confs'
op|'='
name|'sorted'
op|'('
op|'['
name|'c1'
op|','
name|'c2'
op|','
name|'c3'
op|','
name|'c4'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'conf_dirs'
op|','
name|'sorted_confs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iter_pid_files
dedent|''
dedent|''
name|'def'
name|'test_iter_pid_files'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Server.iter_pid_files is kinda boring, test the\n        Server.pid_files stuff here as well\n        """'
newline|'\n'
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'proxy-server.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'auth-server.pid'"
op|','
string|"'blah'"
op|')'
op|','
nl|'\n'
op|'('
string|"'object-replicator/1.pid'"
op|','
number|'11'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-replicator/2.pid'"
op|','
number|'12'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'files'
op|','
name|'contents'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'contents'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'proxy'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
comment|'# test get one file'
nl|'\n'
name|'iter'
op|'='
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
op|')'
newline|'\n'
name|'pid_file'
op|','
name|'pid'
op|'='
name|'iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'proxy-server.pid'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid'
op|','
number|'1'
op|')'
newline|'\n'
comment|'# ... and only one file'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'iter'
op|'.'
name|'next'
op|')'
newline|'\n'
comment|'# test invalid value in pid file'
nl|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'auth'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ValueError'
op|','
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
op|')'
op|'.'
name|'next'
op|')'
newline|'\n'
comment|"# test object-server doesn't steal pids from object-replicator"
nl|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'StopIteration'
op|','
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
op|')'
op|'.'
name|'next'
op|')'
newline|'\n'
comment|'# test multi-pid iter'
nl|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object-replicator'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
name|'real_map'
op|'='
op|'{'
nl|'\n'
number|'11'
op|':'
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-replicator/1.pid'"
op|')'
op|','
nl|'\n'
number|'12'
op|':'
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-replicator/2.pid'"
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'pid_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'pid_file'
op|','
name|'pid'
name|'in'
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pid_map'
op|'['
name|'pid'
op|']'
op|'='
name|'pid_file'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_map'
op|','
name|'real_map'
op|')'
newline|'\n'
nl|'\n'
comment|'# test get pid_files by number'
nl|'\n'
dedent|''
name|'conf_files'
op|'='
op|'('
nl|'\n'
string|"'object-server/1.conf'"
op|','
nl|'\n'
string|"'object-server/2.conf'"
op|','
nl|'\n'
string|"'object-server/3.conf'"
op|','
nl|'\n'
string|"'object-server/4.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'object-server/1.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-server/2.pid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-server/5.pid'"
op|','
number|'5'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'temptree'
op|'('
name|'conf_files'
op|')'
name|'as'
name|'swift_dir'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'swift_dir'
newline|'\n'
name|'files'
op|','
name|'pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'                '
name|'manager'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
comment|'# test get all pid files'
nl|'\n'
name|'real_map'
op|'='
op|'{'
nl|'\n'
number|'1'
op|':'
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-server/1.pid'"
op|')'
op|','
nl|'\n'
number|'2'
op|':'
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-server/2.pid'"
op|')'
op|','
nl|'\n'
number|'5'
op|':'
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-server/5.pid'"
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'pid_map'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'pid_file'
op|','
name|'pid'
name|'in'
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'pid_map'
op|'['
name|'pid'
op|']'
op|'='
name|'pid_file'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_map'
op|','
name|'real_map'
op|')'
newline|'\n'
comment|'# test get pid with matching conf'
nl|'\n'
name|'pids'
op|'='
name|'list'
op|'('
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
name|'number'
op|'='
number|'2'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'pid_file'
op|','
name|'pid'
op|'='
name|'pids'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid'
op|','
number|'2'
op|')'
newline|'\n'
name|'pid_two'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'object-server/2.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_file'
op|','
name|'pid_two'
op|')'
newline|'\n'
comment|'# try to iter on a pid number with a matching conf but no pid'
nl|'\n'
name|'pids'
op|'='
name|'list'
op|'('
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
name|'number'
op|'='
number|'3'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'pids'
op|')'
newline|'\n'
comment|'# test get pids w/o matching conf'
nl|'\n'
name|'pids'
op|'='
name|'list'
op|'('
name|'server'
op|'.'
name|'iter_pid_files'
op|'('
name|'number'
op|'='
number|'5'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'pids'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_signal_pids
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_signal_pids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'proxy-server.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'auth-server.pid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-server.pid'"
op|','
number|'3'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'files'
op|','
name|'pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
comment|'# mock os with both pids running'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'proxy'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'signal_pids'
op|'('
name|'DUMMY_SIG'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'manager'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
number|'1'
op|']'
op|','
op|'['
name|'DUMMY_SIG'
op|']'
op|')'
newline|'\n'
comment|'# make sure other process not signaled'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
number|'2'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
number|'2'
name|'in'
name|'manager'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|')'
newline|'\n'
comment|'# capture stdio'
nl|'\n'
name|'old_stdout'
op|'='
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'output'"
op|')'
op|','
string|"'w+'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                    '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'f'
newline|'\n'
comment|'#test print details'
nl|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'signal_pids'
op|'('
name|'DUMMY_SIG'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'pid: %s'"
op|'%'
number|'1'
name|'in'
name|'output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'signal: %s'"
op|'%'
name|'DUMMY_SIG'
name|'in'
name|'output'
op|')'
newline|'\n'
comment|'# test no details on signal.SIG_DFL'
nl|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'signal_pids'
op|'('
name|'signal'
op|'.'
name|'SIG_DFL'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pop_stream'
op|'('
name|'f'
op|')'
op|','
string|"''"
op|')'
newline|'\n'
comment|'# reset mock os so only the other server is running'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
comment|'# test pid not running'
nl|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'signal_pids'
op|'('
name|'signal'
op|'.'
name|'SIG_DFL'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'not'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'not'
name|'in'
name|'manager'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|')'
newline|'\n'
comment|'# test remove stale pid file'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'proxy-server.pid'"
op|')'
op|')'
op|')'
newline|'\n'
comment|'# reset mock os with no running pids'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'auth'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
comment|'# test verbose warns on removing pid file'
nl|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'signal_pids'
op|'('
name|'signal'
op|'.'
name|'SIG_DFL'
op|','
name|'verbose'
op|'='
name|'True'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'stale pid'"
name|'in'
name|'output'
op|'.'
name|'lower'
op|'('
op|')'
op|')'
newline|'\n'
name|'auth_pid'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'auth-server.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'auth_pid'
name|'in'
name|'output'
op|')'
newline|'\n'
comment|'# test warning with insufficient permissions'
nl|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'signal_pids'
op|'('
name|'manager'
op|'.'
name|'os'
op|'.'
name|'RAISE_EPERM_SIG'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'no permission to signal pid 3'"
name|'in'
nl|'\n'
name|'output'
op|'.'
name|'lower'
op|'('
op|')'
op|','
name|'output'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'old_stdout'
newline|'\n'
nl|'\n'
DECL|member|test_get_running_pids
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_get_running_pids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test only gets running pids'
nl|'\n'
indent|'        '
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'test-server1.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'test-server2.pid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'*'
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'test-server'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
comment|"# mock os, only pid '1' is running"
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'running_pids'
op|'='
name|'server'
op|'.'
name|'get_running_pids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'running_pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'in'
name|'running_pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'2'
name|'not'
name|'in'
name|'running_pids'
op|')'
newline|'\n'
comment|'# test persistent running pid files'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'test-server1.pid'"
op|')'
op|')'
op|')'
newline|'\n'
comment|'# test clean up stale pids'
nl|'\n'
name|'pid_two'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'test-server2.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'pid_two'
op|')'
op|')'
newline|'\n'
comment|'# reset mock os, no pids running'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'running_pids'
op|'='
name|'server'
op|'.'
name|'get_running_pids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'running_pids'
op|')'
newline|'\n'
comment|'# and now all pid files are cleaned out'
nl|'\n'
name|'pid_one'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'test-server1.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'pid_one'
op|')'
op|')'
newline|'\n'
name|'all_pids'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'t'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'all_pids'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# test only get pids for right server'
nl|'\n'
dedent|''
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'thing-doer.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'thing-sayer.pid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'other-doer.pid'"
op|','
number|'3'
op|')'
op|','
nl|'\n'
op|'('
string|"'other-sayer.pid'"
op|','
number|'4'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'files'
op|','
name|'pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
comment|'# all pids are running'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'pids'
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'thing-doer'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
name|'running_pids'
op|'='
name|'server'
op|'.'
name|'get_running_pids'
op|'('
op|')'
newline|'\n'
comment|'# only thing-doer.pid, 1'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'running_pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'in'
name|'running_pids'
op|')'
newline|'\n'
comment|'# no other pids returned'
nl|'\n'
name|'for'
name|'n'
name|'in'
op|'('
number|'2'
op|','
number|'3'
op|','
number|'4'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'n'
name|'not'
name|'in'
name|'running_pids'
op|')'
newline|'\n'
comment|'# assert stale pids for other servers ignored'
nl|'\n'
dedent|''
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'1'
op|']'
op|')'
comment|'# only thing-doer is running'
newline|'\n'
name|'running_pids'
op|'='
name|'server'
op|'.'
name|'get_running_pids'
op|'('
op|')'
newline|'\n'
name|'for'
name|'f'
name|'in'
op|'('
string|"'thing-sayer.pid'"
op|','
string|"'other-doer.pid'"
op|','
string|"'other-sayer.pid'"
op|')'
op|':'
newline|'\n'
comment|'# other server pid files persist'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|','
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
name|'f'
op|')'
op|')'
newline|'\n'
comment|'# verify that servers are in fact not running'
nl|'\n'
dedent|''
name|'for'
name|'server_name'
name|'in'
op|'('
string|"'thing-sayer'"
op|','
string|"'other-doer'"
op|','
string|"'other-sayer'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
name|'server_name'
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
name|'running_pids'
op|'='
name|'server'
op|'.'
name|'get_running_pids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'running_pids'
op|')'
newline|'\n'
comment|'# and now all OTHER pid files are cleaned out'
nl|'\n'
dedent|''
name|'all_pids'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'t'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'all_pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'thing-doer.pid'"
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_kill_running_pids
dedent|''
dedent|''
name|'def'
name|'test_kill_running_pids'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'object-server.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-replicator1.pid'"
op|','
number|'11'
op|')'
op|','
nl|'\n'
op|'('
string|"'object-replicator2.pid'"
op|','
number|'12'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
name|'files'
op|','
name|'running_pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'running_pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
comment|'# test no servers running'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'kill_running_pids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'pids'
op|','
name|'pids'
op|')'
newline|'\n'
dedent|''
name|'files'
op|','
name|'running_pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'running_pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'.'
name|'run_dir'
op|'='
name|'t'
newline|'\n'
comment|'# start up pid'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
comment|'# test kill one pid'
nl|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'kill_running_pids'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'manager'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
number|'1'
op|']'
op|','
op|'['
name|'signal'
op|'.'
name|'SIGTERM'
op|']'
op|')'
newline|'\n'
comment|'# reset os mock'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
comment|'# test shutdown'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'object-server'"
name|'in'
nl|'\n'
name|'manager'
op|'.'
name|'GRACEFUL_SHUTDOWN_SERVERS'
op|')'
newline|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'kill_running_pids'
op|'('
name|'graceful'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'manager'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
number|'1'
op|']'
op|','
op|'['
name|'signal'
op|'.'
name|'SIGHUP'
op|']'
op|')'
newline|'\n'
comment|'# start up other servers'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'11'
op|','
number|'12'
op|']'
op|')'
newline|'\n'
comment|'# test multi server kill & ignore graceful on unsupported server'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'object-replicator'"
name|'in'
nl|'\n'
name|'manager'
op|'.'
name|'GRACEFUL_SHUTDOWN_SERVERS'
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object-replicator'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'kill_running_pids'
op|'('
name|'graceful'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'pid'
name|'in'
op|'('
number|'11'
op|','
number|'12'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'pid'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'manager'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
name|'pid'
op|']'
op|','
nl|'\n'
op|'['
name|'signal'
op|'.'
name|'SIGTERM'
op|']'
op|')'
newline|'\n'
comment|'# and the other pid is of course not signaled'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
number|'1'
name|'not'
name|'in'
name|'manager'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_status
dedent|''
dedent|''
name|'def'
name|'test_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf_files'
op|'='
op|'('
nl|'\n'
string|"'test-server/1.conf'"
op|','
nl|'\n'
string|"'test-server/2.conf'"
op|','
nl|'\n'
string|"'test-server/3.conf'"
op|','
nl|'\n'
string|"'test-server/4.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'test-server/1.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'test-server/2.pid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'test-server/3.pid'"
op|','
number|'3'
op|')'
op|','
nl|'\n'
op|'('
string|"'test-server/4.pid'"
op|','
number|'4'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'temptree'
op|'('
name|'conf_files'
op|')'
name|'as'
name|'swift_dir'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'swift_dir'
newline|'\n'
name|'files'
op|','
name|'pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'                '
name|'manager'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
comment|'# setup running servers'
nl|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'test'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
comment|'# capture stdio'
nl|'\n'
name|'old_stdout'
op|'='
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'output'"
op|')'
op|','
string|"'w+'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                        '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'f'
newline|'\n'
comment|'# test status for all running'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'status'
op|'('
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'splitlines'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'output'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'output'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'test-server running'"
name|'in'
name|'line'
op|')'
newline|'\n'
comment|'# test get single server by number'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'status'
op|'('
name|'number'
op|'='
number|'4'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'splitlines'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'output'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'line'
op|'='
name|'output'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'test-server running'"
name|'in'
name|'line'
op|')'
newline|'\n'
name|'conf_four'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
name|'conf_files'
op|'['
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'4 - %s'"
op|'%'
name|'conf_four'
name|'in'
name|'line'
op|')'
newline|'\n'
comment|'# test some servers not running'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'status'
op|'('
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'splitlines'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'output'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'output'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'test-server running'"
name|'in'
name|'line'
op|')'
newline|'\n'
comment|'# test single server not running'
nl|'\n'
dedent|''
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'status'
op|'('
name|'number'
op|'='
number|'3'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'splitlines'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'output'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'line'
op|'='
name|'output'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'not running'"
name|'in'
name|'line'
op|')'
newline|'\n'
name|'conf_three'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
name|'conf_files'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'conf_three'
name|'in'
name|'line'
op|')'
newline|'\n'
comment|'# test no running pids'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'status'
op|'('
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'lower'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'no test-server running'"
name|'in'
name|'output'
op|')'
newline|'\n'
comment|'# test use provided pids'
nl|'\n'
name|'pids'
op|'='
op|'{'
nl|'\n'
number|'1'
op|':'
string|"'1.pid'"
op|','
nl|'\n'
number|'2'
op|':'
string|"'2.pid'"
op|','
nl|'\n'
op|'}'
newline|'\n'
comment|"# shouldn't call get_running_pids"
nl|'\n'
name|'called'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|mock
name|'def'
name|'mock'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'called'
op|'.'
name|'append'
op|'('
name|'True'
op|')'
newline|'\n'
dedent|''
name|'server'
op|'.'
name|'get_running_pids'
op|'='
name|'mock'
newline|'\n'
name|'status'
op|'='
name|'server'
op|'.'
name|'status'
op|'('
name|'pids'
op|'='
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'called'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'splitlines'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'output'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'line'
name|'in'
name|'output'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'test-server running'"
name|'in'
name|'line'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                    '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'old_stdout'
newline|'\n'
nl|'\n'
DECL|member|test_spawn
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_spawn'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
comment|'# mocks'
nl|'\n'
DECL|class|MockProcess
indent|'        '
name|'class'
name|'MockProcess'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|variable|NOTHING
indent|'            '
name|'NOTHING'
op|'='
string|"'default besides None'"
newline|'\n'
DECL|variable|STDOUT
name|'STDOUT'
op|'='
string|"'stdout'"
newline|'\n'
DECL|variable|PIPE
name|'PIPE'
op|'='
string|"'pipe'"
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pids'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'pids'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                    '
name|'pids'
op|'='
op|'['
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'pids'
op|'='
op|'('
name|'p'
name|'for'
name|'p'
name|'in'
name|'pids'
op|')'
newline|'\n'
nl|'\n'
DECL|member|Popen
dedent|''
name|'def'
name|'Popen'
op|'('
name|'self'
op|','
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'MockProc'
op|'('
name|'self'
op|'.'
name|'pids'
op|'.'
name|'next'
op|'('
op|')'
op|','
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|class|MockProc
dedent|''
dedent|''
name|'class'
name|'MockProc'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pid'
op|','
name|'args'
op|','
name|'stdout'
op|'='
name|'MockProcess'
op|'.'
name|'NOTHING'
op|','
nl|'\n'
name|'stderr'
op|'='
name|'MockProcess'
op|'.'
name|'NOTHING'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'pid'
op|'='
name|'pid'
newline|'\n'
name|'self'
op|'.'
name|'args'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'stdout'
op|'='
name|'stdout'
newline|'\n'
name|'if'
name|'stderr'
op|'=='
name|'MockProcess'
op|'.'
name|'STDOUT'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'stderr'
op|'='
name|'self'
op|'.'
name|'stdout'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'stderr'
op|'='
name|'stderr'
newline|'\n'
nl|'\n'
comment|'# setup running servers'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'test'"
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
string|"'test-server.conf'"
op|']'
op|')'
name|'as'
name|'swift_dir'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'swift_dir'
newline|'\n'
name|'with'
name|'temptree'
op|'('
op|'['
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'                '
name|'manager'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'server'
op|'.'
name|'run_dir'
op|'='
name|'t'
newline|'\n'
name|'old_subprocess'
op|'='
name|'manager'
op|'.'
name|'subprocess'
newline|'\n'
name|'try'
op|':'
newline|'\n'
comment|'# test single server process calls spawn once'
nl|'\n'
indent|'                    '
name|'manager'
op|'.'
name|'subprocess'
op|'='
name|'MockProcess'
op|'('
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'test-server.conf'"
op|')'
newline|'\n'
comment|'# spawn server no kwargs'
nl|'\n'
name|'server'
op|'.'
name|'spawn'
op|'('
name|'conf_file'
op|')'
newline|'\n'
comment|'# test pid file'
nl|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'test-server.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'pid_file'
op|')'
op|')'
newline|'\n'
name|'pid_on_disk'
op|'='
name|'int'
op|'('
name|'open'
op|'('
name|'pid_file'
op|')'
op|'.'
name|'read'
op|'('
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_on_disk'
op|','
number|'1'
op|')'
newline|'\n'
comment|'# assert procs args'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'proc'
op|'='
name|'server'
op|'.'
name|'procs'
op|'['
number|'0'
op|']'
newline|'\n'
name|'expected_args'
op|'='
op|'['
nl|'\n'
string|"'swift-test-server'"
op|','
nl|'\n'
name|'conf_file'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'args'
op|','
name|'expected_args'
op|')'
newline|'\n'
comment|'# assert stdout is piped'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|','
name|'MockProcess'
op|'.'
name|'PIPE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stderr'
op|','
name|'proc'
op|'.'
name|'stdout'
op|')'
newline|'\n'
comment|'# test multi server process calls spawn multiple times'
nl|'\n'
name|'manager'
op|'.'
name|'subprocess'
op|'='
name|'MockProcess'
op|'('
op|'['
number|'11'
op|','
number|'12'
op|','
number|'13'
op|','
number|'14'
op|']'
op|')'
newline|'\n'
name|'conf1'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'test-server/1.conf'"
op|')'
newline|'\n'
name|'conf2'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'test-server/2.conf'"
op|')'
newline|'\n'
name|'conf3'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'test-server/3.conf'"
op|')'
newline|'\n'
name|'conf4'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'test-server/4.conf'"
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'test'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
comment|'# test server run once'
nl|'\n'
name|'server'
op|'.'
name|'spawn'
op|'('
name|'conf1'
op|','
name|'once'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'proc'
op|'='
name|'server'
op|'.'
name|'procs'
op|'['
number|'0'
op|']'
newline|'\n'
name|'expected_args'
op|'='
op|'['
string|"'swift-test-server'"
op|','
name|'conf1'
op|','
string|"'once'"
op|']'
newline|'\n'
comment|'# assert stdout is piped'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|','
name|'MockProcess'
op|'.'
name|'PIPE'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stderr'
op|','
name|'proc'
op|'.'
name|'stdout'
op|')'
newline|'\n'
comment|'# test server not daemon'
nl|'\n'
name|'server'
op|'.'
name|'spawn'
op|'('
name|'conf2'
op|','
name|'daemon'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'proc'
op|'='
name|'server'
op|'.'
name|'procs'
op|'['
number|'1'
op|']'
newline|'\n'
name|'expected_args'
op|'='
op|'['
string|"'swift-test-server'"
op|','
name|'conf2'
op|','
string|"'verbose'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'args'
op|','
name|'expected_args'
op|')'
newline|'\n'
comment|'# assert stdout is not changed'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stderr'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# test server wait'
nl|'\n'
name|'server'
op|'.'
name|'spawn'
op|'('
name|'conf3'
op|','
name|'wait'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
op|','
number|'3'
op|')'
newline|'\n'
name|'proc'
op|'='
name|'server'
op|'.'
name|'procs'
op|'['
number|'2'
op|']'
newline|'\n'
comment|'# assert stdout is /dev/null'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'isinstance'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|','
name|'file'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|'.'
name|'name'
op|','
name|'os'
op|'.'
name|'devnull'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|'.'
name|'mode'
op|','
string|"'w+b'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stderr'
op|','
name|'proc'
op|'.'
name|'stdout'
op|')'
newline|'\n'
comment|'# test not daemon over-rides wait'
nl|'\n'
name|'server'
op|'.'
name|'spawn'
op|'('
name|'conf4'
op|','
name|'wait'
op|'='
name|'False'
op|','
name|'daemon'
op|'='
name|'False'
op|','
name|'once'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'proc'
op|'='
name|'server'
op|'.'
name|'procs'
op|'['
number|'3'
op|']'
newline|'\n'
name|'expected_args'
op|'='
op|'['
string|"'swift-test-server'"
op|','
name|'conf4'
op|','
string|"'once'"
op|','
nl|'\n'
string|"'verbose'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'args'
op|','
name|'expected_args'
op|')'
newline|'\n'
comment|"# daemon behavior should trump wait, once shouldn't matter"
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stdout'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'proc'
op|'.'
name|'stderr'
op|','
name|'None'
op|')'
newline|'\n'
comment|'# assert pids'
nl|'\n'
name|'for'
name|'i'
op|','
name|'proc'
name|'in'
name|'enumerate'
op|'('
name|'server'
op|'.'
name|'procs'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'test-server/%d.pid'"
op|'%'
nl|'\n'
op|'('
name|'i'
op|'+'
number|'1'
op|')'
op|')'
newline|'\n'
name|'pid_on_disk'
op|'='
name|'int'
op|'('
name|'open'
op|'('
name|'pid_file'
op|')'
op|'.'
name|'read'
op|'('
op|')'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'pid_on_disk'
op|','
name|'proc'
op|'.'
name|'pid'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                    '
name|'manager'
op|'.'
name|'subprocess'
op|'='
name|'old_subprocess'
newline|'\n'
nl|'\n'
DECL|member|test_wait
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'wait'
op|'('
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|class|MockProcess
name|'class'
name|'MockProcess'
op|'('
name|'Thread'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'delay'
op|'='
number|'0.1'
op|','
name|'fail_to_start'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'Thread'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
comment|'# setup pipe'
nl|'\n'
name|'rfd'
op|','
name|'wfd'
op|'='
name|'os'
op|'.'
name|'pipe'
op|'('
op|')'
newline|'\n'
comment|'# subprocess connection to read stdout'
nl|'\n'
name|'self'
op|'.'
name|'stdout'
op|'='
name|'os'
op|'.'
name|'fdopen'
op|'('
name|'rfd'
op|')'
newline|'\n'
comment|'# real process connection to write stdout'
nl|'\n'
name|'self'
op|'.'
name|'_stdout'
op|'='
name|'os'
op|'.'
name|'fdopen'
op|'('
name|'wfd'
op|','
string|"'w'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'delay'
op|'='
name|'delay'
newline|'\n'
name|'self'
op|'.'
name|'finished'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'returncode'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'fail_to_start'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_returncode'
op|'='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'run'
op|'='
name|'self'
op|'.'
name|'fail'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_returncode'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|__enter__
dedent|''
dedent|''
name|'def'
name|'__enter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|__exit__
dedent|''
name|'def'
name|'__exit__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'isAlive'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|close_stdout
dedent|''
dedent|''
name|'def'
name|'close_stdout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_stdout'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'devnull'
op|','
string|"'wb'"
op|')'
name|'as'
name|'nullfile'
op|':'
newline|'\n'
indent|'                    '
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'os'
op|'.'
name|'dup2'
op|'('
name|'nullfile'
op|'.'
name|'fileno'
op|'('
op|')'
op|','
name|'self'
op|'.'
name|'_stdout'
op|'.'
name|'fileno'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'                        '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|fail
dedent|''
dedent|''
dedent|''
name|'def'
name|'fail'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'>>'
name|'self'
op|'.'
name|'_stdout'
op|','
string|"'mock process started'"
newline|'\n'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'delay'
op|')'
comment|'# perform setup processing'
newline|'\n'
name|'print'
op|'>>'
name|'self'
op|'.'
name|'_stdout'
op|','
string|"'mock process failed to start'"
newline|'\n'
name|'self'
op|'.'
name|'close_stdout'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|poll
dedent|''
name|'def'
name|'poll'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'returncode'
op|'='
name|'self'
op|'.'
name|'_returncode'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'returncode'
name|'or'
name|'None'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'print'
op|'>>'
name|'self'
op|'.'
name|'_stdout'
op|','
string|"'mock process started'"
newline|'\n'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'delay'
op|')'
comment|'# perform setup processing'
newline|'\n'
name|'print'
op|'>>'
name|'self'
op|'.'
name|'_stdout'
op|','
string|"'setup complete!'"
newline|'\n'
name|'self'
op|'.'
name|'close_stdout'
op|'('
op|')'
newline|'\n'
name|'sleep'
op|'('
name|'self'
op|'.'
name|'delay'
op|')'
comment|'# do some more processing'
newline|'\n'
name|'print'
op|'>>'
name|'self'
op|'.'
name|'_stdout'
op|','
string|"'mock process finished'"
newline|'\n'
name|'self'
op|'.'
name|'finished'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|class|MockTime
dedent|''
dedent|''
name|'class'
name|'MockTime'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|time
indent|'            '
name|'def'
name|'time'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'time'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|sleep
dedent|''
name|'def'
name|'sleep'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'with'
name|'temptree'
op|'('
op|'['
op|']'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
DECL|variable|old_stdout
indent|'            '
name|'old_stdout'
op|'='
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
DECL|variable|old_wait
name|'old_wait'
op|'='
name|'manager'
op|'.'
name|'WARNING_WAIT'
newline|'\n'
DECL|variable|old_time
name|'old_time'
op|'='
name|'manager'
op|'.'
name|'time'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'manager'
op|'.'
name|'WARNING_WAIT'
op|'='
number|'0.01'
newline|'\n'
name|'manager'
op|'.'
name|'time'
op|'='
name|'MockTime'
op|'('
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'output'"
op|')'
op|','
string|"'w+'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
comment|'# acctually capture the read stdout (for prints)'
nl|'\n'
indent|'                    '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'f'
newline|'\n'
comment|'# test closing pipe in subprocess unblocks read'
nl|'\n'
name|'with'
name|'MockProcess'
op|'('
op|')'
name|'as'
name|'proc'
op|':'
newline|'\n'
indent|'                        '
name|'server'
op|'.'
name|'procs'
op|'='
op|'['
name|'proc'
op|']'
newline|'\n'
name|'status'
op|'='
name|'server'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# wait should return before process exits'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'proc'
op|'.'
name|'isAlive'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'proc'
op|'.'
name|'finished'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'proc'
op|'.'
name|'finished'
op|')'
comment|'# make sure it did finish...'
newline|'\n'
comment|'# test output kwarg prints subprocess output'
nl|'\n'
name|'with'
name|'MockProcess'
op|'('
op|')'
name|'as'
name|'proc'
op|':'
newline|'\n'
indent|'                        '
name|'server'
op|'.'
name|'procs'
op|'='
op|'['
name|'proc'
op|']'
newline|'\n'
name|'status'
op|'='
name|'server'
op|'.'
name|'wait'
op|'('
name|'output'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'mock process started'"
name|'in'
name|'output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'setup complete'"
name|'in'
name|'output'
op|')'
newline|'\n'
comment|"# make sure we don't get prints after stdout was closed"
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'mock process finished'"
name|'not'
name|'in'
name|'output'
op|')'
newline|'\n'
comment|'# test process which fails to start'
nl|'\n'
name|'with'
name|'MockProcess'
op|'('
name|'fail_to_start'
op|'='
name|'True'
op|')'
name|'as'
name|'proc'
op|':'
newline|'\n'
indent|'                        '
name|'server'
op|'.'
name|'procs'
op|'='
op|'['
name|'proc'
op|']'
newline|'\n'
name|'status'
op|'='
name|'server'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'failed'"
name|'in'
name|'pop_stream'
op|'('
name|'f'
op|')'
op|')'
newline|'\n'
comment|'# test multiple procs'
nl|'\n'
name|'procs'
op|'='
op|'['
name|'MockProcess'
op|'('
name|'delay'
op|'='
number|'.5'
op|')'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|']'
newline|'\n'
name|'for'
name|'proc'
name|'in'
name|'procs'
op|':'
newline|'\n'
indent|'                        '
name|'proc'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
dedent|''
name|'server'
op|'.'
name|'procs'
op|'='
name|'procs'
newline|'\n'
name|'status'
op|'='
name|'server'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
name|'for'
name|'proc'
name|'in'
name|'procs'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'proc'
op|'.'
name|'isAlive'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'proc'
name|'in'
name|'procs'
op|':'
newline|'\n'
indent|'                        '
name|'proc'
op|'.'
name|'join'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'old_stdout'
newline|'\n'
name|'manager'
op|'.'
name|'WARNING_WAIT'
op|'='
name|'old_wait'
newline|'\n'
name|'manager'
op|'.'
name|'time'
op|'='
name|'old_time'
newline|'\n'
nl|'\n'
DECL|member|test_interact
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_interact'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockProcess
indent|'        '
name|'class'
name|'MockProcess'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'fail'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'returncode'
op|'='
name|'None'
newline|'\n'
name|'if'
name|'fail'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_returncode'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_returncode'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|communicate
dedent|''
dedent|''
name|'def'
name|'communicate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'returncode'
op|'='
name|'self'
op|'.'
name|'_returncode'
newline|'\n'
name|'return'
string|"''"
op|','
string|"''"
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'test'"
op|')'
newline|'\n'
name|'server'
op|'.'
name|'procs'
op|'='
op|'['
name|'MockProcess'
op|'('
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'interact'
op|'('
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'server'
op|'.'
name|'procs'
op|'='
op|'['
name|'MockProcess'
op|'('
name|'fail'
op|'='
name|'True'
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'interact'
op|'('
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'procs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'fail'
name|'in'
op|'('
name|'False'
op|','
name|'True'
op|','
name|'True'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'procs'
op|'.'
name|'append'
op|'('
name|'MockProcess'
op|'('
name|'fail'
op|'='
name|'fail'
op|')'
op|')'
newline|'\n'
dedent|''
name|'server'
op|'.'
name|'procs'
op|'='
name|'procs'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'interact'
op|'('
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_launch
dedent|''
name|'def'
name|'test_launch'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# stubs'
nl|'\n'
indent|'        '
name|'conf_files'
op|'='
op|'('
nl|'\n'
string|"'proxy-server.conf'"
op|','
nl|'\n'
string|"'auth-server.conf'"
op|','
nl|'\n'
string|"'object-server/1.conf'"
op|','
nl|'\n'
string|"'object-server/2.conf'"
op|','
nl|'\n'
string|"'object-server/3.conf'"
op|','
nl|'\n'
string|"'object-server/4.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'proxy-server.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'proxy-server/2.pid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
comment|'#mocks'
nl|'\n'
DECL|class|MockSpawn
name|'class'
name|'MockSpawn'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pids'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'conf_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'self'
op|'.'
name|'kwargs'
op|'='
op|'['
op|']'
newline|'\n'
name|'if'
name|'not'
name|'pids'
op|':'
newline|'\n'
DECL|function|one_forever
indent|'                    '
name|'def'
name|'one_forever'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                            '
name|'yield'
number|'1'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'pids'
op|'='
name|'one_forever'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'pids'
op|'='
op|'('
name|'x'
name|'for'
name|'x'
name|'in'
name|'pids'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'conf_file'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'conf_files'
op|'.'
name|'append'
op|'('
name|'conf_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'kwargs'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'rv'
op|'='
name|'self'
op|'.'
name|'pids'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'rv'
op|','
name|'Exception'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'rv'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'rv'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'with'
name|'temptree'
op|'('
name|'conf_files'
op|')'
name|'as'
name|'swift_dir'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'swift_dir'
newline|'\n'
name|'files'
op|','
name|'pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'                '
name|'manager'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
name|'old_stdout'
op|'='
name|'sys'
op|'.'
name|'stdout'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'t'
op|','
string|"'output'"
op|')'
op|','
string|"'w+'"
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'                        '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'f'
newline|'\n'
comment|"# can't start server w/o an conf"
nl|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'test'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'server'
op|'.'
name|'launch'
op|'('
op|')'
op|')'
newline|'\n'
comment|'# start mock os running all pids'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'pids'
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'proxy'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
comment|"# can't start server if it's already running"
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'server'
op|'.'
name|'launch'
op|'('
op|')'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'running'"
name|'in'
name|'output'
op|')'
newline|'\n'
name|'conf_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'conf_file'
name|'in'
name|'output'
op|')'
newline|'\n'
name|'pid_file'
op|'='
name|'self'
op|'.'
name|'join_run_dir'
op|'('
string|"'proxy-server/2.pid'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'pid_file'
name|'in'
name|'output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'already started'"
name|'in'
name|'output'
op|')'
newline|'\n'
comment|'# no running pids'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
op|']'
op|')'
newline|'\n'
comment|'# test ignore once for non-start-once server'
nl|'\n'
name|'mock_spawn'
op|'='
name|'MockSpawn'
op|'('
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'server'
op|'.'
name|'spawn'
op|'='
name|'mock_spawn'
newline|'\n'
name|'conf_file'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'proxy-server.conf'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
number|'1'
op|':'
name|'conf_file'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'launch'
op|'('
name|'once'
op|'='
name|'True'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_spawn'
op|'.'
name|'conf_files'
op|','
op|'['
name|'conf_file'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'once'"
op|':'
name|'False'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_spawn'
op|'.'
name|'kwargs'
op|','
op|'['
name|'expected'
op|']'
op|')'
newline|'\n'
name|'output'
op|'='
name|'pop_stream'
op|'('
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'Starting'"
name|'in'
name|'output'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'once'"
name|'not'
name|'in'
name|'output'
op|')'
newline|'\n'
comment|'# test multi-server kwarg once'
nl|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'object-replicator'"
op|')'
newline|'\n'
name|'mock_spawn'
op|'='
name|'MockSpawn'
op|'('
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'4'
op|']'
op|')'
newline|'\n'
name|'server'
op|'.'
name|'spawn'
op|'='
name|'mock_spawn'
newline|'\n'
name|'conf1'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/1.conf'"
op|')'
newline|'\n'
name|'conf2'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/2.conf'"
op|')'
newline|'\n'
name|'conf3'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/3.conf'"
op|')'
newline|'\n'
name|'conf4'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'object-server/4.conf'"
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
number|'1'
op|':'
name|'conf1'
op|','
nl|'\n'
number|'2'
op|':'
name|'conf2'
op|','
nl|'\n'
number|'3'
op|':'
name|'conf3'
op|','
nl|'\n'
number|'4'
op|':'
name|'conf4'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'launch'
op|'('
name|'once'
op|'='
name|'True'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_spawn'
op|'.'
name|'conf_files'
op|','
op|'['
nl|'\n'
name|'conf1'
op|','
name|'conf2'
op|','
name|'conf3'
op|','
name|'conf4'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'once'"
op|':'
name|'True'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'mock_spawn'
op|'.'
name|'kwargs'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'for'
name|'kwargs'
name|'in'
name|'mock_spawn'
op|'.'
name|'kwargs'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'kwargs'
op|','
name|'expected'
op|')'
newline|'\n'
comment|'# test number kwarg'
nl|'\n'
dedent|''
name|'mock_spawn'
op|'='
name|'MockSpawn'
op|'('
op|'['
number|'4'
op|']'
op|')'
newline|'\n'
name|'server'
op|'.'
name|'spawn'
op|'='
name|'mock_spawn'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
number|'4'
op|':'
name|'conf4'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'launch'
op|'('
name|'number'
op|'='
number|'4'
op|')'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_spawn'
op|'.'
name|'conf_files'
op|','
op|'['
name|'conf4'
op|']'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'number'"
op|':'
number|'4'
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_spawn'
op|'.'
name|'kwargs'
op|','
op|'['
name|'expected'
op|']'
op|')'
newline|'\n'
comment|'# test cmd does not exist'
nl|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'auth'"
op|')'
newline|'\n'
name|'mock_spawn'
op|'='
name|'MockSpawn'
op|'('
op|'['
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'ENOENT'
op|','
string|"'blah'"
op|')'
op|']'
op|')'
newline|'\n'
name|'server'
op|'.'
name|'spawn'
op|'='
name|'mock_spawn'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'launch'
op|'('
op|')'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'swift-auth-server does not exist'"
name|'in'
nl|'\n'
name|'pop_stream'
op|'('
name|'f'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                    '
name|'sys'
op|'.'
name|'stdout'
op|'='
name|'old_stdout'
newline|'\n'
nl|'\n'
DECL|member|test_stop
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'conf_files'
op|'='
op|'('
nl|'\n'
string|"'account-server/1.conf'"
op|','
nl|'\n'
string|"'account-server/2.conf'"
op|','
nl|'\n'
string|"'account-server/3.conf'"
op|','
nl|'\n'
string|"'account-server/4.conf'"
op|','
nl|'\n'
op|')'
newline|'\n'
name|'pid_files'
op|'='
op|'('
nl|'\n'
op|'('
string|"'account-reaper/1.pid'"
op|','
number|'1'
op|')'
op|','
nl|'\n'
op|'('
string|"'account-reaper/2.pid'"
op|','
number|'2'
op|')'
op|','
nl|'\n'
op|'('
string|"'account-reaper/3.pid'"
op|','
number|'3'
op|')'
op|','
nl|'\n'
op|'('
string|"'account-reaper/4.pid'"
op|','
number|'4'
op|')'
op|','
nl|'\n'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'temptree'
op|'('
name|'conf_files'
op|')'
name|'as'
name|'swift_dir'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'SWIFT_DIR'
op|'='
name|'swift_dir'
newline|'\n'
name|'files'
op|','
name|'pids'
op|'='
name|'zip'
op|'('
op|'*'
name|'pid_files'
op|')'
newline|'\n'
name|'with'
name|'temptree'
op|'('
name|'files'
op|','
name|'pids'
op|')'
name|'as'
name|'t'
op|':'
newline|'\n'
indent|'                '
name|'manager'
op|'.'
name|'RUN_DIR'
op|'='
name|'t'
newline|'\n'
comment|'# start all pids in mock os'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
name|'pids'
op|')'
newline|'\n'
name|'server'
op|'='
name|'manager'
op|'.'
name|'Server'
op|'('
string|"'account-reaper'"
op|','
name|'run_dir'
op|'='
name|'t'
op|')'
newline|'\n'
comment|'# test kill all running pids'
nl|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'for'
name|'pid'
name|'in'
op|'('
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'4'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'pid'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'manager'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
name|'pid'
op|']'
op|','
nl|'\n'
op|'['
name|'signal'
op|'.'
name|'SIGTERM'
op|']'
op|')'
newline|'\n'
dedent|''
name|'conf1'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'account-reaper/1.conf'"
op|')'
newline|'\n'
name|'conf2'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'account-reaper/2.conf'"
op|')'
newline|'\n'
name|'conf3'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'account-reaper/3.conf'"
op|')'
newline|'\n'
name|'conf4'
op|'='
name|'self'
op|'.'
name|'join_swift_dir'
op|'('
string|"'account-reaper/4.conf'"
op|')'
newline|'\n'
comment|'# reset mock os with only 2 running pids'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'3'
op|','
number|'4'
op|']'
op|')'
newline|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'pid'
name|'in'
op|'('
number|'3'
op|','
number|'4'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'pid'
name|'in'
name|'pids'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'manager'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
name|'pid'
op|']'
op|','
nl|'\n'
op|'['
name|'signal'
op|'.'
name|'SIGTERM'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'conf1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'conf2'
op|')'
op|')'
newline|'\n'
comment|'# test number kwarg'
nl|'\n'
name|'manager'
op|'.'
name|'os'
op|'='
name|'MockOs'
op|'('
op|'['
number|'3'
op|','
number|'4'
op|']'
op|')'
newline|'\n'
name|'pids'
op|'='
name|'server'
op|'.'
name|'stop'
op|'('
name|'number'
op|'='
number|'3'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'pids'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'expected'
op|'='
op|'{'
nl|'\n'
number|'3'
op|':'
name|'conf3'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'pids'
op|','
name|'expected'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'manager'
op|'.'
name|'os'
op|'.'
name|'pid_sigs'
op|'['
number|'3'
op|']'
op|','
op|'['
name|'signal'
op|'.'
name|'SIGTERM'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'conf4'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'conf3'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestManager
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestManager'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_create
indent|'    '
name|'def'
name|'test_create'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'m'
op|'.'
name|'servers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'server'
op|'='
name|'m'
op|'.'
name|'servers'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'isinstance'
op|'('
name|'server'
op|','
name|'manager'
op|'.'
name|'Server'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'server'
op|','
string|"'test-server'"
op|')'
newline|'\n'
comment|'# test multi-server and simple dedupe'
nl|'\n'
name|'servers'
op|'='
op|'['
string|"'object-replicator'"
op|','
string|"'object-auditor'"
op|','
string|"'object-replicator'"
op|']'
newline|'\n'
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
name|'servers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'m'
op|'.'
name|'servers'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'m'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'server'
name|'in'
name|'servers'
op|')'
newline|'\n'
comment|'# test all'
nl|'\n'
dedent|''
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'all'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'m'
op|'.'
name|'servers'
op|')'
op|','
name|'len'
op|'('
name|'manager'
op|'.'
name|'ALL_SERVERS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'m'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'server'
name|'in'
name|'manager'
op|'.'
name|'ALL_SERVERS'
op|')'
newline|'\n'
comment|'# test main'
nl|'\n'
dedent|''
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'main'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'m'
op|'.'
name|'servers'
op|')'
op|','
name|'len'
op|'('
name|'manager'
op|'.'
name|'MAIN_SERVERS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'m'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'server'
name|'in'
name|'manager'
op|'.'
name|'MAIN_SERVERS'
op|')'
newline|'\n'
comment|'# test rest'
nl|'\n'
dedent|''
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'rest'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'m'
op|'.'
name|'servers'
op|')'
op|','
name|'len'
op|'('
name|'manager'
op|'.'
name|'REST_SERVERS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'m'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'server'
name|'in'
name|'manager'
op|'.'
name|'REST_SERVERS'
op|')'
newline|'\n'
comment|'# test main + rest == all'
nl|'\n'
dedent|''
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'main'"
op|','
string|"'rest'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'m'
op|'.'
name|'servers'
op|')'
op|','
name|'len'
op|'('
name|'manager'
op|'.'
name|'ALL_SERVERS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'m'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'server'
name|'in'
name|'manager'
op|'.'
name|'ALL_SERVERS'
op|')'
newline|'\n'
comment|'# test dedupe'
nl|'\n'
dedent|''
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'main'"
op|','
string|"'rest'"
op|','
string|"'proxy'"
op|','
string|"'object'"
op|','
nl|'\n'
string|"'container'"
op|','
string|"'account'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'m'
op|'.'
name|'servers'
op|')'
op|','
name|'len'
op|'('
name|'manager'
op|'.'
name|'ALL_SERVERS'
op|')'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'m'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'server'
name|'in'
name|'manager'
op|'.'
name|'ALL_SERVERS'
op|')'
newline|'\n'
comment|'# test glob'
nl|'\n'
dedent|''
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'object-*'"
op|']'
op|')'
newline|'\n'
name|'object_servers'
op|'='
op|'['
name|'s'
name|'for'
name|'s'
name|'in'
name|'manager'
op|'.'
name|'ALL_SERVERS'
name|'if'
nl|'\n'
name|'s'
op|'.'
name|'startswith'
op|'('
string|"'object'"
op|')'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'m'
op|'.'
name|'servers'
op|')'
op|','
name|'len'
op|'('
name|'object_servers'
op|')'
op|')'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'m'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'str'
op|'('
name|'s'
op|')'
name|'in'
name|'object_servers'
op|')'
newline|'\n'
dedent|''
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'*-replicator'"
op|']'
op|')'
newline|'\n'
name|'replicators'
op|'='
op|'['
name|'s'
name|'for'
name|'s'
name|'in'
name|'manager'
op|'.'
name|'ALL_SERVERS'
name|'if'
nl|'\n'
name|'s'
op|'.'
name|'endswith'
op|'('
string|"'replicator'"
op|')'
op|']'
newline|'\n'
name|'for'
name|'s'
name|'in'
name|'m'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'str'
op|'('
name|'s'
op|')'
name|'in'
name|'replicators'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_status
dedent|''
dedent|''
name|'def'
name|'test_status'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockServer
indent|'        '
name|'class'
name|'MockServer'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'server'
op|','
name|'run_dir'
op|'='
name|'manager'
op|'.'
name|'RUN_DIR'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'server'
op|'='
name|'server'
newline|'\n'
name|'self'
op|'.'
name|'called_kwargs'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|status
dedent|''
name|'def'
name|'status'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'called_kwargs'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'if'
string|"'error'"
name|'in'
name|'self'
op|'.'
name|'server'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'old_server_class'
op|'='
name|'manager'
op|'.'
name|'Server'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'Server'
op|'='
name|'MockServer'
newline|'\n'
DECL|variable|m
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'m'
op|'.'
name|'status'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
DECL|variable|m
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'error'"
op|']'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'m'
op|'.'
name|'status'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'1'
op|')'
newline|'\n'
comment|'# test multi-server'
nl|'\n'
DECL|variable|m
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'test'"
op|','
string|"'error'"
op|']'
op|')'
newline|'\n'
DECL|variable|kwargs
name|'kwargs'
op|'='
op|'{'
string|"'key'"
op|':'
string|"'value'"
op|'}'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'m'
op|'.'
name|'status'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'m'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'called_kwargs'
op|','
op|'['
name|'kwargs'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'Server'
op|'='
name|'old_server_class'
newline|'\n'
nl|'\n'
DECL|member|test_start
dedent|''
dedent|''
name|'def'
name|'test_start'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|mock_setup_env
indent|'        '
name|'def'
name|'mock_setup_env'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'getattr'
op|'('
name|'mock_setup_env'
op|','
string|"'called'"
op|','
op|'['
op|']'
op|')'
op|'.'
name|'append'
op|'('
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|class|MockServer
dedent|''
name|'class'
name|'MockServer'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'server'
op|','
name|'run_dir'
op|'='
name|'manager'
op|'.'
name|'RUN_DIR'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'server'
op|'='
name|'server'
newline|'\n'
name|'self'
op|'.'
name|'called'
op|'='
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|launch
dedent|''
name|'def'
name|'launch'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|wait
dedent|''
name|'def'
name|'wait'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'called'
op|'['
string|"'wait'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'int'
op|'('
string|"'error'"
name|'in'
name|'self'
op|'.'
name|'server'
op|')'
newline|'\n'
nl|'\n'
DECL|member|stop
dedent|''
name|'def'
name|'stop'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'called'
op|'['
string|"'stop'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|interact
dedent|''
name|'def'
name|'interact'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'called'
op|'['
string|"'interact'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'if'
string|"'raise'"
name|'in'
name|'self'
op|'.'
name|'server'
op|':'
newline|'\n'
indent|'                    '
name|'raise'
name|'KeyboardInterrupt'
newline|'\n'
dedent|''
name|'elif'
string|"'error'"
name|'in'
name|'self'
op|'.'
name|'server'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'old_setup_env'
op|'='
name|'manager'
op|'.'
name|'setup_env'
newline|'\n'
name|'old_swift_server'
op|'='
name|'manager'
op|'.'
name|'Server'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'setup_env'
op|'='
name|'mock_setup_env'
newline|'\n'
name|'manager'
op|'.'
name|'Server'
op|'='
name|'MockServer'
newline|'\n'
nl|'\n'
comment|'# test no errors on launch'
nl|'\n'
DECL|variable|m
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'proxy'"
op|']'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'m'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'m'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|','
op|'['
op|'{'
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# test error on launch'
nl|'\n'
DECL|variable|m
dedent|''
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'proxy'"
op|','
string|"'error'"
op|']'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'m'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'m'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|','
op|'['
op|'{'
op|'}'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'wait'"
op|']'
op|','
op|'['
op|'{'
op|'}'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# test interact'
nl|'\n'
DECL|variable|m
dedent|''
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'proxy'"
op|','
string|"'error'"
op|']'
op|')'
newline|'\n'
DECL|variable|kwargs
name|'kwargs'
op|'='
op|'{'
string|"'daemon'"
op|':'
name|'False'
op|'}'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'m'
op|'.'
name|'start'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'m'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|','
op|'['
name|'kwargs'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'interact'"
op|']'
op|','
op|'['
name|'kwargs'
op|']'
op|')'
newline|'\n'
DECL|variable|m
dedent|''
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'raise'"
op|']'
op|')'
newline|'\n'
DECL|variable|kwargs
name|'kwargs'
op|'='
op|'{'
string|"'daemon'"
op|':'
name|'False'
op|'}'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'m'
op|'.'
name|'start'
op|'('
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'setup_env'
op|'='
name|'old_setup_env'
newline|'\n'
name|'manager'
op|'.'
name|'Server'
op|'='
name|'old_swift_server'
newline|'\n'
nl|'\n'
DECL|member|test_no_wait
dedent|''
dedent|''
name|'def'
name|'test_no_wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockServer
indent|'        '
name|'class'
name|'MockServer'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'server'
op|','
name|'run_dir'
op|'='
name|'manager'
op|'.'
name|'RUN_DIR'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'server'
op|'='
name|'server'
newline|'\n'
name|'self'
op|'.'
name|'called'
op|'='
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|launch
dedent|''
name|'def'
name|'launch'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|wait
dedent|''
name|'def'
name|'wait'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'called'
op|'['
string|"'wait'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'int'
op|'('
string|"'error'"
name|'in'
name|'self'
op|'.'
name|'server'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'orig_swift_server'
op|'='
name|'manager'
op|'.'
name|'Server'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'Server'
op|'='
name|'MockServer'
newline|'\n'
comment|'# test success'
nl|'\n'
DECL|variable|init
name|'init'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'proxy'"
op|']'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'init'
op|'.'
name|'no_wait'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'init'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'called_kwargs'
op|'='
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'called_kwargs'
op|'['
string|"'wait'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'wait'"
op|']'
op|')'
newline|'\n'
comment|'# test no errocode status even on error'
nl|'\n'
DECL|variable|init
dedent|''
name|'init'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'error'"
op|']'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'init'
op|'.'
name|'no_wait'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'init'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'called_kwargs'
op|'='
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'wait'"
name|'in'
name|'called_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'called_kwargs'
op|'['
string|"'wait'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'wait'"
op|']'
op|')'
newline|'\n'
comment|'# test wait with once option'
nl|'\n'
DECL|variable|init
dedent|''
name|'init'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'updater'"
op|','
string|"'replicator-error'"
op|']'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'init'
op|'.'
name|'no_wait'
op|'('
name|'once'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'init'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'called_kwargs'
op|'='
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'wait'"
name|'in'
name|'called_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'called_kwargs'
op|'['
string|"'wait'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'once'"
name|'in'
name|'called_kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'called_kwargs'
op|'['
string|"'once'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'wait'"
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'Server'
op|'='
name|'orig_swift_server'
newline|'\n'
nl|'\n'
DECL|member|test_no_daemon
dedent|''
dedent|''
name|'def'
name|'test_no_daemon'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockServer
indent|'        '
name|'class'
name|'MockServer'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'server'
op|','
name|'run_dir'
op|'='
name|'manager'
op|'.'
name|'RUN_DIR'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'server'
op|'='
name|'server'
newline|'\n'
name|'self'
op|'.'
name|'called'
op|'='
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|launch
dedent|''
name|'def'
name|'launch'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|interact
dedent|''
name|'def'
name|'interact'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'called'
op|'['
string|"'interact'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'return'
name|'int'
op|'('
string|"'error'"
name|'in'
name|'self'
op|'.'
name|'server'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'orig_swift_server'
op|'='
name|'manager'
op|'.'
name|'Server'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'Server'
op|'='
name|'MockServer'
newline|'\n'
comment|'# test success'
nl|'\n'
DECL|variable|init
name|'init'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'proxy'"
op|']'
op|')'
newline|'\n'
DECL|variable|stats
name|'stats'
op|'='
name|'init'
op|'.'
name|'no_daemon'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'stats'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# test error'
nl|'\n'
DECL|variable|init
name|'init'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'proxy'"
op|','
string|"'object-error'"
op|']'
op|')'
newline|'\n'
DECL|variable|stats
name|'stats'
op|'='
name|'init'
op|'.'
name|'no_daemon'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'stats'
op|','
number|'1'
op|')'
newline|'\n'
comment|'# test once'
nl|'\n'
DECL|variable|init
name|'init'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'proxy'"
op|','
string|"'object-error'"
op|']'
op|')'
newline|'\n'
DECL|variable|stats
name|'stats'
op|'='
name|'init'
op|'.'
name|'no_daemon'
op|'('
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'init'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'wait'"
op|']'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'interact'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'Server'
op|'='
name|'orig_swift_server'
newline|'\n'
nl|'\n'
DECL|member|test_once
dedent|''
dedent|''
name|'def'
name|'test_once'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockServer
indent|'        '
name|'class'
name|'MockServer'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'            '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'server'
op|','
name|'run_dir'
op|'='
name|'manager'
op|'.'
name|'RUN_DIR'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'server'
op|'='
name|'server'
newline|'\n'
name|'self'
op|'.'
name|'called'
op|'='
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|wait
dedent|''
name|'def'
name|'wait'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'called'
op|'['
string|"'wait'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'if'
string|"'error'"
name|'in'
name|'self'
op|'.'
name|'server'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|launch
dedent|''
dedent|''
name|'def'
name|'launch'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'self'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'orig_swift_server'
op|'='
name|'manager'
op|'.'
name|'Server'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'Server'
op|'='
name|'MockServer'
newline|'\n'
comment|'# test no errors'
nl|'\n'
DECL|variable|init
name|'init'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'account-reaper'"
op|']'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'init'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# test error code on error'
nl|'\n'
DECL|variable|init
name|'init'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'error-reaper'"
op|']'
op|')'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'init'
op|'.'
name|'once'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'1'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'init'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'called_kwargs'
op|'='
name|'server'
op|'.'
name|'called'
op|'['
string|"'launch'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'called_kwargs'
op|','
op|'{'
string|"'once'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'wait'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'server'
op|'.'
name|'called'
op|'['
string|"'interact'"
op|']'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'Server'
op|'='
name|'orig_swift_server'
newline|'\n'
nl|'\n'
DECL|member|test_stop
dedent|''
dedent|''
name|'def'
name|'test_stop'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockServerFactory
indent|'        '
name|'class'
name|'MockServerFactory'
op|'('
op|')'
op|':'
newline|'\n'
DECL|class|MockServer
indent|'            '
name|'class'
name|'MockServer'
op|'('
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'                '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'pids'
op|','
name|'run_dir'
op|'='
name|'manager'
op|'.'
name|'RUN_DIR'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'pids'
op|'='
name|'pids'
newline|'\n'
nl|'\n'
DECL|member|stop
dedent|''
name|'def'
name|'stop'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'self'
op|'.'
name|'pids'
newline|'\n'
nl|'\n'
DECL|member|__init__
dedent|''
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'server_pids'
op|','
name|'run_dir'
op|'='
name|'manager'
op|'.'
name|'RUN_DIR'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'server_pids'
op|'='
name|'server_pids'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'server'
op|','
name|'run_dir'
op|'='
name|'manager'
op|'.'
name|'RUN_DIR'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'MockServerFactory'
op|'.'
name|'MockServer'
op|'('
name|'self'
op|'.'
name|'server_pids'
op|'['
name|'server'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|mock_watch_server_pids
dedent|''
dedent|''
name|'def'
name|'mock_watch_server_pids'
op|'('
name|'server_pids'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'server'
op|','
name|'pids'
name|'in'
name|'server_pids'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'pid'
name|'in'
name|'pids'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'pid'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                        '
name|'continue'
newline|'\n'
dedent|''
name|'yield'
name|'server'
op|','
name|'pid'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'_orig_server'
op|'='
name|'manager'
op|'.'
name|'Server'
newline|'\n'
name|'_orig_watch_server_pids'
op|'='
name|'manager'
op|'.'
name|'watch_server_pids'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'watch_server_pids'
op|'='
name|'mock_watch_server_pids'
newline|'\n'
comment|'# test stop one server'
nl|'\n'
name|'server_pids'
op|'='
op|'{'
nl|'\n'
string|"'test'"
op|':'
op|'['
number|'1'
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'manager'
op|'.'
name|'Server'
op|'='
name|'MockServerFactory'
op|'('
name|'server_pids'
op|')'
newline|'\n'
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
name|'status'
op|'='
name|'m'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
comment|'# test not running'
nl|'\n'
name|'server_pids'
op|'='
op|'{'
nl|'\n'
string|"'test'"
op|':'
op|'['
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'manager'
op|'.'
name|'Server'
op|'='
name|'MockServerFactory'
op|'('
name|'server_pids'
op|')'
newline|'\n'
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
name|'status'
op|'='
name|'m'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'1'
op|')'
newline|'\n'
comment|"# test won't die"
nl|'\n'
name|'server_pids'
op|'='
op|'{'
nl|'\n'
string|"'test'"
op|':'
op|'['
name|'None'
op|']'
nl|'\n'
op|'}'
newline|'\n'
name|'manager'
op|'.'
name|'Server'
op|'='
name|'MockServerFactory'
op|'('
name|'server_pids'
op|')'
newline|'\n'
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
name|'status'
op|'='
name|'m'
op|'.'
name|'stop'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'Server'
op|'='
name|'_orig_server'
newline|'\n'
name|'manager'
op|'.'
name|'watch_server_pids'
op|'='
name|'_orig_watch_server_pids'
newline|'\n'
nl|'\n'
comment|'# TODO(clayg): more tests'
nl|'\n'
DECL|member|test_shutdown
dedent|''
dedent|''
name|'def'
name|'test_shutdown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'stop_was_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|mock_stop
name|'def'
name|'mock_stop'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'.'
name|'stop_was_called'
op|'='
name|'True'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'graceful'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'kwargs'
op|','
name|'expected'
op|')'
newline|'\n'
name|'return'
number|'0'
newline|'\n'
dedent|''
name|'m'
op|'.'
name|'stop'
op|'='
name|'mock_stop'
newline|'\n'
name|'status'
op|'='
name|'m'
op|'.'
name|'shutdown'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'stop_was_called'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_restart
dedent|''
name|'def'
name|'test_restart'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'stop_was_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|mock_stop
name|'def'
name|'mock_stop'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'.'
name|'stop_was_called'
op|'='
name|'True'
newline|'\n'
name|'return'
number|'0'
newline|'\n'
dedent|''
name|'m'
op|'.'
name|'start_was_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|mock_start
name|'def'
name|'mock_start'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'.'
name|'start_was_called'
op|'='
name|'True'
newline|'\n'
name|'return'
number|'0'
newline|'\n'
dedent|''
name|'m'
op|'.'
name|'stop'
op|'='
name|'mock_stop'
newline|'\n'
name|'m'
op|'.'
name|'start'
op|'='
name|'mock_start'
newline|'\n'
name|'status'
op|'='
name|'m'
op|'.'
name|'restart'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'stop_was_called'
op|','
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'start_was_called'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_reload
dedent|''
name|'def'
name|'test_reload'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|class|MockManager
indent|'        '
name|'class'
name|'MockManager'
op|'('
op|')'
op|':'
newline|'\n'
DECL|variable|called
indent|'            '
name|'called'
op|'='
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'servers'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|reset_called
name|'def'
name|'reset_called'
op|'('
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'cls'
op|'.'
name|'called'
op|'='
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
nl|'\n'
DECL|member|stop
dedent|''
name|'def'
name|'stop'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'MockManager'
op|'.'
name|'called'
op|'['
string|"'stop'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'return'
number|'0'
newline|'\n'
nl|'\n'
DECL|member|start
dedent|''
name|'def'
name|'start'
op|'('
name|'self'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'MockManager'
op|'.'
name|'called'
op|'['
string|"'start'"
op|']'
op|'.'
name|'append'
op|'('
name|'kwargs'
op|')'
newline|'\n'
name|'return'
number|'0'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'_orig_manager'
op|'='
name|'manager'
op|'.'
name|'Manager'
newline|'\n'
name|'try'
op|':'
newline|'\n'
DECL|variable|m
indent|'            '
name|'m'
op|'='
name|'_orig_manager'
op|'('
op|'['
string|"'auth'"
op|']'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'m'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'server'
name|'in'
nl|'\n'
name|'manager'
op|'.'
name|'GRACEFUL_SHUTDOWN_SERVERS'
op|')'
newline|'\n'
dedent|''
name|'manager'
op|'.'
name|'Manager'
op|'='
name|'MockManager'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'m'
op|'.'
name|'reload'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
DECL|variable|expected
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'start'"
op|':'
op|'['
op|'{'
string|"'graceful'"
op|':'
name|'True'
op|'}'
op|']'
op|','
nl|'\n'
string|"'stop'"
op|':'
op|'['
op|'{'
string|"'graceful'"
op|':'
name|'True'
op|'}'
op|']'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'MockManager'
op|'.'
name|'called'
op|','
name|'expected'
op|')'
newline|'\n'
comment|'# test force graceful'
nl|'\n'
name|'MockManager'
op|'.'
name|'reset_called'
op|'('
op|')'
newline|'\n'
DECL|variable|m
name|'m'
op|'='
name|'_orig_manager'
op|'('
op|'['
string|"'*-server'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'m'
op|'.'
name|'servers'
op|')'
op|','
number|'4'
op|')'
newline|'\n'
name|'for'
name|'server'
name|'in'
name|'m'
op|'.'
name|'servers'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'server'
op|'.'
name|'server'
name|'in'
nl|'\n'
name|'manager'
op|'.'
name|'GRACEFUL_SHUTDOWN_SERVERS'
op|')'
newline|'\n'
dedent|''
name|'manager'
op|'.'
name|'Manager'
op|'='
name|'MockManager'
newline|'\n'
DECL|variable|status
name|'status'
op|'='
name|'m'
op|'.'
name|'reload'
op|'('
name|'graceful'
op|'='
name|'False'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
DECL|variable|expected
name|'expected'
op|'='
op|'{'
nl|'\n'
string|"'start'"
op|':'
op|'['
op|'{'
string|"'graceful'"
op|':'
name|'True'
op|'}'
op|']'
op|'*'
number|'4'
op|','
nl|'\n'
string|"'stop'"
op|':'
op|'['
op|'{'
string|"'graceful'"
op|':'
name|'True'
op|'}'
op|']'
op|'*'
number|'4'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'MockManager'
op|'.'
name|'called'
op|','
name|'expected'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'manager'
op|'.'
name|'Manager'
op|'='
name|'_orig_manager'
newline|'\n'
nl|'\n'
DECL|member|test_force_reload
dedent|''
dedent|''
name|'def'
name|'test_force_reload'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'reload_was_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|mock_reload
name|'def'
name|'mock_reload'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'.'
name|'reload_was_called'
op|'='
name|'True'
newline|'\n'
name|'return'
number|'0'
newline|'\n'
dedent|''
name|'m'
op|'.'
name|'reload'
op|'='
name|'mock_reload'
newline|'\n'
name|'status'
op|'='
name|'m'
op|'.'
name|'force_reload'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'reload_was_called'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_command
dedent|''
name|'def'
name|'test_get_command'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'start'
op|','
name|'m'
op|'.'
name|'get_command'
op|'('
string|"'start'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'force_reload'
op|','
name|'m'
op|'.'
name|'get_command'
op|'('
string|"'force-reload'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'get_command'
op|'('
string|"'force-reload'"
op|')'
op|','
nl|'\n'
name|'m'
op|'.'
name|'get_command'
op|'('
string|"'force_reload'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'manager'
op|'.'
name|'UnknownCommandError'
op|','
name|'m'
op|'.'
name|'get_command'
op|','
nl|'\n'
string|"'no_command'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'manager'
op|'.'
name|'UnknownCommandError'
op|','
name|'m'
op|'.'
name|'get_command'
op|','
nl|'\n'
string|"'__init__'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_list_commands
dedent|''
name|'def'
name|'test_list_commands'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'cmd'
op|','
name|'help'
name|'in'
name|'manager'
op|'.'
name|'Manager'
op|'.'
name|'list_commands'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'method'
op|'='
name|'getattr'
op|'('
name|'manager'
op|'.'
name|'Manager'
op|','
name|'cmd'
op|'.'
name|'replace'
op|'('
string|"'-'"
op|','
string|"'_'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'method'
op|','
string|"'%s is not a command'"
op|'%'
name|'cmd'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'getattr'
op|'('
name|'method'
op|','
string|"'publicly_accessible'"
op|','
name|'False'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'method'
op|'.'
name|'__doc__'
op|'.'
name|'strip'
op|'('
op|')'
op|','
name|'help'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_command
dedent|''
dedent|''
name|'def'
name|'test_run_command'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'m'
op|'='
name|'manager'
op|'.'
name|'Manager'
op|'('
op|'['
string|"'test'"
op|']'
op|')'
newline|'\n'
name|'m'
op|'.'
name|'cmd_was_called'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|function|mock_cmd
name|'def'
name|'mock_cmd'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'m'
op|'.'
name|'cmd_was_called'
op|'='
name|'True'
newline|'\n'
name|'expected'
op|'='
op|'{'
string|"'kw1'"
op|':'
name|'True'
op|','
string|"'kw2'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'kwargs'
op|','
name|'expected'
op|')'
newline|'\n'
name|'return'
number|'0'
newline|'\n'
dedent|''
name|'mock_cmd'
op|'.'
name|'publicly_accessible'
op|'='
name|'True'
newline|'\n'
name|'m'
op|'.'
name|'mock_cmd'
op|'='
name|'mock_cmd'
newline|'\n'
name|'kwargs'
op|'='
op|'{'
string|"'kw1'"
op|':'
name|'True'
op|','
string|"'kw2'"
op|':'
name|'False'
op|'}'
newline|'\n'
name|'status'
op|'='
name|'m'
op|'.'
name|'run_command'
op|'('
string|"'mock_cmd'"
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'status'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'m'
op|'.'
name|'cmd_was_called'
op|','
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
