begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
string|'"""\nThe ``gatekeeper`` middleware imposes restrictions on the headers that\nmay be included with requests and responses. Request headers are filtered\nto remove headers that should never be generated by a client. Similarly,\nresponse headers are filtered to remove private headers that should\nnever be passed to a client.\n\nThe ``gatekeeper`` middleware must always be present in the proxy server\nwsgi pipeline. It should be configured close to the start of the pipeline\nspecified in ``/etc/swift/proxy-server.conf``, immediately after catch_errors\nand before any other middleware. It is essential that it is configured ahead\nof all middlewares using system metadata in order that they function\ncorrectly.\n\nIf ``gatekeeper`` middleware is not configured in the pipeline then it will be\nautomatically inserted close to the start of the pipeline by the proxy server.\n"""'
newline|'\n'
nl|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'wsgify'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'get_logger'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'request_helpers'
name|'import'
name|'remove_items'
op|','
name|'get_sys_meta_prefix'
newline|'\n'
name|'import'
name|'re'
newline|'\n'
nl|'\n'
string|'"""\nA list of python regular expressions that will be used to\nmatch against inbound request headers. Matching headers will\nbe removed from the request.\n"""'
newline|'\n'
comment|'# Exclude headers starting with a sysmeta prefix.'
nl|'\n'
comment|'# If adding to this list, note that these are regex patterns,'
nl|'\n'
comment|'# so use a trailing $ to constrain to an exact header match'
nl|'\n'
comment|'# rather than prefix match.'
nl|'\n'
DECL|variable|inbound_exclusions
name|'inbound_exclusions'
op|'='
op|'['
name|'get_sys_meta_prefix'
op|'('
string|"'account'"
op|')'
op|','
nl|'\n'
name|'get_sys_meta_prefix'
op|'('
string|"'container'"
op|')'
op|','
nl|'\n'
name|'get_sys_meta_prefix'
op|'('
string|"'object'"
op|')'
op|']'
newline|'\n'
comment|"# 'x-object-sysmeta' is reserved in anticipation of future support"
nl|'\n'
comment|'# for system metadata being applied to objects'
nl|'\n'
nl|'\n'
nl|'\n'
string|'"""\nA list of python regular expressions that will be used to\nmatch against outbound response headers. Matching headers will\nbe removed from the response.\n"""'
newline|'\n'
DECL|variable|outbound_exclusions
name|'outbound_exclusions'
op|'='
name|'inbound_exclusions'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|make_exclusion_test
name|'def'
name|'make_exclusion_test'
op|'('
name|'exclusions'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'expr'
op|'='
string|"'|'"
op|'.'
name|'join'
op|'('
name|'exclusions'
op|')'
newline|'\n'
name|'test'
op|'='
name|'re'
op|'.'
name|'compile'
op|'('
name|'expr'
op|','
name|'re'
op|'.'
name|'IGNORECASE'
op|')'
newline|'\n'
name|'return'
name|'test'
op|'.'
name|'match'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|GatekeeperMiddleware
dedent|''
name|'class'
name|'GatekeeperMiddleware'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'app'
op|','
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'app'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'get_logger'
op|'('
name|'conf'
op|','
name|'log_route'
op|'='
string|"'gatekeeper'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'inbound_condition'
op|'='
name|'make_exclusion_test'
op|'('
name|'inbound_exclusions'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'outbound_condition'
op|'='
name|'make_exclusion_test'
op|'('
name|'outbound_exclusions'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'wsgify'
newline|'\n'
DECL|member|__call__
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'req'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'removed'
op|'='
name|'remove_items'
op|'('
name|'req'
op|'.'
name|'headers'
op|','
name|'self'
op|'.'
name|'inbound_condition'
op|')'
newline|'\n'
name|'if'
name|'removed'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'removed request headers: %s'"
op|'%'
name|'removed'
op|')'
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'req'
op|'.'
name|'get_response'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
name|'removed'
op|'='
name|'remove_items'
op|'('
name|'resp'
op|'.'
name|'headers'
op|','
name|'self'
op|'.'
name|'outbound_condition'
op|')'
newline|'\n'
name|'if'
name|'removed'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'removed response headers: %s'"
op|'%'
name|'removed'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|filter_factory
dedent|''
dedent|''
name|'def'
name|'filter_factory'
op|'('
name|'global_conf'
op|','
op|'**'
name|'local_conf'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'conf'
op|'='
name|'global_conf'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'update'
op|'('
name|'local_conf'
op|')'
newline|'\n'
nl|'\n'
DECL|function|gatekeeper_filter
name|'def'
name|'gatekeeper_filter'
op|'('
name|'app'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'GatekeeperMiddleware'
op|'('
name|'app'
op|','
name|'conf'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'gatekeeper_filter'
newline|'\n'
dedent|''
endmarker|''
end_unit
