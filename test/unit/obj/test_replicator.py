begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'from'
name|'__future__'
name|'import'
name|'with_statement'
newline|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'from'
name|'gzip'
name|'import'
name|'GzipFile'
newline|'\n'
name|'from'
name|'shutil'
name|'import'
name|'rmtree'
newline|'\n'
name|'import'
name|'cPickle'
name|'as'
name|'pickle'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'contextmanager'
op|','
name|'closing'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'green'
name|'import'
name|'subprocess'
newline|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'Timeout'
op|','
name|'tpool'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'FakeLogger'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'mkdirs'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'ondisk'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ondisk'
name|'import'
name|'hash_path'
op|','
name|'normalize_timestamp'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'ring'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'diskfile'
op|','
name|'replicator'
name|'as'
name|'object_replicator'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_ips
name|'def'
name|'_ips'
op|'('
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
op|'['
string|"'127.0.0.0'"
op|']'
newline|'\n'
dedent|''
name|'object_replicator'
op|'.'
name|'whataremyips'
op|'='
name|'_ips'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|mock_http_connect
name|'def'
name|'mock_http_connect'
op|'('
name|'status'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|class|FakeConn
indent|'    '
name|'class'
name|'FakeConn'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'        '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'status'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'status'
op|'='
name|'status'
newline|'\n'
name|'self'
op|'.'
name|'reason'
op|'='
string|"'Fake'"
newline|'\n'
name|'self'
op|'.'
name|'host'
op|'='
name|'args'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'port'
op|'='
name|'args'
op|'['
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'method'
op|'='
name|'args'
op|'['
number|'4'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'path'
op|'='
name|'args'
op|'['
number|'5'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'with_exc'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'headers'
op|'='
name|'kwargs'
op|'.'
name|'get'
op|'('
string|"'headers'"
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|getresponse
dedent|''
name|'def'
name|'getresponse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'with_exc'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'test'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
newline|'\n'
nl|'\n'
DECL|member|getheader
dedent|''
name|'def'
name|'getheader'
op|'('
name|'self'
op|','
name|'header'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'self'
op|'.'
name|'headers'
op|'['
name|'header'
op|']'
newline|'\n'
nl|'\n'
DECL|member|read
dedent|''
name|'def'
name|'read'
op|'('
name|'self'
op|','
name|'amt'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'pickle'
op|'.'
name|'dumps'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|close
dedent|''
name|'def'
name|'close'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'FakeConn'
op|'('
name|'status'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
nl|'\n'
DECL|variable|process_errors
dedent|''
name|'process_errors'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|MockProcess
name|'class'
name|'MockProcess'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|variable|ret_code
indent|'    '
name|'ret_code'
op|'='
name|'None'
newline|'\n'
DECL|variable|ret_log
name|'ret_log'
op|'='
name|'None'
newline|'\n'
DECL|variable|check_args
name|'check_args'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|class|Stream
name|'class'
name|'Stream'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|read
indent|'        '
name|'def'
name|'read'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'MockProcess'
op|'.'
name|'ret_log'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|__init__
dedent|''
dedent|''
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'targs'
op|'='
name|'MockProcess'
op|'.'
name|'check_args'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'for'
name|'targ'
name|'in'
name|'targs'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'targ'
name|'not'
name|'in'
name|'args'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'process_errors'
op|'.'
name|'append'
op|'('
string|'"Invalid: %s not in %s"'
op|'%'
op|'('
name|'targ'
op|','
nl|'\n'
name|'args'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'stdout'
op|'='
name|'self'
op|'.'
name|'Stream'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|wait
dedent|''
name|'def'
name|'wait'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'ret_code'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|function|_mock_process
name|'def'
name|'_mock_process'
op|'('
name|'ret'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'orig_process'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
newline|'\n'
name|'MockProcess'
op|'.'
name|'ret_code'
op|'='
op|'('
name|'i'
op|'['
number|'0'
op|']'
name|'for'
name|'i'
name|'in'
name|'ret'
op|')'
newline|'\n'
name|'MockProcess'
op|'.'
name|'ret_log'
op|'='
op|'('
name|'i'
op|'['
number|'1'
op|']'
name|'for'
name|'i'
name|'in'
name|'ret'
op|')'
newline|'\n'
name|'MockProcess'
op|'.'
name|'check_args'
op|'='
op|'('
name|'i'
op|'['
number|'2'
op|']'
name|'for'
name|'i'
name|'in'
name|'ret'
op|')'
newline|'\n'
name|'object_replicator'
op|'.'
name|'subprocess'
op|'.'
name|'Popen'
op|'='
name|'MockProcess'
newline|'\n'
name|'yield'
newline|'\n'
name|'object_replicator'
op|'.'
name|'subprocess'
op|'.'
name|'Popen'
op|'='
name|'orig_process'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|_create_test_ring
dedent|''
name|'def'
name|'_create_test_ring'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'testgz'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'path'
op|','
string|"'object.ring.gz'"
op|')'
newline|'\n'
name|'intended_replica2part2dev_id'
op|'='
op|'['
nl|'\n'
op|'['
number|'0'
op|','
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'4'
op|','
number|'5'
op|','
number|'6'
op|']'
op|','
nl|'\n'
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|','
number|'0'
op|','
number|'5'
op|','
number|'6'
op|','
number|'4'
op|']'
op|','
nl|'\n'
op|'['
number|'2'
op|','
number|'3'
op|','
number|'0'
op|','
number|'1'
op|','
number|'6'
op|','
number|'4'
op|','
number|'5'
op|']'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'intended_devs'
op|'='
op|'['
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'0'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'0'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.0'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'1'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'1'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.1'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'2'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'2'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.2'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'3'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'4'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.3'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'4'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'5'
op|','
string|"'ip'"
op|':'
string|"'127.0.0.4'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'5'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'6'
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'fe80::202:b3ff:fe1e:8329'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|'{'
string|"'id'"
op|':'
number|'6'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|','
string|"'zone'"
op|':'
number|'7'
op|','
nl|'\n'
string|"'ip'"
op|':'
string|"'2001:0db8:85a3:0000:0000:8a2e:0370:7334'"
op|','
string|"'port'"
op|':'
number|'6000'
op|'}'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'intended_part_shift'
op|'='
number|'30'
newline|'\n'
name|'intended_reload_time'
op|'='
number|'15'
newline|'\n'
name|'with'
name|'closing'
op|'('
name|'GzipFile'
op|'('
name|'testgz'
op|','
string|"'wb'"
op|')'
op|')'
name|'as'
name|'f'
op|':'
newline|'\n'
indent|'        '
name|'pickle'
op|'.'
name|'dump'
op|'('
nl|'\n'
name|'ring'
op|'.'
name|'RingData'
op|'('
name|'intended_replica2part2dev_id'
op|','
nl|'\n'
name|'intended_devs'
op|','
name|'intended_part_shift'
op|')'
op|','
nl|'\n'
name|'f'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'ring'
op|'.'
name|'Ring'
op|'('
name|'path'
op|','
name|'ring_name'
op|'='
string|"'object'"
op|','
nl|'\n'
name|'reload_time'
op|'='
name|'intended_reload_time'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestObjectReplicator
dedent|''
name|'class'
name|'TestObjectReplicator'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'ondisk'
op|'.'
name|'HASH_PATH_SUFFIX'
op|'='
string|"'endcap'"
newline|'\n'
name|'ondisk'
op|'.'
name|'HASH_PATH_PREFIX'
op|'='
string|"''"
newline|'\n'
comment|'# Setup a test ring (stolen from common/test_ring.py)'
nl|'\n'
name|'self'
op|'.'
name|'testdir'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'devices'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
string|"'node'"
op|')'
newline|'\n'
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
name|'ignore_errors'
op|'='
number|'1'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'self'
op|'.'
name|'testdir'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'self'
op|'.'
name|'devices'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
string|"'sda'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'objects'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
string|"'sda'"
op|','
string|"'objects'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'self'
op|'.'
name|'objects'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'parts'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'part'
name|'in'
op|'['
string|"'0'"
op|','
string|"'1'"
op|','
string|"'2'"
op|','
string|"'3'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'parts'
op|'['
name|'part'
op|']'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'part'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'mkdir'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'part'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'ring'
op|'='
name|'_create_test_ring'
op|'('
name|'self'
op|'.'
name|'testdir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'='
name|'dict'
op|'('
nl|'\n'
name|'swift_dir'
op|'='
name|'self'
op|'.'
name|'testdir'
op|','
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
op|','
name|'mount_check'
op|'='
string|"'false'"
op|','
nl|'\n'
name|'timeout'
op|'='
string|"'300'"
op|','
name|'stats_interval'
op|'='
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'='
name|'object_replicator'
op|'.'
name|'ObjectReplicator'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'logger'
op|'='
name|'FakeLogger'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'testdir'
op|','
name|'ignore_errors'
op|'='
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_once
dedent|''
name|'def'
name|'test_run_once'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'object_replicator'
op|'.'
name|'ObjectReplicator'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'swift_dir'
op|'='
name|'self'
op|'.'
name|'testdir'
op|','
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
name|'mount_check'
op|'='
string|"'false'"
op|','
name|'timeout'
op|'='
string|"'300'"
op|','
name|'stats_interval'
op|'='
string|"'1'"
op|')'
op|')'
newline|'\n'
name|'was_connector'
op|'='
name|'object_replicator'
op|'.'
name|'http_connect'
newline|'\n'
name|'object_replicator'
op|'.'
name|'http_connect'
op|'='
name|'mock_http_connect'
op|'('
number|'200'
op|')'
newline|'\n'
name|'cur_part'
op|'='
string|"'0'"
newline|'\n'
name|'df'
op|'='
name|'diskfile'
op|'.'
name|'DiskFile'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
string|"'sda'"
op|','
name|'cur_part'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'cur_part'
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'self'
op|'.'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'int'
op|'('
name|'cur_part'
op|')'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'cur_part'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'replicator'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'process_errors'
op|')'
newline|'\n'
nl|'\n'
name|'object_replicator'
op|'.'
name|'http_connect'
op|'='
name|'was_connector'
newline|'\n'
nl|'\n'
DECL|member|test_check_ring
dedent|''
name|'def'
name|'test_check_ring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'check_ring'
op|'('
op|')'
op|')'
newline|'\n'
name|'orig_check'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'next_check'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'next_check'
op|'='
name|'orig_check'
op|'-'
number|'30'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'check_ring'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'next_check'
op|'='
name|'orig_check'
newline|'\n'
name|'orig_ring_time'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'object_ring'
op|'.'
name|'_mtime'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'object_ring'
op|'.'
name|'_mtime'
op|'='
name|'orig_ring_time'
op|'-'
number|'30'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'check_ring'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'next_check'
op|'='
name|'orig_check'
op|'-'
number|'30'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'check_ring'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_collect_jobs_mkdirs_error
dedent|''
name|'def'
name|'test_collect_jobs_mkdirs_error'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|blowup_mkdirs
indent|'        '
name|'def'
name|'blowup_mkdirs'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'OSError'
op|'('
string|"'Ow!'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'mkdirs_orig'
op|'='
name|'object_replicator'
op|'.'
name|'mkdirs'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'ignore_errors'
op|'='
number|'1'
op|')'
newline|'\n'
name|'object_replicator'
op|'.'
name|'mkdirs'
op|'='
name|'blowup_mkdirs'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|"'exception'"
name|'in'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
name|'len'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'exception'"
op|']'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'exc_args'
op|','
name|'exc_kwargs'
op|','
name|'exc_str'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'exception'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'exc_args'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'exc_args'
op|'['
number|'0'
op|']'
op|'.'
name|'startswith'
op|'('
string|"'ERROR creating '"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exc_kwargs'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'exc_str'
op|','
string|"'Ow!'"
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'object_replicator'
op|'.'
name|'mkdirs'
op|'='
name|'mkdirs_orig'
newline|'\n'
nl|'\n'
DECL|member|test_collect_jobs
dedent|''
dedent|''
name|'def'
name|'test_collect_jobs'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'jobs'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
name|'jobs_to_delete'
op|'='
op|'['
name|'j'
name|'for'
name|'j'
name|'in'
name|'jobs'
name|'if'
name|'j'
op|'['
string|"'delete'"
op|']'
op|']'
newline|'\n'
name|'jobs_by_part'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
indent|'            '
name|'jobs_by_part'
op|'['
name|'job'
op|'['
string|"'partition'"
op|']'
op|']'
op|'='
name|'job'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'jobs_to_delete'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'1'"
op|','
name|'jobs_to_delete'
op|'['
number|'0'
op|']'
op|'['
string|"'partition'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_part'
op|'['
string|"'0'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_part'
op|'['
string|"'1'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
op|'['
number|'1'
op|','
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_part'
op|'['
string|"'2'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_part'
op|'['
string|"'3'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
op|'['
number|'3'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'for'
name|'part'
name|'in'
op|'['
string|"'0'"
op|','
string|"'1'"
op|','
string|"'2'"
op|','
string|"'3'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'node'
name|'in'
name|'jobs_by_part'
op|'['
name|'part'
op|']'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'node'
op|'['
string|"'device'"
op|']'
op|','
string|"'sda'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'jobs_by_part'
op|'['
name|'part'
op|']'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'part'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_collect_jobs_handoffs_first
dedent|''
dedent|''
name|'def'
name|'test_collect_jobs_handoffs_first'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'handoffs_first'
op|'='
name|'True'
newline|'\n'
name|'jobs'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'jobs'
op|'['
number|'0'
op|']'
op|'['
string|"'delete'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
string|"'1'"
op|','
name|'jobs'
op|'['
number|'0'
op|']'
op|'['
string|"'partition'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_collect_jobs_removes_zbf
dedent|''
name|'def'
name|'test_collect_jobs_removes_zbf'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        After running xfs_repair, a partition directory could become a\n        zero-byte file.  If this happens, collect_jobs() should clean it up and\n        *not* create a job which will hit an exception as it tries to listdir()\n        a file.\n        """'
newline|'\n'
comment|'# Surprise! Partition dir 1 is actually a zero-byte-file'
nl|'\n'
name|'part_1_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'rmtree'
op|'('
name|'part_1_path'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'part_1_path'
op|','
string|"'w'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'isfile'
op|'('
name|'part_1_path'
op|')'
op|')'
comment|'# sanity check'
newline|'\n'
name|'jobs'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
name|'jobs_to_delete'
op|'='
op|'['
name|'j'
name|'for'
name|'j'
name|'in'
name|'jobs'
name|'if'
name|'j'
op|'['
string|"'delete'"
op|']'
op|']'
newline|'\n'
name|'jobs_by_part'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
indent|'            '
name|'jobs_by_part'
op|'['
name|'job'
op|'['
string|"'partition'"
op|']'
op|']'
op|'='
name|'job'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'jobs_to_delete'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_part'
op|'['
string|"'0'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
op|'['
number|'1'
op|','
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'1'"
name|'in'
name|'jobs_by_part'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_part'
op|'['
string|"'2'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
op|'['
number|'2'
op|','
number|'3'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
op|'['
name|'node'
op|'['
string|"'id'"
op|']'
name|'for'
name|'node'
name|'in'
name|'jobs_by_part'
op|'['
string|"'3'"
op|']'
op|'['
string|"'nodes'"
op|']'
op|']'
op|','
op|'['
number|'3'
op|','
number|'1'
op|']'
op|')'
newline|'\n'
name|'for'
name|'part'
name|'in'
op|'['
string|"'0'"
op|','
string|"'2'"
op|','
string|"'3'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'node'
name|'in'
name|'jobs_by_part'
op|'['
name|'part'
op|']'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'node'
op|'['
string|"'device'"
op|']'
op|','
string|"'sda'"
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'jobs_by_part'
op|'['
name|'part'
op|']'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'part'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'part_1_path'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
nl|'\n'
op|'['
op|'('
op|'('
string|"'Removing partition directory which was a file: %s'"
op|','
nl|'\n'
name|'part_1_path'
op|')'
op|','
op|'{'
op|'}'
op|')'
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'log_dict'
op|'['
string|"'warning'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition
dedent|''
name|'def'
name|'test_delete_partition'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'diskfile'
op|'.'
name|'DiskFile'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'datadir'
op|')'
newline|'\n'
name|'print'
name|'df'
op|'.'
name|'datadir'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'self'
op|'.'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
number|'1'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_with_failures
dedent|''
dedent|''
name|'def'
name|'test_delete_partition_with_failures'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'diskfile'
op|'.'
name|'DiskFile'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'datadir'
op|')'
newline|'\n'
name|'print'
name|'df'
op|'.'
name|'datadir'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'self'
op|'.'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
number|'1'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
op|','
name|'node'
name|'in'
name|'enumerate'
op|'('
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'i'
op|'=='
number|'0'
op|':'
newline|'\n'
comment|'# force one of the rsync calls to fail'
nl|'\n'
indent|'                    '
name|'ret_code'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'ret_code'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
name|'ret_code'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
comment|'# The path should still exist'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_with_handoff_delete
dedent|''
dedent|''
name|'def'
name|'test_delete_partition_with_handoff_delete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'handoff_delete'
op|'='
number|'2'
newline|'\n'
name|'df'
op|'='
name|'diskfile'
op|'.'
name|'DiskFile'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'datadir'
op|')'
newline|'\n'
name|'print'
name|'df'
op|'.'
name|'datadir'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'self'
op|'.'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
number|'1'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
op|','
name|'node'
name|'in'
name|'enumerate'
op|'('
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'i'
op|'=='
number|'0'
op|':'
newline|'\n'
comment|'# force one of the rsync calls to fail'
nl|'\n'
indent|'                    '
name|'ret_code'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'ret_code'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
name|'ret_code'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_with_handoff_delete_failures
dedent|''
dedent|''
name|'def'
name|'test_delete_partition_with_handoff_delete_failures'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'handoff_delete'
op|'='
number|'2'
newline|'\n'
name|'df'
op|'='
name|'diskfile'
op|'.'
name|'DiskFile'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
string|"'sda'"
op|','
string|"'1'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'datadir'
op|')'
newline|'\n'
name|'print'
name|'df'
op|'.'
name|'datadir'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'self'
op|'.'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
number|'1'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
op|','
name|'node'
name|'in'
name|'enumerate'
op|'('
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
number|'1'
op|')'
newline|'\n'
name|'if'
name|'i'
name|'in'
op|'('
number|'0'
op|','
number|'1'
op|')'
op|':'
newline|'\n'
comment|'# force two of the rsync calls to fail'
nl|'\n'
indent|'                    '
name|'ret_code'
op|'='
number|'1'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'ret_code'
op|'='
number|'0'
newline|'\n'
dedent|''
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
name|'ret_code'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
comment|'# The file should still exist'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_delete_partition_override_params
dedent|''
dedent|''
name|'def'
name|'test_delete_partition_override_params'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'df'
op|'='
name|'diskfile'
op|'.'
name|'DiskFile'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
string|"'sda'"
op|','
string|"'0'"
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
nl|'\n'
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'datadir'
op|')'
newline|'\n'
name|'part_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
name|'override_devices'
op|'='
op|'['
string|"'sdb'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
name|'override_partitions'
op|'='
op|'['
string|"'9'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
name|'override_devices'
op|'='
op|'['
string|"'sda'"
op|']'
op|','
nl|'\n'
name|'override_partitions'
op|'='
op|'['
string|"'1'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'part_path'
op|','
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_once_recover_from_failure
dedent|''
name|'def'
name|'test_run_once_recover_from_failure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'object_replicator'
op|'.'
name|'ObjectReplicator'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'swift_dir'
op|'='
name|'self'
op|'.'
name|'testdir'
op|','
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
name|'mount_check'
op|'='
string|"'false'"
op|','
name|'timeout'
op|'='
string|"'300'"
op|','
name|'stats_interval'
op|'='
string|"'1'"
op|')'
op|')'
newline|'\n'
name|'was_connector'
op|'='
name|'object_replicator'
op|'.'
name|'http_connect'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'object_replicator'
op|'.'
name|'http_connect'
op|'='
name|'mock_http_connect'
op|'('
number|'200'
op|')'
newline|'\n'
comment|"# Write some files into '1' and run replicate- they should be moved"
nl|'\n'
comment|'# to the other partitoins and then node should get deleted.'
nl|'\n'
name|'cur_part'
op|'='
string|"'1'"
newline|'\n'
name|'df'
op|'='
name|'diskfile'
op|'.'
name|'DiskFile'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'devices'
op|','
string|"'sda'"
op|','
name|'cur_part'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'cur_part'
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'self'
op|'.'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'int'
op|'('
name|'cur_part'
op|')'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
nl|'\n'
name|'cur_part'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
nl|'\n'
string|"'1'"
op|','
name|'data_dir'
op|','
name|'ohash'
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'replicator'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'process_errors'
op|')'
newline|'\n'
name|'for'
name|'i'
op|','
name|'result'
name|'in'
op|'['
op|'('
string|"'0'"
op|','
name|'True'
op|')'
op|','
op|'('
string|"'1'"
op|','
name|'False'
op|')'
op|','
nl|'\n'
op|'('
string|"'2'"
op|','
name|'True'
op|')'
op|','
op|'('
string|"'3'"
op|','
name|'True'
op|')'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
nl|'\n'
name|'i'
op|','
name|'diskfile'
op|'.'
name|'HASH_FILE'
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'F_OK'
op|')'
op|','
name|'result'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'object_replicator'
op|'.'
name|'http_connect'
op|'='
name|'was_connector'
newline|'\n'
nl|'\n'
DECL|member|test_run_once_recover_from_timeout
dedent|''
dedent|''
name|'def'
name|'test_run_once_recover_from_timeout'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'replicator'
op|'='
name|'object_replicator'
op|'.'
name|'ObjectReplicator'
op|'('
nl|'\n'
name|'dict'
op|'('
name|'swift_dir'
op|'='
name|'self'
op|'.'
name|'testdir'
op|','
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
op|','
nl|'\n'
name|'mount_check'
op|'='
string|"'false'"
op|','
name|'timeout'
op|'='
string|"'300'"
op|','
name|'stats_interval'
op|'='
string|"'1'"
op|')'
op|')'
newline|'\n'
name|'was_connector'
op|'='
name|'object_replicator'
op|'.'
name|'http_connect'
newline|'\n'
name|'was_get_hashes'
op|'='
name|'object_replicator'
op|'.'
name|'get_hashes'
newline|'\n'
name|'was_execute'
op|'='
name|'tpool'
op|'.'
name|'execute'
newline|'\n'
name|'self'
op|'.'
name|'get_hash_count'
op|'='
number|'0'
newline|'\n'
name|'try'
op|':'
newline|'\n'
nl|'\n'
DECL|function|fake_get_hashes
indent|'            '
name|'def'
name|'fake_get_hashes'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'get_hash_count'
op|'+='
number|'1'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'get_hash_count'
op|'=='
number|'3'
op|':'
newline|'\n'
comment|'# raise timeout on last call to get hashes'
nl|'\n'
indent|'                    '
name|'raise'
name|'Timeout'
op|'('
op|')'
newline|'\n'
dedent|''
name|'return'
number|'2'
op|','
op|'{'
string|"'abc'"
op|':'
string|"'def'"
op|'}'
newline|'\n'
nl|'\n'
DECL|function|fake_exc
dedent|''
name|'def'
name|'fake_exc'
op|'('
name|'tester'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
string|"'Error syncing partition'"
name|'in'
name|'args'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'tester'
op|'.'
name|'i_failed'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'i_failed'
op|'='
name|'False'
newline|'\n'
name|'object_replicator'
op|'.'
name|'http_connect'
op|'='
name|'mock_http_connect'
op|'('
number|'200'
op|')'
newline|'\n'
name|'object_replicator'
op|'.'
name|'get_hashes'
op|'='
name|'fake_get_hashes'
newline|'\n'
name|'replicator'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'='
name|'lambda'
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|':'
name|'fake_exc'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
comment|"# Write some files into '1' and run replicate- they should be moved"
nl|'\n'
comment|'# to the other partitions and then node should get deleted.'
nl|'\n'
name|'cur_part'
op|'='
string|"'1'"
newline|'\n'
name|'df'
op|'='
name|'diskfile'
op|'.'
name|'DiskFile'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'devices'
op|','
string|"'sda'"
op|','
name|'cur_part'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|','
name|'FakeLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'df'
op|'.'
name|'datadir'
op|')'
newline|'\n'
name|'f'
op|'='
name|'open'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'df'
op|'.'
name|'datadir'
op|','
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|'+'
string|"'.data'"
op|')'
op|','
nl|'\n'
string|"'wb'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'write'
op|'('
string|"'1234567890'"
op|')'
newline|'\n'
name|'f'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
string|"'a'"
op|','
string|"'c'"
op|','
string|"'o'"
op|')'
newline|'\n'
name|'data_dir'
op|'='
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
newline|'\n'
name|'whole_path_from'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
name|'cur_part'
op|','
name|'data_dir'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'='
op|'['
op|']'
newline|'\n'
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'self'
op|'.'
name|'ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'int'
op|'('
name|'cur_part'
op|')'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'ip'"
op|']'
name|'not'
name|'in'
name|'_ips'
op|'('
op|')'
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'                '
name|'rsync_mod'
op|'='
string|"'%s::object/sda/objects/%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
nl|'\n'
name|'cur_part'
op|')'
newline|'\n'
name|'process_arg_checker'
op|'.'
name|'append'
op|'('
nl|'\n'
op|'('
number|'0'
op|','
string|"''"
op|','
op|'['
string|"'rsync'"
op|','
name|'whole_path_from'
op|','
name|'rsync_mod'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'os'
op|'.'
name|'access'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'objects'
op|','
nl|'\n'
string|"'1'"
op|','
name|'data_dir'
op|','
name|'ohash'
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'F_OK'
op|')'
op|')'
newline|'\n'
name|'with'
name|'_mock_process'
op|'('
name|'process_arg_checker'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'replicator'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'process_errors'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'self'
op|'.'
name|'i_failed'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'object_replicator'
op|'.'
name|'http_connect'
op|'='
name|'was_connector'
newline|'\n'
name|'object_replicator'
op|'.'
name|'get_hashes'
op|'='
name|'was_get_hashes'
newline|'\n'
name|'tpool'
op|'.'
name|'execute'
op|'='
name|'was_execute'
newline|'\n'
nl|'\n'
DECL|member|test_run
dedent|''
dedent|''
name|'def'
name|'test_run'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'_mock_process'
op|'('
op|'['
op|'('
number|'0'
op|','
string|"''"
op|')'
op|']'
op|'*'
number|'100'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_withlog
dedent|''
dedent|''
dedent|''
name|'def'
name|'test_run_withlog'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'with'
name|'_mock_process'
op|'('
op|'['
op|'('
number|'0'
op|','
string|'"stuff in log"'
op|')'
op|']'
op|'*'
number|'100'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
nl|'\n'
name|'mock_http_connect'
op|'('
number|'200'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replicate'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.tpool_reraise'"
op|','
name|'autospec'
op|'='
name|'True'
op|')'
newline|'\n'
op|'@'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.obj.replicator.http_connect'"
op|','
name|'autospec'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|member|test_update
name|'def'
name|'test_update'
op|'('
name|'self'
op|','
name|'mock_http'
op|','
name|'mock_tpool_reraise'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|function|set_default
indent|'        '
name|'def'
name|'set_default'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_count'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_sync'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_hash'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replication_count'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'partition_times'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
nl|'\n'
string|"'user-agent'"
op|':'
string|"'obj-replicator %s'"
op|'%'
name|'os'
op|'.'
name|'getpid'
op|'('
op|')'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'logger'
op|'='
name|'mock_logger'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'mock_tpool_reraise'
op|'.'
name|'return_value'
op|'='
op|'('
number|'0'
op|','
op|'{'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'all_jobs'
op|'='
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'collect_jobs'
op|'('
op|')'
newline|'\n'
name|'jobs'
op|'='
op|'['
name|'job'
name|'for'
name|'job'
name|'in'
name|'all_jobs'
name|'if'
name|'not'
name|'job'
op|'['
string|"'delete'"
op|']'
op|']'
newline|'\n'
nl|'\n'
name|'mock_http'
op|'.'
name|'return_value'
op|'='
name|'answer'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'answer'
op|'.'
name|'getresponse'
op|'.'
name|'return_value'
op|'='
name|'resp'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
comment|'# Check uncorrect http_connect with status 507 and'
nl|'\n'
comment|'# count of attempts and call args'
nl|'\n'
name|'resp'
op|'.'
name|'status'
op|'='
number|'507'
newline|'\n'
name|'error'
op|'='
string|"'%(ip)s/%(device)s responded as unmounted'"
newline|'\n'
name|'expect'
op|'='
string|"'Error syncing partition'"
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
indent|'            '
name|'set_default'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'update'
op|'('
name|'job'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'error'
name|'in'
name|'mock_logger'
op|'.'
name|'error'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'expect'
name|'in'
name|'mock_logger'
op|'.'
name|'exception'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'partition_times'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_http'
op|'.'
name|'call_count'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'ring'
op|'.'
name|'_devs'
op|')'
op|'-'
number|'1'
op|')'
newline|'\n'
name|'reqs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'job'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'reqs'
op|'.'
name|'append'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
name|'job'
op|'['
string|"'partition'"
op|']'
op|','
string|"'REPLICATE'"
op|','
string|"''"
op|','
nl|'\n'
name|'headers'
op|'='
name|'self'
op|'.'
name|'headers'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'job'
op|'['
string|"'partition'"
op|']'
op|'=='
string|"'0'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_hash'
op|','
number|'0'
op|')'
newline|'\n'
dedent|''
name|'mock_http'
op|'.'
name|'assert_has_calls'
op|'('
name|'reqs'
op|','
name|'any_order'
op|'='
name|'True'
op|')'
newline|'\n'
name|'mock_http'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'mock_logger'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Check uncorrect http_connect with status 400 != HTTP_OK'
nl|'\n'
dedent|''
name|'resp'
op|'.'
name|'status'
op|'='
number|'400'
newline|'\n'
name|'error'
op|'='
string|"'Invalid response %(resp)s from %(ip)s'"
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
indent|'            '
name|'set_default'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'update'
op|'('
name|'job'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'error'
name|'in'
name|'mock_logger'
op|'.'
name|'error'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'partition_times'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'mock_logger'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Check successful http_connection and exception with'
nl|'\n'
comment|'# uncorrect pickle.loads(resp.read())'
nl|'\n'
dedent|''
name|'resp'
op|'.'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'expect'
op|'='
string|"'Error syncing with node:'"
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
indent|'            '
name|'set_default'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'update'
op|'('
name|'job'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'expect'
name|'in'
name|'mock_logger'
op|'.'
name|'exception'
op|'.'
name|'call_args'
op|'['
number|'0'
op|']'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'partition_times'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'mock_logger'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Check successful http_connection and correct'
nl|'\n'
comment|'# pickle.loads(resp.read()) for non local node'
nl|'\n'
dedent|''
name|'resp'
op|'.'
name|'status'
op|'='
number|'200'
newline|'\n'
name|'local_job'
op|'='
name|'None'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'.'
name|'return_value'
op|'='
name|'pickle'
op|'.'
name|'dumps'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
indent|'            '
name|'set_default'
op|'('
name|'self'
op|')'
newline|'\n'
name|'if'
name|'job'
op|'['
string|"'partition'"
op|']'
op|'=='
string|"'0'"
op|':'
newline|'\n'
indent|'                '
name|'local_job'
op|'='
name|'job'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'update'
op|'('
name|'job'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_logger'
op|'.'
name|'exception'
op|'.'
name|'call_count'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'mock_logger'
op|'.'
name|'error'
op|'.'
name|'call_count'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'partition_times'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_hash'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_sync'
op|','
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_count'
op|','
number|'0'
op|')'
newline|'\n'
name|'mock_logger'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# Check seccesfull http_connect and rsync for local node'
nl|'\n'
dedent|''
name|'mock_tpool_reraise'
op|'.'
name|'return_value'
op|'='
op|'('
number|'1'
op|','
op|'{'
string|"'a83'"
op|':'
string|"'ba47fd314242ec8c'"
nl|'\n'
string|"'7efb91f5d57336e4'"
op|'}'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'read'
op|'.'
name|'return_value'
op|'='
name|'pickle'
op|'.'
name|'dumps'
op|'('
op|'{'
string|"'a83'"
op|':'
string|"'c130a2c17ed45102a'"
nl|'\n'
string|"'ada0f4eee69494ff'"
op|'}'
op|')'
newline|'\n'
name|'set_default'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'rsync'
op|'='
name|'fake_func'
op|'='
name|'mock'
op|'.'
name|'MagicMock'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'update'
op|'('
name|'local_job'
op|')'
newline|'\n'
name|'reqs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'local_job'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'reqs'
op|'.'
name|'append'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
name|'node'
op|','
name|'local_job'
op|','
op|'['
string|"'a83'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'fake_func'
op|'.'
name|'assert_has_calls'
op|'('
name|'reqs'
op|','
name|'any_order'
op|'='
name|'True'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'fake_func'
op|'.'
name|'call_count'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'replication_count'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_sync'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_hash'
op|','
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'suffix_count'
op|','
number|'1'
op|')'
newline|'\n'
name|'mock_http'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
name|'mock_logger'
op|'.'
name|'reset_mock'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# test for replication params'
nl|'\n'
name|'repl_job'
op|'='
name|'local_job'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'repl_job'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'node'
op|'['
string|"'replication_ip'"
op|']'
op|'='
string|"'127.0.0.11'"
newline|'\n'
name|'node'
op|'['
string|"'replication_port'"
op|']'
op|'='
string|"'6011'"
newline|'\n'
dedent|''
name|'set_default'
op|'('
name|'self'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'replicator'
op|'.'
name|'update'
op|'('
name|'repl_job'
op|')'
newline|'\n'
name|'reqs'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'repl_job'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'reqs'
op|'.'
name|'append'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
name|'node'
op|'['
string|"'replication_ip'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'replication_port'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
name|'repl_job'
op|'['
string|"'partition'"
op|']'
op|','
string|"'REPLICATE'"
op|','
nl|'\n'
string|"''"
op|','
name|'headers'
op|'='
name|'self'
op|'.'
name|'headers'
op|')'
op|')'
newline|'\n'
name|'reqs'
op|'.'
name|'append'
op|'('
name|'mock'
op|'.'
name|'call'
op|'('
name|'node'
op|'['
string|"'replication_ip'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'replication_port'"
op|']'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
name|'repl_job'
op|'['
string|"'partition'"
op|']'
op|','
string|"'REPLICATE'"
op|','
nl|'\n'
string|"'/a83'"
op|','
name|'headers'
op|'='
name|'self'
op|'.'
name|'headers'
op|')'
op|')'
newline|'\n'
dedent|''
name|'mock_http'
op|'.'
name|'assert_has_calls'
op|'('
name|'reqs'
op|','
name|'any_order'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
