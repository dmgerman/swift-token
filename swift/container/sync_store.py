begin_unit
comment|'# Copyright (c) 2010-2016 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'errno'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'audit_location_generator'
op|','
name|'mkdirs'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'container'
op|'.'
name|'backend'
name|'import'
name|'DATADIR'
newline|'\n'
nl|'\n'
DECL|variable|SYNC_DATADIR
name|'SYNC_DATADIR'
op|'='
string|"'sync_containers'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ContainerSyncStore
name|'class'
name|'ContainerSyncStore'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Filesystem based store for local containers that needs to be synced.\n\n    The store holds a list of containers that need to be synced by the\n    container sync daemon. The store is local to the container server node,\n    that is, only containers whose databases are kept locally on the node are\n    listed.\n    """'
newline|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'devices'
op|','
name|'logger'
op|','
name|'mount_check'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'devices'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'normpath'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
string|"'/'"
op|','
name|'devices'
op|')'
op|')'
op|'+'
string|"'/'"
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'logger'
newline|'\n'
name|'self'
op|'.'
name|'mount_check'
op|'='
name|'mount_check'
newline|'\n'
nl|'\n'
DECL|member|_container_to_synced_container_path
dedent|''
name|'def'
name|'_container_to_synced_container_path'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
comment|'# path is assumed to be of the form:'
nl|'\n'
comment|'# /srv/node/sdb/containers/part/.../*.db'
nl|'\n'
comment|'# or more generally:'
nl|'\n'
comment|'# devices/device/containers/part/.../*.db'
nl|'\n'
comment|'# Below we split the path to the following parts:'
nl|'\n'
comment|'# devices, device, rest'
nl|'\n'
indent|'        '
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'normpath'
op|'('
name|'path'
op|')'
newline|'\n'
name|'device'
op|'='
name|'path'
op|'['
name|'len'
op|'('
name|'devices'
op|')'
op|':'
name|'path'
op|'.'
name|'rfind'
op|'('
name|'DATADIR'
op|')'
op|']'
newline|'\n'
name|'rest'
op|'='
name|'path'
op|'['
name|'path'
op|'.'
name|'rfind'
op|'('
name|'DATADIR'
op|')'
op|'+'
name|'len'
op|'('
name|'DATADIR'
op|')'
op|'+'
number|'1'
op|':'
op|']'
newline|'\n'
nl|'\n'
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'devices'
op|','
name|'device'
op|','
name|'SYNC_DATADIR'
op|','
name|'rest'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_synced_container_to_container_path
dedent|''
name|'def'
name|'_synced_container_to_container_path'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
comment|'# synced path is assumed to be of the form:'
nl|'\n'
comment|'# /srv/node/sdb/sync_containers/part/.../*.db'
nl|'\n'
comment|'# or more generally:'
nl|'\n'
comment|'# devices/device/sync_containers/part/.../*.db'
nl|'\n'
comment|'# Below we split the path to the following parts:'
nl|'\n'
comment|'# devices, device, rest'
nl|'\n'
indent|'        '
name|'devices'
op|'='
name|'self'
op|'.'
name|'devices'
newline|'\n'
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'normpath'
op|'('
name|'path'
op|')'
newline|'\n'
name|'device'
op|'='
name|'path'
op|'['
name|'len'
op|'('
name|'devices'
op|')'
op|':'
name|'path'
op|'.'
name|'rfind'
op|'('
name|'SYNC_DATADIR'
op|')'
op|']'
newline|'\n'
name|'rest'
op|'='
name|'path'
op|'['
name|'path'
op|'.'
name|'rfind'
op|'('
name|'SYNC_DATADIR'
op|')'
op|'+'
name|'len'
op|'('
name|'SYNC_DATADIR'
op|')'
op|'+'
number|'1'
op|':'
op|']'
newline|'\n'
nl|'\n'
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'devices'
op|','
name|'device'
op|','
name|'DATADIR'
op|','
name|'rest'
op|')'
newline|'\n'
nl|'\n'
DECL|member|add_synced_container
dedent|''
name|'def'
name|'add_synced_container'
op|'('
name|'self'
op|','
name|'broker'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Adds the container db represented by broker to the list of synced\n        containers.\n\n        :param broker: An instance of ContainerBroker representing the\n                       container to add.\n        """'
newline|'\n'
name|'sync_file'
op|'='
name|'self'
op|'.'
name|'_container_to_synced_container_path'
op|'('
name|'broker'
op|'.'
name|'db_file'
op|')'
newline|'\n'
name|'stat'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'stat'
op|'='
name|'os'
op|'.'
name|'stat'
op|'('
name|'sync_file'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
name|'as'
name|'oserr'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'oserr'
op|'.'
name|'errno'
op|'!='
name|'errno'
op|'.'
name|'ENOENT'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'oserr'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'stat'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'sync_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'sync_file'
op|')'
newline|'\n'
name|'mkdirs'
op|'('
name|'sync_path'
op|')'
newline|'\n'
nl|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'symlink'
op|'('
name|'broker'
op|'.'
name|'db_file'
op|','
name|'sync_file'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
name|'as'
name|'oserr'
op|':'
newline|'\n'
indent|'            '
name|'if'
op|'('
name|'oserr'
op|'.'
name|'errno'
op|'!='
name|'errno'
op|'.'
name|'EEXIST'
name|'or'
nl|'\n'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'islink'
op|'('
name|'sync_file'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'oserr'
newline|'\n'
nl|'\n'
DECL|member|remove_synced_container
dedent|''
dedent|''
dedent|''
name|'def'
name|'remove_synced_container'
op|'('
name|'self'
op|','
name|'broker'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Removes the container db represented by broker from the list of synced\n        containers.\n\n        :param broker: An instance of ContainerBroker representing the\n                       container to remove.\n        """'
newline|'\n'
name|'sync_file'
op|'='
name|'broker'
op|'.'
name|'db_file'
newline|'\n'
name|'sync_file'
op|'='
name|'self'
op|'.'
name|'_container_to_synced_container_path'
op|'('
name|'sync_file'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'sync_file'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'removedirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'sync_file'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
name|'as'
name|'oserr'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'oserr'
op|'.'
name|'errno'
op|'!='
name|'errno'
op|'.'
name|'ENOENT'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'oserr'
newline|'\n'
nl|'\n'
DECL|member|update_sync_store
dedent|''
dedent|''
dedent|''
name|'def'
name|'update_sync_store'
op|'('
name|'self'
op|','
name|'broker'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Add or remove a symlink to/from the sync-containers directory\n        according to the broker\'s metadata.\n\n        Decide according to the broker x-container-sync-to and\n        x-container-sync-key whether a symlink needs to be added or\n        removed.\n\n        We mention that if both metadata items do not appear\n        at all, the container has never been set for sync in reclaim_age\n        in which case we do nothing. This is important as this method is\n        called for ALL containers from the container replicator.\n\n        Once we realize that we do need to do something, we check if\n        the container is marked for delete, in which case we want to\n        remove the symlink\n\n        For adding a symlink we notice that both x-container-sync-to and\n        x-container-sync-key exist and are valid, that is, are not empty.\n\n        At this point we know we need to do something, the container\n        is not marked for delete and the condition to add a symlink\n        is not met. conclusion need to remove the symlink.\n\n        :param broker: An instance of ContainerBroker\n        """'
newline|'\n'
comment|'# If the broker metadata does not have both x-container-sync-to'
nl|'\n'
comment|'# and x-container-sync-key it has *never* been set. Make sure'
nl|'\n'
comment|'# we do nothing in this case'
nl|'\n'
name|'if'
op|'('
string|"'X-Container-Sync-To'"
name|'not'
name|'in'
name|'broker'
op|'.'
name|'metadata'
name|'and'
nl|'\n'
string|"'X-Container-Sync-Key'"
name|'not'
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'broker'
op|'.'
name|'is_deleted'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'remove_synced_container'
op|'('
name|'broker'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
comment|'# If both x-container-sync-to and x-container-sync-key'
nl|'\n'
comment|'# exist and valid, add the symlink'
nl|'\n'
dedent|''
name|'sync_to'
op|'='
name|'sync_key'
op|'='
name|'None'
newline|'\n'
name|'if'
string|"'X-Container-Sync-To'"
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'sync_to'
op|'='
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'X-Container-Sync-To'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'if'
string|"'X-Container-Sync-Key'"
name|'in'
name|'broker'
op|'.'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'sync_key'
op|'='
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'X-Container-Sync-Key'"
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'sync_to'
name|'and'
name|'sync_key'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'add_synced_container'
op|'('
name|'broker'
op|')'
newline|'\n'
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'remove_synced_container'
op|'('
name|'broker'
op|')'
newline|'\n'
nl|'\n'
DECL|member|synced_containers_generator
dedent|''
name|'def'
name|'synced_containers_generator'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Iterates over the list of synced containers\n        yielding the path of the container db\n        """'
newline|'\n'
name|'all_locs'
op|'='
name|'audit_location_generator'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'SYNC_DATADIR'
op|','
string|"'.db'"
op|','
nl|'\n'
name|'mount_check'
op|'='
name|'self'
op|'.'
name|'mount_check'
op|','
nl|'\n'
name|'logger'
op|'='
name|'self'
op|'.'
name|'logger'
op|')'
newline|'\n'
name|'for'
name|'path'
op|','
name|'device'
op|','
name|'partition'
name|'in'
name|'all_locs'
op|':'
newline|'\n'
comment|'# What we want to yield is the real path as its being used for'
nl|'\n'
comment|'# initiating a container broker. The broker would break if not'
nl|'\n'
comment|'# given the db real path, as it e.g. assumes the existence of'
nl|'\n'
comment|'# .pending in the same path'
nl|'\n'
indent|'            '
name|'yield'
name|'self'
op|'.'
name|'_synced_container_to_container_path'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
