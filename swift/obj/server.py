begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
string|'""" Object Server for Swift """'
newline|'\n'
nl|'\n'
name|'from'
name|'__future__'
name|'import'
name|'with_statement'
newline|'\n'
name|'import'
name|'cPickle'
name|'as'
name|'pickle'
newline|'\n'
name|'import'
name|'errno'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'traceback'
newline|'\n'
name|'from'
name|'datetime'
name|'import'
name|'datetime'
newline|'\n'
name|'from'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
name|'from'
name|'tempfile'
name|'import'
name|'mkstemp'
newline|'\n'
name|'from'
name|'urllib'
name|'import'
name|'unquote'
newline|'\n'
name|'from'
name|'contextlib'
name|'import'
name|'contextmanager'
newline|'\n'
nl|'\n'
name|'from'
name|'xattr'
name|'import'
name|'getxattr'
op|','
name|'setxattr'
newline|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'sleep'
op|','
name|'Timeout'
op|','
name|'tpool'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'mkdirs'
op|','
name|'normalize_timestamp'
op|','
name|'public'
op|','
name|'storage_directory'
op|','
name|'hash_path'
op|','
name|'renamer'
op|','
name|'fallocate'
op|','
name|'fsync'
op|','
name|'split_path'
op|','
name|'drop_buffer_cache'
op|','
name|'get_logger'
op|','
name|'write_pickle'
op|','
name|'config_true_value'
op|','
name|'validate_device_partition'
op|','
name|'timing_stats'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'bufferedhttp'
name|'import'
name|'http_connect'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'constraints'
name|'import'
name|'check_object_creation'
op|','
name|'check_mount'
op|','
name|'check_float'
op|','
name|'check_utf8'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'ConnectionTimeout'
op|','
name|'DiskFileError'
op|','
name|'DiskFileNotExist'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
op|'.'
name|'replicator'
name|'import'
name|'tpool_reraise'
op|','
name|'invalidate_hash'
op|','
name|'quarantine_renamer'
op|','
name|'get_hashes'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'http'
name|'import'
name|'is_success'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'swob'
name|'import'
name|'HTTPAccepted'
op|','
name|'HTTPBadRequest'
op|','
name|'HTTPCreated'
op|','
name|'HTTPInternalServerError'
op|','
name|'HTTPNoContent'
op|','
name|'HTTPNotFound'
op|','
name|'HTTPNotModified'
op|','
name|'HTTPPreconditionFailed'
op|','
name|'HTTPRequestTimeout'
op|','
name|'HTTPUnprocessableEntity'
op|','
name|'HTTPClientDisconnect'
op|','
name|'HTTPMethodNotAllowed'
op|','
name|'Request'
op|','
name|'Response'
op|','
name|'UTC'
op|','
name|'HTTPInsufficientStorage'
op|','
name|'multi_range_iterator'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|DATADIR
name|'DATADIR'
op|'='
string|"'objects'"
newline|'\n'
DECL|variable|ASYNCDIR
name|'ASYNCDIR'
op|'='
string|"'async_pending'"
newline|'\n'
DECL|variable|PICKLE_PROTOCOL
name|'PICKLE_PROTOCOL'
op|'='
number|'2'
newline|'\n'
DECL|variable|METADATA_KEY
name|'METADATA_KEY'
op|'='
string|"'user.swift.metadata'"
newline|'\n'
DECL|variable|MAX_OBJECT_NAME_LENGTH
name|'MAX_OBJECT_NAME_LENGTH'
op|'='
number|'1024'
newline|'\n'
comment|'# keep these lower-case'
nl|'\n'
DECL|variable|DISALLOWED_HEADERS
name|'DISALLOWED_HEADERS'
op|'='
name|'set'
op|'('
string|"'content-length content-type deleted etag'"
op|'.'
name|'split'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|read_metadata
name|'def'
name|'read_metadata'
op|'('
name|'fd'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Helper function to read the pickled metadata from an object file.\n\n    :param fd: file descriptor to load the metadata from\n\n    :returns: dictionary of metadata\n    """'
newline|'\n'
name|'metadata'
op|'='
string|"''"
newline|'\n'
name|'key'
op|'='
number|'0'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'+='
name|'getxattr'
op|'('
name|'fd'
op|','
string|"'%s%s'"
op|'%'
op|'('
name|'METADATA_KEY'
op|','
op|'('
name|'key'
name|'or'
string|"''"
op|')'
op|')'
op|')'
newline|'\n'
name|'key'
op|'+='
number|'1'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'IOError'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
dedent|''
name|'return'
name|'pickle'
op|'.'
name|'loads'
op|'('
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|write_metadata
dedent|''
name|'def'
name|'write_metadata'
op|'('
name|'fd'
op|','
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Helper function to write pickled metadata for an object file.\n\n    :param fd: file descriptor to write the metadata\n    :param metadata: metadata to write\n    """'
newline|'\n'
name|'metastr'
op|'='
name|'pickle'
op|'.'
name|'dumps'
op|'('
name|'metadata'
op|','
name|'PICKLE_PROTOCOL'
op|')'
newline|'\n'
name|'key'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'metastr'
op|':'
newline|'\n'
indent|'        '
name|'setxattr'
op|'('
name|'fd'
op|','
string|"'%s%s'"
op|'%'
op|'('
name|'METADATA_KEY'
op|','
name|'key'
name|'or'
string|"''"
op|')'
op|','
name|'metastr'
op|'['
op|':'
number|'254'
op|']'
op|')'
newline|'\n'
name|'metastr'
op|'='
name|'metastr'
op|'['
number|'254'
op|':'
op|']'
newline|'\n'
name|'key'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DiskFile
dedent|''
dedent|''
name|'class'
name|'DiskFile'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Manage object files on disk.\n\n    :param path: path to devices on the node\n    :param device: device name\n    :param partition: partition on the device the object lives in\n    :param account: account name for the object\n    :param container: container name for the object\n    :param obj: object name for the object\n    :param keep_data_fp: if True, don\'t close the fp, otherwise close it\n    :param disk_chunk_size: size of chunks on file reads\n    :param iter_hook: called when __iter__ returns a chunk\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'logger'
op|','
name|'keep_data_fp'
op|'='
name|'False'
op|','
name|'disk_chunk_size'
op|'='
number|'65536'
op|','
nl|'\n'
name|'iter_hook'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'disk_chunk_size'
op|'='
name|'disk_chunk_size'
newline|'\n'
name|'self'
op|'.'
name|'iter_hook'
op|'='
name|'iter_hook'
newline|'\n'
name|'self'
op|'.'
name|'name'
op|'='
string|"'/'"
op|'+'
string|"'/'"
op|'.'
name|'join'
op|'('
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
op|')'
newline|'\n'
name|'name_hash'
op|'='
name|'hash_path'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'datadir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
nl|'\n'
name|'path'
op|','
name|'device'
op|','
name|'storage_directory'
op|'('
name|'DATADIR'
op|','
name|'partition'
op|','
name|'name_hash'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'device_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'path'
op|','
name|'device'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'tmpdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'path'
op|','
name|'device'
op|','
string|"'tmp'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'logger'
newline|'\n'
name|'self'
op|'.'
name|'metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'meta_file'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'data_file'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'fp'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'iter_etag'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'started_at_0'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'read_to_eof'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'quarantined_dir'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'keep_cache'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'suppress_file_closing'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'datadir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'files'
op|'='
name|'sorted'
op|'('
name|'os'
op|'.'
name|'listdir'
op|'('
name|'self'
op|'.'
name|'datadir'
op|')'
op|','
name|'reverse'
op|'='
name|'True'
op|')'
newline|'\n'
name|'for'
name|'file'
name|'in'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'file'
op|'.'
name|'endswith'
op|'('
string|"'.ts'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'data_file'
op|'='
name|'self'
op|'.'
name|'meta_file'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'metadata'
op|'='
op|'{'
string|"'deleted'"
op|':'
name|'True'
op|'}'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'file'
op|'.'
name|'endswith'
op|'('
string|"'.meta'"
op|')'
name|'and'
name|'not'
name|'self'
op|'.'
name|'meta_file'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'meta_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'datadir'
op|','
name|'file'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'file'
op|'.'
name|'endswith'
op|'('
string|"'.data'"
op|')'
name|'and'
name|'not'
name|'self'
op|'.'
name|'data_file'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'data_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'datadir'
op|','
name|'file'
op|')'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'self'
op|'.'
name|'data_file'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'fp'
op|'='
name|'open'
op|'('
name|'self'
op|'.'
name|'data_file'
op|','
string|"'rb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'metadata'
op|'='
name|'read_metadata'
op|'('
name|'self'
op|'.'
name|'fp'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'keep_data_fp'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'close'
op|'('
name|'verify_file'
op|'='
name|'False'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'meta_file'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'open'
op|'('
name|'self'
op|'.'
name|'meta_file'
op|')'
name|'as'
name|'mfp'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'key'
name|'in'
name|'self'
op|'.'
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
name|'not'
name|'in'
name|'DISALLOWED_HEADERS'
op|':'
newline|'\n'
indent|'                        '
name|'del'
name|'self'
op|'.'
name|'metadata'
op|'['
name|'key'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'metadata'
op|'.'
name|'update'
op|'('
name|'read_metadata'
op|'('
name|'mfp'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__iter__
dedent|''
dedent|''
dedent|''
name|'def'
name|'__iter__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns an iterator over the data file."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'dropped_cache'
op|'='
number|'0'
newline|'\n'
name|'read'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'started_at_0'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'read_to_eof'
op|'='
name|'False'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'fp'
op|'.'
name|'tell'
op|'('
op|')'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'started_at_0'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'iter_etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
dedent|''
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'chunk'
op|'='
name|'self'
op|'.'
name|'fp'
op|'.'
name|'read'
op|'('
name|'self'
op|'.'
name|'disk_chunk_size'
op|')'
newline|'\n'
name|'if'
name|'chunk'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'self'
op|'.'
name|'iter_etag'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'iter_etag'
op|'.'
name|'update'
op|'('
name|'chunk'
op|')'
newline|'\n'
dedent|''
name|'read'
op|'+='
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'if'
name|'read'
op|'-'
name|'dropped_cache'
op|'>'
op|'('
number|'1024'
op|'*'
number|'1024'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'drop_cache'
op|'('
name|'self'
op|'.'
name|'fp'
op|'.'
name|'fileno'
op|'('
op|')'
op|','
name|'dropped_cache'
op|','
nl|'\n'
name|'read'
op|'-'
name|'dropped_cache'
op|')'
newline|'\n'
name|'dropped_cache'
op|'='
name|'read'
newline|'\n'
dedent|''
name|'yield'
name|'chunk'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'iter_hook'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'iter_hook'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'read_to_eof'
op|'='
name|'True'
newline|'\n'
name|'self'
op|'.'
name|'drop_cache'
op|'('
name|'self'
op|'.'
name|'fp'
op|'.'
name|'fileno'
op|'('
op|')'
op|','
name|'dropped_cache'
op|','
nl|'\n'
name|'read'
op|'-'
name|'dropped_cache'
op|')'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'self'
op|'.'
name|'suppress_file_closing'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|app_iter_range
dedent|''
dedent|''
dedent|''
name|'def'
name|'app_iter_range'
op|'('
name|'self'
op|','
name|'start'
op|','
name|'stop'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns an iterator over the data file for range (start, stop)"""'
newline|'\n'
name|'if'
name|'start'
name|'or'
name|'start'
op|'=='
number|'0'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fp'
op|'.'
name|'seek'
op|'('
name|'start'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'stop'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'length'
op|'='
name|'stop'
op|'-'
name|'start'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'length'
op|'='
name|'None'
newline|'\n'
dedent|''
name|'for'
name|'chunk'
name|'in'
name|'self'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'length'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'length'
op|'-='
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'if'
name|'length'
op|'<'
number|'0'
op|':'
newline|'\n'
comment|'# Chop off the extra:'
nl|'\n'
indent|'                    '
name|'yield'
name|'chunk'
op|'['
op|':'
name|'length'
op|']'
newline|'\n'
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'yield'
name|'chunk'
newline|'\n'
nl|'\n'
DECL|member|app_iter_ranges
dedent|''
dedent|''
name|'def'
name|'app_iter_ranges'
op|'('
name|'self'
op|','
name|'ranges'
op|','
name|'content_type'
op|','
name|'boundary'
op|','
name|'size'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Returns an iterator over the data file for a set of ranges"""'
newline|'\n'
name|'if'
op|'('
name|'not'
name|'ranges'
name|'or'
name|'len'
op|'('
name|'ranges'
op|')'
op|'=='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'yield'
string|"''"
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'suppress_file_closing'
op|'='
name|'True'
newline|'\n'
name|'for'
name|'chunk'
name|'in'
name|'multi_range_iterator'
op|'('
nl|'\n'
name|'ranges'
op|','
name|'content_type'
op|','
name|'boundary'
op|','
name|'size'
op|','
nl|'\n'
name|'self'
op|'.'
name|'app_iter_range'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'yield'
name|'chunk'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'suppress_file_closing'
op|'='
name|'False'
newline|'\n'
name|'self'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|_handle_close_quarantine
dedent|''
dedent|''
dedent|''
name|'def'
name|'_handle_close_quarantine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Check if file needs to be quarantined"""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'obj_size'
op|'='
name|'self'
op|'.'
name|'get_data_file_size'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'quarantine'
op|'('
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileNotExist'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'iter_etag'
name|'and'
name|'self'
op|'.'
name|'started_at_0'
name|'and'
name|'self'
op|'.'
name|'read_to_eof'
name|'and'
string|"'ETag'"
name|'in'
name|'self'
op|'.'
name|'metadata'
name|'and'
name|'self'
op|'.'
name|'iter_etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|'!='
name|'self'
op|'.'
name|'metadata'
op|'.'
name|'get'
op|'('
string|"'ETag'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'quarantine'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|close
dedent|''
dedent|''
name|'def'
name|'close'
op|'('
name|'self'
op|','
name|'verify_file'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Close the file. Will handle quarantining file if necessary.\n\n        :param verify_file: Defaults to True. If false, will not check\n                            file to see if it needs quarantining.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'fp'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'verify_file'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'_handle_close_quarantine'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|','
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'ERROR DiskFile %(data_file)s in '"
nl|'\n'
string|"'%(data_dir)s close failure: %(exc)s : %(stack)'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'exc'"
op|':'
name|'e'
op|','
string|"'stack'"
op|':'
string|"''"
op|'.'
name|'join'
op|'('
name|'traceback'
op|'.'
name|'format_stack'
op|'('
op|')'
op|')'
op|','
nl|'\n'
string|"'data_file'"
op|':'
name|'self'
op|'.'
name|'data_file'
op|','
string|"'data_dir'"
op|':'
name|'self'
op|'.'
name|'datadir'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'fp'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fp'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|is_deleted
dedent|''
dedent|''
dedent|''
name|'def'
name|'is_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check if the file is deleted.\n\n        :returns: True if the file doesn\'t exist or has been flagged as\n                  deleted.\n        """'
newline|'\n'
name|'return'
name|'not'
name|'self'
op|'.'
name|'data_file'
name|'or'
string|"'deleted'"
name|'in'
name|'self'
op|'.'
name|'metadata'
newline|'\n'
nl|'\n'
DECL|member|is_expired
dedent|''
name|'def'
name|'is_expired'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check if the file is expired.\n\n        :returns: True if the file has an X-Delete-At in the past\n        """'
newline|'\n'
name|'return'
op|'('
string|"'X-Delete-At'"
name|'in'
name|'self'
op|'.'
name|'metadata'
name|'and'
nl|'\n'
name|'int'
op|'('
name|'self'
op|'.'
name|'metadata'
op|'['
string|"'X-Delete-At'"
op|']'
op|')'
op|'<='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'contextmanager'
newline|'\n'
DECL|member|mkstemp
name|'def'
name|'mkstemp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Contextmanager to make a temporary file."""'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'self'
op|'.'
name|'tmpdir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mkdirs'
op|'('
name|'self'
op|'.'
name|'tmpdir'
op|')'
newline|'\n'
dedent|''
name|'fd'
op|','
name|'tmppath'
op|'='
name|'mkstemp'
op|'('
name|'dir'
op|'='
name|'self'
op|'.'
name|'tmpdir'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'yield'
name|'fd'
op|','
name|'tmppath'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'close'
op|'('
name|'fd'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'tmppath'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|put
dedent|''
dedent|''
dedent|''
name|'def'
name|'put'
op|'('
name|'self'
op|','
name|'fd'
op|','
name|'tmppath'
op|','
name|'metadata'
op|','
name|'extension'
op|'='
string|"'.data'"
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Finalize writing the file on disk, and renames it from the temp file to\n        the real location.  This should be called after the data has been\n        written to the temp file.\n\n        :params fd: file descriptor of the temp file\n        :param tmppath: path to the temporary file being used\n        :param metadata: dictionary of metadata to be written\n        :param extension: extension to be used when making the file\n        """'
newline|'\n'
name|'metadata'
op|'['
string|"'name'"
op|']'
op|'='
name|'self'
op|'.'
name|'name'
newline|'\n'
name|'timestamp'
op|'='
name|'normalize_timestamp'
op|'('
name|'metadata'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
newline|'\n'
name|'write_metadata'
op|'('
name|'fd'
op|','
name|'metadata'
op|')'
newline|'\n'
name|'if'
string|"'Content-Length'"
name|'in'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'drop_cache'
op|'('
name|'fd'
op|','
number|'0'
op|','
name|'int'
op|'('
name|'metadata'
op|'['
string|"'Content-Length'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'fsync'
op|','
name|'fd'
op|')'
newline|'\n'
name|'invalidate_hash'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'self'
op|'.'
name|'datadir'
op|')'
op|')'
newline|'\n'
name|'renamer'
op|'('
name|'tmppath'
op|','
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'datadir'
op|','
name|'timestamp'
op|'+'
name|'extension'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'metadata'
op|'='
name|'metadata'
newline|'\n'
nl|'\n'
DECL|member|unlinkold
dedent|''
name|'def'
name|'unlinkold'
op|'('
name|'self'
op|','
name|'timestamp'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Remove any older versions of the object file.  Any file that has an\n        older timestamp than timestamp will be deleted.\n\n        :param timestamp: timestamp to compare with each file\n        """'
newline|'\n'
name|'timestamp'
op|'='
name|'normalize_timestamp'
op|'('
name|'timestamp'
op|')'
newline|'\n'
name|'for'
name|'fname'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'self'
op|'.'
name|'datadir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'fname'
op|'<'
name|'timestamp'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'datadir'
op|','
name|'fname'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|','
name|'err'
op|':'
comment|'# pragma: no cover'
newline|'\n'
indent|'                    '
name|'if'
name|'err'
op|'.'
name|'errno'
op|'!='
name|'errno'
op|'.'
name|'ENOENT'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
newline|'\n'
nl|'\n'
DECL|member|drop_cache
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'drop_cache'
op|'('
name|'self'
op|','
name|'fd'
op|','
name|'offset'
op|','
name|'length'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Method for no-oping buffer cache drop method."""'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'keep_cache'
op|':'
newline|'\n'
indent|'            '
name|'drop_buffer_cache'
op|'('
name|'fd'
op|','
name|'offset'
op|','
name|'length'
op|')'
newline|'\n'
nl|'\n'
DECL|member|quarantine
dedent|''
dedent|''
name|'def'
name|'quarantine'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        In the case that a file is corrupted, move it to a quarantined\n        area to allow replication to fix it.\n\n        :returns: if quarantine is successful, path to quarantined\n                  directory otherwise None\n        """'
newline|'\n'
name|'if'
name|'not'
op|'('
name|'self'
op|'.'
name|'is_deleted'
op|'('
op|')'
name|'or'
name|'self'
op|'.'
name|'quarantined_dir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'quarantined_dir'
op|'='
name|'quarantine_renamer'
op|'('
name|'self'
op|'.'
name|'device_path'
op|','
nl|'\n'
name|'self'
op|'.'
name|'data_file'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'quarantines'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'quarantined_dir'
newline|'\n'
nl|'\n'
DECL|member|get_data_file_size
dedent|''
dedent|''
name|'def'
name|'get_data_file_size'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Returns the os.path.getsize for the file.  Raises an exception if this\n        file does not match the Content-Length stored in the metadata. Or if\n        self.data_file does not exist.\n\n        :returns: file size as an int\n        :raises DiskFileError: on file size mismatch.\n        :raises DiskFileNotExist: on file not existing (including deleted)\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'file_size'
op|'='
number|'0'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'data_file'
op|':'
newline|'\n'
indent|'                '
name|'file_size'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'getsize'
op|'('
name|'self'
op|'.'
name|'data_file'
op|')'
newline|'\n'
name|'if'
string|"'Content-Length'"
name|'in'
name|'self'
op|'.'
name|'metadata'
op|':'
newline|'\n'
indent|'                    '
name|'metadata_size'
op|'='
name|'int'
op|'('
name|'self'
op|'.'
name|'metadata'
op|'['
string|"'Content-Length'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'file_size'
op|'!='
name|'metadata_size'
op|':'
newline|'\n'
indent|'                        '
name|'raise'
name|'DiskFileError'
op|'('
nl|'\n'
string|"'Content-Length of %s does not match file size '"
nl|'\n'
string|"'of %s'"
op|'%'
op|'('
name|'metadata_size'
op|','
name|'file_size'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'file_size'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'OSError'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'err'
op|'.'
name|'errno'
op|'!='
name|'errno'
op|'.'
name|'ENOENT'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'raise'
name|'DiskFileNotExist'
op|'('
string|"'Data File does not exist.'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ObjectController
dedent|''
dedent|''
name|'class'
name|'ObjectController'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""Implements the WSGI application for the Swift Object Server."""'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'conf'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Creates a new WSGI application for the Swift Object Server. An\n        example configuration is given at\n        <source-dir>/etc/object-server.conf-sample or\n        /etc/swift/object-server.conf-sample.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'get_logger'
op|'('
name|'conf'
op|','
name|'log_route'
op|'='
string|"'object-server'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'devices'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'devices'"
op|','
string|"'/srv/node/'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mount_check'
op|'='
name|'config_true_value'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'mount_check'"
op|','
string|"'true'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'node_timeout'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'node_timeout'"
op|','
number|'3'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn_timeout'
op|'='
name|'float'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'conn_timeout'"
op|','
number|'0.5'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'disk_chunk_size'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'disk_chunk_size'"
op|','
number|'65536'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'network_chunk_size'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'network_chunk_size'"
op|','
number|'65536'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'keep_cache_size'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'keep_cache_size'"
op|','
number|'5242880'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'keep_cache_private'
op|'='
name|'config_true_value'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'keep_cache_private'"
op|','
string|"'false'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'log_requests'
op|'='
name|'config_true_value'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'log_requests'"
op|','
string|"'true'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'max_upload_time'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'max_upload_time'"
op|','
number|'86400'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'slow'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'slow'"
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'bytes_per_sync'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'mb_per_sync'"
op|','
number|'512'
op|')'
op|')'
op|'*'
number|'1024'
op|'*'
number|'1024'
newline|'\n'
name|'default_allowed_headers'
op|'='
string|"'''\n            content-disposition,\n            content-encoding,\n            x-delete-at,\n            x-object-manifest,\n        '''"
newline|'\n'
name|'self'
op|'.'
name|'allowed_headers'
op|'='
name|'set'
op|'('
nl|'\n'
name|'i'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'lower'
op|'('
op|')'
name|'for'
name|'i'
name|'in'
nl|'\n'
name|'conf'
op|'.'
name|'get'
op|'('
string|"'allowed_headers'"
op|','
name|'default_allowed_headers'
op|')'
op|'.'
name|'split'
op|'('
string|"','"
op|')'
nl|'\n'
name|'if'
name|'i'
op|'.'
name|'strip'
op|'('
op|')'
name|'and'
name|'i'
op|'.'
name|'strip'
op|'('
op|')'
op|'.'
name|'lower'
op|'('
op|')'
name|'not'
name|'in'
name|'DISALLOWED_HEADERS'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'expiring_objects_account'
op|'='
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'auto_create_account_prefix'"
op|')'
name|'or'
string|"'.'"
op|')'
op|'+'
string|"'expiring_objects'"
newline|'\n'
name|'self'
op|'.'
name|'expiring_objects_container_divisor'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'expiring_objects_container_divisor'"
op|')'
name|'or'
number|'86400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|async_update
dedent|''
name|'def'
name|'async_update'
op|'('
name|'self'
op|','
name|'op'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'host'
op|','
name|'partition'
op|','
nl|'\n'
name|'contdevice'
op|','
name|'headers_out'
op|','
name|'objdevice'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Sends or saves an async update.\n\n        :param op: operation performed (ex: \'PUT\', or \'DELETE\')\n        :param account: account name for the object\n        :param container: container name for the object\n        :param obj: object name\n        :param host: host that the container is on\n        :param partition: partition that the container is on\n        :param contdevice: device name that the container is on\n        :param headers_out: dictionary of headers to send in the container\n                            request\n        :param objdevice: device name that the object is in\n        """'
newline|'\n'
name|'full_path'
op|'='
string|"'/%s/%s/%s'"
op|'%'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'if'
name|'all'
op|'('
op|'['
name|'host'
op|','
name|'partition'
op|','
name|'contdevice'
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'with'
name|'ConnectionTimeout'
op|'('
name|'self'
op|'.'
name|'conn_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'ip'
op|','
name|'port'
op|'='
name|'host'
op|'.'
name|'rsplit'
op|'('
string|"':'"
op|','
number|'1'
op|')'
newline|'\n'
name|'conn'
op|'='
name|'http_connect'
op|'('
name|'ip'
op|','
name|'port'
op|','
name|'contdevice'
op|','
name|'partition'
op|','
name|'op'
op|','
nl|'\n'
name|'full_path'
op|','
name|'headers_out'
op|')'
newline|'\n'
dedent|''
name|'with'
name|'Timeout'
op|'('
name|'self'
op|'.'
name|'node_timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'response'
op|'='
name|'conn'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'if'
name|'is_success'
op|'('
name|'response'
op|'.'
name|'status'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'return'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'ERROR Container update failed '"
nl|'\n'
string|"'(saving for async update later): %(status)d '"
nl|'\n'
string|"'response from %(ip)s:%(port)s/%(dev)s'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'status'"
op|':'
name|'response'
op|'.'
name|'status'
op|','
string|"'ip'"
op|':'
name|'ip'
op|','
string|"'port'"
op|':'
name|'port'
op|','
nl|'\n'
string|"'dev'"
op|':'
name|'contdevice'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'ERROR container update failed with '"
nl|'\n'
string|"'%(ip)s:%(port)s/%(dev)s (saving for async update later)'"
op|')'
op|','
nl|'\n'
op|'{'
string|"'ip'"
op|':'
name|'ip'
op|','
string|"'port'"
op|':'
name|'port'
op|','
string|"'dev'"
op|':'
name|'contdevice'
op|'}'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'async_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'objdevice'
op|','
name|'ASYNCDIR'
op|')'
newline|'\n'
name|'ohash'
op|'='
name|'hash_path'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'async_pendings'"
op|')'
newline|'\n'
name|'write_pickle'
op|'('
nl|'\n'
op|'{'
string|"'op'"
op|':'
name|'op'
op|','
string|"'account'"
op|':'
name|'account'
op|','
string|"'container'"
op|':'
name|'container'
op|','
nl|'\n'
string|"'obj'"
op|':'
name|'obj'
op|','
string|"'headers'"
op|':'
name|'headers_out'
op|'}'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'async_dir'
op|','
name|'ohash'
op|'['
op|'-'
number|'3'
op|':'
op|']'
op|','
name|'ohash'
op|'+'
string|"'-'"
op|'+'
nl|'\n'
name|'normalize_timestamp'
op|'('
name|'headers_out'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
op|')'
op|','
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'objdevice'
op|','
string|"'tmp'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|container_update
dedent|''
name|'def'
name|'container_update'
op|'('
name|'self'
op|','
name|'op'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'headers_in'
op|','
nl|'\n'
name|'headers_out'
op|','
name|'objdevice'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Update the container when objects are updated.\n\n        :param op: operation performed (ex: \'PUT\', or \'DELETE\')\n        :param account: account name for the object\n        :param container: container name for the object\n        :param obj: object name\n        :param headers_in: dictionary of headers from the original request\n        :param headers_out: dictionary of headers to send in the container\n                            request\n        :param objdevice: device name that the object is in\n        """'
newline|'\n'
name|'host'
op|'='
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Container-Host'"
op|','
name|'None'
op|')'
newline|'\n'
name|'partition'
op|'='
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Container-Partition'"
op|','
name|'None'
op|')'
newline|'\n'
name|'contdevice'
op|'='
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Container-Device'"
op|','
name|'None'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'all'
op|'('
op|'['
name|'host'
op|','
name|'partition'
op|','
name|'contdevice'
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'async_update'
op|'('
name|'op'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'host'
op|','
name|'partition'
op|','
nl|'\n'
name|'contdevice'
op|','
name|'headers_out'
op|','
name|'objdevice'
op|')'
newline|'\n'
nl|'\n'
DECL|member|delete_at_update
dedent|''
name|'def'
name|'delete_at_update'
op|'('
name|'self'
op|','
name|'op'
op|','
name|'delete_at'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'headers_in'
op|','
name|'objdevice'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Update the expiring objects container when objects are updated.\n\n        :param op: operation performed (ex: \'PUT\', or \'DELETE\')\n        :param account: account name for the object\n        :param container: container name for the object\n        :param obj: object name\n        :param headers_in: dictionary of headers from the original request\n        :param objdevice: device name that the object is in\n        """'
newline|'\n'
comment|'# Quick cap that will work from now until Sat Nov 20 17:46:39 2286'
nl|'\n'
comment|'# At that time, Swift will be so popular and pervasive I will have'
nl|'\n'
comment|'# created income for thousands of future programmers.'
nl|'\n'
name|'delete_at'
op|'='
name|'max'
op|'('
name|'min'
op|'('
name|'delete_at'
op|','
number|'9999999999'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'host'
op|'='
name|'partition'
op|'='
name|'contdevice'
op|'='
name|'None'
newline|'\n'
name|'headers_out'
op|'='
op|'{'
string|"'x-timestamp'"
op|':'
name|'headers_in'
op|'['
string|"'x-timestamp'"
op|']'
op|','
nl|'\n'
string|"'x-trans-id'"
op|':'
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'x-trans-id'"
op|','
string|"'-'"
op|')'
op|'}'
newline|'\n'
name|'if'
name|'op'
op|'!='
string|"'DELETE'"
op|':'
newline|'\n'
indent|'            '
name|'host'
op|'='
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At-Host'"
op|','
name|'None'
op|')'
newline|'\n'
name|'partition'
op|'='
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At-Partition'"
op|','
name|'None'
op|')'
newline|'\n'
name|'contdevice'
op|'='
name|'headers_in'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At-Device'"
op|','
name|'None'
op|')'
newline|'\n'
name|'headers_out'
op|'['
string|"'x-size'"
op|']'
op|'='
string|"'0'"
newline|'\n'
name|'headers_out'
op|'['
string|"'x-content-type'"
op|']'
op|'='
string|"'text/plain'"
newline|'\n'
name|'headers_out'
op|'['
string|"'x-etag'"
op|']'
op|'='
string|"'d41d8cd98f00b204e9800998ecf8427e'"
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'async_update'
op|'('
nl|'\n'
name|'op'
op|','
name|'self'
op|'.'
name|'expiring_objects_account'
op|','
nl|'\n'
name|'str'
op|'('
name|'delete_at'
op|'/'
name|'self'
op|'.'
name|'expiring_objects_container_divisor'
op|'*'
nl|'\n'
name|'self'
op|'.'
name|'expiring_objects_container_divisor'
op|')'
op|','
nl|'\n'
string|"'%s-%s/%s/%s'"
op|'%'
op|'('
name|'delete_at'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
op|','
nl|'\n'
name|'host'
op|','
name|'partition'
op|','
name|'contdevice'
op|','
name|'headers_out'
op|','
name|'objdevice'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'timing_stats'
newline|'\n'
DECL|member|POST
name|'def'
name|'POST'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handle HTTP POST requests for the Swift Object Server."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|'='
name|'split_path'
op|'('
name|'unquote'
op|'('
name|'request'
op|'.'
name|'path'
op|')'
op|','
number|'5'
op|','
number|'5'
op|','
name|'True'
op|')'
newline|'\n'
name|'validate_device_partition'
op|'('
name|'device'
op|','
name|'partition'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
name|'str'
op|'('
name|'err'
op|')'
op|','
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'x-timestamp'"
name|'not'
name|'in'
name|'request'
op|'.'
name|'headers'
name|'or'
name|'not'
name|'check_float'
op|'('
name|'request'
op|'.'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
string|"'Missing timestamp'"
op|','
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
dedent|''
name|'new_delete_at'
op|'='
name|'int'
op|'('
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At'"
op|')'
name|'or'
number|'0'
op|')'
newline|'\n'
name|'if'
name|'new_delete_at'
name|'and'
name|'new_delete_at'
op|'<'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
string|"'X-Delete-At in past'"
op|','
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'mount_check'
name|'and'
name|'not'
name|'check_mount'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'device'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'file'
op|'='
name|'DiskFile'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
nl|'\n'
name|'obj'
op|','
name|'self'
op|'.'
name|'logger'
op|','
name|'disk_chunk_size'
op|'='
name|'self'
op|'.'
name|'disk_chunk_size'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'file'
op|'.'
name|'is_deleted'
op|'('
op|')'
name|'or'
name|'file'
op|'.'
name|'is_expired'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'file_size'
op|'='
name|'file'
op|'.'
name|'get_data_file_size'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'DiskFileError'
op|','
name|'DiskFileNotExist'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'.'
name|'quarantine'
op|'('
op|')'
newline|'\n'
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'request'
op|'.'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|'}'
newline|'\n'
name|'metadata'
op|'.'
name|'update'
op|'('
name|'val'
name|'for'
name|'val'
name|'in'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
nl|'\n'
name|'if'
name|'val'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-object-meta-'"
op|')'
op|')'
newline|'\n'
name|'for'
name|'header_key'
name|'in'
name|'self'
op|'.'
name|'allowed_headers'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'header_key'
name|'in'
name|'request'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'header_caps'
op|'='
name|'header_key'
op|'.'
name|'title'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'['
name|'header_caps'
op|']'
op|'='
name|'request'
op|'.'
name|'headers'
op|'['
name|'header_key'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'old_delete_at'
op|'='
name|'int'
op|'('
name|'file'
op|'.'
name|'metadata'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At'"
op|')'
name|'or'
number|'0'
op|')'
newline|'\n'
name|'if'
name|'old_delete_at'
op|'!='
name|'new_delete_at'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'new_delete_at'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'delete_at_update'
op|'('
string|"'PUT'"
op|','
name|'new_delete_at'
op|','
name|'account'
op|','
name|'container'
op|','
nl|'\n'
name|'obj'
op|','
name|'request'
op|'.'
name|'headers'
op|','
name|'device'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'old_delete_at'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'delete_at_update'
op|'('
string|"'DELETE'"
op|','
name|'old_delete_at'
op|','
name|'account'
op|','
nl|'\n'
name|'container'
op|','
name|'obj'
op|','
name|'request'
op|'.'
name|'headers'
op|','
name|'device'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'with'
name|'file'
op|'.'
name|'mkstemp'
op|'('
op|')'
name|'as'
op|'('
name|'fd'
op|','
name|'tmppath'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'.'
name|'put'
op|'('
name|'fd'
op|','
name|'tmppath'
op|','
name|'metadata'
op|','
name|'extension'
op|'='
string|"'.meta'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'HTTPAccepted'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'timing_stats'
newline|'\n'
DECL|member|PUT
name|'def'
name|'PUT'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handle HTTP PUT requests for the Swift Object Server."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|'='
name|'split_path'
op|'('
name|'unquote'
op|'('
name|'request'
op|'.'
name|'path'
op|')'
op|','
number|'5'
op|','
number|'5'
op|','
name|'True'
op|')'
newline|'\n'
name|'validate_device_partition'
op|'('
name|'device'
op|','
name|'partition'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
name|'str'
op|'('
name|'err'
op|')'
op|','
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'mount_check'
name|'and'
name|'not'
name|'check_mount'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'device'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'x-timestamp'"
name|'not'
name|'in'
name|'request'
op|'.'
name|'headers'
name|'or'
name|'not'
name|'check_float'
op|'('
name|'request'
op|'.'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
string|"'Missing timestamp'"
op|','
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
dedent|''
name|'error_response'
op|'='
name|'check_object_creation'
op|'('
name|'request'
op|','
name|'obj'
op|')'
newline|'\n'
name|'if'
name|'error_response'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'error_response'
newline|'\n'
dedent|''
name|'new_delete_at'
op|'='
name|'int'
op|'('
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At'"
op|')'
name|'or'
number|'0'
op|')'
newline|'\n'
name|'if'
name|'new_delete_at'
name|'and'
name|'new_delete_at'
op|'<'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
string|"'X-Delete-At in past'"
op|','
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
dedent|''
name|'file'
op|'='
name|'DiskFile'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
nl|'\n'
name|'obj'
op|','
name|'self'
op|'.'
name|'logger'
op|','
name|'disk_chunk_size'
op|'='
name|'self'
op|'.'
name|'disk_chunk_size'
op|')'
newline|'\n'
name|'orig_timestamp'
op|'='
name|'file'
op|'.'
name|'metadata'
op|'.'
name|'get'
op|'('
string|"'X-Timestamp'"
op|')'
newline|'\n'
name|'upload_expiration'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
name|'self'
op|'.'
name|'max_upload_time'
newline|'\n'
name|'etag'
op|'='
name|'md5'
op|'('
op|')'
newline|'\n'
name|'upload_size'
op|'='
number|'0'
newline|'\n'
name|'last_sync'
op|'='
number|'0'
newline|'\n'
name|'with'
name|'file'
op|'.'
name|'mkstemp'
op|'('
op|')'
name|'as'
op|'('
name|'fd'
op|','
name|'tmppath'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
string|"'content-length'"
name|'in'
name|'request'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'fallocate'
op|'('
name|'fd'
op|','
name|'int'
op|'('
name|'request'
op|'.'
name|'headers'
op|'['
string|"'content-length'"
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'                    '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
nl|'\n'
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'reader'
op|'='
name|'request'
op|'.'
name|'environ'
op|'['
string|"'wsgi.input'"
op|']'
op|'.'
name|'read'
newline|'\n'
name|'for'
name|'chunk'
name|'in'
name|'iter'
op|'('
name|'lambda'
op|':'
name|'reader'
op|'('
name|'self'
op|'.'
name|'network_chunk_size'
op|')'
op|','
string|"''"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'upload_size'
op|'+='
name|'len'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'if'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'>'
name|'upload_expiration'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'PUT.timeouts'"
op|')'
newline|'\n'
name|'return'
name|'HTTPRequestTimeout'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'etag'
op|'.'
name|'update'
op|'('
name|'chunk'
op|')'
newline|'\n'
name|'while'
name|'chunk'
op|':'
newline|'\n'
indent|'                    '
name|'written'
op|'='
name|'os'
op|'.'
name|'write'
op|'('
name|'fd'
op|','
name|'chunk'
op|')'
newline|'\n'
name|'chunk'
op|'='
name|'chunk'
op|'['
name|'written'
op|':'
op|']'
newline|'\n'
comment|'# For large files sync every 512MB (by default) written'
nl|'\n'
dedent|''
name|'if'
name|'upload_size'
op|'-'
name|'last_sync'
op|'>='
name|'self'
op|'.'
name|'bytes_per_sync'
op|':'
newline|'\n'
indent|'                    '
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'fsync'
op|','
name|'fd'
op|')'
newline|'\n'
name|'drop_buffer_cache'
op|'('
name|'fd'
op|','
name|'last_sync'
op|','
name|'upload_size'
op|'-'
name|'last_sync'
op|')'
newline|'\n'
name|'last_sync'
op|'='
name|'upload_size'
newline|'\n'
dedent|''
name|'sleep'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
string|"'content-length'"
name|'in'
name|'request'
op|'.'
name|'headers'
name|'and'
name|'int'
op|'('
name|'request'
op|'.'
name|'headers'
op|'['
string|"'content-length'"
op|']'
op|')'
op|'!='
name|'upload_size'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPClientDisconnect'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'etag'
op|'='
name|'etag'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
name|'if'
string|"'etag'"
name|'in'
name|'request'
op|'.'
name|'headers'
name|'and'
name|'request'
op|'.'
name|'headers'
op|'['
string|"'etag'"
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|'!='
name|'etag'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPUnprocessableEntity'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'metadata'
op|'='
op|'{'
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'request'
op|'.'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
name|'request'
op|'.'
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|','
nl|'\n'
string|"'ETag'"
op|':'
name|'etag'
op|','
nl|'\n'
string|"'Content-Length'"
op|':'
name|'str'
op|'('
name|'upload_size'
op|')'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'metadata'
op|'.'
name|'update'
op|'('
name|'val'
name|'for'
name|'val'
name|'in'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'iteritems'
op|'('
op|')'
nl|'\n'
name|'if'
name|'val'
op|'['
number|'0'
op|']'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-object-meta-'"
op|')'
name|'and'
nl|'\n'
name|'len'
op|'('
name|'val'
op|'['
number|'0'
op|']'
op|')'
op|'>'
number|'14'
op|')'
newline|'\n'
name|'for'
name|'header_key'
name|'in'
name|'self'
op|'.'
name|'allowed_headers'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'header_key'
name|'in'
name|'request'
op|'.'
name|'headers'
op|':'
newline|'\n'
indent|'                    '
name|'header_caps'
op|'='
name|'header_key'
op|'.'
name|'title'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'['
name|'header_caps'
op|']'
op|'='
name|'request'
op|'.'
name|'headers'
op|'['
name|'header_key'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'old_delete_at'
op|'='
name|'int'
op|'('
name|'file'
op|'.'
name|'metadata'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At'"
op|')'
name|'or'
number|'0'
op|')'
newline|'\n'
name|'if'
name|'old_delete_at'
op|'!='
name|'new_delete_at'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'new_delete_at'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'delete_at_update'
op|'('
nl|'\n'
string|"'PUT'"
op|','
name|'new_delete_at'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'request'
op|'.'
name|'headers'
op|','
name|'device'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'old_delete_at'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'delete_at_update'
op|'('
nl|'\n'
string|"'DELETE'"
op|','
name|'old_delete_at'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'request'
op|'.'
name|'headers'
op|','
name|'device'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'file'
op|'.'
name|'put'
op|'('
name|'fd'
op|','
name|'tmppath'
op|','
name|'metadata'
op|')'
newline|'\n'
dedent|''
name|'file'
op|'.'
name|'unlinkold'
op|'('
name|'metadata'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'orig_timestamp'
name|'or'
name|'orig_timestamp'
op|'<'
name|'request'
op|'.'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'container_update'
op|'('
nl|'\n'
string|"'PUT'"
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'request'
op|'.'
name|'headers'
op|','
nl|'\n'
op|'{'
string|"'x-size'"
op|':'
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'Content-Length'"
op|']'
op|','
nl|'\n'
string|"'x-content-type'"
op|':'
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'Content-Type'"
op|']'
op|','
nl|'\n'
string|"'x-timestamp'"
op|':'
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'X-Timestamp'"
op|']'
op|','
nl|'\n'
string|"'x-etag'"
op|':'
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'ETag'"
op|']'
op|','
nl|'\n'
string|"'x-trans-id'"
op|':'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-trans-id'"
op|','
string|"'-'"
op|')'
op|'}'
op|','
nl|'\n'
name|'device'
op|')'
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'HTTPCreated'
op|'('
name|'request'
op|'='
name|'request'
op|','
name|'etag'
op|'='
name|'etag'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'timing_stats'
newline|'\n'
DECL|member|GET
name|'def'
name|'GET'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handle HTTP GET requests for the Swift Object Server."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|'='
name|'split_path'
op|'('
name|'unquote'
op|'('
name|'request'
op|'.'
name|'path'
op|')'
op|','
number|'5'
op|','
number|'5'
op|','
name|'True'
op|')'
newline|'\n'
name|'validate_device_partition'
op|'('
name|'device'
op|','
name|'partition'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
name|'str'
op|'('
name|'err'
op|')'
op|','
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'mount_check'
name|'and'
name|'not'
name|'check_mount'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'device'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'file'
op|'='
name|'DiskFile'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
nl|'\n'
name|'obj'
op|','
name|'self'
op|'.'
name|'logger'
op|','
name|'keep_data_fp'
op|'='
name|'True'
op|','
nl|'\n'
name|'disk_chunk_size'
op|'='
name|'self'
op|'.'
name|'disk_chunk_size'
op|','
nl|'\n'
name|'iter_hook'
op|'='
name|'sleep'
op|')'
newline|'\n'
name|'if'
name|'file'
op|'.'
name|'is_deleted'
op|'('
op|')'
name|'or'
name|'file'
op|'.'
name|'is_expired'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'if-match'"
op|')'
op|'=='
string|"'*'"
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'file_size'
op|'='
name|'file'
op|'.'
name|'get_data_file_size'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'DiskFileError'
op|','
name|'DiskFileNotExist'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'.'
name|'quarantine'
op|'('
op|')'
newline|'\n'
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'if-match'"
op|')'
name|'not'
name|'in'
op|'('
name|'None'
op|','
string|"'*'"
op|')'
name|'and'
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'ETag'"
op|']'
name|'not'
name|'in'
name|'request'
op|'.'
name|'if_match'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'if-none-match'"
op|')'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'ETag'"
op|']'
name|'in'
name|'request'
op|'.'
name|'if_none_match'
op|':'
newline|'\n'
indent|'                '
name|'resp'
op|'='
name|'HTTPNotModified'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'etag'
op|'='
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'ETag'"
op|']'
newline|'\n'
name|'file'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if_unmodified_since'
op|'='
name|'request'
op|'.'
name|'if_unmodified_since'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'OverflowError'
op|','
name|'ValueError'
op|')'
op|':'
newline|'\n'
comment|'# catches timestamps before the epoch'
nl|'\n'
indent|'            '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'if_unmodified_since'
name|'and'
name|'datetime'
op|'.'
name|'fromtimestamp'
op|'('
nl|'\n'
name|'float'
op|'('
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
op|','
name|'UTC'
op|')'
op|'>'
name|'if_unmodified_since'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'if_modified_since'
op|'='
name|'request'
op|'.'
name|'if_modified_since'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'OverflowError'
op|','
name|'ValueError'
op|')'
op|':'
newline|'\n'
comment|'# catches timestamps before the epoch'
nl|'\n'
indent|'            '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'if_modified_since'
name|'and'
name|'datetime'
op|'.'
name|'fromtimestamp'
op|'('
nl|'\n'
name|'float'
op|'('
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
op|','
name|'UTC'
op|')'
op|'<'
name|'if_modified_since'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'.'
name|'close'
op|'('
op|')'
newline|'\n'
name|'return'
name|'HTTPNotModified'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'Response'
op|'('
name|'app_iter'
op|'='
name|'file'
op|','
nl|'\n'
name|'request'
op|'='
name|'request'
op|','
name|'conditional_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'response'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
name|'file'
op|'.'
name|'metadata'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'Content-Type'"
op|','
string|"'application/octet-stream'"
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'file'
op|'.'
name|'metadata'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-object-meta-'"
op|')'
name|'or'
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
name|'self'
op|'.'
name|'allowed_headers'
op|':'
newline|'\n'
indent|'                '
name|'response'
op|'.'
name|'headers'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'response'
op|'.'
name|'etag'
op|'='
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'ETag'"
op|']'
newline|'\n'
name|'response'
op|'.'
name|'last_modified'
op|'='
name|'float'
op|'('
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
newline|'\n'
name|'response'
op|'.'
name|'content_length'
op|'='
name|'file_size'
newline|'\n'
name|'if'
name|'response'
op|'.'
name|'content_length'
op|'<'
name|'self'
op|'.'
name|'keep_cache_size'
name|'and'
op|'('
name|'self'
op|'.'
name|'keep_cache_private'
name|'or'
nl|'\n'
op|'('
string|"'X-Auth-Token'"
name|'not'
name|'in'
name|'request'
op|'.'
name|'headers'
name|'and'
nl|'\n'
string|"'X-Storage-Token'"
name|'not'
name|'in'
name|'request'
op|'.'
name|'headers'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'.'
name|'keep_cache'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
string|"'Content-Encoding'"
name|'in'
name|'file'
op|'.'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'.'
name|'content_encoding'
op|'='
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'Content-Encoding'"
op|']'
newline|'\n'
dedent|''
name|'response'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'X-Timestamp'"
op|']'
newline|'\n'
name|'return'
name|'request'
op|'.'
name|'get_response'
op|'('
name|'response'
op|')'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'timing_stats'
newline|'\n'
DECL|member|HEAD
name|'def'
name|'HEAD'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handle HTTP HEAD requests for the Swift Object Server."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|'='
name|'split_path'
op|'('
name|'unquote'
op|'('
name|'request'
op|'.'
name|'path'
op|')'
op|','
number|'5'
op|','
number|'5'
op|','
name|'True'
op|')'
newline|'\n'
name|'validate_device_partition'
op|'('
name|'device'
op|','
name|'partition'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'resp'
op|'='
name|'HTTPBadRequest'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'resp'
op|'.'
name|'content_type'
op|'='
string|"'text/plain'"
newline|'\n'
name|'resp'
op|'.'
name|'body'
op|'='
name|'str'
op|'('
name|'err'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'mount_check'
name|'and'
name|'not'
name|'check_mount'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'device'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'file'
op|'='
name|'DiskFile'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
nl|'\n'
name|'obj'
op|','
name|'self'
op|'.'
name|'logger'
op|','
name|'disk_chunk_size'
op|'='
name|'self'
op|'.'
name|'disk_chunk_size'
op|')'
newline|'\n'
name|'if'
name|'file'
op|'.'
name|'is_deleted'
op|'('
op|')'
name|'or'
name|'file'
op|'.'
name|'is_expired'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'file_size'
op|'='
name|'file'
op|'.'
name|'get_data_file_size'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'DiskFileError'
op|','
name|'DiskFileNotExist'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'.'
name|'quarantine'
op|'('
op|')'
newline|'\n'
name|'return'
name|'HTTPNotFound'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'response'
op|'='
name|'Response'
op|'('
name|'request'
op|'='
name|'request'
op|','
name|'conditional_response'
op|'='
name|'True'
op|')'
newline|'\n'
name|'response'
op|'.'
name|'headers'
op|'['
string|"'Content-Type'"
op|']'
op|'='
name|'file'
op|'.'
name|'metadata'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'Content-Type'"
op|','
string|"'application/octet-stream'"
op|')'
newline|'\n'
name|'for'
name|'key'
op|','
name|'value'
name|'in'
name|'file'
op|'.'
name|'metadata'
op|'.'
name|'iteritems'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
op|'.'
name|'startswith'
op|'('
string|"'x-object-meta-'"
op|')'
name|'or'
name|'key'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
name|'self'
op|'.'
name|'allowed_headers'
op|':'
newline|'\n'
indent|'                '
name|'response'
op|'.'
name|'headers'
op|'['
name|'key'
op|']'
op|'='
name|'value'
newline|'\n'
dedent|''
dedent|''
name|'response'
op|'.'
name|'etag'
op|'='
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'ETag'"
op|']'
newline|'\n'
name|'response'
op|'.'
name|'last_modified'
op|'='
name|'float'
op|'('
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
newline|'\n'
comment|'# Needed for container sync feature'
nl|'\n'
name|'response'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|'='
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'X-Timestamp'"
op|']'
newline|'\n'
name|'response'
op|'.'
name|'content_length'
op|'='
name|'file_size'
newline|'\n'
name|'if'
string|"'Content-Encoding'"
name|'in'
name|'file'
op|'.'
name|'metadata'
op|':'
newline|'\n'
indent|'            '
name|'response'
op|'.'
name|'content_encoding'
op|'='
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'Content-Encoding'"
op|']'
newline|'\n'
dedent|''
name|'return'
name|'response'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'timing_stats'
newline|'\n'
DECL|member|DELETE
name|'def'
name|'DELETE'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Handle HTTP DELETE requests for the Swift Object Server."""'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|'='
name|'split_path'
op|'('
name|'unquote'
op|'('
name|'request'
op|'.'
name|'path'
op|')'
op|','
number|'5'
op|','
number|'5'
op|','
name|'True'
op|')'
newline|'\n'
name|'validate_device_partition'
op|'('
name|'device'
op|','
name|'partition'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
name|'str'
op|'('
name|'e'
op|')'
op|','
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
dedent|''
name|'if'
string|"'x-timestamp'"
name|'not'
name|'in'
name|'request'
op|'.'
name|'headers'
name|'or'
name|'not'
name|'check_float'
op|'('
name|'request'
op|'.'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
string|"'Missing timestamp'"
op|','
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'mount_check'
name|'and'
name|'not'
name|'check_mount'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'device'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'response_class'
op|'='
name|'HTTPNoContent'
newline|'\n'
name|'file'
op|'='
name|'DiskFile'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'device'
op|','
name|'partition'
op|','
name|'account'
op|','
name|'container'
op|','
nl|'\n'
name|'obj'
op|','
name|'self'
op|'.'
name|'logger'
op|','
name|'disk_chunk_size'
op|'='
name|'self'
op|'.'
name|'disk_chunk_size'
op|')'
newline|'\n'
name|'if'
string|"'x-if-delete-at'"
name|'in'
name|'request'
op|'.'
name|'headers'
name|'and'
name|'int'
op|'('
name|'request'
op|'.'
name|'headers'
op|'['
string|"'x-if-delete-at'"
op|']'
op|')'
op|'!='
name|'int'
op|'('
name|'file'
op|'.'
name|'metadata'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At'"
op|')'
name|'or'
number|'0'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPPreconditionFailed'
op|'('
nl|'\n'
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'body'
op|'='
string|"'X-If-Delete-At and X-Delete-At do not match'"
op|')'
newline|'\n'
dedent|''
name|'orig_timestamp'
op|'='
name|'file'
op|'.'
name|'metadata'
op|'.'
name|'get'
op|'('
string|"'X-Timestamp'"
op|')'
newline|'\n'
name|'if'
name|'file'
op|'.'
name|'is_deleted'
op|'('
op|')'
name|'or'
name|'file'
op|'.'
name|'is_expired'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'response_class'
op|'='
name|'HTTPNotFound'
newline|'\n'
dedent|''
name|'metadata'
op|'='
op|'{'
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'request'
op|'.'
name|'headers'
op|'['
string|"'X-Timestamp'"
op|']'
op|','
string|"'deleted'"
op|':'
name|'True'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'with'
name|'file'
op|'.'
name|'mkstemp'
op|'('
op|')'
name|'as'
op|'('
name|'fd'
op|','
name|'tmppath'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'old_delete_at'
op|'='
name|'int'
op|'('
name|'file'
op|'.'
name|'metadata'
op|'.'
name|'get'
op|'('
string|"'X-Delete-At'"
op|')'
name|'or'
number|'0'
op|')'
newline|'\n'
name|'if'
name|'old_delete_at'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'delete_at_update'
op|'('
string|"'DELETE'"
op|','
name|'old_delete_at'
op|','
name|'account'
op|','
nl|'\n'
name|'container'
op|','
name|'obj'
op|','
name|'request'
op|'.'
name|'headers'
op|','
name|'device'
op|')'
newline|'\n'
dedent|''
name|'file'
op|'.'
name|'put'
op|'('
name|'fd'
op|','
name|'tmppath'
op|','
name|'metadata'
op|','
name|'extension'
op|'='
string|"'.ts'"
op|')'
newline|'\n'
dedent|''
name|'file'
op|'.'
name|'unlinkold'
op|'('
name|'metadata'
op|'['
string|"'X-Timestamp'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'orig_timestamp'
name|'or'
name|'orig_timestamp'
op|'<'
name|'request'
op|'.'
name|'headers'
op|'['
string|"'x-timestamp'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'container_update'
op|'('
nl|'\n'
string|"'DELETE'"
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
name|'request'
op|'.'
name|'headers'
op|','
nl|'\n'
op|'{'
string|"'x-timestamp'"
op|':'
name|'metadata'
op|'['
string|"'X-Timestamp'"
op|']'
op|','
nl|'\n'
string|"'x-trans-id'"
op|':'
name|'request'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-trans-id'"
op|','
string|"'-'"
op|')'
op|'}'
op|','
nl|'\n'
name|'device'
op|')'
newline|'\n'
dedent|''
name|'resp'
op|'='
name|'response_class'
op|'('
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
name|'return'
name|'resp'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'public'
newline|'\n'
op|'@'
name|'timing_stats'
newline|'\n'
DECL|member|REPLICATE
name|'def'
name|'REPLICATE'
op|'('
name|'self'
op|','
name|'request'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Handle REPLICATE requests for the Swift Object Server.  This is used\n        by the object replicator to get hashes for directories.\n        """'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'device'
op|','
name|'partition'
op|','
name|'suffix'
op|'='
name|'split_path'
op|'('
nl|'\n'
name|'unquote'
op|'('
name|'request'
op|'.'
name|'path'
op|')'
op|','
number|'2'
op|','
number|'3'
op|','
name|'True'
op|')'
newline|'\n'
name|'validate_device_partition'
op|'('
name|'device'
op|','
name|'partition'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|','
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPBadRequest'
op|'('
name|'body'
op|'='
name|'str'
op|'('
name|'e'
op|')'
op|','
name|'request'
op|'='
name|'request'
op|','
nl|'\n'
name|'content_type'
op|'='
string|"'text/plain'"
op|')'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'mount_check'
name|'and'
name|'not'
name|'check_mount'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'device'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'HTTPInsufficientStorage'
op|'('
name|'drive'
op|'='
name|'device'
op|','
name|'request'
op|'='
name|'request'
op|')'
newline|'\n'
dedent|''
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'device'
op|','
name|'DATADIR'
op|','
name|'partition'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'mkdirs'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
name|'suffixes'
op|'='
name|'suffix'
op|'.'
name|'split'
op|'('
string|"'-'"
op|')'
name|'if'
name|'suffix'
name|'else'
op|'['
op|']'
newline|'\n'
name|'_junk'
op|','
name|'hashes'
op|'='
name|'tpool_reraise'
op|'('
name|'get_hashes'
op|','
name|'path'
op|','
name|'recalculate'
op|'='
name|'suffixes'
op|')'
newline|'\n'
name|'return'
name|'Response'
op|'('
name|'body'
op|'='
name|'pickle'
op|'.'
name|'dumps'
op|'('
name|'hashes'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|__call__
dedent|''
name|'def'
name|'__call__'
op|'('
name|'self'
op|','
name|'env'
op|','
name|'start_response'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""WSGI Application entry point for the Swift Object Server."""'
newline|'\n'
name|'start_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'req'
op|'='
name|'Request'
op|'('
name|'env'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'txn_id'
op|'='
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-trans-id'"
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'check_utf8'
op|'('
name|'req'
op|'.'
name|'path_info'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'res'
op|'='
name|'HTTPPreconditionFailed'
op|'('
name|'body'
op|'='
string|"'Invalid UTF8'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
comment|"# disallow methods which have not been marked 'public'"
nl|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'method'
op|'='
name|'getattr'
op|'('
name|'self'
op|','
name|'req'
op|'.'
name|'method'
op|')'
newline|'\n'
name|'getattr'
op|'('
name|'method'
op|','
string|"'publicly_accessible'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'AttributeError'
op|':'
newline|'\n'
indent|'                    '
name|'res'
op|'='
name|'HTTPMethodNotAllowed'
op|'('
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'res'
op|'='
name|'method'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
nl|'\n'
string|"'ERROR __call__ error with %(method)s'"
nl|'\n'
string|"' %(path)s '"
op|')'
op|','
op|'{'
string|"'method'"
op|':'
name|'req'
op|'.'
name|'method'
op|','
string|"'path'"
op|':'
name|'req'
op|'.'
name|'path'
op|'}'
op|')'
newline|'\n'
name|'res'
op|'='
name|'HTTPInternalServerError'
op|'('
name|'body'
op|'='
name|'traceback'
op|'.'
name|'format_exc'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'trans_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'start_time'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'log_requests'
op|':'
newline|'\n'
indent|'            '
name|'log_line'
op|'='
string|'\'%s - - [%s] "%s %s" %s %s "%s" "%s" "%s" %.4f\''
op|'%'
op|'('
nl|'\n'
name|'req'
op|'.'
name|'remote_addr'
op|','
nl|'\n'
name|'time'
op|'.'
name|'strftime'
op|'('
string|"'%d/%b/%Y:%H:%M:%S +0000'"
op|','
nl|'\n'
name|'time'
op|'.'
name|'gmtime'
op|'('
op|')'
op|')'
op|','
nl|'\n'
name|'req'
op|'.'
name|'method'
op|','
name|'req'
op|'.'
name|'path'
op|','
name|'res'
op|'.'
name|'status'
op|'.'
name|'split'
op|'('
op|')'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'res'
op|'.'
name|'content_length'
name|'or'
string|"'-'"
op|','
name|'req'
op|'.'
name|'referer'
name|'or'
string|"'-'"
op|','
nl|'\n'
name|'req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'x-trans-id'"
op|','
string|"'-'"
op|')'
op|','
nl|'\n'
name|'req'
op|'.'
name|'user_agent'
name|'or'
string|"'-'"
op|','
nl|'\n'
name|'trans_time'
op|')'
newline|'\n'
name|'if'
name|'req'
op|'.'
name|'method'
op|'=='
string|"'REPLICATE'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
name|'log_line'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
name|'log_line'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'req'
op|'.'
name|'method'
name|'in'
op|'('
string|"'PUT'"
op|','
string|"'DELETE'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'slow'
op|'='
name|'self'
op|'.'
name|'slow'
op|'-'
name|'trans_time'
newline|'\n'
name|'if'
name|'slow'
op|'>'
number|'0'
op|':'
newline|'\n'
indent|'                '
name|'sleep'
op|'('
name|'slow'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'res'
op|'('
name|'env'
op|','
name|'start_response'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|app_factory
dedent|''
dedent|''
name|'def'
name|'app_factory'
op|'('
name|'global_conf'
op|','
op|'**'
name|'local_conf'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""paste.deploy app factory for creating WSGI object server apps"""'
newline|'\n'
name|'conf'
op|'='
name|'global_conf'
op|'.'
name|'copy'
op|'('
op|')'
newline|'\n'
name|'conf'
op|'.'
name|'update'
op|'('
name|'local_conf'
op|')'
newline|'\n'
name|'return'
name|'ObjectController'
op|'('
name|'conf'
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
