begin_unit
comment|'#!/usr/bin/python -u'
nl|'\n'
comment|'# Copyright (c) 2010-2011 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'array'
newline|'\n'
name|'from'
name|'datetime'
name|'import'
name|'datetime'
newline|'\n'
name|'import'
name|'locale'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'os'
op|'.'
name|'path'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'StringIO'
newline|'\n'
name|'import'
name|'sys'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'threading'
newline|'\n'
name|'import'
name|'uuid'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'urllib'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
name|'import'
name|'get_config'
newline|'\n'
name|'from'
name|'swift'
name|'import'
name|'Account'
op|','
name|'AuthenticationFailed'
op|','
name|'Connection'
op|','
name|'Container'
op|','
name|'File'
op|','
name|'ResponseError'
newline|'\n'
nl|'\n'
DECL|variable|config
name|'config'
op|'='
name|'get_config'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'locale'
op|'.'
name|'setlocale'
op|'('
name|'locale'
op|'.'
name|'LC_COLLATE'
op|','
name|'config'
op|'.'
name|'get'
op|'('
string|"'collate'"
op|','
string|"'C'"
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|Base
name|'class'
name|'Base'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
DECL|function|chunks
dedent|''
name|'def'
name|'chunks'
op|'('
name|'s'
op|','
name|'length'
op|'='
number|'3'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'i'
op|','
name|'j'
op|'='
number|'0'
op|','
name|'length'
newline|'\n'
name|'while'
name|'i'
op|'<'
name|'len'
op|'('
name|'s'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'yield'
name|'s'
op|'['
name|'i'
op|':'
name|'j'
op|']'
newline|'\n'
name|'i'
op|','
name|'j'
op|'='
name|'j'
op|','
name|'j'
op|'+'
name|'length'
newline|'\n'
nl|'\n'
DECL|function|timeout
dedent|''
dedent|''
name|'def'
name|'timeout'
op|'('
name|'seconds'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
DECL|class|TimeoutThread
indent|'    '
name|'class'
name|'TimeoutThread'
op|'('
name|'threading'
op|'.'
name|'Thread'
op|')'
op|':'
newline|'\n'
DECL|member|__init__
indent|'        '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'threading'
op|'.'
name|'Thread'
op|'.'
name|'__init__'
op|'('
name|'self'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'method'
op|'='
name|'method'
newline|'\n'
name|'self'
op|'.'
name|'args'
op|'='
name|'args'
newline|'\n'
name|'self'
op|'.'
name|'kwargs'
op|'='
name|'kwargs'
newline|'\n'
name|'self'
op|'.'
name|'exception'
op|'='
name|'None'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'method'
op|'('
op|'*'
name|'self'
op|'.'
name|'args'
op|','
op|'**'
name|'self'
op|'.'
name|'kwargs'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'e'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'exception'
op|'='
name|'e'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
name|'t'
op|'='
name|'TimeoutThread'
op|'('
name|'method'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
newline|'\n'
name|'t'
op|'.'
name|'start'
op|'('
op|')'
newline|'\n'
name|'t'
op|'.'
name|'join'
op|'('
name|'seconds'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'t'
op|'.'
name|'exception'
op|':'
newline|'\n'
indent|'        '
name|'raise'
name|'t'
op|'.'
name|'exception'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'t'
op|'.'
name|'isAlive'
op|'('
op|')'
op|':'
newline|'\n'
indent|'        '
name|'t'
op|'.'
name|'_Thread__stop'
op|'('
op|')'
newline|'\n'
name|'return'
name|'True'
newline|'\n'
dedent|''
name|'return'
name|'False'
newline|'\n'
nl|'\n'
DECL|class|Utils
dedent|''
name|'class'
name|'Utils'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|create_ascii_name
name|'def'
name|'create_ascii_name'
op|'('
name|'cls'
op|','
name|'length'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'uuid'
op|'.'
name|'uuid4'
op|'('
op|')'
op|'.'
name|'hex'
newline|'\n'
nl|'\n'
dedent|''
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|create_utf8_name
name|'def'
name|'create_utf8_name'
op|'('
name|'cls'
op|','
name|'length'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'length'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'length'
op|'='
number|'15'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'length'
op|'='
name|'int'
op|'('
name|'length'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'utf8_chars'
op|'='
string|"u'\\uF10F\\uD20D\\uB30B\\u9409\\u8508\\u5605\\u3703\\u1801'"
string|"u'\\u0900\\uF110\\uD20E\\uB30C\\u940A\\u8509\\u5606\\u3704'"
string|"u'\\u1802\\u0901\\uF111\\uD20F\\uB30D\\u940B\\u850A\\u5607'"
string|"u'\\u3705\\u1803\\u0902\\uF112\\uD210\\uB30E\\u940C\\u850B'"
string|"u'\\u5608\\u3706\\u1804\\u0903\\u03A9\\u2603'"
newline|'\n'
name|'return'
string|"''"
op|'.'
name|'join'
op|'('
op|'['
name|'random'
op|'.'
name|'choice'
op|'('
name|'utf8_chars'
op|')'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
name|'length'
op|')'
op|']'
op|')'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
nl|'\n'
DECL|variable|create_name
dedent|''
name|'create_name'
op|'='
name|'create_ascii_name'
newline|'\n'
nl|'\n'
DECL|class|Base
dedent|''
name|'class'
name|'Base'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cls'
op|'='
name|'type'
op|'('
name|'self'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'cls'
op|'.'
name|'set_up'
op|':'
newline|'\n'
indent|'            '
name|'cls'
op|'.'
name|'env'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'set_up'
op|'='
name|'True'
newline|'\n'
nl|'\n'
DECL|member|assert_body
dedent|''
dedent|''
name|'def'
name|'assert_body'
op|'('
name|'self'
op|','
name|'body'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'response_body'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'conn'
op|'.'
name|'response'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'response_body'
op|'=='
name|'body'
op|','
nl|'\n'
string|"'Body returned: %s'"
op|'%'
op|'('
name|'response_body'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|assert_status
dedent|''
name|'def'
name|'assert_status'
op|'('
name|'self'
op|','
name|'status_or_statuses'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'conn'
op|'.'
name|'response'
op|'.'
name|'status'
op|'=='
name|'status_or_statuses'
name|'or'
nl|'\n'
op|'('
name|'hasattr'
op|'('
name|'status_or_statuses'
op|','
string|"'__iter__'"
op|')'
name|'and'
nl|'\n'
name|'self'
op|'.'
name|'env'
op|'.'
name|'conn'
op|'.'
name|'response'
op|'.'
name|'status'
name|'in'
name|'status_or_statuses'
op|')'
op|','
nl|'\n'
string|"'Status returned: %d Expected: %s'"
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'conn'
op|'.'
name|'response'
op|'.'
name|'status'
op|','
name|'status_or_statuses'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|Base2
dedent|''
dedent|''
name|'class'
name|'Base2'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Utils'
op|'.'
name|'create_name'
op|'='
name|'Utils'
op|'.'
name|'create_utf8_name'
newline|'\n'
name|'super'
op|'('
name|'Base2'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'Utils'
op|'.'
name|'create_name'
op|'='
name|'Utils'
op|'.'
name|'create_ascii_name'
newline|'\n'
nl|'\n'
DECL|class|TestAccountEnv
dedent|''
dedent|''
name|'class'
name|'TestAccountEnv'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cls'
op|'.'
name|'conn'
op|'='
name|'Connection'
op|'('
name|'config'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'conn'
op|'.'
name|'authenticate'
op|'('
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'account'
op|'='
name|'Account'
op|'('
name|'cls'
op|'.'
name|'conn'
op|','
name|'config'
op|'.'
name|'get'
op|'('
string|"'account'"
op|','
nl|'\n'
name|'config'
op|'['
string|"'username'"
op|']'
op|')'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'account'
op|'.'
name|'delete_containers'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'cls'
op|'.'
name|'containers'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cont'
op|'='
name|'cls'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'cont'
op|'.'
name|'create'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ResponseError'
op|'('
name|'cls'
op|'.'
name|'conn'
op|'.'
name|'response'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'cls'
op|'.'
name|'containers'
op|'.'
name|'append'
op|'('
name|'cont'
op|')'
newline|'\n'
nl|'\n'
DECL|class|TestAccountDev
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestAccountDev'
op|'('
name|'Base'
op|')'
op|':'
newline|'\n'
DECL|variable|env
indent|'    '
name|'env'
op|'='
name|'TestAccountEnv'
newline|'\n'
DECL|variable|set_up
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|class|TestAccountDevUTF8
dedent|''
name|'class'
name|'TestAccountDevUTF8'
op|'('
name|'Base2'
op|','
name|'TestAccountDev'
op|')'
op|':'
newline|'\n'
DECL|variable|set_up
indent|'    '
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|class|TestAccount
dedent|''
name|'class'
name|'TestAccount'
op|'('
name|'Base'
op|')'
op|':'
newline|'\n'
DECL|variable|env
indent|'    '
name|'env'
op|'='
name|'TestAccountEnv'
newline|'\n'
DECL|variable|set_up
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|testNoAuthToken
name|'def'
name|'testNoAuthToken'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'info'
op|','
nl|'\n'
name|'cfg'
op|'='
op|'{'
string|"'no_auth_token'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
op|'['
number|'401'
op|','
number|'412'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|','
nl|'\n'
name|'cfg'
op|'='
op|'{'
string|"'no_auth_token'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
op|'['
number|'401'
op|','
number|'412'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testInvalidUTF8Path
dedent|''
name|'def'
name|'testInvalidUTF8Path'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'invalid_utf8'
op|'='
name|'Utils'
op|'.'
name|'create_utf8_name'
op|'('
op|')'
op|'['
op|':'
op|':'
op|'-'
number|'1'
op|']'
newline|'\n'
name|'container'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'invalid_utf8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'container'
op|'.'
name|'create'
op|'('
name|'cfg'
op|'='
op|'{'
string|"'no_path_quote'"
op|':'
name|'True'
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'412'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_body'
op|'('
string|"'Invalid UTF8'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|testVersionOnlyPath
dedent|''
name|'def'
name|'testVersionOnlyPath'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'conn'
op|'.'
name|'make_request'
op|'('
string|"'PUT'"
op|','
nl|'\n'
name|'cfg'
op|'='
op|'{'
string|"'version_only_path'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'412'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_body'
op|'('
string|"'Bad URL'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|testInvalidPath
dedent|''
name|'def'
name|'testInvalidPath'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'was_url'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'conn'
op|'.'
name|'storage_url'
newline|'\n'
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'conn'
op|'.'
name|'storage_url'
op|'='
string|'"/%s"'
op|'%'
name|'was_url'
newline|'\n'
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'conn'
op|'.'
name|'make_request'
op|'('
string|"'GET'"
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'conn'
op|'.'
name|'storage_url'
op|'='
name|'was_url'
newline|'\n'
nl|'\n'
DECL|member|testPUT
dedent|''
dedent|''
name|'def'
name|'testPUT'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'conn'
op|'.'
name|'make_request'
op|'('
string|"'PUT'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
op|'['
number|'403'
op|','
number|'405'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testAccountHead
dedent|''
name|'def'
name|'testAccountHead'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try_count'
op|'='
number|'0'
newline|'\n'
name|'while'
name|'try_count'
op|'<'
number|'5'
op|':'
newline|'\n'
indent|'            '
name|'try_count'
op|'+='
number|'1'
newline|'\n'
nl|'\n'
name|'info'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'info'
op|'('
op|')'
newline|'\n'
name|'for'
name|'field'
name|'in'
op|'['
string|"'object_count'"
op|','
string|"'container_count'"
op|','
string|"'bytes_used'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'info'
op|'['
name|'field'
op|']'
op|'>='
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'info'
op|'['
string|"'container_count'"
op|']'
op|'=='
name|'len'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'containers'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'try_count'
op|'<'
number|'5'
op|':'
newline|'\n'
indent|'                '
name|'time'
op|'.'
name|'sleep'
op|'('
number|'1'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'info'
op|'['
string|"'container_count'"
op|']'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'containers'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'204'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testContainerSerializedInfo
dedent|''
name|'def'
name|'testContainerSerializedInfo'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'container_info'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'container'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'containers'
op|':'
newline|'\n'
indent|'            '
name|'info'
op|'='
op|'{'
string|"'bytes'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'info'
op|'['
string|"'count'"
op|']'
op|'='
name|'random'
op|'.'
name|'randint'
op|'('
number|'10'
op|','
number|'30'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'info'
op|'['
string|"'count'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'file'
op|'='
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'bytes'
op|'='
name|'random'
op|'.'
name|'randint'
op|'('
number|'1'
op|','
number|'32768'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'write_random'
op|'('
name|'bytes'
op|')'
newline|'\n'
name|'info'
op|'['
string|"'bytes'"
op|']'
op|'+='
name|'bytes'
newline|'\n'
nl|'\n'
dedent|''
name|'container_info'
op|'['
name|'container'
op|'.'
name|'name'
op|']'
op|'='
name|'info'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'format'
name|'in'
op|'['
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'a'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|'('
nl|'\n'
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|'}'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'a'
op|'['
string|"'count'"
op|']'
op|'>='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'a'
op|'['
string|"'bytes'"
op|']'
op|'>='
number|'0'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'headers'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'conn'
op|'.'
name|'response'
op|'.'
name|'getheaders'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'format'
op|'=='
string|"'json'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|','
nl|'\n'
string|"'application/json; charset=utf8'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'format'
op|'=='
string|"'xml'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|','
nl|'\n'
string|"'application/xml; charset=utf8'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|testListingLimit
dedent|''
dedent|''
dedent|''
name|'def'
name|'testListingLimit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limit'
op|'='
number|'10000'
newline|'\n'
nl|'\n'
name|'for'
name|'l'
name|'in'
op|'('
number|'1'
op|','
number|'100'
op|','
name|'limit'
op|'/'
number|'2'
op|','
name|'limit'
op|'-'
number|'1'
op|','
name|'limit'
op|','
name|'limit'
op|'+'
number|'1'
op|','
name|'limit'
op|'*'
number|'2'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'p'
op|'='
op|'{'
string|"'limit'"
op|':'
name|'l'
op|'}'
newline|'\n'
nl|'\n'
name|'if'
name|'l'
op|'<='
name|'limit'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'len'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|'('
name|'parms'
op|'='
name|'p'
op|')'
op|')'
op|'<='
name|'l'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'200'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
nl|'\n'
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|','
name|'parms'
op|'='
name|'p'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'412'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testContainerListing
dedent|''
dedent|''
dedent|''
name|'def'
name|'testContainerListing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'a'
op|'='
name|'sorted'
op|'('
op|'['
name|'c'
op|'.'
name|'name'
name|'for'
name|'c'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'containers'
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'format'
name|'in'
op|'['
name|'None'
op|','
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'b'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|'('
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'isinstance'
op|'('
name|'b'
op|'['
number|'0'
op|']'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'b'
op|'='
op|'['
name|'x'
op|'['
string|"'name'"
op|']'
name|'for'
name|'x'
name|'in'
name|'b'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'a'
op|','
name|'b'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testInvalidAuthToken
dedent|''
dedent|''
name|'def'
name|'testInvalidAuthToken'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hdrs'
op|'='
op|'{'
string|"'X-Auth-Token'"
op|':'
string|"'bogus_auth_token'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'info'
op|','
name|'hdrs'
op|'='
name|'hdrs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'401'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testLastContainerMarker
dedent|''
name|'def'
name|'testLastContainerMarker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'format'
name|'in'
op|'['
name|'None'
op|','
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'containers'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|'('
op|'{'
string|"'format'"
op|':'
name|'format'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'containers'
op|')'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'containers'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'200'
op|')'
newline|'\n'
nl|'\n'
name|'containers'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|'('
nl|'\n'
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|','
string|"'marker'"
op|':'
name|'containers'
op|'['
op|'-'
number|'1'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'containers'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
name|'if'
name|'format'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'204'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'200'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testMarkerLimitContainerList
dedent|''
dedent|''
dedent|''
name|'def'
name|'testMarkerLimitContainerList'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'format'
name|'in'
op|'['
name|'None'
op|','
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'marker'
name|'in'
op|'['
string|"'0'"
op|','
string|"'A'"
op|','
string|"'I'"
op|','
string|"'R'"
op|','
string|"'Z'"
op|','
string|"'a'"
op|','
string|"'i'"
op|','
string|"'r'"
op|','
string|"'z'"
op|','
string|"'abc123'"
op|','
string|"'mnop'"
op|','
string|"'xyz'"
op|']'
op|':'
newline|'\n'
nl|'\n'
indent|'                '
name|'limit'
op|'='
name|'random'
op|'.'
name|'randint'
op|'('
number|'2'
op|','
number|'9'
op|')'
newline|'\n'
name|'containers'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|'('
nl|'\n'
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|','
string|"'marker'"
op|':'
name|'marker'
op|','
string|"'limit'"
op|':'
name|'limit'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'len'
op|'('
name|'containers'
op|')'
op|'<='
name|'limit'
op|')'
newline|'\n'
name|'if'
name|'containers'
op|':'
newline|'\n'
indent|'                   '
name|'if'
name|'isinstance'
op|'('
name|'containers'
op|'['
number|'0'
op|']'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'                       '
name|'containers'
op|'='
op|'['
name|'x'
op|'['
string|"'name'"
op|']'
name|'for'
name|'x'
name|'in'
name|'containers'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'locale'
op|'.'
name|'strcoll'
op|'('
name|'containers'
op|'['
number|'0'
op|']'
op|','
name|'marker'
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testContainersOrderedByName
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'testContainersOrderedByName'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'format'
name|'in'
op|'['
name|'None'
op|','
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'containers'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|'('
nl|'\n'
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'containers'
op|'['
number|'0'
op|']'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'containers'
op|'='
op|'['
name|'x'
op|'['
string|"'name'"
op|']'
name|'for'
name|'x'
name|'in'
name|'containers'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'sorted'
op|'('
name|'containers'
op|','
name|'cmp'
op|'='
name|'locale'
op|'.'
name|'strcoll'
op|')'
op|','
nl|'\n'
name|'containers'
op|')'
newline|'\n'
nl|'\n'
DECL|class|TestAccountUTF8
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestAccountUTF8'
op|'('
name|'Base2'
op|','
name|'TestAccount'
op|')'
op|':'
newline|'\n'
DECL|variable|set_up
indent|'    '
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|class|TestAccountNoContainersEnv
dedent|''
name|'class'
name|'TestAccountNoContainersEnv'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cls'
op|'.'
name|'conn'
op|'='
name|'Connection'
op|'('
name|'config'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'conn'
op|'.'
name|'authenticate'
op|'('
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'account'
op|'='
name|'Account'
op|'('
name|'cls'
op|'.'
name|'conn'
op|','
name|'config'
op|'.'
name|'get'
op|'('
string|"'account'"
op|','
nl|'\n'
name|'config'
op|'['
string|"'username'"
op|']'
op|')'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'account'
op|'.'
name|'delete_containers'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|TestAccountNoContainers
dedent|''
dedent|''
name|'class'
name|'TestAccountNoContainers'
op|'('
name|'Base'
op|')'
op|':'
newline|'\n'
DECL|variable|env
indent|'    '
name|'env'
op|'='
name|'TestAccountNoContainersEnv'
newline|'\n'
DECL|variable|set_up
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|testGetRequest
name|'def'
name|'testGetRequest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'format'
name|'in'
op|'['
name|'None'
op|','
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|'('
nl|'\n'
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|'}'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'format'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'204'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'200'
op|')'
newline|'\n'
nl|'\n'
DECL|class|TestAccountNoContainersUTF8
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestAccountNoContainersUTF8'
op|'('
name|'Base2'
op|','
name|'TestAccountNoContainers'
op|')'
op|':'
newline|'\n'
DECL|variable|set_up
indent|'    '
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|class|TestContainerEnv
dedent|''
name|'class'
name|'TestContainerEnv'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cls'
op|'.'
name|'conn'
op|'='
name|'Connection'
op|'('
name|'config'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'conn'
op|'.'
name|'authenticate'
op|'('
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'account'
op|'='
name|'Account'
op|'('
name|'cls'
op|'.'
name|'conn'
op|','
name|'config'
op|'.'
name|'get'
op|'('
string|"'account'"
op|','
nl|'\n'
name|'config'
op|'['
string|"'username'"
op|']'
op|')'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'account'
op|'.'
name|'delete_containers'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'cls'
op|'.'
name|'container'
op|'='
name|'cls'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'cls'
op|'.'
name|'container'
op|'.'
name|'create'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ResponseError'
op|'('
name|'cls'
op|'.'
name|'conn'
op|'.'
name|'response'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'cls'
op|'.'
name|'file_count'
op|'='
number|'10'
newline|'\n'
name|'cls'
op|'.'
name|'file_size'
op|'='
number|'128'
newline|'\n'
name|'cls'
op|'.'
name|'files'
op|'='
name|'list'
op|'('
op|')'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
name|'cls'
op|'.'
name|'file_count'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'='
name|'cls'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'write_random'
op|'('
name|'cls'
op|'.'
name|'file_size'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'files'
op|'.'
name|'append'
op|'('
name|'file'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
DECL|class|TestContainerDev
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestContainerDev'
op|'('
name|'Base'
op|')'
op|':'
newline|'\n'
DECL|variable|env
indent|'    '
name|'env'
op|'='
name|'TestContainerEnv'
newline|'\n'
DECL|variable|set_up
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|class|TestContainerDevUTF8
dedent|''
name|'class'
name|'TestContainerDevUTF8'
op|'('
name|'Base2'
op|','
name|'TestContainerDev'
op|')'
op|':'
newline|'\n'
DECL|variable|set_up
indent|'    '
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|class|TestContainer
dedent|''
name|'class'
name|'TestContainer'
op|'('
name|'Base'
op|')'
op|':'
newline|'\n'
DECL|variable|env
indent|'    '
name|'env'
op|'='
name|'TestContainerEnv'
newline|'\n'
DECL|variable|set_up
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|testContainerNameLimit
name|'def'
name|'testContainerNameLimit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limit'
op|'='
number|'256'
newline|'\n'
nl|'\n'
name|'for'
name|'l'
name|'in'
op|'('
name|'limit'
op|'-'
number|'100'
op|','
name|'limit'
op|'-'
number|'10'
op|','
name|'limit'
op|'-'
number|'1'
op|','
name|'limit'
op|','
nl|'\n'
name|'limit'
op|'+'
number|'1'
op|','
name|'limit'
op|'+'
number|'10'
op|','
name|'limit'
op|'+'
number|'100'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'cont'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
string|"'a'"
op|'*'
name|'l'
op|')'
newline|'\n'
name|'if'
name|'l'
op|'<='
name|'limit'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'201'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'cont'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testFileThenContainerDelete
dedent|''
dedent|''
dedent|''
name|'def'
name|'testFileThenContainerDelete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cont'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'='
name|'cont'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'write_random'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'delete'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'name'
name|'not'
name|'in'
name|'cont'
op|'.'
name|'files'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'delete'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'name'
name|'not'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testFileListingLimitMarkerPrefix
dedent|''
name|'def'
name|'testFileListingLimitMarkerPrefix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cont'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'files'
op|'='
name|'sorted'
op|'('
op|'['
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
number|'10'
op|')'
op|']'
op|')'
newline|'\n'
name|'for'
name|'f'
name|'in'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'='
name|'cont'
op|'.'
name|'file'
op|'('
name|'f'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'write_random'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'i'
name|'in'
name|'xrange'
op|'('
name|'len'
op|'('
name|'files'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'f'
op|'='
name|'files'
op|'['
name|'i'
op|']'
newline|'\n'
name|'for'
name|'j'
name|'in'
name|'xrange'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'files'
op|')'
op|'-'
name|'i'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'limit'"
op|':'
name|'j'
op|','
string|"'marker'"
op|':'
name|'f'
op|'}'
op|')'
op|'=='
name|'files'
op|'['
name|'i'
op|'+'
number|'1'
op|':'
name|'i'
op|'+'
name|'j'
op|'+'
number|'1'
op|']'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'marker'"
op|':'
name|'f'
op|'}'
op|')'
op|'=='
name|'files'
op|'['
name|'i'
op|'+'
number|'1'
op|':'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'marker'"
op|':'
name|'f'
op|','
string|"'prefix'"
op|':'
name|'f'
op|'}'
op|')'
op|'=='
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'prefix'"
op|':'
name|'f'
op|'}'
op|')'
op|'=='
op|'['
name|'f'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testPrefixAndLimit
dedent|''
dedent|''
name|'def'
name|'testPrefixAndLimit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cont'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'prefix_file_count'
op|'='
number|'10'
newline|'\n'
name|'limit_count'
op|'='
number|'2'
newline|'\n'
name|'prefixs'
op|'='
op|'['
string|"'alpha/'"
op|','
string|"'beta/'"
op|','
string|"'kappa/'"
op|']'
newline|'\n'
name|'prefix_files'
op|'='
op|'{'
op|'}'
newline|'\n'
nl|'\n'
name|'all_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'prefix'
name|'in'
name|'prefixs'
op|':'
newline|'\n'
indent|'            '
name|'prefix_files'
op|'['
name|'prefix'
op|']'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
name|'prefix_file_count'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'file'
op|'='
name|'cont'
op|'.'
name|'file'
op|'('
name|'prefix'
op|'+'
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'write'
op|'('
op|')'
newline|'\n'
name|'prefix_files'
op|'['
name|'prefix'
op|']'
op|'.'
name|'append'
op|'('
name|'file'
op|'.'
name|'name'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'format'
name|'in'
op|'['
name|'None'
op|','
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'prefix'
name|'in'
name|'prefixs'
op|':'
newline|'\n'
indent|'                '
name|'files'
op|'='
name|'cont'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'prefix'"
op|':'
name|'prefix'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'files'
op|','
name|'sorted'
op|'('
name|'prefix_files'
op|'['
name|'prefix'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'format'
name|'in'
op|'['
name|'None'
op|','
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'prefix'
name|'in'
name|'prefixs'
op|':'
newline|'\n'
indent|'                '
name|'files'
op|'='
name|'cont'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'limit'"
op|':'
name|'limit_count'
op|','
nl|'\n'
string|"'prefix'"
op|':'
name|'prefix'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'files'
op|')'
op|','
name|'limit_count'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'file'
name|'in'
name|'files'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'startswith'
op|'('
name|'prefix'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testCreate
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'testCreate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cont'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'name'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testContainerFileListOnContainerThatDoesNotExist
dedent|''
name|'def'
name|'testContainerFileListOnContainerThatDoesNotExist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'format'
name|'in'
op|'['
name|'None'
op|','
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'container'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'container'
op|'.'
name|'files'
op|','
nl|'\n'
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testUtf8Container
dedent|''
dedent|''
name|'def'
name|'testUtf8Container'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'valid_utf8'
op|'='
name|'Utils'
op|'.'
name|'create_utf8_name'
op|'('
op|')'
newline|'\n'
name|'invalid_utf8'
op|'='
name|'valid_utf8'
op|'['
op|':'
op|':'
op|'-'
number|'1'
op|']'
newline|'\n'
name|'container'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'valid_utf8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'container'
op|'.'
name|'create'
op|'('
name|'cfg'
op|'='
op|'{'
string|"'no_path_quote'"
op|':'
name|'True'
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'container'
op|'.'
name|'name'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'container'
op|'.'
name|'files'
op|'('
op|')'
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'container'
op|'.'
name|'delete'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'container'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'invalid_utf8'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'container'
op|'.'
name|'create'
op|'('
name|'cfg'
op|'='
op|'{'
string|"'no_path_quote'"
op|':'
name|'True'
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'412'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'container'
op|'.'
name|'files'
op|','
nl|'\n'
name|'cfg'
op|'='
op|'{'
string|"'no_path_quote'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'412'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testCreateOnExisting
dedent|''
name|'def'
name|'testCreateOnExisting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cont'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'202'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testSlashInName
dedent|''
name|'def'
name|'testSlashInName'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'Utils'
op|'.'
name|'create_name'
op|'=='
name|'Utils'
op|'.'
name|'create_utf8_name'
op|':'
newline|'\n'
indent|'            '
name|'cont_name'
op|'='
name|'list'
op|'('
name|'unicode'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|','
string|"'utf-8'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'cont_name'
op|'='
name|'list'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'cont_name'
op|'['
name|'random'
op|'.'
name|'randint'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'cont_name'
op|')'
op|'-'
number|'2'
op|')'
op|']'
op|'='
string|"'/'"
newline|'\n'
name|'cont_name'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
name|'cont_name'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'Utils'
op|'.'
name|'create_name'
op|'=='
name|'Utils'
op|'.'
name|'create_utf8_name'
op|':'
newline|'\n'
indent|'            '
name|'cont_name'
op|'='
name|'cont_name'
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'cont'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'cont_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'cont'
op|'.'
name|'create'
op|'('
name|'cfg'
op|'='
op|'{'
string|"'no_path_quote'"
op|':'
name|'True'
op|'}'
op|')'
op|','
nl|'\n'
string|"'created container with name %s'"
op|'%'
op|'('
name|'cont_name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'name'
name|'not'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testDelete
dedent|''
name|'def'
name|'testDelete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cont'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'delete'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'name'
name|'not'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'containers'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testDeleteOnContainerThatDoesNotExist
dedent|''
name|'def'
name|'testDeleteOnContainerThatDoesNotExist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cont'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'cont'
op|'.'
name|'delete'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testDeleteOnContainerWithFiles
dedent|''
name|'def'
name|'testDeleteOnContainerWithFiles'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cont'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'='
name|'cont'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'write_random'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'file_size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'name'
name|'in'
name|'cont'
op|'.'
name|'files'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'cont'
op|'.'
name|'delete'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'409'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testFileCreateInContainerThatDoesNotExist
dedent|''
name|'def'
name|'testFileCreateInContainerThatDoesNotExist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file'
op|'='
name|'File'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'conn'
op|','
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|','
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|','
nl|'\n'
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'write'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testLastFileMarker
dedent|''
name|'def'
name|'testLastFileMarker'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'format'
name|'in'
op|'['
name|'None'
op|','
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'files'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
op|'{'
string|"'format'"
op|':'
name|'format'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'files'
op|')'
op|','
name|'len'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'files'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'200'
op|')'
newline|'\n'
nl|'\n'
name|'files'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
nl|'\n'
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|','
string|"'marker'"
op|':'
name|'files'
op|'['
op|'-'
number|'1'
op|']'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'files'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'format'
op|'=='
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'204'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'200'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testContainerFileList
dedent|''
dedent|''
dedent|''
name|'def'
name|'testContainerFileList'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'format'
name|'in'
op|'['
name|'None'
op|','
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'files'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'200'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'files'
op|'['
number|'0'
op|']'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'files'
op|'='
op|'['
name|'x'
op|'['
string|"'name'"
op|']'
name|'for'
name|'x'
name|'in'
name|'files'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'file'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'files'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
name|'in'
name|'files'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'file'
name|'in'
name|'files'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'files'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testMarkerLimitFileList
dedent|''
dedent|''
dedent|''
name|'def'
name|'testMarkerLimitFileList'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'format'
name|'in'
op|'['
name|'None'
op|','
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'marker'
name|'in'
op|'['
string|"'0'"
op|','
string|"'A'"
op|','
string|"'I'"
op|','
string|"'R'"
op|','
string|"'Z'"
op|','
string|"'a'"
op|','
string|"'i'"
op|','
string|"'r'"
op|','
string|"'z'"
op|','
string|"'abc123'"
op|','
string|"'mnop'"
op|','
string|"'xyz'"
op|']'
op|':'
newline|'\n'
nl|'\n'
indent|'                '
name|'limit'
op|'='
name|'random'
op|'.'
name|'randint'
op|'('
number|'2'
op|','
name|'self'
op|'.'
name|'env'
op|'.'
name|'file_count'
op|'-'
number|'1'
op|')'
newline|'\n'
name|'files'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|','
string|"'marker'"
op|':'
name|'marker'
op|','
string|"'limit'"
op|':'
name|'limit'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'files'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'isinstance'
op|'('
name|'files'
op|'['
number|'0'
op|']'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'files'
op|'='
op|'['
name|'x'
op|'['
string|"'name'"
op|']'
name|'for'
name|'x'
name|'in'
name|'files'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'len'
op|'('
name|'files'
op|')'
op|'<='
name|'limit'
op|')'
newline|'\n'
name|'if'
name|'files'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'isinstance'
op|'('
name|'files'
op|'['
number|'0'
op|']'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'files'
op|'='
op|'['
name|'x'
op|'['
string|"'name'"
op|']'
name|'for'
name|'x'
name|'in'
name|'files'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'locale'
op|'.'
name|'strcoll'
op|'('
name|'files'
op|'['
number|'0'
op|']'
op|','
name|'marker'
op|')'
op|'>'
number|'0'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testFileOrder
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'testFileOrder'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'format'
name|'in'
op|'['
name|'None'
op|','
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'files'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|'}'
op|')'
newline|'\n'
name|'if'
name|'isinstance'
op|'('
name|'files'
op|'['
number|'0'
op|']'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'files'
op|'='
op|'['
name|'x'
op|'['
string|"'name'"
op|']'
name|'for'
name|'x'
name|'in'
name|'files'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'sorted'
op|'('
name|'files'
op|','
name|'cmp'
op|'='
name|'locale'
op|'.'
name|'strcoll'
op|')'
op|','
name|'files'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testContainerInfo
dedent|''
dedent|''
name|'def'
name|'testContainerInfo'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'info'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'204'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'info'
op|'['
string|"'object_count'"
op|']'
op|','
name|'self'
op|'.'
name|'env'
op|'.'
name|'file_count'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'info'
op|'['
string|"'bytes_used'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'env'
op|'.'
name|'file_count'
op|'*'
name|'self'
op|'.'
name|'env'
op|'.'
name|'file_size'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testContainerInfoOnContainerThatDoesNotExist
dedent|''
name|'def'
name|'testContainerInfoOnContainerThatDoesNotExist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'container'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'container'
op|'.'
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testContainerFileListWithLimit
dedent|''
name|'def'
name|'testContainerFileListWithLimit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'format'
name|'in'
op|'['
name|'None'
op|','
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'files'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|','
nl|'\n'
string|"'limit'"
op|':'
number|'2'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'files'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testTooLongName
dedent|''
dedent|''
name|'def'
name|'testTooLongName'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cont'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
string|"'x'"
op|'*'
number|'257'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'not'
name|'cont'
op|'.'
name|'create'
op|'('
op|')'
op|','
string|"'created container with name %s'"
op|'%'
op|'('
name|'cont'
op|'.'
name|'name'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testContainerExistenceCachingProblem
dedent|''
name|'def'
name|'testContainerExistenceCachingProblem'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cont'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'cont'
op|'.'
name|'files'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
name|'cont'
op|'.'
name|'files'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'cont'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'cont'
op|'.'
name|'files'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'cont'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'='
name|'cont'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'write_random'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|class|TestContainerUTF8
dedent|''
dedent|''
name|'class'
name|'TestContainerUTF8'
op|'('
name|'Base2'
op|','
name|'TestContainer'
op|')'
op|':'
newline|'\n'
DECL|variable|set_up
indent|'    '
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|class|TestContainerPathsEnv
dedent|''
name|'class'
name|'TestContainerPathsEnv'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cls'
op|'.'
name|'conn'
op|'='
name|'Connection'
op|'('
name|'config'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'conn'
op|'.'
name|'authenticate'
op|'('
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'account'
op|'='
name|'Account'
op|'('
name|'cls'
op|'.'
name|'conn'
op|','
name|'config'
op|'.'
name|'get'
op|'('
string|"'account'"
op|','
nl|'\n'
name|'config'
op|'['
string|"'username'"
op|']'
op|')'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'account'
op|'.'
name|'delete_containers'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'cls'
op|'.'
name|'file_size'
op|'='
number|'8'
newline|'\n'
nl|'\n'
name|'cls'
op|'.'
name|'container'
op|'='
name|'cls'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'cls'
op|'.'
name|'container'
op|'.'
name|'create'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ResponseError'
op|'('
name|'cls'
op|'.'
name|'conn'
op|'.'
name|'response'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'cls'
op|'.'
name|'files'
op|'='
op|'['
nl|'\n'
string|"'/file1'"
op|','
nl|'\n'
string|"'/file A'"
op|','
nl|'\n'
string|"'/dir1/'"
op|','
nl|'\n'
string|"'/dir2/'"
op|','
nl|'\n'
string|"'/dir1/file2'"
op|','
nl|'\n'
string|"'/dir1/subdir1/'"
op|','
nl|'\n'
string|"'/dir1/subdir2/'"
op|','
nl|'\n'
string|"'/dir1/subdir1/file2'"
op|','
nl|'\n'
string|"'/dir1/subdir1/file3'"
op|','
nl|'\n'
string|"'/dir1/subdir1/file4'"
op|','
nl|'\n'
string|"'/dir1/subdir1/subsubdir1/'"
op|','
nl|'\n'
string|"'/dir1/subdir1/subsubdir1/file5'"
op|','
nl|'\n'
string|"'/dir1/subdir1/subsubdir1/file6'"
op|','
nl|'\n'
string|"'/dir1/subdir1/subsubdir1/file7'"
op|','
nl|'\n'
string|"'/dir1/subdir1/subsubdir1/file8'"
op|','
nl|'\n'
string|"'/dir1/subdir1/subsubdir2/'"
op|','
nl|'\n'
string|"'/dir1/subdir1/subsubdir2/file9'"
op|','
nl|'\n'
string|"'/dir1/subdir1/subsubdir2/file0'"
op|','
nl|'\n'
string|"'file1'"
op|','
nl|'\n'
string|"'dir1/'"
op|','
nl|'\n'
string|"'dir2/'"
op|','
nl|'\n'
string|"'dir1/file2'"
op|','
nl|'\n'
string|"'dir1/subdir1/'"
op|','
nl|'\n'
string|"'dir1/subdir2/'"
op|','
nl|'\n'
string|"'dir1/subdir1/file2'"
op|','
nl|'\n'
string|"'dir1/subdir1/file3'"
op|','
nl|'\n'
string|"'dir1/subdir1/file4'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir1/'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir1/file5'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir1/file6'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir1/file7'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir1/file8'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir2/'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir2/file9'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir2/file0'"
op|','
nl|'\n'
string|"'dir1/subdir with spaces/'"
op|','
nl|'\n'
string|"'dir1/subdir with spaces/file B'"
op|','
nl|'\n'
string|"'dir1/subdir+with{whatever/'"
op|','
nl|'\n'
string|"'dir1/subdir+with{whatever/file D'"
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'f'
name|'in'
name|'cls'
op|'.'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'='
name|'cls'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'f'
op|')'
newline|'\n'
name|'if'
name|'f'
op|'.'
name|'endswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'file'
op|'.'
name|'write'
op|'('
name|'hdrs'
op|'='
op|'{'
string|"'content-type'"
op|':'
string|"'application/directory'"
op|'}'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'file'
op|'.'
name|'write_random'
op|'('
name|'cls'
op|'.'
name|'file_size'
op|','
name|'hdrs'
op|'='
op|'{'
string|"'content-type'"
op|':'
string|"'application/directory'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|class|TestContainerPaths
dedent|''
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestContainerPaths'
op|'('
name|'Base'
op|')'
op|':'
newline|'\n'
DECL|variable|env
indent|'    '
name|'env'
op|'='
name|'TestContainerPathsEnv'
newline|'\n'
DECL|variable|set_up
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|testTraverseContainer
name|'def'
name|'testTraverseContainer'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'found_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'found_dirs'
op|'='
op|'['
op|']'
newline|'\n'
DECL|function|recurse_path
name|'def'
name|'recurse_path'
op|'('
name|'path'
op|','
name|'count'
op|'='
number|'0'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'count'
op|'>'
number|'10'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'ValueError'
op|'('
string|"'too deep recursion'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'file'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'path'"
op|':'
name|'path'
op|'}'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'startswith'
op|'('
name|'path'
op|')'
op|')'
newline|'\n'
name|'if'
name|'file'
op|'.'
name|'endswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'recurse_path'
op|'('
name|'file'
op|','
name|'count'
op|'+'
number|'1'
op|')'
newline|'\n'
name|'found_dirs'
op|'.'
name|'append'
op|'('
name|'file'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'found_files'
op|'.'
name|'append'
op|'('
name|'file'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'recurse_path'
op|'('
string|"''"
op|')'
newline|'\n'
name|'for'
name|'file'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'file'
op|'.'
name|'startswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
name|'not'
name|'in'
name|'found_dirs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
name|'not'
name|'in'
name|'found_files'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'file'
op|'.'
name|'endswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
name|'in'
name|'found_dirs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
name|'not'
name|'in'
name|'found_files'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
name|'in'
name|'found_files'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
name|'not'
name|'in'
name|'found_dirs'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'found_files'
op|'='
op|'['
op|']'
newline|'\n'
name|'found_dirs'
op|'='
op|'['
op|']'
newline|'\n'
name|'recurse_path'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'for'
name|'file'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'file'
op|'.'
name|'startswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
name|'not'
name|'in'
name|'found_dirs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
name|'not'
name|'in'
name|'found_files'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'file'
op|'.'
name|'endswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
name|'in'
name|'found_dirs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
name|'not'
name|'in'
name|'found_files'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
name|'in'
name|'found_files'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
name|'not'
name|'in'
name|'found_dirs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testContainerListing
dedent|''
dedent|''
dedent|''
name|'def'
name|'testContainerListing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'format'
name|'in'
op|'('
name|'None'
op|','
string|"'json'"
op|','
string|"'xml'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'files'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'isinstance'
op|'('
name|'files'
op|'['
number|'0'
op|']'
op|','
name|'dict'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'files'
op|'='
op|'['
name|'str'
op|'('
name|'x'
op|'['
string|"'name'"
op|']'
op|')'
name|'for'
name|'x'
name|'in'
name|'files'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'files'
op|','
name|'sorted'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'files'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'format'
name|'in'
op|'('
string|"'json'"
op|','
string|"'xml'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'file'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|'}'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'int'
op|'('
name|'file'
op|'['
string|"'bytes'"
op|']'
op|')'
op|'>='
number|'0'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'has_key'
op|'('
string|"'last_modified'"
op|')'
op|')'
newline|'\n'
name|'if'
name|'file'
op|'['
string|"'name'"
op|']'
op|'.'
name|'endswith'
op|'('
string|"'/'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'file'
op|'['
string|"'content_type'"
op|']'
op|','
nl|'\n'
string|"'application/directory'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|testStructure
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'testStructure'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|assert_listing
indent|'        '
name|'def'
name|'assert_listing'
op|'('
name|'path'
op|','
name|'list'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'files'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'path'"
op|':'
name|'path'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'sorted'
op|'('
name|'list'
op|','
name|'cmp'
op|'='
name|'locale'
op|'.'
name|'strcoll'
op|')'
op|','
name|'files'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'assert_listing'
op|'('
string|"'/'"
op|','
op|'['
string|"'/dir1/'"
op|','
string|"'/dir2/'"
op|','
string|"'/file1'"
op|','
string|"'/file A'"
op|']'
op|')'
newline|'\n'
name|'assert_listing'
op|'('
string|"'/dir1'"
op|','
nl|'\n'
op|'['
string|"'/dir1/file2'"
op|','
string|"'/dir1/subdir1/'"
op|','
string|"'/dir1/subdir2/'"
op|']'
op|')'
newline|'\n'
name|'assert_listing'
op|'('
string|"'/dir1/'"
op|','
nl|'\n'
op|'['
string|"'/dir1/file2'"
op|','
string|"'/dir1/subdir1/'"
op|','
string|"'/dir1/subdir2/'"
op|']'
op|')'
newline|'\n'
name|'assert_listing'
op|'('
string|"'/dir1/subdir1'"
op|','
nl|'\n'
op|'['
string|"'/dir1/subdir1/subsubdir2/'"
op|','
string|"'/dir1/subdir1/file2'"
op|','
nl|'\n'
string|"'/dir1/subdir1/file3'"
op|','
string|"'/dir1/subdir1/file4'"
op|','
nl|'\n'
string|"'/dir1/subdir1/subsubdir1/'"
op|']'
op|')'
newline|'\n'
name|'assert_listing'
op|'('
string|"'/dir1/subdir2'"
op|','
op|'['
op|']'
op|')'
newline|'\n'
name|'assert_listing'
op|'('
string|"''"
op|','
op|'['
string|"'file1'"
op|','
string|"'dir1/'"
op|','
string|"'dir2/'"
op|']'
op|')'
newline|'\n'
name|'assert_listing'
op|'('
string|"'dir1'"
op|','
op|'['
string|"'dir1/file2'"
op|','
string|"'dir1/subdir1/'"
op|','
nl|'\n'
string|"'dir1/subdir2/'"
op|','
string|"'dir1/subdir with spaces/'"
op|','
nl|'\n'
string|"'dir1/subdir+with{whatever/'"
op|']'
op|')'
newline|'\n'
name|'assert_listing'
op|'('
string|"'dir1/subdir1'"
op|','
nl|'\n'
op|'['
string|"'dir1/subdir1/file4'"
op|','
string|"'dir1/subdir1/subsubdir2/'"
op|','
nl|'\n'
string|"'dir1/subdir1/file2'"
op|','
string|"'dir1/subdir1/file3'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir1/'"
op|']'
op|')'
newline|'\n'
name|'assert_listing'
op|'('
string|"'dir1/subdir1/subsubdir1'"
op|','
nl|'\n'
op|'['
string|"'dir1/subdir1/subsubdir1/file7'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir1/file5'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir1/file8'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir1/file6'"
op|']'
op|')'
newline|'\n'
name|'assert_listing'
op|'('
string|"'dir1/subdir1/subsubdir1/'"
op|','
nl|'\n'
op|'['
string|"'dir1/subdir1/subsubdir1/file7'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir1/file5'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir1/file8'"
op|','
nl|'\n'
string|"'dir1/subdir1/subsubdir1/file6'"
op|']'
op|')'
newline|'\n'
name|'assert_listing'
op|'('
string|"'dir1/subdir with spaces/'"
op|','
nl|'\n'
op|'['
string|"'dir1/subdir with spaces/file B'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|class|TestFileEnv
dedent|''
dedent|''
name|'class'
name|'TestFileEnv'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cls'
op|'.'
name|'conn'
op|'='
name|'Connection'
op|'('
name|'config'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'conn'
op|'.'
name|'authenticate'
op|'('
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'account'
op|'='
name|'Account'
op|'('
name|'cls'
op|'.'
name|'conn'
op|','
name|'config'
op|'.'
name|'get'
op|'('
string|"'account'"
op|','
nl|'\n'
name|'config'
op|'['
string|"'username'"
op|']'
op|')'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'account'
op|'.'
name|'delete_containers'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'cls'
op|'.'
name|'container'
op|'='
name|'cls'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'cls'
op|'.'
name|'container'
op|'.'
name|'create'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ResponseError'
op|'('
name|'cls'
op|'.'
name|'conn'
op|'.'
name|'response'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'cls'
op|'.'
name|'file_size'
op|'='
number|'128'
newline|'\n'
nl|'\n'
DECL|class|TestFileDev
dedent|''
dedent|''
name|'class'
name|'TestFileDev'
op|'('
name|'Base'
op|')'
op|':'
newline|'\n'
DECL|variable|env
indent|'    '
name|'env'
op|'='
name|'TestFileEnv'
newline|'\n'
DECL|variable|set_up
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|class|TestFileDevUTF8
dedent|''
name|'class'
name|'TestFileDevUTF8'
op|'('
name|'Base2'
op|','
name|'TestFileDev'
op|')'
op|':'
newline|'\n'
DECL|variable|set_up
indent|'    '
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|class|TestFile
dedent|''
name|'class'
name|'TestFile'
op|'('
name|'Base'
op|')'
op|':'
newline|'\n'
DECL|variable|env
indent|'    '
name|'env'
op|'='
name|'TestFileEnv'
newline|'\n'
DECL|variable|set_up
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
string|'"""\n    def testCopy(self):\n        source_filename = Utils.create_name()\n        file = self.env.container.file(source_filename)\n\n        metadata = {}\n        for i in range(1):\n            metadata[Utils.create_name()] = Utils.create_name()\n\n        data = file.write_random()\n\n        dest_cont = self.env.account.container(Utils.create_name())\n        self.assert_(dest_cont.create())\n\n        # copy both from within and across containers\n        for cont in (self.env.container, dest_cont):\n            # copy both with and without initial slash\n            for prefix in (\'\', \'/\'):\n                dest_filename = Utils.create_name()\n\n                file = self.env.container.file(source_filename)\n                file.copy(\'%s%s\' % (prefix, cont), dest_filename)\n\n                self.assert_(dest_filename in cont.files())\n\n                file = cont.file(dest_filename)\n\n                self.assert_(data == file.read())\n                self.assert_(file.initialize())\n                self.assert_(metadata == file.metadata)\n\n    def testCopy404s(self):\n        source_filename = Utils.create_name()\n        file = self.env.container.file(source_filename)\n        file.write_random()\n\n        dest_cont = self.env.account.container(Utils.create_name())\n        self.assert_(dest_cont.create())\n\n        for prefix in (\'\', \'/\'):\n            # invalid source container\n            source_cont = self.env.account.container(Utils.create_name())\n            file = source_cont.file(source_filename)\n            self.assert_(not file.copy(\'%s%s\' % (prefix, self.env.container),\n                Utils.create_name()))\n            self.assert_status(404)\n\n            self.assert_(not file.copy(\'%s%s\' % (prefix, dest_cont),\n                Utils.create_name()))\n            self.assert_status(404)\n\n            # invalid source object\n            file = self.env.container.file(Utils.create_name())\n            self.assert_(not file.copy(\'%s%s\' % (prefix, self.env.container),\n                Utils.create_name()))\n            self.assert_status(404)\n\n            self.assert_(not file.copy(\'%s%s\' % (prefix, dest_cont),\n                Utils.create_name()))\n            self.assert_status(404)\n           \n            # invalid destination container\n            file = self.env.container.file(source_filename)\n            self.assert_(not file.copy(\'%s%s\' % (prefix, Utils.create_name()),\n                Utils.create_name()))\n\n    def testCopyNoDestinationHeader(self):\n        source_filename = Utils.create_name()\n        file = self.env.container.file(source_filename)\n        file.write_random()\n\n        file = self.env.container.file(source_filename)\n        self.assert_(not file.copy(Utils.create_name(), Utils.create_name(),\n            cfg={\'no_destination\': True}))\n        self.assert_status(412)\n\n    def testCopyDestinationSlashProblems(self):\n        source_filename = Utils.create_name()\n        file = self.env.container.file(source_filename)\n        file.write_random()\n\n        # no slash\n        self.assert_(not file.copy(Utils.create_name(), Utils.create_name(),\n            cfg={\'destination\': Utils.create_name()}))\n        self.assert_status(412)\n\n        # extra slash\n        self.assert_(not file.copy(Utils.create_name(), Utils.create_name(),\n            cfg={\'destination\': \'/%s/%s/%s\' % (Utils.create_name(),\n            Utils.create_name(), Utils.create_name())}))\n        self.assert_status(412)\n\n    def testCopyFromHeader(self):\n        source_filename = Utils.create_name()\n        file = self.env.container.file(source_filename)\n\n        metadata = {}\n        for i in range(1):\n            metadata[Utils.create_name()] = Utils.create_name()\n        file.metadata = metadata\n\n        data = file.write_random()\n\n        dest_cont = self.env.account.container(Utils.create_name())\n        self.assert_(dest_cont.create())\n\n        # copy both from within and across containers\n        for cont in (self.env.container, dest_cont):\n            # copy both with and without initial slash\n            for prefix in (\'\', \'/\'):\n                dest_filename = Utils.create_name()\n\n                file = cont.file(dest_filename)\n                file.write(hdrs={\'X-Copy-From\': \'%s%s/%s\' % (prefix,\n                    self.env.container.name, source_filename)})\n\n                self.assert_(dest_filename in cont.files())\n\n                file = cont.file(dest_filename)\n\n                self.assert_(data == file.read())\n                self.assert_(file.initialize())\n                self.assert_(metadata == file.metadata)\n\n    def testCopyFromHeader404s(self):\n        source_filename = Utils.create_name()\n        file = self.env.container.file(source_filename)\n        file.write_random()\n\n        for prefix in (\'\', \'/\'):\n            # invalid source container\n            file = self.env.container.file(Utils.create_name())\n            self.assertRaises(ResponseError, file.write,\n                hdrs={\'X-Copy-From\': \'%s%s/%s\' % (prefix,\n                Utils.create_name(), source_filename)})\n            self.assert_status(404)\n\n            # invalid source object\n            file = self.env.container.file(Utils.create_name())\n            self.assertRaises(ResponseError, file.write,\n                hdrs={\'X-Copy-From\': \'%s%s/%s\' % (prefix,\n                self.env.container.name, Utils.create_name())})\n            self.assert_status(404)\n\n            # invalid destination container\n            dest_cont = self.env.account.container(Utils.create_name())\n            file = dest_cont.file(Utils.create_name())\n            self.assertRaises(ResponseError, file.write,\n                hdrs={\'X-Copy-From\': \'%s%s/%s\' % (prefix,\n                self.env.container.name, source_filename)})\n            self.assert_status(404)\n    """'
newline|'\n'
nl|'\n'
DECL|member|testNameLimit
name|'def'
name|'testNameLimit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limit'
op|'='
number|'1024'
newline|'\n'
nl|'\n'
name|'for'
name|'l'
name|'in'
op|'('
number|'1'
op|','
number|'10'
op|','
name|'limit'
op|'/'
number|'2'
op|','
name|'limit'
op|'-'
number|'1'
op|','
name|'limit'
op|','
name|'limit'
op|'+'
number|'1'
op|','
name|'limit'
op|'*'
number|'2'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
string|"'a'"
op|'*'
name|'l'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'l'
op|'<='
name|'limit'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'write'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'201'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'write'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testQuestionMarkInName
dedent|''
dedent|''
dedent|''
name|'def'
name|'testQuestionMarkInName'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'Utils'
op|'.'
name|'create_name'
op|'=='
name|'Utils'
op|'.'
name|'create_ascii_name'
op|':'
newline|'\n'
indent|'            '
name|'file_name'
op|'='
name|'list'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file_name'
op|'['
name|'random'
op|'.'
name|'randint'
op|'('
number|'2'
op|','
name|'len'
op|'('
name|'file_name'
op|')'
op|'-'
number|'2'
op|')'
op|']'
op|'='
string|"'?'"
newline|'\n'
name|'file_name'
op|'='
string|'""'
op|'.'
name|'join'
op|'('
name|'file_name'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'file_name'
op|'='
name|'Utils'
op|'.'
name|'create_name'
op|'('
number|'6'
op|')'
op|'+'
string|"'?'"
op|'+'
name|'Utils'
op|'.'
name|'create_name'
op|'('
number|'6'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'file_name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'write'
op|'('
name|'cfg'
op|'='
op|'{'
string|"'no_path_quote'"
op|':'
name|'True'
op|'}'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file_name'
name|'not'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file_name'
op|'.'
name|'split'
op|'('
string|"'?'"
op|')'
op|'['
number|'0'
op|']'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testDeleteThen404s
dedent|''
name|'def'
name|'testDeleteThen404s'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'write_random'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'201'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'delete'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'204'
op|')'
newline|'\n'
nl|'\n'
name|'file'
op|'.'
name|'metadata'
op|'='
op|'{'
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|':'
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|'}'
newline|'\n'
nl|'\n'
name|'for'
name|'method'
name|'in'
op|'('
name|'file'
op|'.'
name|'info'
op|','
name|'file'
op|'.'
name|'read'
op|','
name|'file'
op|'.'
name|'sync_metadata'
op|','
name|'file'
op|'.'
name|'delete'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'method'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testBlankMetadataName
dedent|''
dedent|''
name|'def'
name|'testBlankMetadataName'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'metadata'
op|'='
op|'{'
string|"''"
op|':'
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'write_random'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testMetadataNumberLimit
dedent|''
name|'def'
name|'testMetadataNumberLimit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'number_limit'
op|'='
number|'90'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
op|'('
name|'number_limit'
op|'-'
number|'10'
op|','
name|'number_limit'
op|'-'
number|'1'
op|','
name|'number_limit'
op|','
nl|'\n'
name|'number_limit'
op|'+'
number|'1'
op|','
name|'number_limit'
op|'+'
number|'10'
op|','
name|'number_limit'
op|'+'
number|'100'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'size_limit'
op|'='
number|'4096'
newline|'\n'
nl|'\n'
name|'j'
op|'='
name|'size_limit'
op|'/'
op|'('
name|'i'
op|'*'
number|'2'
op|')'
newline|'\n'
nl|'\n'
name|'size'
op|'='
number|'0'
newline|'\n'
name|'metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'while'
name|'len'
op|'('
name|'metadata'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
op|'<'
name|'i'
op|':'
newline|'\n'
indent|'                '
name|'key'
op|'='
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
newline|'\n'
name|'val'
op|'='
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'key'
op|')'
op|'>'
name|'j'
op|':'
newline|'\n'
indent|'                    '
name|'key'
op|'='
name|'key'
op|'['
op|':'
name|'j'
op|']'
newline|'\n'
name|'val'
op|'='
name|'val'
op|'['
op|':'
name|'j'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'size'
op|'+='
name|'len'
op|'('
name|'key'
op|')'
op|'+'
name|'len'
op|'('
name|'val'
op|')'
newline|'\n'
name|'metadata'
op|'['
name|'key'
op|']'
op|'='
name|'val'
newline|'\n'
nl|'\n'
dedent|''
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'metadata'
op|'='
name|'metadata'
newline|'\n'
nl|'\n'
name|'if'
name|'i'
op|'<='
name|'number_limit'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'write'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'sync_metadata'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
op|'('
number|'201'
op|','
number|'202'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'write'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'400'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'write'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'201'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'metadata'
op|'='
name|'metadata'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'sync_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testContentTypeGuessing
dedent|''
dedent|''
dedent|''
name|'def'
name|'testContentTypeGuessing'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file_types'
op|'='
op|'{'
string|"'wav'"
op|':'
string|"'audio/x-wav'"
op|','
string|"'txt'"
op|':'
string|"'text/plain'"
op|','
nl|'\n'
string|"'zip'"
op|':'
string|"'application/zip'"
op|'}'
newline|'\n'
nl|'\n'
name|'container'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'container'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'file_types'
op|'.'
name|'keys'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'='
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|'+'
string|"'.'"
op|'+'
name|'i'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'write'
op|'('
string|"''"
op|','
name|'cfg'
op|'='
op|'{'
string|"'no_content_type'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'file_types_read'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'container'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
string|"'json'"
op|'}'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'file_types_read'
op|'['
name|'i'
op|'['
string|"'name'"
op|']'
op|'.'
name|'split'
op|'('
string|"'.'"
op|')'
op|'['
number|'1'
op|']'
op|']'
op|'='
name|'i'
op|'['
string|"'content_type'"
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'file_types'
op|','
name|'file_types_read'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testRangedGets
dedent|''
name|'def'
name|'testRangedGets'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file_length'
op|'='
number|'10000'
newline|'\n'
name|'range_size'
op|'='
name|'file_length'
op|'/'
number|'10'
newline|'\n'
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'data'
op|'='
name|'file'
op|'.'
name|'write_random'
op|'('
name|'file_length'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'0'
op|','
name|'file_length'
op|','
name|'range_size'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'range_string'
op|'='
string|"'bytes=%d-%d'"
op|'%'
op|'('
name|'i'
op|','
name|'i'
op|'+'
name|'range_size'
op|'-'
number|'1'
op|')'
newline|'\n'
name|'hdrs'
op|'='
op|'{'
string|"'Range'"
op|':'
name|'range_string'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'data'
op|'['
name|'i'
op|':'
name|'i'
op|'+'
name|'range_size'
op|']'
op|'=='
name|'file'
op|'.'
name|'read'
op|'('
name|'hdrs'
op|'='
name|'hdrs'
op|')'
op|','
nl|'\n'
name|'range_string'
op|')'
newline|'\n'
nl|'\n'
name|'range_string'
op|'='
string|"'bytes=-%d'"
op|'%'
op|'('
name|'i'
op|')'
newline|'\n'
name|'hdrs'
op|'='
op|'{'
string|"'Range'"
op|':'
name|'range_string'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'read'
op|'('
name|'hdrs'
op|'='
name|'hdrs'
op|')'
op|'=='
name|'data'
op|'['
op|'-'
name|'i'
op|':'
op|']'
op|','
name|'range_string'
op|')'
newline|'\n'
nl|'\n'
name|'range_string'
op|'='
string|"'bytes=%d-'"
op|'%'
op|'('
name|'i'
op|')'
newline|'\n'
name|'hdrs'
op|'='
op|'{'
string|"'Range'"
op|':'
name|'range_string'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'read'
op|'('
name|'hdrs'
op|'='
name|'hdrs'
op|')'
op|'=='
name|'data'
op|'['
name|'i'
op|'-'
name|'file_length'
op|':'
op|']'
op|','
nl|'\n'
name|'range_string'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'range_string'
op|'='
string|"'bytes=%d-%d'"
op|'%'
op|'('
name|'file_length'
op|'+'
number|'1000'
op|','
name|'file_length'
op|'+'
number|'2000'
op|')'
newline|'\n'
name|'hdrs'
op|'='
op|'{'
string|"'Range'"
op|':'
name|'range_string'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'read'
op|','
name|'hdrs'
op|'='
name|'hdrs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'416'
op|')'
newline|'\n'
nl|'\n'
name|'range_string'
op|'='
string|"'bytes=%d-%d'"
op|'%'
op|'('
name|'file_length'
op|'-'
number|'1000'
op|','
name|'file_length'
op|'+'
number|'2000'
op|')'
newline|'\n'
name|'hdrs'
op|'='
op|'{'
string|"'Range'"
op|':'
name|'range_string'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'read'
op|'('
name|'hdrs'
op|'='
name|'hdrs'
op|')'
op|'=='
name|'data'
op|'['
op|'-'
number|'1000'
op|':'
op|']'
op|','
name|'range_string'
op|')'
newline|'\n'
nl|'\n'
name|'hdrs'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'0-4'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'read'
op|'('
name|'hdrs'
op|'='
name|'hdrs'
op|')'
op|'=='
name|'data'
op|','
name|'range_string'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'r'
name|'in'
op|'('
string|"'BYTES=0-999'"
op|','
string|"'bytes = 0-999'"
op|','
string|"'BYTES = 0 - 999'"
op|','
nl|'\n'
string|"'bytes = 0 - 999'"
op|','
string|"'bytes=0 - 999'"
op|','
string|"'bytes=0-999 '"
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'read'
op|'('
name|'hdrs'
op|'='
op|'{'
string|"'Range'"
op|':'
name|'r'
op|'}'
op|')'
op|'=='
name|'data'
op|'['
number|'0'
op|':'
number|'1000'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testFileSizeLimit
dedent|''
dedent|''
name|'def'
name|'testFileSizeLimit'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'limit'
op|'='
number|'5'
op|'*'
number|'2'
op|'**'
number|'30'
op|'+'
number|'2'
newline|'\n'
name|'tsecs'
op|'='
number|'3'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
op|'('
name|'limit'
op|'-'
number|'100'
op|','
name|'limit'
op|'-'
number|'10'
op|','
name|'limit'
op|'-'
number|'1'
op|','
name|'limit'
op|','
name|'limit'
op|'+'
number|'1'
op|','
name|'limit'
op|'+'
number|'10'
op|','
nl|'\n'
name|'limit'
op|'+'
number|'100'
op|')'
op|':'
newline|'\n'
nl|'\n'
indent|'            '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'i'
op|'<='
name|'limit'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'timeout'
op|'('
name|'tsecs'
op|','
name|'file'
op|'.'
name|'write'
op|','
nl|'\n'
name|'cfg'
op|'='
op|'{'
string|"'set_content_length'"
op|':'
name|'i'
op|'}'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'timeout'
op|','
name|'tsecs'
op|','
nl|'\n'
name|'file'
op|'.'
name|'write'
op|','
name|'cfg'
op|'='
op|'{'
string|"'set_content_length'"
op|':'
name|'i'
op|'}'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testNoContentLengthForPut
dedent|''
dedent|''
dedent|''
name|'def'
name|'testNoContentLengthForPut'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'write'
op|','
string|"'testing'"
op|','
nl|'\n'
name|'cfg'
op|'='
op|'{'
string|"'no_content_length'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'411'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testDelete
dedent|''
name|'def'
name|'testDelete'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'write_random'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'file_size'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'name'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'delete'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'name'
name|'not'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testBadHeaders
dedent|''
name|'def'
name|'testBadHeaders'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file_length'
op|'='
number|'100'
newline|'\n'
nl|'\n'
comment|'# no content type on puts should be ok'
nl|'\n'
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'write_random'
op|'('
name|'file_length'
op|','
name|'cfg'
op|'='
op|'{'
string|"'no_content_type'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'201'
op|')'
newline|'\n'
nl|'\n'
comment|'# content length x'
nl|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'write_random'
op|','
name|'file_length'
op|','
nl|'\n'
name|'hdrs'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'X'"
op|'}'
op|','
name|'cfg'
op|'='
op|'{'
string|"'no_content_length'"
op|':'
name|'True'
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'400'
op|')'
newline|'\n'
nl|'\n'
comment|'# bad request types'
nl|'\n'
comment|"#for req in ('LICK', 'GETorHEAD_base', 'container_info', 'best_response'):"
nl|'\n'
name|'for'
name|'req'
name|'in'
op|'('
string|"'LICK'"
op|','
string|"'GETorHEAD_base'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'conn'
op|'.'
name|'make_request'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'405'
op|')'
newline|'\n'
nl|'\n'
comment|'# bad range headers'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'len'
op|'('
name|'file'
op|'.'
name|'read'
op|'('
name|'hdrs'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'parsecs=8-12'"
op|'}'
op|')'
op|')'
op|'=='
name|'file_length'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'200'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testMetadataLengthLimits
dedent|''
name|'def'
name|'testMetadataLengthLimits'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'key_limit'
op|','
name|'value_limit'
op|'='
number|'128'
op|','
number|'256'
newline|'\n'
name|'lengths'
op|'='
op|'['
op|'['
name|'key_limit'
op|','
name|'value_limit'
op|']'
op|','
op|'['
name|'key_limit'
op|','
name|'value_limit'
op|'+'
number|'1'
op|']'
op|','
op|'['
name|'key_limit'
op|'+'
number|'1'
op|','
name|'value_limit'
op|']'
op|','
op|'['
name|'key_limit'
op|','
number|'0'
op|']'
op|','
op|'['
name|'key_limit'
op|','
name|'value_limit'
op|'*'
number|'10'
op|']'
op|','
op|'['
name|'key_limit'
op|'*'
number|'10'
op|','
name|'value_limit'
op|']'
op|']'
newline|'\n'
nl|'\n'
name|'for'
name|'l'
name|'in'
name|'lengths'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
op|'{'
string|"'a'"
op|'*'
name|'l'
op|'['
number|'0'
op|']'
op|':'
string|"'b'"
op|'*'
name|'l'
op|'['
number|'1'
op|']'
op|'}'
newline|'\n'
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'metadata'
op|'='
name|'metadata'
newline|'\n'
nl|'\n'
name|'if'
name|'l'
op|'['
number|'0'
op|']'
op|'<='
name|'key_limit'
name|'and'
name|'l'
op|'['
number|'1'
op|']'
op|'<='
name|'value_limit'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'write'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'sync_metadata'
op|'('
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'write'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'400'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'write'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'201'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'metadata'
op|'='
name|'metadata'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'sync_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testEtagWayoff
dedent|''
dedent|''
dedent|''
name|'def'
name|'testEtagWayoff'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'hdrs'
op|'='
op|'{'
string|"'etag'"
op|':'
string|"'reallylonganddefinitelynotavalidetagvalue'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'write_random'
op|','
name|'hdrs'
op|'='
name|'hdrs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'422'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testFileCreate
dedent|''
name|'def'
name|'testFileCreate'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'data'
op|'='
name|'file'
op|'.'
name|'write_random'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'201'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'data'
op|'=='
name|'file'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'200'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testHead
dedent|''
dedent|''
name|'def'
name|'testHead'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file_name'
op|'='
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
newline|'\n'
name|'content_type'
op|'='
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'file_name'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'content_type'
op|'='
name|'content_type'
newline|'\n'
name|'file'
op|'.'
name|'write_random'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'file_size'
op|')'
newline|'\n'
nl|'\n'
name|'md5'
op|'='
name|'file'
op|'.'
name|'md5'
newline|'\n'
nl|'\n'
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'file_name'
op|')'
newline|'\n'
name|'info'
op|'='
name|'file'
op|'.'
name|'info'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'info'
op|'['
string|"'content_length'"
op|']'
op|','
name|'self'
op|'.'
name|'env'
op|'.'
name|'file_size'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'info'
op|'['
string|"'etag'"
op|']'
op|','
name|'md5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'info'
op|'['
string|"'content_type'"
op|']'
op|','
name|'content_type'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'info'
op|'.'
name|'has_key'
op|'('
string|"'last_modified'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testDeleteOfFileThatDoesNotExist
dedent|''
name|'def'
name|'testDeleteOfFileThatDoesNotExist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# in container that exists'
nl|'\n'
indent|'        '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'delete'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
nl|'\n'
comment|'# in container that does not exist'
nl|'\n'
name|'container'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'='
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'delete'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testHeadOnFileThatDoesNotExist
dedent|''
name|'def'
name|'testHeadOnFileThatDoesNotExist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# in container that exists'
nl|'\n'
indent|'        '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
nl|'\n'
comment|'# in container that does not exist'
nl|'\n'
name|'container'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'='
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'info'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testMetadataOnPost
dedent|''
name|'def'
name|'testMetadataOnPost'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'write_random'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'file_size'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'metadata'
op|'['
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|']'
op|'='
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'file'
op|'.'
name|'metadata'
op|'='
name|'metadata'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'sync_metadata'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
op|'('
number|'201'
op|','
number|'202'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'file'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'initialize'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'file'
op|'.'
name|'metadata'
op|','
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testGetContentType
dedent|''
dedent|''
name|'def'
name|'testGetContentType'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file_name'
op|'='
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
newline|'\n'
name|'content_type'
op|'='
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'file_name'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'content_type'
op|'='
name|'content_type'
newline|'\n'
name|'file'
op|'.'
name|'write_random'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'file_name'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'content_type'
op|','
name|'file'
op|'.'
name|'content_type'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testGetOnFileThatDoesNotExist
dedent|''
name|'def'
name|'testGetOnFileThatDoesNotExist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# in container that exists'
nl|'\n'
indent|'        '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'read'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
nl|'\n'
comment|'# in container that does not exist'
nl|'\n'
name|'container'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'='
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'read'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testPostOnFileThatDoesNotExist
dedent|''
name|'def'
name|'testPostOnFileThatDoesNotExist'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# in container that exists'
nl|'\n'
indent|'        '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'Field'"
op|']'
op|'='
string|"'Value'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'sync_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
nl|'\n'
comment|'# in container that does not exist'
nl|'\n'
name|'container'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'='
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'metadata'
op|'['
string|"'Field'"
op|']'
op|'='
string|"'Value'"
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'sync_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'404'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testMetadataOnPut
dedent|''
name|'def'
name|'testMetadataOnPut'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'metadata'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'for'
name|'j'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'metadata'
op|'['
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|']'
op|'='
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'metadata'
op|'='
name|'metadata'
newline|'\n'
name|'file'
op|'.'
name|'write_random'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'file_size'
op|')'
newline|'\n'
nl|'\n'
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'file'
op|'.'
name|'name'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'initialize'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'200'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'file'
op|'.'
name|'metadata'
op|','
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testSerialization
dedent|''
dedent|''
name|'def'
name|'testSerialization'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'container'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'container'
op|'.'
name|'create'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'files'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'i'
name|'in'
op|'('
number|'0'
op|','
number|'1'
op|','
number|'10'
op|','
number|'100'
op|','
number|'1000'
op|','
number|'10000'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'files'
op|'.'
name|'append'
op|'('
op|'{'
string|"'name'"
op|':'
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|','
string|"'content_type'"
op|':'
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|','
string|"'bytes'"
op|':'
name|'i'
op|'}'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'write_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'for'
name|'f'
name|'in'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'='
name|'container'
op|'.'
name|'file'
op|'('
name|'f'
op|'['
string|"'name'"
op|']'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'content_type'
op|'='
name|'f'
op|'['
string|"'content_type'"
op|']'
newline|'\n'
name|'file'
op|'.'
name|'write_random'
op|'('
name|'f'
op|'['
string|"'bytes'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'f'
op|'['
string|"'hash'"
op|']'
op|'='
name|'file'
op|'.'
name|'md5'
newline|'\n'
name|'f'
op|'['
string|"'json'"
op|']'
op|'='
name|'False'
newline|'\n'
name|'f'
op|'['
string|"'xml'"
op|']'
op|'='
name|'False'
newline|'\n'
dedent|''
name|'write_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'write_time'
newline|'\n'
nl|'\n'
name|'for'
name|'format'
name|'in'
op|'['
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'file'
name|'in'
name|'container'
op|'.'
name|'files'
op|'('
name|'parms'
op|'='
op|'{'
string|"'format'"
op|':'
name|'format'
op|'}'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'found'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'f'
name|'in'
name|'files'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'f'
op|'['
string|"'name'"
op|']'
op|'!='
name|'file'
op|'['
string|"'name'"
op|']'
op|':'
newline|'\n'
indent|'                        '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'file'
op|'['
string|"'content_type'"
op|']'
op|','
nl|'\n'
name|'f'
op|'['
string|"'content_type'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'int'
op|'('
name|'file'
op|'['
string|"'bytes'"
op|']'
op|')'
op|','
name|'f'
op|'['
string|"'bytes'"
op|']'
op|')'
newline|'\n'
nl|'\n'
name|'d'
op|'='
name|'datetime'
op|'.'
name|'strptime'
op|'('
name|'file'
op|'['
string|"'last_modified'"
op|']'
op|'.'
name|'split'
op|'('
string|"'.'"
op|')'
op|'['
number|'0'
op|']'
op|','
string|'"%Y-%m-%dT%H:%M:%S"'
op|')'
newline|'\n'
name|'lm'
op|'='
name|'time'
op|'.'
name|'mktime'
op|'('
name|'d'
op|'.'
name|'timetuple'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'f'
op|'.'
name|'has_key'
op|'('
string|"'last_modified'"
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'f'
op|'['
string|"'last_modified'"
op|']'
op|','
name|'lm'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                       '
name|'f'
op|'['
string|"'last_modified'"
op|']'
op|'='
name|'lm'
newline|'\n'
nl|'\n'
dedent|''
name|'f'
op|'['
name|'format'
op|']'
op|'='
name|'True'
newline|'\n'
name|'found'
op|'='
name|'True'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'found'
op|','
string|"'Unexpected file %s found in '"
string|"'%s listing'"
op|'%'
op|'('
name|'file'
op|'['
string|"'name'"
op|']'
op|','
name|'format'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'headers'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'conn'
op|'.'
name|'response'
op|'.'
name|'getheaders'
op|'('
op|')'
op|')'
newline|'\n'
name|'if'
name|'format'
op|'=='
string|"'json'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|','
nl|'\n'
string|"'application/json; charset=utf8'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'format'
op|'=='
string|"'xml'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'headers'
op|'['
string|"'content-type'"
op|']'
op|','
nl|'\n'
string|"'application/xml; charset=utf8'"
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'lm_diff'
op|'='
name|'max'
op|'('
op|'['
name|'f'
op|'['
string|"'last_modified'"
op|']'
name|'for'
name|'f'
name|'in'
name|'files'
op|']'
op|')'
op|'-'
name|'min'
op|'('
op|'['
name|'f'
op|'['
string|"'last_modified'"
op|']'
name|'for'
name|'f'
name|'in'
name|'files'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'lm_diff'
op|'<'
name|'write_time'
op|'+'
number|'1'
op|','
string|"'Diff in last '"
op|'+'
string|"'modified times should be less than time to write files'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'f'
name|'in'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'format'
name|'in'
op|'['
string|"'json'"
op|','
string|"'xml'"
op|']'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assert_'
op|'('
name|'f'
op|'['
name|'format'
op|']'
op|','
string|"'File %s not found in %s listing'"
op|'%'
op|'('
name|'f'
op|'['
string|"'name'"
op|']'
op|','
name|'format'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testStackedOverwrite
dedent|''
dedent|''
dedent|''
name|'def'
name|'testStackedOverwrite'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'1'
op|','
number|'11'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'data'
op|'='
name|'file'
op|'.'
name|'write_random'
op|'('
number|'512'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'write'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'read'
op|'('
op|')'
op|'=='
name|'data'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testTooLongName
dedent|''
name|'def'
name|'testTooLongName'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
string|"'x'"
op|'*'
number|'1025'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'write'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'400'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testZeroByteFile
dedent|''
name|'def'
name|'testZeroByteFile'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'write'
op|'('
string|"''"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'name'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'files'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'read'
op|'('
op|')'
op|'=='
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|testEtagResponse
dedent|''
name|'def'
name|'testEtagResponse'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'data'
op|'='
name|'StringIO'
op|'.'
name|'StringIO'
op|'('
name|'file'
op|'.'
name|'write_random'
op|'('
number|'512'
op|')'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'File'
op|'.'
name|'compute_md5sum'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
name|'headers'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'env'
op|'.'
name|'conn'
op|'.'
name|'response'
op|'.'
name|'getheaders'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
string|"'etag'"
name|'in'
name|'headers'
op|'.'
name|'keys'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'header_etag'
op|'='
name|'headers'
op|'['
string|"'etag'"
op|']'
op|'.'
name|'strip'
op|'('
string|'\'"\''
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'etag'
op|','
name|'header_etag'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testChunkedPut
dedent|''
name|'def'
name|'testChunkedPut'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'data'
op|'='
name|'File'
op|'.'
name|'random_data'
op|'('
number|'10000'
op|')'
newline|'\n'
name|'etag'
op|'='
name|'File'
op|'.'
name|'compute_md5sum'
op|'('
name|'data'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'i'
name|'in'
op|'('
number|'1'
op|','
number|'10'
op|','
number|'100'
op|','
number|'1000'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'='
name|'self'
op|'.'
name|'env'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'j'
name|'in'
name|'chunks'
op|'('
name|'data'
op|','
name|'i'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'file'
op|'.'
name|'chunked_write'
op|'('
name|'j'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'chunked_write'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'data'
op|'=='
name|'file'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'info'
op|'='
name|'file'
op|'.'
name|'info'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'etag'
op|','
name|'info'
op|'['
string|"'etag'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|class|TestFileUTF8
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestFileUTF8'
op|'('
name|'Base2'
op|','
name|'TestFile'
op|')'
op|':'
newline|'\n'
DECL|variable|set_up
indent|'    '
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|class|TestFileComparisonEnv
dedent|''
name|'class'
name|'TestFileComparisonEnv'
op|':'
newline|'\n'
indent|'    '
op|'@'
name|'classmethod'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'cls'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cls'
op|'.'
name|'conn'
op|'='
name|'Connection'
op|'('
name|'config'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'conn'
op|'.'
name|'authenticate'
op|'('
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'account'
op|'='
name|'Account'
op|'('
name|'cls'
op|'.'
name|'conn'
op|','
name|'config'
op|'.'
name|'get'
op|'('
string|"'account'"
op|','
nl|'\n'
name|'config'
op|'['
string|"'username'"
op|']'
op|')'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'account'
op|'.'
name|'delete_containers'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'cls'
op|'.'
name|'container'
op|'='
name|'cls'
op|'.'
name|'account'
op|'.'
name|'container'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'if'
name|'not'
name|'cls'
op|'.'
name|'container'
op|'.'
name|'create'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'raise'
name|'ResponseError'
op|'('
name|'cls'
op|'.'
name|'conn'
op|'.'
name|'response'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'cls'
op|'.'
name|'file_count'
op|'='
number|'20'
newline|'\n'
name|'cls'
op|'.'
name|'file_size'
op|'='
number|'128'
newline|'\n'
name|'cls'
op|'.'
name|'files'
op|'='
name|'list'
op|'('
op|')'
newline|'\n'
name|'for'
name|'x'
name|'in'
name|'range'
op|'('
name|'cls'
op|'.'
name|'file_count'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'file'
op|'='
name|'cls'
op|'.'
name|'container'
op|'.'
name|'file'
op|'('
name|'Utils'
op|'.'
name|'create_name'
op|'('
op|')'
op|')'
newline|'\n'
name|'file'
op|'.'
name|'write_random'
op|'('
name|'cls'
op|'.'
name|'file_size'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'files'
op|'.'
name|'append'
op|'('
name|'file'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'cls'
op|'.'
name|'time_old'
op|'='
name|'time'
op|'.'
name|'asctime'
op|'('
name|'time'
op|'.'
name|'localtime'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
number|'86400'
op|')'
op|')'
newline|'\n'
name|'cls'
op|'.'
name|'time_new'
op|'='
name|'time'
op|'.'
name|'asctime'
op|'('
name|'time'
op|'.'
name|'localtime'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
number|'86400'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|class|TestFileComparison
dedent|''
dedent|''
name|'class'
name|'TestFileComparison'
op|'('
name|'Base'
op|')'
op|':'
newline|'\n'
DECL|variable|env
indent|'    '
name|'env'
op|'='
name|'TestFileComparisonEnv'
newline|'\n'
DECL|variable|set_up
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|testIfMatch
name|'def'
name|'testIfMatch'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'file'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'hdrs'
op|'='
op|'{'
string|"'If-Match'"
op|':'
name|'file'
op|'.'
name|'md5'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'read'
op|'('
name|'hdrs'
op|'='
name|'hdrs'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'hdrs'
op|'='
op|'{'
string|"'If-Match'"
op|':'
string|"'bogus'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'read'
op|','
name|'hdrs'
op|'='
name|'hdrs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'412'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testIfNoneMatch
dedent|''
dedent|''
name|'def'
name|'testIfNoneMatch'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'file'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'hdrs'
op|'='
op|'{'
string|"'If-None-Match'"
op|':'
string|"'bogus'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'read'
op|'('
name|'hdrs'
op|'='
name|'hdrs'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'hdrs'
op|'='
op|'{'
string|"'If-None-Match'"
op|':'
name|'file'
op|'.'
name|'md5'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'read'
op|','
name|'hdrs'
op|'='
name|'hdrs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'304'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testIfModifiedSince
dedent|''
dedent|''
name|'def'
name|'testIfModifiedSince'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'file'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'hdrs'
op|'='
op|'{'
string|"'If-Modified-Since'"
op|':'
name|'self'
op|'.'
name|'env'
op|'.'
name|'time_old'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'read'
op|'('
name|'hdrs'
op|'='
name|'hdrs'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'hdrs'
op|'='
op|'{'
string|"'If-Modified-Since'"
op|':'
name|'self'
op|'.'
name|'env'
op|'.'
name|'time_new'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'read'
op|','
name|'hdrs'
op|'='
name|'hdrs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'304'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testIfUnmodifiedSince
dedent|''
dedent|''
name|'def'
name|'testIfUnmodifiedSince'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'file'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'hdrs'
op|'='
op|'{'
string|"'If-Unmodified-Since'"
op|':'
name|'self'
op|'.'
name|'env'
op|'.'
name|'time_new'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'read'
op|'('
name|'hdrs'
op|'='
name|'hdrs'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'hdrs'
op|'='
op|'{'
string|"'If-Unmodified-Since'"
op|':'
name|'self'
op|'.'
name|'env'
op|'.'
name|'time_old'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'read'
op|','
name|'hdrs'
op|'='
name|'hdrs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'412'
op|')'
newline|'\n'
nl|'\n'
DECL|member|testIfMatchAndUnmodified
dedent|''
dedent|''
name|'def'
name|'testIfMatchAndUnmodified'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'for'
name|'file'
name|'in'
name|'self'
op|'.'
name|'env'
op|'.'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'hdrs'
op|'='
op|'{'
string|"'If-Match'"
op|':'
name|'file'
op|'.'
name|'md5'
op|','
string|"'If-Unmodified-Since'"
op|':'
name|'self'
op|'.'
name|'env'
op|'.'
name|'time_new'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assert_'
op|'('
name|'file'
op|'.'
name|'read'
op|'('
name|'hdrs'
op|'='
name|'hdrs'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'hdrs'
op|'='
op|'{'
string|"'If-Match'"
op|':'
string|"'bogus'"
op|','
string|"'If-Unmodified-Since'"
op|':'
name|'self'
op|'.'
name|'env'
op|'.'
name|'time_new'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'read'
op|','
name|'hdrs'
op|'='
name|'hdrs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'412'
op|')'
newline|'\n'
nl|'\n'
name|'hdrs'
op|'='
op|'{'
string|"'If-Match'"
op|':'
name|'file'
op|'.'
name|'md5'
op|','
string|"'If-Unmodified-Since'"
op|':'
name|'self'
op|'.'
name|'env'
op|'.'
name|'time_old'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'ResponseError'
op|','
name|'file'
op|'.'
name|'read'
op|','
name|'hdrs'
op|'='
name|'hdrs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assert_status'
op|'('
number|'412'
op|')'
newline|'\n'
nl|'\n'
DECL|class|TestFileComparisonUTF8
dedent|''
dedent|''
dedent|''
name|'class'
name|'TestFileComparisonUTF8'
op|'('
name|'Base2'
op|','
name|'TestFileComparison'
op|')'
op|':'
newline|'\n'
DECL|variable|set_up
indent|'    '
name|'set_up'
op|'='
name|'False'
newline|'\n'
nl|'\n'
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
