begin_unit
comment|'# Copyright (c) 2010-2012 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'socket'
newline|'\n'
name|'from'
name|'swift'
name|'import'
name|'gettext_'
name|'as'
name|'_'
newline|'\n'
name|'from'
name|'logging'
name|'import'
name|'DEBUG'
newline|'\n'
name|'from'
name|'math'
name|'import'
name|'sqrt'
newline|'\n'
name|'from'
name|'time'
name|'import'
name|'time'
newline|'\n'
name|'from'
name|'hashlib'
name|'import'
name|'md5'
newline|'\n'
name|'import'
name|'itertools'
newline|'\n'
nl|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'GreenPool'
op|','
name|'sleep'
op|','
name|'Timeout'
newline|'\n'
name|'import'
name|'six'
newline|'\n'
nl|'\n'
name|'import'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'db'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'account'
op|'.'
name|'backend'
name|'import'
name|'AccountBroker'
op|','
name|'DATADIR'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'direct_client'
name|'import'
name|'direct_delete_container'
op|','
name|'direct_delete_object'
op|','
name|'direct_get_container'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'ClientException'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
name|'import'
name|'Ring'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
op|'.'
name|'utils'
name|'import'
name|'is_local_device'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'get_logger'
op|','
name|'whataremyips'
op|','
name|'ismount'
op|','
name|'config_true_value'
op|','
name|'Timestamp'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'daemon'
name|'import'
name|'Daemon'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'POLICIES'
op|','
name|'PolicyError'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|AccountReaper
name|'class'
name|'AccountReaper'
op|'('
name|'Daemon'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Removes data from status=DELETED accounts. These are accounts that have\n    been asked to be removed by the reseller via services\n    remove_storage_account XMLRPC call.\n\n    The account is not deleted immediately by the services call, but instead\n    the account is simply marked for deletion by setting the status column in\n    the account_stat table of the account database. This account reaper scans\n    for such accounts and removes the data in the background. The background\n    deletion process will occur on the primary account server for the account.\n\n    :param server_conf: The [account-server] dictionary of the account server\n                        configuration file\n    :param reaper_conf: The [account-reaper] dictionary of the account server\n                        configuration file\n\n    See the etc/account-server.conf-sample for information on the possible\n    configuration parameters.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'conf'
op|','
name|'logger'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'conf'
op|'='
name|'conf'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'logger'
name|'or'
name|'get_logger'
op|'('
name|'conf'
op|','
name|'log_route'
op|'='
string|"'account-reaper'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'devices'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'devices'"
op|','
string|"'/srv/node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mount_check'
op|'='
name|'config_true_value'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'mount_check'"
op|','
string|"'true'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'interval'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'interval'"
op|','
number|'3600'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'swift_dir'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'swift_dir'"
op|','
string|"'/etc/swift'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'account_ring'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'container_ring'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'object_ring'
op|'='
name|'None'
newline|'\n'
name|'self'
op|'.'
name|'node_timeout'
op|'='
name|'float'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'node_timeout'"
op|','
number|'10'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'conn_timeout'
op|'='
name|'float'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'conn_timeout'"
op|','
number|'0.5'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'myips'
op|'='
name|'whataremyips'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'bind_ip'"
op|','
string|"'0.0.0.0'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'bind_port'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'bind_port'"
op|','
number|'6002'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'concurrency'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'concurrency'"
op|','
number|'25'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_concurrency'
op|'='
name|'self'
op|'.'
name|'object_concurrency'
op|'='
name|'sqrt'
op|'('
name|'self'
op|'.'
name|'concurrency'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'container_pool'
op|'='
name|'GreenPool'
op|'('
name|'size'
op|'='
name|'self'
op|'.'
name|'container_concurrency'
op|')'
newline|'\n'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'db'
op|'.'
name|'DB_PREALLOCATION'
op|'='
name|'config_true_value'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'db_preallocation'"
op|','
string|"'f'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'delay_reaping'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'delay_reaping'"
op|')'
name|'or'
number|'0'
op|')'
newline|'\n'
name|'reap_warn_after'
op|'='
name|'float'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'reap_warn_after'"
op|')'
name|'or'
number|'86400'
op|'*'
number|'30'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'reap_not_done_after'
op|'='
name|'reap_warn_after'
op|'+'
name|'self'
op|'.'
name|'delay_reaping'
newline|'\n'
name|'self'
op|'.'
name|'start_time'
op|'='
name|'time'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|get_account_ring
dedent|''
name|'def'
name|'get_account_ring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""The account :class:`swift.common.ring.Ring` for the cluster."""'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'account_ring'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'account_ring'
op|'='
name|'Ring'
op|'('
name|'self'
op|'.'
name|'swift_dir'
op|','
name|'ring_name'
op|'='
string|"'account'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'account_ring'
newline|'\n'
nl|'\n'
DECL|member|get_container_ring
dedent|''
name|'def'
name|'get_container_ring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""The container :class:`swift.common.ring.Ring` for the cluster."""'
newline|'\n'
name|'if'
name|'not'
name|'self'
op|'.'
name|'container_ring'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'container_ring'
op|'='
name|'Ring'
op|'('
name|'self'
op|'.'
name|'swift_dir'
op|','
name|'ring_name'
op|'='
string|"'container'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'self'
op|'.'
name|'container_ring'
newline|'\n'
nl|'\n'
DECL|member|get_object_ring
dedent|''
name|'def'
name|'get_object_ring'
op|'('
name|'self'
op|','
name|'policy_idx'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Get the ring identified by the policy index\n\n        :param policy_idx: Storage policy index\n        :returns: A ring matching the storage policy\n        """'
newline|'\n'
name|'return'
name|'POLICIES'
op|'.'
name|'get_object_ring'
op|'('
name|'policy_idx'
op|','
name|'self'
op|'.'
name|'swift_dir'
op|')'
newline|'\n'
nl|'\n'
DECL|member|run_forever
dedent|''
name|'def'
name|'run_forever'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Main entry point when running the reaper in normal daemon mode.\n\n        This repeatedly calls :func:`reap_once` no quicker than the\n        configuration interval.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Daemon started.'"
op|')'
newline|'\n'
name|'sleep'
op|'('
name|'random'
op|'.'
name|'random'
op|'('
op|')'
op|'*'
name|'self'
op|'.'
name|'interval'
op|')'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'begin'
op|'='
name|'time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
name|'elapsed'
op|'='
name|'time'
op|'('
op|')'
op|'-'
name|'begin'
newline|'\n'
name|'if'
name|'elapsed'
op|'<'
name|'self'
op|'.'
name|'interval'
op|':'
newline|'\n'
indent|'                '
name|'sleep'
op|'('
name|'self'
op|'.'
name|'interval'
op|'-'
name|'elapsed'
op|')'
newline|'\n'
nl|'\n'
DECL|member|run_once
dedent|''
dedent|''
dedent|''
name|'def'
name|'run_once'
op|'('
name|'self'
op|','
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Main entry point when running the reaper in \'once\' mode, where it will\n        do a single pass over all accounts on the server. This is called\n        repeatedly by :func:`run_forever`. This will call :func:`reap_device`\n        once for each device on the server.\n        """'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
string|"'Begin devices pass: %s'"
op|','
name|'self'
op|'.'
name|'devices'
op|')'
newline|'\n'
name|'begin'
op|'='
name|'time'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'device'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'self'
op|'.'
name|'devices'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'mount_check'
name|'and'
name|'not'
name|'ismount'
op|'('
nl|'\n'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'device'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'errors'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Skipping %s as it is not mounted'"
op|')'
op|','
name|'device'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'reap_device'
op|'('
name|'device'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|'"Exception in top-level account reaper "'
nl|'\n'
string|'"loop"'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elapsed'
op|'='
name|'time'
op|'('
op|')'
op|'-'
name|'begin'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'Devices pass completed: %.02fs'"
op|')'
op|','
name|'elapsed'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reap_device
dedent|''
name|'def'
name|'reap_device'
op|'('
name|'self'
op|','
name|'device'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Called once per pass for each device on the server. This will scan the\n        accounts directory for the device, looking for partitions this device\n        is the primary for, then looking for account databases that are marked\n        status=DELETED and still have containers and calling\n        :func:`reap_account`. Account databases marked status=DELETED that no\n        longer have containers will eventually be permanently removed by the\n        reclaim process within the account replicator (see\n        :mod:`swift.db_replicator`).\n\n        :param device: The device to look for accounts to be deleted.\n        """'
newline|'\n'
name|'datadir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices'
op|','
name|'device'
op|','
name|'DATADIR'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'datadir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'for'
name|'partition'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'datadir'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'partition_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'datadir'
op|','
name|'partition'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'partition'
op|'.'
name|'isdigit'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'nodes'
op|'='
name|'self'
op|'.'
name|'get_account_ring'
op|'('
op|')'
op|'.'
name|'get_part_nodes'
op|'('
name|'int'
op|'('
name|'partition'
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'partition_path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
dedent|''
name|'container_shard'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'container_shard'
op|','
name|'node'
name|'in'
name|'enumerate'
op|'('
name|'nodes'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'is_local_device'
op|'('
name|'self'
op|'.'
name|'myips'
op|','
name|'None'
op|','
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'None'
op|')'
name|'and'
op|'('
name|'not'
name|'self'
op|'.'
name|'bind_port'
name|'or'
nl|'\n'
name|'self'
op|'.'
name|'bind_port'
op|'=='
name|'node'
op|'['
string|"'port'"
op|']'
op|')'
name|'and'
op|'('
name|'device'
op|'=='
name|'node'
op|'['
string|"'device'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'for'
name|'suffix'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'partition_path'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'suffix_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'partition_path'
op|','
name|'suffix'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'suffix_path'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'for'
name|'hsh'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'suffix_path'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'hsh_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'suffix_path'
op|','
name|'hsh'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'isdir'
op|'('
name|'hsh_path'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'continue'
newline|'\n'
dedent|''
name|'for'
name|'fname'
name|'in'
name|'sorted'
op|'('
name|'os'
op|'.'
name|'listdir'
op|'('
name|'hsh_path'
op|')'
op|','
name|'reverse'
op|'='
name|'True'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'if'
name|'fname'
op|'.'
name|'endswith'
op|'('
string|"'.ts'"
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'break'
newline|'\n'
dedent|''
name|'elif'
name|'fname'
op|'.'
name|'endswith'
op|'('
string|"'.db'"
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'start_time'
op|'='
name|'time'
op|'('
op|')'
newline|'\n'
name|'broker'
op|'='
name|'AccountBroker'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'hsh_path'
op|','
name|'fname'
op|')'
op|')'
newline|'\n'
name|'if'
name|'broker'
op|'.'
name|'is_status_deleted'
op|'('
op|')'
name|'and'
name|'not'
name|'broker'
op|'.'
name|'empty'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                                '
name|'self'
op|'.'
name|'reap_account'
op|'('
nl|'\n'
name|'broker'
op|','
name|'partition'
op|','
name|'nodes'
op|','
nl|'\n'
name|'container_shard'
op|'='
name|'container_shard'
op|')'
newline|'\n'
nl|'\n'
DECL|member|reset_stats
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'reset_stats'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'stats_return_codes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'stats_containers_deleted'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'stats_objects_deleted'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'stats_containers_remaining'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'stats_objects_remaining'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'stats_containers_possibly_remaining'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'stats_objects_possibly_remaining'
op|'='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|reap_account
dedent|''
name|'def'
name|'reap_account'
op|'('
name|'self'
op|','
name|'broker'
op|','
name|'partition'
op|','
name|'nodes'
op|','
name|'container_shard'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Called once per pass for each account this server is the primary for\n        and attempts to delete the data for the given account. The reaper will\n        only delete one account at any given time. It will call\n        :func:`reap_container` up to sqrt(self.concurrency) times concurrently\n        while reaping the account.\n\n        If there is any exception while deleting a single container, the\n        process will continue for any other containers and the failed\n        containers will be tried again the next time this function is called\n        with the same parameters.\n\n        If there is any exception while listing the containers for deletion,\n        the process will stop (but will obviously be tried again the next time\n        this function is called with the same parameters). This isn\'t likely\n        since the listing comes from the local database.\n\n        After the process completes (successfully or not) statistics about what\n        was accomplished will be logged.\n\n        This function returns nothing and should raise no exception but only\n        update various self.stats_* values for what occurs.\n\n        :param broker: The AccountBroker for the account to delete.\n        :param partition: The partition in the account ring the account is on.\n        :param nodes: The primary node dicts for the account to delete.\n        :param container_shard: int used to shard containers reaped. If None,\n                                will reap all containers.\n\n        .. seealso::\n\n            :class:`swift.account.backend.AccountBroker` for the broker class.\n\n        .. seealso::\n\n            :func:`swift.common.ring.Ring.get_nodes` for a description\n            of the node dicts.\n        """'
newline|'\n'
name|'begin'
op|'='
name|'time'
op|'('
op|')'
newline|'\n'
name|'info'
op|'='
name|'broker'
op|'.'
name|'get_info'
op|'('
op|')'
newline|'\n'
name|'if'
name|'time'
op|'('
op|')'
op|'-'
name|'float'
op|'('
name|'Timestamp'
op|'('
name|'info'
op|'['
string|"'delete_timestamp'"
op|']'
op|')'
op|')'
op|'<='
name|'self'
op|'.'
name|'delay_reaping'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'account'
op|'='
name|'info'
op|'['
string|"'account'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
name|'_'
op|'('
string|"'Beginning pass on account %s'"
op|')'
op|','
name|'account'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'reset_stats'
op|'('
op|')'
newline|'\n'
name|'container_limit'
op|'='
number|'1000'
newline|'\n'
name|'if'
name|'container_shard'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'container_limit'
op|'*='
name|'len'
op|'('
name|'nodes'
op|')'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'                '
name|'containers'
op|'='
name|'list'
op|'('
name|'broker'
op|'.'
name|'list_containers_iter'
op|'('
name|'container_limit'
op|','
name|'marker'
op|','
nl|'\n'
name|'None'
op|','
name|'None'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'containers'
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'for'
op|'('
name|'container'
op|','
name|'_junk'
op|','
name|'_junk'
op|','
name|'_junk'
op|')'
name|'in'
name|'containers'
op|':'
newline|'\n'
indent|'                        '
name|'this_shard'
op|'='
name|'int'
op|'('
name|'md5'
op|'('
name|'container'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|','
number|'16'
op|')'
op|'%'
name|'len'
op|'('
name|'nodes'
op|')'
newline|'\n'
name|'if'
name|'container_shard'
name|'not'
name|'in'
op|'('
name|'this_shard'
op|','
name|'None'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'continue'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'container_pool'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'reap_container'
op|','
name|'account'
op|','
nl|'\n'
name|'partition'
op|','
name|'nodes'
op|','
name|'container'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'container_pool'
op|'.'
name|'waitall'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Exception with containers for account %s'"
op|')'
op|','
name|'account'
op|')'
newline|'\n'
dedent|''
name|'marker'
op|'='
name|'containers'
op|'['
op|'-'
number|'1'
op|']'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
name|'marker'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'                    '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'log'
op|'='
string|"'Completed pass on account %s'"
op|'%'
name|'account'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Exception with account %s'"
op|')'
op|','
name|'account'
op|')'
newline|'\n'
name|'log'
op|'='
name|'_'
op|'('
string|"'Incomplete pass on account %s'"
op|')'
op|'%'
name|'account'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'stats_containers_deleted'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'+='
name|'_'
op|'('
string|"', %s containers deleted'"
op|')'
op|'%'
name|'self'
op|'.'
name|'stats_containers_deleted'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'stats_objects_deleted'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'+='
name|'_'
op|'('
string|"', %s objects deleted'"
op|')'
op|'%'
name|'self'
op|'.'
name|'stats_objects_deleted'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'stats_containers_remaining'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'+='
name|'_'
op|'('
string|"', %s containers remaining'"
op|')'
op|'%'
name|'self'
op|'.'
name|'stats_containers_remaining'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'stats_objects_remaining'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'+='
name|'_'
op|'('
string|"', %s objects remaining'"
op|')'
op|'%'
name|'self'
op|'.'
name|'stats_objects_remaining'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'stats_containers_possibly_remaining'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'+='
name|'_'
op|'('
string|"', %s containers possibly remaining'"
op|')'
op|'%'
name|'self'
op|'.'
name|'stats_containers_possibly_remaining'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'stats_objects_possibly_remaining'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'+='
name|'_'
op|'('
string|"', %s objects possibly remaining'"
op|')'
op|'%'
name|'self'
op|'.'
name|'stats_objects_possibly_remaining'
newline|'\n'
dedent|''
name|'if'
name|'self'
op|'.'
name|'stats_return_codes'
op|':'
newline|'\n'
indent|'            '
name|'log'
op|'+='
name|'_'
op|'('
string|"', return codes: '"
op|')'
newline|'\n'
name|'for'
name|'code'
name|'in'
name|'sorted'
op|'('
name|'self'
op|'.'
name|'stats_return_codes'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'log'
op|'+='
string|"'%s %sxxs, '"
op|'%'
op|'('
name|'self'
op|'.'
name|'stats_return_codes'
op|'['
name|'code'
op|']'
op|','
name|'code'
op|')'
newline|'\n'
dedent|''
name|'log'
op|'='
name|'log'
op|'['
op|':'
op|'-'
number|'2'
op|']'
newline|'\n'
dedent|''
name|'log'
op|'+='
name|'_'
op|'('
string|"', elapsed: %.02fs'"
op|')'
op|'%'
op|'('
name|'time'
op|'('
op|')'
op|'-'
name|'begin'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
name|'log'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'timing_since'
op|'('
string|"'timing'"
op|','
name|'self'
op|'.'
name|'start_time'
op|')'
newline|'\n'
name|'delete_timestamp'
op|'='
name|'Timestamp'
op|'('
name|'info'
op|'['
string|"'delete_timestamp'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'stats_containers_remaining'
name|'and'
name|'begin'
op|'-'
name|'float'
op|'('
name|'delete_timestamp'
op|')'
op|'>='
name|'self'
op|'.'
name|'reap_not_done_after'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'warning'
op|'('
name|'_'
op|'('
string|"'Account %s has not been reaped since %s'"
op|')'
op|'%'
nl|'\n'
op|'('
name|'account'
op|','
name|'delete_timestamp'
op|'.'
name|'isoformat'
op|')'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|reap_container
dedent|''
name|'def'
name|'reap_container'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'account_partition'
op|','
name|'account_nodes'
op|','
nl|'\n'
name|'container'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Deletes the data and the container itself for the given container. This\n        will call :func:`reap_object` up to sqrt(self.concurrency) times\n        concurrently for the objects in the container.\n\n        If there is any exception while deleting a single object, the process\n        will continue for any other objects in the container and the failed\n        objects will be tried again the next time this function is called with\n        the same parameters.\n\n        If there is any exception while listing the objects for deletion, the\n        process will stop (but will obviously be tried again the next time this\n        function is called with the same parameters). This is a possibility\n        since the listing comes from querying just the primary remote container\n        server.\n\n        Once all objects have been attempted to be deleted, the container\n        itself will be attempted to be deleted by sending a delete request to\n        all container nodes. The format of the delete request is such that each\n        container server will update a corresponding account server, removing\n        the container from the account\'s listing.\n\n        This function returns nothing and should raise no exception but only\n        update various self.stats_* values for what occurs.\n\n        :param account: The name of the account for the container.\n        :param account_partition: The partition for the account on the account\n                                  ring.\n        :param account_nodes: The primary node dicts for the account.\n        :param container: The name of the container to delete.\n\n        * See also: :func:`swift.common.ring.Ring.get_nodes` for a description\n          of the account node dicts.\n        """'
newline|'\n'
name|'account_nodes'
op|'='
name|'list'
op|'('
name|'account_nodes'
op|')'
newline|'\n'
name|'part'
op|','
name|'nodes'
op|'='
name|'self'
op|'.'
name|'get_container_ring'
op|'('
op|')'
op|'.'
name|'get_nodes'
op|'('
name|'account'
op|','
name|'container'
op|')'
newline|'\n'
name|'node'
op|'='
name|'nodes'
op|'['
op|'-'
number|'1'
op|']'
newline|'\n'
name|'pool'
op|'='
name|'GreenPool'
op|'('
name|'size'
op|'='
name|'self'
op|'.'
name|'object_concurrency'
op|')'
newline|'\n'
name|'marker'
op|'='
string|"''"
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'objects'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'headers'
op|','
name|'objects'
op|'='
name|'direct_get_container'
op|'('
nl|'\n'
name|'node'
op|','
name|'part'
op|','
name|'account'
op|','
name|'container'
op|','
nl|'\n'
name|'marker'
op|'='
name|'marker'
op|','
nl|'\n'
name|'conn_timeout'
op|'='
name|'self'
op|'.'
name|'conn_timeout'
op|','
nl|'\n'
name|'response_timeout'
op|'='
name|'self'
op|'.'
name|'node_timeout'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats_return_codes'
op|'['
number|'2'
op|']'
op|'='
name|'self'
op|'.'
name|'stats_return_codes'
op|'.'
name|'get'
op|'('
number|'2'
op|','
number|'0'
op|')'
op|'+'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'return_codes.2'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'getEffectiveLevel'
op|'('
op|')'
op|'<='
name|'DEBUG'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Exception with %(ip)s:%(port)s/%(device)s'"
op|')'
op|','
name|'node'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stats_return_codes'
op|'['
name|'err'
op|'.'
name|'http_status'
op|'//'
number|'100'
op|']'
op|'='
name|'self'
op|'.'
name|'stats_return_codes'
op|'.'
name|'get'
op|'('
name|'err'
op|'.'
name|'http_status'
op|'//'
number|'100'
op|','
number|'0'
op|')'
op|'+'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
nl|'\n'
string|"'return_codes.%d'"
op|'%'
op|'('
name|'err'
op|'.'
name|'http_status'
op|'//'
number|'100'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Timeout'
op|','
name|'socket'
op|'.'
name|'error'
op|')'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Timeout Exception with %(ip)s:%(port)s/%(device)s'"
op|')'
op|','
nl|'\n'
name|'node'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'objects'
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'policy_index'
op|'='
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Backend-Storage-Policy-Index'"
op|','
number|'0'
op|')'
newline|'\n'
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'get_by_index'
op|'('
name|'policy_index'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'policy'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
string|"'ERROR: invalid storage policy index: %r'"
nl|'\n'
op|'%'
name|'policy_index'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'obj'
name|'in'
name|'objects'
op|':'
newline|'\n'
indent|'                    '
name|'if'
name|'isinstance'
op|'('
name|'obj'
op|'['
string|"'name'"
op|']'
op|','
name|'six'
op|'.'
name|'text_type'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'obj'
op|'['
string|"'name'"
op|']'
op|'='
name|'obj'
op|'['
string|"'name'"
op|']'
op|'.'
name|'encode'
op|'('
string|"'utf8'"
op|')'
newline|'\n'
dedent|''
name|'pool'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'reap_object'
op|','
name|'account'
op|','
name|'container'
op|','
name|'part'
op|','
nl|'\n'
name|'nodes'
op|','
name|'obj'
op|'['
string|"'name'"
op|']'
op|','
name|'policy_index'
op|')'
newline|'\n'
dedent|''
name|'pool'
op|'.'
name|'waitall'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
name|'_'
op|'('
string|"'Exception with objects for container '"
nl|'\n'
string|"'%(container)s for account %(account)s'"
nl|'\n'
op|')'
op|','
nl|'\n'
op|'{'
string|"'container'"
op|':'
name|'container'
op|','
nl|'\n'
string|"'account'"
op|':'
name|'account'
op|'}'
op|')'
newline|'\n'
dedent|''
name|'marker'
op|'='
name|'objects'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'if'
name|'marker'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'                '
name|'break'
newline|'\n'
dedent|''
dedent|''
name|'successes'
op|'='
number|'0'
newline|'\n'
name|'failures'
op|'='
number|'0'
newline|'\n'
name|'timestamp'
op|'='
name|'Timestamp'
op|'('
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'anode'
op|'='
name|'account_nodes'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_delete_container'
op|'('
nl|'\n'
name|'node'
op|','
name|'part'
op|','
name|'account'
op|','
name|'container'
op|','
nl|'\n'
name|'conn_timeout'
op|'='
name|'self'
op|'.'
name|'conn_timeout'
op|','
nl|'\n'
name|'response_timeout'
op|'='
name|'self'
op|'.'
name|'node_timeout'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Account-Host'"
op|':'
string|"'%(ip)s:%(port)s'"
op|'%'
name|'anode'
op|','
nl|'\n'
string|"'X-Account-Partition'"
op|':'
name|'str'
op|'('
name|'account_partition'
op|')'
op|','
nl|'\n'
string|"'X-Account-Device'"
op|':'
name|'anode'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
string|"'X-Account-Override-Deleted'"
op|':'
string|"'yes'"
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'timestamp'
op|'.'
name|'internal'
op|'}'
op|')'
newline|'\n'
name|'successes'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'stats_return_codes'
op|'['
number|'2'
op|']'
op|'='
name|'self'
op|'.'
name|'stats_return_codes'
op|'.'
name|'get'
op|'('
number|'2'
op|','
number|'0'
op|')'
op|'+'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'return_codes.2'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'getEffectiveLevel'
op|'('
op|')'
op|'<='
name|'DEBUG'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Exception with %(ip)s:%(port)s/%(device)s'"
op|')'
op|','
name|'node'
op|')'
newline|'\n'
dedent|''
name|'failures'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'containers_failures'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats_return_codes'
op|'['
name|'err'
op|'.'
name|'http_status'
op|'//'
number|'100'
op|']'
op|'='
name|'self'
op|'.'
name|'stats_return_codes'
op|'.'
name|'get'
op|'('
name|'err'
op|'.'
name|'http_status'
op|'//'
number|'100'
op|','
number|'0'
op|')'
op|'+'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
nl|'\n'
string|"'return_codes.%d'"
op|'%'
op|'('
name|'err'
op|'.'
name|'http_status'
op|'//'
number|'100'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Timeout'
op|','
name|'socket'
op|'.'
name|'error'
op|')'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Timeout Exception with %(ip)s:%(port)s/%(device)s'"
op|')'
op|','
nl|'\n'
name|'node'
op|')'
newline|'\n'
name|'failures'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'containers_failures'"
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'successes'
op|'>'
name|'failures'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats_containers_deleted'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'containers_deleted'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'successes'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats_containers_remaining'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'containers_remaining'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats_containers_possibly_remaining'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'containers_possibly_remaining'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|reap_object
dedent|''
dedent|''
name|'def'
name|'reap_object'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|','
name|'container_partition'
op|','
nl|'\n'
name|'container_nodes'
op|','
name|'obj'
op|','
name|'policy_index'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Deletes the given object by issuing a delete request to each node for\n        the object. The format of the delete request is such that each object\n        server will update a corresponding container server, removing the\n        object from the container\'s listing.\n\n        This function returns nothing and should raise no exception but only\n        update various self.stats_* values for what occurs.\n\n        :param account: The name of the account for the object.\n        :param container: The name of the container for the object.\n        :param container_partition: The partition for the container on the\n                                    container ring.\n        :param container_nodes: The primary node dicts for the container.\n        :param obj: The name of the object to delete.\n        :param policy_index: The storage policy index of the object\'s container\n\n        * See also: :func:`swift.common.ring.Ring.get_nodes` for a description\n          of the container node dicts.\n        """'
newline|'\n'
name|'cnodes'
op|'='
name|'itertools'
op|'.'
name|'cycle'
op|'('
name|'container_nodes'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'ring'
op|'='
name|'self'
op|'.'
name|'get_object_ring'
op|'('
name|'policy_index'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'PolicyError'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'stats_objects_remaining'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'objects_remaining'"
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'part'
op|','
name|'nodes'
op|'='
name|'ring'
op|'.'
name|'get_nodes'
op|'('
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|')'
newline|'\n'
name|'successes'
op|'='
number|'0'
newline|'\n'
name|'failures'
op|'='
number|'0'
newline|'\n'
name|'timestamp'
op|'='
name|'Timestamp'
op|'('
name|'time'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'node'
name|'in'
name|'nodes'
op|':'
newline|'\n'
indent|'            '
name|'cnode'
op|'='
name|'next'
op|'('
name|'cnodes'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'direct_delete_object'
op|'('
nl|'\n'
name|'node'
op|','
name|'part'
op|','
name|'account'
op|','
name|'container'
op|','
name|'obj'
op|','
nl|'\n'
name|'conn_timeout'
op|'='
name|'self'
op|'.'
name|'conn_timeout'
op|','
nl|'\n'
name|'response_timeout'
op|'='
name|'self'
op|'.'
name|'node_timeout'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'X-Container-Host'"
op|':'
string|"'%(ip)s:%(port)s'"
op|'%'
name|'cnode'
op|','
nl|'\n'
string|"'X-Container-Partition'"
op|':'
name|'str'
op|'('
name|'container_partition'
op|')'
op|','
nl|'\n'
string|"'X-Container-Device'"
op|':'
name|'cnode'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
string|"'X-Backend-Storage-Policy-Index'"
op|':'
name|'policy_index'
op|','
nl|'\n'
string|"'X-Timestamp'"
op|':'
name|'timestamp'
op|'.'
name|'internal'
op|'}'
op|')'
newline|'\n'
name|'successes'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'stats_return_codes'
op|'['
number|'2'
op|']'
op|'='
name|'self'
op|'.'
name|'stats_return_codes'
op|'.'
name|'get'
op|'('
number|'2'
op|','
number|'0'
op|')'
op|'+'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'return_codes.2'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ClientException'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'getEffectiveLevel'
op|'('
op|')'
op|'<='
name|'DEBUG'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Exception with %(ip)s:%(port)s/%(device)s'"
op|')'
op|','
name|'node'
op|')'
newline|'\n'
dedent|''
name|'failures'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'objects_failures'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats_return_codes'
op|'['
name|'err'
op|'.'
name|'http_status'
op|'//'
number|'100'
op|']'
op|'='
name|'self'
op|'.'
name|'stats_return_codes'
op|'.'
name|'get'
op|'('
name|'err'
op|'.'
name|'http_status'
op|'//'
number|'100'
op|','
number|'0'
op|')'
op|'+'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
nl|'\n'
string|"'return_codes.%d'"
op|'%'
op|'('
name|'err'
op|'.'
name|'http_status'
op|'//'
number|'100'
op|','
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Timeout'
op|','
name|'socket'
op|'.'
name|'error'
op|')'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                '
name|'failures'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'objects_failures'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
nl|'\n'
name|'_'
op|'('
string|"'Timeout Exception with %(ip)s:%(port)s/%(device)s'"
op|')'
op|','
nl|'\n'
name|'node'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'successes'
op|'>'
name|'failures'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'stats_objects_deleted'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'objects_deleted'"
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'not'
name|'successes'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'stats_objects_remaining'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'objects_remaining'"
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'stats_objects_possibly_remaining'
op|'+='
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'increment'
op|'('
string|"'objects_possibly_remaining'"
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
endmarker|''
end_unit
