begin_unit
comment|'# Copyright (c) 2010-2016 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'errno'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'from'
name|'shutil'
name|'import'
name|'rmtree'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'debug_logger'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'container'
op|'.'
name|'backend'
name|'import'
name|'DATADIR'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'container'
name|'import'
name|'sync_store'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeContainerBroker
name|'class'
name|'FakeContainerBroker'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'path'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'db_file'
op|'='
name|'path'
newline|'\n'
name|'self'
op|'.'
name|'db_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'path'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'metadata'
op|'='
name|'dict'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_is_deleted'
op|'='
name|'False'
newline|'\n'
nl|'\n'
DECL|member|is_deleted
dedent|''
name|'def'
name|'is_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'self'
op|'.'
name|'_is_deleted'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestContainerSyncStore
dedent|''
dedent|''
name|'class'
name|'TestContainerSyncStore'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'logger'
op|'='
name|'debug_logger'
op|'('
string|"'test-container-sync-store'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'level'
op|'='
name|'logging'
op|'.'
name|'DEBUG'
newline|'\n'
name|'self'
op|'.'
name|'test_dir_prefix'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'devices_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'test_dir_prefix'
op|','
string|"'srv/node/'"
op|')'
newline|'\n'
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'self'
op|'.'
name|'devices_dir'
op|')'
newline|'\n'
comment|'# Create dummy container dbs'
nl|'\n'
name|'self'
op|'.'
name|'devices'
op|'='
op|'['
string|"'sdax'"
op|','
string|"'sdb'"
op|','
string|"'sdc'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'partitions'
op|'='
op|'['
string|"'21765'"
op|','
string|"'38965'"
op|','
string|"'13234'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'suffixes'
op|'='
op|'['
string|"'312'"
op|','
string|"'435'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'hashes'
op|'='
op|'['
string|"'f19ed'"
op|','
string|"'53ef'"
op|','
string|"'0ab5'"
op|','
string|"'9c3a'"
op|']'
newline|'\n'
name|'for'
name|'device'
name|'in'
name|'self'
op|'.'
name|'devices'
op|':'
newline|'\n'
indent|'            '
name|'data_dir_path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
name|'device'
op|','
nl|'\n'
name|'DATADIR'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'data_dir_path'
op|')'
newline|'\n'
name|'for'
name|'part'
name|'in'
name|'self'
op|'.'
name|'partitions'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'suffix'
name|'in'
name|'self'
op|'.'
name|'suffixes'
op|':'
newline|'\n'
indent|'                    '
name|'for'
name|'hsh'
name|'in'
name|'self'
op|'.'
name|'hashes'
op|':'
newline|'\n'
indent|'                        '
name|'db_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'data_dir_path'
op|','
nl|'\n'
name|'part'
op|','
nl|'\n'
name|'suffix'
op|','
nl|'\n'
name|'hsh'
op|')'
newline|'\n'
name|'os'
op|'.'
name|'makedirs'
op|'('
name|'db_dir'
op|')'
newline|'\n'
name|'db_file'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'db_dir'
op|','
string|"'%s.db'"
op|'%'
name|'hsh'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'db_file'
op|','
string|"'w'"
op|')'
name|'as'
name|'outfile'
op|':'
newline|'\n'
indent|'                            '
name|'outfile'
op|'.'
name|'write'
op|'('
string|"'%s'"
op|'%'
name|'db_file'
op|')'
newline|'\n'
nl|'\n'
DECL|member|teardown
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'teardown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'test_dir_prefix'
op|')'
newline|'\n'
nl|'\n'
DECL|member|pick_dbfile
dedent|''
name|'def'
name|'pick_dbfile'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hsh'
op|'='
name|'random'
op|'.'
name|'choice'
op|'('
name|'self'
op|'.'
name|'hashes'
op|')'
newline|'\n'
name|'return'
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
name|'random'
op|'.'
name|'choice'
op|'('
name|'self'
op|'.'
name|'devices'
op|')'
op|','
nl|'\n'
name|'DATADIR'
op|','
nl|'\n'
name|'random'
op|'.'
name|'choice'
op|'('
name|'self'
op|'.'
name|'partitions'
op|')'
op|','
nl|'\n'
name|'random'
op|'.'
name|'choice'
op|'('
name|'self'
op|'.'
name|'suffixes'
op|')'
op|','
nl|'\n'
name|'hsh'
op|','
nl|'\n'
string|"'%s.db'"
op|'%'
name|'hsh'
op|')'
newline|'\n'
nl|'\n'
comment|'# Path conversion tests'
nl|'\n'
comment|'# container path is of the form:'
nl|'\n'
comment|'# /srv/node/sdb/containers/part/.../*.db'
nl|'\n'
comment|'# or more generally:'
nl|'\n'
comment|'# devices/device/DATADIR/part/.../*.db'
nl|'\n'
comment|'# synced container path is assumed to be of the form:'
nl|'\n'
comment|'# /srv/node/sdb/sync_containers/part/.../*.db'
nl|'\n'
comment|'# or more generally:'
nl|'\n'
comment|'# devices/device/SYNC_DATADIR/part/.../*.db'
nl|'\n'
comment|'# Indeed the ONLY DIFFERENCE is DATADIR <-> SYNC_DATADIR'
nl|'\n'
comment|'# Since, however, the strings represented by the constants'
nl|'\n'
comment|'# DATADIR or SYNC_DATADIR'
nl|'\n'
comment|'# can appear in the devices or the device part, the conversion'
nl|'\n'
comment|'# function between the two is a bit more subtle then a mere replacement.'
nl|'\n'
nl|'\n'
comment|'# This function tests the conversion between a container path'
nl|'\n'
comment|'# and a synced container path'
nl|'\n'
DECL|member|test_container_to_synced_container_path_conversion
dedent|''
name|'def'
name|'test_container_to_synced_container_path_conversion'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# The conversion functions are oblivious to the suffix'
nl|'\n'
comment|'# so we just pick up a constant one.'
nl|'\n'
indent|'        '
name|'db_path_suffix'
op|'='
name|'self'
op|'.'
name|'_db_path_suffix'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# We build various container path putting in both'
nl|'\n'
comment|'# DATADIR and SYNC_DATADIR strings in the'
nl|'\n'
comment|'# device and devices parts.'
nl|'\n'
name|'for'
name|'devices'
op|','
name|'device'
name|'in'
name|'self'
op|'.'
name|'_container_path_elements_generator'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'devices'
op|','
name|'device'
op|','
name|'DATADIR'
op|','
name|'db_path_suffix'
op|')'
newline|'\n'
comment|'# Call the conversion function'
nl|'\n'
name|'sds'
op|'='
name|'sync_store'
op|'.'
name|'ContainerSyncStore'
op|'('
name|'devices'
op|','
name|'self'
op|'.'
name|'logger'
op|','
name|'False'
op|')'
newline|'\n'
name|'path'
op|'='
name|'sds'
op|'.'
name|'_container_to_synced_container_path'
op|'('
name|'path'
op|')'
newline|'\n'
comment|'# Validate that ONLY the DATADIR part was replaced with'
nl|'\n'
comment|'# sync_store.SYNC_DATADIR'
nl|'\n'
name|'self'
op|'.'
name|'_validate_container_path_parts'
op|'('
name|'path'
op|','
name|'devices'
op|','
name|'device'
op|','
nl|'\n'
name|'sync_store'
op|'.'
name|'SYNC_DATADIR'
op|','
nl|'\n'
name|'db_path_suffix'
op|')'
newline|'\n'
nl|'\n'
comment|'# This function tests the conversion between a synced container path'
nl|'\n'
comment|'# and a container path'
nl|'\n'
DECL|member|test_synced_container_to_container_path_conversion
dedent|''
dedent|''
name|'def'
name|'test_synced_container_to_container_path_conversion'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# The conversion functions are oblivious to the suffix'
nl|'\n'
comment|'# so we just pick up a constant one.'
nl|'\n'
indent|'        '
name|'db_path_suffix'
op|'='
op|'('
string|"'133791/625/82a7f5a2c43281b0eab3597e35bb9625/'"
nl|'\n'
string|"'82a7f5a2c43281b0eab3597e35bb9625.db'"
op|')'
newline|'\n'
nl|'\n'
comment|'# We build various synced container path putting in both'
nl|'\n'
comment|'# DATADIR and SYNC_DATADIR strings in the'
nl|'\n'
comment|'# device and devices parts.'
nl|'\n'
name|'for'
name|'devices'
op|','
name|'device'
name|'in'
name|'self'
op|'.'
name|'_container_path_elements_generator'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'path'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'devices'
op|','
name|'device'
op|','
nl|'\n'
name|'sync_store'
op|'.'
name|'SYNC_DATADIR'
op|','
name|'db_path_suffix'
op|')'
newline|'\n'
comment|'# Call the conversion function'
nl|'\n'
name|'sds'
op|'='
name|'sync_store'
op|'.'
name|'ContainerSyncStore'
op|'('
name|'devices'
op|','
name|'self'
op|'.'
name|'logger'
op|','
name|'False'
op|')'
newline|'\n'
name|'path'
op|'='
name|'sds'
op|'.'
name|'_synced_container_to_container_path'
op|'('
name|'path'
op|')'
newline|'\n'
comment|'# Validate that ONLY the SYNC_DATADIR part was replaced with'
nl|'\n'
comment|'# DATADIR'
nl|'\n'
name|'self'
op|'.'
name|'_validate_container_path_parts'
op|'('
name|'path'
op|','
name|'devices'
op|','
name|'device'
op|','
nl|'\n'
name|'DATADIR'
op|','
nl|'\n'
name|'db_path_suffix'
op|')'
newline|'\n'
nl|'\n'
comment|'# Constructs a db path suffix of the form:'
nl|'\n'
comment|'# 133791/625/82...25/82...25.db'
nl|'\n'
DECL|member|_db_path_suffix
dedent|''
dedent|''
name|'def'
name|'_db_path_suffix'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
DECL|function|random_hexa_string
indent|'        '
name|'def'
name|'random_hexa_string'
op|'('
name|'length'
op|')'
op|':'
newline|'\n'
indent|'            '
string|"'%0xlength'"
op|'%'
name|'random'
op|'.'
name|'randrange'
op|'('
number|'16'
op|'**'
name|'length'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'db'
op|'='
name|'random_hexa_string'
op|'('
number|'32'
op|')'
newline|'\n'
name|'return'
string|"'%s/%s/%s/%s.db'"
op|'%'
op|'('
name|'random_hexa_string'
op|'('
number|'5'
op|')'
op|','
nl|'\n'
name|'random_hexa_string'
op|'('
number|'3'
op|')'
op|','
nl|'\n'
name|'db'
op|','
name|'db'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_container_path_elements_generator
dedent|''
name|'def'
name|'_container_path_elements_generator'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# We build various container path elements putting in both'
nl|'\n'
comment|'# DATADIR and SYNC_DATADIR strings in the'
nl|'\n'
comment|'# device and devices parts.'
nl|'\n'
indent|'        '
name|'for'
name|'devices'
name|'in'
op|'['
string|"'/srv/node'"
op|','
string|"'/srv/node/'"
op|','
nl|'\n'
string|"'/srv/node/dev'"
op|','
nl|'\n'
string|"'/srv/node/%s'"
op|'%'
name|'DATADIR'
op|','
nl|'\n'
string|"'/srv/node/%s'"
op|'%'
name|'sync_store'
op|'.'
name|'SYNC_DATADIR'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'device'
name|'in'
op|'['
string|"'sdf1'"
op|','
string|"'sdf1/sdf2'"
op|','
nl|'\n'
string|"'sdf1/%s'"
op|'%'
name|'DATADIR'
op|','
nl|'\n'
string|"'sdf1/%s'"
op|'%'
name|'sync_store'
op|'.'
name|'SYNC_DATADIR'
op|','
nl|'\n'
string|"'%s/sda'"
op|'%'
name|'DATADIR'
op|','
nl|'\n'
string|"'%s/sda'"
op|'%'
name|'sync_store'
op|'.'
name|'SYNC_DATADIR'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'yield'
name|'devices'
op|','
name|'device'
newline|'\n'
nl|'\n'
DECL|member|_validate_container_path_parts
dedent|''
dedent|''
dedent|''
name|'def'
name|'_validate_container_path_parts'
op|'('
name|'self'
op|','
name|'path'
op|','
name|'devices'
op|','
nl|'\n'
name|'device'
op|','
name|'target'
op|','
name|'suffix'
op|')'
op|':'
newline|'\n'
comment|'# Recall that the path is of the form:'
nl|'\n'
comment|'# devices/device/target/suffix'
nl|'\n'
comment|'# where each of the sub path elements (e.g. devices)'
nl|'\n'
comment|"# has a path structure containing path elements separated by '/'"
nl|'\n'
comment|"# We thus validate by splitting the path according to '/'"
nl|'\n'
comment|'# traversing all of its path elements making sure that the'
nl|'\n'
comment|'# first elements are those of devices,'
nl|'\n'
comment|'# the second are those of device'
nl|'\n'
comment|'# etc.'
nl|'\n'
indent|'        '
name|'spath'
op|'='
name|'path'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
newline|'\n'
name|'spath'
op|'.'
name|'reverse'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'spath'
op|'.'
name|'pop'
op|'('
op|')'
op|','
string|"''"
op|')'
newline|'\n'
comment|"# Validate path against 'devices'"
nl|'\n'
name|'for'
name|'p'
name|'in'
op|'['
name|'p'
name|'for'
name|'p'
name|'in'
name|'devices'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
name|'if'
name|'p'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'spath'
op|'.'
name|'pop'
op|'('
op|')'
op|','
name|'p'
op|')'
newline|'\n'
comment|"# Validate path against 'device'"
nl|'\n'
dedent|''
name|'for'
name|'p'
name|'in'
op|'['
name|'p'
name|'for'
name|'p'
name|'in'
name|'device'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
name|'if'
name|'p'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'spath'
op|'.'
name|'pop'
op|'('
op|')'
op|','
name|'p'
op|')'
newline|'\n'
comment|'# Validate path against target'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'spath'
op|'.'
name|'pop'
op|'('
op|')'
op|','
name|'target'
op|')'
newline|'\n'
comment|'# Validate path against suffix'
nl|'\n'
name|'for'
name|'p'
name|'in'
op|'['
name|'p'
name|'for'
name|'p'
name|'in'
name|'suffix'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
name|'if'
name|'p'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'spath'
op|'.'
name|'pop'
op|'('
op|')'
op|','
name|'p'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_add_synced_container
dedent|''
dedent|''
name|'def'
name|'test_add_synced_container'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Add non-existing and existing synced containers'
nl|'\n'
indent|'        '
name|'sds'
op|'='
name|'sync_store'
op|'.'
name|'ContainerSyncStore'
op|'('
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'cfile'
op|'='
name|'self'
op|'.'
name|'pick_dbfile'
op|'('
op|')'
newline|'\n'
name|'broker'
op|'='
name|'FakeContainerBroker'
op|'('
name|'cfile'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'2'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sds'
op|'.'
name|'add_synced_container'
op|'('
name|'broker'
op|')'
newline|'\n'
name|'scpath'
op|'='
name|'sds'
op|'.'
name|'_container_to_synced_container_path'
op|'('
name|'cfile'
op|')'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'scpath'
op|','
string|"'r'"
op|')'
name|'as'
name|'infile'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'infile'
op|'.'
name|'read'
op|'('
op|')'
op|','
name|'cfile'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'iterated_synced_containers'
op|'='
name|'list'
op|'('
op|')'
newline|'\n'
name|'for'
name|'db_path'
name|'in'
name|'sds'
op|'.'
name|'synced_containers_generator'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'iterated_synced_containers'
op|'.'
name|'append'
op|'('
name|'db_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'iterated_synced_containers'
op|')'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_remove_synced_container
dedent|''
name|'def'
name|'test_remove_synced_container'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Add a synced container to remove'
nl|'\n'
indent|'        '
name|'sds'
op|'='
name|'sync_store'
op|'.'
name|'ContainerSyncStore'
op|'('
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'cfile'
op|'='
name|'self'
op|'.'
name|'pick_dbfile'
op|'('
op|')'
newline|'\n'
comment|'# We keep here the link file so as to validate its deletion later'
nl|'\n'
name|'lfile'
op|'='
name|'sds'
op|'.'
name|'_container_to_synced_container_path'
op|'('
name|'cfile'
op|')'
newline|'\n'
name|'broker'
op|'='
name|'FakeContainerBroker'
op|'('
name|'cfile'
op|')'
newline|'\n'
name|'sds'
op|'.'
name|'add_synced_container'
op|'('
name|'broker'
op|')'
newline|'\n'
nl|'\n'
comment|'# Remove existing and non-existing synced containers'
nl|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'2'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sds'
op|'.'
name|'remove_synced_container'
op|'('
name|'broker'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'iterated_synced_containers'
op|'='
name|'list'
op|'('
op|')'
newline|'\n'
name|'for'
name|'db_path'
name|'in'
name|'sds'
op|'.'
name|'synced_containers_generator'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'iterated_synced_containers'
op|'.'
name|'append'
op|'('
name|'db_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'len'
op|'('
name|'iterated_synced_containers'
op|')'
op|','
number|'0'
op|')'
newline|'\n'
nl|'\n'
comment|'# Make sure the whole link path gets deleted'
nl|'\n'
comment|'# recall that the path has the following suffix:'
nl|'\n'
comment|'# <hexa string of length 6>/<hexa string of length 3>/'
nl|'\n'
comment|'# <hexa string of length 32>/<same 32 hexa string>.db'
nl|'\n'
comment|'# and we expect the .db as well as all path elements'
nl|'\n'
comment|'# to get deleted'
nl|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'lfile'
op|')'
op|')'
newline|'\n'
name|'lfile'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'lfile'
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'lfile'
op|')'
op|')'
op|')'
newline|'\n'
name|'lfile'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'lfile'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_iterate_synced_containers
dedent|''
dedent|''
name|'def'
name|'test_iterate_synced_containers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# populate sync container db'
nl|'\n'
indent|'        '
name|'sds'
op|'='
name|'sync_store'
op|'.'
name|'ContainerSyncStore'
op|'('
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'containers'
op|'='
name|'list'
op|'('
op|')'
newline|'\n'
name|'for'
name|'i'
name|'in'
name|'range'
op|'('
number|'10'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'cfile'
op|'='
name|'self'
op|'.'
name|'pick_dbfile'
op|'('
op|')'
newline|'\n'
name|'broker'
op|'='
name|'FakeContainerBroker'
op|'('
name|'cfile'
op|')'
newline|'\n'
name|'sds'
op|'.'
name|'add_synced_container'
op|'('
name|'broker'
op|')'
newline|'\n'
name|'containers'
op|'.'
name|'append'
op|'('
name|'cfile'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'iterated_synced_containers'
op|'='
name|'list'
op|'('
op|')'
newline|'\n'
name|'for'
name|'db_path'
name|'in'
name|'sds'
op|'.'
name|'synced_containers_generator'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'iterated_synced_containers'
op|'.'
name|'append'
op|'('
name|'db_path'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'set'
op|'('
name|'containers'
op|')'
op|','
name|'set'
op|'('
name|'iterated_synced_containers'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_unhandled_exceptions_in_add_remove
dedent|''
name|'def'
name|'test_unhandled_exceptions_in_add_remove'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'sds'
op|'='
name|'sync_store'
op|'.'
name|'ContainerSyncStore'
op|'('
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'cfile'
op|'='
name|'self'
op|'.'
name|'pick_dbfile'
op|'('
op|')'
newline|'\n'
name|'broker'
op|'='
name|'FakeContainerBroker'
op|'('
name|'cfile'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'swift.container.sync_store.os.stat'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'EPERM'
op|','
string|"'permission denied'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'OSError'
op|')'
name|'as'
name|'cm'
op|':'
newline|'\n'
indent|'                '
name|'sds'
op|'.'
name|'add_synced_container'
op|'('
name|'broker'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'errno'
op|'.'
name|'EPERM'
op|','
name|'cm'
op|'.'
name|'exception'
op|'.'
name|'errno'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'swift.container.sync_store.os.makedirs'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'EPERM'
op|','
string|"'permission denied'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'OSError'
op|')'
name|'as'
name|'cm'
op|':'
newline|'\n'
indent|'                '
name|'sds'
op|'.'
name|'add_synced_container'
op|'('
name|'broker'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'errno'
op|'.'
name|'EPERM'
op|','
name|'cm'
op|'.'
name|'exception'
op|'.'
name|'errno'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'swift.container.sync_store.os.symlink'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'EPERM'
op|','
string|"'permission denied'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'OSError'
op|')'
name|'as'
name|'cm'
op|':'
newline|'\n'
indent|'                '
name|'sds'
op|'.'
name|'add_synced_container'
op|'('
name|'broker'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'errno'
op|'.'
name|'EPERM'
op|','
name|'cm'
op|'.'
name|'exception'
op|'.'
name|'errno'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
string|"'swift.container.sync_store.os.unlink'"
op|','
nl|'\n'
name|'side_effect'
op|'='
name|'OSError'
op|'('
name|'errno'
op|'.'
name|'EPERM'
op|','
string|"'permission denied'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'OSError'
op|')'
name|'as'
name|'cm'
op|':'
newline|'\n'
indent|'                '
name|'sds'
op|'.'
name|'remove_synced_container'
op|'('
name|'broker'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'errno'
op|'.'
name|'EPERM'
op|','
name|'cm'
op|'.'
name|'exception'
op|'.'
name|'errno'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_update_sync_store_according_to_metadata_and_deleted
dedent|''
name|'def'
name|'test_update_sync_store_according_to_metadata_and_deleted'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# This function tests the update_sync_store 'logics'"
nl|'\n'
comment|'# with respect to various combinations of the'
nl|'\n'
comment|'# sync-to and sync-key metadata items and whether'
nl|'\n'
comment|'# the database is marked for delete.'
nl|'\n'
comment|'# The table below summarizes the expected result'
nl|'\n'
comment|'# for the various combinations, e.g.:'
nl|'\n'
comment|'# If metadata items exist and the database'
nl|'\n'
comment|'# is not marked for delete then add should be called.'
nl|'\n'
nl|'\n'
indent|'        '
name|'results_list'
op|'='
op|'['
nl|'\n'
op|'['
name|'False'
op|','
string|"'a'"
op|','
string|"'b'"
op|','
string|"'add'"
op|']'
op|','
nl|'\n'
op|'['
name|'False'
op|','
string|"'a'"
op|','
string|"''"
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'False'
op|','
string|"'a'"
op|','
name|'None'
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'False'
op|','
string|"''"
op|','
string|"'b'"
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'False'
op|','
string|"''"
op|','
string|"''"
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'False'
op|','
string|"''"
op|','
name|'None'
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'False'
op|','
name|'None'
op|','
string|"'b'"
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'False'
op|','
name|'None'
op|','
string|"''"
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'False'
op|','
name|'None'
op|','
name|'None'
op|','
string|"'none'"
op|']'
op|','
nl|'\n'
op|'['
name|'True'
op|','
string|"'a'"
op|','
string|"'b'"
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'True'
op|','
string|"'a'"
op|','
string|"''"
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'True'
op|','
string|"'a'"
op|','
name|'None'
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'True'
op|','
string|"''"
op|','
string|"'b'"
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'True'
op|','
string|"''"
op|','
string|"''"
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'True'
op|','
string|"''"
op|','
name|'None'
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'True'
op|','
name|'None'
op|','
string|"'b'"
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'True'
op|','
name|'None'
op|','
string|"''"
op|','
string|"'remove'"
op|']'
op|','
nl|'\n'
op|'['
name|'True'
op|','
name|'None'
op|','
name|'None'
op|','
string|"'none'"
op|']'
op|','
nl|'\n'
op|']'
newline|'\n'
nl|'\n'
name|'store'
op|'='
string|"'swift.container.sync_store.ContainerSyncStore'"
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
name|'store'
op|'+'
string|"'.add_synced_container'"
op|')'
name|'as'
name|'add_container'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
nl|'\n'
name|'store'
op|'+'
string|"'.remove_synced_container'"
op|')'
name|'as'
name|'remove_container'
op|':'
newline|'\n'
indent|'                '
name|'sds'
op|'='
name|'sync_store'
op|'.'
name|'ContainerSyncStore'
op|'('
name|'self'
op|'.'
name|'devices_dir'
op|','
nl|'\n'
name|'self'
op|'.'
name|'logger'
op|','
nl|'\n'
name|'False'
op|')'
newline|'\n'
name|'add_calls'
op|'='
number|'0'
newline|'\n'
name|'remove_calls'
op|'='
number|'0'
newline|'\n'
comment|'# We now iterate over the list of combinations'
nl|'\n'
comment|'# Validating that add and removed are called as'
nl|'\n'
comment|'# expected'
nl|'\n'
name|'for'
name|'deleted'
op|','
name|'sync_to'
op|','
name|'sync_key'
op|','
name|'expected_op'
name|'in'
name|'results_list'
op|':'
newline|'\n'
indent|'                    '
name|'cfile'
op|'='
name|'self'
op|'.'
name|'pick_dbfile'
op|'('
op|')'
newline|'\n'
name|'broker'
op|'='
name|'FakeContainerBroker'
op|'('
name|'cfile'
op|')'
newline|'\n'
name|'broker'
op|'.'
name|'_is_deleted'
op|'='
name|'deleted'
newline|'\n'
name|'if'
name|'sync_to'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                        '
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'X-Container-Sync-To'"
op|']'
op|'='
op|'['
nl|'\n'
name|'sync_to'
op|','
number|'1'
op|']'
newline|'\n'
dedent|''
name|'if'
name|'sync_key'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                        '
name|'broker'
op|'.'
name|'metadata'
op|'['
string|"'X-Container-Sync-Key'"
op|']'
op|'='
op|'['
nl|'\n'
name|'sync_key'
op|','
number|'1'
op|']'
newline|'\n'
dedent|''
name|'sds'
op|'.'
name|'update_sync_store'
op|'('
name|'broker'
op|')'
newline|'\n'
name|'if'
name|'expected_op'
op|'=='
string|"'add'"
op|':'
newline|'\n'
indent|'                        '
name|'add_calls'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'if'
name|'expected_op'
op|'=='
string|"'remove'"
op|':'
newline|'\n'
indent|'                        '
name|'remove_calls'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'add_container'
op|'.'
name|'call_count'
op|','
nl|'\n'
name|'add_calls'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'remove_container'
op|'.'
name|'call_count'
op|','
nl|'\n'
name|'remove_calls'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
