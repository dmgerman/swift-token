begin_unit
comment|'# Copyright (c) 2010 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'os'
op|','
name|'sys'
newline|'\n'
name|'from'
name|'os'
op|'.'
name|'path'
name|'import'
name|'isdir'
op|','
name|'join'
newline|'\n'
name|'from'
name|'ConfigParser'
name|'import'
name|'ConfigParser'
newline|'\n'
name|'import'
name|'random'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'logging'
newline|'\n'
name|'import'
name|'hashlib'
newline|'\n'
name|'import'
name|'itertools'
newline|'\n'
name|'import'
name|'cPickle'
name|'as'
name|'pickle'
newline|'\n'
nl|'\n'
name|'import'
name|'eventlet'
newline|'\n'
name|'from'
name|'eventlet'
name|'import'
name|'GreenPool'
op|','
name|'tpool'
op|','
name|'Timeout'
op|','
name|'sleep'
newline|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'green'
name|'import'
name|'subprocess'
newline|'\n'
name|'from'
name|'eventlet'
op|'.'
name|'support'
op|'.'
name|'greenlets'
name|'import'
name|'GreenletExit'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'ring'
name|'import'
name|'Ring'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'whataremyips'
op|','
name|'unlink_older_than'
op|','
name|'lock_path'
op|','
name|'renamer'
op|','
name|'compute_eta'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'bufferedhttp'
name|'import'
name|'http_connect'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|REPLICAS
name|'REPLICAS'
op|'='
number|'3'
newline|'\n'
DECL|variable|MAX_HANDOFFS
name|'MAX_HANDOFFS'
op|'='
number|'5'
newline|'\n'
DECL|variable|PICKLE_PROTOCOL
name|'PICKLE_PROTOCOL'
op|'='
number|'2'
newline|'\n'
DECL|variable|ONE_WEEK
name|'ONE_WEEK'
op|'='
number|'604800'
newline|'\n'
DECL|variable|HASH_FILE
name|'HASH_FILE'
op|'='
string|"'hashes.pkl'"
newline|'\n'
nl|'\n'
DECL|function|hash_suffix
name|'def'
name|'hash_suffix'
op|'('
name|'path'
op|','
name|'reclaim_age'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Performs reclamation and returns an md5 of all (remaining) files.\n\n    :param reclaim_age: age in seconds at which to remove tombstones\n    """'
newline|'\n'
name|'md5'
op|'='
name|'hashlib'
op|'.'
name|'md5'
op|'('
op|')'
newline|'\n'
name|'for'
name|'hsh'
name|'in'
name|'sorted'
op|'('
name|'os'
op|'.'
name|'listdir'
op|'('
name|'path'
op|')'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'hsh_path'
op|'='
name|'join'
op|'('
name|'path'
op|','
name|'hsh'
op|')'
newline|'\n'
name|'files'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'hsh_path'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'files'
op|')'
op|'=='
number|'1'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'files'
op|'['
number|'0'
op|']'
op|'.'
name|'endswith'
op|'('
string|"'.ts'"
op|')'
op|':'
newline|'\n'
comment|'# remove tombstones older than reclaim_age'
nl|'\n'
indent|'                '
name|'ts'
op|'='
name|'files'
op|'['
number|'0'
op|']'
op|'.'
name|'rsplit'
op|'('
string|"'.'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'if'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'float'
op|'('
name|'ts'
op|')'
op|')'
op|'>'
name|'reclaim_age'
op|':'
newline|'\n'
indent|'                    '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'join'
op|'('
name|'hsh_path'
op|','
name|'files'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
name|'files'
op|'.'
name|'remove'
op|'('
name|'files'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'elif'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'files'
op|'.'
name|'sort'
op|'('
name|'reverse'
op|'='
name|'True'
op|')'
newline|'\n'
name|'meta'
op|'='
name|'data'
op|'='
name|'tomb'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'filename'
name|'in'
name|'files'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'meta'
name|'and'
name|'filename'
op|'.'
name|'endswith'
op|'('
string|"'.meta'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'meta'
op|'='
name|'filename'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'data'
name|'and'
name|'filename'
op|'.'
name|'endswith'
op|'('
string|"'.data'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'data'
op|'='
name|'filename'
newline|'\n'
dedent|''
name|'if'
name|'not'
name|'tomb'
name|'and'
name|'filename'
op|'.'
name|'endswith'
op|'('
string|"'.ts'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'tomb'
op|'='
name|'filename'
newline|'\n'
dedent|''
name|'if'
op|'('
name|'filename'
op|'<'
name|'tomb'
name|'or'
comment|'# any file older than tomb'
nl|'\n'
name|'filename'
op|'<'
name|'data'
name|'or'
comment|'# any file older than data'
nl|'\n'
op|'('
name|'filename'
op|'.'
name|'endswith'
op|'('
string|"'.meta'"
op|')'
name|'and'
nl|'\n'
name|'filename'
op|'<'
name|'meta'
op|')'
op|')'
op|':'
comment|'# old meta'
newline|'\n'
indent|'                    '
name|'os'
op|'.'
name|'unlink'
op|'('
name|'join'
op|'('
name|'hsh_path'
op|','
name|'filename'
op|')'
op|')'
newline|'\n'
name|'files'
op|'.'
name|'remove'
op|'('
name|'filename'
op|')'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'if'
name|'not'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'os'
op|'.'
name|'rmdir'
op|'('
name|'hsh_path'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'filename'
name|'in'
name|'files'
op|':'
newline|'\n'
indent|'            '
name|'md5'
op|'.'
name|'update'
op|'('
name|'filename'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'        '
name|'os'
op|'.'
name|'rmdir'
op|'('
name|'path'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'        '
name|'pass'
newline|'\n'
dedent|''
name|'return'
name|'md5'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|recalculate_hashes
dedent|''
name|'def'
name|'recalculate_hashes'
op|'('
name|'partition_dir'
op|','
name|'suffixes'
op|','
name|'reclaim_age'
op|'='
name|'ONE_WEEK'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Recalculates hashes for the given suffixes in the partition and updates\n    them in the partition\'s hashes file.\n\n    :param partition_dir: directory of the partition in which to recalculate\n    :param suffixes: list of suffixes to recalculate\n    :param reclaim_age: age in seconds at which tombstones should be removed\n    """'
newline|'\n'
DECL|function|tpool_listdir
name|'def'
name|'tpool_listdir'
op|'('
name|'partition_dir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'dict'
op|'('
op|'('
op|'('
name|'suff'
op|','
name|'None'
op|')'
name|'for'
name|'suff'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'partition_dir'
op|')'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'suff'
op|')'
op|'=='
number|'3'
name|'and'
name|'isdir'
op|'('
name|'join'
op|'('
name|'partition_dir'
op|','
name|'suff'
op|')'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'hashes_file'
op|'='
name|'join'
op|'('
name|'partition_dir'
op|','
name|'HASH_FILE'
op|')'
newline|'\n'
name|'with'
name|'lock_path'
op|'('
name|'partition_dir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'open'
op|'('
name|'hashes_file'
op|','
string|"'rb'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                '
name|'hashes'
op|'='
name|'pickle'
op|'.'
name|'load'
op|'('
name|'fp'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'hashes'
op|'='
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'tpool_listdir'
op|','
name|'partition_dir'
op|')'
newline|'\n'
dedent|''
name|'for'
name|'suffix'
name|'in'
name|'suffixes'
op|':'
newline|'\n'
indent|'            '
name|'suffix_dir'
op|'='
name|'join'
op|'('
name|'partition_dir'
op|','
name|'suffix'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'suffix_dir'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'hashes'
op|'['
name|'suffix'
op|']'
op|'='
name|'hash_suffix'
op|'('
name|'suffix_dir'
op|','
name|'reclaim_age'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'suffix'
name|'in'
name|'hashes'
op|':'
newline|'\n'
indent|'                '
name|'del'
name|'hashes'
op|'['
name|'suffix'
op|']'
newline|'\n'
dedent|''
dedent|''
name|'with'
name|'open'
op|'('
name|'hashes_file'
op|'+'
string|"'.tmp'"
op|','
string|"'wb'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'            '
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'hashes'
op|','
name|'fp'
op|','
name|'PICKLE_PROTOCOL'
op|')'
newline|'\n'
dedent|''
name|'renamer'
op|'('
name|'hashes_file'
op|'+'
string|"'.tmp'"
op|','
name|'hashes_file'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|invalidate_hash
dedent|''
dedent|''
name|'def'
name|'invalidate_hash'
op|'('
name|'suffix_dir'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Invalidates the hash for a suffix_dir in the partition\'s hashes file.\n\n    :param suffix_dir: absolute path to suffix dir whose hash needs invalidating\n    """'
newline|'\n'
name|'suffix'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'suffix_dir'
op|')'
newline|'\n'
name|'partition_dir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'suffix_dir'
op|')'
newline|'\n'
name|'hashes_file'
op|'='
name|'join'
op|'('
name|'partition_dir'
op|','
name|'HASH_FILE'
op|')'
newline|'\n'
name|'with'
name|'lock_path'
op|'('
name|'partition_dir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'open'
op|'('
name|'hashes_file'
op|','
string|"'rb'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                '
name|'hashes'
op|'='
name|'pickle'
op|'.'
name|'load'
op|'('
name|'fp'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'suffix'
name|'in'
name|'hashes'
name|'and'
name|'not'
name|'hashes'
op|'['
name|'suffix'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'return'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'return'
newline|'\n'
dedent|''
name|'hashes'
op|'['
name|'suffix'
op|']'
op|'='
name|'None'
newline|'\n'
name|'with'
name|'open'
op|'('
name|'hashes_file'
op|'+'
string|"'.tmp'"
op|','
string|"'wb'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'            '
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'hashes'
op|','
name|'fp'
op|','
name|'PICKLE_PROTOCOL'
op|')'
newline|'\n'
dedent|''
name|'renamer'
op|'('
name|'hashes_file'
op|'+'
string|"'.tmp'"
op|','
name|'hashes_file'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|get_hashes
dedent|''
dedent|''
name|'def'
name|'get_hashes'
op|'('
name|'partition_dir'
op|','
name|'do_listdir'
op|'='
name|'True'
op|','
name|'reclaim_age'
op|'='
name|'ONE_WEEK'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Get a list of hashes for the suffix dir.  do_listdir causes it to mistrust\n    the hash cache for suffix existence at the (unexpectedly high) cost of a\n    listdir.  reclaim_age is just passed on to hash_suffix.\n\n    :param partition_dir: absolute path of partition to get hashes for\n    :param do_listdir: force existence check for all hashes in the partition\n    :param reclaim_age: age at which to remove tombstones\n\n    :returns: tuple of (number of suffix dirs hashed, dictionary of hashes)\n    """'
newline|'\n'
DECL|function|tpool_listdir
name|'def'
name|'tpool_listdir'
op|'('
name|'hashes'
op|','
name|'partition_dir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
name|'dict'
op|'('
op|'('
op|'('
name|'suff'
op|','
name|'hashes'
op|'.'
name|'get'
op|'('
name|'suff'
op|','
name|'None'
op|')'
op|')'
nl|'\n'
name|'for'
name|'suff'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'partition_dir'
op|')'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'suff'
op|')'
op|'=='
number|'3'
name|'and'
name|'isdir'
op|'('
name|'join'
op|'('
name|'partition_dir'
op|','
name|'suff'
op|')'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'hashed'
op|'='
number|'0'
newline|'\n'
name|'hashes_file'
op|'='
name|'join'
op|'('
name|'partition_dir'
op|','
name|'HASH_FILE'
op|')'
newline|'\n'
name|'with'
name|'lock_path'
op|'('
name|'partition_dir'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'modified'
op|'='
name|'False'
newline|'\n'
name|'hashes'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'open'
op|'('
name|'hashes_file'
op|','
string|"'rb'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                '
name|'hashes'
op|'='
name|'pickle'
op|'.'
name|'load'
op|'('
name|'fp'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
op|':'
newline|'\n'
indent|'            '
name|'do_listdir'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'if'
name|'do_listdir'
op|':'
newline|'\n'
indent|'            '
name|'hashes'
op|'='
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'tpool_listdir'
op|','
name|'hashes'
op|','
name|'partition_dir'
op|')'
newline|'\n'
name|'modified'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'for'
name|'suffix'
op|','
name|'hash_'
name|'in'
name|'hashes'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'not'
name|'hash_'
op|':'
newline|'\n'
indent|'                '
name|'suffix_dir'
op|'='
name|'join'
op|'('
name|'partition_dir'
op|','
name|'suffix'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'suffix_dir'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'hashes'
op|'['
name|'suffix'
op|']'
op|'='
name|'hash_suffix'
op|'('
name|'suffix_dir'
op|','
name|'reclaim_age'
op|')'
newline|'\n'
name|'hashed'
op|'+='
number|'1'
newline|'\n'
dedent|''
name|'except'
name|'OSError'
op|':'
newline|'\n'
indent|'                        '
name|'logging'
op|'.'
name|'exception'
op|'('
string|"'Error hashing suffix'"
op|')'
newline|'\n'
name|'hashes'
op|'['
name|'suffix'
op|']'
op|'='
name|'None'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'del'
name|'hashes'
op|'['
name|'suffix'
op|']'
newline|'\n'
dedent|''
name|'modified'
op|'='
name|'True'
newline|'\n'
name|'sleep'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'modified'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'open'
op|'('
name|'hashes_file'
op|'+'
string|"'.tmp'"
op|','
string|"'wb'"
op|')'
name|'as'
name|'fp'
op|':'
newline|'\n'
indent|'                '
name|'pickle'
op|'.'
name|'dump'
op|'('
name|'hashes'
op|','
name|'fp'
op|','
name|'PICKLE_PROTOCOL'
op|')'
newline|'\n'
dedent|''
name|'renamer'
op|'('
name|'hashes_file'
op|'+'
string|"'.tmp'"
op|','
name|'hashes_file'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'hashed'
op|','
name|'hashes'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|ObjectReplicator
dedent|''
dedent|''
name|'class'
name|'ObjectReplicator'
op|'('
name|'object'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Replicate objects.\n\n    Encapsulates most logic and data needed by the object replication process.\n    Each call to .run() performs one replication pass.  It\'s up to the caller\n    to do this in a loop.\n    """'
newline|'\n'
nl|'\n'
DECL|member|__init__
name|'def'
name|'__init__'
op|'('
name|'self'
op|','
name|'conf'
op|','
name|'logger'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        :param conf: configuration object obtained from ConfigParser\n        :param logger: logging object\n        """'
newline|'\n'
name|'self'
op|'.'
name|'conf'
op|'='
name|'conf'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'='
name|'logger'
newline|'\n'
name|'self'
op|'.'
name|'devices_dir'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'devices'"
op|','
string|"'/srv/node'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'mount_check'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'mount_check'"
op|','
string|"'true'"
op|')'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
op|'('
string|"'true'"
op|','
string|"'t'"
op|','
string|"'1'"
op|','
string|"'on'"
op|','
string|"'yes'"
op|','
string|"'y'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'vm_test_mode'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
nl|'\n'
string|"'vm_test_mode'"
op|','
string|"'no'"
op|')'
op|'.'
name|'lower'
op|'('
op|')'
name|'in'
op|'('
string|"'yes'"
op|','
string|"'true'"
op|','
string|"'on'"
op|','
string|"'1'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'swift_dir'
op|'='
name|'conf'
op|'.'
name|'get'
op|'('
string|"'swift_dir'"
op|','
string|"'/etc/swift'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'port'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'bind_port'"
op|','
number|'6000'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'concurrency'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'replication_concurrency'"
op|','
number|'1'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'timeout'
op|'='
name|'conf'
op|'['
string|"'timeout'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'stats_interval'
op|'='
name|'int'
op|'('
name|'conf'
op|'['
string|"'stats_interval'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'object_ring'
op|'='
name|'Ring'
op|'('
name|'join'
op|'('
name|'self'
op|'.'
name|'swift_dir'
op|','
string|"'object.ring.gz'"
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ring_check_interval'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'ring_check_interval'"
op|','
number|'15'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'next_check'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
name|'self'
op|'.'
name|'ring_check_interval'
newline|'\n'
name|'self'
op|'.'
name|'reclaim_age'
op|'='
name|'int'
op|'('
name|'conf'
op|'.'
name|'get'
op|'('
string|"'reclaim_age'"
op|','
number|'86400'
op|'*'
number|'7'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'partition_times'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|member|_rsync
dedent|''
name|'def'
name|'_rsync'
op|'('
name|'self'
op|','
name|'args'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Execute the rsync binary to replicate a partition.\n\n        :returns: a tuple of (rsync exit code, rsync standard output)\n        """'
newline|'\n'
name|'start_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'ret_val'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'with'
name|'Timeout'
op|'('
number|'120'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'proc'
op|'='
name|'subprocess'
op|'.'
name|'Popen'
op|'('
name|'args'
op|','
name|'stdout'
op|'='
name|'subprocess'
op|'.'
name|'PIPE'
op|','
nl|'\n'
name|'stderr'
op|'='
name|'subprocess'
op|'.'
name|'STDOUT'
op|')'
newline|'\n'
name|'results'
op|'='
name|'proc'
op|'.'
name|'stdout'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
name|'ret_val'
op|'='
name|'proc'
op|'.'
name|'wait'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'ret_val'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'proc'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'total_time'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'start_time'
newline|'\n'
name|'if'
name|'results'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'result'
name|'in'
name|'results'
op|'.'
name|'split'
op|'('
string|"'\\n'"
op|')'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'result'
op|'=='
string|"''"
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'if'
name|'result'
op|'.'
name|'startswith'
op|'('
string|"'cd+'"
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
name|'result'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
nl|'\n'
string|'"Sync of %s at %s complete (%.03f) [%d]"'
op|'%'
op|'('
nl|'\n'
name|'args'
op|'['
op|'-'
number|'2'
op|']'
op|','
name|'args'
op|'['
op|'-'
number|'1'
op|']'
op|','
name|'total_time'
op|','
name|'ret_val'
op|')'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'debug'
op|'('
nl|'\n'
string|'"Sync of %s at %s complete (%.03f) [%d]"'
op|'%'
op|'('
nl|'\n'
name|'args'
op|'['
op|'-'
number|'2'
op|']'
op|','
name|'args'
op|'['
op|'-'
number|'1'
op|']'
op|','
name|'total_time'
op|','
name|'ret_val'
op|')'
op|')'
newline|'\n'
dedent|''
name|'if'
name|'ret_val'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
string|"'Bad rsync return code: %d'"
op|'%'
name|'ret_val'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'ret_val'
op|','
name|'results'
newline|'\n'
nl|'\n'
DECL|member|rsync
dedent|''
name|'def'
name|'rsync'
op|'('
name|'self'
op|','
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Synchronize local suffix directories from a partition with a remote\n        node.\n\n        :param node: the "dev" entry for the remote node to sync with\n        :param job: information about the partition being synced\n        :param suffixes: a list of suffixes which need to be pushed\n\n        :returns: boolean indicating success or failure\n        """'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'job'
op|'['
string|"'path'"
op|']'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'args'
op|'='
op|'['
nl|'\n'
string|"'rsync'"
op|','
nl|'\n'
string|"'--recursive'"
op|','
nl|'\n'
string|"'--whole-file'"
op|','
nl|'\n'
string|"'--human-readable'"
op|','
nl|'\n'
string|"'--xattrs'"
op|','
nl|'\n'
string|"'--itemize-changes'"
op|','
nl|'\n'
string|"'--ignore-existing'"
op|','
nl|'\n'
string|"'--timeout=%s'"
op|'%'
name|'self'
op|'.'
name|'timeout'
op|','
nl|'\n'
string|"'--contimeout=%s'"
op|'%'
name|'self'
op|'.'
name|'timeout'
op|','
nl|'\n'
op|']'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'vm_test_mode'
op|':'
newline|'\n'
indent|'            '
name|'rsync_module'
op|'='
string|"'%s::object%s'"
op|'%'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'rsync_module'
op|'='
string|"'%s::object'"
op|'%'
name|'node'
op|'['
string|"'ip'"
op|']'
newline|'\n'
dedent|''
name|'had_any'
op|'='
name|'False'
newline|'\n'
name|'for'
name|'suffix'
name|'in'
name|'suffixes'
op|':'
newline|'\n'
indent|'            '
name|'spath'
op|'='
name|'join'
op|'('
name|'job'
op|'['
string|"'path'"
op|']'
op|','
name|'suffix'
op|')'
newline|'\n'
name|'if'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'spath'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'args'
op|'.'
name|'append'
op|'('
name|'spath'
op|')'
newline|'\n'
name|'had_any'
op|'='
name|'True'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'had_any'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'False'
newline|'\n'
dedent|''
name|'args'
op|'.'
name|'append'
op|'('
name|'join'
op|'('
name|'rsync_module'
op|','
name|'node'
op|'['
string|"'device'"
op|']'
op|','
nl|'\n'
string|"'objects'"
op|','
name|'job'
op|'['
string|"'partition'"
op|']'
op|')'
op|')'
newline|'\n'
name|'ret_val'
op|','
name|'results'
op|'='
name|'self'
op|'.'
name|'_rsync'
op|'('
name|'args'
op|')'
newline|'\n'
name|'return'
name|'ret_val'
op|'=='
number|'0'
newline|'\n'
nl|'\n'
DECL|member|check_ring
dedent|''
name|'def'
name|'check_ring'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Check to see if the ring has been updated\n\n        :returns: boolean indicating whether or not the ring has changed\n        """'
newline|'\n'
name|'if'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'>'
name|'self'
op|'.'
name|'next_check'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'next_check'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'+'
name|'self'
op|'.'
name|'ring_check_interval'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'object_ring'
op|'.'
name|'has_changed'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'False'
newline|'\n'
dedent|''
dedent|''
name|'return'
name|'True'
newline|'\n'
nl|'\n'
DECL|member|update_deleted
dedent|''
name|'def'
name|'update_deleted'
op|'('
name|'self'
op|','
name|'job'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        High-level method that replicates a single partition that doesn\'t belong\n        on this node.\n\n        :param job: a dict containing info about the partition to be replicated\n        """'
newline|'\n'
DECL|function|tpool_get_suffixes
name|'def'
name|'tpool_get_suffixes'
op|'('
name|'path'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
op|'['
name|'suff'
name|'for'
name|'suff'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'path'
op|')'
nl|'\n'
name|'if'
name|'len'
op|'('
name|'suff'
op|')'
op|'=='
number|'3'
name|'and'
name|'isdir'
op|'('
name|'join'
op|'('
name|'path'
op|','
name|'suff'
op|')'
op|')'
op|']'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'replication_count'
op|'+='
number|'1'
newline|'\n'
name|'begin'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'responses'
op|'='
op|'['
op|']'
newline|'\n'
name|'suffixes'
op|'='
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'tpool_get_suffixes'
op|','
name|'job'
op|'['
string|"'path'"
op|']'
op|')'
newline|'\n'
name|'if'
name|'suffixes'
op|':'
newline|'\n'
indent|'                '
name|'for'
name|'node'
name|'in'
name|'job'
op|'['
string|"'nodes'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'success'
op|'='
name|'self'
op|'.'
name|'rsync'
op|'('
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|')'
newline|'\n'
name|'if'
name|'success'
op|':'
newline|'\n'
indent|'                        '
name|'with'
name|'Timeout'
op|'('
number|'60'
op|')'
op|':'
newline|'\n'
indent|'                            '
name|'http_connect'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'job'
op|'['
string|"'partition'"
op|']'
op|','
string|"'REPLICATE'"
op|','
nl|'\n'
string|"'/'"
op|'+'
string|"'-'"
op|'.'
name|'join'
op|'('
name|'suffixes'
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|'}'
nl|'\n'
op|')'
op|'.'
name|'getresponse'
op|'('
op|')'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'responses'
op|'.'
name|'append'
op|'('
name|'success'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'not'
name|'suffixes'
name|'or'
op|'('
name|'len'
op|'('
name|'responses'
op|')'
op|'=='
name|'REPLICAS'
name|'and'
name|'all'
op|'('
name|'responses'
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
string|'"Removing partition: %s"'
op|'%'
name|'job'
op|'['
string|"'path'"
op|']'
op|')'
newline|'\n'
name|'tpool'
op|'.'
name|'execute'
op|'('
name|'shutil'
op|'.'
name|'rmtree'
op|','
name|'job'
op|'['
string|"'path'"
op|']'
op|','
name|'ignore_errors'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
string|'"Error syncing handoff partition"'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'partition_times'
op|'.'
name|'append'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'begin'
op|')'
newline|'\n'
nl|'\n'
DECL|member|update
dedent|''
dedent|''
name|'def'
name|'update'
op|'('
name|'self'
op|','
name|'job'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        High-level method that replicates a single partition.\n\n        :param job: a dict containing info about the partition to be replicated\n        """'
newline|'\n'
name|'self'
op|'.'
name|'replication_count'
op|'+='
number|'1'
newline|'\n'
name|'begin'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'hashed'
op|','
name|'local_hash'
op|'='
name|'get_hashes'
op|'('
name|'job'
op|'['
string|"'path'"
op|']'
op|','
nl|'\n'
name|'do_listdir'
op|'='
op|'('
name|'self'
op|'.'
name|'replication_count'
op|'%'
number|'10'
op|')'
op|'=='
number|'0'
op|','
nl|'\n'
name|'reclaim_age'
op|'='
name|'self'
op|'.'
name|'reclaim_age'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'suffix_hash'
op|'+='
name|'hashed'
newline|'\n'
name|'successes'
op|'='
number|'0'
newline|'\n'
name|'nodes'
op|'='
name|'itertools'
op|'.'
name|'chain'
op|'('
name|'job'
op|'['
string|"'nodes'"
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'object_ring'
op|'.'
name|'get_more_nodes'
op|'('
name|'int'
op|'('
name|'job'
op|'['
string|"'partition'"
op|']'
op|')'
op|')'
op|')'
newline|'\n'
name|'while'
name|'successes'
op|'<'
op|'('
name|'REPLICAS'
op|'-'
number|'1'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'node'
op|'='
name|'next'
op|'('
name|'nodes'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'with'
name|'Timeout'
op|'('
number|'60'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'resp'
op|'='
name|'http_connect'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'job'
op|'['
string|"'partition'"
op|']'
op|','
string|"'REPLICATE'"
op|','
nl|'\n'
string|"''"
op|','
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|'}'
nl|'\n'
op|')'
op|'.'
name|'getresponse'
op|'('
op|')'
newline|'\n'
name|'if'
name|'resp'
op|'.'
name|'status'
op|'!='
number|'200'
op|':'
newline|'\n'
indent|'                            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
string|'"Invalid response %s from %s"'
op|'%'
nl|'\n'
op|'('
name|'resp'
op|'.'
name|'status'
op|','
name|'node'
op|'['
string|"'ip'"
op|']'
op|')'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'remote_hash'
op|'='
name|'pickle'
op|'.'
name|'loads'
op|'('
name|'resp'
op|'.'
name|'read'
op|'('
op|')'
op|')'
newline|'\n'
name|'del'
name|'resp'
newline|'\n'
dedent|''
name|'successes'
op|'+='
number|'1'
newline|'\n'
name|'suffixes'
op|'='
op|'['
name|'suffix'
name|'for'
name|'suffix'
name|'in'
name|'local_hash'
nl|'\n'
name|'if'
name|'local_hash'
op|'['
name|'suffix'
op|']'
op|'!='
name|'remote_hash'
op|'.'
name|'get'
op|'('
name|'suffix'
op|','
op|'-'
number|'1'
op|')'
op|']'
newline|'\n'
name|'if'
name|'not'
name|'suffixes'
op|':'
newline|'\n'
indent|'                        '
name|'continue'
newline|'\n'
dedent|''
name|'success'
op|'='
name|'self'
op|'.'
name|'rsync'
op|'('
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|')'
newline|'\n'
name|'recalculate_hashes'
op|'('
name|'job'
op|'['
string|"'path'"
op|']'
op|','
name|'suffixes'
op|','
nl|'\n'
name|'reclaim_age'
op|'='
name|'self'
op|'.'
name|'reclaim_age'
op|')'
newline|'\n'
name|'with'
name|'Timeout'
op|'('
number|'60'
op|')'
op|':'
newline|'\n'
indent|'                        '
name|'http_connect'
op|'('
name|'node'
op|'['
string|"'ip'"
op|']'
op|','
name|'node'
op|'['
string|"'port'"
op|']'
op|','
nl|'\n'
name|'node'
op|'['
string|"'device'"
op|']'
op|','
name|'job'
op|'['
string|"'partition'"
op|']'
op|','
string|"'REPLICATE'"
op|','
nl|'\n'
string|"'/'"
op|'+'
string|"'-'"
op|'.'
name|'join'
op|'('
name|'suffixes'
op|')'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|'}'
nl|'\n'
op|')'
op|'.'
name|'getresponse'
op|'('
op|')'
op|'.'
name|'read'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'suffix_sync'
op|'+='
name|'len'
op|'('
name|'suffixes'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'logging'
op|'.'
name|'exception'
op|'('
string|'"Error syncing with node: %s"'
op|'%'
name|'node'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'suffix_count'
op|'+='
name|'len'
op|'('
name|'local_hash'
op|')'
newline|'\n'
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
string|'"Error syncing partition"'
op|')'
newline|'\n'
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'partition_times'
op|'.'
name|'append'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'begin'
op|')'
newline|'\n'
nl|'\n'
DECL|member|stats_line
dedent|''
dedent|''
name|'def'
name|'stats_line'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Logs various stats for the currently running replication pass.\n        """'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'replication_count'
op|':'
newline|'\n'
indent|'            '
name|'rate'
op|'='
name|'self'
op|'.'
name|'replication_count'
op|'/'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'start'
op|')'
newline|'\n'
name|'left'
op|'='
name|'int'
op|'('
op|'('
name|'self'
op|'.'
name|'job_count'
op|'-'
name|'self'
op|'.'
name|'replication_count'
op|')'
op|'/'
name|'rate'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
string|'"%d/%d (%.2f%%) partitions replicated in %.2f seconds (%.2f/sec, %s remaining)"'
nl|'\n'
op|'%'
op|'('
name|'self'
op|'.'
name|'replication_count'
op|','
name|'self'
op|'.'
name|'job_count'
op|','
nl|'\n'
name|'self'
op|'.'
name|'replication_count'
op|'*'
number|'100.0'
op|'/'
name|'self'
op|'.'
name|'job_count'
op|','
nl|'\n'
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'start'
op|','
name|'rate'
op|','
nl|'\n'
string|"'%d%s'"
op|'%'
name|'compute_eta'
op|'('
name|'self'
op|'.'
name|'start'
op|','
name|'self'
op|'.'
name|'replication_count'
op|','
name|'self'
op|'.'
name|'job_count'
op|')'
op|')'
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'suffix_count'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
string|'"%d suffixes checked - %.2f%% hashed, %.2f%% synced"'
op|'%'
nl|'\n'
op|'('
name|'self'
op|'.'
name|'suffix_count'
op|','
nl|'\n'
op|'('
name|'self'
op|'.'
name|'suffix_hash'
op|'*'
number|'100.0'
op|')'
op|'/'
name|'self'
op|'.'
name|'suffix_count'
op|','
nl|'\n'
op|'('
name|'self'
op|'.'
name|'suffix_sync'
op|'*'
number|'100.0'
op|')'
op|'/'
name|'self'
op|'.'
name|'suffix_count'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'partition_times'
op|'.'
name|'sort'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
string|'"Partition times: max %.4fs, min %.4fs, med %.4fs"'
nl|'\n'
op|'%'
op|'('
name|'self'
op|'.'
name|'partition_times'
op|'['
op|'-'
number|'1'
op|']'
op|','
name|'self'
op|'.'
name|'partition_times'
op|'['
number|'0'
op|']'
op|','
nl|'\n'
name|'self'
op|'.'
name|'partition_times'
op|'['
name|'len'
op|'('
name|'self'
op|'.'
name|'partition_times'
op|')'
op|'//'
number|'2'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
string|'"Nothing replicated for %s seconds."'
op|'%'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'start'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|kill_coros
dedent|''
dedent|''
name|'def'
name|'kill_coros'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Utility function that kills all coroutines currently running."""'
newline|'\n'
name|'for'
name|'coro'
name|'in'
name|'list'
op|'('
name|'self'
op|'.'
name|'run_pool'
op|'.'
name|'coroutines_running'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'coro'
op|'.'
name|'kill'
op|'('
name|'GreenletExit'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'GreenletExit'
op|':'
newline|'\n'
indent|'                '
name|'pass'
newline|'\n'
nl|'\n'
DECL|member|heartbeat
dedent|''
dedent|''
dedent|''
name|'def'
name|'heartbeat'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Loop that runs in the background during replication.  It periodically\n        logs progress and attempts to detect lockups, killing any running\n        coroutines if the replicator hasn\'t made progress since last hearbeat.\n        """'
newline|'\n'
name|'while'
name|'True'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'self'
op|'.'
name|'replication_count'
op|'=='
name|'self'
op|'.'
name|'last_replication_count'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'error'
op|'('
string|'"Lockup detected.. killing live coros."'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'kill_coros'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'last_replication_count'
op|'='
name|'self'
op|'.'
name|'replication_count'
newline|'\n'
name|'eventlet'
op|'.'
name|'sleep'
op|'('
number|'300'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'stats_line'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|run
dedent|''
dedent|''
name|'def'
name|'run'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""Run a replication pass"""'
newline|'\n'
name|'self'
op|'.'
name|'start'
op|'='
name|'time'
op|'.'
name|'time'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'suffix_count'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'suffix_sync'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'suffix_hash'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'replication_count'
op|'='
number|'0'
newline|'\n'
name|'self'
op|'.'
name|'last_replication_count'
op|'='
op|'-'
number|'1'
newline|'\n'
name|'self'
op|'.'
name|'partition_times'
op|'='
op|'['
op|']'
newline|'\n'
name|'jobs'
op|'='
op|'['
op|']'
newline|'\n'
name|'stats'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'heartbeat'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'ips'
op|'='
name|'whataremyips'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'run_pool'
op|'='
name|'GreenPool'
op|'('
name|'size'
op|'='
name|'self'
op|'.'
name|'concurrency'
op|')'
newline|'\n'
name|'for'
name|'local_dev'
name|'in'
op|'['
nl|'\n'
name|'dev'
name|'for'
name|'dev'
name|'in'
name|'self'
op|'.'
name|'object_ring'
op|'.'
name|'devs'
nl|'\n'
name|'if'
name|'dev'
name|'and'
name|'dev'
op|'['
string|"'ip'"
op|']'
name|'in'
name|'ips'
name|'and'
name|'dev'
op|'['
string|"'port'"
op|']'
op|'=='
name|'self'
op|'.'
name|'port'
nl|'\n'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'dev_path'
op|'='
name|'join'
op|'('
name|'self'
op|'.'
name|'devices_dir'
op|','
name|'local_dev'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
name|'obj_path'
op|'='
name|'join'
op|'('
name|'dev_path'
op|','
string|"'objects'"
op|')'
newline|'\n'
name|'tmp_path'
op|'='
name|'join'
op|'('
name|'dev_path'
op|','
string|"'tmp'"
op|')'
newline|'\n'
name|'if'
name|'self'
op|'.'
name|'mount_check'
name|'and'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'ismount'
op|'('
name|'dev_path'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'warn'
op|'('
string|"'%s is not mounted'"
op|'%'
name|'local_dev'
op|'['
string|"'device'"
op|']'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'unlink_older_than'
op|'('
name|'tmp_path'
op|','
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|'-'
name|'self'
op|'.'
name|'reclaim_age'
op|')'
newline|'\n'
name|'if'
name|'not'
name|'os'
op|'.'
name|'path'
op|'.'
name|'exists'
op|'('
name|'obj_path'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'continue'
newline|'\n'
dedent|''
name|'for'
name|'partition'
name|'in'
name|'os'
op|'.'
name|'listdir'
op|'('
name|'obj_path'
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'try'
op|':'
newline|'\n'
indent|'                        '
name|'nodes'
op|'='
op|'['
name|'node'
name|'for'
name|'node'
name|'in'
nl|'\n'
name|'self'
op|'.'
name|'object_ring'
op|'.'
name|'get_part_nodes'
op|'('
name|'int'
op|'('
name|'partition'
op|')'
op|')'
nl|'\n'
name|'if'
name|'node'
op|'['
string|"'id'"
op|']'
op|'!='
name|'local_dev'
op|'['
string|"'id'"
op|']'
op|']'
newline|'\n'
name|'jobs'
op|'.'
name|'append'
op|'('
name|'dict'
op|'('
name|'path'
op|'='
name|'join'
op|'('
name|'obj_path'
op|','
name|'partition'
op|')'
op|','
nl|'\n'
name|'nodes'
op|'='
name|'nodes'
op|','
name|'delete'
op|'='
name|'len'
op|'('
name|'nodes'
op|')'
op|'>'
number|'2'
op|','
nl|'\n'
name|'partition'
op|'='
name|'partition'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'ValueError'
op|':'
newline|'\n'
indent|'                        '
name|'continue'
newline|'\n'
dedent|''
dedent|''
dedent|''
name|'random'
op|'.'
name|'shuffle'
op|'('
name|'jobs'
op|')'
newline|'\n'
comment|'# Partititons that need to be deleted take priority'
nl|'\n'
name|'jobs'
op|'.'
name|'sort'
op|'('
name|'key'
op|'='
name|'lambda'
name|'job'
op|':'
name|'not'
name|'job'
op|'['
string|"'delete'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'job_count'
op|'='
name|'len'
op|'('
name|'jobs'
op|')'
newline|'\n'
name|'for'
name|'job'
name|'in'
name|'jobs'
op|':'
newline|'\n'
indent|'                '
name|'if'
name|'not'
name|'self'
op|'.'
name|'check_ring'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'info'
op|'('
nl|'\n'
string|'"Ring change detected. Aborting current replication pass."'
op|')'
newline|'\n'
name|'return'
newline|'\n'
dedent|''
name|'if'
name|'job'
op|'['
string|"'delete'"
op|']'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'run_pool'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'update_deleted'
op|','
name|'job'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'self'
op|'.'
name|'run_pool'
op|'.'
name|'spawn'
op|'('
name|'self'
op|'.'
name|'update'
op|','
name|'job'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'with'
name|'Timeout'
op|'('
number|'120'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'run_pool'
op|'.'
name|'waitall'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
name|'except'
op|'('
name|'Exception'
op|','
name|'Timeout'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'logger'
op|'.'
name|'exception'
op|'('
string|'"Exception while replicating"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'kill_coros'
op|'('
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'stats_line'
op|'('
op|')'
newline|'\n'
name|'stats'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
dedent|''
dedent|''
endmarker|''
end_unit
