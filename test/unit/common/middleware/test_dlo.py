begin_unit
comment|'#-*- coding:utf-8 -*-'
nl|'\n'
comment|'# Copyright (c) 2013 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'contextlib'
newline|'\n'
name|'import'
name|'hashlib'
newline|'\n'
name|'import'
name|'json'
newline|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'shutil'
newline|'\n'
name|'import'
name|'tempfile'
newline|'\n'
name|'from'
name|'textwrap'
name|'import'
name|'dedent'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'exceptions'
op|','
name|'swob'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'middleware'
name|'import'
name|'dlo'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
op|'.'
name|'common'
op|'.'
name|'middleware'
op|'.'
name|'helpers'
name|'import'
name|'FakeSwift'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|variable|LIMIT
name|'LIMIT'
op|'='
string|"'swift.common.constraints.CONTAINER_LISTING_LIMIT'"
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|md5hex
name|'def'
name|'md5hex'
op|'('
name|'s'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'return'
name|'hashlib'
op|'.'
name|'md5'
op|'('
name|'s'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|DloTestCase
dedent|''
name|'class'
name|'DloTestCase'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
DECL|member|call_dlo
indent|'    '
name|'def'
name|'call_dlo'
op|'('
name|'self'
op|','
name|'req'
op|','
name|'app'
op|'='
name|'None'
op|','
name|'expect_exception'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'if'
name|'app'
name|'is'
name|'None'
op|':'
newline|'\n'
indent|'            '
name|'app'
op|'='
name|'self'
op|'.'
name|'dlo'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'.'
name|'headers'
op|'.'
name|'setdefault'
op|'('
string|'"User-Agent"'
op|','
string|'"Soap Opera"'
op|')'
newline|'\n'
nl|'\n'
name|'status'
op|'='
op|'['
name|'None'
op|']'
newline|'\n'
name|'headers'
op|'='
op|'['
name|'None'
op|']'
newline|'\n'
nl|'\n'
DECL|function|start_response
name|'def'
name|'start_response'
op|'('
name|'s'
op|','
name|'h'
op|','
name|'ei'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'status'
op|'['
number|'0'
op|']'
op|'='
name|'s'
newline|'\n'
name|'headers'
op|'['
number|'0'
op|']'
op|'='
name|'h'
newline|'\n'
nl|'\n'
dedent|''
name|'body_iter'
op|'='
name|'app'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'start_response'
op|')'
newline|'\n'
name|'body'
op|'='
string|"''"
newline|'\n'
name|'caught_exc'
op|'='
name|'None'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'chunk'
name|'in'
name|'body_iter'
op|':'
newline|'\n'
indent|'                '
name|'body'
op|'+='
name|'chunk'
newline|'\n'
dedent|''
dedent|''
name|'except'
name|'Exception'
name|'as'
name|'exc'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'expect_exception'
op|':'
newline|'\n'
indent|'                '
name|'caught_exc'
op|'='
name|'exc'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'expect_exception'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'status'
op|'['
number|'0'
op|']'
op|','
name|'headers'
op|'['
number|'0'
op|']'
op|','
name|'body'
op|','
name|'caught_exc'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'status'
op|'['
number|'0'
op|']'
op|','
name|'headers'
op|'['
number|'0'
op|']'
op|','
name|'body'
newline|'\n'
nl|'\n'
DECL|member|setUp
dedent|''
dedent|''
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'='
name|'FakeSwift'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dlo'
op|'='
name|'dlo'
op|'.'
name|'filter_factory'
op|'('
op|'{'
nl|'\n'
comment|"# don't slow down tests with rate limiting"
nl|'\n'
string|"'rate_limit_after_segment'"
op|':'
string|"'1000000'"
op|','
nl|'\n'
op|'}'
op|')'
op|'('
name|'self'
op|'.'
name|'app'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_01'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|','
string|"'Etag'"
op|':'
name|'md5hex'
op|'('
string|'"aaaaa"'
op|')'
op|'}'
op|','
nl|'\n'
string|"'aaaaa'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_02'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|','
string|"'Etag'"
op|':'
name|'md5hex'
op|'('
string|'"bbbbb"'
op|')'
op|'}'
op|','
nl|'\n'
string|"'bbbbb'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_03'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|','
string|"'Etag'"
op|':'
name|'md5hex'
op|'('
string|'"ccccc"'
op|')'
op|'}'
op|','
nl|'\n'
string|"'ccccc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_04'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|','
string|"'Etag'"
op|':'
name|'md5hex'
op|'('
string|'"ddddd"'
op|')'
op|'}'
op|','
nl|'\n'
string|"'ddddd'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_05'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|','
string|"'Etag'"
op|':'
name|'md5hex'
op|'('
string|'"eeeee"'
op|')'
op|'}'
op|','
nl|'\n'
string|"'eeeee'"
op|')'
newline|'\n'
nl|'\n'
comment|'# an unrelated object (not seg*) to test the prefix matching'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/catpicture.jpg'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'9'"
op|','
nl|'\n'
string|"'Etag'"
op|':'
name|'md5hex'
op|'('
string|'"meow meow meow meow"'
op|')'
op|'}'
op|','
nl|'\n'
string|"'meow meow meow meow'"
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'17'"
op|','
string|"'Etag'"
op|':'
string|"'manifest-etag'"
op|','
nl|'\n'
string|"'X-Object-Manifest'"
op|':'
string|"'c/seg'"
op|'}'
op|','
nl|'\n'
string|"'manifest-contents'"
op|')'
newline|'\n'
nl|'\n'
name|'lm'
op|'='
string|"'2013-11-22T02:42:13.781760'"
newline|'\n'
name|'ct'
op|'='
string|"'application/octet-stream'"
newline|'\n'
name|'segs'
op|'='
op|'['
op|'{'
string|'"hash"'
op|':'
name|'md5hex'
op|'('
string|'"aaaaa"'
op|')'
op|','
string|'"bytes"'
op|':'
number|'5'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"seg_01"'
op|','
string|'"last_modified"'
op|':'
name|'lm'
op|','
string|'"content_type"'
op|':'
name|'ct'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"hash"'
op|':'
name|'md5hex'
op|'('
string|'"bbbbb"'
op|')'
op|','
string|'"bytes"'
op|':'
number|'5'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"seg_02"'
op|','
string|'"last_modified"'
op|':'
name|'lm'
op|','
string|'"content_type"'
op|':'
name|'ct'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"hash"'
op|':'
name|'md5hex'
op|'('
string|'"ccccc"'
op|')'
op|','
string|'"bytes"'
op|':'
number|'5'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"seg_03"'
op|','
string|'"last_modified"'
op|':'
name|'lm'
op|','
string|'"content_type"'
op|':'
name|'ct'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"hash"'
op|':'
name|'md5hex'
op|'('
string|'"ddddd"'
op|')'
op|','
string|'"bytes"'
op|':'
number|'5'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"seg_04"'
op|','
string|'"last_modified"'
op|':'
name|'lm'
op|','
string|'"content_type"'
op|':'
name|'ct'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"hash"'
op|':'
name|'md5hex'
op|'('
string|'"eeeee"'
op|')'
op|','
string|'"bytes"'
op|':'
number|'5'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"seg_05"'
op|','
string|'"last_modified"'
op|':'
name|'lm'
op|','
string|'"content_type"'
op|':'
name|'ct'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'full_container_listing'
op|'='
name|'segs'
op|'+'
op|'['
op|'{'
string|'"hash"'
op|':'
string|'"cats-etag"'
op|','
string|'"bytes"'
op|':'
number|'9'
op|','
nl|'\n'
string|'"name"'
op|':'
string|'"catpicture.jpg"'
op|','
nl|'\n'
string|'"last_modified"'
op|':'
name|'lm'
op|','
nl|'\n'
string|'"content_type"'
op|':'
string|'"application/png"'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c?format=json'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/json; charset=utf-8'"
op|'}'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
name|'full_container_listing'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c?format=json&prefix=seg'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/json; charset=utf-8'"
op|'}'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
name|'segs'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# This is to let us test multi-page container listings; we use the'
nl|'\n'
comment|'# trailing underscore to send small (pagesize=3) listings.'
nl|'\n'
comment|'#'
nl|'\n'
comment|"# If you're testing against this, be sure to mock out"
nl|'\n'
comment|'# CONTAINER_LISTING_LIMIT to 3 in your test.'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/mancon/manifest-many-segments'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'7'"
op|','
string|"'Etag'"
op|':'
string|"'etag-manyseg'"
op|','
nl|'\n'
string|"'X-Object-Manifest'"
op|':'
string|"'c/seg_'"
op|'}'
op|','
nl|'\n'
string|"'manyseg'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c?format=json&prefix=seg_'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/json; charset=utf-8'"
op|'}'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
name|'segs'
op|'['
op|':'
number|'3'
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c?format=json&prefix=seg_&marker=seg_03'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/json; charset=utf-8'"
op|'}'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
name|'segs'
op|'['
number|'3'
op|':'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# Here's a manifest with 0 segments"
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/mancon/manifest-no-segments'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'7'"
op|','
string|"'Etag'"
op|':'
string|"'noseg'"
op|','
nl|'\n'
string|"'X-Object-Manifest'"
op|':'
string|"'c/noseg_'"
op|'}'
op|','
nl|'\n'
string|"'noseg'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c?format=json&prefix=noseg_'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/json; charset=utf-8'"
op|'}'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
op|'['
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDloPutManifest
dedent|''
dedent|''
name|'class'
name|'TestDloPutManifest'
op|'('
name|'DloTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestDloPutManifest'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'PUT'"
op|','
string|"'/v1/AUTH_test/c/m'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPCreated'
op|','
op|'{'
op|'}'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validating_x_object_manifest
dedent|''
name|'def'
name|'test_validating_x_object_manifest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'exp_okay'
op|'='
op|'['
string|'"c/o"'
op|','
nl|'\n'
string|'"c/obj/with/slashes"'
op|','
nl|'\n'
string|'"c/obj/with/trailing/slash/"'
op|','
nl|'\n'
string|'"c/obj/with//multiple///slashes////adjacent"'
op|']'
newline|'\n'
name|'exp_bad'
op|'='
op|'['
string|'""'
op|','
nl|'\n'
string|'"/leading/slash"'
op|','
nl|'\n'
string|'"double//slash"'
op|','
nl|'\n'
string|'"container-only"'
op|','
nl|'\n'
string|'"whole-container/"'
op|','
nl|'\n'
string|'"c/o?short=querystring"'
op|','
nl|'\n'
string|'"c/o?has=a&long-query=string"'
op|']'
newline|'\n'
nl|'\n'
name|'got_okay'
op|'='
op|'['
op|']'
newline|'\n'
name|'got_bad'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'val'
name|'in'
op|'('
name|'exp_okay'
op|'+'
name|'exp_bad'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|'"/v1/AUTH_test/c/m"'
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|'"X-Object-Manifest"'
op|':'
name|'val'
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'if'
name|'status'
op|'.'
name|'startswith'
op|'('
string|'"201"'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'got_okay'
op|'.'
name|'append'
op|'('
name|'val'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'got_bad'
op|'.'
name|'append'
op|'('
name|'val'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exp_okay'
op|','
name|'got_okay'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'exp_bad'
op|','
name|'got_bad'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validation_watches_manifests_with_slashes
dedent|''
name|'def'
name|'test_validation_watches_manifests_with_slashes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'PUT'"
op|','
string|"'/v1/AUTH_test/con/w/x/y/z'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPCreated'
op|','
op|'{'
op|'}'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|'"/v1/AUTH_test/con/w/x/y/z"'
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|'"X-Object-Manifest"'
op|':'
string|"'good/value'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"201 Created"'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|'"/v1/AUTH_test/con/w/x/y/z"'
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|'"X-Object-Manifest"'
op|':'
string|"'/badvalue'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"400 Bad Request"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validation_ignores_containers
dedent|''
name|'def'
name|'test_validation_ignores_containers'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'PUT'"
op|','
string|"'/v1/a/c'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPAccepted'
op|','
op|'{'
op|'}'
op|','
name|'None'
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|'"/v1/a/c"'
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|'"X-Object-Manifest"'
op|':'
string|'"/superbogus/?wrong=in&every=way"'
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"202 Accepted"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_validation_ignores_accounts
dedent|''
name|'def'
name|'test_validation_ignores_accounts'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'PUT'"
op|','
string|"'/v1/a'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPAccepted'
op|','
op|'{'
op|'}'
op|','
name|'None'
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|'"/v1/a"'
op|','
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|'"X-Object-Manifest"'
op|':'
string|'"/superbogus/?wrong=in&every=way"'
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'_'
op|','
name|'_'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"202 Accepted"'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDloHeadManifest
dedent|''
dedent|''
name|'class'
name|'TestDloHeadManifest'
op|'('
name|'DloTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_head_large_object
indent|'    '
name|'def'
name|'test_head_large_object'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_etag'
op|'='
string|'\'"%s"\''
op|'%'
name|'md5hex'
op|'('
nl|'\n'
name|'md5hex'
op|'('
string|'"aaaaa"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"bbbbb"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"ccccc"'
op|')'
op|'+'
nl|'\n'
name|'md5hex'
op|'('
string|'"ddddd"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"eeeee"'
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Etag"'
op|']'
op|','
name|'expected_etag'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Content-Length"'
op|']'
op|','
string|'"25"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_head_large_object_too_many_segments
dedent|''
name|'def'
name|'test_head_large_object_too_many_segments'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest-many-segments'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
name|'LIMIT'
op|','
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
comment|"# etag is manifest's etag"
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Etag"'
op|']'
op|','
string|'"etag-manyseg"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|'"Content-Length"'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_head_large_object_no_segments
dedent|''
name|'def'
name|'test_head_large_object_no_segments'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest-no-segments'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Etag"'
op|']'
op|','
string|'\'"%s"\''
op|'%'
name|'md5hex'
op|'('
string|'""'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Content-Length"'
op|']'
op|','
string|'"0"'
op|')'
newline|'\n'
nl|'\n'
comment|'# one request to HEAD the manifest'
nl|'\n'
comment|'# one request for the first page of listings'
nl|'\n'
comment|'# *zero* requests for the second page of listings'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'calls'
op|','
nl|'\n'
op|'['
op|'('
string|"'HEAD'"
op|','
string|"'/v1/AUTH_test/mancon/manifest-no-segments'"
op|')'
op|','
nl|'\n'
op|'('
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c?format=json&prefix=noseg_'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDloGetManifest
dedent|''
dedent|''
name|'class'
name|'TestDloGetManifest'
op|'('
name|'DloTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|test_get_manifest
indent|'    '
name|'def'
name|'test_get_manifest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'expected_etag'
op|'='
string|'\'"%s"\''
op|'%'
name|'md5hex'
op|'('
nl|'\n'
name|'md5hex'
op|'('
string|'"aaaaa"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"bbbbb"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"ccccc"'
op|')'
op|'+'
nl|'\n'
name|'md5hex'
op|'('
string|'"ddddd"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"eeeee"'
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Etag"'
op|']'
op|','
name|'expected_etag'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Content-Length"'
op|']'
op|','
string|'"25"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"'aaaaabbbbbcccccdddddeeeee'"
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'_'
op|','
name|'_'
op|','
name|'hdrs'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'calls_with_headers'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'ua'
op|'='
name|'hdrs'
op|'.'
name|'get'
op|'('
string|'"User-Agent"'
op|','
string|'""'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
string|'"DLO MultipartGET"'
name|'in'
name|'ua'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|'"DLO MultipartGET DLO MultipartGET"'
name|'in'
name|'ua'
op|')'
newline|'\n'
comment|'# the first request goes through unaltered'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
nl|'\n'
string|'"DLO MultipartGET"'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'calls_with_headers'
op|'['
number|'0'
op|']'
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# we set swift.source for everything but the first request'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'swift_sources'
op|','
nl|'\n'
op|'['
name|'None'
op|','
string|"'DLO'"
op|','
string|"'DLO'"
op|','
string|"'DLO'"
op|','
string|"'DLO'"
op|','
string|"'DLO'"
op|','
string|"'DLO'"
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_non_manifest_passthrough
dedent|''
name|'def'
name|'test_get_non_manifest_passthrough'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/c/catpicture.jpg'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|'"meow meow meow meow"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_non_object_passthrough
dedent|''
name|'def'
name|'test_get_non_object_passthrough'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
string|"'GET'"
op|','
string|"'/info'"
op|','
name|'swob'
op|'.'
name|'HTTPOk'
op|','
nl|'\n'
op|'{'
op|'}'
op|','
string|"'useful stuff here'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/info'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|"'200 OK'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"'useful stuff here'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'self'
op|'.'
name|'app'
op|'.'
name|'call_count'
op|','
number|'1'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_manifest_passthrough
dedent|''
name|'def'
name|'test_get_manifest_passthrough'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# reregister it with the query param'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/mancon/manifest?multipart-manifest=get'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'17'"
op|','
string|"'Etag'"
op|':'
string|"'manifest-etag'"
op|','
nl|'\n'
string|"'X-Object-Manifest'"
op|':'
string|"'c/seg'"
op|'}'
op|','
nl|'\n'
string|"'manifest-contents'"
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'QUERY_STRING'"
op|':'
string|"'multipart-manifest=get'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Etag"'
op|']'
op|','
string|'"manifest-etag"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|'"manifest-contents"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_error_passthrough
dedent|''
name|'def'
name|'test_error_passthrough'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/gone/404ed'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPNotFound'
op|','
op|'{'
op|'}'
op|','
name|'None'
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/gone/404ed'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|"'404 Not Found'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_range
dedent|''
name|'def'
name|'test_get_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=8-17'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"206 Partial Content"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Content-Length"'
op|']'
op|','
string|'"10"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|'"bbcccccddd"'
op|')'
newline|'\n'
name|'expected_etag'
op|'='
string|'\'"%s"\''
op|'%'
name|'md5hex'
op|'('
nl|'\n'
name|'md5hex'
op|'('
string|'"aaaaa"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"bbbbb"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"ccccc"'
op|')'
op|'+'
nl|'\n'
name|'md5hex'
op|'('
string|'"ddddd"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"eeeee"'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|'"Etag"'
op|')'
op|','
name|'expected_etag'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_range_on_segment_boundaries
dedent|''
name|'def'
name|'test_get_range_on_segment_boundaries'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=10-19'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"206 Partial Content"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Content-Length"'
op|']'
op|','
string|'"10"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|'"cccccddddd"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_range_first_byte
dedent|''
name|'def'
name|'test_get_range_first_byte'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=0-0'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"206 Partial Content"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Content-Length"'
op|']'
op|','
string|'"1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|'"a"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_range_last_byte
dedent|''
name|'def'
name|'test_get_range_last_byte'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=24-24'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"206 Partial Content"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Content-Length"'
op|']'
op|','
string|'"1"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|'"e"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_range_overlapping_end
dedent|''
name|'def'
name|'test_get_range_overlapping_end'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=18-30'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"206 Partial Content"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Content-Length"'
op|']'
op|','
string|'"7"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Content-Range"'
op|']'
op|','
string|'"bytes 18-24/25"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|'"ddeeeee"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_range_unsatisfiable
dedent|''
name|'def'
name|'test_get_range_unsatisfiable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=25-30'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"416 Requested Range Not Satisfiable"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_range_many_segments_satisfiable
dedent|''
name|'def'
name|'test_get_range_many_segments_satisfiable'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest-many-segments'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=3-12'"
op|'}'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
name|'LIMIT'
op|','
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"206 Partial Content"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Content-Length"'
op|']'
op|','
string|'"10"'
op|')'
newline|'\n'
comment|"# The /15 here indicates that this is a 15-byte object. DLO can't tell"
nl|'\n'
comment|'# if there are more segments or not without fetching more container'
nl|'\n'
comment|'# listings, though, so we just go with the sum of the lengths of the'
nl|'\n'
comment|'# segments we can see. In an ideal world, this would be "bytes 3-12/*"'
nl|'\n'
comment|"# to indicate that we don't know the full object length. However, RFC"
nl|'\n'
comment|'# 2616 section 14.16 explicitly forbids us from doing that:'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#   A response with status code 206 (Partial Content) MUST NOT include'
nl|'\n'
comment|'#   a Content-Range field with a byte-range-resp-spec of "*".'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Since the truth is forbidden, we lie.'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Content-Range"'
op|']'
op|','
string|'"bytes 3-12/15"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|'"aabbbbbccc"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'calls'
op|','
nl|'\n'
op|'['
op|'('
string|"'GET'"
op|','
string|"'/v1/AUTH_test/mancon/manifest-many-segments'"
op|')'
op|','
nl|'\n'
op|'('
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c?format=json&prefix=seg_'"
op|')'
op|','
nl|'\n'
op|'('
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_01?multipart-manifest=get'"
op|')'
op|','
nl|'\n'
op|'('
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_02?multipart-manifest=get'"
op|')'
op|','
nl|'\n'
op|'('
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_03?multipart-manifest=get'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_range_many_segments_satisfiability_unknown
dedent|''
name|'def'
name|'test_get_range_many_segments_satisfiability_unknown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest-many-segments'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=10-22'"
op|'}'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
name|'LIMIT'
op|','
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"200 OK"'
op|')'
newline|'\n'
comment|"# this requires multiple pages of container listing, so we can't send"
nl|'\n'
comment|'# a Content-Length header'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|'"Content-Length"'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|'"aaaaabbbbbcccccdddddeeeee"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_suffix_range
dedent|''
name|'def'
name|'test_get_suffix_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=-40'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"206 Partial Content"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Content-Length"'
op|']'
op|','
string|'"25"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|'"aaaaabbbbbcccccdddddeeeee"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_suffix_range_many_segments
dedent|''
name|'def'
name|'test_get_suffix_range_many_segments'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest-many-segments'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=-5'"
op|'}'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
name|'LIMIT'
op|','
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"200 OK"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|'"Content-Length"'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|'"Content-Range"'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|'"aaaaabbbbbcccccdddddeeeee"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_multi_range
dedent|''
name|'def'
name|'test_get_multi_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# DLO doesn't support multi-range GETs. The way that you express that"
nl|'\n'
comment|'# in HTTP is to return a 200 response containing the whole entity.'
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest-many-segments'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=5-9,15-19'"
op|'}'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
name|'LIMIT'
op|','
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"200 OK"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|'"Content-Length"'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|'"Content-Range"'
op|')'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|'"aaaaabbbbbcccccdddddeeeee"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_if_match_matches
dedent|''
name|'def'
name|'test_if_match_matches'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manifest_etag'
op|'='
string|'\'"%s"\''
op|'%'
name|'md5hex'
op|'('
nl|'\n'
name|'md5hex'
op|'('
string|'"aaaaa"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"bbbbb"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"ccccc"'
op|')'
op|'+'
nl|'\n'
name|'md5hex'
op|'('
string|'"ddddd"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"eeeee"'
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-Match'"
op|':'
name|'manifest_etag'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|"'200 OK'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'25'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"'aaaaabbbbbcccccdddddeeeee'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_if_match_does_not_match
dedent|''
name|'def'
name|'test_if_match_does_not_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-Match'"
op|':'
string|"'not it'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|"'412 Precondition Failed'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_if_none_match_matches
dedent|''
name|'def'
name|'test_if_none_match_matches'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'manifest_etag'
op|'='
string|'\'"%s"\''
op|'%'
name|'md5hex'
op|'('
nl|'\n'
name|'md5hex'
op|'('
string|'"aaaaa"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"bbbbb"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"ccccc"'
op|')'
op|'+'
nl|'\n'
name|'md5hex'
op|'('
string|'"ddddd"'
op|')'
op|'+'
name|'md5hex'
op|'('
string|'"eeeee"'
op|')'
op|')'
newline|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-None-Match'"
op|':'
name|'manifest_etag'
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|"'304 Not Modified'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'0'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_if_none_match_does_not_match
dedent|''
name|'def'
name|'test_if_none_match_does_not_match'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-None-Match'"
op|':'
string|"'not it'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|"'200 OK'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|"'Content-Length'"
op|']'
op|','
string|"'25'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"'aaaaabbbbbcccccdddddeeeee'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_with_if_modified_since
dedent|''
name|'def'
name|'test_get_with_if_modified_since'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# It's important not to pass the If-[Un]Modified-Since header to the"
nl|'\n'
comment|'# proxy for segment GET requests, as it may result in 304 Not Modified'
nl|'\n'
comment|"# responses, and those don't contain segment data."
nl|'\n'
indent|'        '
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'If-Modified-Since'"
op|':'
string|"'Wed, 12 Feb 2014 22:24:52 GMT'"
op|','
nl|'\n'
string|"'If-Unmodified-Since'"
op|':'
string|"'Thu, 13 Feb 2014 23:25:53 GMT'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|','
name|'exc'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|','
name|'expect_exception'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
name|'for'
name|'_'
op|','
name|'_'
op|','
name|'hdrs'
name|'in'
name|'self'
op|'.'
name|'app'
op|'.'
name|'calls_with_headers'
op|'['
number|'1'
op|':'
op|']'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'If-Modified-Since'"
name|'in'
name|'hdrs'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
string|"'If-Unmodified-Since'"
name|'in'
name|'hdrs'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_error_fetching_first_segment
dedent|''
dedent|''
name|'def'
name|'test_error_fetching_first_segment'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_01'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPForbidden'
op|','
op|'{'
op|'}'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|','
name|'exc'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|','
name|'expect_exception'
op|'='
name|'True'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'exc'
op|','
name|'exceptions'
op|'.'
name|'SegmentError'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"200 OK"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"''"
op|')'
comment|'# error right away -> no body bytes sent'
newline|'\n'
nl|'\n'
DECL|member|test_error_fetching_second_segment
dedent|''
name|'def'
name|'test_error_fetching_second_segment'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_02'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPForbidden'
op|','
op|'{'
op|'}'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|','
name|'exc'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|','
name|'expect_exception'
op|'='
name|'True'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'exc'
op|','
name|'exceptions'
op|'.'
name|'SegmentError'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"200 OK"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|'.'
name|'join'
op|'('
name|'body'
op|')'
op|','
string|'"aaaaa"'
op|')'
comment|'# first segment made it out'
newline|'\n'
nl|'\n'
DECL|member|test_error_listing_container_first_listing_request
dedent|''
name|'def'
name|'test_error_listing_container_first_listing_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c?format=json&prefix=seg_'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPNotFound'
op|','
op|'{'
op|'}'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest-many-segments'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=-5'"
op|'}'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
name|'LIMIT'
op|','
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"404 Not Found"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_error_listing_container_second_listing_request
dedent|''
name|'def'
name|'test_error_listing_container_second_listing_request'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c?format=json&prefix=seg_&marker=seg_03'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPNotFound'
op|','
op|'{'
op|'}'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest-many-segments'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=-5'"
op|'}'
op|')'
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
name|'LIMIT'
op|','
number|'3'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|','
name|'exc'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
nl|'\n'
name|'req'
op|','
name|'expect_exception'
op|'='
name|'True'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'exc'
op|','
name|'exceptions'
op|'.'
name|'ListingIterError'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"200 OK"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|'"aaaaabbbbbccccc"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_mismatched_etag_fetching_second_segment
dedent|''
name|'def'
name|'test_mismatched_etag_fetching_second_segment'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_02'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|','
string|"'Etag'"
op|':'
name|'md5hex'
op|'('
string|'"bbbbb"'
op|')'
op|'}'
op|','
nl|'\n'
string|"'bbWRONGbb'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|','
name|'exc'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|','
name|'expect_exception'
op|'='
name|'True'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'exc'
op|','
name|'exceptions'
op|'.'
name|'SegmentError'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"200 OK"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"''"
op|'.'
name|'join'
op|'('
name|'body'
op|')'
op|','
string|'"aaaaabbWRONGbb"'
op|')'
comment|'# stop after error'
newline|'\n'
nl|'\n'
DECL|member|test_etag_comparison_ignores_quotes
dedent|''
name|'def'
name|'test_etag_comparison_ignores_quotes'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# a little future-proofing here in case we ever fix this'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'HEAD'"
op|','
string|"'/v1/AUTH_test/mani/festo'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
string|"'Etag'"
op|':'
string|"'blah'"
op|','
nl|'\n'
string|"'X-Object-Manifest'"
op|':'
string|"'c/quotetags'"
op|'}'
op|','
name|'None'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c?format=json&prefix=quotetags'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/json; charset=utf-8'"
op|'}'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
op|'['
op|'{'
string|'"hash"'
op|':'
string|'"\\"abc\\""'
op|','
string|'"bytes"'
op|':'
number|'5'
op|','
string|'"name"'
op|':'
string|'"quotetags1"'
op|','
nl|'\n'
string|'"last_modified"'
op|':'
string|'"2013-11-22T02:42:14.261620"'
op|','
nl|'\n'
string|'"content-type"'
op|':'
string|'"application/octet-stream"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"hash"'
op|':'
string|'"def"'
op|','
string|'"bytes"'
op|':'
number|'5'
op|','
string|'"name"'
op|':'
string|'"quotetags2"'
op|','
nl|'\n'
string|'"last_modified"'
op|':'
string|'"2013-11-22T02:42:14.261620"'
op|','
nl|'\n'
string|'"content-type"'
op|':'
string|'"application/octet-stream"'
op|'}'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mani/festo'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'HEAD'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'['
string|'"Etag"'
op|']'
op|','
nl|'\n'
string|'\'"\''
op|'+'
name|'hashlib'
op|'.'
name|'md5'
op|'('
string|'"abcdef"'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|'+'
string|'\'"\''
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_object_prefix_quoting
dedent|''
name|'def'
name|'test_object_prefix_quoting'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/man/accent'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'0'"
op|','
string|"'Etag'"
op|':'
string|"'blah'"
op|','
nl|'\n'
string|"'X-Object-Manifest'"
op|':'
string|"u'c/\xc3\xa9'"
op|'.'
name|'encode'
op|'('
string|"'utf-8'"
op|')'
op|'}'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
name|'segs'
op|'='
op|'['
op|'{'
string|'"hash"'
op|':'
name|'md5hex'
op|'('
string|'"AAAAA"'
op|')'
op|','
string|'"bytes"'
op|':'
number|'5'
op|','
string|'"name"'
op|':'
string|'u"\xc3\xa91"'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"hash"'
op|':'
name|'md5hex'
op|'('
string|'"AAAAA"'
op|')'
op|','
string|'"bytes"'
op|':'
number|'5'
op|','
string|'"name"'
op|':'
string|'u"\xc3\xa92"'
op|'}'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c?format=json&prefix=%C3%A9'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/json'"
op|'}'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
name|'segs'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/\\xC3\\xa91'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|','
string|"'Etag'"
op|':'
name|'md5hex'
op|'('
string|'"AAAAA"'
op|')'
op|'}'
op|','
nl|'\n'
string|'"AAAAA"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/\\xC3\\xA92'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'5'"
op|','
string|"'Etag'"
op|':'
name|'md5hex'
op|'('
string|'"BBBBB"'
op|')'
op|'}'
op|','
nl|'\n'
string|'"BBBBB"'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/man/accent'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|'"200 OK"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|'"AAAAABBBBB"'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_taking_too_long
dedent|''
name|'def'
name|'test_get_taking_too_long'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'the_time'
op|'='
op|'['
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|function|mock_time
name|'def'
name|'mock_time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'return'
name|'the_time'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
comment|'# this is just a convenient place to hang a time jump'
nl|'\n'
DECL|function|mock_is_success
dedent|''
name|'def'
name|'mock_is_success'
op|'('
name|'status_int'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'the_time'
op|'['
number|'0'
op|']'
op|'+='
number|'9'
op|'*'
number|'3600'
newline|'\n'
name|'return'
name|'status_int'
op|'//'
number|'100'
op|'=='
number|'2'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
nl|'\n'
name|'with'
name|'contextlib'
op|'.'
name|'nested'
op|'('
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.request_helpers.time.time'"
op|','
nl|'\n'
name|'mock_time'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'('
string|"'swift.common.request_helpers.is_success'"
op|','
nl|'\n'
name|'mock_is_success'
op|')'
op|','
nl|'\n'
name|'mock'
op|'.'
name|'patch'
op|'.'
name|'object'
op|'('
name|'dlo'
op|','
string|"'is_success'"
op|','
name|'mock_is_success'
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|','
name|'exc'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
nl|'\n'
name|'req'
op|','
name|'expect_exception'
op|'='
name|'True'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|"'200 OK'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"'aaaaabbbbbccccc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'exc'
op|','
name|'exceptions'
op|'.'
name|'SegmentError'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_oversize_segment
dedent|''
name|'def'
name|'test_get_oversize_segment'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# If we send a Content-Length header to the client, it's based on the"
nl|'\n'
comment|'# container listing. If a segment gets bigger by the time we get to it'
nl|'\n'
comment|'# (like if a client uploads a bigger segment w/the same name), we need'
nl|'\n'
comment|'# to not send anything beyond the length we promised. Also, we should'
nl|'\n'
comment|'# probably raise an exception.'
nl|'\n'
nl|'\n'
comment|'# This is now longer than the original seg_03+seg_04+seg_05 combined'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_03'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'20'"
op|','
string|"'Etag'"
op|':'
string|"'seg03-etag'"
op|'}'
op|','
nl|'\n'
string|"'cccccccccccccccccccc'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|','
name|'exc'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|','
name|'expect_exception'
op|'='
name|'True'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|"'200 OK'"
op|')'
comment|'# sanity check'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|"'Content-Length'"
op|')'
op|','
string|"'25'"
op|')'
comment|'# sanity check'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"'aaaaabbbbbccccccccccccccc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'exc'
op|','
name|'exceptions'
op|'.'
name|'SegmentError'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'calls'
op|','
nl|'\n'
op|'['
op|'('
string|"'GET'"
op|','
string|"'/v1/AUTH_test/mancon/manifest'"
op|')'
op|','
nl|'\n'
op|'('
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c?format=json&prefix=seg'"
op|')'
op|','
nl|'\n'
op|'('
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_01?multipart-manifest=get'"
op|')'
op|','
nl|'\n'
op|'('
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_02?multipart-manifest=get'"
op|')'
op|','
nl|'\n'
op|'('
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_03?multipart-manifest=get'"
op|')'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_undersize_segment
dedent|''
name|'def'
name|'test_get_undersize_segment'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# If we send a Content-Length header to the client, it's based on the"
nl|'\n'
comment|'# container listing. If a segment gets smaller by the time we get to'
nl|'\n'
comment|'# it (like if a client uploads a smaller segment w/the same name), we'
nl|'\n'
comment|'# need to raise an exception so that the connection will be closed by'
nl|'\n'
comment|'# the WSGI server. Otherwise, the WSGI server will be waiting for the'
nl|'\n'
comment|'# next request, the client will still be waiting for the rest of the'
nl|'\n'
comment|'# response, and nobody will be happy.'
nl|'\n'
nl|'\n'
comment|'# Shrink it by a single byte'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_03'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'4'"
op|','
string|"'Etag'"
op|':'
name|'md5hex'
op|'('
string|'"cccc"'
op|')'
op|'}'
op|','
nl|'\n'
string|"'cccc'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|','
name|'exc'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|','
name|'expect_exception'
op|'='
name|'True'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|"'200 OK'"
op|')'
comment|'# sanity check'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|"'Content-Length'"
op|')'
op|','
string|"'25'"
op|')'
comment|'# sanity check'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"'aaaaabbbbbccccdddddeeeee'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'exc'
op|','
name|'exceptions'
op|'.'
name|'SegmentError'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_undersize_segment_range
dedent|''
name|'def'
name|'test_get_undersize_segment_range'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# Shrink it by a single byte'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/seg_03'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Length'"
op|':'
string|"'4'"
op|','
string|"'Etag'"
op|':'
name|'md5hex'
op|'('
string|'"cccc"'
op|')'
op|'}'
op|','
nl|'\n'
string|"'cccc'"
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|"'Range'"
op|':'
string|"'bytes=0-14'"
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|','
name|'exc'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|','
name|'expect_exception'
op|'='
name|'True'
op|')'
newline|'\n'
name|'headers'
op|'='
name|'swob'
op|'.'
name|'HeaderKeyDict'
op|'('
name|'headers'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'status'
op|','
string|"'206 Partial Content'"
op|')'
comment|'# sanity check'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'headers'
op|'.'
name|'get'
op|'('
string|"'Content-Length'"
op|')'
op|','
string|"'15'"
op|')'
comment|'# sanity check'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'body'
op|','
string|"'aaaaabbbbbcccc'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'isinstance'
op|'('
name|'exc'
op|','
name|'exceptions'
op|'.'
name|'SegmentError'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_get_with_auth_overridden
dedent|''
name|'def'
name|'test_get_with_auth_overridden'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'auth_got_called'
op|'='
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|function|my_auth
name|'def'
name|'my_auth'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'auth_got_called'
op|'['
number|'0'
op|']'
op|'+='
number|'1'
newline|'\n'
name|'return'
name|'None'
newline|'\n'
nl|'\n'
dedent|''
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/mancon/manifest'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'swift.authorize'"
op|':'
name|'my_auth'
op|'}'
op|')'
newline|'\n'
name|'status'
op|','
name|'headers'
op|','
name|'body'
op|'='
name|'self'
op|'.'
name|'call_dlo'
op|'('
name|'req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'auth_got_called'
op|'['
number|'0'
op|']'
op|'>'
number|'1'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|function|fake_start_response
dedent|''
dedent|''
name|'def'
name|'fake_start_response'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'    '
name|'pass'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDloCopyHook
dedent|''
name|'class'
name|'TestDloCopyHook'
op|'('
name|'DloTestCase'
op|')'
op|':'
newline|'\n'
DECL|member|setUp
indent|'    '
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestDloCopyHook'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/o1'"
op|','
name|'swob'
op|'.'
name|'HTTPOk'
op|','
nl|'\n'
op|'{'
string|"'Content-Length'"
op|':'
string|"'10'"
op|','
string|"'Etag'"
op|':'
string|"'o1-etag'"
op|'}'
op|','
nl|'\n'
string|'"aaaaaaaaaa"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/o2'"
op|','
name|'swob'
op|'.'
name|'HTTPOk'
op|','
nl|'\n'
op|'{'
string|"'Content-Length'"
op|':'
string|"'10'"
op|','
string|"'Etag'"
op|':'
string|"'o2-etag'"
op|'}'
op|','
nl|'\n'
string|'"bbbbbbbbbb"'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c/man'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'X-Object-Manifest'"
op|':'
string|"'c/o'"
op|'}'
op|','
nl|'\n'
string|'"manifest-contents"'
op|')'
newline|'\n'
nl|'\n'
name|'lm'
op|'='
string|"'2013-11-22T02:42:13.781760'"
newline|'\n'
name|'ct'
op|'='
string|"'application/octet-stream'"
newline|'\n'
name|'segs'
op|'='
op|'['
op|'{'
string|'"hash"'
op|':'
string|'"o1-etag"'
op|','
string|'"bytes"'
op|':'
number|'10'
op|','
string|'"name"'
op|':'
string|'"o1"'
op|','
nl|'\n'
string|'"last_modified"'
op|':'
name|'lm'
op|','
string|'"content_type"'
op|':'
name|'ct'
op|'}'
op|','
nl|'\n'
op|'{'
string|'"hash"'
op|':'
string|'"o2-etag"'
op|','
string|'"bytes"'
op|':'
number|'5'
op|','
string|'"name"'
op|':'
string|'"o2"'
op|','
nl|'\n'
string|'"last_modified"'
op|':'
name|'lm'
op|','
string|'"content_type"'
op|':'
name|'ct'
op|'}'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'app'
op|'.'
name|'register'
op|'('
nl|'\n'
string|"'GET'"
op|','
string|"'/v1/AUTH_test/c?format=json&prefix=o'"
op|','
nl|'\n'
name|'swob'
op|'.'
name|'HTTPOk'
op|','
op|'{'
string|"'Content-Type'"
op|':'
string|"'application/json; charset=utf-8'"
op|'}'
op|','
nl|'\n'
name|'json'
op|'.'
name|'dumps'
op|'('
name|'segs'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'copy_hook'
op|'='
op|'['
name|'None'
op|']'
newline|'\n'
nl|'\n'
comment|'# slip this guy in there to pull out the hook'
nl|'\n'
DECL|function|extract_copy_hook
name|'def'
name|'extract_copy_hook'
op|'('
name|'env'
op|','
name|'sr'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'copy_hook'
op|'['
number|'0'
op|']'
op|'='
name|'env'
op|'.'
name|'get'
op|'('
string|"'swift.copy_hook'"
op|')'
newline|'\n'
name|'return'
name|'self'
op|'.'
name|'app'
op|'('
name|'env'
op|','
name|'sr'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'dlo'
op|'='
name|'dlo'
op|'.'
name|'filter_factory'
op|'('
op|'{'
op|'}'
op|')'
op|'('
name|'extract_copy_hook'
op|')'
newline|'\n'
nl|'\n'
name|'req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
string|"'/v1/AUTH_test/c/o1'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'dlo'
op|'('
name|'req'
op|'.'
name|'environ'
op|','
name|'fake_start_response'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'copy_hook'
op|'='
name|'copy_hook'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'self'
op|'.'
name|'copy_hook'
name|'is'
name|'not'
name|'None'
op|')'
comment|'# sanity check'
newline|'\n'
nl|'\n'
DECL|member|test_copy_hook_passthrough
dedent|''
name|'def'
name|'test_copy_hook_passthrough'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'source_req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/AUTH_test/c/man'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'sink_req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/AUTH_test/c/man'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|')'
newline|'\n'
name|'source_resp'
op|'='
name|'swob'
op|'.'
name|'Response'
op|'('
name|'request'
op|'='
name|'source_req'
op|','
name|'status'
op|'='
number|'200'
op|')'
newline|'\n'
nl|'\n'
comment|'# no X-Object-Manifest header, so do nothing'
nl|'\n'
name|'modified_resp'
op|'='
name|'self'
op|'.'
name|'copy_hook'
op|'('
name|'source_req'
op|','
name|'source_resp'
op|','
name|'sink_req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'modified_resp'
name|'is'
name|'source_resp'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_hook_manifest
dedent|''
name|'def'
name|'test_copy_hook_manifest'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'source_req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/AUTH_test/c/man'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|'}'
op|')'
newline|'\n'
name|'sink_req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/AUTH_test/c/man'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|')'
newline|'\n'
name|'source_resp'
op|'='
name|'swob'
op|'.'
name|'Response'
op|'('
nl|'\n'
name|'request'
op|'='
name|'source_req'
op|','
name|'status'
op|'='
number|'200'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|'"X-Object-Manifest"'
op|':'
string|'"c/o"'
op|'}'
op|','
nl|'\n'
name|'app_iter'
op|'='
op|'['
string|'"manifest"'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|"# it's a manifest, so copy the segments to make a normal object"
nl|'\n'
name|'modified_resp'
op|'='
name|'self'
op|'.'
name|'copy_hook'
op|'('
name|'source_req'
op|','
name|'source_resp'
op|','
name|'sink_req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'modified_resp'
name|'is'
name|'not'
name|'source_resp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'modified_resp'
op|'.'
name|'etag'
op|','
nl|'\n'
name|'hashlib'
op|'.'
name|'md5'
op|'('
string|'"o1-etago2-etag"'
op|')'
op|'.'
name|'hexdigest'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sink_req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Object-Manifest'"
op|')'
op|','
name|'None'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_copy_hook_manifest_with_multipart_manifest_get
dedent|''
name|'def'
name|'test_copy_hook_manifest_with_multipart_manifest_get'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'source_req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/AUTH_test/c/man'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'GET'"
op|','
nl|'\n'
string|"'QUERY_STRING'"
op|':'
string|"'multipart-manifest=get'"
op|'}'
op|')'
newline|'\n'
name|'sink_req'
op|'='
name|'swob'
op|'.'
name|'Request'
op|'.'
name|'blank'
op|'('
nl|'\n'
string|"'/v1/AUTH_test/c/man'"
op|','
nl|'\n'
name|'environ'
op|'='
op|'{'
string|"'REQUEST_METHOD'"
op|':'
string|"'PUT'"
op|'}'
op|')'
newline|'\n'
name|'source_resp'
op|'='
name|'swob'
op|'.'
name|'Response'
op|'('
nl|'\n'
name|'request'
op|'='
name|'source_req'
op|','
name|'status'
op|'='
number|'200'
op|','
nl|'\n'
name|'headers'
op|'='
op|'{'
string|'"X-Object-Manifest"'
op|':'
string|'"c/o"'
op|'}'
op|','
nl|'\n'
name|'app_iter'
op|'='
op|'['
string|'"manifest"'
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# make sure the sink request (the backend PUT) gets X-Object-Manifest'
nl|'\n'
comment|"# on it, but that's all"
nl|'\n'
name|'modified_resp'
op|'='
name|'self'
op|'.'
name|'copy_hook'
op|'('
name|'source_req'
op|','
name|'source_resp'
op|','
name|'sink_req'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'modified_resp'
name|'is'
name|'source_resp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sink_req'
op|'.'
name|'headers'
op|'.'
name|'get'
op|'('
string|"'X-Object-Manifest'"
op|')'
op|','
string|"'c/o'"
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestDloConfiguration
dedent|''
dedent|''
name|'class'
name|'TestDloConfiguration'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    For backwards compatibility, we will read a couple of values out of the\n    proxy\'s config section if we don\'t have any config values.\n    """'
newline|'\n'
nl|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'tmpdir'
op|'='
name|'tempfile'
op|'.'
name|'mkdtemp'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'shutil'
op|'.'
name|'rmtree'
op|'('
name|'self'
op|'.'
name|'tmpdir'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_skip_defaults_if_configured
dedent|''
name|'def'
name|'test_skip_defaults_if_configured'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# The presence of even one config value in our config section means we'
nl|'\n'
comment|"# won't go looking for the proxy config at all."
nl|'\n'
indent|'        '
name|'proxy_conf'
op|'='
name|'dedent'
op|'('
string|'"""\n        [DEFAULT]\n        bind_ip = 10.4.5.6\n\n        [pipeline:main]\n        pipeline = catch_errors dlo ye-olde-proxy-server\n\n        [filter:dlo]\n        use = egg:swift#dlo\n        max_get_time = 3600\n\n        [app:ye-olde-proxy-server]\n        use = egg:swift#proxy\n        rate_limit_segments_per_sec = 7\n        rate_limit_after_segment = 13\n        max_get_time = 2900\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'conffile'
op|'='
name|'tempfile'
op|'.'
name|'NamedTemporaryFile'
op|'('
op|')'
newline|'\n'
name|'conffile'
op|'.'
name|'write'
op|'('
name|'proxy_conf'
op|')'
newline|'\n'
name|'conffile'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mware'
op|'='
name|'dlo'
op|'.'
name|'filter_factory'
op|'('
op|'{'
nl|'\n'
string|"'max_get_time'"
op|':'
string|"'3600'"
op|','
nl|'\n'
string|"'__file__'"
op|':'
name|'conffile'
op|'.'
name|'name'
nl|'\n'
op|'}'
op|')'
op|'('
string|'"no app here"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'mware'
op|'.'
name|'rate_limit_segments_per_sec'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'10'
op|','
name|'mware'
op|'.'
name|'rate_limit_after_segment'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3600'
op|','
name|'mware'
op|'.'
name|'max_get_time'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finding_defaults_from_file
dedent|''
name|'def'
name|'test_finding_defaults_from_file'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# If DLO has no config vars, go pull them from the proxy server's"
nl|'\n'
comment|'# config section'
nl|'\n'
indent|'        '
name|'proxy_conf'
op|'='
name|'dedent'
op|'('
string|'"""\n        [DEFAULT]\n        bind_ip = 10.4.5.6\n\n        [pipeline:main]\n        pipeline = catch_errors dlo ye-olde-proxy-server\n\n        [filter:dlo]\n        use = egg:swift#dlo\n\n        [app:ye-olde-proxy-server]\n        use = egg:swift#proxy\n        rate_limit_after_segment = 13\n        max_get_time = 2900\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'conffile'
op|'='
name|'tempfile'
op|'.'
name|'NamedTemporaryFile'
op|'('
op|')'
newline|'\n'
name|'conffile'
op|'.'
name|'write'
op|'('
name|'proxy_conf'
op|')'
newline|'\n'
name|'conffile'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mware'
op|'='
name|'dlo'
op|'.'
name|'filter_factory'
op|'('
op|'{'
nl|'\n'
string|"'__file__'"
op|':'
name|'conffile'
op|'.'
name|'name'
nl|'\n'
op|'}'
op|')'
op|'('
string|'"no app here"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'mware'
op|'.'
name|'rate_limit_segments_per_sec'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'13'
op|','
name|'mware'
op|'.'
name|'rate_limit_after_segment'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2900'
op|','
name|'mware'
op|'.'
name|'max_get_time'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_finding_defaults_from_dir
dedent|''
name|'def'
name|'test_finding_defaults_from_dir'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|"# If DLO has no config vars, go pull them from the proxy server's"
nl|'\n'
comment|'# config section'
nl|'\n'
indent|'        '
name|'proxy_conf1'
op|'='
name|'dedent'
op|'('
string|'"""\n        [DEFAULT]\n        bind_ip = 10.4.5.6\n\n        [pipeline:main]\n        pipeline = catch_errors dlo ye-olde-proxy-server\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'proxy_conf2'
op|'='
name|'dedent'
op|'('
string|'"""\n        [filter:dlo]\n        use = egg:swift#dlo\n\n        [app:ye-olde-proxy-server]\n        use = egg:swift#proxy\n        rate_limit_after_segment = 13\n        max_get_time = 2900\n        """'
op|')'
newline|'\n'
nl|'\n'
name|'conf_dir'
op|'='
name|'self'
op|'.'
name|'tmpdir'
newline|'\n'
nl|'\n'
name|'conffile1'
op|'='
name|'tempfile'
op|'.'
name|'NamedTemporaryFile'
op|'('
name|'dir'
op|'='
name|'conf_dir'
op|','
name|'suffix'
op|'='
string|"'.conf'"
op|')'
newline|'\n'
name|'conffile1'
op|'.'
name|'write'
op|'('
name|'proxy_conf1'
op|')'
newline|'\n'
name|'conffile1'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'conffile2'
op|'='
name|'tempfile'
op|'.'
name|'NamedTemporaryFile'
op|'('
name|'dir'
op|'='
name|'conf_dir'
op|','
name|'suffix'
op|'='
string|"'.conf'"
op|')'
newline|'\n'
name|'conffile2'
op|'.'
name|'write'
op|'('
name|'proxy_conf2'
op|')'
newline|'\n'
name|'conffile2'
op|'.'
name|'flush'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'mware'
op|'='
name|'dlo'
op|'.'
name|'filter_factory'
op|'('
op|'{'
nl|'\n'
string|"'__file__'"
op|':'
name|'conf_dir'
nl|'\n'
op|'}'
op|')'
op|'('
string|'"no app here"'
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'mware'
op|'.'
name|'rate_limit_segments_per_sec'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'13'
op|','
name|'mware'
op|'.'
name|'rate_limit_after_segment'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'2900'
op|','
name|'mware'
op|'.'
name|'max_get_time'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
