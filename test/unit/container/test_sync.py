begin_unit
comment|'# Copyright (c) 2010-2011 OpenStack, LLC.'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
nl|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'container'
name|'import'
name|'sync'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|FakeRing
name|'class'
name|'FakeRing'
op|'('
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|__init__
indent|'    '
name|'def'
name|'__init__'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'replica_count'
op|'='
number|'3'
newline|'\n'
name|'self'
op|'.'
name|'devs'
op|'='
op|'['
op|'{'
string|"'ip'"
op|':'
string|"'10.0.0.%s'"
op|'%'
name|'x'
op|','
string|"'port'"
op|':'
number|'1000'
op|'+'
name|'x'
op|','
string|"'device'"
op|':'
string|"'sda'"
op|'}'
nl|'\n'
name|'for'
name|'x'
name|'in'
name|'xrange'
op|'('
number|'3'
op|')'
op|']'
newline|'\n'
nl|'\n'
DECL|member|get_nodes
dedent|''
name|'def'
name|'get_nodes'
op|'('
name|'self'
op|','
name|'account'
op|','
name|'container'
op|'='
name|'None'
op|','
name|'obj'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'return'
number|'1'
op|','
name|'list'
op|'('
name|'self'
op|'.'
name|'devs'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestContainerSync
dedent|''
dedent|''
name|'class'
name|'TestContainerSync'
op|'('
name|'unittest'
op|'.'
name|'TestCase'
op|')'
op|':'
newline|'\n'
nl|'\n'
DECL|member|test_Iter2FileLikeObject
indent|'    '
name|'def'
name|'test_Iter2FileLikeObject'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'flo'
op|'='
name|'sync'
op|'.'
name|'_Iter2FileLikeObject'
op|'('
name|'iter'
op|'('
op|'['
string|"'123'"
op|','
string|"'4567'"
op|','
string|"'89'"
op|','
string|"'0'"
op|']'
op|')'
op|')'
newline|'\n'
name|'expect'
op|'='
string|"'1234567890'"
newline|'\n'
nl|'\n'
name|'got'
op|'='
name|'flo'
op|'.'
name|'read'
op|'('
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'got'
op|')'
op|'<='
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'got'
op|','
name|'expect'
op|'['
op|':'
name|'len'
op|'('
name|'got'
op|')'
op|']'
op|')'
newline|'\n'
name|'expect'
op|'='
name|'expect'
op|'['
name|'len'
op|'('
name|'got'
op|')'
op|':'
op|']'
newline|'\n'
nl|'\n'
name|'got'
op|'='
name|'flo'
op|'.'
name|'read'
op|'('
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'len'
op|'('
name|'got'
op|')'
op|'<='
number|'5'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'got'
op|','
name|'expect'
op|'['
op|':'
name|'len'
op|'('
name|'got'
op|')'
op|']'
op|')'
newline|'\n'
name|'expect'
op|'='
name|'expect'
op|'['
name|'len'
op|'('
name|'got'
op|')'
op|':'
op|']'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'flo'
op|'.'
name|'read'
op|'('
op|')'
op|','
name|'expect'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'flo'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'flo'
op|'.'
name|'read'
op|'('
number|'2'
op|')'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
name|'flo'
op|'='
name|'sync'
op|'.'
name|'_Iter2FileLikeObject'
op|'('
name|'iter'
op|'('
op|'['
string|"'123'"
op|','
string|"'4567'"
op|','
string|"'89'"
op|','
string|"'0'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'flo'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"'1234567890'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'flo'
op|'.'
name|'read'
op|'('
op|')'
op|','
string|"''"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'flo'
op|'.'
name|'read'
op|'('
number|'2'
op|')'
op|','
string|"''"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_init
dedent|''
name|'def'
name|'test_init'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'cring'
op|'='
name|'FakeRing'
op|'('
op|')'
newline|'\n'
name|'oring'
op|'='
name|'FakeRing'
op|'('
op|')'
newline|'\n'
name|'cs'
op|'='
name|'sync'
op|'.'
name|'ContainerSync'
op|'('
op|'{'
op|'}'
op|','
name|'container_ring'
op|'='
name|'cring'
op|','
name|'object_ring'
op|'='
name|'oring'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'cs'
op|'.'
name|'container_ring'
name|'is'
name|'cring'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'cs'
op|'.'
name|'object_ring'
name|'is'
name|'oring'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_forever
dedent|''
name|'def'
name|'test_run_forever'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This runs runs_forever with fakes to succeed for two loops, the first'
nl|'\n'
comment|'# causing a report but no interval sleep, the second no report but an'
nl|'\n'
comment|'# interval sleep.'
nl|'\n'
indent|'        '
name|'time_calls'
op|'='
op|'['
number|'0'
op|']'
newline|'\n'
name|'sleep_calls'
op|'='
op|'['
op|']'
newline|'\n'
name|'audit_location_generator_calls'
op|'='
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_time
name|'def'
name|'fake_time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'time_calls'
op|'['
number|'0'
op|']'
op|'+='
number|'1'
newline|'\n'
name|'returns'
op|'='
op|'['
number|'1'
op|','
comment|'# Initialized reported time'
nl|'\n'
number|'1'
op|','
comment|'# Start time'
nl|'\n'
number|'3602'
op|','
comment|'# Is it report time (yes)'
nl|'\n'
number|'3602'
op|','
comment|'# Report time'
nl|'\n'
number|'3602'
op|','
comment|'# Elapsed time for "under interval" (no)'
nl|'\n'
number|'3602'
op|','
comment|'# Start time'
nl|'\n'
number|'3603'
op|','
comment|'# Is it report time (no)'
nl|'\n'
number|'3603'
op|','
comment|'# Elapsed time for "under interval" (yes)'
nl|'\n'
op|']'
newline|'\n'
name|'if'
name|'time_calls'
op|'['
number|'0'
op|']'
op|'=='
name|'len'
op|'('
name|'returns'
op|')'
op|'+'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'we are now done'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'returns'
op|'['
name|'time_calls'
op|'['
number|'0'
op|']'
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_sleep
dedent|''
name|'def'
name|'fake_sleep'
op|'('
name|'amount'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'sleep_calls'
op|'.'
name|'append'
op|'('
name|'amount'
op|')'
newline|'\n'
nl|'\n'
DECL|function|fake_audit_location_generator
dedent|''
name|'def'
name|'fake_audit_location_generator'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'audit_location_generator_calls'
op|'['
number|'0'
op|']'
op|'+='
number|'1'
newline|'\n'
comment|"# Makes .container_sync() short-circuit because 'path' doesn't end"
nl|'\n'
comment|'# with .db'
nl|'\n'
name|'return'
op|'['
op|'('
string|"'path'"
op|','
string|"'device'"
op|','
string|"'partition'"
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'orig_time'
op|'='
name|'sync'
op|'.'
name|'time'
newline|'\n'
name|'orig_sleep'
op|'='
name|'sync'
op|'.'
name|'sleep'
newline|'\n'
name|'orig_audit_location_generator'
op|'='
name|'sync'
op|'.'
name|'audit_location_generator'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'sync'
op|'.'
name|'time'
op|'='
name|'fake_time'
newline|'\n'
name|'sync'
op|'.'
name|'sleep'
op|'='
name|'fake_sleep'
newline|'\n'
name|'sync'
op|'.'
name|'audit_location_generator'
op|'='
name|'fake_audit_location_generator'
newline|'\n'
name|'cs'
op|'='
name|'sync'
op|'.'
name|'ContainerSync'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'cs'
op|'.'
name|'run_forever'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'str'
op|'('
name|'err'
op|')'
op|'!='
string|"'we are now done'"
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'sync'
op|'.'
name|'time'
op|'='
name|'orig_time'
newline|'\n'
name|'sync'
op|'.'
name|'sleep'
op|'='
name|'orig_sleep'
newline|'\n'
name|'sync'
op|'.'
name|'audit_location_generator'
op|'='
name|'orig_audit_location_generator'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'time_calls'
op|','
op|'['
number|'9'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'len'
op|'('
name|'sleep_calls'
op|')'
op|','
number|'2'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'sleep_calls'
op|'['
number|'0'
op|']'
op|'<='
name|'cs'
op|'.'
name|'interval'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'sleep_calls'
op|'['
number|'1'
op|']'
op|'=='
name|'cs'
op|'.'
name|'interval'
op|'-'
number|'1'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'audit_location_generator_calls'
op|','
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'cs'
op|'.'
name|'reported'
op|','
number|'3602'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_run_once
dedent|''
name|'def'
name|'test_run_once'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# This runs runs_once with fakes twice, the first causing an interim'
nl|'\n'
comment|'# report, the second with no interm report.'
nl|'\n'
indent|'        '
name|'time_calls'
op|'='
op|'['
number|'0'
op|']'
newline|'\n'
name|'audit_location_generator_calls'
op|'='
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_time
name|'def'
name|'fake_time'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'time_calls'
op|'['
number|'0'
op|']'
op|'+='
number|'1'
newline|'\n'
name|'returns'
op|'='
op|'['
number|'1'
op|','
comment|'# Initialized reported time'
nl|'\n'
number|'1'
op|','
comment|'# Start time'
nl|'\n'
number|'3602'
op|','
comment|'# Is it report time (yes)'
nl|'\n'
number|'3602'
op|','
comment|'# Report time'
nl|'\n'
number|'3602'
op|','
comment|'# End report time'
nl|'\n'
number|'3602'
op|','
comment|'# For elapsed'
nl|'\n'
number|'3602'
op|','
comment|'# Start time'
nl|'\n'
number|'3603'
op|','
comment|'# Is it report time (no)'
nl|'\n'
number|'3604'
op|','
comment|'# End report time'
nl|'\n'
number|'3605'
op|','
comment|'# For elapsed'
nl|'\n'
op|']'
newline|'\n'
name|'if'
name|'time_calls'
op|'['
number|'0'
op|']'
op|'=='
name|'len'
op|'('
name|'returns'
op|')'
op|'+'
number|'1'
op|':'
newline|'\n'
indent|'                '
name|'raise'
name|'Exception'
op|'('
string|"'we are now done'"
op|')'
newline|'\n'
dedent|''
name|'return'
name|'returns'
op|'['
name|'time_calls'
op|'['
number|'0'
op|']'
op|'-'
number|'1'
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_audit_location_generator
dedent|''
name|'def'
name|'fake_audit_location_generator'
op|'('
op|'*'
name|'args'
op|','
op|'**'
name|'kwargs'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'audit_location_generator_calls'
op|'['
number|'0'
op|']'
op|'+='
number|'1'
newline|'\n'
comment|"# Makes .container_sync() short-circuit because 'path' doesn't end"
nl|'\n'
comment|'# with .db'
nl|'\n'
name|'return'
op|'['
op|'('
string|"'path'"
op|','
string|"'device'"
op|','
string|"'partition'"
op|')'
op|']'
newline|'\n'
nl|'\n'
dedent|''
name|'orig_time'
op|'='
name|'sync'
op|'.'
name|'time'
newline|'\n'
name|'orig_audit_location_generator'
op|'='
name|'sync'
op|'.'
name|'audit_location_generator'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'sync'
op|'.'
name|'time'
op|'='
name|'fake_time'
newline|'\n'
name|'sync'
op|'.'
name|'audit_location_generator'
op|'='
name|'fake_audit_location_generator'
newline|'\n'
name|'cs'
op|'='
name|'sync'
op|'.'
name|'ContainerSync'
op|'('
op|'{'
op|'}'
op|')'
newline|'\n'
name|'cs'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'time_calls'
op|','
op|'['
number|'6'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'audit_location_generator_calls'
op|','
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'cs'
op|'.'
name|'reported'
op|','
number|'3602'
op|')'
newline|'\n'
name|'cs'
op|'.'
name|'run_once'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'Exception'
op|','
name|'err'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'str'
op|'('
name|'err'
op|')'
op|'!='
string|"'we are now done'"
op|':'
newline|'\n'
indent|'                '
name|'raise'
newline|'\n'
dedent|''
dedent|''
name|'finally'
op|':'
newline|'\n'
indent|'            '
name|'sync'
op|'.'
name|'time'
op|'='
name|'orig_time'
newline|'\n'
name|'sync'
op|'.'
name|'audit_location_generator'
op|'='
name|'orig_audit_location_generator'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'time_calls'
op|','
op|'['
number|'10'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'audit_location_generator_calls'
op|','
op|'['
number|'2'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEquals'
op|'('
name|'cs'
op|'.'
name|'reported'
op|','
number|'3604'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
