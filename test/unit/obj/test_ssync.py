begin_unit
comment|'# Copyright (c) 2013 - 2015 OpenStack Foundation'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Licensed under the Apache License, Version 2.0 (the "License");'
nl|'\n'
comment|'# you may not use this file except in compliance with the License.'
nl|'\n'
comment|'# You may obtain a copy of the License at'
nl|'\n'
comment|'#'
nl|'\n'
comment|'#    http://www.apache.org/licenses/LICENSE-2.0'
nl|'\n'
comment|'#'
nl|'\n'
comment|'# Unless required by applicable law or agreed to in writing, software'
nl|'\n'
comment|'# distributed under the License is distributed on an "AS IS" BASIS,'
nl|'\n'
comment|'# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or'
nl|'\n'
comment|'# implied.'
nl|'\n'
comment|'# See the License for the specific language governing permissions and'
nl|'\n'
comment|'# limitations under the License.'
nl|'\n'
name|'from'
name|'collections'
name|'import'
name|'defaultdict'
newline|'\n'
nl|'\n'
name|'import'
name|'mock'
newline|'\n'
name|'import'
name|'os'
newline|'\n'
name|'import'
name|'time'
newline|'\n'
name|'import'
name|'unittest'
newline|'\n'
nl|'\n'
name|'import'
name|'eventlet'
newline|'\n'
name|'import'
name|'itertools'
newline|'\n'
name|'from'
name|'six'
op|'.'
name|'moves'
name|'import'
name|'urllib'
newline|'\n'
nl|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'exceptions'
name|'import'
name|'DiskFileNotExist'
op|','
name|'DiskFileError'
op|','
name|'DiskFileDeleted'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
name|'import'
name|'utils'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'storage_policy'
name|'import'
name|'POLICIES'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'common'
op|'.'
name|'utils'
name|'import'
name|'Timestamp'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
name|'import'
name|'ssync_sender'
op|','
name|'server'
newline|'\n'
name|'from'
name|'swift'
op|'.'
name|'obj'
op|'.'
name|'reconstructor'
name|'import'
name|'RebuildingECDiskFileStream'
newline|'\n'
nl|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
name|'import'
name|'patch_policies'
newline|'\n'
name|'from'
name|'test'
op|'.'
name|'unit'
op|'.'
name|'obj'
op|'.'
name|'common'
name|'import'
name|'BaseTest'
op|','
name|'FakeReplicator'
newline|'\n'
nl|'\n'
nl|'\n'
DECL|class|TestBaseSsync
name|'class'
name|'TestBaseSsync'
op|'('
name|'BaseTest'
op|')'
op|':'
newline|'\n'
indent|'    '
string|'"""\n    Provides a framework to test end to end interactions between sender and\n    receiver. The basis for each test is actual diskfile state on either side.\n    The connection between sender and receiver is wrapped to capture ssync\n    traffic for subsequent verification of the protocol. Assertions are made\n    about the final state of the sender and receiver diskfiles.\n    """'
newline|'\n'
DECL|member|setUp
name|'def'
name|'setUp'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'super'
op|'('
name|'TestBaseSsync'
op|','
name|'self'
op|')'
op|'.'
name|'setUp'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'device'
op|'='
string|"'dev'"
newline|'\n'
name|'self'
op|'.'
name|'partition'
op|'='
string|"'9'"
newline|'\n'
comment|'# sender side setup'
nl|'\n'
name|'self'
op|'.'
name|'tx_testdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'tmpdir'
op|','
string|"'tmp_test_ssync_sender'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'mkdirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'tx_testdir'
op|','
name|'self'
op|'.'
name|'device'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'daemon'
op|'='
name|'FakeReplicator'
op|'('
name|'self'
op|'.'
name|'tx_testdir'
op|')'
newline|'\n'
nl|'\n'
comment|'# rx side setup'
nl|'\n'
name|'self'
op|'.'
name|'rx_testdir'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'tmpdir'
op|','
string|"'tmp_test_ssync_receiver'"
op|')'
newline|'\n'
name|'utils'
op|'.'
name|'mkdirs'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'join'
op|'('
name|'self'
op|'.'
name|'rx_testdir'
op|','
name|'self'
op|'.'
name|'device'
op|')'
op|')'
newline|'\n'
name|'conf'
op|'='
op|'{'
nl|'\n'
string|"'devices'"
op|':'
name|'self'
op|'.'
name|'rx_testdir'
op|','
nl|'\n'
string|"'mount_check'"
op|':'
string|"'false'"
op|','
nl|'\n'
string|"'replication_one_per_device'"
op|':'
string|"'false'"
op|','
nl|'\n'
string|"'log_requests'"
op|':'
string|"'false'"
op|'}'
newline|'\n'
name|'self'
op|'.'
name|'rx_controller'
op|'='
name|'server'
op|'.'
name|'ObjectController'
op|'('
name|'conf'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'ts_iter'
op|'='
op|'('
name|'Timestamp'
op|'('
name|'t'
op|')'
nl|'\n'
name|'for'
name|'t'
name|'in'
name|'itertools'
op|'.'
name|'count'
op|'('
name|'int'
op|'('
name|'time'
op|'.'
name|'time'
op|'('
op|')'
op|')'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rx_ip'
op|'='
string|"'127.0.0.1'"
newline|'\n'
name|'sock'
op|'='
name|'eventlet'
op|'.'
name|'listen'
op|'('
op|'('
name|'self'
op|'.'
name|'rx_ip'
op|','
number|'0'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rx_server'
op|'='
name|'eventlet'
op|'.'
name|'spawn'
op|'('
nl|'\n'
name|'eventlet'
op|'.'
name|'wsgi'
op|'.'
name|'server'
op|','
name|'sock'
op|','
name|'self'
op|'.'
name|'rx_controller'
op|','
name|'utils'
op|'.'
name|'NullLogger'
op|'('
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'rx_port'
op|'='
name|'sock'
op|'.'
name|'getsockname'
op|'('
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'rx_node'
op|'='
op|'{'
string|"'replication_ip'"
op|':'
name|'self'
op|'.'
name|'rx_ip'
op|','
nl|'\n'
string|"'replication_port'"
op|':'
name|'self'
op|'.'
name|'rx_port'
op|','
nl|'\n'
string|"'device'"
op|':'
name|'self'
op|'.'
name|'device'
op|'}'
newline|'\n'
nl|'\n'
DECL|member|tearDown
dedent|''
name|'def'
name|'tearDown'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'self'
op|'.'
name|'rx_server'
op|'.'
name|'kill'
op|'('
op|')'
newline|'\n'
name|'super'
op|'('
name|'TestBaseSsync'
op|','
name|'self'
op|')'
op|'.'
name|'tearDown'
op|'('
op|')'
newline|'\n'
nl|'\n'
DECL|member|make_connect_wrapper
dedent|''
name|'def'
name|'make_connect_wrapper'
op|'('
name|'self'
op|','
name|'sender'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Make a wrapper function for the ssync_sender.Sender.connect() method\n        that will in turn wrap the HTTConnection.send() and the\n        Sender.readline() so that ssync protocol messages can be captured.\n        """'
newline|'\n'
name|'orig_connect'
op|'='
name|'sender'
op|'.'
name|'connect'
newline|'\n'
name|'trace'
op|'='
name|'dict'
op|'('
name|'messages'
op|'='
op|'['
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|add_trace
name|'def'
name|'add_trace'
op|'('
name|'type'
op|','
name|'msg'
op|')'
op|':'
newline|'\n'
comment|'# record a protocol event for later analysis'
nl|'\n'
indent|'            '
name|'if'
name|'msg'
op|'.'
name|'strip'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'trace'
op|'['
string|"'messages'"
op|']'
op|'.'
name|'append'
op|'('
op|'('
name|'type'
op|','
name|'msg'
op|'.'
name|'strip'
op|'('
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|function|make_send_wrapper
dedent|''
dedent|''
name|'def'
name|'make_send_wrapper'
op|'('
name|'send'
op|')'
op|':'
newline|'\n'
DECL|function|wrapped_send
indent|'            '
name|'def'
name|'wrapped_send'
op|'('
name|'msg'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'_msg'
op|'='
name|'msg'
op|'.'
name|'split'
op|'('
string|"'\\r\\n'"
op|','
number|'1'
op|')'
op|'['
number|'1'
op|']'
newline|'\n'
name|'_msg'
op|'='
name|'_msg'
op|'.'
name|'rsplit'
op|'('
string|"'\\r\\n'"
op|','
number|'1'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'add_trace'
op|'('
string|"'tx'"
op|','
name|'_msg'
op|')'
newline|'\n'
name|'send'
op|'('
name|'msg'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'wrapped_send'
newline|'\n'
nl|'\n'
DECL|function|make_readline_wrapper
dedent|''
name|'def'
name|'make_readline_wrapper'
op|'('
name|'readline'
op|')'
op|':'
newline|'\n'
DECL|function|wrapped_readline
indent|'            '
name|'def'
name|'wrapped_readline'
op|'('
op|')'
op|':'
newline|'\n'
indent|'                '
name|'data'
op|'='
name|'readline'
op|'('
op|')'
newline|'\n'
name|'add_trace'
op|'('
string|"'rx'"
op|','
name|'data'
op|')'
newline|'\n'
name|'bytes_read'
op|'='
name|'trace'
op|'.'
name|'setdefault'
op|'('
string|"'readline_bytes'"
op|','
number|'0'
op|')'
newline|'\n'
name|'trace'
op|'['
string|"'readline_bytes'"
op|']'
op|'='
name|'bytes_read'
op|'+'
name|'len'
op|'('
name|'data'
op|')'
newline|'\n'
name|'return'
name|'data'
newline|'\n'
dedent|''
name|'return'
name|'wrapped_readline'
newline|'\n'
nl|'\n'
DECL|function|wrapped_connect
dedent|''
name|'def'
name|'wrapped_connect'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'orig_connect'
op|'('
op|')'
newline|'\n'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'send'
op|'='
name|'make_send_wrapper'
op|'('
nl|'\n'
name|'sender'
op|'.'
name|'connection'
op|'.'
name|'send'
op|')'
newline|'\n'
name|'sender'
op|'.'
name|'readline'
op|'='
name|'make_readline_wrapper'
op|'('
name|'sender'
op|'.'
name|'readline'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'wrapped_connect'
op|','
name|'trace'
newline|'\n'
nl|'\n'
DECL|member|_create_ondisk_files
dedent|''
name|'def'
name|'_create_ondisk_files'
op|'('
name|'self'
op|','
name|'df_mgr'
op|','
name|'obj_name'
op|','
name|'policy'
op|','
name|'timestamp'
op|','
nl|'\n'
name|'frag_indexes'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'frag_indexes'
op|'='
op|'['
name|'None'
op|']'
name|'if'
name|'frag_indexes'
name|'is'
name|'None'
name|'else'
name|'frag_indexes'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'Content-Type'"
op|':'
string|"'plain/text'"
op|'}'
newline|'\n'
name|'diskfiles'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'frag_index'
name|'in'
name|'frag_indexes'
op|':'
newline|'\n'
indent|'            '
name|'object_data'
op|'='
string|"'/a/c/%s___%s'"
op|'%'
op|'('
name|'obj_name'
op|','
name|'frag_index'
op|')'
newline|'\n'
name|'if'
name|'frag_index'
name|'is'
name|'not'
name|'None'
op|':'
newline|'\n'
indent|'                '
name|'metadata'
op|'['
string|"'X-Object-Sysmeta-Ec-Frag-Index'"
op|']'
op|'='
name|'str'
op|'('
name|'frag_index'
op|')'
newline|'\n'
dedent|''
name|'df'
op|'='
name|'self'
op|'.'
name|'_make_open_diskfile'
op|'('
nl|'\n'
name|'device'
op|'='
name|'self'
op|'.'
name|'device'
op|','
name|'partition'
op|'='
name|'self'
op|'.'
name|'partition'
op|','
name|'account'
op|'='
string|"'a'"
op|','
nl|'\n'
name|'container'
op|'='
string|"'c'"
op|','
name|'obj'
op|'='
name|'obj_name'
op|','
name|'body'
op|'='
name|'object_data'
op|','
nl|'\n'
name|'extra_metadata'
op|'='
name|'metadata'
op|','
name|'timestamp'
op|'='
name|'timestamp'
op|','
name|'policy'
op|'='
name|'policy'
op|','
nl|'\n'
name|'frag_index'
op|'='
name|'frag_index'
op|','
name|'df_mgr'
op|'='
name|'df_mgr'
op|')'
newline|'\n'
comment|'# sanity checks'
nl|'\n'
name|'listing'
op|'='
name|'os'
op|'.'
name|'listdir'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'listing'
op|')'
newline|'\n'
name|'for'
name|'filename'
name|'in'
name|'listing'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'filename'
op|'.'
name|'startswith'
op|'('
name|'timestamp'
op|'.'
name|'internal'
op|')'
op|')'
newline|'\n'
dedent|''
name|'diskfiles'
op|'.'
name|'append'
op|'('
name|'df'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'diskfiles'
newline|'\n'
nl|'\n'
DECL|member|_open_tx_diskfile
dedent|''
name|'def'
name|'_open_tx_diskfile'
op|'('
name|'self'
op|','
name|'obj_name'
op|','
name|'policy'
op|','
name|'frag_index'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'df_mgr'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
name|'df'
op|'='
name|'df_mgr'
op|'.'
name|'get_diskfile'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'device'
op|','
name|'self'
op|'.'
name|'partition'
op|','
name|'account'
op|'='
string|"'a'"
op|','
name|'container'
op|'='
string|"'c'"
op|','
nl|'\n'
name|'obj'
op|'='
name|'obj_name'
op|','
name|'policy'
op|'='
name|'policy'
op|','
name|'frag_index'
op|'='
name|'frag_index'
op|')'
newline|'\n'
name|'df'
op|'.'
name|'open'
op|'('
op|')'
newline|'\n'
name|'return'
name|'df'
newline|'\n'
nl|'\n'
DECL|member|_open_rx_diskfile
dedent|''
name|'def'
name|'_open_rx_diskfile'
op|'('
name|'self'
op|','
name|'obj_name'
op|','
name|'policy'
op|','
name|'frag_index'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'df'
op|'='
name|'self'
op|'.'
name|'rx_controller'
op|'.'
name|'get_diskfile'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'device'
op|','
name|'self'
op|'.'
name|'partition'
op|','
string|"'a'"
op|','
string|"'c'"
op|','
name|'obj_name'
op|','
name|'policy'
op|'='
name|'policy'
op|','
nl|'\n'
name|'frag_index'
op|'='
name|'frag_index'
op|')'
newline|'\n'
name|'df'
op|'.'
name|'open'
op|'('
op|')'
newline|'\n'
name|'return'
name|'df'
newline|'\n'
nl|'\n'
DECL|member|_verify_diskfile_sync
dedent|''
name|'def'
name|'_verify_diskfile_sync'
op|'('
name|'self'
op|','
name|'tx_df'
op|','
name|'rx_df'
op|','
name|'frag_index'
op|','
name|'same_etag'
op|'='
name|'False'
op|')'
op|':'
newline|'\n'
comment|"# verify that diskfiles' metadata match"
nl|'\n'
comment|'# sanity check, they are not the same ondisk files!'
nl|'\n'
indent|'        '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'tx_df'
op|'.'
name|'_datadir'
op|','
name|'rx_df'
op|'.'
name|'_datadir'
op|')'
newline|'\n'
name|'rx_metadata'
op|'='
name|'dict'
op|'('
name|'rx_df'
op|'.'
name|'get_metadata'
op|'('
op|')'
op|')'
newline|'\n'
name|'for'
name|'k'
op|','
name|'v'
name|'in'
name|'tx_df'
op|'.'
name|'get_metadata'
op|'('
op|')'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'k'
op|'=='
string|"'X-Object-Sysmeta-Ec-Frag-Index'"
op|':'
newline|'\n'
comment|'# if tx_df had a frag_index then rx_df should also have one'
nl|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'k'
name|'in'
name|'rx_metadata'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'frag_index'
op|','
name|'int'
op|'('
name|'rx_metadata'
op|'.'
name|'pop'
op|'('
name|'k'
op|')'
op|')'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'k'
op|'=='
string|"'ETag'"
name|'and'
name|'not'
name|'same_etag'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertNotEqual'
op|'('
name|'v'
op|','
name|'rx_metadata'
op|'.'
name|'pop'
op|'('
name|'k'
op|','
name|'None'
op|')'
op|')'
newline|'\n'
name|'continue'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'v'
op|','
name|'rx_metadata'
op|'.'
name|'pop'
op|'('
name|'k'
op|')'
op|','
name|'k'
op|')'
newline|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'rx_metadata'
op|')'
newline|'\n'
name|'expected_body'
op|'='
string|"'%s___%s'"
op|'%'
op|'('
name|'tx_df'
op|'.'
name|'_name'
op|','
name|'frag_index'
op|')'
newline|'\n'
name|'actual_body'
op|'='
string|"''"
op|'.'
name|'join'
op|'('
op|'['
name|'chunk'
name|'for'
name|'chunk'
name|'in'
name|'rx_df'
op|'.'
name|'reader'
op|'('
op|')'
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_body'
op|','
name|'actual_body'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_analyze_trace
dedent|''
name|'def'
name|'_analyze_trace'
op|'('
name|'self'
op|','
name|'trace'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Parse protocol trace captured by fake connection, making some\n        assertions along the way, and return results  as a dict of form:\n        results = {\'tx_missing\': <list of messages>,\n                   \'rx_missing\': <list of messages>,\n                   \'tx_updates\': <list of subreqs>,\n                   \'rx_updates\': <list of messages>}\n\n        Each subreq is a dict with keys: \'method\', \'path\', \'headers\', \'body\'\n        """'
newline|'\n'
DECL|function|tx_missing
name|'def'
name|'tx_missing'
op|'('
name|'results'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'tx'"
op|','
name|'line'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'results'
op|'['
string|"'tx_missing'"
op|']'
op|'.'
name|'append'
op|'('
name|'line'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|rx_missing
dedent|''
name|'def'
name|'rx_missing'
op|'('
name|'results'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'rx'"
op|','
name|'line'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'parts'
op|'='
name|'line'
op|'['
number|'1'
op|']'
op|'.'
name|'split'
op|'('
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'for'
name|'part'
name|'in'
name|'parts'
op|':'
newline|'\n'
indent|'                '
name|'results'
op|'['
string|"'rx_missing'"
op|']'
op|'.'
name|'append'
op|'('
name|'part'
op|')'
newline|'\n'
nl|'\n'
DECL|function|tx_updates
dedent|''
dedent|''
name|'def'
name|'tx_updates'
op|'('
name|'results'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'tx'"
op|','
name|'line'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'subrequests'
op|'='
name|'results'
op|'['
string|"'tx_updates'"
op|']'
newline|'\n'
name|'if'
name|'line'
op|'['
number|'1'
op|']'
op|'.'
name|'startswith'
op|'('
op|'('
string|"'PUT'"
op|','
string|"'DELETE'"
op|','
string|"'POST'"
op|')'
op|')'
op|':'
newline|'\n'
indent|'                '
name|'parts'
op|'='
name|'line'
op|'['
number|'1'
op|']'
op|'.'
name|'split'
op|'('
string|"'\\r\\n'"
op|')'
newline|'\n'
name|'method'
op|','
name|'path'
op|'='
name|'parts'
op|'['
number|'0'
op|']'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'subreq'
op|'='
op|'{'
string|"'method'"
op|':'
name|'method'
op|','
string|"'path'"
op|':'
name|'path'
op|','
string|"'req'"
op|':'
name|'line'
op|'['
number|'1'
op|']'
op|','
nl|'\n'
string|"'headers'"
op|':'
name|'parts'
op|'['
number|'1'
op|':'
op|']'
op|'}'
newline|'\n'
name|'subrequests'
op|'.'
name|'append'
op|'('
name|'subreq'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'subrequests'
op|')'
newline|'\n'
name|'body'
op|'='
op|'('
name|'subrequests'
op|'['
op|'-'
number|'1'
op|']'
op|')'
op|'.'
name|'setdefault'
op|'('
string|"'body'"
op|','
string|"''"
op|')'
newline|'\n'
name|'body'
op|'+='
name|'line'
op|'['
number|'1'
op|']'
newline|'\n'
name|'subrequests'
op|'['
op|'-'
number|'1'
op|']'
op|'['
string|"'body'"
op|']'
op|'='
name|'body'
newline|'\n'
nl|'\n'
DECL|function|rx_updates
dedent|''
dedent|''
name|'def'
name|'rx_updates'
op|'('
name|'results'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'rx'"
op|','
name|'line'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'results'
op|'.'
name|'setdefault'
op|'['
string|"'rx_updates'"
op|']'
op|'.'
name|'append'
op|'('
name|'line'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
nl|'\n'
DECL|function|unexpected
dedent|''
name|'def'
name|'unexpected'
op|'('
name|'results'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'results'
op|'.'
name|'setdefault'
op|'('
string|"'unexpected'"
op|','
op|'['
op|']'
op|')'
op|'.'
name|'append'
op|'('
name|'line'
op|')'
newline|'\n'
nl|'\n'
comment|'# each trace line is a tuple of ([tx|rx], msg)'
nl|'\n'
dedent|''
name|'handshakes'
op|'='
name|'iter'
op|'('
op|'['
op|'('
op|'('
string|"'tx'"
op|','
string|"':MISSING_CHECK: START'"
op|')'
op|','
name|'tx_missing'
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'tx'"
op|','
string|"':MISSING_CHECK: END'"
op|')'
op|','
name|'unexpected'
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'rx'"
op|','
string|"':MISSING_CHECK: START'"
op|')'
op|','
name|'rx_missing'
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'rx'"
op|','
string|"':MISSING_CHECK: END'"
op|')'
op|','
name|'unexpected'
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'tx'"
op|','
string|"':UPDATES: START'"
op|')'
op|','
name|'tx_updates'
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'tx'"
op|','
string|"':UPDATES: END'"
op|')'
op|','
name|'unexpected'
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'rx'"
op|','
string|"':UPDATES: START'"
op|')'
op|','
name|'rx_updates'
op|')'
op|','
nl|'\n'
op|'('
op|'('
string|"'rx'"
op|','
string|"':UPDATES: END'"
op|')'
op|','
name|'unexpected'
op|')'
op|']'
op|')'
newline|'\n'
name|'expect_handshake'
op|'='
name|'next'
op|'('
name|'handshakes'
op|')'
newline|'\n'
name|'phases'
op|'='
op|'('
string|"'tx_missing'"
op|','
string|"'rx_missing'"
op|','
string|"'tx_updates'"
op|','
string|"'rx_updates'"
op|')'
newline|'\n'
name|'results'
op|'='
name|'dict'
op|'('
op|'('
name|'k'
op|','
op|'['
op|']'
op|')'
name|'for'
name|'k'
name|'in'
name|'phases'
op|')'
newline|'\n'
name|'handler'
op|'='
name|'unexpected'
newline|'\n'
name|'lines'
op|'='
name|'list'
op|'('
name|'trace'
op|'.'
name|'get'
op|'('
string|"'messages'"
op|','
op|'['
op|']'
op|')'
op|')'
newline|'\n'
name|'lines'
op|'.'
name|'reverse'
op|'('
op|')'
newline|'\n'
name|'while'
name|'lines'
op|':'
newline|'\n'
indent|'            '
name|'line'
op|'='
name|'lines'
op|'.'
name|'pop'
op|'('
op|')'
newline|'\n'
name|'if'
name|'line'
op|'=='
name|'expect_handshake'
op|'['
number|'0'
op|']'
op|':'
newline|'\n'
indent|'                '
name|'handler'
op|'='
name|'expect_handshake'
op|'['
number|'1'
op|']'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'expect_handshake'
op|'='
name|'next'
op|'('
name|'handshakes'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
comment|'# should be the last line'
nl|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertFalse'
op|'('
nl|'\n'
name|'lines'
op|','
string|"'Unexpected trailing lines %s'"
op|'%'
name|'lines'
op|')'
newline|'\n'
dedent|''
name|'continue'
newline|'\n'
dedent|''
name|'handler'
op|'('
name|'results'
op|','
name|'line'
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
comment|'# check all handshakes occurred'
nl|'\n'
indent|'            '
name|'missed'
op|'='
name|'next'
op|'('
name|'handshakes'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Handshake %s not found'"
op|'%'
name|'str'
op|'('
name|'missed'
op|'['
number|'0'
op|']'
op|')'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'StopIteration'
op|':'
newline|'\n'
indent|'            '
name|'pass'
newline|'\n'
comment|'# check no message outside of a phase'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'results'
op|'.'
name|'get'
op|'('
string|"'unexpected'"
op|')'
op|','
nl|'\n'
string|"'Message outside of a phase: %s'"
op|'%'
name|'results'
op|'.'
name|'get'
op|'('
name|'None'
op|')'
op|')'
newline|'\n'
name|'return'
name|'results'
newline|'\n'
nl|'\n'
DECL|member|_verify_ondisk_files
dedent|''
name|'def'
name|'_verify_ondisk_files'
op|'('
name|'self'
op|','
name|'tx_objs'
op|','
name|'policy'
op|','
name|'tx_frag_index'
op|'='
name|'None'
op|','
nl|'\n'
name|'rx_frag_index'
op|'='
name|'None'
op|')'
op|':'
newline|'\n'
indent|'        '
string|'"""\n        Verify tx and rx files that should be in sync.\n        :param tx_objs: sender diskfiles\n        :param policy: storage policy instance\n        :param tx_frag_index: the fragment index of tx diskfiles that should\n                              have been used as a source for sync\'ing\n        :param rx_frag_index: the fragment index of expected rx diskfiles\n        """'
newline|'\n'
name|'for'
name|'o_name'
op|','
name|'diskfiles'
name|'in'
name|'tx_objs'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'tx_df'
name|'in'
name|'diskfiles'
op|':'
newline|'\n'
comment|'# check tx file still intact - ssync does not do any cleanup!'
nl|'\n'
indent|'                '
name|'tx_df'
op|'.'
name|'open'
op|'('
op|')'
newline|'\n'
name|'if'
name|'tx_frag_index'
name|'is'
name|'None'
name|'or'
name|'tx_df'
op|'.'
name|'_frag_index'
op|'=='
name|'tx_frag_index'
op|':'
newline|'\n'
comment|"# this diskfile should have been sync'd,"
nl|'\n'
comment|'# check rx file is ok'
nl|'\n'
indent|'                    '
name|'rx_df'
op|'='
name|'self'
op|'.'
name|'_open_rx_diskfile'
op|'('
nl|'\n'
name|'o_name'
op|','
name|'policy'
op|','
name|'rx_frag_index'
op|')'
newline|'\n'
comment|'# for EC revert job or replication etags should match'
nl|'\n'
name|'match_etag'
op|'='
op|'('
name|'tx_frag_index'
op|'=='
name|'rx_frag_index'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_diskfile_sync'
op|'('
nl|'\n'
name|'tx_df'
op|','
name|'rx_df'
op|','
name|'rx_frag_index'
op|','
name|'match_etag'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
comment|"# this diskfile should not have been sync'd,"
nl|'\n'
comment|'# check no rx file,'
nl|'\n'
indent|'                    '
name|'self'
op|'.'
name|'assertRaises'
op|'('
name|'DiskFileNotExist'
op|','
name|'self'
op|'.'
name|'_open_rx_diskfile'
op|','
nl|'\n'
name|'o_name'
op|','
name|'policy'
op|','
nl|'\n'
name|'frag_index'
op|'='
name|'tx_df'
op|'.'
name|'_frag_index'
op|')'
newline|'\n'
nl|'\n'
DECL|member|_verify_tombstones
dedent|''
dedent|''
dedent|''
dedent|''
name|'def'
name|'_verify_tombstones'
op|'('
name|'self'
op|','
name|'tx_objs'
op|','
name|'policy'
op|')'
op|':'
newline|'\n'
comment|'# verify tx and rx tombstones that should be in sync'
nl|'\n'
indent|'        '
name|'for'
name|'o_name'
op|','
name|'diskfiles'
name|'in'
name|'tx_objs'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_open_tx_diskfile'
op|'('
name|'o_name'
op|','
name|'policy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|"'DiskFileDeleted expected'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileDeleted'
name|'as'
name|'exc'
op|':'
newline|'\n'
indent|'                '
name|'tx_delete_time'
op|'='
name|'exc'
op|'.'
name|'timestamp'
newline|'\n'
dedent|''
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'_open_rx_diskfile'
op|'('
name|'o_name'
op|','
name|'policy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'fail'
op|'('
string|"'DiskFileDeleted expected'"
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileDeleted'
name|'as'
name|'exc'
op|':'
newline|'\n'
indent|'                '
name|'rx_delete_time'
op|'='
name|'exc'
op|'.'
name|'timestamp'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tx_delete_time'
op|','
name|'rx_delete_time'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
dedent|''
op|'@'
name|'patch_policies'
op|'('
name|'with_ec_default'
op|'='
name|'True'
op|')'
newline|'\n'
DECL|class|TestSsyncEC
name|'class'
name|'TestSsyncEC'
op|'('
name|'TestBaseSsync'
op|')'
op|':'
newline|'\n'
DECL|member|test_handoff_fragment_revert
indent|'    '
name|'def'
name|'test_handoff_fragment_revert'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# test that a sync_revert type job does send the correct frag archives'
nl|'\n'
comment|'# to the receiver'
nl|'\n'
indent|'        '
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'default'
newline|'\n'
name|'rx_node_index'
op|'='
number|'0'
newline|'\n'
name|'tx_node_index'
op|'='
number|'1'
newline|'\n'
comment|'# for a revert job we iterate over frag index that belongs on'
nl|'\n'
comment|'# remote node'
nl|'\n'
name|'frag_index'
op|'='
name|'rx_node_index'
newline|'\n'
nl|'\n'
comment|'# create sender side diskfiles...'
nl|'\n'
name|'tx_objs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'rx_objs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'tx_tombstones'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'tx_df_mgr'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
name|'rx_df_mgr'
op|'='
name|'self'
op|'.'
name|'rx_controller'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
comment|'# o1 has primary and handoff fragment archives'
nl|'\n'
name|'t1'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o1'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o1'"
op|','
name|'policy'
op|','
name|'t1'
op|','
op|'('
name|'rx_node_index'
op|','
name|'tx_node_index'
op|')'
op|')'
newline|'\n'
comment|'# o2 only has primary'
nl|'\n'
name|'t2'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o2'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o2'"
op|','
name|'policy'
op|','
name|'t2'
op|','
op|'('
name|'tx_node_index'
op|','
op|')'
op|')'
newline|'\n'
comment|'# o3 only has handoff'
nl|'\n'
name|'t3'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o3'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o3'"
op|','
name|'policy'
op|','
name|'t3'
op|','
op|'('
name|'rx_node_index'
op|','
op|')'
op|')'
newline|'\n'
comment|'# o4 primary and handoff fragment archives on tx, handoff in sync on rx'
nl|'\n'
name|'t4'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o4'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o4'"
op|','
name|'policy'
op|','
name|'t4'
op|','
op|'('
name|'tx_node_index'
op|','
name|'rx_node_index'
op|','
op|')'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
string|"'o4'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'rx_df_mgr'
op|','
string|"'o4'"
op|','
name|'policy'
op|','
name|'t4'
op|','
op|'('
name|'rx_node_index'
op|','
op|')'
op|')'
newline|'\n'
comment|'# o5 is a tombstone, missing on receiver'
nl|'\n'
name|'t5'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_tombstones'
op|'['
string|"'o5'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o5'"
op|','
name|'policy'
op|','
name|'t5'
op|','
op|'('
name|'tx_node_index'
op|','
op|')'
op|')'
newline|'\n'
name|'tx_tombstones'
op|'['
string|"'o5'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'delete'
op|'('
name|'t5'
op|')'
newline|'\n'
nl|'\n'
name|'suffixes'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'diskfiles'
name|'in'
op|'('
name|'tx_objs'
op|'.'
name|'values'
op|'('
op|')'
op|'+'
name|'tx_tombstones'
op|'.'
name|'values'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'df'
name|'in'
name|'diskfiles'
op|':'
newline|'\n'
indent|'                '
name|'suffixes'
op|'.'
name|'add'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# create ssync sender instance...'
nl|'\n'
dedent|''
dedent|''
name|'job'
op|'='
op|'{'
string|"'device'"
op|':'
name|'self'
op|'.'
name|'device'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'self'
op|'.'
name|'partition'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'policy'
op|','
nl|'\n'
string|"'frag_index'"
op|':'
name|'frag_index'
op|'}'
newline|'\n'
name|'node'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'rx_node'
op|')'
newline|'\n'
name|'node'
op|'.'
name|'update'
op|'('
op|'{'
string|"'index'"
op|':'
name|'rx_node_index'
op|'}'
op|')'
newline|'\n'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|')'
newline|'\n'
comment|'# wrap connection from tx to rx to capture ssync messages...'
nl|'\n'
name|'sender'
op|'.'
name|'connect'
op|','
name|'trace'
op|'='
name|'self'
op|'.'
name|'make_connect_wrapper'
op|'('
name|'sender'
op|')'
newline|'\n'
nl|'\n'
comment|'# run the sync protocol...'
nl|'\n'
name|'sender'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# verify protocol'
nl|'\n'
name|'results'
op|'='
name|'self'
op|'.'
name|'_analyze_trace'
op|'('
name|'trace'
op|')'
newline|'\n'
comment|'# sender has handoff frags for o1, o3 and o4 and ts for o5'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'tx_missing'"
op|']'
op|')'
op|')'
newline|'\n'
comment|'# receiver is missing frags for o1, o3 and ts for o5'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'rx_missing'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'tx_updates'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'results'
op|'['
string|"'rx_updates'"
op|']'
op|')'
newline|'\n'
name|'sync_paths'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'subreq'
name|'in'
name|'results'
op|'.'
name|'get'
op|'('
string|"'tx_updates'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'subreq'
op|'.'
name|'get'
op|'('
string|"'method'"
op|')'
op|'=='
string|"'PUT'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
string|"'X-Object-Sysmeta-Ec-Frag-Index: %s'"
op|'%'
name|'rx_node_index'
nl|'\n'
name|'in'
name|'subreq'
op|'.'
name|'get'
op|'('
string|"'headers'"
op|')'
op|')'
newline|'\n'
name|'expected_body'
op|'='
string|"'%s___%s'"
op|'%'
op|'('
name|'subreq'
op|'['
string|"'path'"
op|']'
op|','
name|'rx_node_index'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_body'
op|','
name|'subreq'
op|'['
string|"'body'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'subreq'
op|'.'
name|'get'
op|'('
string|"'method'"
op|')'
op|'=='
string|"'DELETE'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/a/c/o5'"
op|','
name|'subreq'
op|'['
string|"'path'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'sync_paths'
op|'.'
name|'append'
op|'('
name|'subreq'
op|'.'
name|'get'
op|'('
string|"'path'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
op|'['
string|"'/a/c/o1'"
op|','
string|"'/a/c/o3'"
op|','
string|"'/a/c/o5'"
op|']'
op|','
name|'sorted'
op|'('
name|'sync_paths'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify on disk files...'
nl|'\n'
name|'self'
op|'.'
name|'_verify_ondisk_files'
op|'('
nl|'\n'
name|'tx_objs'
op|','
name|'policy'
op|','
name|'frag_index'
op|','
name|'rx_node_index'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_tombstones'
op|'('
name|'tx_tombstones'
op|','
name|'policy'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_fragment_sync
dedent|''
name|'def'
name|'test_fragment_sync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# check that a sync_only type job does call reconstructor to build a'
nl|'\n'
comment|'# diskfile to send, and continues making progress despite an error'
nl|'\n'
comment|'# when building one diskfile'
nl|'\n'
indent|'        '
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'default'
newline|'\n'
name|'rx_node_index'
op|'='
number|'0'
newline|'\n'
name|'tx_node_index'
op|'='
number|'1'
newline|'\n'
comment|'# for a sync job we iterate over frag index that belongs on local node'
nl|'\n'
name|'frag_index'
op|'='
name|'tx_node_index'
newline|'\n'
nl|'\n'
comment|'# create sender side diskfiles...'
nl|'\n'
name|'tx_objs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'tx_tombstones'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'rx_objs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'tx_df_mgr'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
name|'rx_df_mgr'
op|'='
name|'self'
op|'.'
name|'rx_controller'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
comment|'# o1 only has primary'
nl|'\n'
name|'t1'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o1'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o1'"
op|','
name|'policy'
op|','
name|'t1'
op|','
op|'('
name|'tx_node_index'
op|','
op|')'
op|')'
newline|'\n'
comment|'# o2 only has primary'
nl|'\n'
name|'t2'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o2'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o2'"
op|','
name|'policy'
op|','
name|'t2'
op|','
op|'('
name|'tx_node_index'
op|','
op|')'
op|')'
newline|'\n'
comment|'# o3 only has primary'
nl|'\n'
name|'t3'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o3'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o3'"
op|','
name|'policy'
op|','
name|'t3'
op|','
op|'('
name|'tx_node_index'
op|','
op|')'
op|')'
newline|'\n'
comment|'# o4 primary fragment archives on tx, handoff in sync on rx'
nl|'\n'
name|'t4'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o4'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o4'"
op|','
name|'policy'
op|','
name|'t4'
op|','
op|'('
name|'tx_node_index'
op|','
op|')'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
string|"'o4'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'rx_df_mgr'
op|','
string|"'o4'"
op|','
name|'policy'
op|','
name|'t4'
op|','
op|'('
name|'rx_node_index'
op|','
op|')'
op|')'
newline|'\n'
comment|'# o5 is a tombstone, missing on receiver'
nl|'\n'
name|'t5'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_tombstones'
op|'['
string|"'o5'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o5'"
op|','
name|'policy'
op|','
name|'t5'
op|','
op|'('
name|'tx_node_index'
op|','
op|')'
op|')'
newline|'\n'
name|'tx_tombstones'
op|'['
string|"'o5'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'delete'
op|'('
name|'t5'
op|')'
newline|'\n'
nl|'\n'
name|'suffixes'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'diskfiles'
name|'in'
op|'('
name|'tx_objs'
op|'.'
name|'values'
op|'('
op|')'
op|'+'
name|'tx_tombstones'
op|'.'
name|'values'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'df'
name|'in'
name|'diskfiles'
op|':'
newline|'\n'
indent|'                '
name|'suffixes'
op|'.'
name|'add'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'reconstruct_fa_calls'
op|'='
op|'['
op|']'
newline|'\n'
nl|'\n'
DECL|function|fake_reconstruct_fa
name|'def'
name|'fake_reconstruct_fa'
op|'('
name|'job'
op|','
name|'node'
op|','
name|'metadata'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'reconstruct_fa_calls'
op|'.'
name|'append'
op|'('
op|'('
name|'job'
op|','
name|'node'
op|','
name|'policy'
op|','
name|'metadata'
op|')'
op|')'
newline|'\n'
name|'if'
name|'len'
op|'('
name|'reconstruct_fa_calls'
op|')'
op|'=='
number|'2'
op|':'
newline|'\n'
comment|'# simulate second reconstruct failing'
nl|'\n'
indent|'                '
name|'raise'
name|'DiskFileError'
newline|'\n'
dedent|''
name|'content'
op|'='
string|"'%s___%s'"
op|'%'
op|'('
name|'metadata'
op|'['
string|"'name'"
op|']'
op|','
name|'rx_node_index'
op|')'
newline|'\n'
name|'return'
name|'RebuildingECDiskFileStream'
op|'('
nl|'\n'
name|'metadata'
op|','
name|'rx_node_index'
op|','
name|'iter'
op|'('
op|'['
name|'content'
op|']'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# create ssync sender instance...'
nl|'\n'
dedent|''
name|'job'
op|'='
op|'{'
string|"'device'"
op|':'
name|'self'
op|'.'
name|'device'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'self'
op|'.'
name|'partition'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'policy'
op|','
nl|'\n'
string|"'frag_index'"
op|':'
name|'frag_index'
op|','
nl|'\n'
string|"'sync_diskfile_builder'"
op|':'
name|'fake_reconstruct_fa'
op|'}'
newline|'\n'
name|'node'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'rx_node'
op|')'
newline|'\n'
name|'node'
op|'.'
name|'update'
op|'('
op|'{'
string|"'index'"
op|':'
name|'rx_node_index'
op|'}'
op|')'
newline|'\n'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|')'
newline|'\n'
comment|'# wrap connection from tx to rx to capture ssync messages...'
nl|'\n'
name|'sender'
op|'.'
name|'connect'
op|','
name|'trace'
op|'='
name|'self'
op|'.'
name|'make_connect_wrapper'
op|'('
name|'sender'
op|')'
newline|'\n'
nl|'\n'
comment|'# run the sync protocol...'
nl|'\n'
name|'sender'
op|'('
op|')'
newline|'\n'
nl|'\n'
comment|'# verify protocol'
nl|'\n'
name|'results'
op|'='
name|'self'
op|'.'
name|'_analyze_trace'
op|'('
name|'trace'
op|')'
newline|'\n'
comment|'# sender has primary for o1, o2 and o3, o4 and ts for o5'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'tx_missing'"
op|']'
op|')'
op|')'
newline|'\n'
comment|'# receiver is missing o1, o2 and o3 and ts for o5'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'4'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'rx_missing'"
op|']'
op|')'
op|')'
newline|'\n'
comment|'# sender can only construct 2 out of 3 missing frags'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'tx_updates'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'reconstruct_fa_calls'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'results'
op|'['
string|"'rx_updates'"
op|']'
op|')'
newline|'\n'
name|'actual_sync_paths'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'subreq'
name|'in'
name|'results'
op|'.'
name|'get'
op|'('
string|"'tx_updates'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'subreq'
op|'.'
name|'get'
op|'('
string|"'method'"
op|')'
op|'=='
string|"'PUT'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
string|"'X-Object-Sysmeta-Ec-Frag-Index: %s'"
op|'%'
name|'rx_node_index'
nl|'\n'
name|'in'
name|'subreq'
op|'.'
name|'get'
op|'('
string|"'headers'"
op|')'
op|')'
newline|'\n'
name|'expected_body'
op|'='
string|"'%s___%s'"
op|'%'
op|'('
name|'subreq'
op|'['
string|"'path'"
op|']'
op|','
name|'rx_node_index'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_body'
op|','
name|'subreq'
op|'['
string|"'body'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'subreq'
op|'.'
name|'get'
op|'('
string|"'method'"
op|')'
op|'=='
string|"'DELETE'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'/a/c/o5'"
op|','
name|'subreq'
op|'['
string|"'path'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'actual_sync_paths'
op|'.'
name|'append'
op|'('
name|'subreq'
op|'.'
name|'get'
op|'('
string|"'path'"
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|"# remove the failed df from expected synced df's"
nl|'\n'
dedent|''
name|'expect_sync_paths'
op|'='
op|'['
string|"'/a/c/o1'"
op|','
string|"'/a/c/o2'"
op|','
string|"'/a/c/o3'"
op|','
string|"'/a/c/o5'"
op|']'
newline|'\n'
name|'failed_path'
op|'='
name|'reconstruct_fa_calls'
op|'['
number|'1'
op|']'
op|'['
number|'3'
op|']'
op|'['
string|"'name'"
op|']'
newline|'\n'
name|'expect_sync_paths'
op|'.'
name|'remove'
op|'('
name|'failed_path'
op|')'
newline|'\n'
name|'failed_obj'
op|'='
name|'None'
newline|'\n'
name|'for'
name|'obj'
op|','
name|'diskfiles'
name|'in'
name|'tx_objs'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'diskfiles'
op|'['
number|'0'
op|']'
op|'.'
name|'_name'
op|'=='
name|'failed_path'
op|':'
newline|'\n'
indent|'                '
name|'failed_obj'
op|'='
name|'obj'
newline|'\n'
comment|'# sanity check'
nl|'\n'
dedent|''
dedent|''
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'tx_objs'
op|'.'
name|'pop'
op|'('
name|'failed_obj'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify on disk files...'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'sorted'
op|'('
name|'expect_sync_paths'
op|')'
op|','
name|'sorted'
op|'('
name|'actual_sync_paths'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_ondisk_files'
op|'('
nl|'\n'
name|'tx_objs'
op|','
name|'policy'
op|','
name|'frag_index'
op|','
name|'rx_node_index'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_tombstones'
op|'('
name|'tx_tombstones'
op|','
name|'policy'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_send_with_frag_index_none
dedent|''
name|'def'
name|'test_send_with_frag_index_none'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'default'
newline|'\n'
name|'tx_df_mgr'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
name|'rx_df_mgr'
op|'='
name|'self'
op|'.'
name|'rx_controller'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
comment|'# create an ec fragment on the remote node'
nl|'\n'
name|'ts1'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'remote_df'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'rx_df_mgr'
op|','
string|"'o'"
op|','
name|'policy'
op|','
name|'ts1'
op|','
op|'('
number|'3'
op|','
op|')'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
nl|'\n'
comment|'# create a tombstone on the local node'
nl|'\n'
name|'df'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o'"
op|','
name|'policy'
op|','
name|'ts1'
op|','
op|'('
number|'3'
op|','
op|')'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'suffix'
op|'='
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
op|')'
newline|'\n'
name|'ts2'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'df'
op|'.'
name|'delete'
op|'('
name|'ts2'
op|')'
newline|'\n'
comment|'# a reconstructor revert job with only tombstones will have frag_index'
nl|'\n'
comment|'# explicitly set to None'
nl|'\n'
name|'job'
op|'='
op|'{'
nl|'\n'
string|"'frag_index'"
op|':'
name|'None'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'self'
op|'.'
name|'partition'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'policy'
op|','
nl|'\n'
string|"'device'"
op|':'
name|'self'
op|'.'
name|'device'
op|','
nl|'\n'
op|'}'
newline|'\n'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'daemon'
op|','
name|'self'
op|'.'
name|'rx_node'
op|','
name|'job'
op|','
op|'['
name|'suffix'
op|']'
op|')'
newline|'\n'
name|'success'
op|','
name|'_'
op|'='
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'success'
op|')'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'            '
name|'remote_df'
op|'.'
name|'read_metadata'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileDeleted'
name|'as'
name|'e'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'e'
op|'.'
name|'timestamp'
op|','
name|'ts2'
op|')'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'fail'
op|'('
string|"'Successfully opened remote DiskFile'"
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_send_invalid_frag_index
dedent|''
dedent|''
name|'def'
name|'test_send_invalid_frag_index'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'default'
newline|'\n'
name|'job'
op|'='
op|'{'
string|"'frag_index'"
op|':'
string|"'Not a number'"
op|','
nl|'\n'
string|"'device'"
op|':'
name|'self'
op|'.'
name|'device'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'self'
op|'.'
name|'partition'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'policy'
op|'}'
newline|'\n'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'daemon'
op|','
name|'self'
op|'.'
name|'rx_node'
op|','
name|'job'
op|','
op|'['
string|"'abc'"
op|']'
op|')'
newline|'\n'
name|'success'
op|','
name|'_'
op|'='
name|'sender'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'success'
op|')'
newline|'\n'
name|'error_log_lines'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'logger'
op|'.'
name|'get_lines_for_level'
op|'('
string|"'error'"
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'error_log_lines'
op|')'
op|')'
newline|'\n'
name|'error_msg'
op|'='
name|'error_log_lines'
op|'['
number|'0'
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"Expected status 200; got 400"'
op|','
name|'error_msg'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertIn'
op|'('
string|'"Invalid X-Backend-Ssync-Frag-Index \'Not a number\'"'
op|','
nl|'\n'
name|'error_msg'
op|')'
newline|'\n'
nl|'\n'
nl|'\n'
dedent|''
dedent|''
op|'@'
name|'patch_policies'
newline|'\n'
DECL|class|TestSsyncReplication
name|'class'
name|'TestSsyncReplication'
op|'('
name|'TestBaseSsync'
op|')'
op|':'
newline|'\n'
DECL|member|test_sync
indent|'    '
name|'def'
name|'test_sync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'default'
newline|'\n'
name|'rx_node_index'
op|'='
number|'0'
newline|'\n'
nl|'\n'
comment|'# create sender side diskfiles...'
nl|'\n'
name|'tx_objs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'rx_objs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'tx_tombstones'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'rx_tombstones'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'tx_df_mgr'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
name|'rx_df_mgr'
op|'='
name|'self'
op|'.'
name|'rx_controller'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
comment|'# o1 and o2 are on tx only'
nl|'\n'
name|'t1'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o1'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
string|"'o1'"
op|','
name|'policy'
op|','
name|'t1'
op|')'
newline|'\n'
name|'t2'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o2'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
string|"'o2'"
op|','
name|'policy'
op|','
name|'t2'
op|')'
newline|'\n'
comment|'# o3 is on tx and older copy on rx'
nl|'\n'
name|'t3a'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
string|"'o3'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'rx_df_mgr'
op|','
string|"'o3'"
op|','
name|'policy'
op|','
name|'t3a'
op|')'
newline|'\n'
name|'t3b'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o3'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
string|"'o3'"
op|','
name|'policy'
op|','
name|'t3b'
op|')'
newline|'\n'
comment|'# o4 in sync on rx and tx'
nl|'\n'
name|'t4'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o4'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
string|"'o4'"
op|','
name|'policy'
op|','
name|'t4'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
string|"'o4'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'rx_df_mgr'
op|','
string|"'o4'"
op|','
name|'policy'
op|','
name|'t4'
op|')'
newline|'\n'
comment|'# o5 is a tombstone, missing on receiver'
nl|'\n'
name|'t5'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_tombstones'
op|'['
string|"'o5'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o5'"
op|','
name|'policy'
op|','
name|'t5'
op|')'
newline|'\n'
name|'tx_tombstones'
op|'['
string|"'o5'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'delete'
op|'('
name|'t5'
op|')'
newline|'\n'
comment|'# o6 is a tombstone, in sync on tx and rx'
nl|'\n'
name|'t6'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_tombstones'
op|'['
string|"'o6'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o6'"
op|','
name|'policy'
op|','
name|'t6'
op|')'
newline|'\n'
name|'tx_tombstones'
op|'['
string|"'o6'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'delete'
op|'('
name|'t6'
op|')'
newline|'\n'
name|'rx_tombstones'
op|'['
string|"'o6'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'rx_df_mgr'
op|','
string|"'o6'"
op|','
name|'policy'
op|','
name|'t6'
op|')'
newline|'\n'
name|'rx_tombstones'
op|'['
string|"'o6'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'delete'
op|'('
name|'t6'
op|')'
newline|'\n'
comment|'# o7 is a tombstone on tx, older data on rx'
nl|'\n'
name|'t7a'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
string|"'o7'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'rx_df_mgr'
op|','
string|"'o7'"
op|','
name|'policy'
op|','
name|'t7a'
op|')'
newline|'\n'
name|'t7b'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_tombstones'
op|'['
string|"'o7'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o7'"
op|','
name|'policy'
op|','
name|'t7b'
op|')'
newline|'\n'
name|'tx_tombstones'
op|'['
string|"'o7'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'delete'
op|'('
name|'t7b'
op|')'
newline|'\n'
nl|'\n'
name|'suffixes'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'diskfiles'
name|'in'
op|'('
name|'tx_objs'
op|'.'
name|'values'
op|'('
op|')'
op|'+'
name|'tx_tombstones'
op|'.'
name|'values'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'df'
name|'in'
name|'diskfiles'
op|':'
newline|'\n'
indent|'                '
name|'suffixes'
op|'.'
name|'add'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# create ssync sender instance...'
nl|'\n'
dedent|''
dedent|''
name|'job'
op|'='
op|'{'
string|"'device'"
op|':'
name|'self'
op|'.'
name|'device'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'self'
op|'.'
name|'partition'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'policy'
op|'}'
newline|'\n'
name|'node'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'rx_node'
op|')'
newline|'\n'
name|'node'
op|'.'
name|'update'
op|'('
op|'{'
string|"'index'"
op|':'
name|'rx_node_index'
op|'}'
op|')'
newline|'\n'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|')'
newline|'\n'
comment|'# wrap connection from tx to rx to capture ssync messages...'
nl|'\n'
name|'sender'
op|'.'
name|'connect'
op|','
name|'trace'
op|'='
name|'self'
op|'.'
name|'make_connect_wrapper'
op|'('
name|'sender'
op|')'
newline|'\n'
nl|'\n'
comment|'# run the sync protocol...'
nl|'\n'
name|'success'
op|','
name|'in_sync_objs'
op|'='
name|'sender'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'7'
op|','
name|'len'
op|'('
name|'in_sync_objs'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'success'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify protocol'
nl|'\n'
name|'results'
op|'='
name|'self'
op|'.'
name|'_analyze_trace'
op|'('
name|'trace'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'7'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'tx_missing'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'rx_missing'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'tx_updates'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'results'
op|'['
string|"'rx_updates'"
op|']'
op|')'
newline|'\n'
name|'sync_paths'
op|'='
op|'['
op|']'
newline|'\n'
name|'for'
name|'subreq'
name|'in'
name|'results'
op|'.'
name|'get'
op|'('
string|"'tx_updates'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'if'
name|'subreq'
op|'.'
name|'get'
op|'('
string|"'method'"
op|')'
op|'=='
string|"'PUT'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
nl|'\n'
name|'subreq'
op|'['
string|"'path'"
op|']'
name|'in'
op|'('
string|"'/a/c/o1'"
op|','
string|"'/a/c/o2'"
op|','
string|"'/a/c/o3'"
op|')'
op|')'
newline|'\n'
name|'expected_body'
op|'='
string|"'%s___None'"
op|'%'
name|'subreq'
op|'['
string|"'path'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_body'
op|','
name|'subreq'
op|'['
string|"'body'"
op|']'
op|')'
newline|'\n'
dedent|''
name|'elif'
name|'subreq'
op|'.'
name|'get'
op|'('
string|"'method'"
op|')'
op|'=='
string|"'DELETE'"
op|':'
newline|'\n'
indent|'                '
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'subreq'
op|'['
string|"'path'"
op|']'
name|'in'
op|'('
string|"'/a/c/o5'"
op|','
string|"'/a/c/o7'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'sync_paths'
op|'.'
name|'append'
op|'('
name|'subreq'
op|'.'
name|'get'
op|'('
string|"'path'"
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
nl|'\n'
op|'['
string|"'/a/c/o1'"
op|','
string|"'/a/c/o2'"
op|','
string|"'/a/c/o3'"
op|','
string|"'/a/c/o5'"
op|','
string|"'/a/c/o7'"
op|']'
op|','
nl|'\n'
name|'sorted'
op|'('
name|'sync_paths'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify on disk files...'
nl|'\n'
name|'self'
op|'.'
name|'_verify_ondisk_files'
op|'('
name|'tx_objs'
op|','
name|'policy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_tombstones'
op|'('
name|'tx_tombstones'
op|','
name|'policy'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_nothing_to_sync
dedent|''
name|'def'
name|'test_nothing_to_sync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'job'
op|'='
op|'{'
string|"'device'"
op|':'
name|'self'
op|'.'
name|'device'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'self'
op|'.'
name|'partition'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'POLICIES'
op|'.'
name|'default'
op|'}'
newline|'\n'
name|'node'
op|'='
op|'{'
string|"'replication_ip'"
op|':'
name|'self'
op|'.'
name|'rx_ip'
op|','
nl|'\n'
string|"'replication_port'"
op|':'
name|'self'
op|'.'
name|'rx_port'
op|','
nl|'\n'
string|"'device'"
op|':'
name|'self'
op|'.'
name|'device'
op|','
nl|'\n'
string|"'index'"
op|':'
number|'0'
op|'}'
newline|'\n'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
op|'['
string|"'abc'"
op|']'
op|')'
newline|'\n'
comment|'# wrap connection from tx to rx to capture ssync messages...'
nl|'\n'
name|'sender'
op|'.'
name|'connect'
op|','
name|'trace'
op|'='
name|'self'
op|'.'
name|'make_connect_wrapper'
op|'('
name|'sender'
op|')'
newline|'\n'
nl|'\n'
name|'result'
op|','
name|'in_sync_objs'
op|'='
name|'sender'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'result'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'in_sync_objs'
op|')'
newline|'\n'
name|'results'
op|'='
name|'self'
op|'.'
name|'_analyze_trace'
op|'('
name|'trace'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'results'
op|'['
string|"'tx_missing'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'results'
op|'['
string|"'rx_missing'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'results'
op|'['
string|"'tx_updates'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'results'
op|'['
string|"'rx_updates'"
op|']'
op|')'
newline|'\n'
comment|'# Minimal receiver response as read by sender:'
nl|'\n'
comment|'#               2  <-- initial \\r\\n to start ssync exchange'
nl|'\n'
comment|'# +            23  <-- :MISSING CHECK START\\r\\n'
nl|'\n'
comment|'# +             2  <-- \\r\\n (minimal missing check response)'
nl|'\n'
comment|'# +            21  <-- :MISSING CHECK END\\r\\n'
nl|'\n'
comment|'# +            17  <-- :UPDATES START\\r\\n'
nl|'\n'
comment|'# +            15  <-- :UPDATES END\\r\\n'
nl|'\n'
comment|'#    TOTAL =   80'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'80'
op|','
name|'trace'
op|'.'
name|'get'
op|'('
string|"'readline_bytes'"
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_meta_file_sync
dedent|''
name|'def'
name|'test_meta_file_sync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'default'
newline|'\n'
name|'rx_node_index'
op|'='
number|'0'
newline|'\n'
nl|'\n'
comment|'# create diskfiles...'
nl|'\n'
name|'tx_objs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'rx_objs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'tx_tombstones'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'rx_tombstones'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'tx_df_mgr'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
name|'rx_df_mgr'
op|'='
name|'self'
op|'.'
name|'rx_controller'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
nl|'\n'
name|'expected_subreqs'
op|'='
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
nl|'\n'
comment|'# o1 on tx only with meta file'
nl|'\n'
name|'t1'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o1'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
string|"'o1'"
op|','
name|'policy'
op|','
name|'t1'
op|')'
newline|'\n'
name|'t1_meta'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t1_meta'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'o1'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'sys_o1'"
op|'}'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o1'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'expected_subreqs'
op|'['
string|"'PUT'"
op|']'
op|'.'
name|'append'
op|'('
string|"'o1'"
op|')'
newline|'\n'
name|'expected_subreqs'
op|'['
string|"'POST'"
op|']'
op|'.'
name|'append'
op|'('
string|"'o1'"
op|')'
newline|'\n'
nl|'\n'
comment|'# o2 on tx with meta, on rx without meta'
nl|'\n'
name|'t2'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o2'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
string|"'o2'"
op|','
name|'policy'
op|','
name|'t2'
op|')'
newline|'\n'
name|'t2_meta'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t2_meta'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'o2'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'sys_o2'"
op|'}'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o2'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
string|"'o2'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'rx_df_mgr'
op|','
string|"'o2'"
op|','
name|'policy'
op|','
name|'t2'
op|')'
newline|'\n'
name|'expected_subreqs'
op|'['
string|"'POST'"
op|']'
op|'.'
name|'append'
op|'('
string|"'o2'"
op|')'
newline|'\n'
nl|'\n'
comment|'# o3 is on tx with meta, rx has newer data but no meta'
nl|'\n'
name|'t3a'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o3'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
string|"'o3'"
op|','
name|'policy'
op|','
name|'t3a'
op|')'
newline|'\n'
name|'t3b'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
string|"'o3'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'rx_df_mgr'
op|','
string|"'o3'"
op|','
name|'policy'
op|','
name|'t3b'
op|')'
newline|'\n'
name|'t3_meta'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t3_meta'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'o3'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'sys_o3'"
op|'}'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o3'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'expected_subreqs'
op|'['
string|"'POST'"
op|']'
op|'.'
name|'append'
op|'('
string|"'o3'"
op|')'
newline|'\n'
nl|'\n'
comment|'# o4 is on tx with meta, rx has older data and up to date meta'
nl|'\n'
name|'t4a'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
string|"'o4'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'rx_df_mgr'
op|','
string|"'o4'"
op|','
name|'policy'
op|','
name|'t4a'
op|')'
newline|'\n'
name|'t4b'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o4'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
string|"'o4'"
op|','
name|'policy'
op|','
name|'t4b'
op|')'
newline|'\n'
name|'t4_meta'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t4_meta'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'o4'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'sys_o4'"
op|'}'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o4'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
string|"'o4'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'expected_subreqs'
op|'['
string|"'PUT'"
op|']'
op|'.'
name|'append'
op|'('
string|"'o4'"
op|')'
newline|'\n'
nl|'\n'
comment|'# o5 is on tx with meta, rx is in sync with data and meta'
nl|'\n'
name|'t5'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
string|"'o5'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'rx_df_mgr'
op|','
string|"'o5'"
op|','
name|'policy'
op|','
name|'t5'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o5'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
string|"'o5'"
op|','
name|'policy'
op|','
name|'t5'
op|')'
newline|'\n'
name|'t5_meta'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t5_meta'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'o5'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'sys_o5'"
op|'}'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o5'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
string|"'o5'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
comment|'# o6 is tombstone on tx, rx has older data and meta'
nl|'\n'
name|'t6'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_tombstones'
op|'['
string|"'o6'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'tx_df_mgr'
op|','
string|"'o6'"
op|','
name|'policy'
op|','
name|'t6'
op|')'
newline|'\n'
name|'rx_tombstones'
op|'['
string|"'o6'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'rx_df_mgr'
op|','
string|"'o6'"
op|','
name|'policy'
op|','
name|'t6'
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'o6'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'sys_o6'"
op|'}'
newline|'\n'
name|'rx_tombstones'
op|'['
string|"'o6'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'tx_tombstones'
op|'['
string|"'o6'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'delete'
op|'('
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
op|')'
newline|'\n'
name|'expected_subreqs'
op|'['
string|"'DELETE'"
op|']'
op|'.'
name|'append'
op|'('
string|"'o6'"
op|')'
newline|'\n'
nl|'\n'
comment|'# o7 is tombstone on rx, tx has older data and meta,'
nl|'\n'
comment|'# no subreqs expected...'
nl|'\n'
name|'t7'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o7'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
string|"'o7'"
op|','
name|'policy'
op|','
name|'t7'
op|')'
newline|'\n'
name|'rx_tombstones'
op|'['
string|"'o7'"
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
nl|'\n'
name|'rx_df_mgr'
op|','
string|"'o7'"
op|','
name|'policy'
op|','
name|'t7'
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'o7'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'sys_o7'"
op|'}'
newline|'\n'
name|'tx_objs'
op|'['
string|"'o7'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'rx_tombstones'
op|'['
string|"'o7'"
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'delete'
op|'('
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
op|')'
newline|'\n'
nl|'\n'
name|'suffixes'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'diskfiles'
name|'in'
op|'('
name|'tx_objs'
op|'.'
name|'values'
op|'('
op|')'
op|'+'
name|'tx_tombstones'
op|'.'
name|'values'
op|'('
op|')'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'df'
name|'in'
name|'diskfiles'
op|':'
newline|'\n'
indent|'                '
name|'suffixes'
op|'.'
name|'add'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# create ssync sender instance...'
nl|'\n'
dedent|''
dedent|''
name|'job'
op|'='
op|'{'
string|"'device'"
op|':'
name|'self'
op|'.'
name|'device'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'self'
op|'.'
name|'partition'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'policy'
op|'}'
newline|'\n'
name|'node'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'rx_node'
op|')'
newline|'\n'
name|'node'
op|'.'
name|'update'
op|'('
op|'{'
string|"'index'"
op|':'
name|'rx_node_index'
op|'}'
op|')'
newline|'\n'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|')'
newline|'\n'
comment|'# wrap connection from tx to rx to capture ssync messages...'
nl|'\n'
name|'sender'
op|'.'
name|'connect'
op|','
name|'trace'
op|'='
name|'self'
op|'.'
name|'make_connect_wrapper'
op|'('
name|'sender'
op|')'
newline|'\n'
nl|'\n'
comment|'# run the sync protocol...'
nl|'\n'
name|'success'
op|','
name|'in_sync_objs'
op|'='
name|'sender'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'7'
op|','
name|'len'
op|'('
name|'in_sync_objs'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'success'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify protocol'
nl|'\n'
name|'results'
op|'='
name|'self'
op|'.'
name|'_analyze_trace'
op|'('
name|'trace'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'7'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'tx_missing'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'rx_missing'"
op|']'
op|')'
op|')'
newline|'\n'
name|'for'
name|'subreq'
name|'in'
name|'results'
op|'.'
name|'get'
op|'('
string|"'tx_updates'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'obj'
op|'='
name|'subreq'
op|'['
string|"'path'"
op|']'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'3'
op|']'
newline|'\n'
name|'method'
op|'='
name|'subreq'
op|'['
string|"'method'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'obj'
name|'in'
name|'expected_subreqs'
op|'['
name|'method'
op|']'
op|','
nl|'\n'
string|"'Unexpected %s subreq for object %s, expected %s'"
nl|'\n'
op|'%'
op|'('
name|'method'
op|','
name|'obj'
op|','
name|'expected_subreqs'
op|'['
name|'method'
op|']'
op|')'
op|')'
newline|'\n'
name|'expected_subreqs'
op|'['
name|'method'
op|']'
op|'.'
name|'remove'
op|'('
name|'obj'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|"'PUT'"
op|':'
newline|'\n'
indent|'                '
name|'expected_body'
op|'='
string|"'%s___None'"
op|'%'
name|'subreq'
op|'['
string|"'path'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_body'
op|','
name|'subreq'
op|'['
string|"'body'"
op|']'
op|')'
newline|'\n'
comment|'# verify all expected subreqs consumed'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'_method'
op|','
name|'expected'
name|'in'
name|'expected_subreqs'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'expected'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'results'
op|'['
string|"'rx_updates'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify on disk files...'
nl|'\n'
name|'del'
name|'tx_objs'
op|'['
string|"'o7'"
op|']'
comment|"# o7 not expected to be sync'd"
newline|'\n'
name|'self'
op|'.'
name|'_verify_ondisk_files'
op|'('
name|'tx_objs'
op|','
name|'policy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_verify_tombstones'
op|'('
name|'tx_tombstones'
op|','
name|'policy'
op|')'
newline|'\n'
name|'for'
name|'oname'
op|','
name|'rx_obj'
name|'in'
name|'rx_objs'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'rx_obj'
op|'['
number|'0'
op|']'
op|'.'
name|'open'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'df'
op|'.'
name|'get_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'X-Object-Meta-Test'"
op|']'
op|','
name|'oname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'X-Object-Sysmeta-Test'"
op|']'
op|','
string|"'sys_'"
op|'+'
name|'oname'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_meta_file_not_synced_to_legacy_receiver
dedent|''
dedent|''
name|'def'
name|'test_meta_file_not_synced_to_legacy_receiver'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
comment|'# verify that the sender does sync a data file to a legacy receiver,'
nl|'\n'
comment|'# but does not PUT meta file content to a legacy receiver'
nl|'\n'
indent|'        '
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'default'
newline|'\n'
name|'rx_node_index'
op|'='
number|'0'
newline|'\n'
nl|'\n'
comment|'# create diskfiles...'
nl|'\n'
name|'tx_df_mgr'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
name|'rx_df_mgr'
op|'='
name|'self'
op|'.'
name|'rx_controller'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
nl|'\n'
comment|'# rx has data at t1 but no meta'
nl|'\n'
comment|'# object is on tx with data at t2, meta at t3,'
nl|'\n'
name|'t1'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'rx_df_mgr'
op|','
string|"'o1'"
op|','
name|'policy'
op|','
name|'t1'
op|')'
newline|'\n'
name|'t2'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'tx_obj'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
string|"'o1'"
op|','
name|'policy'
op|','
name|'t2'
op|')'
op|'['
number|'0'
op|']'
newline|'\n'
name|'t3'
op|'='
name|'next'
op|'('
name|'self'
op|'.'
name|'ts_iter'
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t3'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
string|"'o3'"
op|','
nl|'\n'
string|"'X-Object-Sysmeta-Test'"
op|':'
string|"'sys_o3'"
op|'}'
newline|'\n'
name|'tx_obj'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
nl|'\n'
name|'suffixes'
op|'='
op|'['
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'tx_obj'
op|'.'
name|'_datadir'
op|')'
op|')'
op|']'
newline|'\n'
comment|'# create ssync sender instance...'
nl|'\n'
name|'job'
op|'='
op|'{'
string|"'device'"
op|':'
name|'self'
op|'.'
name|'device'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'self'
op|'.'
name|'partition'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'policy'
op|'}'
newline|'\n'
name|'node'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'rx_node'
op|')'
newline|'\n'
name|'node'
op|'.'
name|'update'
op|'('
op|'{'
string|"'index'"
op|':'
name|'rx_node_index'
op|'}'
op|')'
newline|'\n'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|')'
newline|'\n'
comment|'# wrap connection from tx to rx to capture ssync messages...'
nl|'\n'
name|'sender'
op|'.'
name|'connect'
op|','
name|'trace'
op|'='
name|'self'
op|'.'
name|'make_connect_wrapper'
op|'('
name|'sender'
op|')'
newline|'\n'
nl|'\n'
DECL|function|_legacy_check_missing
name|'def'
name|'_legacy_check_missing'
op|'('
name|'self'
op|','
name|'line'
op|')'
op|':'
newline|'\n'
comment|"# reproduces behavior of 'legacy' ssync receiver missing_checks()"
nl|'\n'
indent|'            '
name|'parts'
op|'='
name|'line'
op|'.'
name|'split'
op|'('
op|')'
newline|'\n'
name|'object_hash'
op|'='
name|'urllib'
op|'.'
name|'parse'
op|'.'
name|'unquote'
op|'('
name|'parts'
op|'['
number|'0'
op|']'
op|')'
newline|'\n'
name|'timestamp'
op|'='
name|'urllib'
op|'.'
name|'parse'
op|'.'
name|'unquote'
op|'('
name|'parts'
op|'['
number|'1'
op|']'
op|')'
newline|'\n'
name|'want'
op|'='
name|'False'
newline|'\n'
name|'try'
op|':'
newline|'\n'
indent|'                '
name|'df'
op|'='
name|'self'
op|'.'
name|'diskfile_mgr'
op|'.'
name|'get_diskfile_from_hash'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'device'
op|','
name|'self'
op|'.'
name|'partition'
op|','
name|'object_hash'
op|','
name|'self'
op|'.'
name|'policy'
op|','
nl|'\n'
name|'frag_index'
op|'='
name|'self'
op|'.'
name|'frag_index'
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileNotExist'
op|':'
newline|'\n'
indent|'                '
name|'want'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                '
name|'try'
op|':'
newline|'\n'
indent|'                    '
name|'df'
op|'.'
name|'open'
op|'('
op|')'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileDeleted'
name|'as'
name|'err'
op|':'
newline|'\n'
indent|'                    '
name|'want'
op|'='
name|'err'
op|'.'
name|'timestamp'
op|'<'
name|'timestamp'
newline|'\n'
dedent|''
name|'except'
name|'DiskFileError'
op|':'
newline|'\n'
indent|'                    '
name|'want'
op|'='
name|'True'
newline|'\n'
dedent|''
name|'else'
op|':'
newline|'\n'
indent|'                    '
name|'want'
op|'='
name|'df'
op|'.'
name|'timestamp'
op|'<'
name|'timestamp'
newline|'\n'
dedent|''
dedent|''
name|'if'
name|'want'
op|':'
newline|'\n'
indent|'                '
name|'return'
name|'urllib'
op|'.'
name|'parse'
op|'.'
name|'quote'
op|'('
name|'object_hash'
op|')'
newline|'\n'
dedent|''
name|'return'
name|'None'
newline|'\n'
nl|'\n'
comment|'# run the sync protocol...'
nl|'\n'
dedent|''
name|'func'
op|'='
string|"'swift.obj.ssync_receiver.Receiver._check_missing'"
newline|'\n'
name|'with'
name|'mock'
op|'.'
name|'patch'
op|'('
name|'func'
op|','
name|'_legacy_check_missing'
op|')'
op|':'
newline|'\n'
indent|'            '
name|'success'
op|','
name|'in_sync_objs'
op|'='
name|'sender'
op|'('
op|')'
newline|'\n'
nl|'\n'
dedent|''
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'in_sync_objs'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'success'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify protocol, expecting only a PUT to legacy receiver'
nl|'\n'
name|'results'
op|'='
name|'self'
op|'.'
name|'_analyze_trace'
op|'('
name|'trace'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'tx_missing'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'rx_missing'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'1'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'tx_updates'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
string|"'PUT'"
op|','
name|'results'
op|'['
string|"'tx_updates'"
op|']'
op|'['
number|'0'
op|']'
op|'['
string|"'method'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'results'
op|'['
string|"'rx_updates'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify on disk files...'
nl|'\n'
name|'rx_obj'
op|'='
name|'self'
op|'.'
name|'_open_rx_diskfile'
op|'('
string|"'o1'"
op|','
name|'policy'
op|')'
newline|'\n'
name|'tx_obj'
op|'='
name|'self'
op|'.'
name|'_open_tx_diskfile'
op|'('
string|"'o1'"
op|','
name|'policy'
op|')'
newline|'\n'
comment|'# with legacy behavior rx_obj data and meta timestamps are equal'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'t2'
op|','
name|'rx_obj'
op|'.'
name|'data_timestamp'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'t2'
op|','
name|'rx_obj'
op|'.'
name|'timestamp'
op|')'
newline|'\n'
comment|'# with legacy behavior rx_obj data timestamp should equal tx_obj'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'rx_obj'
op|'.'
name|'data_timestamp'
op|','
name|'tx_obj'
op|'.'
name|'data_timestamp'
op|')'
newline|'\n'
comment|"# tx meta file should not have been sync'd to rx data file"
nl|'\n'
name|'self'
op|'.'
name|'assertNotIn'
op|'('
string|"'X-Object-Meta-Test'"
op|','
name|'rx_obj'
op|'.'
name|'get_metadata'
op|'('
op|')'
op|')'
newline|'\n'
nl|'\n'
DECL|member|test_content_type_sync
dedent|''
name|'def'
name|'test_content_type_sync'
op|'('
name|'self'
op|')'
op|':'
newline|'\n'
indent|'        '
name|'policy'
op|'='
name|'POLICIES'
op|'.'
name|'default'
newline|'\n'
name|'rx_node_index'
op|'='
number|'0'
newline|'\n'
nl|'\n'
comment|'# create diskfiles...'
nl|'\n'
name|'tx_objs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'rx_objs'
op|'='
op|'{'
op|'}'
newline|'\n'
name|'tx_df_mgr'
op|'='
name|'self'
op|'.'
name|'daemon'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
name|'rx_df_mgr'
op|'='
name|'self'
op|'.'
name|'rx_controller'
op|'.'
name|'_diskfile_router'
op|'['
name|'policy'
op|']'
newline|'\n'
nl|'\n'
name|'expected_subreqs'
op|'='
name|'defaultdict'
op|'('
name|'list'
op|')'
newline|'\n'
nl|'\n'
comment|'# o1 on tx only with two meta files'
nl|'\n'
name|'name'
op|'='
string|"'o1'"
newline|'\n'
name|'t1'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'tx_objs'
op|'['
name|'name'
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
name|'name'
op|','
name|'policy'
op|','
name|'t1'
op|')'
newline|'\n'
name|'t1_type'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'metadata_1'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t1_type'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/test'"
op|','
nl|'\n'
string|"'Content-Type-Timestamp'"
op|':'
name|'t1_type'
op|'.'
name|'internal'
op|'}'
newline|'\n'
name|'tx_objs'
op|'['
name|'name'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata_1'
op|')'
newline|'\n'
name|'t1_meta'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'metadata_2'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t1_meta'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
name|'name'
op|'}'
newline|'\n'
name|'tx_objs'
op|'['
name|'name'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata_2'
op|')'
newline|'\n'
name|'expected_subreqs'
op|'['
string|"'PUT'"
op|']'
op|'.'
name|'append'
op|'('
name|'name'
op|')'
newline|'\n'
name|'expected_subreqs'
op|'['
string|"'POST'"
op|']'
op|'.'
name|'append'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
comment|'# o2 on tx with two meta files, rx has .data and newest .meta but is'
nl|'\n'
comment|'# missing latest content-type'
nl|'\n'
name|'name'
op|'='
string|"'o2'"
newline|'\n'
name|'t2'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'tx_objs'
op|'['
name|'name'
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
name|'name'
op|','
name|'policy'
op|','
name|'t2'
op|')'
newline|'\n'
name|'t2_type'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'metadata_1'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t2_type'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/test'"
op|','
nl|'\n'
string|"'Content-Type-Timestamp'"
op|':'
name|'t2_type'
op|'.'
name|'internal'
op|'}'
newline|'\n'
name|'tx_objs'
op|'['
name|'name'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata_1'
op|')'
newline|'\n'
name|'t2_meta'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'metadata_2'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t2_meta'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
name|'name'
op|'}'
newline|'\n'
name|'tx_objs'
op|'['
name|'name'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata_2'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
name|'name'
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'rx_df_mgr'
op|','
name|'name'
op|','
name|'policy'
op|','
name|'t2'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
name|'name'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata_2'
op|')'
newline|'\n'
name|'expected_subreqs'
op|'['
string|"'POST'"
op|']'
op|'.'
name|'append'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
comment|'# o3 on tx with two meta files, rx has .data and one .meta but does'
nl|'\n'
comment|'# have latest content-type so nothing to sync'
nl|'\n'
name|'name'
op|'='
string|"'o3'"
newline|'\n'
name|'t3'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'tx_objs'
op|'['
name|'name'
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
name|'name'
op|','
name|'policy'
op|','
name|'t3'
op|')'
newline|'\n'
name|'t3_type'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'metadata_1'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t3_type'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/test'"
op|','
nl|'\n'
string|"'Content-Type-Timestamp'"
op|':'
name|'t3_type'
op|'.'
name|'internal'
op|'}'
newline|'\n'
name|'tx_objs'
op|'['
name|'name'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata_1'
op|')'
newline|'\n'
name|'t3_meta'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'metadata_2'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t3_meta'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
name|'name'
op|'}'
newline|'\n'
name|'tx_objs'
op|'['
name|'name'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata_2'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
name|'name'
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'rx_df_mgr'
op|','
name|'name'
op|','
name|'policy'
op|','
name|'t3'
op|')'
newline|'\n'
name|'metadata_2b'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t3_meta'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
name|'name'
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/test'"
op|','
nl|'\n'
string|"'Content-Type-Timestamp'"
op|':'
name|'t3_type'
op|'.'
name|'internal'
op|'}'
newline|'\n'
name|'rx_objs'
op|'['
name|'name'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata_2b'
op|')'
newline|'\n'
nl|'\n'
comment|'# o4 on tx with one meta file having latest content-type, rx has'
nl|'\n'
comment|'# .data and two .meta having latest content-type so nothing to sync'
nl|'\n'
comment|'# i.e. o4 is the reverse of o3 scenario'
nl|'\n'
name|'name'
op|'='
string|"'o4'"
newline|'\n'
name|'t4'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'tx_objs'
op|'['
name|'name'
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
name|'name'
op|','
name|'policy'
op|','
name|'t4'
op|')'
newline|'\n'
name|'t4_type'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'t4_meta'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'metadata_2b'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t4_meta'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
name|'name'
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/test'"
op|','
nl|'\n'
string|"'Content-Type-Timestamp'"
op|':'
name|'t4_type'
op|'.'
name|'internal'
op|'}'
newline|'\n'
name|'tx_objs'
op|'['
name|'name'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata_2b'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
name|'name'
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'rx_df_mgr'
op|','
name|'name'
op|','
name|'policy'
op|','
name|'t4'
op|')'
newline|'\n'
name|'metadata_1'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t4_type'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/test'"
op|','
nl|'\n'
string|"'Content-Type-Timestamp'"
op|':'
name|'t4_type'
op|'.'
name|'internal'
op|'}'
newline|'\n'
name|'rx_objs'
op|'['
name|'name'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata_1'
op|')'
newline|'\n'
name|'metadata_2'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t4_meta'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
name|'name'
op|'}'
newline|'\n'
name|'rx_objs'
op|'['
name|'name'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata_2'
op|')'
newline|'\n'
nl|'\n'
comment|'# o5 on tx with one meta file having latest content-type, rx has'
nl|'\n'
comment|'# .data and no .meta'
nl|'\n'
name|'name'
op|'='
string|"'o5'"
newline|'\n'
name|'t5'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'tx_objs'
op|'['
name|'name'
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'tx_df_mgr'
op|','
name|'name'
op|','
name|'policy'
op|','
name|'t5'
op|')'
newline|'\n'
name|'t5_type'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'t5_meta'
op|'='
name|'self'
op|'.'
name|'ts_iter'
op|'.'
name|'next'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
op|'{'
string|"'X-Timestamp'"
op|':'
name|'t5_meta'
op|'.'
name|'internal'
op|','
nl|'\n'
string|"'X-Object-Meta-Test'"
op|':'
name|'name'
op|','
nl|'\n'
string|"'Content-Type'"
op|':'
string|"'text/test'"
op|','
nl|'\n'
string|"'Content-Type-Timestamp'"
op|':'
name|'t5_type'
op|'.'
name|'internal'
op|'}'
newline|'\n'
name|'tx_objs'
op|'['
name|'name'
op|']'
op|'['
number|'0'
op|']'
op|'.'
name|'write_metadata'
op|'('
name|'metadata'
op|')'
newline|'\n'
name|'rx_objs'
op|'['
name|'name'
op|']'
op|'='
name|'self'
op|'.'
name|'_create_ondisk_files'
op|'('
name|'rx_df_mgr'
op|','
name|'name'
op|','
name|'policy'
op|','
name|'t5'
op|')'
newline|'\n'
name|'expected_subreqs'
op|'['
string|"'POST'"
op|']'
op|'.'
name|'append'
op|'('
name|'name'
op|')'
newline|'\n'
nl|'\n'
name|'suffixes'
op|'='
name|'set'
op|'('
op|')'
newline|'\n'
name|'for'
name|'diskfiles'
name|'in'
name|'tx_objs'
op|'.'
name|'values'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'for'
name|'df'
name|'in'
name|'diskfiles'
op|':'
newline|'\n'
indent|'                '
name|'suffixes'
op|'.'
name|'add'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'basename'
op|'('
name|'os'
op|'.'
name|'path'
op|'.'
name|'dirname'
op|'('
name|'df'
op|'.'
name|'_datadir'
op|')'
op|')'
op|')'
newline|'\n'
nl|'\n'
comment|'# create ssync sender instance...'
nl|'\n'
dedent|''
dedent|''
name|'job'
op|'='
op|'{'
string|"'device'"
op|':'
name|'self'
op|'.'
name|'device'
op|','
nl|'\n'
string|"'partition'"
op|':'
name|'self'
op|'.'
name|'partition'
op|','
nl|'\n'
string|"'policy'"
op|':'
name|'policy'
op|'}'
newline|'\n'
name|'node'
op|'='
name|'dict'
op|'('
name|'self'
op|'.'
name|'rx_node'
op|')'
newline|'\n'
name|'node'
op|'.'
name|'update'
op|'('
op|'{'
string|"'index'"
op|':'
name|'rx_node_index'
op|'}'
op|')'
newline|'\n'
name|'sender'
op|'='
name|'ssync_sender'
op|'.'
name|'Sender'
op|'('
name|'self'
op|'.'
name|'daemon'
op|','
name|'node'
op|','
name|'job'
op|','
name|'suffixes'
op|')'
newline|'\n'
comment|'# wrap connection from tx to rx to capture ssync messages...'
nl|'\n'
name|'sender'
op|'.'
name|'connect'
op|','
name|'trace'
op|'='
name|'self'
op|'.'
name|'make_connect_wrapper'
op|'('
name|'sender'
op|')'
newline|'\n'
nl|'\n'
comment|'# run the sync protocol...'
nl|'\n'
name|'success'
op|','
name|'in_sync_objs'
op|'='
name|'sender'
op|'('
op|')'
newline|'\n'
nl|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|','
name|'len'
op|'('
name|'in_sync_objs'
op|')'
op|','
name|'trace'
op|'['
string|"'messages'"
op|']'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'success'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify protocol'
nl|'\n'
name|'results'
op|'='
name|'self'
op|'.'
name|'_analyze_trace'
op|'('
name|'trace'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'5'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'tx_missing'"
op|']'
op|')'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
number|'3'
op|','
name|'len'
op|'('
name|'results'
op|'['
string|"'rx_missing'"
op|']'
op|')'
op|')'
newline|'\n'
name|'for'
name|'subreq'
name|'in'
name|'results'
op|'.'
name|'get'
op|'('
string|"'tx_updates'"
op|')'
op|':'
newline|'\n'
indent|'            '
name|'obj'
op|'='
name|'subreq'
op|'['
string|"'path'"
op|']'
op|'.'
name|'split'
op|'('
string|"'/'"
op|')'
op|'['
number|'3'
op|']'
newline|'\n'
name|'method'
op|'='
name|'subreq'
op|'['
string|"'method'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertTrue'
op|'('
name|'obj'
name|'in'
name|'expected_subreqs'
op|'['
name|'method'
op|']'
op|','
nl|'\n'
string|"'Unexpected %s subreq for object %s, expected %s'"
nl|'\n'
op|'%'
op|'('
name|'method'
op|','
name|'obj'
op|','
name|'expected_subreqs'
op|'['
name|'method'
op|']'
op|')'
op|')'
newline|'\n'
name|'expected_subreqs'
op|'['
name|'method'
op|']'
op|'.'
name|'remove'
op|'('
name|'obj'
op|')'
newline|'\n'
name|'if'
name|'method'
op|'=='
string|"'PUT'"
op|':'
newline|'\n'
indent|'                '
name|'expected_body'
op|'='
string|"'%s___None'"
op|'%'
name|'subreq'
op|'['
string|"'path'"
op|']'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'expected_body'
op|','
name|'subreq'
op|'['
string|"'body'"
op|']'
op|')'
newline|'\n'
comment|'# verify all expected subreqs consumed'
nl|'\n'
dedent|''
dedent|''
name|'for'
name|'_method'
op|','
name|'expected'
name|'in'
name|'expected_subreqs'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'expected'
op|','
nl|'\n'
string|"'Expected subreqs not seen for %s for objects %s'"
nl|'\n'
op|'%'
op|'('
name|'_method'
op|','
name|'expected'
op|')'
op|')'
newline|'\n'
dedent|''
name|'self'
op|'.'
name|'assertFalse'
op|'('
name|'results'
op|'['
string|"'rx_updates'"
op|']'
op|')'
newline|'\n'
nl|'\n'
comment|'# verify on disk files...'
nl|'\n'
name|'self'
op|'.'
name|'_verify_ondisk_files'
op|'('
name|'tx_objs'
op|','
name|'policy'
op|')'
newline|'\n'
name|'for'
name|'oname'
op|','
name|'rx_obj'
name|'in'
name|'rx_objs'
op|'.'
name|'items'
op|'('
op|')'
op|':'
newline|'\n'
indent|'            '
name|'df'
op|'='
name|'rx_obj'
op|'['
number|'0'
op|']'
op|'.'
name|'open'
op|'('
op|')'
newline|'\n'
name|'metadata'
op|'='
name|'df'
op|'.'
name|'get_metadata'
op|'('
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'X-Object-Meta-Test'"
op|']'
op|','
name|'oname'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'metadata'
op|'['
string|"'Content-Type'"
op|']'
op|','
string|"'text/test'"
op|')'
newline|'\n'
comment|'# verify that tx and rx both generate the same suffix hashes...'
nl|'\n'
dedent|''
name|'tx_hashes'
op|'='
name|'tx_df_mgr'
op|'.'
name|'get_hashes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'device'
op|','
name|'self'
op|'.'
name|'partition'
op|','
name|'suffixes'
op|','
name|'policy'
op|')'
newline|'\n'
name|'rx_hashes'
op|'='
name|'rx_df_mgr'
op|'.'
name|'get_hashes'
op|'('
nl|'\n'
name|'self'
op|'.'
name|'device'
op|','
name|'self'
op|'.'
name|'partition'
op|','
name|'suffixes'
op|','
name|'policy'
op|')'
newline|'\n'
name|'self'
op|'.'
name|'assertEqual'
op|'('
name|'tx_hashes'
op|','
name|'rx_hashes'
op|')'
newline|'\n'
nl|'\n'
dedent|''
dedent|''
name|'if'
name|'__name__'
op|'=='
string|"'__main__'"
op|':'
newline|'\n'
indent|'    '
name|'unittest'
op|'.'
name|'main'
op|'('
op|')'
newline|'\n'
dedent|''
endmarker|''
end_unit
